{"mappings":"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","sources":["node_modules/monaco-editor/esm/vs/basic-languages/csharp/csharp.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.31.0(252e010eb73ddc2fa1a37c1dade7bf35d87106cd)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/csharp/csharp.ts\nvar conf = {\n  wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\n  comments: {\n    lineComment: \"//\",\n    blockComment: [\"/*\", \"*/\"]\n  },\n  brackets: [\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n    [\"(\", \")\"]\n  ],\n  autoClosingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: \"'\", close: \"'\", notIn: [\"string\", \"comment\"] },\n    { open: '\"', close: '\"', notIn: [\"string\", \"comment\"] }\n  ],\n  surroundingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: \"<\", close: \">\" },\n    { open: \"'\", close: \"'\" },\n    { open: '\"', close: '\"' }\n  ],\n  folding: {\n    markers: {\n      start: new RegExp(\"^\\\\s*#region\\\\b\"),\n      end: new RegExp(\"^\\\\s*#endregion\\\\b\")\n    }\n  }\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".cs\",\n  brackets: [\n    { open: \"{\", close: \"}\", token: \"delimiter.curly\" },\n    { open: \"[\", close: \"]\", token: \"delimiter.square\" },\n    { open: \"(\", close: \")\", token: \"delimiter.parenthesis\" },\n    { open: \"<\", close: \">\", token: \"delimiter.angle\" }\n  ],\n  keywords: [\n    \"extern\",\n    \"alias\",\n    \"using\",\n    \"bool\",\n    \"decimal\",\n    \"sbyte\",\n    \"byte\",\n    \"short\",\n    \"ushort\",\n    \"int\",\n    \"uint\",\n    \"long\",\n    \"ulong\",\n    \"char\",\n    \"float\",\n    \"double\",\n    \"object\",\n    \"dynamic\",\n    \"string\",\n    \"assembly\",\n    \"is\",\n    \"as\",\n    \"ref\",\n    \"out\",\n    \"this\",\n    \"base\",\n    \"new\",\n    \"typeof\",\n    \"void\",\n    \"checked\",\n    \"unchecked\",\n    \"default\",\n    \"delegate\",\n    \"var\",\n    \"const\",\n    \"if\",\n    \"else\",\n    \"switch\",\n    \"case\",\n    \"while\",\n    \"do\",\n    \"for\",\n    \"foreach\",\n    \"in\",\n    \"break\",\n    \"continue\",\n    \"goto\",\n    \"return\",\n    \"throw\",\n    \"try\",\n    \"catch\",\n    \"finally\",\n    \"lock\",\n    \"yield\",\n    \"from\",\n    \"let\",\n    \"where\",\n    \"join\",\n    \"on\",\n    \"equals\",\n    \"into\",\n    \"orderby\",\n    \"ascending\",\n    \"descending\",\n    \"select\",\n    \"group\",\n    \"by\",\n    \"namespace\",\n    \"partial\",\n    \"class\",\n    \"field\",\n    \"event\",\n    \"method\",\n    \"param\",\n    \"public\",\n    \"protected\",\n    \"internal\",\n    \"private\",\n    \"abstract\",\n    \"sealed\",\n    \"static\",\n    \"struct\",\n    \"readonly\",\n    \"volatile\",\n    \"virtual\",\n    \"override\",\n    \"params\",\n    \"get\",\n    \"set\",\n    \"add\",\n    \"remove\",\n    \"operator\",\n    \"true\",\n    \"false\",\n    \"implicit\",\n    \"explicit\",\n    \"interface\",\n    \"enum\",\n    \"null\",\n    \"async\",\n    \"await\",\n    \"fixed\",\n    \"sizeof\",\n    \"stackalloc\",\n    \"unsafe\",\n    \"nameof\",\n    \"when\"\n  ],\n  namespaceFollows: [\"namespace\", \"using\"],\n  parenFollows: [\"if\", \"for\", \"while\", \"switch\", \"foreach\", \"using\", \"catch\", \"when\"],\n  operators: [\n    \"=\",\n    \"??\",\n    \"||\",\n    \"&&\",\n    \"|\",\n    \"^\",\n    \"&\",\n    \"==\",\n    \"!=\",\n    \"<=\",\n    \">=\",\n    \"<<\",\n    \"+\",\n    \"-\",\n    \"*\",\n    \"/\",\n    \"%\",\n    \"!\",\n    \"~\",\n    \"++\",\n    \"--\",\n    \"+=\",\n    \"-=\",\n    \"*=\",\n    \"/=\",\n    \"%=\",\n    \"&=\",\n    \"|=\",\n    \"^=\",\n    \"<<=\",\n    \">>=\",\n    \">>\",\n    \"=>\"\n  ],\n  symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\n  escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  tokenizer: {\n    root: [\n      [\n        /\\@?[a-zA-Z_]\\w*/,\n        {\n          cases: {\n            \"@namespaceFollows\": {\n              token: \"keyword.$0\",\n              next: \"@namespace\"\n            },\n            \"@keywords\": {\n              token: \"keyword.$0\",\n              next: \"@qualified\"\n            },\n            \"@default\": { token: \"identifier\", next: \"@qualified\" }\n          }\n        }\n      ],\n      { include: \"@whitespace\" },\n      [\n        /}/,\n        {\n          cases: {\n            \"$S2==interpolatedstring\": {\n              token: \"string.quote\",\n              next: \"@pop\"\n            },\n            \"$S2==litinterpstring\": {\n              token: \"string.quote\",\n              next: \"@pop\"\n            },\n            \"@default\": \"@brackets\"\n          }\n        }\n      ],\n      [/[{}()\\[\\]]/, \"@brackets\"],\n      [/[<>](?!@symbols)/, \"@brackets\"],\n      [\n        /@symbols/,\n        {\n          cases: {\n            \"@operators\": \"delimiter\",\n            \"@default\": \"\"\n          }\n        }\n      ],\n      [/[0-9_]*\\.[0-9_]+([eE][\\-+]?\\d+)?[fFdD]?/, \"number.float\"],\n      [/0[xX][0-9a-fA-F_]+/, \"number.hex\"],\n      [/0[bB][01_]+/, \"number.hex\"],\n      [/[0-9_]+/, \"number\"],\n      [/[;,.]/, \"delimiter\"],\n      [/\"([^\"\\\\]|\\\\.)*$/, \"string.invalid\"],\n      [/\"/, { token: \"string.quote\", next: \"@string\" }],\n      [/\\$\\@\"/, { token: \"string.quote\", next: \"@litinterpstring\" }],\n      [/\\@\"/, { token: \"string.quote\", next: \"@litstring\" }],\n      [/\\$\"/, { token: \"string.quote\", next: \"@interpolatedstring\" }],\n      [/'[^\\\\']'/, \"string\"],\n      [/(')(@escapes)(')/, [\"string\", \"string.escape\", \"string\"]],\n      [/'/, \"string.invalid\"]\n    ],\n    qualified: [\n      [\n        /[a-zA-Z_][\\w]*/,\n        {\n          cases: {\n            \"@keywords\": { token: \"keyword.$0\" },\n            \"@default\": \"identifier\"\n          }\n        }\n      ],\n      [/\\./, \"delimiter\"],\n      [\"\", \"\", \"@pop\"]\n    ],\n    namespace: [\n      { include: \"@whitespace\" },\n      [/[A-Z]\\w*/, \"namespace\"],\n      [/[\\.=]/, \"delimiter\"],\n      [\"\", \"\", \"@pop\"]\n    ],\n    comment: [\n      [/[^\\/*]+/, \"comment\"],\n      [\"\\\\*/\", \"comment\", \"@pop\"],\n      [/[\\/*]/, \"comment\"]\n    ],\n    string: [\n      [/[^\\\\\"]+/, \"string\"],\n      [/@escapes/, \"string.escape\"],\n      [/\\\\./, \"string.escape.invalid\"],\n      [/\"/, { token: \"string.quote\", next: \"@pop\" }]\n    ],\n    litstring: [\n      [/[^\"]+/, \"string\"],\n      [/\"\"/, \"string.escape\"],\n      [/\"/, { token: \"string.quote\", next: \"@pop\" }]\n    ],\n    litinterpstring: [\n      [/[^\"{]+/, \"string\"],\n      [/\"\"/, \"string.escape\"],\n      [/{{/, \"string.escape\"],\n      [/}}/, \"string.escape\"],\n      [/{/, { token: \"string.quote\", next: \"root.litinterpstring\" }],\n      [/\"/, { token: \"string.quote\", next: \"@pop\" }]\n    ],\n    interpolatedstring: [\n      [/[^\\\\\"{]+/, \"string\"],\n      [/@escapes/, \"string.escape\"],\n      [/\\\\./, \"string.escape.invalid\"],\n      [/{{/, \"string.escape\"],\n      [/}}/, \"string.escape\"],\n      [/{/, { token: \"string.quote\", next: \"root.interpolatedstring\" }],\n      [/\"/, { token: \"string.quote\", next: \"@pop\" }]\n    ],\n    whitespace: [\n      [/^[ \\t\\v\\f]*#((r)|(load))(?=\\s)/, \"directive.csx\"],\n      [/^[ \\t\\v\\f]*#\\w.*$/, \"namespace.cpp\"],\n      [/[ \\t\\v\\f\\r\\n]+/, \"\"],\n      [/\\/\\*/, \"comment\", \"@comment\"],\n      [/\\/\\/.*$/, \"comment\"]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"],"names":[],"version":3,"file":"csharp.2dc5a67a.js.map"}