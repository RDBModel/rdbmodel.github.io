function $parcel$export(e, n, v, s) {
  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});
}
function $parcel$interopDefault(a) {
  return a && a.__esModule ? a.default : a;
}
var $parcel$global =
typeof globalThis !== 'undefined'
  ? globalThis
  : typeof self !== 'undefined'
  ? self
  : typeof window !== 'undefined'
  ? window
  : typeof global !== 'undefined'
  ? global
  : {};
var $parcel$modules = {};
var $parcel$inits = {};

var parcelRequire = $parcel$global["parcelRequiref17b"];
if (parcelRequire == null) {
  parcelRequire = function(id) {
    if (id in $parcel$modules) {
      return $parcel$modules[id].exports;
    }
    if (id in $parcel$inits) {
      var init = $parcel$inits[id];
      delete $parcel$inits[id];
      var module = {id: id, exports: {}};
      $parcel$modules[id] = module;
      init.call(module.exports, module, module.exports);
      return module.exports;
    }
    var err = new Error("Cannot find module '" + id + "'");
    err.code = 'MODULE_NOT_FOUND';
    throw err;
  };

  parcelRequire.register = function register(id, init) {
    $parcel$inits[id] = init;
  };

  $parcel$global["parcelRequiref17b"] = parcelRequire;
}
parcelRequire.register("aKzDW", function(module, exports) {

$parcel$export(module.exports, "register", () => $7d39d93f9098a310$export$6503ec6e8aabbaf, (v) => $7d39d93f9098a310$export$6503ec6e8aabbaf = v);
$parcel$export(module.exports, "resolve", () => $7d39d93f9098a310$export$f7ad0328861e2f03, (v) => $7d39d93f9098a310$export$f7ad0328861e2f03 = v);
var $7d39d93f9098a310$export$6503ec6e8aabbaf;
var $7d39d93f9098a310$export$f7ad0328861e2f03;
"use strict";
var $7d39d93f9098a310$var$mapping = {};
function $7d39d93f9098a310$var$register(pairs) {
    var keys = Object.keys(pairs);
    for(var i = 0; i < keys.length; i++)$7d39d93f9098a310$var$mapping[keys[i]] = pairs[keys[i]];
}
function $7d39d93f9098a310$var$resolve(id) {
    var resolved = $7d39d93f9098a310$var$mapping[id];
    if (resolved == null) throw new Error('Could not resolve bundle with id ' + id);
    return resolved;
}
$7d39d93f9098a310$export$6503ec6e8aabbaf = $7d39d93f9098a310$var$register;
$7d39d93f9098a310$export$f7ad0328861e2f03 = $7d39d93f9098a310$var$resolve;

});

parcelRequire.register("5exdt", function(module, exports) {

$parcel$export(module.exports, "YAML", () => $3cf8069abb2f221f$export$866dfa75bd13a786);

var $DMDG9 = parcelRequire("DMDG9");

var $lJ8kG = parcelRequire("lJ8kG");

var $42uI7 = parcelRequire("42uI7");

var $1Ikgk = parcelRequire("1Ikgk");

var $lk3XD = parcelRequire("lk3XD");
var $3cf8069abb2f221f$var$defaultOptions = {
    anchorPrefix: 'a',
    customTags: null,
    indent: 2,
    indentSeq: true,
    keepCstNodes: false,
    keepNodeTypes: true,
    keepBlobsInJSON: true,
    mapAsMap: false,
    maxAliasCount: 100,
    prettyErrors: false,
    // TODO Set true in v2
    simpleKeys: false,
    version: '1.2'
};
var $3cf8069abb2f221f$var$scalarOptions = {
    get binary () {
        return $42uI7.b;
    },
    set binary (opt){
        Object.assign($42uI7.b, opt);
    },
    get bool () {
        return $42uI7.a;
    },
    set bool (opt){
        Object.assign($42uI7.a, opt);
    },
    get int () {
        return $42uI7.i;
    },
    set int (opt){
        Object.assign($42uI7.i, opt);
    },
    get null () {
        return $42uI7.n;
    },
    set null (opt){
        Object.assign($42uI7.n, opt);
    },
    get str () {
        return $42uI7.s;
    },
    set str (opt){
        Object.assign($42uI7.s, opt);
    }
};
var $3cf8069abb2f221f$var$documentOptions = {
    '1.0': {
        schema: 'yaml-1.1',
        merge: true,
        tagPrefixes: [
            {
                handle: '!',
                prefix: $DMDG9.d
            },
            {
                handle: '!!',
                prefix: 'tag:private.yaml.org,2002:'
            }
        ]
    },
    1.1: {
        schema: 'yaml-1.1',
        merge: true,
        tagPrefixes: [
            {
                handle: '!',
                prefix: '!'
            },
            {
                handle: '!!',
                prefix: $DMDG9.d
            }
        ]
    },
    1.2: {
        schema: 'core',
        merge: false,
        tagPrefixes: [
            {
                handle: '!',
                prefix: '!'
            },
            {
                handle: '!!',
                prefix: $DMDG9.d
            }
        ]
    }
};
function $3cf8069abb2f221f$var$stringifyTag(doc, tag) {
    if ((doc.version || doc.options.version) === '1.0') {
        var priv = tag.match(/^tag:private\.yaml\.org,2002:([^:/]+)$/);
        if (priv) return '!' + priv[1];
        var vocab = tag.match(/^tag:([a-zA-Z0-9-]+)\.yaml\.org,2002:(.*)/);
        return vocab ? "!".concat(vocab[1], "/").concat(vocab[2]) : "!".concat(tag.replace(/^tag:/, ''));
    }
    var p1 = doc.tagPrefixes.find(function(p) {
        return tag.indexOf(p.prefix) === 0;
    });
    if (!p1) {
        var dtp = doc.getDefaults().tagPrefixes;
        p1 = dtp && dtp.find(function(p) {
            return tag.indexOf(p.prefix) === 0;
        });
    }
    if (!p1) return tag[0] === '!' ? tag : "!<".concat(tag, ">");
    var suffix = tag.substr(p1.prefix.length).replace(/[!,[\]{}]/g, function(ch) {
        return ({
            '!': '%21',
            ',': '%2C',
            '[': '%5B',
            ']': '%5D',
            '{': '%7B',
            '}': '%7D'
        })[ch];
    });
    return p1.handle + suffix;
}
function $3cf8069abb2f221f$var$getTagObject(tags, item) {
    if (item instanceof $42uI7.A) return $42uI7.A;
    if (item.tag) {
        var match = tags.filter(function(t) {
            return t.tag === item.tag;
        });
        if (match.length > 0) return match.find(function(t) {
            return t.format === item.format;
        }) || match[0];
    }
    var tagObj, obj;
    if (item instanceof $42uI7.S) {
        obj = item.value; // TODO: deprecate/remove class check
        var _match = tags.filter(function(t) {
            return t.identify && t.identify(obj) || t.class && obj instanceof t.class;
        });
        tagObj = _match.find(function(t) {
            return t.format === item.format;
        }) || _match.find(function(t) {
            return !t.format;
        });
    } else {
        obj = item;
        tagObj = tags.find(function(t) {
            return t.nodeClass && obj instanceof t.nodeClass;
        });
    }
    if (!tagObj) {
        var name = obj && obj.constructor ? obj.constructor.name : $DMDG9.a(obj);
        throw new Error("Tag not resolved for ".concat(name, " value"));
    }
    return tagObj;
} // needs to be called before value stringifier to allow for circular anchor refs
function $3cf8069abb2f221f$var$stringifyProps(node, tagObj, _ref) {
    var anchors = _ref.anchors, doc = _ref.doc;
    var props = [];
    var anchor = doc.anchors.getName(node);
    if (anchor) {
        anchors[anchor] = node;
        props.push("&".concat(anchor));
    }
    if (node.tag) props.push($3cf8069abb2f221f$var$stringifyTag(doc, node.tag));
    else if (!tagObj.default) props.push($3cf8069abb2f221f$var$stringifyTag(doc, tagObj.tag));
    return props.join(' ');
}
function $3cf8069abb2f221f$var$stringify$1(item, ctx, onComment, onChompKeep) {
    var _ctx$doc = ctx.doc, anchors = _ctx$doc.anchors, schema = _ctx$doc.schema;
    var tagObj;
    if (!(item instanceof $42uI7.N)) {
        var createCtx = {
            aliasNodes: [],
            onTagObj: function onTagObj(o) {
                return tagObj = o;
            },
            prevObjects: new Map()
        };
        item = schema.createNode(item, true, null, createCtx);
        var _iterator = $DMDG9._(createCtx.aliasNodes), _step;
        try {
            for(_iterator.s(); !(_step = _iterator.n()).done;){
                var alias = _step.value;
                alias.source = alias.source.node;
                var name = anchors.getName(alias.source);
                if (!name) {
                    name = anchors.newName();
                    anchors.map[name] = alias.source;
                }
            }
        } catch (err) {
            _iterator.e(err);
        } finally{
            _iterator.f();
        }
    }
    if (item instanceof $42uI7.P) return item.toString(ctx, onComment, onChompKeep);
    if (!tagObj) tagObj = $3cf8069abb2f221f$var$getTagObject(schema.tags, item);
    var props = $3cf8069abb2f221f$var$stringifyProps(item, tagObj, ctx);
    if (props.length > 0) ctx.indentAtStart = (ctx.indentAtStart || 0) + props.length + 1;
    var str = typeof tagObj.stringify === 'function' ? tagObj.stringify(item, ctx, onComment, onChompKeep) : item instanceof $42uI7.S ? $42uI7.c(item, ctx, onComment, onChompKeep) : item.toString(ctx, onComment, onChompKeep);
    if (!props) return str;
    return item instanceof $42uI7.S || str[0] === '{' || str[0] === '[' ? "".concat(props, " ").concat(str) : "".concat(props, "\n").concat(ctx.indent).concat(str);
}
var $3cf8069abb2f221f$var$Anchors = /*#__PURE__*/ function() {
    function Anchors(prefix) {
        $DMDG9.c(this, Anchors);
        $DMDG9.e(this, "map", Object.create(null));
        this.prefix = prefix;
    }
    $DMDG9.b(Anchors, [
        {
            key: "createAlias",
            value: function createAlias(node, name) {
                this.setAnchor(node, name);
                return new $42uI7.A(node);
            }
        },
        {
            key: "createMergePair",
            value: function createMergePair() {
                var _this = this;
                var merge = new $42uI7.M();
                for(var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++)sources[_key] = arguments[_key];
                merge.value.items = sources.map(function(s) {
                    if (s instanceof $42uI7.A) {
                        if (s.source instanceof $42uI7.d) return s;
                    } else if (s instanceof $42uI7.d) return _this.createAlias(s);
                    throw new Error('Merge sources must be Map nodes or their Aliases');
                });
                return merge;
            }
        },
        {
            key: "getName",
            value: function getName(node) {
                var map = this.map;
                return Object.keys(map).find(function(a) {
                    return map[a] === node;
                });
            }
        },
        {
            key: "getNames",
            value: function getNames() {
                return Object.keys(this.map);
            }
        },
        {
            key: "getNode",
            value: function getNode(name) {
                return this.map[name];
            }
        },
        {
            key: "newName",
            value: function newName(prefix) {
                if (!prefix) prefix = this.prefix;
                var names = Object.keys(this.map);
                for(var i = 1;; ++i){
                    var name = "".concat(prefix).concat(i);
                    if (!names.includes(name)) return name;
                }
            } // During parsing, map & aliases contain CST nodes
        },
        {
            key: "resolveNodes",
            value: function resolveNodes() {
                var map = this.map, _cstAliases = this._cstAliases;
                Object.keys(map).forEach(function(a) {
                    map[a] = map[a].resolved;
                });
                _cstAliases.forEach(function(a) {
                    a.source = a.source.resolved;
                });
                delete this._cstAliases;
            }
        },
        {
            key: "setAnchor",
            value: function setAnchor(node, name) {
                if (node != null && !Anchors.validAnchorNode(node)) throw new Error('Anchors may only be set for Scalar, Seq and Map nodes');
                if (name && /[\x00-\x19\s,[\]{}]/.test(name)) throw new Error('Anchor names must not contain whitespace or control characters');
                var map = this.map;
                var prev = node && Object.keys(map).find(function(a) {
                    return map[a] === node;
                });
                if (prev) {
                    if (!name) return prev;
                    else if (prev !== name) {
                        delete map[prev];
                        map[name] = node;
                    }
                } else {
                    if (!name) {
                        if (!node) return null;
                        name = this.newName();
                    }
                    map[name] = node;
                }
                return name;
            }
        }
    ], [
        {
            key: "validAnchorNode",
            value: function validAnchorNode(node) {
                return node instanceof $42uI7.S || node instanceof $42uI7.Y || node instanceof $42uI7.d;
            }
        }
    ]);
    return Anchors;
}();
var $3cf8069abb2f221f$var$visit = function visit(node, tags) {
    if (node && $DMDG9.a(node) === 'object') {
        var tag = node.tag;
        if (node instanceof $42uI7.C) {
            if (tag) tags[tag] = true;
            node.items.forEach(function(n) {
                return visit(n, tags);
            });
        } else if (node instanceof $42uI7.P) {
            visit(node.key, tags);
            visit(node.value, tags);
        } else if (node instanceof $42uI7.S) {
            if (tag) tags[tag] = true;
        }
    }
    return tags;
};
var $3cf8069abb2f221f$var$listTagNames = function listTagNames(node) {
    return Object.keys($3cf8069abb2f221f$var$visit(node, {}));
};
function $3cf8069abb2f221f$var$parseContents(doc, contents) {
    var comments = {
        before: [],
        after: []
    };
    var body = undefined;
    var spaceBefore = false;
    var _iterator = $DMDG9._(contents), _step;
    try {
        for(_iterator.s(); !(_step = _iterator.n()).done;){
            var node = _step.value;
            if (node.valueRange) {
                if (body !== undefined) {
                    var msg = 'Document contains trailing content not separated by a ... or --- line';
                    doc.errors.push(new $DMDG9.Y(node, msg));
                    break;
                }
                var res = $42uI7.r(doc, node);
                if (spaceBefore) {
                    res.spaceBefore = true;
                    spaceBefore = false;
                }
                body = res;
            } else if (node.comment !== null) {
                var cc = body === undefined ? comments.before : comments.after;
                cc.push(node.comment);
            } else if (node.type === $DMDG9.T.BLANK_LINE) {
                spaceBefore = true;
                if (body === undefined && comments.before.length > 0 && !doc.commentBefore) {
                    // space-separated comments at start are parsed as document comments
                    doc.commentBefore = comments.before.join('\n');
                    comments.before = [];
                }
            }
        }
    } catch (err) {
        _iterator.e(err);
    } finally{
        _iterator.f();
    }
    doc.contents = body || null;
    if (!body) doc.comment = comments.before.concat(comments.after).join('\n') || null;
    else {
        var cb = comments.before.join('\n');
        if (cb) {
            var cbNode = body instanceof $42uI7.C && body.items[0] ? body.items[0] : body;
            cbNode.commentBefore = cbNode.commentBefore ? "".concat(cb, "\n").concat(cbNode.commentBefore) : cb;
        }
        doc.comment = comments.after.join('\n') || null;
    }
}
function $3cf8069abb2f221f$var$resolveTagDirective(_ref, directive) {
    var tagPrefixes = _ref.tagPrefixes;
    var _directive$parameters = $DMDG9.h(directive.parameters, 2), handle = _directive$parameters[0], prefix = _directive$parameters[1];
    if (!handle || !prefix) {
        var msg = 'Insufficient parameters given for %TAG directive';
        throw new $DMDG9.g(directive, msg);
    }
    if (tagPrefixes.some(function(p) {
        return p.handle === handle;
    })) {
        var _msg = 'The %TAG directive must only be given at most once per handle in the same document.';
        throw new $DMDG9.g(directive, _msg);
    }
    return {
        handle: handle,
        prefix: prefix
    };
}
function $3cf8069abb2f221f$var$resolveYamlDirective(doc, directive) {
    var _directive$parameters2 = $DMDG9.h(directive.parameters, 1), version = _directive$parameters2[0];
    if (directive.name === 'YAML:1.0') version = '1.0';
    if (!version) {
        var msg = 'Insufficient parameters given for %YAML directive';
        throw new $DMDG9.g(directive, msg);
    }
    if (!$3cf8069abb2f221f$var$documentOptions[version]) {
        var v0 = doc.version || doc.options.version;
        var _msg2 = "Document will be parsed as YAML ".concat(v0, " rather than YAML ").concat(version);
        doc.warnings.push(new $DMDG9.f(directive, _msg2));
    }
    return version;
}
function $3cf8069abb2f221f$var$parseDirectives(doc, directives, prevDoc) {
    var directiveComments = [];
    var hasDirectives = false;
    var _iterator = $DMDG9._(directives), _step;
    try {
        for(_iterator.s(); !(_step = _iterator.n()).done;){
            var directive = _step.value;
            var comment = directive.comment, name = directive.name;
            switch(name){
                case 'TAG':
                    try {
                        doc.tagPrefixes.push($3cf8069abb2f221f$var$resolveTagDirective(doc, directive));
                    } catch (error) {
                        doc.errors.push(error);
                    }
                    hasDirectives = true;
                    break;
                case 'YAML':
                case 'YAML:1.0':
                    if (doc.version) {
                        var msg = 'The %YAML directive must only be given at most once per document.';
                        doc.errors.push(new $DMDG9.g(directive, msg));
                    }
                    try {
                        doc.version = $3cf8069abb2f221f$var$resolveYamlDirective(doc, directive);
                    } catch (error1) {
                        doc.errors.push(error1);
                    }
                    hasDirectives = true;
                    break;
                default:
                    if (name) {
                        var _msg3 = "YAML only supports %TAG and %YAML directives, and not %".concat(name);
                        doc.warnings.push(new $DMDG9.f(directive, _msg3));
                    }
            }
            if (comment) directiveComments.push(comment);
        }
    } catch (err) {
        _iterator.e(err);
    } finally{
        _iterator.f();
    }
    if (prevDoc && !hasDirectives && '1.1' === (doc.version || prevDoc.version || doc.options.version)) {
        var copyTagPrefix = function copyTagPrefix(_ref2) {
            var handle = _ref2.handle, prefix = _ref2.prefix;
            return {
                handle: handle,
                prefix: prefix
            };
        };
        doc.tagPrefixes = prevDoc.tagPrefixes.map(copyTagPrefix);
        doc.version = prevDoc.version;
    }
    doc.commentBefore = directiveComments.join('\n') || null;
}
function $3cf8069abb2f221f$var$assertCollection(contents) {
    if (contents instanceof $42uI7.C) return true;
    throw new Error('Expected a YAML collection as document contents');
}
var $3cf8069abb2f221f$var$Document$1 = /*#__PURE__*/ function() {
    function Document(options) {
        $DMDG9.c(this, Document);
        this.anchors = new $3cf8069abb2f221f$var$Anchors(options.anchorPrefix);
        this.commentBefore = null;
        this.comment = null;
        this.contents = null;
        this.directivesEndMarker = null;
        this.errors = [];
        this.options = options;
        this.schema = null;
        this.tagPrefixes = [];
        this.version = null;
        this.warnings = [];
    }
    $DMDG9.b(Document, [
        {
            key: "add",
            value: function add(value) {
                $3cf8069abb2f221f$var$assertCollection(this.contents);
                return this.contents.add(value);
            }
        },
        {
            key: "addIn",
            value: function addIn(path, value) {
                $3cf8069abb2f221f$var$assertCollection(this.contents);
                this.contents.addIn(path, value);
            }
        },
        {
            key: "delete",
            value: function _delete(key) {
                $3cf8069abb2f221f$var$assertCollection(this.contents);
                return this.contents.delete(key);
            }
        },
        {
            key: "deleteIn",
            value: function deleteIn(path) {
                if ($42uI7.e(path)) {
                    if (this.contents == null) return false;
                    this.contents = null;
                    return true;
                }
                $3cf8069abb2f221f$var$assertCollection(this.contents);
                return this.contents.deleteIn(path);
            }
        },
        {
            key: "getDefaults",
            value: function getDefaults() {
                return Document.defaults[this.version] || Document.defaults[this.options.version] || {};
            }
        },
        {
            key: "get",
            value: function get(key, keepScalar) {
                return this.contents instanceof $42uI7.C ? this.contents.get(key, keepScalar) : undefined;
            }
        },
        {
            key: "getIn",
            value: function getIn(path, keepScalar) {
                if ($42uI7.e(path)) return !keepScalar && this.contents instanceof $42uI7.S ? this.contents.value : this.contents;
                return this.contents instanceof $42uI7.C ? this.contents.getIn(path, keepScalar) : undefined;
            }
        },
        {
            key: "has",
            value: function has(key) {
                return this.contents instanceof $42uI7.C ? this.contents.has(key) : false;
            }
        },
        {
            key: "hasIn",
            value: function hasIn(path) {
                if ($42uI7.e(path)) return this.contents !== undefined;
                return this.contents instanceof $42uI7.C ? this.contents.hasIn(path) : false;
            }
        },
        {
            key: "set",
            value: function set(key, value) {
                $3cf8069abb2f221f$var$assertCollection(this.contents);
                this.contents.set(key, value);
            }
        },
        {
            key: "setIn",
            value: function setIn(path, value) {
                if ($42uI7.e(path)) this.contents = value;
                else {
                    $3cf8069abb2f221f$var$assertCollection(this.contents);
                    this.contents.setIn(path, value);
                }
            }
        },
        {
            key: "setSchema",
            value: function setSchema(id, customTags) {
                if (!id && !customTags && this.schema) return;
                if (typeof id === 'number') id = id.toFixed(1);
                if (id === '1.0' || id === '1.1' || id === '1.2') {
                    if (this.version) this.version = id;
                    else this.options.version = id;
                    delete this.options.schema;
                } else if (id && typeof id === 'string') this.options.schema = id;
                if (Array.isArray(customTags)) this.options.customTags = customTags;
                var opt = Object.assign({}, this.getDefaults(), this.options);
                this.schema = new $1Ikgk.S(opt);
            }
        },
        {
            key: "parse",
            value: function parse(node, prevDoc) {
                if (this.options.keepCstNodes) this.cstNode = node;
                if (this.options.keepNodeTypes) this.type = 'DOCUMENT';
                var _node$directives = node.directives, directives = _node$directives === void 0 ? [] : _node$directives, _node$contents = node.contents, contents = _node$contents === void 0 ? [] : _node$contents, directivesEndMarker = node.directivesEndMarker, error = node.error, valueRange = node.valueRange;
                if (error) {
                    if (!error.source) error.source = this;
                    this.errors.push(error);
                }
                $3cf8069abb2f221f$var$parseDirectives(this, directives, prevDoc);
                if (directivesEndMarker) this.directivesEndMarker = true;
                this.range = valueRange ? [
                    valueRange.start,
                    valueRange.end
                ] : null;
                this.setSchema();
                this.anchors._cstAliases = [];
                $3cf8069abb2f221f$var$parseContents(this, contents);
                this.anchors.resolveNodes();
                if (this.options.prettyErrors) {
                    var _iterator = $DMDG9._(this.errors), _step;
                    try {
                        for(_iterator.s(); !(_step = _iterator.n()).done;){
                            var _error = _step.value;
                            if (_error instanceof $DMDG9.i) _error.makePretty();
                        }
                    } catch (err) {
                        _iterator.e(err);
                    } finally{
                        _iterator.f();
                    }
                    var _iterator2 = $DMDG9._(this.warnings), _step2;
                    try {
                        for(_iterator2.s(); !(_step2 = _iterator2.n()).done;){
                            var warn = _step2.value;
                            if (warn instanceof $DMDG9.i) warn.makePretty();
                        }
                    } catch (err1) {
                        _iterator2.e(err1);
                    } finally{
                        _iterator2.f();
                    }
                }
                return this;
            }
        },
        {
            key: "listNonDefaultTags",
            value: function listNonDefaultTags() {
                return $3cf8069abb2f221f$var$listTagNames(this.contents).filter(function(t) {
                    return t.indexOf($1Ikgk.S.defaultPrefix) !== 0;
                });
            }
        },
        {
            key: "setTagPrefix",
            value: function setTagPrefix(handle, prefix) {
                if (handle[0] !== '!' || handle[handle.length - 1] !== '!') throw new Error('Handle must start and end with !');
                if (prefix) {
                    var prev = this.tagPrefixes.find(function(p) {
                        return p.handle === handle;
                    });
                    if (prev) prev.prefix = prefix;
                    else this.tagPrefixes.push({
                        handle: handle,
                        prefix: prefix
                    });
                } else this.tagPrefixes = this.tagPrefixes.filter(function(p) {
                    return p.handle !== handle;
                });
            }
        },
        {
            key: "toJSON",
            value: function toJSON$1(arg, onAnchor) {
                var _this = this;
                var _this$options = this.options, keepBlobsInJSON = _this$options.keepBlobsInJSON, mapAsMap = _this$options.mapAsMap, maxAliasCount = _this$options.maxAliasCount;
                var keep = keepBlobsInJSON && (typeof arg !== 'string' || !(this.contents instanceof $42uI7.S));
                var ctx = {
                    doc: this,
                    indentStep: '  ',
                    keep: keep,
                    mapAsMap: keep && !!mapAsMap,
                    maxAliasCount: maxAliasCount,
                    stringify: $3cf8069abb2f221f$var$stringify$1 // Requiring directly in Pair would create circular dependencies
                };
                var anchorNames = Object.keys(this.anchors.map);
                if (anchorNames.length > 0) ctx.anchors = new Map(anchorNames.map(function(name) {
                    return [
                        _this.anchors.map[name],
                        {
                            alias: [],
                            aliasCount: 0,
                            count: 1
                        }
                    ];
                }));
                var res = $42uI7.t(this.contents, arg, ctx);
                if (typeof onAnchor === 'function' && ctx.anchors) {
                    var _iterator3 = $DMDG9._(ctx.anchors.values()), _step3;
                    try {
                        for(_iterator3.s(); !(_step3 = _iterator3.n()).done;){
                            var _step3$value = _step3.value, count = _step3$value.count, _res = _step3$value.res;
                            onAnchor(_res, count);
                        }
                    } catch (err) {
                        _iterator3.e(err);
                    } finally{
                        _iterator3.f();
                    }
                }
                return res;
            }
        },
        {
            key: "toString",
            value: function toString() {
                if (this.errors.length > 0) throw new Error('Document with errors cannot be stringified');
                var indentSize = this.options.indent;
                if (!Number.isInteger(indentSize) || indentSize <= 0) {
                    var s = JSON.stringify(indentSize);
                    throw new Error("\"indent\" option must be a positive integer, not ".concat(s));
                }
                this.setSchema();
                var lines = [];
                var hasDirectives = false;
                if (this.version) {
                    var vd = '%YAML 1.2';
                    if (this.schema.name === 'yaml-1.1') {
                        if (this.version === '1.0') vd = '%YAML:1.0';
                        else if (this.version === '1.1') vd = '%YAML 1.1';
                    }
                    lines.push(vd);
                    hasDirectives = true;
                }
                var tagNames = this.listNonDefaultTags();
                this.tagPrefixes.forEach(function(_ref) {
                    var handle = _ref.handle, prefix = _ref.prefix;
                    if (tagNames.some(function(t) {
                        return t.indexOf(prefix) === 0;
                    })) {
                        lines.push("%TAG ".concat(handle, " ").concat(prefix));
                        hasDirectives = true;
                    }
                });
                if (hasDirectives || this.directivesEndMarker) lines.push('---');
                if (this.commentBefore) {
                    if (hasDirectives || !this.directivesEndMarker) lines.unshift('');
                    lines.unshift(this.commentBefore.replace(/^/gm, '#'));
                }
                var ctx = {
                    anchors: Object.create(null),
                    doc: this,
                    indent: '',
                    indentStep: ' '.repeat(indentSize),
                    stringify: $3cf8069abb2f221f$var$stringify$1 // Requiring directly in nodes would create circular dependencies
                };
                var chompKeep = false;
                var contentComment = null;
                if (this.contents) {
                    if (this.contents instanceof $42uI7.N) {
                        if (this.contents.spaceBefore && (hasDirectives || this.directivesEndMarker)) lines.push('');
                        if (this.contents.commentBefore) lines.push(this.contents.commentBefore.replace(/^/gm, '#')); // top-level block scalars need to be indented if followed by a comment
                        ctx.forceBlockIndent = !!this.comment;
                        contentComment = this.contents.comment;
                    }
                    var onChompKeep = contentComment ? null : function() {
                        return chompKeep = true;
                    };
                    var body = $3cf8069abb2f221f$var$stringify$1(this.contents, ctx, function() {
                        return contentComment = null;
                    }, onChompKeep);
                    lines.push($42uI7.f(body, '', contentComment));
                } else if (this.contents !== undefined) lines.push($3cf8069abb2f221f$var$stringify$1(this.contents, ctx));
                if (this.comment) {
                    if ((!chompKeep || contentComment) && lines[lines.length - 1] !== '') lines.push('');
                    lines.push(this.comment.replace(/^/gm, '#'));
                }
                return lines.join('\n') + '\n';
            }
        }
    ]);
    return Document;
}();
$DMDG9.e($3cf8069abb2f221f$var$Document$1, "defaults", $3cf8069abb2f221f$var$documentOptions);
function $3cf8069abb2f221f$var$createNode(value) {
    var wrapScalars = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
    var tag = arguments.length > 2 ? arguments[2] : undefined;
    if (tag === undefined && typeof wrapScalars === 'string') {
        tag = wrapScalars;
        wrapScalars = true;
    }
    var options = Object.assign({}, $3cf8069abb2f221f$var$Document$1.defaults[$3cf8069abb2f221f$var$defaultOptions.version], $3cf8069abb2f221f$var$defaultOptions);
    var schema = new $1Ikgk.S(options);
    return schema.createNode(value, wrapScalars, tag);
}
var $3cf8069abb2f221f$var$Document = /*#__PURE__*/ function(_YAMLDocument) {
    $DMDG9.j(Document, _YAMLDocument);
    var _super = $DMDG9.k(Document);
    function Document(options) {
        $DMDG9.c(this, Document);
        return _super.call(this, Object.assign({}, $3cf8069abb2f221f$var$defaultOptions, options));
    }
    return Document;
}($3cf8069abb2f221f$var$Document$1);
function $3cf8069abb2f221f$var$parseAllDocuments(src, options) {
    var stream = [];
    var prev;
    var _iterator = $DMDG9._($lJ8kG.parse(src)), _step;
    try {
        for(_iterator.s(); !(_step = _iterator.n()).done;){
            var cstDoc = _step.value;
            var doc = new $3cf8069abb2f221f$var$Document(options);
            doc.parse(cstDoc, prev);
            stream.push(doc);
            prev = doc;
        }
    } catch (err) {
        _iterator.e(err);
    } finally{
        _iterator.f();
    }
    return stream;
}
function $3cf8069abb2f221f$var$parseDocument(src, options) {
    var cst = $lJ8kG.parse(src);
    var doc = new $3cf8069abb2f221f$var$Document(options).parse(cst[0]);
    if (cst.length > 1) {
        var errMsg = 'Source contains multiple documents; please use YAML.parseAllDocuments()';
        doc.errors.unshift(new $DMDG9.g(cst[1], errMsg));
    }
    return doc;
}
function $3cf8069abb2f221f$var$parse(src, options) {
    var doc = $3cf8069abb2f221f$var$parseDocument(src, options);
    doc.warnings.forEach(function(warning) {
        return $lk3XD.w(warning);
    });
    if (doc.errors.length > 0) throw doc.errors[0];
    return doc.toJSON();
}
function $3cf8069abb2f221f$var$stringify(value, options) {
    var doc = new $3cf8069abb2f221f$var$Document(options);
    doc.contents = value;
    return String(doc);
}
var $3cf8069abb2f221f$export$866dfa75bd13a786 = {
    createNode: $3cf8069abb2f221f$var$createNode,
    defaultOptions: $3cf8069abb2f221f$var$defaultOptions,
    Document: $3cf8069abb2f221f$var$Document,
    parse: $3cf8069abb2f221f$var$parse,
    parseAllDocuments: $3cf8069abb2f221f$var$parseAllDocuments,
    parseCST: $lJ8kG.parse,
    parseDocument: $3cf8069abb2f221f$var$parseDocument,
    scalarOptions: $3cf8069abb2f221f$var$scalarOptions,
    stringify: $3cf8069abb2f221f$var$stringify
};

});
parcelRequire.register("DMDG9", function(module, exports) {

$parcel$export(module.exports, "a", () => $07795f526bdf51ae$export$407448d2b89b1813);
$parcel$export(module.exports, "c", () => $07795f526bdf51ae$export$db3b6bfb95261072);
$parcel$export(module.exports, "b", () => $07795f526bdf51ae$export$8b22cf2602fb60ce);
$parcel$export(module.exports, "e", () => $07795f526bdf51ae$export$f1e1789686576879);
$parcel$export(module.exports, "j", () => $07795f526bdf51ae$export$35e795649ee09318);
$parcel$export(module.exports, "m", () => $07795f526bdf51ae$export$953cecd6e717a553);
$parcel$export(module.exports, "p", () => $07795f526bdf51ae$export$ffb5f4729a158638);
$parcel$export(module.exports, "r", () => $07795f526bdf51ae$export$43caf9889c228507);
$parcel$export(module.exports, "k", () => $07795f526bdf51ae$export$342063e11d6c3cad);
$parcel$export(module.exports, "l", () => $07795f526bdf51ae$export$882b5998b3b9117c);
$parcel$export(module.exports, "h", () => $07795f526bdf51ae$export$dda1d9f60106f0e9);
$parcel$export(module.exports, "q", () => $07795f526bdf51ae$export$9e5f44173e64f162);
$parcel$export(module.exports, "_", () => $07795f526bdf51ae$export$71511d61b312f219);
$parcel$export(module.exports, "C", () => $07795f526bdf51ae$export$e7094788287c5e9b);
$parcel$export(module.exports, "T", () => $07795f526bdf51ae$export$971d5caa766a69d7);
$parcel$export(module.exports, "d", () => $07795f526bdf51ae$export$4368d992c4eafac0);
$parcel$export(module.exports, "n", () => $07795f526bdf51ae$export$7ccc53e8f1e7dfc5);
$parcel$export(module.exports, "R", () => $07795f526bdf51ae$export$db202ddc8be9136);
$parcel$export(module.exports, "N", () => $07795f526bdf51ae$export$a07804094c3ecf2d);
$parcel$export(module.exports, "i", () => $07795f526bdf51ae$export$23f2a1d2818174ef);
$parcel$export(module.exports, "o", () => $07795f526bdf51ae$export$ae1af26003f05816);
$parcel$export(module.exports, "g", () => $07795f526bdf51ae$export$39b482c5e57630a8);
$parcel$export(module.exports, "Y", () => $07795f526bdf51ae$export$8743009a87fcb00f);
$parcel$export(module.exports, "f", () => $07795f526bdf51ae$export$2d1720544b23b823);
$parcel$export(module.exports, "P", () => $07795f526bdf51ae$export$56c0d5a1e737357d);
function $07795f526bdf51ae$export$407448d2b89b1813(obj1) {
    if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") $07795f526bdf51ae$export$407448d2b89b1813 = function(obj) {
        return typeof obj;
    };
    else $07795f526bdf51ae$export$407448d2b89b1813 = function(obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
    return $07795f526bdf51ae$export$407448d2b89b1813(obj1);
}
function $07795f526bdf51ae$export$db3b6bfb95261072(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}
function $07795f526bdf51ae$var$_defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
    }
}
function $07795f526bdf51ae$export$8b22cf2602fb60ce(Constructor, protoProps, staticProps) {
    if (protoProps) $07795f526bdf51ae$var$_defineProperties(Constructor.prototype, protoProps);
    if (staticProps) $07795f526bdf51ae$var$_defineProperties(Constructor, staticProps);
    return Constructor;
}
function $07795f526bdf51ae$export$f1e1789686576879(obj, key, value) {
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
function $07795f526bdf51ae$export$35e795649ee09318(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) throw new TypeError("Super expression must either be null or a function");
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    if (superClass) $07795f526bdf51ae$var$_setPrototypeOf(subClass, superClass);
}
function $07795f526bdf51ae$export$953cecd6e717a553(o1) {
    $07795f526bdf51ae$export$953cecd6e717a553 = Object.setPrototypeOf ? Object.getPrototypeOf : function $07795f526bdf51ae$export$953cecd6e717a553(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return $07795f526bdf51ae$export$953cecd6e717a553(o1);
}
function $07795f526bdf51ae$var$_setPrototypeOf(o2, p1) {
    $07795f526bdf51ae$var$_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return $07795f526bdf51ae$var$_setPrototypeOf(o2, p1);
}
function $07795f526bdf51ae$var$_isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;
    try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
        return true;
    } catch (e) {
        return false;
    }
}
function $07795f526bdf51ae$var$_construct(Parent1, args1, Class1) {
    if ($07795f526bdf51ae$var$_isNativeReflectConstruct()) $07795f526bdf51ae$var$_construct = Reflect.construct;
    else $07795f526bdf51ae$var$_construct = function _construct(Parent, args, Class) {
        var a = [
            null
        ];
        a.push.apply(a, args);
        var Constructor = Function.bind.apply(Parent, a);
        var instance = new Constructor();
        if (Class) $07795f526bdf51ae$var$_setPrototypeOf(instance, Class.prototype);
        return instance;
    };
    return $07795f526bdf51ae$var$_construct.apply(null, arguments);
}
function $07795f526bdf51ae$var$_isNativeFunction(fn) {
    return Function.toString.call(fn).indexOf("[native code]") !== -1;
}
function $07795f526bdf51ae$var$_wrapNativeSuper(Class2) {
    var _cache = typeof Map === "function" ? new Map() : undefined;
    $07795f526bdf51ae$var$_wrapNativeSuper = function _wrapNativeSuper(Class) {
        if (Class === null || !$07795f526bdf51ae$var$_isNativeFunction(Class)) return Class;
        if (typeof Class !== "function") throw new TypeError("Super expression must either be null or a function");
        if (typeof _cache !== "undefined") {
            if (_cache.has(Class)) return _cache.get(Class);
            _cache.set(Class, Wrapper);
        }
        function Wrapper() {
            return $07795f526bdf51ae$var$_construct(Class, arguments, $07795f526bdf51ae$export$953cecd6e717a553(this).constructor);
        }
        Wrapper.prototype = Object.create(Class.prototype, {
            constructor: {
                value: Wrapper,
                enumerable: false,
                writable: true,
                configurable: true
            }
        });
        return $07795f526bdf51ae$var$_setPrototypeOf(Wrapper, Class);
    };
    return $07795f526bdf51ae$var$_wrapNativeSuper(Class2);
}
function $07795f526bdf51ae$export$ffb5f4729a158638(self) {
    if (self === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return self;
}
function $07795f526bdf51ae$export$43caf9889c228507(self, call) {
    if (call && (typeof call === "object" || typeof call === "function")) return call;
    return $07795f526bdf51ae$export$ffb5f4729a158638(self);
}
function $07795f526bdf51ae$export$342063e11d6c3cad(Derived) {
    var hasNativeReflectConstruct = $07795f526bdf51ae$var$_isNativeReflectConstruct();
    return function _createSuperInternal() {
        var Super = $07795f526bdf51ae$export$953cecd6e717a553(Derived), result;
        if (hasNativeReflectConstruct) {
            var NewTarget = $07795f526bdf51ae$export$953cecd6e717a553(this).constructor;
            result = Reflect.construct(Super, arguments, NewTarget);
        } else result = Super.apply(this, arguments);
        return $07795f526bdf51ae$export$43caf9889c228507(this, result);
    };
}
function $07795f526bdf51ae$var$_superPropBase(object, property) {
    while(!Object.prototype.hasOwnProperty.call(object, property)){
        object = $07795f526bdf51ae$export$953cecd6e717a553(object);
        if (object === null) break;
    }
    return object;
}
function $07795f526bdf51ae$export$882b5998b3b9117c(target1, property1, receiver1) {
    if (typeof Reflect !== "undefined" && Reflect.get) $07795f526bdf51ae$export$882b5998b3b9117c = Reflect.get;
    else $07795f526bdf51ae$export$882b5998b3b9117c = function $07795f526bdf51ae$export$882b5998b3b9117c(target, property, receiver) {
        var base = $07795f526bdf51ae$var$_superPropBase(target, property);
        if (!base) return;
        var desc = Object.getOwnPropertyDescriptor(base, property);
        if (desc.get) return desc.get.call(receiver);
        return desc.value;
    };
    return $07795f526bdf51ae$export$882b5998b3b9117c(target1, property1, receiver1 || target1);
}
function $07795f526bdf51ae$export$dda1d9f60106f0e9(arr, i) {
    return $07795f526bdf51ae$var$_arrayWithHoles(arr) || $07795f526bdf51ae$var$_iterableToArrayLimit(arr, i) || $07795f526bdf51ae$var$_unsupportedIterableToArray(arr, i) || $07795f526bdf51ae$var$_nonIterableRest();
}
function $07795f526bdf51ae$export$9e5f44173e64f162(arr) {
    return $07795f526bdf51ae$var$_arrayWithHoles(arr) || $07795f526bdf51ae$var$_iterableToArray(arr) || $07795f526bdf51ae$var$_unsupportedIterableToArray(arr) || $07795f526bdf51ae$var$_nonIterableRest();
}
function $07795f526bdf51ae$var$_arrayWithHoles(arr) {
    if (Array.isArray(arr)) return arr;
}
function $07795f526bdf51ae$var$_iterableToArray(iter) {
    if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter);
}
function $07795f526bdf51ae$var$_iterableToArrayLimit(arr, i) {
    if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _e = undefined;
    try {
        for(var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function $07795f526bdf51ae$var$_unsupportedIterableToArray(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return $07795f526bdf51ae$var$_arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return $07795f526bdf51ae$var$_arrayLikeToArray(o, minLen);
}
function $07795f526bdf51ae$var$_arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function $07795f526bdf51ae$var$_nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function $07795f526bdf51ae$export$71511d61b312f219(o, allowArrayLike) {
    var it;
    if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) {
        if (Array.isArray(o) || (it = $07795f526bdf51ae$var$_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") {
            if (it) o = it;
            var i = 0;
            var F = function() {};
            return {
                s: F,
                n: function() {
                    if (i >= o.length) return {
                        done: true
                    };
                    return {
                        done: false,
                        value: o[i++]
                    };
                },
                e: function(e) {
                    throw e;
                },
                f: F
            };
        }
        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    var normalCompletion = true, didErr = false, err;
    return {
        s: function() {
            it = o[Symbol.iterator]();
        },
        n: function() {
            var step = it.next();
            normalCompletion = step.done;
            return step;
        },
        e: function(e) {
            didErr = true;
            err = e;
        },
        f: function() {
            try {
                if (!normalCompletion && it.return != null) it.return();
            } finally{
                if (didErr) throw err;
            }
        }
    };
}
var $07795f526bdf51ae$export$e7094788287c5e9b = {
    ANCHOR: '&',
    COMMENT: '#',
    TAG: '!',
    DIRECTIVES_END: '-',
    DOCUMENT_END: '.'
};
var $07795f526bdf51ae$export$971d5caa766a69d7 = {
    ALIAS: 'ALIAS',
    BLANK_LINE: 'BLANK_LINE',
    BLOCK_FOLDED: 'BLOCK_FOLDED',
    BLOCK_LITERAL: 'BLOCK_LITERAL',
    COMMENT: 'COMMENT',
    DIRECTIVE: 'DIRECTIVE',
    DOCUMENT: 'DOCUMENT',
    FLOW_MAP: 'FLOW_MAP',
    FLOW_SEQ: 'FLOW_SEQ',
    MAP: 'MAP',
    MAP_KEY: 'MAP_KEY',
    MAP_VALUE: 'MAP_VALUE',
    PLAIN: 'PLAIN',
    QUOTE_DOUBLE: 'QUOTE_DOUBLE',
    QUOTE_SINGLE: 'QUOTE_SINGLE',
    SEQ: 'SEQ',
    SEQ_ITEM: 'SEQ_ITEM'
};
var $07795f526bdf51ae$export$4368d992c4eafac0 = 'tag:yaml.org,2002:';
var $07795f526bdf51ae$export$7ccc53e8f1e7dfc5 = {
    MAP: 'tag:yaml.org,2002:map',
    SEQ: 'tag:yaml.org,2002:seq',
    STR: 'tag:yaml.org,2002:str'
};
function $07795f526bdf51ae$var$findLineStarts(src) {
    var ls = [
        0
    ];
    var offset = src.indexOf('\n');
    while(offset !== -1){
        offset += 1;
        ls.push(offset);
        offset = src.indexOf('\n', offset);
    }
    return ls;
}
function $07795f526bdf51ae$var$getSrcInfo(cst) {
    var lineStarts, src;
    if (typeof cst === 'string') {
        lineStarts = $07795f526bdf51ae$var$findLineStarts(cst);
        src = cst;
    } else {
        if (Array.isArray(cst)) cst = cst[0];
        if (cst && cst.context) {
            if (!cst.lineStarts) cst.lineStarts = $07795f526bdf51ae$var$findLineStarts(cst.context.src);
            lineStarts = cst.lineStarts;
            src = cst.context.src;
        }
    }
    return {
        lineStarts: lineStarts,
        src: src
    };
}
/**
 * @typedef {Object} LinePos - One-indexed position in the source
 * @property {number} line
 * @property {number} col
 */ /**
 * Determine the line/col position matching a character offset.
 *
 * Accepts a source string or a CST document as the second parameter. With
 * the latter, starting indices for lines are cached in the document as
 * `lineStarts: number[]`.
 *
 * Returns a one-indexed `{ line, col }` location if found, or
 * `undefined` otherwise.
 *
 * @param {number} offset
 * @param {string|Document|Document[]} cst
 * @returns {?LinePos}
 */ function $07795f526bdf51ae$var$getLinePos(offset, cst) {
    if (typeof offset !== 'number' || offset < 0) return null;
    var _getSrcInfo = $07795f526bdf51ae$var$getSrcInfo(cst), lineStarts = _getSrcInfo.lineStarts, src = _getSrcInfo.src;
    if (!lineStarts || !src || offset > src.length) return null;
    for(var i = 0; i < lineStarts.length; ++i){
        var start = lineStarts[i];
        if (offset < start) return {
            line: i,
            col: offset - lineStarts[i - 1] + 1
        };
        if (offset === start) return {
            line: i + 1,
            col: 1
        };
    }
    var line = lineStarts.length;
    return {
        line: line,
        col: offset - lineStarts[line - 1] + 1
    };
}
/**
 * Get a specified line from the source.
 *
 * Accepts a source string or a CST document as the second parameter. With
 * the latter, starting indices for lines are cached in the document as
 * `lineStarts: number[]`.
 *
 * Returns the line as a string if found, or `null` otherwise.
 *
 * @param {number} line One-indexed line number
 * @param {string|Document|Document[]} cst
 * @returns {?string}
 */ function $07795f526bdf51ae$var$getLine(line, cst) {
    var _getSrcInfo2 = $07795f526bdf51ae$var$getSrcInfo(cst), lineStarts = _getSrcInfo2.lineStarts, src = _getSrcInfo2.src;
    if (!lineStarts || !(line >= 1) || line > lineStarts.length) return null;
    var start = lineStarts[line - 1];
    var end = lineStarts[line]; // undefined for last line; that's ok for slice()
    while(end && end > start && src[end - 1] === '\n')--end;
    return src.slice(start, end);
}
/**
 * Pretty-print the starting line from the source indicated by the range `pos`
 *
 * Trims output to `maxWidth` chars while keeping the starting column visible,
 * using `…` at either end to indicate dropped characters.
 *
 * Returns a two-line string (or `null`) with `\n` as separator; the second line
 * will hold appropriately indented `^` marks indicating the column range.
 *
 * @param {Object} pos
 * @param {LinePos} pos.start
 * @param {LinePos} [pos.end]
 * @param {string|Document|Document[]*} cst
 * @param {number} [maxWidth=80]
 * @returns {?string}
 */ function $07795f526bdf51ae$var$getPrettyContext(_ref, cst) {
    var start = _ref.start, end = _ref.end;
    var maxWidth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 80;
    var src = $07795f526bdf51ae$var$getLine(start.line, cst);
    if (!src) return null;
    var col = start.col;
    if (src.length > maxWidth) {
        if (col <= maxWidth - 10) src = src.substr(0, maxWidth - 1) + '…';
        else {
            var halfWidth = Math.round(maxWidth / 2);
            if (src.length > col + halfWidth) src = src.substr(0, col + halfWidth - 1) + '…';
            col -= src.length - maxWidth;
            src = '…' + src.substr(1 - maxWidth);
        }
    }
    var errLen = 1;
    var errEnd = '';
    if (end) {
        if (end.line === start.line && col + (end.col - start.col) <= maxWidth + 1) errLen = end.col - start.col;
        else {
            errLen = Math.min(src.length + 1, maxWidth) - col;
            errEnd = '…';
        }
    }
    var offset = col > 1 ? ' '.repeat(col - 1) : '';
    var err = '^'.repeat(errLen);
    return "".concat(src, "\n").concat(offset).concat(err).concat(errEnd);
}
var $07795f526bdf51ae$export$db202ddc8be9136 = /*#__PURE__*/ function() {
    function $07795f526bdf51ae$export$db202ddc8be9136(start, end) {
        $07795f526bdf51ae$export$db3b6bfb95261072(this, $07795f526bdf51ae$export$db202ddc8be9136);
        this.start = start;
        this.end = end || start;
    }
    $07795f526bdf51ae$export$8b22cf2602fb60ce($07795f526bdf51ae$export$db202ddc8be9136, [
        {
            key: "isEmpty",
            value: function isEmpty() {
                return typeof this.start !== 'number' || !this.end || this.end <= this.start;
            }
        },
        {
            key: "setOrigRange",
            value: function setOrigRange(cr, offset) {
                var start = this.start, end = this.end;
                if (cr.length === 0 || end <= cr[0]) {
                    this.origStart = start;
                    this.origEnd = end;
                    return offset;
                }
                var i = offset;
                while(i < cr.length){
                    if (cr[i] > start) break;
                    else ++i;
                }
                this.origStart = start + i;
                var nextOffset = i;
                while(i < cr.length){
                    // if end was at \n, it should now be at \r
                    if (cr[i] >= end) break;
                    else ++i;
                }
                this.origEnd = end + i;
                return nextOffset;
            }
        }
    ], [
        {
            key: "copy",
            value: function copy(orig) {
                return new $07795f526bdf51ae$export$db202ddc8be9136(orig.start, orig.end);
            }
        }
    ]);
    return $07795f526bdf51ae$export$db202ddc8be9136;
}();
/** Root class of all nodes */ var $07795f526bdf51ae$export$a07804094c3ecf2d = /*#__PURE__*/ function() {
    function $07795f526bdf51ae$export$a07804094c3ecf2d(type, props, context) {
        $07795f526bdf51ae$export$db3b6bfb95261072(this, $07795f526bdf51ae$export$a07804094c3ecf2d);
        Object.defineProperty(this, 'context', {
            value: context || null,
            writable: true
        });
        this.error = null;
        this.range = null;
        this.valueRange = null;
        this.props = props || [];
        this.type = type;
        this.value = null;
    }
    $07795f526bdf51ae$export$8b22cf2602fb60ce($07795f526bdf51ae$export$a07804094c3ecf2d, [
        {
            key: "getPropValue",
            value: function getPropValue(idx, key, skipKey) {
                if (!this.context) return null;
                var src = this.context.src;
                var prop = this.props[idx];
                return prop && src[prop.start] === key ? src.slice(prop.start + (skipKey ? 1 : 0), prop.end) : null;
            }
        },
        {
            key: "anchor",
            get: function get() {
                for(var i = 0; i < this.props.length; ++i){
                    var anchor = this.getPropValue(i, $07795f526bdf51ae$export$e7094788287c5e9b.ANCHOR, true);
                    if (anchor != null) return anchor;
                }
                return null;
            }
        },
        {
            key: "comment",
            get: function get() {
                var comments = [];
                for(var i = 0; i < this.props.length; ++i){
                    var comment = this.getPropValue(i, $07795f526bdf51ae$export$e7094788287c5e9b.COMMENT, true);
                    if (comment != null) comments.push(comment);
                }
                return comments.length > 0 ? comments.join('\n') : null;
            }
        },
        {
            key: "commentHasRequiredWhitespace",
            value: function commentHasRequiredWhitespace(start) {
                var src = this.context.src;
                if (this.header && start === this.header.end) return false;
                if (!this.valueRange) return false;
                var end = this.valueRange.end;
                return start !== end || $07795f526bdf51ae$export$a07804094c3ecf2d.atBlank(src, end - 1);
            }
        },
        {
            key: "hasComment",
            get: function get() {
                if (this.context) {
                    var src = this.context.src;
                    for(var i = 0; i < this.props.length; ++i){
                        if (src[this.props[i].start] === $07795f526bdf51ae$export$e7094788287c5e9b.COMMENT) return true;
                    }
                }
                return false;
            }
        },
        {
            key: "hasProps",
            get: function get() {
                if (this.context) {
                    var src = this.context.src;
                    for(var i = 0; i < this.props.length; ++i){
                        if (src[this.props[i].start] !== $07795f526bdf51ae$export$e7094788287c5e9b.COMMENT) return true;
                    }
                }
                return false;
            }
        },
        {
            key: "includesTrailingLines",
            get: function get() {
                return false;
            }
        },
        {
            key: "jsonLike",
            get: function get() {
                var jsonLikeTypes = [
                    $07795f526bdf51ae$export$971d5caa766a69d7.FLOW_MAP,
                    $07795f526bdf51ae$export$971d5caa766a69d7.FLOW_SEQ,
                    $07795f526bdf51ae$export$971d5caa766a69d7.QUOTE_DOUBLE,
                    $07795f526bdf51ae$export$971d5caa766a69d7.QUOTE_SINGLE
                ];
                return jsonLikeTypes.indexOf(this.type) !== -1;
            }
        },
        {
            key: "rangeAsLinePos",
            get: function get() {
                if (!this.range || !this.context) return undefined;
                var start = $07795f526bdf51ae$var$getLinePos(this.range.start, this.context.root);
                if (!start) return undefined;
                var end = $07795f526bdf51ae$var$getLinePos(this.range.end, this.context.root);
                return {
                    start: start,
                    end: end
                };
            }
        },
        {
            key: "rawValue",
            get: function get() {
                if (!this.valueRange || !this.context) return null;
                var _this$valueRange = this.valueRange, start = _this$valueRange.start, end = _this$valueRange.end;
                return this.context.src.slice(start, end);
            }
        },
        {
            key: "tag",
            get: function get() {
                for(var i = 0; i < this.props.length; ++i){
                    var tag = this.getPropValue(i, $07795f526bdf51ae$export$e7094788287c5e9b.TAG, false);
                    if (tag != null) {
                        if (tag[1] === '<') return {
                            verbatim: tag.slice(2, -1)
                        };
                        else {
                            // eslint-disable-next-line no-unused-vars
                            var _tag$match = tag.match(/^(.*!)([^!]*)$/), _tag$match2 = $07795f526bdf51ae$export$dda1d9f60106f0e9(_tag$match, 3);
                            _tag$match2[0];
                            var handle = _tag$match2[1], suffix = _tag$match2[2];
                            return {
                                handle: handle,
                                suffix: suffix
                            };
                        }
                    }
                }
                return null;
            }
        },
        {
            key: "valueRangeContainsNewline",
            get: function get() {
                if (!this.valueRange || !this.context) return false;
                var _this$valueRange2 = this.valueRange, start = _this$valueRange2.start, end = _this$valueRange2.end;
                var src = this.context.src;
                for(var i = start; i < end; ++i){
                    if (src[i] === '\n') return true;
                }
                return false;
            }
        },
        {
            key: "parseComment",
            value: function parseComment(start) {
                var src = this.context.src;
                if (src[start] === $07795f526bdf51ae$export$e7094788287c5e9b.COMMENT) {
                    var end = $07795f526bdf51ae$export$a07804094c3ecf2d.endOfLine(src, start + 1);
                    var commentRange = new $07795f526bdf51ae$export$db202ddc8be9136(start, end);
                    this.props.push(commentRange);
                    return end;
                }
                return start;
            }
        },
        {
            key: "setOrigRanges",
            value: function setOrigRanges(cr, offset) {
                if (this.range) offset = this.range.setOrigRange(cr, offset);
                if (this.valueRange) this.valueRange.setOrigRange(cr, offset);
                this.props.forEach(function(prop) {
                    return prop.setOrigRange(cr, offset);
                });
                return offset;
            }
        },
        {
            key: "toString",
            value: function toString() {
                var src = this.context.src, range = this.range, value = this.value;
                if (value != null) return value;
                var str = src.slice(range.start, range.end);
                return $07795f526bdf51ae$export$a07804094c3ecf2d.addStringTerminator(src, range.end, str);
            }
        }
    ], [
        {
            key: "addStringTerminator",
            value: function addStringTerminator(src, offset, str) {
                if (str[str.length - 1] === '\n') return str;
                var next = $07795f526bdf51ae$export$a07804094c3ecf2d.endOfWhiteSpace(src, offset);
                return next >= src.length || src[next] === '\n' ? str + '\n' : str;
            } // ^(---|...)
        },
        {
            key: "atDocumentBoundary",
            value: function atDocumentBoundary(src, offset, sep) {
                var ch0 = src[offset];
                if (!ch0) return true;
                var prev = src[offset - 1];
                if (prev && prev !== '\n') return false;
                if (sep) {
                    if (ch0 !== sep) return false;
                } else {
                    if (ch0 !== $07795f526bdf51ae$export$e7094788287c5e9b.DIRECTIVES_END && ch0 !== $07795f526bdf51ae$export$e7094788287c5e9b.DOCUMENT_END) return false;
                }
                var ch1 = src[offset + 1];
                var ch2 = src[offset + 2];
                if (ch1 !== ch0 || ch2 !== ch0) return false;
                var ch3 = src[offset + 3];
                return !ch3 || ch3 === '\n' || ch3 === '\t' || ch3 === ' ';
            }
        },
        {
            key: "endOfIdentifier",
            value: function endOfIdentifier(src, offset) {
                var ch = src[offset];
                var isVerbatim = ch === '<';
                var notOk = isVerbatim ? [
                    '\n',
                    '\t',
                    ' ',
                    '>'
                ] : [
                    '\n',
                    '\t',
                    ' ',
                    '[',
                    ']',
                    '{',
                    '}',
                    ','
                ];
                while(ch && notOk.indexOf(ch) === -1)ch = src[offset += 1];
                if (isVerbatim && ch === '>') offset += 1;
                return offset;
            }
        },
        {
            key: "endOfIndent",
            value: function endOfIndent(src, offset) {
                var ch = src[offset];
                while(ch === ' ')ch = src[offset += 1];
                return offset;
            }
        },
        {
            key: "endOfLine",
            value: function endOfLine(src, offset) {
                var ch = src[offset];
                while(ch && ch !== '\n')ch = src[offset += 1];
                return offset;
            }
        },
        {
            key: "endOfWhiteSpace",
            value: function endOfWhiteSpace(src, offset) {
                var ch = src[offset];
                while(ch === '\t' || ch === ' ')ch = src[offset += 1];
                return offset;
            }
        },
        {
            key: "startOfLine",
            value: function startOfLine(src, offset) {
                var ch = src[offset - 1];
                if (ch === '\n') return offset;
                while(ch && ch !== '\n')ch = src[offset -= 1];
                return offset + 1;
            }
        },
        {
            key: "endOfBlockIndent",
            value: function endOfBlockIndent(src, indent, lineStart) {
                var inEnd = $07795f526bdf51ae$export$a07804094c3ecf2d.endOfIndent(src, lineStart);
                if (inEnd > lineStart + indent) return inEnd;
                else {
                    var wsEnd = $07795f526bdf51ae$export$a07804094c3ecf2d.endOfWhiteSpace(src, inEnd);
                    var ch = src[wsEnd];
                    if (!ch || ch === '\n') return wsEnd;
                }
                return null;
            }
        },
        {
            key: "atBlank",
            value: function atBlank(src, offset, endAsBlank) {
                var ch = src[offset];
                return ch === '\n' || ch === '\t' || ch === ' ' || endAsBlank && !ch;
            }
        },
        {
            key: "nextNodeIsIndented",
            value: function nextNodeIsIndented(ch, indentDiff, indicatorAsIndent) {
                if (!ch || indentDiff < 0) return false;
                if (indentDiff > 0) return true;
                return indicatorAsIndent && ch === '-';
            } // should be at line or string end, or at next non-whitespace char
        },
        {
            key: "normalizeOffset",
            value: function normalizeOffset(src, offset) {
                var ch = src[offset];
                return !ch ? offset : ch !== '\n' && src[offset - 1] === '\n' ? offset - 1 : $07795f526bdf51ae$export$a07804094c3ecf2d.endOfWhiteSpace(src, offset);
            } // fold single newline into space, multiple newlines to N - 1 newlines
        },
        {
            key: "foldNewline",
            value: function foldNewline(src, offset, indent) {
                var inCount = 0;
                var error = false;
                var fold = '';
                var ch = src[offset + 1];
                while(ch === ' ' || ch === '\t' || ch === '\n'){
                    switch(ch){
                        case '\n':
                            inCount = 0;
                            offset += 1;
                            fold += '\n';
                            break;
                        case '\t':
                            if (inCount <= indent) error = true;
                            offset = $07795f526bdf51ae$export$a07804094c3ecf2d.endOfWhiteSpace(src, offset + 2) - 1;
                            break;
                        case ' ':
                            inCount += 1;
                            offset += 1;
                            break;
                    }
                    ch = src[offset + 1];
                }
                if (!fold) fold = ' ';
                if (ch && inCount <= indent) error = true;
                return {
                    fold: fold,
                    offset: offset,
                    error: error
                };
            }
        }
    ]);
    return $07795f526bdf51ae$export$a07804094c3ecf2d;
}();
var $07795f526bdf51ae$export$23f2a1d2818174ef = /*#__PURE__*/ function(_Error) {
    $07795f526bdf51ae$export$35e795649ee09318($07795f526bdf51ae$export$23f2a1d2818174ef, _Error);
    var _super = $07795f526bdf51ae$export$342063e11d6c3cad($07795f526bdf51ae$export$23f2a1d2818174ef);
    function $07795f526bdf51ae$export$23f2a1d2818174ef(name, source, message) {
        var _this;
        $07795f526bdf51ae$export$db3b6bfb95261072(this, $07795f526bdf51ae$export$23f2a1d2818174ef);
        if (!message || !(source instanceof $07795f526bdf51ae$export$a07804094c3ecf2d)) throw new Error("Invalid arguments for new ".concat(name));
        _this = _super.call(this);
        _this.name = name;
        _this.message = message;
        _this.source = source;
        return _this;
    }
    $07795f526bdf51ae$export$8b22cf2602fb60ce($07795f526bdf51ae$export$23f2a1d2818174ef, [
        {
            key: "makePretty",
            value: function makePretty() {
                if (!this.source) return;
                this.nodeType = this.source.type;
                var cst = this.source.context && this.source.context.root;
                if (typeof this.offset === 'number') {
                    this.range = new $07795f526bdf51ae$export$db202ddc8be9136(this.offset, this.offset + 1);
                    var start = cst && $07795f526bdf51ae$var$getLinePos(this.offset, cst);
                    if (start) {
                        var end = {
                            line: start.line,
                            col: start.col + 1
                        };
                        this.linePos = {
                            start: start,
                            end: end
                        };
                    }
                    delete this.offset;
                } else {
                    this.range = this.source.range;
                    this.linePos = this.source.rangeAsLinePos;
                }
                if (this.linePos) {
                    var _this$linePos$start = this.linePos.start, line = _this$linePos$start.line, col = _this$linePos$start.col;
                    this.message += " at line ".concat(line, ", column ").concat(col);
                    var ctx = cst && $07795f526bdf51ae$var$getPrettyContext(this.linePos, cst);
                    if (ctx) this.message += ":\n\n".concat(ctx, "\n");
                }
                delete this.source;
            }
        }
    ]);
    return $07795f526bdf51ae$export$23f2a1d2818174ef;
}(/*#__PURE__*/ $07795f526bdf51ae$var$_wrapNativeSuper(Error));
var $07795f526bdf51ae$export$ae1af26003f05816 = /*#__PURE__*/ function(_YAMLError) {
    $07795f526bdf51ae$export$35e795649ee09318($07795f526bdf51ae$export$ae1af26003f05816, _YAMLError);
    var _super2 = $07795f526bdf51ae$export$342063e11d6c3cad($07795f526bdf51ae$export$ae1af26003f05816);
    function $07795f526bdf51ae$export$ae1af26003f05816(source, message) {
        $07795f526bdf51ae$export$db3b6bfb95261072(this, $07795f526bdf51ae$export$ae1af26003f05816);
        return _super2.call(this, 'YAMLReferenceError', source, message);
    }
    return $07795f526bdf51ae$export$ae1af26003f05816;
}($07795f526bdf51ae$export$23f2a1d2818174ef);
var $07795f526bdf51ae$export$39b482c5e57630a8 = /*#__PURE__*/ function(_YAMLError2) {
    $07795f526bdf51ae$export$35e795649ee09318($07795f526bdf51ae$export$39b482c5e57630a8, _YAMLError2);
    var _super3 = $07795f526bdf51ae$export$342063e11d6c3cad($07795f526bdf51ae$export$39b482c5e57630a8);
    function $07795f526bdf51ae$export$39b482c5e57630a8(source, message) {
        $07795f526bdf51ae$export$db3b6bfb95261072(this, $07795f526bdf51ae$export$39b482c5e57630a8);
        return _super3.call(this, 'YAMLSemanticError', source, message);
    }
    return $07795f526bdf51ae$export$39b482c5e57630a8;
}($07795f526bdf51ae$export$23f2a1d2818174ef);
var $07795f526bdf51ae$export$8743009a87fcb00f = /*#__PURE__*/ function(_YAMLError3) {
    $07795f526bdf51ae$export$35e795649ee09318($07795f526bdf51ae$export$8743009a87fcb00f, _YAMLError3);
    var _super4 = $07795f526bdf51ae$export$342063e11d6c3cad($07795f526bdf51ae$export$8743009a87fcb00f);
    function $07795f526bdf51ae$export$8743009a87fcb00f(source, message) {
        $07795f526bdf51ae$export$db3b6bfb95261072(this, $07795f526bdf51ae$export$8743009a87fcb00f);
        return _super4.call(this, 'YAMLSyntaxError', source, message);
    }
    return $07795f526bdf51ae$export$8743009a87fcb00f;
}($07795f526bdf51ae$export$23f2a1d2818174ef);
var $07795f526bdf51ae$export$2d1720544b23b823 = /*#__PURE__*/ function(_YAMLError4) {
    $07795f526bdf51ae$export$35e795649ee09318($07795f526bdf51ae$export$2d1720544b23b823, _YAMLError4);
    var _super5 = $07795f526bdf51ae$export$342063e11d6c3cad($07795f526bdf51ae$export$2d1720544b23b823);
    function $07795f526bdf51ae$export$2d1720544b23b823(source, message) {
        $07795f526bdf51ae$export$db3b6bfb95261072(this, $07795f526bdf51ae$export$2d1720544b23b823);
        return _super5.call(this, 'YAMLWarning', source, message);
    }
    return $07795f526bdf51ae$export$2d1720544b23b823;
}($07795f526bdf51ae$export$23f2a1d2818174ef);
var $07795f526bdf51ae$export$56c0d5a1e737357d = /*#__PURE__*/ function(_Node) {
    $07795f526bdf51ae$export$35e795649ee09318($07795f526bdf51ae$export$56c0d5a1e737357d, _Node);
    var _super = $07795f526bdf51ae$export$342063e11d6c3cad($07795f526bdf51ae$export$56c0d5a1e737357d);
    function $07795f526bdf51ae$export$56c0d5a1e737357d() {
        $07795f526bdf51ae$export$db3b6bfb95261072(this, $07795f526bdf51ae$export$56c0d5a1e737357d);
        return _super.apply(this, arguments);
    }
    $07795f526bdf51ae$export$8b22cf2602fb60ce($07795f526bdf51ae$export$56c0d5a1e737357d, [
        {
            key: "strValue",
            get: function get() {
                if (!this.valueRange || !this.context) return null;
                var _this$valueRange = this.valueRange, start = _this$valueRange.start, end = _this$valueRange.end;
                var src = this.context.src;
                var ch = src[end - 1];
                while(start < end && (ch === '\n' || ch === '\t' || ch === ' '))ch = src[--end - 1];
                var str = '';
                for(var i = start; i < end; ++i){
                    var _ch = src[i];
                    if (_ch === '\n') {
                        var _Node$foldNewline = $07795f526bdf51ae$export$a07804094c3ecf2d.foldNewline(src, i, -1), fold = _Node$foldNewline.fold, offset = _Node$foldNewline.offset;
                        str += fold;
                        i = offset;
                    } else if (_ch === ' ' || _ch === '\t') {
                        // trim trailing whitespace
                        var wsStart = i;
                        var next = src[i + 1];
                        while(i < end && (next === ' ' || next === '\t')){
                            i += 1;
                            next = src[i + 1];
                        }
                        if (next !== '\n') str += i > wsStart ? src.slice(wsStart, i + 1) : _ch;
                    } else str += _ch;
                }
                var ch0 = src[start];
                switch(ch0){
                    case '\t':
                        var msg = 'Plain value cannot start with a tab character';
                        var errors = [
                            new $07795f526bdf51ae$export$39b482c5e57630a8(this, msg)
                        ];
                        return {
                            errors: errors,
                            str: str
                        };
                    case '@':
                    case '`':
                        var _msg = "Plain value cannot start with reserved character ".concat(ch0);
                        var _errors = [
                            new $07795f526bdf51ae$export$39b482c5e57630a8(this, _msg)
                        ];
                        return {
                            errors: _errors,
                            str: str
                        };
                    default:
                        return str;
                }
            }
        },
        {
            key: "parseBlockValue",
            value: function parseBlockValue(start) {
                var _this$context = this.context, indent = _this$context.indent, inFlow = _this$context.inFlow, src = _this$context.src;
                var offset = start;
                var valueEnd = start;
                for(var ch = src[offset]; ch === '\n'; ch = src[offset]){
                    if ($07795f526bdf51ae$export$a07804094c3ecf2d.atDocumentBoundary(src, offset + 1)) break;
                    var end = $07795f526bdf51ae$export$a07804094c3ecf2d.endOfBlockIndent(src, indent, offset + 1);
                    if (end === null || src[end] === '#') break;
                    if (src[end] === '\n') offset = end;
                    else {
                        valueEnd = $07795f526bdf51ae$export$56c0d5a1e737357d.endOfLine(src, end, inFlow);
                        offset = valueEnd;
                    }
                }
                if (this.valueRange.isEmpty()) this.valueRange.start = start;
                this.valueRange.end = valueEnd;
                return valueEnd;
            }
        },
        {
            key: "parse",
            value: function parse(context, start) {
                this.context = context;
                var inFlow = context.inFlow, src = context.src;
                var offset = start;
                var ch = src[offset];
                if (ch && ch !== '#' && ch !== '\n') offset = $07795f526bdf51ae$export$56c0d5a1e737357d.endOfLine(src, start, inFlow);
                this.valueRange = new $07795f526bdf51ae$export$db202ddc8be9136(start, offset);
                offset = $07795f526bdf51ae$export$a07804094c3ecf2d.endOfWhiteSpace(src, offset);
                offset = this.parseComment(offset);
                if (!this.hasComment || this.valueRange.isEmpty()) offset = this.parseBlockValue(offset);
                return offset;
            }
        }
    ], [
        {
            key: "endOfLine",
            value: function endOfLine(src, start, inFlow) {
                var ch = src[start];
                var offset = start;
                while(ch && ch !== '\n'){
                    if (inFlow && (ch === '[' || ch === ']' || ch === '{' || ch === '}' || ch === ',')) break;
                    var next = src[offset + 1];
                    if (ch === ':' && (!next || next === '\n' || next === '\t' || next === ' ' || inFlow && next === ',')) break;
                    if ((ch === ' ' || ch === '\t') && next === '#') break;
                    offset += 1;
                    ch = next;
                }
                return offset;
            }
        }
    ]);
    return $07795f526bdf51ae$export$56c0d5a1e737357d;
}($07795f526bdf51ae$export$a07804094c3ecf2d);

});

parcelRequire.register("lJ8kG", function(module, exports) {

$parcel$export(module.exports, "parse", () => $fd1443a052b5ecef$export$98e6a39c04603d36);

var $DMDG9 = parcelRequire("DMDG9");
var $fd1443a052b5ecef$var$BlankLine = /*#__PURE__*/ function(_Node) {
    $DMDG9.j(BlankLine, _Node);
    var _super = $DMDG9.k(BlankLine);
    function BlankLine() {
        $DMDG9.c(this, BlankLine);
        return _super.call(this, $DMDG9.T.BLANK_LINE);
    }
    /* istanbul ignore next */ $DMDG9.b(BlankLine, [
        {
            key: "includesTrailingLines",
            get: function get() {
                // This is never called from anywhere, but if it were,
                // this is the value it should return.
                return true;
            }
        },
        {
            key: "parse",
            value: function $fd1443a052b5ecef$export$98e6a39c04603d36(context, start) {
                this.context = context;
                this.range = new $DMDG9.R(start, start + 1);
                return start + 1;
            }
        }
    ]);
    return BlankLine;
}($DMDG9.N);
var $fd1443a052b5ecef$var$CollectionItem = /*#__PURE__*/ function(_Node) {
    $DMDG9.j(CollectionItem, _Node);
    var _super = $DMDG9.k(CollectionItem);
    function CollectionItem(type, props) {
        var _this;
        $DMDG9.c(this, CollectionItem);
        _this = _super.call(this, type, props);
        _this.node = null;
        return _this;
    }
    $DMDG9.b(CollectionItem, [
        {
            key: "includesTrailingLines",
            get: function get() {
                return !!this.node && this.node.includesTrailingLines;
            }
        },
        {
            key: "parse",
            value: function $fd1443a052b5ecef$export$98e6a39c04603d36(context, start) {
                this.context = context;
                var parseNode = context.parseNode, src = context.src;
                var atLineStart = context.atLineStart, lineStart = context.lineStart;
                if (!atLineStart && this.type === $DMDG9.T.SEQ_ITEM) this.error = new $DMDG9.g(this, 'Sequence items must not have preceding content on the same line');
                var indent = atLineStart ? start - lineStart : context.indent;
                var offset = $DMDG9.N.endOfWhiteSpace(src, start + 1);
                var ch = src[offset];
                var inlineComment = ch === '#';
                var comments = [];
                var blankLine = null;
                while(ch === '\n' || ch === '#'){
                    if (ch === '#') {
                        var _end = $DMDG9.N.endOfLine(src, offset + 1);
                        comments.push(new $DMDG9.R(offset, _end));
                        offset = _end;
                    } else {
                        atLineStart = true;
                        lineStart = offset + 1;
                        var wsEnd = $DMDG9.N.endOfWhiteSpace(src, lineStart);
                        if (src[wsEnd] === '\n' && comments.length === 0) {
                            blankLine = new $fd1443a052b5ecef$var$BlankLine();
                            lineStart = blankLine.parse({
                                src: src
                            }, lineStart);
                        }
                        offset = $DMDG9.N.endOfIndent(src, lineStart);
                    }
                    ch = src[offset];
                }
                if ($DMDG9.N.nextNodeIsIndented(ch, offset - (lineStart + indent), this.type !== $DMDG9.T.SEQ_ITEM)) this.node = parseNode({
                    atLineStart: atLineStart,
                    inCollection: false,
                    indent: indent,
                    lineStart: lineStart,
                    parent: this
                }, offset);
                else if (ch && lineStart > start + 1) offset = lineStart - 1;
                if (this.node) {
                    if (blankLine) {
                        // Only blank lines preceding non-empty nodes are captured. Note that
                        // this means that collection item range start indices do not always
                        // increase monotonically. -- eemeli/yaml#126
                        var items = context.parent.items || context.parent.contents;
                        if (items) items.push(blankLine);
                    }
                    if (comments.length) Array.prototype.push.apply(this.props, comments);
                    offset = this.node.range.end;
                } else if (inlineComment) {
                    var c = comments[0];
                    this.props.push(c);
                    offset = c.end;
                } else offset = $DMDG9.N.endOfLine(src, start + 1);
                var end = this.node ? this.node.valueRange.end : offset;
                this.valueRange = new $DMDG9.R(start, end);
                return offset;
            }
        },
        {
            key: "setOrigRanges",
            value: function setOrigRanges(cr, offset) {
                offset = $DMDG9.l($DMDG9.m(CollectionItem.prototype), "setOrigRanges", this).call(this, cr, offset);
                return this.node ? this.node.setOrigRanges(cr, offset) : offset;
            }
        },
        {
            key: "toString",
            value: function toString() {
                var src = this.context.src, node = this.node, range = this.range, value = this.value;
                if (value != null) return value;
                var str = node ? src.slice(range.start, node.range.start) + String(node) : src.slice(range.start, range.end);
                return $DMDG9.N.addStringTerminator(src, range.end, str);
            }
        }
    ]);
    return CollectionItem;
}($DMDG9.N);
var $fd1443a052b5ecef$var$Comment = /*#__PURE__*/ function(_Node) {
    $DMDG9.j(Comment, _Node);
    var _super = $DMDG9.k(Comment);
    function Comment() {
        $DMDG9.c(this, Comment);
        return _super.call(this, $DMDG9.T.COMMENT);
    }
    /**
   * Parses a comment line from the source
   *
   * @param {ParseContext} context
   * @param {number} start - Index of first character
   * @returns {number} - Index of the character after this scalar
   */ $DMDG9.b(Comment, [
        {
            key: "parse",
            value: function $fd1443a052b5ecef$export$98e6a39c04603d36(context, start) {
                this.context = context;
                var offset = this.parseComment(start);
                this.range = new $DMDG9.R(start, offset);
                return offset;
            }
        }
    ]);
    return Comment;
}($DMDG9.N);
function $fd1443a052b5ecef$var$grabCollectionEndComments(node) {
    var cnode = node;
    while(cnode instanceof $fd1443a052b5ecef$var$CollectionItem)cnode = cnode.node;
    if (!(cnode instanceof $fd1443a052b5ecef$var$Collection)) return null;
    var len = cnode.items.length;
    var ci = -1;
    for(var i = len - 1; i >= 0; --i){
        var n = cnode.items[i];
        if (n.type === $DMDG9.T.COMMENT) {
            // Keep sufficiently indented comments with preceding node
            var _n$context = n.context, indent = _n$context.indent, lineStart = _n$context.lineStart;
            if (indent > 0 && n.range.start >= lineStart + indent) break;
            ci = i;
        } else if (n.type === $DMDG9.T.BLANK_LINE) ci = i;
        else break;
    }
    if (ci === -1) return null;
    var ca = cnode.items.splice(ci, len - ci);
    var prevEnd = ca[0].range.start;
    while(true){
        cnode.range.end = prevEnd;
        if (cnode.valueRange && cnode.valueRange.end > prevEnd) cnode.valueRange.end = prevEnd;
        if (cnode === node) break;
        cnode = cnode.context.parent;
    }
    return ca;
}
var $fd1443a052b5ecef$var$Collection = /*#__PURE__*/ function(_Node) {
    $DMDG9.j(Collection, _Node);
    var _super = $DMDG9.k(Collection);
    function Collection(firstItem) {
        var _this;
        $DMDG9.c(this, Collection);
        _this = _super.call(this, firstItem.type === $DMDG9.T.SEQ_ITEM ? $DMDG9.T.SEQ : $DMDG9.T.MAP);
        for(var i = firstItem.props.length - 1; i >= 0; --i)if (firstItem.props[i].start < firstItem.context.lineStart) {
            // props on previous line are assumed by the collection
            _this.props = firstItem.props.slice(0, i + 1);
            firstItem.props = firstItem.props.slice(i + 1);
            var itemRange = firstItem.props[0] || firstItem.valueRange;
            firstItem.range.start = itemRange.start;
            break;
        }
        _this.items = [
            firstItem
        ];
        var ec = $fd1443a052b5ecef$var$grabCollectionEndComments(firstItem);
        if (ec) Array.prototype.push.apply(_this.items, ec);
        return _this;
    }
    $DMDG9.b(Collection, [
        {
            key: "includesTrailingLines",
            get: function get() {
                return this.items.length > 0;
            }
        },
        {
            key: "parse",
            value: function $fd1443a052b5ecef$export$98e6a39c04603d36(context, start) {
                this.context = context;
                var parseNode = context.parseNode, src = context.src; // It's easier to recalculate lineStart here rather than tracking down the
                // last context from which to read it -- eemeli/yaml#2
                var lineStart = $DMDG9.N.startOfLine(src, start);
                var firstItem = this.items[0]; // First-item context needs to be correct for later comment handling
                // -- eemeli/yaml#17
                firstItem.context.parent = this;
                this.valueRange = $DMDG9.R.copy(firstItem.valueRange);
                var indent = firstItem.range.start - firstItem.context.lineStart;
                var offset = start;
                offset = $DMDG9.N.normalizeOffset(src, offset);
                var ch = src[offset];
                var atLineStart = $DMDG9.N.endOfWhiteSpace(src, lineStart) === offset;
                var prevIncludesTrailingLines = false;
                while(ch){
                    while(ch === '\n' || ch === '#'){
                        if (atLineStart && ch === '\n' && !prevIncludesTrailingLines) {
                            var blankLine = new $fd1443a052b5ecef$var$BlankLine();
                            offset = blankLine.parse({
                                src: src
                            }, offset);
                            this.valueRange.end = offset;
                            if (offset >= src.length) {
                                ch = null;
                                break;
                            }
                            this.items.push(blankLine);
                            offset -= 1; // blankLine.parse() consumes terminal newline
                        } else if (ch === '#') {
                            if (offset < lineStart + indent && !Collection.nextContentHasIndent(src, offset, indent)) return offset;
                            var comment = new $fd1443a052b5ecef$var$Comment();
                            offset = comment.parse({
                                indent: indent,
                                lineStart: lineStart,
                                src: src
                            }, offset);
                            this.items.push(comment);
                            this.valueRange.end = offset;
                            if (offset >= src.length) {
                                ch = null;
                                break;
                            }
                        }
                        lineStart = offset + 1;
                        offset = $DMDG9.N.endOfIndent(src, lineStart);
                        if ($DMDG9.N.atBlank(src, offset)) {
                            var wsEnd = $DMDG9.N.endOfWhiteSpace(src, offset);
                            var next = src[wsEnd];
                            if (!next || next === '\n' || next === '#') offset = wsEnd;
                        }
                        ch = src[offset];
                        atLineStart = true;
                    }
                    if (!ch) break;
                    if (offset !== lineStart + indent && (atLineStart || ch !== ':')) {
                        if (offset < lineStart + indent) {
                            if (lineStart > start) offset = lineStart;
                            break;
                        } else if (!this.error) {
                            var msg = 'All collection items must start at the same column';
                            this.error = new $DMDG9.Y(this, msg);
                        }
                    }
                    if (firstItem.type === $DMDG9.T.SEQ_ITEM) {
                        if (ch !== '-') {
                            if (lineStart > start) offset = lineStart;
                            break;
                        }
                    } else if (ch === '-' && !this.error) {
                        // map key may start with -, as long as it's followed by a non-whitespace char
                        var _next = src[offset + 1];
                        if (!_next || _next === '\n' || _next === '\t' || _next === ' ') {
                            var _msg = 'A collection cannot be both a mapping and a sequence';
                            this.error = new $DMDG9.Y(this, _msg);
                        }
                    }
                    var node = parseNode({
                        atLineStart: atLineStart,
                        inCollection: true,
                        indent: indent,
                        lineStart: lineStart,
                        parent: this
                    }, offset);
                    if (!node) return offset; // at next document start
                    this.items.push(node);
                    this.valueRange.end = node.valueRange.end;
                    offset = $DMDG9.N.normalizeOffset(src, node.range.end);
                    ch = src[offset];
                    atLineStart = false;
                    prevIncludesTrailingLines = node.includesTrailingLines; // Need to reset lineStart and atLineStart here if preceding node's range
                    // has advanced to check the current line's indentation level
                    // -- eemeli/yaml#10 & eemeli/yaml#38
                    if (ch) {
                        var ls = offset - 1;
                        var prev = src[ls];
                        while(prev === ' ' || prev === '\t')prev = src[--ls];
                        if (prev === '\n') {
                            lineStart = ls + 1;
                            atLineStart = true;
                        }
                    }
                    var ec = $fd1443a052b5ecef$var$grabCollectionEndComments(node);
                    if (ec) Array.prototype.push.apply(this.items, ec);
                }
                return offset;
            }
        },
        {
            key: "setOrigRanges",
            value: function setOrigRanges(cr, offset) {
                offset = $DMDG9.l($DMDG9.m(Collection.prototype), "setOrigRanges", this).call(this, cr, offset);
                this.items.forEach(function(node) {
                    offset = node.setOrigRanges(cr, offset);
                });
                return offset;
            }
        },
        {
            key: "toString",
            value: function toString() {
                var src = this.context.src, items = this.items, range = this.range, value = this.value;
                if (value != null) return value;
                var str = src.slice(range.start, items[0].range.start) + String(items[0]);
                for(var i = 1; i < items.length; ++i){
                    var item = items[i];
                    var _item$context = item.context, atLineStart = _item$context.atLineStart, indent = _item$context.indent;
                    if (atLineStart) for(var _i = 0; _i < indent; ++_i)str += ' ';
                    str += String(item);
                }
                return $DMDG9.N.addStringTerminator(src, range.end, str);
            }
        }
    ], [
        {
            key: "nextContentHasIndent",
            value: function nextContentHasIndent(src, offset, indent) {
                var lineStart = $DMDG9.N.endOfLine(src, offset) + 1;
                offset = $DMDG9.N.endOfWhiteSpace(src, lineStart);
                var ch = src[offset];
                if (!ch) return false;
                if (offset >= lineStart + indent) return true;
                if (ch !== '#' && ch !== '\n') return false;
                return Collection.nextContentHasIndent(src, offset, indent);
            }
        }
    ]);
    return Collection;
}($DMDG9.N);
var $fd1443a052b5ecef$var$Directive = /*#__PURE__*/ function(_Node) {
    $DMDG9.j(Directive, _Node);
    var _super = $DMDG9.k(Directive);
    function Directive() {
        var _this;
        $DMDG9.c(this, Directive);
        _this = _super.call(this, $DMDG9.T.DIRECTIVE);
        _this.name = null;
        return _this;
    }
    $DMDG9.b(Directive, [
        {
            key: "parameters",
            get: function get() {
                var raw = this.rawValue;
                return raw ? raw.trim().split(/[ \t]+/) : [];
            }
        },
        {
            key: "parseName",
            value: function parseName(start) {
                var src = this.context.src;
                var offset = start;
                var ch = src[offset];
                while(ch && ch !== '\n' && ch !== '\t' && ch !== ' ')ch = src[offset += 1];
                this.name = src.slice(start, offset);
                return offset;
            }
        },
        {
            key: "parseParameters",
            value: function parseParameters(start) {
                var src = this.context.src;
                var offset = start;
                var ch = src[offset];
                while(ch && ch !== '\n' && ch !== '#')ch = src[offset += 1];
                this.valueRange = new $DMDG9.R(start, offset);
                return offset;
            }
        },
        {
            key: "parse",
            value: function $fd1443a052b5ecef$export$98e6a39c04603d36(context, start) {
                this.context = context;
                var offset = this.parseName(start + 1);
                offset = this.parseParameters(offset);
                offset = this.parseComment(offset);
                this.range = new $DMDG9.R(start, offset);
                return offset;
            }
        }
    ]);
    return Directive;
}($DMDG9.N);
var $fd1443a052b5ecef$var$Document = /*#__PURE__*/ function(_Node) {
    $DMDG9.j(Document, _Node);
    var _super = $DMDG9.k(Document);
    function Document() {
        var _this;
        $DMDG9.c(this, Document);
        _this = _super.call(this, $DMDG9.T.DOCUMENT);
        _this.directives = null;
        _this.contents = null;
        _this.directivesEndMarker = null;
        _this.documentEndMarker = null;
        return _this;
    }
    $DMDG9.b(Document, [
        {
            key: "parseDirectives",
            value: function parseDirectives(start) {
                var src = this.context.src;
                this.directives = [];
                var atLineStart = true;
                var hasDirectives = false;
                var offset = start;
                while(!$DMDG9.N.atDocumentBoundary(src, offset, $DMDG9.C.DIRECTIVES_END)){
                    offset = Document.startCommentOrEndBlankLine(src, offset);
                    switch(src[offset]){
                        case '\n':
                            if (atLineStart) {
                                var blankLine = new $fd1443a052b5ecef$var$BlankLine();
                                offset = blankLine.parse({
                                    src: src
                                }, offset);
                                if (offset < src.length) this.directives.push(blankLine);
                            } else {
                                offset += 1;
                                atLineStart = true;
                            }
                            break;
                        case '#':
                            var comment = new $fd1443a052b5ecef$var$Comment();
                            offset = comment.parse({
                                src: src
                            }, offset);
                            this.directives.push(comment);
                            atLineStart = false;
                            break;
                        case '%':
                            var directive = new $fd1443a052b5ecef$var$Directive();
                            offset = directive.parse({
                                parent: this,
                                src: src
                            }, offset);
                            this.directives.push(directive);
                            hasDirectives = true;
                            atLineStart = false;
                            break;
                        default:
                            if (hasDirectives) this.error = new $DMDG9.g(this, 'Missing directives-end indicator line');
                            else if (this.directives.length > 0) {
                                this.contents = this.directives;
                                this.directives = [];
                            }
                            return offset;
                    }
                }
                if (src[offset]) {
                    this.directivesEndMarker = new $DMDG9.R(offset, offset + 3);
                    return offset + 3;
                }
                if (hasDirectives) this.error = new $DMDG9.g(this, 'Missing directives-end indicator line');
                else if (this.directives.length > 0) {
                    this.contents = this.directives;
                    this.directives = [];
                }
                return offset;
            }
        },
        {
            key: "parseContents",
            value: function parseContents(start) {
                var _this$context = this.context, parseNode = _this$context.parseNode, src = _this$context.src;
                if (!this.contents) this.contents = [];
                var lineStart = start;
                while(src[lineStart - 1] === '-')lineStart -= 1;
                var offset = $DMDG9.N.endOfWhiteSpace(src, start);
                var atLineStart = lineStart === start;
                this.valueRange = new $DMDG9.R(offset);
                while(!$DMDG9.N.atDocumentBoundary(src, offset, $DMDG9.C.DOCUMENT_END)){
                    switch(src[offset]){
                        case '\n':
                            if (atLineStart) {
                                var blankLine = new $fd1443a052b5ecef$var$BlankLine();
                                offset = blankLine.parse({
                                    src: src
                                }, offset);
                                if (offset < src.length) this.contents.push(blankLine);
                            } else {
                                offset += 1;
                                atLineStart = true;
                            }
                            lineStart = offset;
                            break;
                        case '#':
                            var comment = new $fd1443a052b5ecef$var$Comment();
                            offset = comment.parse({
                                src: src
                            }, offset);
                            this.contents.push(comment);
                            atLineStart = false;
                            break;
                        default:
                            var iEnd = $DMDG9.N.endOfIndent(src, offset);
                            var context = {
                                atLineStart: atLineStart,
                                indent: -1,
                                inFlow: false,
                                inCollection: false,
                                lineStart: lineStart,
                                parent: this
                            };
                            var node = parseNode(context, iEnd);
                            if (!node) return this.valueRange.end = iEnd; // at next document start
                            this.contents.push(node);
                            offset = node.range.end;
                            atLineStart = false;
                            var ec = $fd1443a052b5ecef$var$grabCollectionEndComments(node);
                            if (ec) Array.prototype.push.apply(this.contents, ec);
                    }
                    offset = Document.startCommentOrEndBlankLine(src, offset);
                }
                this.valueRange.end = offset;
                if (src[offset]) {
                    this.documentEndMarker = new $DMDG9.R(offset, offset + 3);
                    offset += 3;
                    if (src[offset]) {
                        offset = $DMDG9.N.endOfWhiteSpace(src, offset);
                        if (src[offset] === '#') {
                            var _comment = new $fd1443a052b5ecef$var$Comment();
                            offset = _comment.parse({
                                src: src
                            }, offset);
                            this.contents.push(_comment);
                        }
                        switch(src[offset]){
                            case '\n':
                                offset += 1;
                                break;
                            case undefined:
                                break;
                            default:
                                this.error = new $DMDG9.Y(this, 'Document end marker line cannot have a non-comment suffix');
                        }
                    }
                }
                return offset;
            }
        },
        {
            key: "parse",
            value: function $fd1443a052b5ecef$export$98e6a39c04603d36(context, start) {
                context.root = this;
                this.context = context;
                var src = context.src;
                var offset = src.charCodeAt(start) === 65279 ? start + 1 : start; // skip BOM
                offset = this.parseDirectives(offset);
                offset = this.parseContents(offset);
                return offset;
            }
        },
        {
            key: "setOrigRanges",
            value: function setOrigRanges(cr, offset) {
                offset = $DMDG9.l($DMDG9.m(Document.prototype), "setOrigRanges", this).call(this, cr, offset);
                this.directives.forEach(function(node) {
                    offset = node.setOrigRanges(cr, offset);
                });
                if (this.directivesEndMarker) offset = this.directivesEndMarker.setOrigRange(cr, offset);
                this.contents.forEach(function(node) {
                    offset = node.setOrigRanges(cr, offset);
                });
                if (this.documentEndMarker) offset = this.documentEndMarker.setOrigRange(cr, offset);
                return offset;
            }
        },
        {
            key: "toString",
            value: function toString() {
                var contents = this.contents, directives = this.directives, value = this.value;
                if (value != null) return value;
                var str = directives.join('');
                if (contents.length > 0) {
                    if (directives.length > 0 || contents[0].type === $DMDG9.T.COMMENT) str += '---\n';
                    str += contents.join('');
                }
                if (str[str.length - 1] !== '\n') str += '\n';
                return str;
            }
        }
    ], [
        {
            key: "startCommentOrEndBlankLine",
            value: function startCommentOrEndBlankLine(src, start) {
                var offset = $DMDG9.N.endOfWhiteSpace(src, start);
                var ch = src[offset];
                return ch === '#' || ch === '\n' ? offset : start;
            }
        }
    ]);
    return Document;
}($DMDG9.N);
var $fd1443a052b5ecef$var$Alias = /*#__PURE__*/ function(_Node) {
    $DMDG9.j(Alias, _Node);
    var _super = $DMDG9.k(Alias);
    function Alias() {
        $DMDG9.c(this, Alias);
        return _super.apply(this, arguments);
    }
    $DMDG9.b(Alias, [
        {
            key: "parse",
            value: /**
     * Parses an *alias from the source
     *
     * @param {ParseContext} context
     * @param {number} start - Index of first character
     * @returns {number} - Index of the character after this scalar
     */ function $fd1443a052b5ecef$export$98e6a39c04603d36(context, start) {
                this.context = context;
                var src = context.src;
                var offset = $DMDG9.N.endOfIdentifier(src, start + 1);
                this.valueRange = new $DMDG9.R(start + 1, offset);
                offset = $DMDG9.N.endOfWhiteSpace(src, offset);
                offset = this.parseComment(offset);
                return offset;
            }
        }
    ]);
    return Alias;
}($DMDG9.N);
var $fd1443a052b5ecef$var$Chomp = {
    CLIP: 'CLIP',
    KEEP: 'KEEP',
    STRIP: 'STRIP'
};
var $fd1443a052b5ecef$var$BlockValue = /*#__PURE__*/ function(_Node) {
    $DMDG9.j(BlockValue, _Node);
    var _super = $DMDG9.k(BlockValue);
    function BlockValue(type, props) {
        var _this;
        $DMDG9.c(this, BlockValue);
        _this = _super.call(this, type, props);
        _this.blockIndent = null;
        _this.chomping = $fd1443a052b5ecef$var$Chomp.CLIP;
        _this.header = null;
        return _this;
    }
    $DMDG9.b(BlockValue, [
        {
            key: "includesTrailingLines",
            get: function get() {
                return this.chomping === $fd1443a052b5ecef$var$Chomp.KEEP;
            }
        },
        {
            key: "strValue",
            get: function get() {
                if (!this.valueRange || !this.context) return null;
                var _this$valueRange = this.valueRange, start = _this$valueRange.start, end = _this$valueRange.end;
                var _this$context = this.context, indent = _this$context.indent, src = _this$context.src;
                if (this.valueRange.isEmpty()) return '';
                var lastNewLine = null;
                var ch = src[end - 1];
                while(ch === '\n' || ch === '\t' || ch === ' '){
                    end -= 1;
                    if (end <= start) {
                        if (this.chomping === $fd1443a052b5ecef$var$Chomp.KEEP) break;
                        else return ''; // probably never happens
                    }
                    if (ch === '\n') lastNewLine = end;
                    ch = src[end - 1];
                }
                var keepStart = end + 1;
                if (lastNewLine) {
                    if (this.chomping === $fd1443a052b5ecef$var$Chomp.KEEP) {
                        keepStart = lastNewLine;
                        end = this.valueRange.end;
                    } else end = lastNewLine;
                }
                var bi = indent + this.blockIndent;
                var folded = this.type === $DMDG9.T.BLOCK_FOLDED;
                var atStart = true;
                var str = '';
                var sep = '';
                var prevMoreIndented = false;
                for(var i = start; i < end; ++i){
                    for(var j = 0; j < bi; ++j){
                        if (src[i] !== ' ') break;
                        i += 1;
                    }
                    var _ch = src[i];
                    if (_ch === '\n') {
                        if (sep === '\n') str += '\n';
                        else sep = '\n';
                    } else {
                        var lineEnd = $DMDG9.N.endOfLine(src, i);
                        var line = src.slice(i, lineEnd);
                        i = lineEnd;
                        if (folded && (_ch === ' ' || _ch === '\t') && i < keepStart) {
                            if (sep === ' ') sep = '\n';
                            else if (!prevMoreIndented && !atStart && sep === '\n') sep = '\n\n';
                            str += sep + line; //+ ((lineEnd < end && src[lineEnd]) || '')
                            sep = lineEnd < end && src[lineEnd] || '';
                            prevMoreIndented = true;
                        } else {
                            str += sep + line;
                            sep = folded && i < keepStart ? ' ' : '\n';
                            prevMoreIndented = false;
                        }
                        if (atStart && line !== '') atStart = false;
                    }
                }
                return this.chomping === $fd1443a052b5ecef$var$Chomp.STRIP ? str : str + '\n';
            }
        },
        {
            key: "parseBlockHeader",
            value: function parseBlockHeader(start) {
                var src = this.context.src;
                var offset = start + 1;
                var bi = '';
                while(true){
                    var ch = src[offset];
                    switch(ch){
                        case '-':
                            this.chomping = $fd1443a052b5ecef$var$Chomp.STRIP;
                            break;
                        case '+':
                            this.chomping = $fd1443a052b5ecef$var$Chomp.KEEP;
                            break;
                        case '0':
                        case '1':
                        case '2':
                        case '3':
                        case '4':
                        case '5':
                        case '6':
                        case '7':
                        case '8':
                        case '9':
                            bi += ch;
                            break;
                        default:
                            this.blockIndent = Number(bi) || null;
                            this.header = new $DMDG9.R(start, offset);
                            return offset;
                    }
                    offset += 1;
                }
            }
        },
        {
            key: "parseBlockValue",
            value: function parseBlockValue(start) {
                var _this$context2 = this.context, indent = _this$context2.indent, src = _this$context2.src;
                var explicit = !!this.blockIndent;
                var offset = start;
                var valueEnd = start;
                var minBlockIndent = 1;
                for(var ch = src[offset]; ch === '\n'; ch = src[offset]){
                    offset += 1;
                    if ($DMDG9.N.atDocumentBoundary(src, offset)) break;
                    var end = $DMDG9.N.endOfBlockIndent(src, indent, offset); // should not include tab?
                    if (end === null) break;
                    var _ch2 = src[end];
                    var lineIndent = end - (offset + indent);
                    if (!this.blockIndent) {
                        // no explicit block indent, none yet detected
                        if (src[end] !== '\n') {
                            // first line with non-whitespace content
                            if (lineIndent < minBlockIndent) {
                                var msg = 'Block scalars with more-indented leading empty lines must use an explicit indentation indicator';
                                this.error = new $DMDG9.g(this, msg);
                            }
                            this.blockIndent = lineIndent;
                        } else if (lineIndent > minBlockIndent) // empty line with more whitespace
                        minBlockIndent = lineIndent;
                    } else if (_ch2 && _ch2 !== '\n' && lineIndent < this.blockIndent) {
                        if (src[end] === '#') break;
                        if (!this.error) {
                            var _src = explicit ? 'explicit indentation indicator' : 'first line';
                            var _msg = "Block scalars must not be less indented than their ".concat(_src);
                            this.error = new $DMDG9.g(this, _msg);
                        }
                    }
                    if (src[end] === '\n') offset = end;
                    else offset = valueEnd = $DMDG9.N.endOfLine(src, end);
                }
                if (this.chomping !== $fd1443a052b5ecef$var$Chomp.KEEP) offset = src[valueEnd] ? valueEnd + 1 : valueEnd;
                this.valueRange = new $DMDG9.R(start + 1, offset);
                return offset;
            }
        },
        {
            key: "parse",
            value: function $fd1443a052b5ecef$export$98e6a39c04603d36(context, start) {
                this.context = context;
                var src = context.src;
                var offset = this.parseBlockHeader(start);
                offset = $DMDG9.N.endOfWhiteSpace(src, offset);
                offset = this.parseComment(offset);
                offset = this.parseBlockValue(offset);
                return offset;
            }
        },
        {
            key: "setOrigRanges",
            value: function setOrigRanges(cr, offset) {
                offset = $DMDG9.l($DMDG9.m(BlockValue.prototype), "setOrigRanges", this).call(this, cr, offset);
                return this.header ? this.header.setOrigRange(cr, offset) : offset;
            }
        }
    ]);
    return BlockValue;
}($DMDG9.N);
var $fd1443a052b5ecef$var$FlowCollection = /*#__PURE__*/ function(_Node) {
    $DMDG9.j(FlowCollection, _Node);
    var _super = $DMDG9.k(FlowCollection);
    function FlowCollection(type, props) {
        var _this;
        $DMDG9.c(this, FlowCollection);
        _this = _super.call(this, type, props);
        _this.items = null;
        return _this;
    }
    $DMDG9.b(FlowCollection, [
        {
            key: "prevNodeIsJsonLike",
            value: function prevNodeIsJsonLike() {
                var idx = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.items.length;
                var node = this.items[idx - 1];
                return !!node && (node.jsonLike || node.type === $DMDG9.T.COMMENT && this.prevNodeIsJsonLike(idx - 1));
            }
        },
        {
            key: "parse",
            value: function $fd1443a052b5ecef$export$98e6a39c04603d36(context, start) {
                this.context = context;
                var parseNode = context.parseNode, src = context.src;
                var indent = context.indent, lineStart = context.lineStart;
                var char = src[start]; // { or [
                this.items = [
                    {
                        char: char,
                        offset: start
                    }
                ];
                var offset = $DMDG9.N.endOfWhiteSpace(src, start + 1);
                char = src[offset];
                while(char && char !== ']' && char !== '}'){
                    switch(char){
                        case '\n':
                            lineStart = offset + 1;
                            var wsEnd = $DMDG9.N.endOfWhiteSpace(src, lineStart);
                            if (src[wsEnd] === '\n') {
                                var blankLine = new $fd1443a052b5ecef$var$BlankLine();
                                lineStart = blankLine.parse({
                                    src: src
                                }, lineStart);
                                this.items.push(blankLine);
                            }
                            offset = $DMDG9.N.endOfIndent(src, lineStart);
                            if (offset <= lineStart + indent) {
                                char = src[offset];
                                if (offset < lineStart + indent || char !== ']' && char !== '}') {
                                    var msg = 'Insufficient indentation in flow collection';
                                    this.error = new $DMDG9.g(this, msg);
                                }
                            }
                            break;
                        case ',':
                            this.items.push({
                                char: char,
                                offset: offset
                            });
                            offset += 1;
                            break;
                        case '#':
                            var comment = new $fd1443a052b5ecef$var$Comment();
                            offset = comment.parse({
                                src: src
                            }, offset);
                            this.items.push(comment);
                            break;
                        case '?':
                        case ':':
                            var next = src[offset + 1];
                            if (next === '\n' || next === '\t' || next === ' ' || next === ',' || char === ':' && this.prevNodeIsJsonLike()) {
                                this.items.push({
                                    char: char,
                                    offset: offset
                                });
                                offset += 1;
                                break;
                            }
                        // fallthrough
                        default:
                            var node = parseNode({
                                atLineStart: false,
                                inCollection: false,
                                inFlow: true,
                                indent: -1,
                                lineStart: lineStart,
                                parent: this
                            }, offset);
                            if (!node) {
                                // at next document start
                                this.valueRange = new $DMDG9.R(start, offset);
                                return offset;
                            }
                            this.items.push(node);
                            offset = $DMDG9.N.normalizeOffset(src, node.range.end);
                    }
                    offset = $DMDG9.N.endOfWhiteSpace(src, offset);
                    char = src[offset];
                }
                this.valueRange = new $DMDG9.R(start, offset + 1);
                if (char) {
                    this.items.push({
                        char: char,
                        offset: offset
                    });
                    offset = $DMDG9.N.endOfWhiteSpace(src, offset + 1);
                    offset = this.parseComment(offset);
                }
                return offset;
            }
        },
        {
            key: "setOrigRanges",
            value: function setOrigRanges(cr, offset) {
                offset = $DMDG9.l($DMDG9.m(FlowCollection.prototype), "setOrigRanges", this).call(this, cr, offset);
                this.items.forEach(function(node) {
                    if (node instanceof $DMDG9.N) offset = node.setOrigRanges(cr, offset);
                    else if (cr.length === 0) node.origOffset = node.offset;
                    else {
                        var i = offset;
                        while(i < cr.length){
                            if (cr[i] > node.offset) break;
                            else ++i;
                        }
                        node.origOffset = node.offset + i;
                        offset = i;
                    }
                });
                return offset;
            }
        },
        {
            key: "toString",
            value: function toString() {
                var src = this.context.src, items = this.items, range = this.range, value = this.value;
                if (value != null) return value;
                var nodes = items.filter(function(item) {
                    return item instanceof $DMDG9.N;
                });
                var str = '';
                var prevEnd = range.start;
                nodes.forEach(function(node) {
                    var prefix = src.slice(prevEnd, node.range.start);
                    prevEnd = node.range.end;
                    str += prefix + String(node);
                    if (str[str.length - 1] === '\n' && src[prevEnd - 1] !== '\n' && src[prevEnd] === '\n') // Comment range does not include the terminal newline, but its
                    // stringified value does. Without this fix, newlines at comment ends
                    // get duplicated.
                    prevEnd += 1;
                });
                str += src.slice(prevEnd, range.end);
                return $DMDG9.N.addStringTerminator(src, range.end, str);
            }
        }
    ]);
    return FlowCollection;
}($DMDG9.N);
var $fd1443a052b5ecef$var$QuoteDouble = /*#__PURE__*/ function(_Node) {
    $DMDG9.j(QuoteDouble, _Node);
    var _super = $DMDG9.k(QuoteDouble);
    function QuoteDouble() {
        $DMDG9.c(this, QuoteDouble);
        return _super.apply(this, arguments);
    }
    $DMDG9.b(QuoteDouble, [
        {
            key: "strValue",
            get: /**
     * @returns {string | { str: string, errors: YAMLSyntaxError[] }}
     */ function get() {
                if (!this.valueRange || !this.context) return null;
                var errors = [];
                var _this$valueRange = this.valueRange, start = _this$valueRange.start, end = _this$valueRange.end;
                var _this$context = this.context, indent = _this$context.indent, src = _this$context.src;
                if (src[end - 1] !== '"') errors.push(new $DMDG9.Y(this, 'Missing closing "quote')); // Using String#replace is too painful with escaped newlines preceded by
                // escaped backslashes; also, this should be faster.
                var str = '';
                for(var i = start + 1; i < end - 1; ++i){
                    var ch = src[i];
                    if (ch === '\n') {
                        if ($DMDG9.N.atDocumentBoundary(src, i + 1)) errors.push(new $DMDG9.g(this, 'Document boundary indicators are not allowed within string values'));
                        var _Node$foldNewline = $DMDG9.N.foldNewline(src, i, indent), fold = _Node$foldNewline.fold, offset = _Node$foldNewline.offset, error = _Node$foldNewline.error;
                        str += fold;
                        i = offset;
                        if (error) errors.push(new $DMDG9.g(this, 'Multi-line double-quoted string needs to be sufficiently indented'));
                    } else if (ch === '\\') {
                        i += 1;
                        switch(src[i]){
                            case '0':
                                str += '\0';
                                break;
                            // null character
                            case 'a':
                                str += '\x07';
                                break;
                            // bell character
                            case 'b':
                                str += '\b';
                                break;
                            // backspace
                            case 'e':
                                str += '\x1b';
                                break;
                            // escape character
                            case 'f':
                                str += '\f';
                                break;
                            // form feed
                            case 'n':
                                str += '\n';
                                break;
                            // line feed
                            case 'r':
                                str += '\r';
                                break;
                            // carriage return
                            case 't':
                                str += '\t';
                                break;
                            // horizontal tab
                            case 'v':
                                str += '\v';
                                break;
                            // vertical tab
                            case 'N':
                                str += "\x85";
                                break;
                            // Unicode next line
                            case '_':
                                str += "\xA0";
                                break;
                            // Unicode non-breaking space
                            case 'L':
                                str += "\u2028";
                                break;
                            // Unicode line separator
                            case 'P':
                                str += "\u2029";
                                break;
                            // Unicode paragraph separator
                            case ' ':
                                str += ' ';
                                break;
                            case '"':
                                str += '"';
                                break;
                            case '/':
                                str += '/';
                                break;
                            case '\\':
                                str += '\\';
                                break;
                            case '\t':
                                str += '\t';
                                break;
                            case 'x':
                                str += this.parseCharCode(i + 1, 2, errors);
                                i += 2;
                                break;
                            case 'u':
                                str += this.parseCharCode(i + 1, 4, errors);
                                i += 4;
                                break;
                            case 'U':
                                str += this.parseCharCode(i + 1, 8, errors);
                                i += 8;
                                break;
                            case '\n':
                                // skip escaped newlines, but still trim the following line
                                while(src[i + 1] === ' ' || src[i + 1] === '\t')i += 1;
                                break;
                            default:
                                errors.push(new $DMDG9.Y(this, "Invalid escape sequence ".concat(src.substr(i - 1, 2))));
                                str += '\\' + src[i];
                        }
                    } else if (ch === ' ' || ch === '\t') {
                        // trim trailing whitespace
                        var wsStart = i;
                        var next = src[i + 1];
                        while(next === ' ' || next === '\t'){
                            i += 1;
                            next = src[i + 1];
                        }
                        if (next !== '\n') str += i > wsStart ? src.slice(wsStart, i + 1) : ch;
                    } else str += ch;
                }
                return errors.length > 0 ? {
                    errors: errors,
                    str: str
                } : str;
            }
        },
        {
            key: "parseCharCode",
            value: function parseCharCode(offset, length, errors) {
                var src = this.context.src;
                var cc = src.substr(offset, length);
                var ok = cc.length === length && /^[0-9a-fA-F]+$/.test(cc);
                var code = ok ? parseInt(cc, 16) : NaN;
                if (isNaN(code)) {
                    errors.push(new $DMDG9.Y(this, "Invalid escape sequence ".concat(src.substr(offset - 2, length + 2))));
                    return src.substr(offset - 2, length + 2);
                }
                return String.fromCodePoint(code);
            }
        },
        {
            key: "parse",
            value: function $fd1443a052b5ecef$export$98e6a39c04603d36(context, start) {
                this.context = context;
                var src = context.src;
                var offset = QuoteDouble.endOfQuote(src, start + 1);
                this.valueRange = new $DMDG9.R(start, offset);
                offset = $DMDG9.N.endOfWhiteSpace(src, offset);
                offset = this.parseComment(offset);
                return offset;
            }
        }
    ], [
        {
            key: "endOfQuote",
            value: function endOfQuote(src, offset) {
                var ch = src[offset];
                while(ch && ch !== '"'){
                    offset += ch === '\\' ? 2 : 1;
                    ch = src[offset];
                }
                return offset + 1;
            }
        }
    ]);
    return QuoteDouble;
}($DMDG9.N);
var $fd1443a052b5ecef$var$QuoteSingle = /*#__PURE__*/ function(_Node) {
    $DMDG9.j(QuoteSingle, _Node);
    var _super = $DMDG9.k(QuoteSingle);
    function QuoteSingle() {
        $DMDG9.c(this, QuoteSingle);
        return _super.apply(this, arguments);
    }
    $DMDG9.b(QuoteSingle, [
        {
            key: "strValue",
            get: /**
     * @returns {string | { str: string, errors: YAMLSyntaxError[] }}
     */ function get() {
                if (!this.valueRange || !this.context) return null;
                var errors = [];
                var _this$valueRange = this.valueRange, start = _this$valueRange.start, end = _this$valueRange.end;
                var _this$context = this.context, indent = _this$context.indent, src = _this$context.src;
                if (src[end - 1] !== "'") errors.push(new $DMDG9.Y(this, "Missing closing 'quote"));
                var str = '';
                for(var i = start + 1; i < end - 1; ++i){
                    var ch = src[i];
                    if (ch === '\n') {
                        if ($DMDG9.N.atDocumentBoundary(src, i + 1)) errors.push(new $DMDG9.g(this, 'Document boundary indicators are not allowed within string values'));
                        var _Node$foldNewline = $DMDG9.N.foldNewline(src, i, indent), fold = _Node$foldNewline.fold, offset = _Node$foldNewline.offset, error = _Node$foldNewline.error;
                        str += fold;
                        i = offset;
                        if (error) errors.push(new $DMDG9.g(this, 'Multi-line single-quoted string needs to be sufficiently indented'));
                    } else if (ch === "'") {
                        str += ch;
                        i += 1;
                        if (src[i] !== "'") errors.push(new $DMDG9.Y(this, 'Unescaped single quote? This should not happen.'));
                    } else if (ch === ' ' || ch === '\t') {
                        // trim trailing whitespace
                        var wsStart = i;
                        var next = src[i + 1];
                        while(next === ' ' || next === '\t'){
                            i += 1;
                            next = src[i + 1];
                        }
                        if (next !== '\n') str += i > wsStart ? src.slice(wsStart, i + 1) : ch;
                    } else str += ch;
                }
                return errors.length > 0 ? {
                    errors: errors,
                    str: str
                } : str;
            }
        },
        {
            key: "parse",
            value: function $fd1443a052b5ecef$export$98e6a39c04603d36(context, start) {
                this.context = context;
                var src = context.src;
                var offset = QuoteSingle.endOfQuote(src, start + 1);
                this.valueRange = new $DMDG9.R(start, offset);
                offset = $DMDG9.N.endOfWhiteSpace(src, offset);
                offset = this.parseComment(offset);
                return offset;
            }
        }
    ], [
        {
            key: "endOfQuote",
            value: function endOfQuote(src, offset) {
                var ch = src[offset];
                while(ch)if (ch === "'") {
                    if (src[offset + 1] !== "'") break;
                    ch = src[offset += 2];
                } else ch = src[offset += 1];
                return offset + 1;
            }
        }
    ]);
    return QuoteSingle;
}($DMDG9.N);
function $fd1443a052b5ecef$var$createNewNode(type, props) {
    switch(type){
        case $DMDG9.T.ALIAS:
            return new $fd1443a052b5ecef$var$Alias(type, props);
        case $DMDG9.T.BLOCK_FOLDED:
        case $DMDG9.T.BLOCK_LITERAL:
            return new $fd1443a052b5ecef$var$BlockValue(type, props);
        case $DMDG9.T.FLOW_MAP:
        case $DMDG9.T.FLOW_SEQ:
            return new $fd1443a052b5ecef$var$FlowCollection(type, props);
        case $DMDG9.T.MAP_KEY:
        case $DMDG9.T.MAP_VALUE:
        case $DMDG9.T.SEQ_ITEM:
            return new $fd1443a052b5ecef$var$CollectionItem(type, props);
        case $DMDG9.T.COMMENT:
        case $DMDG9.T.PLAIN:
            return new $DMDG9.P(type, props);
        case $DMDG9.T.QUOTE_DOUBLE:
            return new $fd1443a052b5ecef$var$QuoteDouble(type, props);
        case $DMDG9.T.QUOTE_SINGLE:
            return new $fd1443a052b5ecef$var$QuoteSingle(type, props);
        /* istanbul ignore next */ default:
            return null;
    }
}
/**
 * @param {boolean} atLineStart - Node starts at beginning of line
 * @param {boolean} inFlow - true if currently in a flow context
 * @param {boolean} inCollection - true if currently in a collection context
 * @param {number} indent - Current level of indentation
 * @param {number} lineStart - Start of the current line
 * @param {Node} parent - The parent of the node
 * @param {string} src - Source of the YAML document
 */ var $fd1443a052b5ecef$var$ParseContext = /*#__PURE__*/ function() {
    function ParseContext() {
        var _this = this;
        var orig = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}, atLineStart = _ref.atLineStart, inCollection = _ref.inCollection, inFlow = _ref.inFlow, indent = _ref.indent, lineStart = _ref.lineStart, parent = _ref.parent;
        $DMDG9.c(this, ParseContext);
        $DMDG9.e(this, "parseNode", function(overlay, start) {
            if ($DMDG9.N.atDocumentBoundary(_this.src, start)) return null;
            var context = new ParseContext(_this, overlay);
            var _context$parseProps = context.parseProps(start), props = _context$parseProps.props, type = _context$parseProps.type, valueStart = _context$parseProps.valueStart;
            var node = $fd1443a052b5ecef$var$createNewNode(type, props);
            var offset = node.parse(context, valueStart);
            node.range = new $DMDG9.R(start, offset);
            /* istanbul ignore if */ if (offset <= start) {
                // This should never happen, but if it does, let's make sure to at least
                // step one character forward to avoid a busy loop.
                node.error = new Error("Node#parse consumed no characters");
                node.error.parseEnd = offset;
                node.error.source = node;
                node.range.end = start + 1;
            }
            if (context.nodeStartsCollection(node)) {
                if (!node.error && !context.atLineStart && context.parent.type === $DMDG9.T.DOCUMENT) node.error = new $DMDG9.Y(node, 'Block collection must not have preceding content here (e.g. directives-end indicator)');
                var collection = new $fd1443a052b5ecef$var$Collection(node);
                offset = collection.parse(new ParseContext(context), offset);
                collection.range = new $DMDG9.R(start, offset);
                return collection;
            }
            return node;
        });
        this.atLineStart = atLineStart != null ? atLineStart : orig.atLineStart || false;
        this.inCollection = inCollection != null ? inCollection : orig.inCollection || false;
        this.inFlow = inFlow != null ? inFlow : orig.inFlow || false;
        this.indent = indent != null ? indent : orig.indent;
        this.lineStart = lineStart != null ? lineStart : orig.lineStart;
        this.parent = parent != null ? parent : orig.parent || {};
        this.root = orig.root;
        this.src = orig.src;
    }
    $DMDG9.b(ParseContext, [
        {
            key: "nodeStartsCollection",
            value: function nodeStartsCollection(node) {
                var inCollection = this.inCollection, inFlow = this.inFlow, src = this.src;
                if (inCollection || inFlow) return false;
                if (node instanceof $fd1443a052b5ecef$var$CollectionItem) return true; // check for implicit key
                var offset = node.range.end;
                if (src[offset] === '\n' || src[offset - 1] === '\n') return false;
                offset = $DMDG9.N.endOfWhiteSpace(src, offset);
                return src[offset] === ':';
            } // Anchor and tag are before type, which determines the node implementation
        },
        {
            key: "parseProps",
            value: function parseProps(offset) {
                var inFlow = this.inFlow, parent = this.parent, src = this.src;
                var props = [];
                var lineHasProps = false;
                offset = this.atLineStart ? $DMDG9.N.endOfIndent(src, offset) : $DMDG9.N.endOfWhiteSpace(src, offset);
                var ch = src[offset];
                while(ch === $DMDG9.C.ANCHOR || ch === $DMDG9.C.COMMENT || ch === $DMDG9.C.TAG || ch === '\n'){
                    if (ch === '\n') {
                        var inEnd = offset;
                        var lineStart = void 0;
                        do {
                            lineStart = inEnd + 1;
                            inEnd = $DMDG9.N.endOfIndent(src, lineStart);
                        }while (src[inEnd] === '\n')
                        var indentDiff = inEnd - (lineStart + this.indent);
                        var noIndicatorAsIndent = parent.type === $DMDG9.T.SEQ_ITEM && parent.context.atLineStart;
                        if (src[inEnd] !== '#' && !$DMDG9.N.nextNodeIsIndented(src[inEnd], indentDiff, !noIndicatorAsIndent)) break;
                        this.atLineStart = true;
                        this.lineStart = lineStart;
                        lineHasProps = false;
                        offset = inEnd;
                    } else if (ch === $DMDG9.C.COMMENT) {
                        var end = $DMDG9.N.endOfLine(src, offset + 1);
                        props.push(new $DMDG9.R(offset, end));
                        offset = end;
                    } else {
                        var _end = $DMDG9.N.endOfIdentifier(src, offset + 1);
                        if (ch === $DMDG9.C.TAG && src[_end] === ',' && /^[a-zA-Z0-9-]+\.[a-zA-Z0-9-]+,\d\d\d\d(-\d\d){0,2}\/\S/.test(src.slice(offset + 1, _end + 13))) // Let's presume we're dealing with a YAML 1.0 domain tag here, rather
                        // than an empty but 'foo.bar' private-tagged node in a flow collection
                        // followed without whitespace by a plain string starting with a year
                        // or date divided by something.
                        _end = $DMDG9.N.endOfIdentifier(src, _end + 5);
                        props.push(new $DMDG9.R(offset, _end));
                        lineHasProps = true;
                        offset = $DMDG9.N.endOfWhiteSpace(src, _end);
                    }
                    ch = src[offset];
                } // '- &a : b' has an anchor on an empty node
                if (lineHasProps && ch === ':' && $DMDG9.N.atBlank(src, offset + 1, true)) offset -= 1;
                var type = ParseContext.parseType(src, offset, inFlow);
                return {
                    props: props,
                    type: type,
                    valueStart: offset
                };
            }
        }
    ], [
        {
            key: "parseType",
            value: function parseType(src, offset, inFlow) {
                switch(src[offset]){
                    case '*':
                        return $DMDG9.T.ALIAS;
                    case '>':
                        return $DMDG9.T.BLOCK_FOLDED;
                    case '|':
                        return $DMDG9.T.BLOCK_LITERAL;
                    case '{':
                        return $DMDG9.T.FLOW_MAP;
                    case '[':
                        return $DMDG9.T.FLOW_SEQ;
                    case '?':
                        return !inFlow && $DMDG9.N.atBlank(src, offset + 1, true) ? $DMDG9.T.MAP_KEY : $DMDG9.T.PLAIN;
                    case ':':
                        return !inFlow && $DMDG9.N.atBlank(src, offset + 1, true) ? $DMDG9.T.MAP_VALUE : $DMDG9.T.PLAIN;
                    case '-':
                        return !inFlow && $DMDG9.N.atBlank(src, offset + 1, true) ? $DMDG9.T.SEQ_ITEM : $DMDG9.T.PLAIN;
                    case '"':
                        return $DMDG9.T.QUOTE_DOUBLE;
                    case "'":
                        return $DMDG9.T.QUOTE_SINGLE;
                    default:
                        return $DMDG9.T.PLAIN;
                }
            }
        }
    ]);
    return ParseContext;
}();
// Published as 'yaml/parse-cst'
function $fd1443a052b5ecef$export$98e6a39c04603d36(src) {
    var cr = [];
    if (src.indexOf('\r') !== -1) src = src.replace(/\r\n?/g, function(match, offset) {
        if (match.length > 1) cr.push(offset);
        return '\n';
    });
    var documents = [];
    var offset1 = 0;
    do {
        var doc = new $fd1443a052b5ecef$var$Document();
        var context = new $fd1443a052b5ecef$var$ParseContext({
            src: src
        });
        offset1 = doc.parse(context, offset1);
        documents.push(doc);
    }while (offset1 < src.length)
    documents.setOrigRanges = function() {
        if (cr.length === 0) return false;
        for(var i = 1; i < cr.length; ++i)cr[i] -= i;
        var crOffset = 0;
        for(var _i = 0; _i < documents.length; ++_i)crOffset = documents[_i].setOrigRanges(cr, crOffset);
        cr.splice(0, cr.length);
        return true;
    };
    documents.toString = function() {
        return documents.join('...\n');
    };
    return documents;
}

});

parcelRequire.register("42uI7", function(module, exports) {

$parcel$export(module.exports, "f", () => $2f0f2bd5b0ade301$export$2d1720544b23b823);
$parcel$export(module.exports, "N", () => $2f0f2bd5b0ade301$export$a07804094c3ecf2d);
$parcel$export(module.exports, "t", () => $2f0f2bd5b0ade301$export$625550452a3fa3ec);
$parcel$export(module.exports, "S", () => $2f0f2bd5b0ade301$export$25ce5a424b770e84);
$parcel$export(module.exports, "e", () => $2f0f2bd5b0ade301$export$f1e1789686576879);
$parcel$export(module.exports, "C", () => $2f0f2bd5b0ade301$export$e7094788287c5e9b);
$parcel$export(module.exports, "Y", () => $2f0f2bd5b0ade301$export$8743009a87fcb00f);
$parcel$export(module.exports, "P", () => $2f0f2bd5b0ade301$export$56c0d5a1e737357d);
$parcel$export(module.exports, "A", () => $2f0f2bd5b0ade301$export$ebd11618f299a286);
$parcel$export(module.exports, "l", () => $2f0f2bd5b0ade301$export$882b5998b3b9117c);
$parcel$export(module.exports, "d", () => $2f0f2bd5b0ade301$export$4368d992c4eafac0);
$parcel$export(module.exports, "M", () => $2f0f2bd5b0ade301$export$3a1a48c8f6ef640e);
$parcel$export(module.exports, "b", () => $2f0f2bd5b0ade301$export$8b22cf2602fb60ce);
$parcel$export(module.exports, "a", () => $2f0f2bd5b0ade301$export$407448d2b89b1813);
$parcel$export(module.exports, "i", () => $2f0f2bd5b0ade301$export$23f2a1d2818174ef);
$parcel$export(module.exports, "n", () => $2f0f2bd5b0ade301$export$7ccc53e8f1e7dfc5);
$parcel$export(module.exports, "s", () => $2f0f2bd5b0ade301$export$2408f22a0fab9ae5);
$parcel$export(module.exports, "c", () => $2f0f2bd5b0ade301$export$db3b6bfb95261072);
$parcel$export(module.exports, "k", () => $2f0f2bd5b0ade301$export$342063e11d6c3cad);
$parcel$export(module.exports, "j", () => $2f0f2bd5b0ade301$export$35e795649ee09318);
$parcel$export(module.exports, "r", () => $2f0f2bd5b0ade301$export$43caf9889c228507);
$parcel$export(module.exports, "g", () => $2f0f2bd5b0ade301$export$39b482c5e57630a8);
$parcel$export(module.exports, "h", () => $2f0f2bd5b0ade301$export$dda1d9f60106f0e9);

var $DMDG9 = parcelRequire("DMDG9");
function $2f0f2bd5b0ade301$var$addCommentBefore(str, indent, comment) {
    if (!comment) return str;
    var cc = comment.replace(/[\s\S]^/gm, "$&".concat(indent, "#"));
    return "#".concat(cc, "\n").concat(indent).concat(str);
}
function $2f0f2bd5b0ade301$export$2d1720544b23b823(str, indent, comment) {
    return !comment ? str : comment.indexOf('\n') === -1 ? "".concat(str, " #").concat(comment) : "".concat(str, "\n") + comment.replace(/^/gm, "".concat(indent || '', "#"));
}
var $2f0f2bd5b0ade301$export$a07804094c3ecf2d = function $2f0f2bd5b0ade301$export$a07804094c3ecf2d() {
    $DMDG9.c(this, $2f0f2bd5b0ade301$export$a07804094c3ecf2d);
};
function $2f0f2bd5b0ade301$export$625550452a3fa3ec(value, arg, ctx) {
    if (Array.isArray(value)) return value.map(function(v, i) {
        return $2f0f2bd5b0ade301$export$625550452a3fa3ec(v, String(i), ctx);
    });
    if (value && typeof value.toJSON === 'function') {
        var anchor = ctx && ctx.anchors && ctx.anchors.get(value);
        if (anchor) ctx.onCreate = function(res) {
            anchor.res = res;
            delete ctx.onCreate;
        };
        var res1 = value.toJSON(arg, ctx);
        if (anchor && ctx.onCreate) ctx.onCreate(res1);
        return res1;
    }
    if ((!ctx || !ctx.keep) && typeof value === 'bigint') return Number(value);
    return value;
}
var $2f0f2bd5b0ade301$export$25ce5a424b770e84 = /*#__PURE__*/ function(_Node) {
    $DMDG9.j($2f0f2bd5b0ade301$export$25ce5a424b770e84, _Node);
    var _super = $DMDG9.k($2f0f2bd5b0ade301$export$25ce5a424b770e84);
    function $2f0f2bd5b0ade301$export$25ce5a424b770e84(value) {
        var _this;
        $DMDG9.c(this, $2f0f2bd5b0ade301$export$25ce5a424b770e84);
        _this = _super.call(this);
        _this.value = value;
        return _this;
    }
    $DMDG9.b($2f0f2bd5b0ade301$export$25ce5a424b770e84, [
        {
            key: "toJSON",
            value: function toJSON$1(arg, ctx) {
                return ctx && ctx.keep ? this.value : $2f0f2bd5b0ade301$export$625550452a3fa3ec(this.value, arg, ctx);
            }
        },
        {
            key: "toString",
            value: function toString() {
                return String(this.value);
            }
        }
    ]);
    return $2f0f2bd5b0ade301$export$25ce5a424b770e84;
}($2f0f2bd5b0ade301$export$a07804094c3ecf2d);
function $2f0f2bd5b0ade301$var$collectionFromPath(schema, path, value) {
    var v = value;
    for(var i = path.length - 1; i >= 0; --i){
        var k = path[i];
        if (Number.isInteger(k) && k >= 0) {
            var a = [];
            a[k] = v;
            v = a;
        } else {
            var o = {};
            Object.defineProperty(o, k, {
                value: v,
                writable: true,
                enumerable: true,
                configurable: true
            });
            v = o;
        }
    }
    return schema.createNode(v, false);
} // null, undefined, or an empty non-string iterable (e.g. [])
var $2f0f2bd5b0ade301$export$f1e1789686576879 = function $2f0f2bd5b0ade301$export$f1e1789686576879(path) {
    return path == null || $DMDG9.a(path) === 'object' && path[Symbol.iterator]().next().done;
};
var $2f0f2bd5b0ade301$export$e7094788287c5e9b = /*#__PURE__*/ function(_Node) {
    $DMDG9.j($2f0f2bd5b0ade301$export$e7094788287c5e9b, _Node);
    var _super = $DMDG9.k($2f0f2bd5b0ade301$export$e7094788287c5e9b);
    function $2f0f2bd5b0ade301$export$e7094788287c5e9b(schema) {
        var _this;
        $DMDG9.c(this, $2f0f2bd5b0ade301$export$e7094788287c5e9b);
        _this = _super.call(this);
        $DMDG9.e($DMDG9.p(_this), "items", []);
        _this.schema = schema;
        return _this;
    }
    $DMDG9.b($2f0f2bd5b0ade301$export$e7094788287c5e9b, [
        {
            key: "addIn",
            value: function addIn(path, value) {
                if ($2f0f2bd5b0ade301$export$f1e1789686576879(path)) this.add(value);
                else {
                    var _path = $DMDG9.q(path), key = _path[0], rest = _path.slice(1);
                    var node = this.get(key, true);
                    if (node instanceof $2f0f2bd5b0ade301$export$e7094788287c5e9b) node.addIn(rest, value);
                    else if (node === undefined && this.schema) this.set(key, $2f0f2bd5b0ade301$var$collectionFromPath(this.schema, rest, value));
                    else throw new Error("Expected YAML collection at ".concat(key, ". Remaining path: ").concat(rest));
                }
            }
        },
        {
            key: "deleteIn",
            value: function deleteIn(_ref) {
                var _ref2 = $DMDG9.q(_ref), key = _ref2[0], rest = _ref2.slice(1);
                if (rest.length === 0) return this.delete(key);
                var node = this.get(key, true);
                if (node instanceof $2f0f2bd5b0ade301$export$e7094788287c5e9b) return node.deleteIn(rest);
                else throw new Error("Expected YAML collection at ".concat(key, ". Remaining path: ").concat(rest));
            }
        },
        {
            key: "getIn",
            value: function getIn(_ref3, keepScalar) {
                var _ref4 = $DMDG9.q(_ref3), key = _ref4[0], rest = _ref4.slice(1);
                var node = this.get(key, true);
                if (rest.length === 0) return !keepScalar && node instanceof $2f0f2bd5b0ade301$export$25ce5a424b770e84 ? node.value : node;
                else return node instanceof $2f0f2bd5b0ade301$export$e7094788287c5e9b ? node.getIn(rest, keepScalar) : undefined;
            }
        },
        {
            key: "hasAllNullValues",
            value: function hasAllNullValues() {
                return this.items.every(function(node) {
                    if (!node || node.type !== 'PAIR') return false;
                    var n = node.value;
                    return n == null || n instanceof $2f0f2bd5b0ade301$export$25ce5a424b770e84 && n.value == null && !n.commentBefore && !n.comment && !n.tag;
                });
            }
        },
        {
            key: "hasIn",
            value: function hasIn(_ref5) {
                var _ref6 = $DMDG9.q(_ref5), key = _ref6[0], rest = _ref6.slice(1);
                if (rest.length === 0) return this.has(key);
                var node = this.get(key, true);
                return node instanceof $2f0f2bd5b0ade301$export$e7094788287c5e9b ? node.hasIn(rest) : false;
            }
        },
        {
            key: "setIn",
            value: function setIn(_ref7, value) {
                var _ref8 = $DMDG9.q(_ref7), key = _ref8[0], rest = _ref8.slice(1);
                if (rest.length === 0) this.set(key, value);
                else {
                    var node = this.get(key, true);
                    if (node instanceof $2f0f2bd5b0ade301$export$e7094788287c5e9b) node.setIn(rest, value);
                    else if (node === undefined && this.schema) this.set(key, $2f0f2bd5b0ade301$var$collectionFromPath(this.schema, rest, value));
                    else throw new Error("Expected YAML collection at ".concat(key, ". Remaining path: ").concat(rest));
                }
            } // overridden in implementations
        },
        {
            key: "toJSON",
            value: function $2f0f2bd5b0ade301$export$625550452a3fa3ec() {
                return null;
            }
        },
        {
            key: "toString",
            value: function toString(ctx, _ref9, onComment, onChompKeep) {
                var _this2 = this;
                var blockItem = _ref9.blockItem, flowChars = _ref9.flowChars, isMap = _ref9.isMap, itemIndent = _ref9.itemIndent;
                var _ctx = ctx, indent = _ctx.indent, indentStep = _ctx.indentStep, stringify = _ctx.stringify;
                var inFlow = this.type === $DMDG9.T.FLOW_MAP || this.type === $DMDG9.T.FLOW_SEQ || ctx.inFlow;
                if (inFlow) itemIndent += indentStep;
                var allNullValues = isMap && this.hasAllNullValues();
                ctx = Object.assign({}, ctx, {
                    allNullValues: allNullValues,
                    indent: itemIndent,
                    inFlow: inFlow,
                    type: null
                });
                var chompKeep = false;
                var hasItemWithNewLine = false;
                var nodes1 = this.items.reduce(function(nodes, item, i) {
                    var comment;
                    if (item) {
                        if (!chompKeep && item.spaceBefore) nodes.push({
                            type: 'comment',
                            str: ''
                        });
                        if (item.commentBefore) item.commentBefore.match(/^.*$/gm).forEach(function(line) {
                            nodes.push({
                                type: 'comment',
                                str: "#".concat(line)
                            });
                        });
                        if (item.comment) comment = item.comment;
                        if (inFlow && (!chompKeep && item.spaceBefore || item.commentBefore || item.comment || item.key && (item.key.commentBefore || item.key.comment) || item.value && (item.value.commentBefore || item.value.comment))) hasItemWithNewLine = true;
                    }
                    chompKeep = false;
                    var str = stringify(item, ctx, function() {
                        return comment = null;
                    }, function() {
                        return chompKeep = true;
                    });
                    if (inFlow && !hasItemWithNewLine && str.includes('\n')) hasItemWithNewLine = true;
                    if (inFlow && i < _this2.items.length - 1) str += ',';
                    str = $2f0f2bd5b0ade301$export$2d1720544b23b823(str, itemIndent, comment);
                    if (chompKeep && (comment || inFlow)) chompKeep = false;
                    nodes.push({
                        type: 'item',
                        str: str
                    });
                    return nodes;
                }, []);
                var str1;
                if (nodes1.length === 0) str1 = flowChars.start + flowChars.end;
                else if (inFlow) {
                    var start = flowChars.start, end = flowChars.end;
                    var strings = nodes1.map(function(n) {
                        return n.str;
                    });
                    if (hasItemWithNewLine || strings.reduce(function(sum, str) {
                        return sum + str.length + 2;
                    }, 2) > $2f0f2bd5b0ade301$export$e7094788287c5e9b.maxFlowStringSingleLineLength) {
                        str1 = start;
                        var _iterator = $DMDG9._(strings), _step;
                        try {
                            for(_iterator.s(); !(_step = _iterator.n()).done;){
                                var s = _step.value;
                                str1 += s ? "\n".concat(indentStep).concat(indent).concat(s) : '\n';
                            }
                        } catch (err) {
                            _iterator.e(err);
                        } finally{
                            _iterator.f();
                        }
                        str1 += "\n".concat(indent).concat(end);
                    } else str1 = "".concat(start, " ").concat(strings.join(' '), " ").concat(end);
                } else {
                    var _strings = nodes1.map(blockItem);
                    str1 = _strings.shift();
                    var _iterator2 = $DMDG9._(_strings), _step2;
                    try {
                        for(_iterator2.s(); !(_step2 = _iterator2.n()).done;){
                            var _s = _step2.value;
                            str1 += _s ? "\n".concat(indent).concat(_s) : '\n';
                        }
                    } catch (err) {
                        _iterator2.e(err);
                    } finally{
                        _iterator2.f();
                    }
                }
                if (this.comment) {
                    str1 += '\n' + this.comment.replace(/^/gm, "".concat(indent, "#"));
                    if (onComment) onComment();
                } else if (chompKeep && onChompKeep) onChompKeep();
                return str1;
            }
        }
    ]);
    return $2f0f2bd5b0ade301$export$e7094788287c5e9b;
}($2f0f2bd5b0ade301$export$a07804094c3ecf2d);
$DMDG9.e($2f0f2bd5b0ade301$export$e7094788287c5e9b, "maxFlowStringSingleLineLength", 60);
function $2f0f2bd5b0ade301$var$asItemIndex(key) {
    var idx = key instanceof $2f0f2bd5b0ade301$export$25ce5a424b770e84 ? key.value : key;
    if (idx && typeof idx === 'string') idx = Number(idx);
    return Number.isInteger(idx) && idx >= 0 ? idx : null;
}
var $2f0f2bd5b0ade301$export$8743009a87fcb00f = /*#__PURE__*/ function(_Collection) {
    $DMDG9.j($2f0f2bd5b0ade301$export$8743009a87fcb00f, _Collection);
    var _super = $DMDG9.k($2f0f2bd5b0ade301$export$8743009a87fcb00f);
    function $2f0f2bd5b0ade301$export$8743009a87fcb00f() {
        $DMDG9.c(this, $2f0f2bd5b0ade301$export$8743009a87fcb00f);
        return _super.apply(this, arguments);
    }
    $DMDG9.b($2f0f2bd5b0ade301$export$8743009a87fcb00f, [
        {
            key: "add",
            value: function add(value) {
                this.items.push(value);
            }
        },
        {
            key: "delete",
            value: function _delete(key) {
                var idx = $2f0f2bd5b0ade301$var$asItemIndex(key);
                if (typeof idx !== 'number') return false;
                var del = this.items.splice(idx, 1);
                return del.length > 0;
            }
        },
        {
            key: "get",
            value: function get(key, keepScalar) {
                var idx = $2f0f2bd5b0ade301$var$asItemIndex(key);
                if (typeof idx !== 'number') return undefined;
                var it = this.items[idx];
                return !keepScalar && it instanceof $2f0f2bd5b0ade301$export$25ce5a424b770e84 ? it.value : it;
            }
        },
        {
            key: "has",
            value: function has(key) {
                var idx = $2f0f2bd5b0ade301$var$asItemIndex(key);
                return typeof idx === 'number' && idx < this.items.length;
            }
        },
        {
            key: "set",
            value: function set(key, value) {
                var idx = $2f0f2bd5b0ade301$var$asItemIndex(key);
                if (typeof idx !== 'number') throw new Error("Expected a valid index, not ".concat(key, "."));
                this.items[idx] = value;
            }
        },
        {
            key: "toJSON",
            value: function toJSON$1(_, ctx) {
                var seq = [];
                if (ctx && ctx.onCreate) ctx.onCreate(seq);
                var i = 0;
                var _iterator = $DMDG9._(this.items), _step;
                try {
                    for(_iterator.s(); !(_step = _iterator.n()).done;){
                        var item = _step.value;
                        seq.push($2f0f2bd5b0ade301$export$625550452a3fa3ec(item, String(i++), ctx));
                    }
                } catch (err) {
                    _iterator.e(err);
                } finally{
                    _iterator.f();
                }
                return seq;
            }
        },
        {
            key: "toString",
            value: function toString(ctx, onComment, onChompKeep) {
                if (!ctx) return JSON.stringify(this);
                return $DMDG9.l($DMDG9.m($2f0f2bd5b0ade301$export$8743009a87fcb00f.prototype), "toString", this).call(this, ctx, {
                    blockItem: function blockItem(n) {
                        return n.type === 'comment' ? n.str : "- ".concat(n.str);
                    },
                    flowChars: {
                        start: '[',
                        end: ']'
                    },
                    isMap: false,
                    itemIndent: (ctx.indent || '') + '  '
                }, onComment, onChompKeep);
            }
        }
    ]);
    return $2f0f2bd5b0ade301$export$8743009a87fcb00f;
}($2f0f2bd5b0ade301$export$e7094788287c5e9b);
var $2f0f2bd5b0ade301$var$stringifyKey = function stringifyKey(key, jsKey, ctx) {
    if (jsKey === null) return '';
    if ($DMDG9.a(jsKey) !== 'object') return String(jsKey);
    if (key instanceof $2f0f2bd5b0ade301$export$a07804094c3ecf2d && ctx && ctx.doc) return key.toString({
        anchors: Object.create(null),
        doc: ctx.doc,
        indent: '',
        indentStep: ctx.indentStep,
        inFlow: true,
        inStringifyKey: true,
        stringify: ctx.stringify
    });
    return JSON.stringify(jsKey);
};
var $2f0f2bd5b0ade301$export$56c0d5a1e737357d = /*#__PURE__*/ function(_Node) {
    $DMDG9.j($2f0f2bd5b0ade301$export$56c0d5a1e737357d, _Node);
    var _super = $DMDG9.k($2f0f2bd5b0ade301$export$56c0d5a1e737357d);
    function $2f0f2bd5b0ade301$export$56c0d5a1e737357d(key) {
        var _this;
        var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
        $DMDG9.c(this, $2f0f2bd5b0ade301$export$56c0d5a1e737357d);
        _this = _super.call(this);
        _this.key = key;
        _this.value = value;
        _this.type = $2f0f2bd5b0ade301$export$56c0d5a1e737357d.Type.PAIR;
        return _this;
    }
    $DMDG9.b($2f0f2bd5b0ade301$export$56c0d5a1e737357d, [
        {
            key: "commentBefore",
            get: function get() {
                return this.key instanceof $2f0f2bd5b0ade301$export$a07804094c3ecf2d ? this.key.commentBefore : undefined;
            },
            set: function set(cb) {
                if (this.key == null) this.key = new $2f0f2bd5b0ade301$export$25ce5a424b770e84(null);
                if (this.key instanceof $2f0f2bd5b0ade301$export$a07804094c3ecf2d) this.key.commentBefore = cb;
                else {
                    var msg = 'Pair.commentBefore is an alias for Pair.key.commentBefore. To set it, the key must be a Node.';
                    throw new Error(msg);
                }
            }
        },
        {
            key: "addToJSMap",
            value: function addToJSMap(ctx, map) {
                var key = $2f0f2bd5b0ade301$export$625550452a3fa3ec(this.key, '', ctx);
                if (map instanceof Map) {
                    var value = $2f0f2bd5b0ade301$export$625550452a3fa3ec(this.value, key, ctx);
                    map.set(key, value);
                } else if (map instanceof Set) map.add(key);
                else {
                    var stringKey = $2f0f2bd5b0ade301$var$stringifyKey(this.key, key, ctx);
                    var _value = $2f0f2bd5b0ade301$export$625550452a3fa3ec(this.value, stringKey, ctx);
                    if (stringKey in map) Object.defineProperty(map, stringKey, {
                        value: _value,
                        writable: true,
                        enumerable: true,
                        configurable: true
                    });
                    else map[stringKey] = _value;
                }
                return map;
            }
        },
        {
            key: "toJSON",
            value: function $2f0f2bd5b0ade301$export$625550452a3fa3ec(_, ctx) {
                var pair = ctx && ctx.mapAsMap ? new Map() : {};
                return this.addToJSMap(ctx, pair);
            }
        },
        {
            key: "toString",
            value: function toString(ctx, onComment, onChompKeep) {
                if (!ctx || !ctx.doc) return JSON.stringify(this);
                var _ctx$doc$options = ctx.doc.options, indentSize = _ctx$doc$options.indent, indentSeq = _ctx$doc$options.indentSeq, simpleKeys = _ctx$doc$options.simpleKeys;
                var key = this.key, value = this.value;
                var keyComment = key instanceof $2f0f2bd5b0ade301$export$a07804094c3ecf2d && key.comment;
                if (simpleKeys) {
                    if (keyComment) throw new Error('With simple keys, key nodes cannot have comments');
                    if (key instanceof $2f0f2bd5b0ade301$export$e7094788287c5e9b) {
                        var msg = 'With simple keys, collection cannot be used as a key value';
                        throw new Error(msg);
                    }
                }
                var explicitKey = !simpleKeys && (!key || keyComment || (key instanceof $2f0f2bd5b0ade301$export$a07804094c3ecf2d ? key instanceof $2f0f2bd5b0ade301$export$e7094788287c5e9b || key.type === $DMDG9.T.BLOCK_FOLDED || key.type === $DMDG9.T.BLOCK_LITERAL : $DMDG9.a(key) === 'object'));
                var _ctx = ctx, doc = _ctx.doc, indent = _ctx.indent, indentStep = _ctx.indentStep, stringify = _ctx.stringify;
                ctx = Object.assign({}, ctx, {
                    implicitKey: !explicitKey,
                    indent: indent + indentStep
                });
                var chompKeep = false;
                var str = stringify(key, ctx, function() {
                    return keyComment = null;
                }, function() {
                    return chompKeep = true;
                });
                str = $2f0f2bd5b0ade301$export$2d1720544b23b823(str, ctx.indent, keyComment);
                if (!explicitKey && str.length > 1024) {
                    if (simpleKeys) throw new Error('With simple keys, single line scalar must not span more than 1024 characters');
                    explicitKey = true;
                }
                if (ctx.allNullValues && !simpleKeys) {
                    if (this.comment) {
                        str = $2f0f2bd5b0ade301$export$2d1720544b23b823(str, ctx.indent, this.comment);
                        if (onComment) onComment();
                    } else if (chompKeep && !keyComment && onChompKeep) onChompKeep();
                    return ctx.inFlow && !explicitKey ? str : "? ".concat(str);
                }
                str = explicitKey ? "? ".concat(str, "\n").concat(indent, ":") : "".concat(str, ":");
                if (this.comment) {
                    // expected (but not strictly required) to be a single-line comment
                    str = $2f0f2bd5b0ade301$export$2d1720544b23b823(str, ctx.indent, this.comment);
                    if (onComment) onComment();
                }
                var vcb = '';
                var valueComment = null;
                if (value instanceof $2f0f2bd5b0ade301$export$a07804094c3ecf2d) {
                    if (value.spaceBefore) vcb = '\n';
                    if (value.commentBefore) {
                        var cs = value.commentBefore.replace(/^/gm, "".concat(ctx.indent, "#"));
                        vcb += "\n".concat(cs);
                    }
                    valueComment = value.comment;
                } else if (value && $DMDG9.a(value) === 'object') value = doc.schema.createNode(value, true);
                ctx.implicitKey = false;
                if (!explicitKey && !this.comment && value instanceof $2f0f2bd5b0ade301$export$25ce5a424b770e84) ctx.indentAtStart = str.length + 1;
                chompKeep = false;
                if (!indentSeq && indentSize >= 2 && !ctx.inFlow && !explicitKey && value instanceof $2f0f2bd5b0ade301$export$8743009a87fcb00f && value.type !== $DMDG9.T.FLOW_SEQ && !value.tag && !doc.anchors.getName(value)) // If indentSeq === false, consider '- ' as part of indentation where possible
                ctx.indent = ctx.indent.substr(2);
                var valueStr = stringify(value, ctx, function() {
                    return valueComment = null;
                }, function() {
                    return chompKeep = true;
                });
                var ws = ' ';
                if (vcb || this.comment) ws = "".concat(vcb, "\n").concat(ctx.indent);
                else if (!explicitKey && value instanceof $2f0f2bd5b0ade301$export$e7094788287c5e9b) {
                    var flow = valueStr[0] === '[' || valueStr[0] === '{';
                    if (!flow || valueStr.includes('\n')) ws = "\n".concat(ctx.indent);
                } else if (valueStr[0] === '\n') ws = '';
                if (chompKeep && !valueComment && onChompKeep) onChompKeep();
                return $2f0f2bd5b0ade301$export$2d1720544b23b823(str + ws + valueStr, ctx.indent, valueComment);
            }
        }
    ]);
    return $2f0f2bd5b0ade301$export$56c0d5a1e737357d;
}($2f0f2bd5b0ade301$export$a07804094c3ecf2d);
$DMDG9.e($2f0f2bd5b0ade301$export$56c0d5a1e737357d, "Type", {
    PAIR: 'PAIR',
    MERGE_PAIR: 'MERGE_PAIR'
});
var $2f0f2bd5b0ade301$var$getAliasCount = function getAliasCount(node, anchors) {
    if (node instanceof $2f0f2bd5b0ade301$export$ebd11618f299a286) {
        var anchor = anchors.get(node.source);
        return anchor.count * anchor.aliasCount;
    } else if (node instanceof $2f0f2bd5b0ade301$export$e7094788287c5e9b) {
        var count = 0;
        var _iterator = $DMDG9._(node.items), _step;
        try {
            for(_iterator.s(); !(_step = _iterator.n()).done;){
                var item = _step.value;
                var c = getAliasCount(item, anchors);
                if (c > count) count = c;
            }
        } catch (err) {
            _iterator.e(err);
        } finally{
            _iterator.f();
        }
        return count;
    } else if (node instanceof $2f0f2bd5b0ade301$export$56c0d5a1e737357d) {
        var kc = getAliasCount(node.key, anchors);
        var vc = getAliasCount(node.value, anchors);
        return Math.max(kc, vc);
    }
    return 1;
};
var $2f0f2bd5b0ade301$export$ebd11618f299a286 = /*#__PURE__*/ function(_Node) {
    $DMDG9.j($2f0f2bd5b0ade301$export$ebd11618f299a286, _Node);
    var _super = $DMDG9.k($2f0f2bd5b0ade301$export$ebd11618f299a286);
    function $2f0f2bd5b0ade301$export$ebd11618f299a286(source) {
        var _this;
        $DMDG9.c(this, $2f0f2bd5b0ade301$export$ebd11618f299a286);
        _this = _super.call(this);
        _this.source = source;
        _this.type = $DMDG9.T.ALIAS;
        return _this;
    }
    $DMDG9.b($2f0f2bd5b0ade301$export$ebd11618f299a286, [
        {
            key: "tag",
            set: function set(t) {
                throw new Error('Alias nodes cannot have tags');
            }
        },
        {
            key: "toJSON",
            value: function toJSON$1(arg, ctx) {
                if (!ctx) return $2f0f2bd5b0ade301$export$625550452a3fa3ec(this.source, arg, ctx);
                var anchors = ctx.anchors, maxAliasCount = ctx.maxAliasCount;
                var anchor = anchors.get(this.source);
                /* istanbul ignore if */ if (!anchor || anchor.res === undefined) {
                    var msg = 'This should not happen: Alias anchor was not resolved?';
                    if (this.cstNode) throw new $DMDG9.o(this.cstNode, msg);
                    else throw new ReferenceError(msg);
                }
                if (maxAliasCount >= 0) {
                    anchor.count += 1;
                    if (anchor.aliasCount === 0) anchor.aliasCount = $2f0f2bd5b0ade301$var$getAliasCount(this.source, anchors);
                    if (anchor.count * anchor.aliasCount > maxAliasCount) {
                        var _msg = 'Excessive alias count indicates a resource exhaustion attack';
                        if (this.cstNode) throw new $DMDG9.o(this.cstNode, _msg);
                        else throw new ReferenceError(_msg);
                    }
                }
                return anchor.res;
            } // Only called when stringifying an alias mapping key while constructing
        },
        {
            key: "toString",
            value: function toString(ctx) {
                return $2f0f2bd5b0ade301$export$ebd11618f299a286.stringify(this, ctx);
            }
        }
    ], [
        {
            key: "stringify",
            value: function stringify(_ref, _ref2) {
                var range = _ref.range, source = _ref.source;
                var anchors = _ref2.anchors, doc = _ref2.doc, implicitKey = _ref2.implicitKey, inStringifyKey = _ref2.inStringifyKey;
                var anchor = Object.keys(anchors).find(function(a) {
                    return anchors[a] === source;
                });
                if (!anchor && inStringifyKey) anchor = doc.anchors.getName(source) || doc.anchors.newName();
                if (anchor) return "*".concat(anchor).concat(implicitKey ? ' ' : '');
                var msg = doc.anchors.getName(source) ? 'Alias node must be after source node' : 'Source node not found for alias node';
                throw new Error("".concat(msg, " [").concat(range, "]"));
            }
        }
    ]);
    return $2f0f2bd5b0ade301$export$ebd11618f299a286;
}($2f0f2bd5b0ade301$export$a07804094c3ecf2d);
$DMDG9.e($2f0f2bd5b0ade301$export$ebd11618f299a286, "default", true);
function $2f0f2bd5b0ade301$export$882b5998b3b9117c(items, key) {
    var k = key instanceof $2f0f2bd5b0ade301$export$25ce5a424b770e84 ? key.value : key;
    var _iterator = $DMDG9._(items), _step;
    try {
        for(_iterator.s(); !(_step = _iterator.n()).done;){
            var it = _step.value;
            if (it instanceof $2f0f2bd5b0ade301$export$56c0d5a1e737357d) {
                if (it.key === key || it.key === k) return it;
                if (it.key && it.key.value === k) return it;
            }
        }
    } catch (err) {
        _iterator.e(err);
    } finally{
        _iterator.f();
    }
    return undefined;
}
var $2f0f2bd5b0ade301$export$4368d992c4eafac0 = /*#__PURE__*/ function(_Collection) {
    $DMDG9.j($2f0f2bd5b0ade301$export$4368d992c4eafac0, _Collection);
    var _super = $DMDG9.k($2f0f2bd5b0ade301$export$4368d992c4eafac0);
    function $2f0f2bd5b0ade301$export$4368d992c4eafac0() {
        $DMDG9.c(this, $2f0f2bd5b0ade301$export$4368d992c4eafac0);
        return _super.apply(this, arguments);
    }
    $DMDG9.b($2f0f2bd5b0ade301$export$4368d992c4eafac0, [
        {
            key: "add",
            value: function add(pair, overwrite) {
                if (!pair) pair = new $2f0f2bd5b0ade301$export$56c0d5a1e737357d(pair);
                else if (!(pair instanceof $2f0f2bd5b0ade301$export$56c0d5a1e737357d)) pair = new $2f0f2bd5b0ade301$export$56c0d5a1e737357d(pair.key || pair, pair.value);
                var prev = $2f0f2bd5b0ade301$export$882b5998b3b9117c(this.items, pair.key);
                var sortEntries = this.schema && this.schema.sortMapEntries;
                if (prev) {
                    if (overwrite) prev.value = pair.value;
                    else throw new Error("Key ".concat(pair.key, " already set"));
                } else if (sortEntries) {
                    var i = this.items.findIndex(function(item) {
                        return sortEntries(pair, item) < 0;
                    });
                    if (i === -1) this.items.push(pair);
                    else this.items.splice(i, 0, pair);
                } else this.items.push(pair);
            }
        },
        {
            key: "delete",
            value: function _delete(key) {
                var it = $2f0f2bd5b0ade301$export$882b5998b3b9117c(this.items, key);
                if (!it) return false;
                var del = this.items.splice(this.items.indexOf(it), 1);
                return del.length > 0;
            }
        },
        {
            key: "get",
            value: function get(key, keepScalar) {
                var it = $2f0f2bd5b0ade301$export$882b5998b3b9117c(this.items, key);
                var node = it && it.value;
                return !keepScalar && node instanceof $2f0f2bd5b0ade301$export$25ce5a424b770e84 ? node.value : node;
            }
        },
        {
            key: "has",
            value: function has(key) {
                return !!$2f0f2bd5b0ade301$export$882b5998b3b9117c(this.items, key);
            }
        },
        {
            key: "set",
            value: function set(key, value) {
                this.add(new $2f0f2bd5b0ade301$export$56c0d5a1e737357d(key, value), true);
            }
        },
        {
            key: "toJSON",
            value: function $2f0f2bd5b0ade301$export$625550452a3fa3ec(_, ctx, Type) {
                var map = Type ? new Type() : ctx && ctx.mapAsMap ? new Map() : {};
                if (ctx && ctx.onCreate) ctx.onCreate(map);
                var _iterator2 = $DMDG9._(this.items), _step2;
                try {
                    for(_iterator2.s(); !(_step2 = _iterator2.n()).done;){
                        var item = _step2.value;
                        item.addToJSMap(ctx, map);
                    }
                } catch (err) {
                    _iterator2.e(err);
                } finally{
                    _iterator2.f();
                }
                return map;
            }
        },
        {
            key: "toString",
            value: function toString(ctx, onComment, onChompKeep) {
                if (!ctx) return JSON.stringify(this);
                var _iterator3 = $DMDG9._(this.items), _step3;
                try {
                    for(_iterator3.s(); !(_step3 = _iterator3.n()).done;){
                        var item = _step3.value;
                        if (!(item instanceof $2f0f2bd5b0ade301$export$56c0d5a1e737357d)) throw new Error("Map items must all be pairs; found ".concat(JSON.stringify(item), " instead"));
                    }
                } catch (err) {
                    _iterator3.e(err);
                } finally{
                    _iterator3.f();
                }
                return $DMDG9.l($DMDG9.m($2f0f2bd5b0ade301$export$4368d992c4eafac0.prototype), "toString", this).call(this, ctx, {
                    blockItem: function blockItem(n) {
                        return n.str;
                    },
                    flowChars: {
                        start: '{',
                        end: '}'
                    },
                    isMap: true,
                    itemIndent: ctx.indent || ''
                }, onComment, onChompKeep);
            }
        }
    ]);
    return $2f0f2bd5b0ade301$export$4368d992c4eafac0;
}($2f0f2bd5b0ade301$export$e7094788287c5e9b);
var $2f0f2bd5b0ade301$var$MERGE_KEY = '<<';
var $2f0f2bd5b0ade301$export$3a1a48c8f6ef640e = /*#__PURE__*/ function(_Pair) {
    $DMDG9.j($2f0f2bd5b0ade301$export$3a1a48c8f6ef640e, _Pair);
    var _super = $DMDG9.k($2f0f2bd5b0ade301$export$3a1a48c8f6ef640e);
    function $2f0f2bd5b0ade301$export$3a1a48c8f6ef640e(pair) {
        var _this;
        $DMDG9.c(this, $2f0f2bd5b0ade301$export$3a1a48c8f6ef640e);
        if (pair instanceof $2f0f2bd5b0ade301$export$56c0d5a1e737357d) {
            var seq = pair.value;
            if (!(seq instanceof $2f0f2bd5b0ade301$export$8743009a87fcb00f)) {
                seq = new $2f0f2bd5b0ade301$export$8743009a87fcb00f();
                seq.items.push(pair.value);
                seq.range = pair.value.range;
            }
            _this = _super.call(this, pair.key, seq);
            _this.range = pair.range;
        } else _this = _super.call(this, new $2f0f2bd5b0ade301$export$25ce5a424b770e84($2f0f2bd5b0ade301$var$MERGE_KEY), new $2f0f2bd5b0ade301$export$8743009a87fcb00f());
        _this.type = $2f0f2bd5b0ade301$export$56c0d5a1e737357d.Type.MERGE_PAIR;
        return $DMDG9.r(_this);
    } // If the value associated with a merge key is a single mapping node, each of
    // its key/value pairs is inserted into the current mapping, unless the key
    // already exists in it. If the value associated with the merge key is a
    // sequence, then this sequence is expected to contain mapping nodes and each
    // of these nodes is merged in turn according to its order in the sequence.
    // Keys in mapping nodes earlier in the sequence override keys specified in
    // later mapping nodes. -- http://yaml.org/type/merge.html
    $DMDG9.b($2f0f2bd5b0ade301$export$3a1a48c8f6ef640e, [
        {
            key: "addToJSMap",
            value: function addToJSMap(ctx, map) {
                var _iterator = $DMDG9._(this.value.items), _step;
                try {
                    for(_iterator.s(); !(_step = _iterator.n()).done;){
                        var source = _step.value.source;
                        if (!(source instanceof $2f0f2bd5b0ade301$export$4368d992c4eafac0)) throw new Error('Merge sources must be maps');
                        var srcMap = source.toJSON(null, ctx, Map);
                        var _iterator2 = $DMDG9._(srcMap), _step2;
                        try {
                            for(_iterator2.s(); !(_step2 = _iterator2.n()).done;){
                                var _step2$value = $DMDG9.h(_step2.value, 2), key = _step2$value[0], value = _step2$value[1];
                                if (map instanceof Map) {
                                    if (!map.has(key)) map.set(key, value);
                                } else if (map instanceof Set) map.add(key);
                                else if (!Object.prototype.hasOwnProperty.call(map, key)) Object.defineProperty(map, key, {
                                    value: value,
                                    writable: true,
                                    enumerable: true,
                                    configurable: true
                                });
                            }
                        } catch (err) {
                            _iterator2.e(err);
                        } finally{
                            _iterator2.f();
                        }
                    }
                } catch (err) {
                    _iterator.e(err);
                } finally{
                    _iterator.f();
                }
                return map;
            }
        },
        {
            key: "toString",
            value: function toString(ctx, onComment) {
                var seq = this.value;
                if (seq.items.length > 1) return $DMDG9.l($DMDG9.m($2f0f2bd5b0ade301$export$3a1a48c8f6ef640e.prototype), "toString", this).call(this, ctx, onComment);
                this.value = seq.items[0];
                var str = $DMDG9.l($DMDG9.m($2f0f2bd5b0ade301$export$3a1a48c8f6ef640e.prototype), "toString", this).call(this, ctx, onComment);
                this.value = seq;
                return str;
            }
        }
    ]);
    return $2f0f2bd5b0ade301$export$3a1a48c8f6ef640e;
}($2f0f2bd5b0ade301$export$56c0d5a1e737357d);
var $2f0f2bd5b0ade301$export$8b22cf2602fb60ce = {
    defaultType: $DMDG9.T.BLOCK_LITERAL,
    lineWidth: 76
};
var $2f0f2bd5b0ade301$export$407448d2b89b1813 = {
    trueStr: 'true',
    falseStr: 'false'
};
var $2f0f2bd5b0ade301$export$23f2a1d2818174ef = {
    asBigInt: false
};
var $2f0f2bd5b0ade301$export$7ccc53e8f1e7dfc5 = {
    nullStr: 'null'
};
var $2f0f2bd5b0ade301$export$2408f22a0fab9ae5 = {
    defaultType: $DMDG9.T.PLAIN,
    doubleQuoted: {
        jsonEncoding: false,
        minMultiLineLength: 40
    },
    fold: {
        lineWidth: 80,
        minContentWidth: 20
    }
};
function $2f0f2bd5b0ade301$var$resolveScalar(str, tags, scalarFallback) {
    var _iterator = $DMDG9._(tags), _step;
    try {
        for(_iterator.s(); !(_step = _iterator.n()).done;){
            var _step$value = _step.value, format = _step$value.format, test = _step$value.test, resolve = _step$value.resolve;
            if (test) {
                var match = str.match(test);
                if (match) {
                    var res = resolve.apply(null, match);
                    if (!(res instanceof $2f0f2bd5b0ade301$export$25ce5a424b770e84)) res = new $2f0f2bd5b0ade301$export$25ce5a424b770e84(res);
                    if (format) res.format = format;
                    return res;
                }
            }
        }
    } catch (err) {
        _iterator.e(err);
    } finally{
        _iterator.f();
    }
    if (scalarFallback) str = scalarFallback(str);
    return new $2f0f2bd5b0ade301$export$25ce5a424b770e84(str);
}
var $2f0f2bd5b0ade301$var$FOLD_FLOW = 'flow';
var $2f0f2bd5b0ade301$var$FOLD_BLOCK = 'block';
var $2f0f2bd5b0ade301$var$FOLD_QUOTED = 'quoted'; // presumes i+1 is at the start of a line
// returns index of last newline in more-indented block
var $2f0f2bd5b0ade301$var$consumeMoreIndentedLines = function consumeMoreIndentedLines(text, i) {
    var ch = text[i + 1];
    while(ch === ' ' || ch === '\t'){
        do ch = text[i += 1];
        while (ch && ch !== '\n')
        ch = text[i + 1];
    }
    return i;
};
/**
 * Tries to keep input at up to `lineWidth` characters, splitting only on spaces
 * not followed by newlines or spaces unless `mode` is `'quoted'`. Lines are
 * terminated with `\n` and started with `indent`.
 *
 * @param {string} text
 * @param {string} indent
 * @param {string} [mode='flow'] `'block'` prevents more-indented lines
 *   from being folded; `'quoted'` allows for `\` escapes, including escaped
 *   newlines
 * @param {Object} options
 * @param {number} [options.indentAtStart] Accounts for leading contents on
 *   the first line, defaulting to `indent.length`
 * @param {number} [options.lineWidth=80]
 * @param {number} [options.minContentWidth=20] Allow highly indented lines to
 *   stretch the line width or indent content from the start
 * @param {function} options.onFold Called once if the text is folded
 * @param {function} options.onFold Called once if any line of text exceeds
 *   lineWidth characters
 */ function $2f0f2bd5b0ade301$var$foldFlowLines(text, indent, mode, _ref) {
    var indentAtStart = _ref.indentAtStart, _ref$lineWidth = _ref.lineWidth, lineWidth = _ref$lineWidth === void 0 ? 80 : _ref$lineWidth, _ref$minContentWidth = _ref.minContentWidth, minContentWidth = _ref$minContentWidth === void 0 ? 20 : _ref$minContentWidth, onFold = _ref.onFold, onOverflow = _ref.onOverflow;
    if (!lineWidth || lineWidth < 0) return text;
    var endStep = Math.max(1 + minContentWidth, 1 + lineWidth - indent.length);
    if (text.length <= endStep) return text;
    var folds = [];
    var escapedFolds = {};
    var end = lineWidth - indent.length;
    if (typeof indentAtStart === 'number') {
        if (indentAtStart > lineWidth - Math.max(2, minContentWidth)) folds.push(0);
        else end = lineWidth - indentAtStart;
    }
    var split = undefined;
    var prev = undefined;
    var overflow = false;
    var i = -1;
    var escStart = -1;
    var escEnd = -1;
    if (mode === $2f0f2bd5b0ade301$var$FOLD_BLOCK) {
        i = $2f0f2bd5b0ade301$var$consumeMoreIndentedLines(text, i);
        if (i !== -1) end = i + endStep;
    }
    for(var ch; ch = text[i += 1];){
        if (mode === $2f0f2bd5b0ade301$var$FOLD_QUOTED && ch === '\\') {
            escStart = i;
            switch(text[i + 1]){
                case 'x':
                    i += 3;
                    break;
                case 'u':
                    i += 5;
                    break;
                case 'U':
                    i += 9;
                    break;
                default:
                    i += 1;
            }
            escEnd = i;
        }
        if (ch === '\n') {
            if (mode === $2f0f2bd5b0ade301$var$FOLD_BLOCK) i = $2f0f2bd5b0ade301$var$consumeMoreIndentedLines(text, i);
            end = i + endStep;
            split = undefined;
        } else {
            if (ch === ' ' && prev && prev !== ' ' && prev !== '\n' && prev !== '\t') {
                // space surrounded by non-space can be replaced with newline + indent
                var next = text[i + 1];
                if (next && next !== ' ' && next !== '\n' && next !== '\t') split = i;
            }
            if (i >= end) {
                if (split) {
                    folds.push(split);
                    end = split + endStep;
                    split = undefined;
                } else if (mode === $2f0f2bd5b0ade301$var$FOLD_QUOTED) {
                    // white-space collected at end may stretch past lineWidth
                    while(prev === ' ' || prev === '\t'){
                        prev = ch;
                        ch = text[i += 1];
                        overflow = true;
                    } // Account for newline escape, but don't break preceding escape
                    var j = i > escEnd + 1 ? i - 2 : escStart - 1; // Bail out if lineWidth & minContentWidth are shorter than an escape string
                    if (escapedFolds[j]) return text;
                    folds.push(j);
                    escapedFolds[j] = true;
                    end = j + endStep;
                    split = undefined;
                } else overflow = true;
            }
        }
        prev = ch;
    }
    if (overflow && onOverflow) onOverflow();
    if (folds.length === 0) return text;
    if (onFold) onFold();
    var res = text.slice(0, folds[0]);
    for(var _i = 0; _i < folds.length; ++_i){
        var fold = folds[_i];
        var _end = folds[_i + 1] || text.length;
        if (fold === 0) res = "\n".concat(indent).concat(text.slice(0, _end));
        else {
            if (mode === $2f0f2bd5b0ade301$var$FOLD_QUOTED && escapedFolds[fold]) res += "".concat(text[fold], "\\");
            res += "\n".concat(indent).concat(text.slice(fold + 1, _end));
        }
    }
    return res;
}
var $2f0f2bd5b0ade301$var$getFoldOptions = function getFoldOptions(_ref) {
    var indentAtStart = _ref.indentAtStart;
    return indentAtStart ? Object.assign({
        indentAtStart: indentAtStart
    }, $2f0f2bd5b0ade301$export$2408f22a0fab9ae5.fold) : $2f0f2bd5b0ade301$export$2408f22a0fab9ae5.fold;
}; // Also checks for lines starting with %, as parsing the output as YAML 1.1 will
// presume that's starting a new document.
var $2f0f2bd5b0ade301$var$containsDocumentMarker = function containsDocumentMarker(str) {
    return /^(%|---|\.\.\.)/m.test(str);
};
function $2f0f2bd5b0ade301$var$lineLengthOverLimit(str, lineWidth, indentLength) {
    if (!lineWidth || lineWidth < 0) return false;
    var limit = lineWidth - indentLength;
    var strLen = str.length;
    if (strLen <= limit) return false;
    for(var i = 0, start = 0; i < strLen; ++i)if (str[i] === '\n') {
        if (i - start > limit) return true;
        start = i + 1;
        if (strLen - start <= limit) return false;
    }
    return true;
}
function $2f0f2bd5b0ade301$var$doubleQuotedString(value, ctx) {
    var implicitKey = ctx.implicitKey;
    var _strOptions$doubleQuo = $2f0f2bd5b0ade301$export$2408f22a0fab9ae5.doubleQuoted, jsonEncoding = _strOptions$doubleQuo.jsonEncoding, minMultiLineLength = _strOptions$doubleQuo.minMultiLineLength;
    var json = JSON.stringify(value);
    if (jsonEncoding) return json;
    var indent = ctx.indent || ($2f0f2bd5b0ade301$var$containsDocumentMarker(value) ? '  ' : '');
    var str = '';
    var start = 0;
    for(var i = 0, ch = json[i]; ch; ch = json[++i]){
        if (ch === ' ' && json[i + 1] === '\\' && json[i + 2] === 'n') {
            // space before newline needs to be escaped to not be folded
            str += json.slice(start, i) + '\\ ';
            i += 1;
            start = i;
            ch = '\\';
        }
        if (ch === '\\') switch(json[i + 1]){
            case 'u':
                str += json.slice(start, i);
                var code = json.substr(i + 2, 4);
                switch(code){
                    case '0000':
                        str += '\\0';
                        break;
                    case '0007':
                        str += '\\a';
                        break;
                    case '000b':
                        str += '\\v';
                        break;
                    case '001b':
                        str += '\\e';
                        break;
                    case '0085':
                        str += '\\N';
                        break;
                    case '00a0':
                        str += '\\_';
                        break;
                    case '2028':
                        str += '\\L';
                        break;
                    case '2029':
                        str += '\\P';
                        break;
                    default:
                        if (code.substr(0, 2) === '00') str += '\\x' + code.substr(2);
                        else str += json.substr(i, 6);
                }
                i += 5;
                start = i + 1;
                break;
            case 'n':
                if (implicitKey || json[i + 2] === '"' || json.length < minMultiLineLength) i += 1;
                else {
                    // folding will eat first newline
                    str += json.slice(start, i) + '\n\n';
                    while(json[i + 2] === '\\' && json[i + 3] === 'n' && json[i + 4] !== '"'){
                        str += '\n';
                        i += 2;
                    }
                    str += indent; // space after newline needs to be escaped to not be folded
                    if (json[i + 2] === ' ') str += '\\';
                    i += 1;
                    start = i + 1;
                }
                break;
            default:
                i += 1;
        }
    }
    str = start ? str + json.slice(start) : json;
    return implicitKey ? str : $2f0f2bd5b0ade301$var$foldFlowLines(str, indent, $2f0f2bd5b0ade301$var$FOLD_QUOTED, $2f0f2bd5b0ade301$var$getFoldOptions(ctx));
}
function $2f0f2bd5b0ade301$var$singleQuotedString(value, ctx) {
    if (ctx.implicitKey) {
        if (/\n/.test(value)) return $2f0f2bd5b0ade301$var$doubleQuotedString(value, ctx);
    } else {
        // single quoted string can't have leading or trailing whitespace around newline
        if (/[ \t]\n|\n[ \t]/.test(value)) return $2f0f2bd5b0ade301$var$doubleQuotedString(value, ctx);
    }
    var indent = ctx.indent || ($2f0f2bd5b0ade301$var$containsDocumentMarker(value) ? '  ' : '');
    var res = "'" + value.replace(/'/g, "''").replace(/\n+/g, "$&\n".concat(indent)) + "'";
    return ctx.implicitKey ? res : $2f0f2bd5b0ade301$var$foldFlowLines(res, indent, $2f0f2bd5b0ade301$var$FOLD_FLOW, $2f0f2bd5b0ade301$var$getFoldOptions(ctx));
}
function $2f0f2bd5b0ade301$var$blockString(_ref2, ctx, onComment, onChompKeep) {
    var comment = _ref2.comment, type = _ref2.type, value = _ref2.value;
    // 1. Block can't end in whitespace unless the last line is non-empty.
    // 2. Strings consisting of only whitespace are best rendered explicitly.
    if (/\n[\t ]+$/.test(value) || /^\s*$/.test(value)) return $2f0f2bd5b0ade301$var$doubleQuotedString(value, ctx);
    var indent = ctx.indent || (ctx.forceBlockIndent || $2f0f2bd5b0ade301$var$containsDocumentMarker(value) ? '  ' : '');
    var indentSize = indent ? '2' : '1'; // root is at -1
    var literal = type === $DMDG9.T.BLOCK_FOLDED ? false : type === $DMDG9.T.BLOCK_LITERAL ? true : !$2f0f2bd5b0ade301$var$lineLengthOverLimit(value, $2f0f2bd5b0ade301$export$2408f22a0fab9ae5.fold.lineWidth, indent.length);
    var header = literal ? '|' : '>';
    if (!value) return header + '\n';
    var wsStart = '';
    var wsEnd = '';
    value = value.replace(/[\n\t ]*$/, function(ws) {
        var n = ws.indexOf('\n');
        if (n === -1) header += '-'; // strip
        else if (value === ws || n !== ws.length - 1) {
            header += '+'; // keep
            if (onChompKeep) onChompKeep();
        }
        wsEnd = ws.replace(/\n$/, '');
        return '';
    }).replace(/^[\n ]*/, function(ws) {
        if (ws.indexOf(' ') !== -1) header += indentSize;
        var m = ws.match(/ +$/);
        if (m) {
            wsStart = ws.slice(0, -m[0].length);
            return m[0];
        } else {
            wsStart = ws;
            return '';
        }
    });
    if (wsEnd) wsEnd = wsEnd.replace(/\n+(?!\n|$)/g, "$&".concat(indent));
    if (wsStart) wsStart = wsStart.replace(/\n+/g, "$&".concat(indent));
    if (comment) {
        header += ' #' + comment.replace(/ ?[\r\n]+/g, ' ');
        if (onComment) onComment();
    }
    if (!value) return "".concat(header).concat(indentSize, "\n").concat(indent).concat(wsEnd);
    if (literal) {
        value = value.replace(/\n+/g, "$&".concat(indent));
        return "".concat(header, "\n").concat(indent).concat(wsStart).concat(value).concat(wsEnd);
    }
    value = value.replace(/\n+/g, '\n$&').replace(/(?:^|\n)([\t ].*)(?:([\n\t ]*)\n(?![\n\t ]))?/g, '$1$2') // more-indented lines aren't folded
    //         ^ ind.line  ^ empty     ^ capture next empty lines only at end of indent
    .replace(/\n+/g, "$&".concat(indent));
    var body = $2f0f2bd5b0ade301$var$foldFlowLines("".concat(wsStart).concat(value).concat(wsEnd), indent, $2f0f2bd5b0ade301$var$FOLD_BLOCK, $2f0f2bd5b0ade301$export$2408f22a0fab9ae5.fold);
    return "".concat(header, "\n").concat(indent).concat(body);
}
function $2f0f2bd5b0ade301$var$plainString(item, ctx, onComment, onChompKeep) {
    var comment = item.comment, type = item.type, value = item.value;
    var actualString = ctx.actualString, implicitKey = ctx.implicitKey, indent = ctx.indent, inFlow = ctx.inFlow;
    if (implicitKey && /[\n[\]{},]/.test(value) || inFlow && /[[\]{},]/.test(value)) return $2f0f2bd5b0ade301$var$doubleQuotedString(value, ctx);
    if (!value || /^[\n\t ,[\]{}#&*!|>'"%@`]|^[?-]$|^[?-][ \t]|[\n:][ \t]|[ \t]\n|[\n\t ]#|[\n\t :]$/.test(value)) // not allowed:
    // - empty string, '-' or '?'
    // - start with an indicator character (except [?:-]) or /[?-] /
    // - '\n ', ': ' or ' \n' anywhere
    // - '#' not preceded by a non-space char
    // - end with ' ' or ':'
    return implicitKey || inFlow || value.indexOf('\n') === -1 ? value.indexOf('"') !== -1 && value.indexOf("'") === -1 ? $2f0f2bd5b0ade301$var$singleQuotedString(value, ctx) : $2f0f2bd5b0ade301$var$doubleQuotedString(value, ctx) : $2f0f2bd5b0ade301$var$blockString(item, ctx, onComment, onChompKeep);
    if (!implicitKey && !inFlow && type !== $DMDG9.T.PLAIN && value.indexOf('\n') !== -1) // Where allowed & type not set explicitly, prefer block style for multiline strings
    return $2f0f2bd5b0ade301$var$blockString(item, ctx, onComment, onChompKeep);
    if (indent === '' && $2f0f2bd5b0ade301$var$containsDocumentMarker(value)) {
        ctx.forceBlockIndent = true;
        return $2f0f2bd5b0ade301$var$blockString(item, ctx, onComment, onChompKeep);
    }
    var str = value.replace(/\n+/g, "$&\n".concat(indent)); // Verify that output will be parsed as a string, as e.g. plain numbers and
    // booleans get parsed with those types in v1.2 (e.g. '42', 'true' & '0.9e-3'),
    // and others in v1.1.
    if (actualString) {
        var tags = ctx.doc.schema.tags;
        var resolved = $2f0f2bd5b0ade301$var$resolveScalar(str, tags, tags.scalarFallback).value;
        if (typeof resolved !== 'string') return $2f0f2bd5b0ade301$var$doubleQuotedString(value, ctx);
    }
    var body = implicitKey ? str : $2f0f2bd5b0ade301$var$foldFlowLines(str, indent, $2f0f2bd5b0ade301$var$FOLD_FLOW, $2f0f2bd5b0ade301$var$getFoldOptions(ctx));
    if (comment && !inFlow && (body.indexOf('\n') !== -1 || comment.indexOf('\n') !== -1)) {
        if (onComment) onComment();
        return $2f0f2bd5b0ade301$var$addCommentBefore(body, indent, comment);
    }
    return body;
}
function $2f0f2bd5b0ade301$export$db3b6bfb95261072(item, ctx, onComment, onChompKeep) {
    var defaultType = $2f0f2bd5b0ade301$export$2408f22a0fab9ae5.defaultType;
    var implicitKey = ctx.implicitKey, inFlow = ctx.inFlow;
    var _item = item, type = _item.type, value = _item.value;
    if (typeof value !== 'string') {
        value = String(value);
        item = Object.assign({}, item, {
            value: value
        });
    }
    var _stringify = function _stringify(_type) {
        switch(_type){
            case $DMDG9.T.BLOCK_FOLDED:
            case $DMDG9.T.BLOCK_LITERAL:
                return $2f0f2bd5b0ade301$var$blockString(item, ctx, onComment, onChompKeep);
            case $DMDG9.T.QUOTE_DOUBLE:
                return $2f0f2bd5b0ade301$var$doubleQuotedString(value, ctx);
            case $DMDG9.T.QUOTE_SINGLE:
                return $2f0f2bd5b0ade301$var$singleQuotedString(value, ctx);
            case $DMDG9.T.PLAIN:
                return $2f0f2bd5b0ade301$var$plainString(item, ctx, onComment, onChompKeep);
            default:
                return null;
        }
    };
    if (type !== $DMDG9.T.QUOTE_DOUBLE && /[\x00-\x08\x0b-\x1f\x7f-\x9f]/.test(value)) // force double quotes on control characters
    type = $DMDG9.T.QUOTE_DOUBLE;
    else if ((implicitKey || inFlow) && (type === $DMDG9.T.BLOCK_FOLDED || type === $DMDG9.T.BLOCK_LITERAL)) // should not happen; blocks are not valid inside flow containers
    type = $DMDG9.T.QUOTE_DOUBLE;
    var res = _stringify(type);
    if (res === null) {
        res = _stringify(defaultType);
        if (res === null) throw new Error("Unsupported default string type ".concat(defaultType));
    }
    return res;
}
function $2f0f2bd5b0ade301$export$342063e11d6c3cad(_ref) {
    var format = _ref.format, minFractionDigits = _ref.minFractionDigits, tag = _ref.tag, value = _ref.value;
    if (typeof value === 'bigint') return String(value);
    if (!isFinite(value)) return isNaN(value) ? '.nan' : value < 0 ? '-.inf' : '.inf';
    var n = JSON.stringify(value);
    if (!format && minFractionDigits && (!tag || tag === 'tag:yaml.org,2002:float') && /^\d/.test(n)) {
        var i = n.indexOf('.');
        if (i < 0) {
            i = n.length;
            n += '.';
        }
        var d = minFractionDigits - (n.length - i - 1);
        while(d-- > 0)n += '0';
    }
    return n;
}
function $2f0f2bd5b0ade301$var$checkFlowCollectionEnd(errors, cst) {
    var char, name;
    switch(cst.type){
        case $DMDG9.T.FLOW_MAP:
            char = '}';
            name = 'flow map';
            break;
        case $DMDG9.T.FLOW_SEQ:
            char = ']';
            name = 'flow sequence';
            break;
        default:
            errors.push(new $DMDG9.g(cst, 'Not a flow collection!?'));
            return;
    }
    var lastItem;
    for(var i = cst.items.length - 1; i >= 0; --i){
        var item = cst.items[i];
        if (!item || item.type !== $DMDG9.T.COMMENT) {
            lastItem = item;
            break;
        }
    }
    if (lastItem && lastItem.char !== char) {
        var msg = "Expected ".concat(name, " to end with ").concat(char);
        var err;
        if (typeof lastItem.offset === 'number') {
            err = new $DMDG9.g(cst, msg);
            err.offset = lastItem.offset + 1;
        } else {
            err = new $DMDG9.g(lastItem, msg);
            if (lastItem.range && lastItem.range.end) err.offset = lastItem.range.end - lastItem.range.start;
        }
        errors.push(err);
    }
}
function $2f0f2bd5b0ade301$var$checkFlowCommentSpace(errors, comment) {
    var prev = comment.context.src[comment.range.start - 1];
    if (prev !== '\n' && prev !== '\t' && prev !== ' ') {
        var msg = 'Comments must be separated from other tokens by white space characters';
        errors.push(new $DMDG9.g(comment, msg));
    }
}
function $2f0f2bd5b0ade301$var$getLongKeyError(source, key) {
    var sk = String(key);
    var k = sk.substr(0, 8) + '...' + sk.substr(-8);
    return new $DMDG9.g(source, "The \"".concat(k, "\" key is too long"));
}
function $2f0f2bd5b0ade301$var$resolveComments(collection, comments) {
    var _iterator = $DMDG9._(comments), _step;
    try {
        for(_iterator.s(); !(_step = _iterator.n()).done;){
            var _step$value = _step.value, afterKey = _step$value.afterKey, before = _step$value.before, comment = _step$value.comment;
            var item = collection.items[before];
            if (!item) {
                if (comment !== undefined) {
                    if (collection.comment) collection.comment += '\n' + comment;
                    else collection.comment = comment;
                }
            } else {
                if (afterKey && item.value) item = item.value;
                if (comment === undefined) {
                    if (afterKey || !item.commentBefore) item.spaceBefore = true;
                } else if (item.commentBefore) item.commentBefore += '\n' + comment;
                else item.commentBefore = comment;
            }
        }
    } catch (err) {
        _iterator.e(err);
    } finally{
        _iterator.f();
    }
}
// on error, will return { str: string, errors: Error[] }
function $2f0f2bd5b0ade301$export$35e795649ee09318(doc, node) {
    var res = node.strValue;
    if (!res) return '';
    if (typeof res === 'string') return res;
    res.errors.forEach(function(error) {
        if (!error.source) error.source = node;
        doc.errors.push(error);
    });
    return res.str;
}
function $2f0f2bd5b0ade301$var$resolveTagHandle(doc, node) {
    var _node$tag = node.tag, handle = _node$tag.handle, suffix = _node$tag.suffix;
    var prefix = doc.tagPrefixes.find(function(p) {
        return p.handle === handle;
    });
    if (!prefix) {
        var dtp = doc.getDefaults().tagPrefixes;
        if (dtp) prefix = dtp.find(function(p) {
            return p.handle === handle;
        });
        if (!prefix) throw new $DMDG9.g(node, "The ".concat(handle, " tag handle is non-default and was not declared."));
    }
    if (!suffix) throw new $DMDG9.g(node, "The ".concat(handle, " tag has no suffix."));
    if (handle === '!' && (doc.version || doc.options.version) === '1.0') {
        if (suffix[0] === '^') {
            doc.warnings.push(new $DMDG9.f(node, 'YAML 1.0 ^ tag expansion is not supported'));
            return suffix;
        }
        if (/[:/]/.test(suffix)) {
            // word/foo -> tag:word.yaml.org,2002:foo
            var vocab = suffix.match(/^([a-z0-9-]+)\/(.*)/i);
            return vocab ? "tag:".concat(vocab[1], ".yaml.org,2002:").concat(vocab[2]) : "tag:".concat(suffix);
        }
    }
    return prefix.prefix + decodeURIComponent(suffix);
}
function $2f0f2bd5b0ade301$var$resolveTagName(doc, node) {
    var tag = node.tag, type = node.type;
    var nonSpecific = false;
    if (tag) {
        var handle = tag.handle, suffix = tag.suffix, verbatim = tag.verbatim;
        if (verbatim) {
            if (verbatim !== '!' && verbatim !== '!!') return verbatim;
            var msg = "Verbatim tags aren't resolved, so ".concat(verbatim, " is invalid.");
            doc.errors.push(new $DMDG9.g(node, msg));
        } else if (handle === '!' && !suffix) nonSpecific = true;
        else try {
            return $2f0f2bd5b0ade301$var$resolveTagHandle(doc, node);
        } catch (error) {
            doc.errors.push(error);
        }
    }
    switch(type){
        case $DMDG9.T.BLOCK_FOLDED:
        case $DMDG9.T.BLOCK_LITERAL:
        case $DMDG9.T.QUOTE_DOUBLE:
        case $DMDG9.T.QUOTE_SINGLE:
            return $DMDG9.n.STR;
        case $DMDG9.T.FLOW_MAP:
        case $DMDG9.T.MAP:
            return $DMDG9.n.MAP;
        case $DMDG9.T.FLOW_SEQ:
        case $DMDG9.T.SEQ:
            return $DMDG9.n.SEQ;
        case $DMDG9.T.PLAIN:
            return nonSpecific ? $DMDG9.n.STR : null;
        default:
            return null;
    }
}
function $2f0f2bd5b0ade301$var$resolveByTagName(doc, node, tagName) {
    var tags = doc.schema.tags;
    var matchWithTest = [];
    var _iterator = $DMDG9._(tags), _step;
    try {
        for(_iterator.s(); !(_step = _iterator.n()).done;){
            var tag = _step.value;
            if (tag.tag === tagName) {
                if (tag.test) matchWithTest.push(tag);
                else {
                    var res = tag.resolve(doc, node);
                    return res instanceof $2f0f2bd5b0ade301$export$e7094788287c5e9b ? res : new $2f0f2bd5b0ade301$export$25ce5a424b770e84(res);
                }
            }
        }
    } catch (err) {
        _iterator.e(err);
    } finally{
        _iterator.f();
    }
    var str = $2f0f2bd5b0ade301$export$35e795649ee09318(doc, node);
    if (typeof str === 'string' && matchWithTest.length > 0) return $2f0f2bd5b0ade301$var$resolveScalar(str, matchWithTest, tags.scalarFallback);
    return null;
}
function $2f0f2bd5b0ade301$var$getFallbackTagName(_ref) {
    var type = _ref.type;
    switch(type){
        case $DMDG9.T.FLOW_MAP:
        case $DMDG9.T.MAP:
            return $DMDG9.n.MAP;
        case $DMDG9.T.FLOW_SEQ:
        case $DMDG9.T.SEQ:
            return $DMDG9.n.SEQ;
        default:
            return $DMDG9.n.STR;
    }
}
function $2f0f2bd5b0ade301$var$resolveTag(doc, node, tagName) {
    try {
        var res = $2f0f2bd5b0ade301$var$resolveByTagName(doc, node, tagName);
        if (res) {
            if (tagName && node.tag) res.tag = tagName;
            return res;
        }
    } catch (error) {
        /* istanbul ignore if */ if (!error.source) error.source = node;
        doc.errors.push(error);
        return null;
    }
    try {
        var fallback = $2f0f2bd5b0ade301$var$getFallbackTagName(node);
        if (!fallback) throw new Error("The tag ".concat(tagName, " is unavailable"));
        var msg = "The tag ".concat(tagName, " is unavailable, falling back to ").concat(fallback);
        doc.warnings.push(new $DMDG9.f(node, msg));
        var _res = $2f0f2bd5b0ade301$var$resolveByTagName(doc, node, fallback);
        _res.tag = tagName;
        return _res;
    } catch (error1) {
        var refError = new $DMDG9.o(node, error1.message);
        refError.stack = error1.stack;
        doc.errors.push(refError);
        return null;
    }
}
var $2f0f2bd5b0ade301$var$isCollectionItem = function isCollectionItem(node) {
    if (!node) return false;
    var type = node.type;
    return type === $DMDG9.T.MAP_KEY || type === $DMDG9.T.MAP_VALUE || type === $DMDG9.T.SEQ_ITEM;
};
function $2f0f2bd5b0ade301$var$resolveNodeProps(errors, node) {
    var comments = {
        before: [],
        after: []
    };
    var hasAnchor = false;
    var hasTag = false;
    var props = $2f0f2bd5b0ade301$var$isCollectionItem(node.context.parent) ? node.context.parent.props.concat(node.props) : node.props;
    var _iterator = $DMDG9._(props), _step;
    try {
        for(_iterator.s(); !(_step = _iterator.n()).done;){
            var _step$value = _step.value, start = _step$value.start, end = _step$value.end;
            switch(node.context.src[start]){
                case $DMDG9.C.COMMENT:
                    if (!node.commentHasRequiredWhitespace(start)) {
                        var msg = 'Comments must be separated from other tokens by white space characters';
                        errors.push(new $DMDG9.g(node, msg));
                    }
                    var header = node.header, valueRange = node.valueRange;
                    var cc = valueRange && (start > valueRange.start || header && start > header.start) ? comments.after : comments.before;
                    cc.push(node.context.src.slice(start + 1, end));
                    break;
                // Actual anchor & tag resolution is handled by schema, here we just complain
                case $DMDG9.C.ANCHOR:
                    if (hasAnchor) {
                        var _msg = 'A node can have at most one anchor';
                        errors.push(new $DMDG9.g(node, _msg));
                    }
                    hasAnchor = true;
                    break;
                case $DMDG9.C.TAG:
                    if (hasTag) {
                        var _msg2 = 'A node can have at most one tag';
                        errors.push(new $DMDG9.g(node, _msg2));
                    }
                    hasTag = true;
                    break;
            }
        }
    } catch (err) {
        _iterator.e(err);
    } finally{
        _iterator.f();
    }
    return {
        comments: comments,
        hasAnchor: hasAnchor,
        hasTag: hasTag
    };
}
function $2f0f2bd5b0ade301$var$resolveNodeValue(doc, node) {
    var anchors = doc.anchors, errors = doc.errors, schema = doc.schema;
    if (node.type === $DMDG9.T.ALIAS) {
        var name = node.rawValue;
        var src = anchors.getNode(name);
        if (!src) {
            var msg = "Aliased anchor not found: ".concat(name);
            errors.push(new $DMDG9.o(node, msg));
            return null;
        } // Lazy resolution for circular references
        var res = new $2f0f2bd5b0ade301$export$ebd11618f299a286(src);
        anchors._cstAliases.push(res);
        return res;
    }
    var tagName = $2f0f2bd5b0ade301$var$resolveTagName(doc, node);
    if (tagName) return $2f0f2bd5b0ade301$var$resolveTag(doc, node, tagName);
    if (node.type !== $DMDG9.T.PLAIN) {
        var _msg3 = "Failed to resolve ".concat(node.type, " node here");
        errors.push(new $DMDG9.Y(node, _msg3));
        return null;
    }
    try {
        var str = $2f0f2bd5b0ade301$export$35e795649ee09318(doc, node);
        return $2f0f2bd5b0ade301$var$resolveScalar(str, schema.tags, schema.tags.scalarFallback);
    } catch (error) {
        if (!error.source) error.source = node;
        errors.push(error);
        return null;
    }
} // sets node.resolved on success
function $2f0f2bd5b0ade301$export$43caf9889c228507(doc, node) {
    if (!node) return null;
    if (node.error) doc.errors.push(node.error);
    var _resolveNodeProps = $2f0f2bd5b0ade301$var$resolveNodeProps(doc.errors, node), comments = _resolveNodeProps.comments, hasAnchor = _resolveNodeProps.hasAnchor, hasTag = _resolveNodeProps.hasTag;
    if (hasAnchor) {
        var anchors = doc.anchors;
        var name = node.anchor;
        var prev = anchors.getNode(name); // At this point, aliases for any preceding node with the same anchor
        // name have already been resolved, so it may safely be renamed.
        if (prev) anchors.map[anchors.newName(name)] = prev; // During parsing, we need to store the CST node in anchors.map as
        // anchors need to be available during resolution to allow for
        // circular references.
        anchors.map[name] = node;
    }
    if (node.type === $DMDG9.T.ALIAS && (hasAnchor || hasTag)) {
        var msg = 'An alias node must not specify any properties';
        doc.errors.push(new $DMDG9.g(node, msg));
    }
    var res = $2f0f2bd5b0ade301$var$resolveNodeValue(doc, node);
    if (res) {
        res.range = [
            node.range.start,
            node.range.end
        ];
        if (doc.options.keepCstNodes) res.cstNode = node;
        if (doc.options.keepNodeTypes) res.type = node.type;
        var cb = comments.before.join('\n');
        if (cb) res.commentBefore = res.commentBefore ? "".concat(res.commentBefore, "\n").concat(cb) : cb;
        var ca = comments.after.join('\n');
        if (ca) res.comment = res.comment ? "".concat(res.comment, "\n").concat(ca) : ca;
    }
    return node.resolved = res;
}
function $2f0f2bd5b0ade301$export$39b482c5e57630a8(doc, cst) {
    if (cst.type !== $DMDG9.T.MAP && cst.type !== $DMDG9.T.FLOW_MAP) {
        var msg = "A ".concat(cst.type, " node cannot be resolved as a mapping");
        doc.errors.push(new $DMDG9.Y(cst, msg));
        return null;
    }
    var _ref = cst.type === $DMDG9.T.FLOW_MAP ? $2f0f2bd5b0ade301$var$resolveFlowMapItems(doc, cst) : $2f0f2bd5b0ade301$var$resolveBlockMapItems(doc, cst), comments = _ref.comments, items = _ref.items;
    var map = new $2f0f2bd5b0ade301$export$4368d992c4eafac0();
    map.items = items;
    $2f0f2bd5b0ade301$var$resolveComments(map, comments);
    var hasCollectionKey = false;
    for(var i = 0; i < items.length; ++i){
        var iKey = items[i].key;
        if (iKey instanceof $2f0f2bd5b0ade301$export$e7094788287c5e9b) hasCollectionKey = true;
        if (doc.schema.merge && iKey && iKey.value === $2f0f2bd5b0ade301$var$MERGE_KEY) {
            items[i] = new $2f0f2bd5b0ade301$export$3a1a48c8f6ef640e(items[i]);
            var sources = items[i].value.items;
            var error = null;
            sources.some(function(node) {
                if (node instanceof $2f0f2bd5b0ade301$export$ebd11618f299a286) {
                    // During parsing, alias sources are CST nodes; to account for
                    // circular references their resolved values can't be used here.
                    var type = node.source.type;
                    if (type === $DMDG9.T.MAP || type === $DMDG9.T.FLOW_MAP) return false;
                    return error = 'Merge nodes aliases can only point to maps';
                }
                return error = 'Merge nodes can only have Alias nodes as values';
            });
            if (error) doc.errors.push(new $DMDG9.g(cst, error));
        } else for(var j = i + 1; j < items.length; ++j){
            var jKey = items[j].key;
            if (iKey === jKey || iKey && jKey && Object.prototype.hasOwnProperty.call(iKey, 'value') && iKey.value === jKey.value) {
                var _msg = "Map keys must be unique; \"".concat(iKey, "\" is repeated");
                doc.errors.push(new $DMDG9.g(cst, _msg));
                break;
            }
        }
    }
    if (hasCollectionKey && !doc.options.mapAsMap) {
        var warn = 'Keys with collection values will be stringified as YAML due to JS Object restrictions. Use mapAsMap: true to avoid this.';
        doc.warnings.push(new $DMDG9.f(cst, warn));
    }
    cst.resolved = map;
    return map;
}
var $2f0f2bd5b0ade301$var$valueHasPairComment = function valueHasPairComment(_ref2) {
    var _ref2$context = _ref2.context, lineStart = _ref2$context.lineStart, node = _ref2$context.node, src = _ref2$context.src, props = _ref2.props;
    if (props.length === 0) return false;
    var start = props[0].start;
    if (node && start > node.valueRange.start) return false;
    if (src[start] !== $DMDG9.C.COMMENT) return false;
    for(var i = lineStart; i < start; ++i){
        if (src[i] === '\n') return false;
    }
    return true;
};
function $2f0f2bd5b0ade301$var$resolvePairComment(item, pair) {
    if (!$2f0f2bd5b0ade301$var$valueHasPairComment(item)) return;
    var comment = item.getPropValue(0, $DMDG9.C.COMMENT, true);
    var found = false;
    var cb = pair.value.commentBefore;
    if (cb && cb.startsWith(comment)) {
        pair.value.commentBefore = cb.substr(comment.length + 1);
        found = true;
    } else {
        var cc = pair.value.comment;
        if (!item.node && cc && cc.startsWith(comment)) {
            pair.value.comment = cc.substr(comment.length + 1);
            found = true;
        }
    }
    if (found) pair.comment = comment;
}
function $2f0f2bd5b0ade301$var$resolveBlockMapItems(doc, cst) {
    var comments = [];
    var items = [];
    var key = undefined;
    var keyStart = null;
    for(var i = 0; i < cst.items.length; ++i){
        var item = cst.items[i];
        switch(item.type){
            case $DMDG9.T.BLANK_LINE:
                comments.push({
                    afterKey: !!key,
                    before: items.length
                });
                break;
            case $DMDG9.T.COMMENT:
                comments.push({
                    afterKey: !!key,
                    before: items.length,
                    comment: item.comment
                });
                break;
            case $DMDG9.T.MAP_KEY:
                if (key !== undefined) items.push(new $2f0f2bd5b0ade301$export$56c0d5a1e737357d(key));
                if (item.error) doc.errors.push(item.error);
                key = $2f0f2bd5b0ade301$export$43caf9889c228507(doc, item.node);
                keyStart = null;
                break;
            case $DMDG9.T.MAP_VALUE:
                if (key === undefined) key = null;
                if (item.error) doc.errors.push(item.error);
                if (!item.context.atLineStart && item.node && item.node.type === $DMDG9.T.MAP && !item.node.context.atLineStart) {
                    var msg = 'Nested mappings are not allowed in compact mappings';
                    doc.errors.push(new $DMDG9.g(item.node, msg));
                }
                var valueNode = item.node;
                if (!valueNode && item.props.length > 0) {
                    // Comments on an empty mapping value need to be preserved, so we
                    // need to construct a minimal empty node here to use instead of the
                    // missing `item.node`. -- eemeli/yaml#19
                    valueNode = new $DMDG9.P($DMDG9.T.PLAIN, []);
                    valueNode.context = {
                        parent: item,
                        src: item.context.src
                    };
                    var pos = item.range.start + 1;
                    valueNode.range = {
                        start: pos,
                        end: pos
                    };
                    valueNode.valueRange = {
                        start: pos,
                        end: pos
                    };
                    if (typeof item.range.origStart === 'number') {
                        var origPos = item.range.origStart + 1;
                        valueNode.range.origStart = valueNode.range.origEnd = origPos;
                        valueNode.valueRange.origStart = valueNode.valueRange.origEnd = origPos;
                    }
                }
                var pair = new $2f0f2bd5b0ade301$export$56c0d5a1e737357d(key, $2f0f2bd5b0ade301$export$43caf9889c228507(doc, valueNode));
                $2f0f2bd5b0ade301$var$resolvePairComment(item, pair);
                items.push(pair);
                if (key && typeof keyStart === 'number') {
                    if (item.range.start > keyStart + 1024) doc.errors.push($2f0f2bd5b0ade301$var$getLongKeyError(cst, key));
                }
                key = undefined;
                keyStart = null;
                break;
            default:
                if (key !== undefined) items.push(new $2f0f2bd5b0ade301$export$56c0d5a1e737357d(key));
                key = $2f0f2bd5b0ade301$export$43caf9889c228507(doc, item);
                keyStart = item.range.start;
                if (item.error) doc.errors.push(item.error);
                next: for(var j = i + 1;; ++j){
                    var nextItem = cst.items[j];
                    switch(nextItem && nextItem.type){
                        case $DMDG9.T.BLANK_LINE:
                        case $DMDG9.T.COMMENT:
                            continue next;
                        case $DMDG9.T.MAP_VALUE:
                            break next;
                        default:
                            var _msg2 = 'Implicit map keys need to be followed by map values';
                            doc.errors.push(new $DMDG9.g(item, _msg2));
                            break next;
                    }
                }
                if (item.valueRangeContainsNewline) {
                    var _msg3 = 'Implicit map keys need to be on a single line';
                    doc.errors.push(new $DMDG9.g(item, _msg3));
                }
        }
    }
    if (key !== undefined) items.push(new $2f0f2bd5b0ade301$export$56c0d5a1e737357d(key));
    return {
        comments: comments,
        items: items
    };
}
function $2f0f2bd5b0ade301$var$resolveFlowMapItems(doc, cst) {
    var comments = [];
    var items = [];
    var key = undefined;
    var explicitKey = false;
    var next = '{';
    for(var i = 0; i < cst.items.length; ++i){
        var item = cst.items[i];
        if (typeof item.char === 'string') {
            var char = item.char, offset = item.offset;
            if (char === '?' && key === undefined && !explicitKey) {
                explicitKey = true;
                next = ':';
                continue;
            }
            if (char === ':') {
                if (key === undefined) key = null;
                if (next === ':') {
                    next = ',';
                    continue;
                }
            } else {
                if (explicitKey) {
                    if (key === undefined && char !== ',') key = null;
                    explicitKey = false;
                }
                if (key !== undefined) {
                    items.push(new $2f0f2bd5b0ade301$export$56c0d5a1e737357d(key));
                    key = undefined;
                    if (char === ',') {
                        next = ':';
                        continue;
                    }
                }
            }
            if (char === '}') {
                if (i === cst.items.length - 1) continue;
            } else if (char === next) {
                next = ':';
                continue;
            }
            var msg = "Flow map contains an unexpected ".concat(char);
            var err = new $DMDG9.Y(cst, msg);
            err.offset = offset;
            doc.errors.push(err);
        } else if (item.type === $DMDG9.T.BLANK_LINE) comments.push({
            afterKey: !!key,
            before: items.length
        });
        else if (item.type === $DMDG9.T.COMMENT) {
            $2f0f2bd5b0ade301$var$checkFlowCommentSpace(doc.errors, item);
            comments.push({
                afterKey: !!key,
                before: items.length,
                comment: item.comment
            });
        } else if (key === undefined) {
            if (next === ',') doc.errors.push(new $DMDG9.g(item, 'Separator , missing in flow map'));
            key = $2f0f2bd5b0ade301$export$43caf9889c228507(doc, item);
        } else {
            if (next !== ',') doc.errors.push(new $DMDG9.g(item, 'Indicator : missing in flow map entry'));
            items.push(new $2f0f2bd5b0ade301$export$56c0d5a1e737357d(key, $2f0f2bd5b0ade301$export$43caf9889c228507(doc, item)));
            key = undefined;
            explicitKey = false;
        }
    }
    $2f0f2bd5b0ade301$var$checkFlowCollectionEnd(doc.errors, cst);
    if (key !== undefined) items.push(new $2f0f2bd5b0ade301$export$56c0d5a1e737357d(key));
    return {
        comments: comments,
        items: items
    };
}
function $2f0f2bd5b0ade301$export$dda1d9f60106f0e9(doc, cst) {
    if (cst.type !== $DMDG9.T.SEQ && cst.type !== $DMDG9.T.FLOW_SEQ) {
        var msg = "A ".concat(cst.type, " node cannot be resolved as a sequence");
        doc.errors.push(new $DMDG9.Y(cst, msg));
        return null;
    }
    var _ref = cst.type === $DMDG9.T.FLOW_SEQ ? $2f0f2bd5b0ade301$var$resolveFlowSeqItems(doc, cst) : $2f0f2bd5b0ade301$var$resolveBlockSeqItems(doc, cst), comments = _ref.comments, items = _ref.items;
    var seq = new $2f0f2bd5b0ade301$export$8743009a87fcb00f();
    seq.items = items;
    $2f0f2bd5b0ade301$var$resolveComments(seq, comments);
    if (!doc.options.mapAsMap && items.some(function(it) {
        return it instanceof $2f0f2bd5b0ade301$export$56c0d5a1e737357d && it.key instanceof $2f0f2bd5b0ade301$export$e7094788287c5e9b;
    })) {
        var warn = 'Keys with collection values will be stringified as YAML due to JS Object restrictions. Use mapAsMap: true to avoid this.';
        doc.warnings.push(new $DMDG9.f(cst, warn));
    }
    cst.resolved = seq;
    return seq;
}
function $2f0f2bd5b0ade301$var$resolveBlockSeqItems(doc, cst) {
    var comments = [];
    var items = [];
    for(var i = 0; i < cst.items.length; ++i){
        var item = cst.items[i];
        switch(item.type){
            case $DMDG9.T.BLANK_LINE:
                comments.push({
                    before: items.length
                });
                break;
            case $DMDG9.T.COMMENT:
                comments.push({
                    comment: item.comment,
                    before: items.length
                });
                break;
            case $DMDG9.T.SEQ_ITEM:
                if (item.error) doc.errors.push(item.error);
                items.push($2f0f2bd5b0ade301$export$43caf9889c228507(doc, item.node));
                if (item.hasProps) {
                    var msg = 'Sequence items cannot have tags or anchors before the - indicator';
                    doc.errors.push(new $DMDG9.g(item, msg));
                }
                break;
            default:
                if (item.error) doc.errors.push(item.error);
                doc.errors.push(new $DMDG9.Y(item, "Unexpected ".concat(item.type, " node in sequence")));
        }
    }
    return {
        comments: comments,
        items: items
    };
}
function $2f0f2bd5b0ade301$var$resolveFlowSeqItems(doc, cst) {
    var comments = [];
    var items = [];
    var explicitKey = false;
    var key = undefined;
    var keyStart = null;
    var next = '[';
    var prevItem = null;
    for(var i = 0; i < cst.items.length; ++i){
        var item = cst.items[i];
        if (typeof item.char === 'string') {
            var char = item.char, offset = item.offset;
            if (char !== ':' && (explicitKey || key !== undefined)) {
                if (explicitKey && key === undefined) key = next ? items.pop() : null;
                items.push(new $2f0f2bd5b0ade301$export$56c0d5a1e737357d(key));
                explicitKey = false;
                key = undefined;
                keyStart = null;
            }
            if (char === next) next = null;
            else if (!next && char === '?') explicitKey = true;
            else if (next !== '[' && char === ':' && key === undefined) {
                if (next === ',') {
                    key = items.pop();
                    if (key instanceof $2f0f2bd5b0ade301$export$56c0d5a1e737357d) {
                        var msg = 'Chaining flow sequence pairs is invalid';
                        var err = new $DMDG9.g(cst, msg);
                        err.offset = offset;
                        doc.errors.push(err);
                    }
                    if (!explicitKey && typeof keyStart === 'number') {
                        var keyEnd = item.range ? item.range.start : item.offset;
                        if (keyEnd > keyStart + 1024) doc.errors.push($2f0f2bd5b0ade301$var$getLongKeyError(cst, key));
                        var src = prevItem.context.src;
                        for(var _i = keyStart; _i < keyEnd; ++_i)if (src[_i] === '\n') {
                            var _msg = 'Implicit keys of flow sequence pairs need to be on a single line';
                            doc.errors.push(new $DMDG9.g(prevItem, _msg));
                            break;
                        }
                    }
                } else key = null;
                keyStart = null;
                explicitKey = false;
                next = null;
            } else if (next === '[' || char !== ']' || i < cst.items.length - 1) {
                var _msg2 = "Flow sequence contains an unexpected ".concat(char);
                var _err = new $DMDG9.Y(cst, _msg2);
                _err.offset = offset;
                doc.errors.push(_err);
            }
        } else if (item.type === $DMDG9.T.BLANK_LINE) comments.push({
            before: items.length
        });
        else if (item.type === $DMDG9.T.COMMENT) {
            $2f0f2bd5b0ade301$var$checkFlowCommentSpace(doc.errors, item);
            comments.push({
                comment: item.comment,
                before: items.length
            });
        } else {
            if (next) {
                var _msg3 = "Expected a ".concat(next, " in flow sequence");
                doc.errors.push(new $DMDG9.g(item, _msg3));
            }
            var value = $2f0f2bd5b0ade301$export$43caf9889c228507(doc, item);
            if (key === undefined) {
                items.push(value);
                prevItem = item;
            } else {
                items.push(new $2f0f2bd5b0ade301$export$56c0d5a1e737357d(key, value));
                key = undefined;
            }
            keyStart = item.range.start;
            next = ',';
        }
    }
    $2f0f2bd5b0ade301$var$checkFlowCollectionEnd(doc.errors, cst);
    if (key !== undefined) items.push(new $2f0f2bd5b0ade301$export$56c0d5a1e737357d(key));
    return {
        comments: comments,
        items: items
    };
}

});

parcelRequire.register("1Ikgk", function(module, exports) {

$parcel$export(module.exports, "S", () => $13f99e32ee032bd0$export$25ce5a424b770e84);

var $DMDG9 = parcelRequire("DMDG9");

var $42uI7 = parcelRequire("42uI7");

var $lk3XD = parcelRequire("lk3XD");
function $13f99e32ee032bd0$var$createMap(schema, obj, ctx) {
    var map = new $42uI7.d(schema);
    if (obj instanceof Map) {
        var _iterator = $DMDG9._(obj), _step;
        try {
            for(_iterator.s(); !(_step = _iterator.n()).done;){
                var _step$value = $DMDG9.h(_step.value, 2), key = _step$value[0], value = _step$value[1];
                map.items.push(schema.createPair(key, value, ctx));
            }
        } catch (err) {
            _iterator.e(err);
        } finally{
            _iterator.f();
        }
    } else if (obj && $DMDG9.a(obj) === 'object') for(var _i = 0, _Object$keys = Object.keys(obj); _i < _Object$keys.length; _i++){
        var _key = _Object$keys[_i];
        map.items.push(schema.createPair(_key, obj[_key], ctx));
    }
    if (typeof schema.sortMapEntries === 'function') map.items.sort(schema.sortMapEntries);
    return map;
}
var $13f99e32ee032bd0$var$map = {
    createNode: $13f99e32ee032bd0$var$createMap,
    default: true,
    nodeClass: $42uI7.d,
    tag: 'tag:yaml.org,2002:map',
    resolve: $42uI7.g
};
function $13f99e32ee032bd0$var$createSeq(schema, obj, ctx) {
    var seq = new $42uI7.Y(schema);
    if (obj && obj[Symbol.iterator]) {
        var _iterator = $DMDG9._(obj), _step;
        try {
            for(_iterator.s(); !(_step = _iterator.n()).done;){
                var it = _step.value;
                var v = schema.createNode(it, ctx.wrapScalars, null, ctx);
                seq.items.push(v);
            }
        } catch (err) {
            _iterator.e(err);
        } finally{
            _iterator.f();
        }
    }
    return seq;
}
var $13f99e32ee032bd0$var$seq = {
    createNode: $13f99e32ee032bd0$var$createSeq,
    default: true,
    nodeClass: $42uI7.Y,
    tag: 'tag:yaml.org,2002:seq',
    resolve: $42uI7.h
};
var $13f99e32ee032bd0$var$string = {
    identify: function identify(value) {
        return typeof value === 'string';
    },
    default: true,
    tag: 'tag:yaml.org,2002:str',
    resolve: $42uI7.j,
    stringify: function stringify(item, ctx, onComment, onChompKeep) {
        ctx = Object.assign({
            actualString: true
        }, ctx);
        return $42uI7.c(item, ctx, onComment, onChompKeep);
    },
    options: $42uI7.s
};
var $13f99e32ee032bd0$var$failsafe = [
    $13f99e32ee032bd0$var$map,
    $13f99e32ee032bd0$var$seq,
    $13f99e32ee032bd0$var$string
];
/* global BigInt */ var $13f99e32ee032bd0$var$intIdentify$2 = function intIdentify(value) {
    return typeof value === 'bigint' || Number.isInteger(value);
};
var $13f99e32ee032bd0$var$intResolve$1 = function intResolve(src, part, radix) {
    return $42uI7.i.asBigInt ? BigInt(src) : parseInt(part, radix);
};
function $13f99e32ee032bd0$var$intStringify$1(node, radix, prefix) {
    var value = node.value;
    if ($13f99e32ee032bd0$var$intIdentify$2(value) && value >= 0) return prefix + value.toString(radix);
    return $42uI7.k(node);
}
var $13f99e32ee032bd0$var$nullObj = {
    identify: function identify(value) {
        return value == null;
    },
    createNode: function createNode(schema, value, ctx) {
        return ctx.wrapScalars ? new $42uI7.S(null) : null;
    },
    default: true,
    tag: 'tag:yaml.org,2002:null',
    test: /^(?:~|[Nn]ull|NULL)?$/,
    resolve: function resolve() {
        return null;
    },
    options: $42uI7.n,
    stringify: function stringify() {
        return $42uI7.n.nullStr;
    }
};
var $13f99e32ee032bd0$var$boolObj = {
    identify: function identify(value) {
        return typeof value === 'boolean';
    },
    default: true,
    tag: 'tag:yaml.org,2002:bool',
    test: /^(?:[Tt]rue|TRUE|[Ff]alse|FALSE)$/,
    resolve: function resolve(str) {
        return str[0] === 't' || str[0] === 'T';
    },
    options: $42uI7.a,
    stringify: function stringify(_ref) {
        var value = _ref.value;
        return value ? $42uI7.a.trueStr : $42uI7.a.falseStr;
    }
};
var $13f99e32ee032bd0$var$octObj = {
    identify: function identify(value) {
        return $13f99e32ee032bd0$var$intIdentify$2(value) && value >= 0;
    },
    default: true,
    tag: 'tag:yaml.org,2002:int',
    format: 'OCT',
    test: /^0o([0-7]+)$/,
    resolve: function resolve(str, oct) {
        return $13f99e32ee032bd0$var$intResolve$1(str, oct, 8);
    },
    options: $42uI7.i,
    stringify: function stringify(node) {
        return $13f99e32ee032bd0$var$intStringify$1(node, 8, '0o');
    }
};
var $13f99e32ee032bd0$var$intObj = {
    identify: $13f99e32ee032bd0$var$intIdentify$2,
    default: true,
    tag: 'tag:yaml.org,2002:int',
    test: /^[-+]?[0-9]+$/,
    resolve: function resolve(str) {
        return $13f99e32ee032bd0$var$intResolve$1(str, str, 10);
    },
    options: $42uI7.i,
    stringify: $42uI7.k
};
var $13f99e32ee032bd0$var$hexObj = {
    identify: function identify(value) {
        return $13f99e32ee032bd0$var$intIdentify$2(value) && value >= 0;
    },
    default: true,
    tag: 'tag:yaml.org,2002:int',
    format: 'HEX',
    test: /^0x([0-9a-fA-F]+)$/,
    resolve: function resolve(str, hex) {
        return $13f99e32ee032bd0$var$intResolve$1(str, hex, 16);
    },
    options: $42uI7.i,
    stringify: function stringify(node) {
        return $13f99e32ee032bd0$var$intStringify$1(node, 16, '0x');
    }
};
var $13f99e32ee032bd0$var$nanObj = {
    identify: function identify(value) {
        return typeof value === 'number';
    },
    default: true,
    tag: 'tag:yaml.org,2002:float',
    test: /^(?:[-+]?\.inf|(\.nan))$/i,
    resolve: function resolve(str, nan) {
        return nan ? NaN : str[0] === '-' ? Number.NEGATIVE_INFINITY : Number.POSITIVE_INFINITY;
    },
    stringify: $42uI7.k
};
var $13f99e32ee032bd0$var$expObj = {
    identify: function identify(value) {
        return typeof value === 'number';
    },
    default: true,
    tag: 'tag:yaml.org,2002:float',
    format: 'EXP',
    test: /^[-+]?(?:\.[0-9]+|[0-9]+(?:\.[0-9]*)?)[eE][-+]?[0-9]+$/,
    resolve: function resolve(str) {
        return parseFloat(str);
    },
    stringify: function stringify(_ref2) {
        var value = _ref2.value;
        return Number(value).toExponential();
    }
};
var $13f99e32ee032bd0$var$floatObj = {
    identify: function identify(value) {
        return typeof value === 'number';
    },
    default: true,
    tag: 'tag:yaml.org,2002:float',
    test: /^[-+]?(?:\.([0-9]+)|[0-9]+\.([0-9]*))$/,
    resolve: function resolve(str, frac1, frac2) {
        var frac = frac1 || frac2;
        var node = new $42uI7.S(parseFloat(str));
        if (frac && frac[frac.length - 1] === '0') node.minFractionDigits = frac.length;
        return node;
    },
    stringify: $42uI7.k
};
var $13f99e32ee032bd0$var$core = $13f99e32ee032bd0$var$failsafe.concat([
    $13f99e32ee032bd0$var$nullObj,
    $13f99e32ee032bd0$var$boolObj,
    $13f99e32ee032bd0$var$octObj,
    $13f99e32ee032bd0$var$intObj,
    $13f99e32ee032bd0$var$hexObj,
    $13f99e32ee032bd0$var$nanObj,
    $13f99e32ee032bd0$var$expObj,
    $13f99e32ee032bd0$var$floatObj
]);
/* global BigInt */ var $13f99e32ee032bd0$var$intIdentify$1 = function intIdentify(value) {
    return typeof value === 'bigint' || Number.isInteger(value);
};
var $13f99e32ee032bd0$var$stringifyJSON = function stringifyJSON(_ref) {
    var value = _ref.value;
    return JSON.stringify(value);
};
var $13f99e32ee032bd0$var$json = [
    $13f99e32ee032bd0$var$map,
    $13f99e32ee032bd0$var$seq,
    {
        identify: function identify(value) {
            return typeof value === 'string';
        },
        default: true,
        tag: 'tag:yaml.org,2002:str',
        resolve: $42uI7.j,
        stringify: $13f99e32ee032bd0$var$stringifyJSON
    },
    {
        identify: function identify(value) {
            return value == null;
        },
        createNode: function createNode(schema, value, ctx) {
            return ctx.wrapScalars ? new $42uI7.S(null) : null;
        },
        default: true,
        tag: 'tag:yaml.org,2002:null',
        test: /^null$/,
        resolve: function resolve() {
            return null;
        },
        stringify: $13f99e32ee032bd0$var$stringifyJSON
    },
    {
        identify: function identify(value) {
            return typeof value === 'boolean';
        },
        default: true,
        tag: 'tag:yaml.org,2002:bool',
        test: /^true|false$/,
        resolve: function resolve(str) {
            return str === 'true';
        },
        stringify: $13f99e32ee032bd0$var$stringifyJSON
    },
    {
        identify: $13f99e32ee032bd0$var$intIdentify$1,
        default: true,
        tag: 'tag:yaml.org,2002:int',
        test: /^-?(?:0|[1-9][0-9]*)$/,
        resolve: function resolve(str) {
            return $42uI7.i.asBigInt ? BigInt(str) : parseInt(str, 10);
        },
        stringify: function stringify(_ref2) {
            var value = _ref2.value;
            return $13f99e32ee032bd0$var$intIdentify$1(value) ? value.toString() : JSON.stringify(value);
        }
    },
    {
        identify: function identify(value) {
            return typeof value === 'number';
        },
        default: true,
        tag: 'tag:yaml.org,2002:float',
        test: /^-?(?:0|[1-9][0-9]*)(?:\.[0-9]*)?(?:[eE][-+]?[0-9]+)?$/,
        resolve: function resolve(str) {
            return parseFloat(str);
        },
        stringify: $13f99e32ee032bd0$var$stringifyJSON
    }
];
$13f99e32ee032bd0$var$json.scalarFallback = function(str) {
    throw new SyntaxError("Unresolved plain scalar ".concat(JSON.stringify(str)));
};
/* global BigInt */ var $13f99e32ee032bd0$var$boolStringify = function boolStringify(_ref) {
    var value = _ref.value;
    return value ? $42uI7.a.trueStr : $42uI7.a.falseStr;
};
var $13f99e32ee032bd0$var$intIdentify = function intIdentify(value) {
    return typeof value === 'bigint' || Number.isInteger(value);
};
function $13f99e32ee032bd0$var$intResolve(sign, src, radix) {
    var str = src.replace(/_/g, '');
    if ($42uI7.i.asBigInt) {
        switch(radix){
            case 2:
                str = "0b".concat(str);
                break;
            case 8:
                str = "0o".concat(str);
                break;
            case 16:
                str = "0x".concat(str);
                break;
        }
        var _n = BigInt(str);
        return sign === '-' ? BigInt(-1) * _n : _n;
    }
    var n = parseInt(str, radix);
    return sign === '-' ? -1 * n : n;
}
function $13f99e32ee032bd0$var$intStringify(node, radix, prefix) {
    var value = node.value;
    if ($13f99e32ee032bd0$var$intIdentify(value)) {
        var str = value.toString(radix);
        return value < 0 ? '-' + prefix + str.substr(1) : prefix + str;
    }
    return $42uI7.k(node);
}
var $13f99e32ee032bd0$var$yaml11 = $13f99e32ee032bd0$var$failsafe.concat([
    {
        identify: function identify(value) {
            return value == null;
        },
        createNode: function createNode(schema, value, ctx) {
            return ctx.wrapScalars ? new $42uI7.S(null) : null;
        },
        default: true,
        tag: 'tag:yaml.org,2002:null',
        test: /^(?:~|[Nn]ull|NULL)?$/,
        resolve: function resolve() {
            return null;
        },
        options: $42uI7.n,
        stringify: function stringify() {
            return $42uI7.n.nullStr;
        }
    },
    {
        identify: function identify(value) {
            return typeof value === 'boolean';
        },
        default: true,
        tag: 'tag:yaml.org,2002:bool',
        test: /^(?:Y|y|[Yy]es|YES|[Tt]rue|TRUE|[Oo]n|ON)$/,
        resolve: function resolve() {
            return true;
        },
        options: $42uI7.a,
        stringify: $13f99e32ee032bd0$var$boolStringify
    },
    {
        identify: function identify(value) {
            return typeof value === 'boolean';
        },
        default: true,
        tag: 'tag:yaml.org,2002:bool',
        test: /^(?:N|n|[Nn]o|NO|[Ff]alse|FALSE|[Oo]ff|OFF)$/i,
        resolve: function resolve() {
            return false;
        },
        options: $42uI7.a,
        stringify: $13f99e32ee032bd0$var$boolStringify
    },
    {
        identify: $13f99e32ee032bd0$var$intIdentify,
        default: true,
        tag: 'tag:yaml.org,2002:int',
        format: 'BIN',
        test: /^([-+]?)0b([0-1_]+)$/,
        resolve: function resolve(str, sign, bin) {
            return $13f99e32ee032bd0$var$intResolve(sign, bin, 2);
        },
        stringify: function stringify(node) {
            return $13f99e32ee032bd0$var$intStringify(node, 2, '0b');
        }
    },
    {
        identify: $13f99e32ee032bd0$var$intIdentify,
        default: true,
        tag: 'tag:yaml.org,2002:int',
        format: 'OCT',
        test: /^([-+]?)0([0-7_]+)$/,
        resolve: function resolve(str, sign, oct) {
            return $13f99e32ee032bd0$var$intResolve(sign, oct, 8);
        },
        stringify: function stringify(node) {
            return $13f99e32ee032bd0$var$intStringify(node, 8, '0');
        }
    },
    {
        identify: $13f99e32ee032bd0$var$intIdentify,
        default: true,
        tag: 'tag:yaml.org,2002:int',
        test: /^([-+]?)([0-9][0-9_]*)$/,
        resolve: function resolve(str, sign, abs) {
            return $13f99e32ee032bd0$var$intResolve(sign, abs, 10);
        },
        stringify: $42uI7.k
    },
    {
        identify: $13f99e32ee032bd0$var$intIdentify,
        default: true,
        tag: 'tag:yaml.org,2002:int',
        format: 'HEX',
        test: /^([-+]?)0x([0-9a-fA-F_]+)$/,
        resolve: function resolve(str, sign, hex) {
            return $13f99e32ee032bd0$var$intResolve(sign, hex, 16);
        },
        stringify: function stringify(node) {
            return $13f99e32ee032bd0$var$intStringify(node, 16, '0x');
        }
    },
    {
        identify: function identify(value) {
            return typeof value === 'number';
        },
        default: true,
        tag: 'tag:yaml.org,2002:float',
        test: /^(?:[-+]?\.inf|(\.nan))$/i,
        resolve: function resolve(str, nan) {
            return nan ? NaN : str[0] === '-' ? Number.NEGATIVE_INFINITY : Number.POSITIVE_INFINITY;
        },
        stringify: $42uI7.k
    },
    {
        identify: function identify(value) {
            return typeof value === 'number';
        },
        default: true,
        tag: 'tag:yaml.org,2002:float',
        format: 'EXP',
        test: /^[-+]?([0-9][0-9_]*)?(\.[0-9_]*)?[eE][-+]?[0-9]+$/,
        resolve: function resolve(str) {
            return parseFloat(str.replace(/_/g, ''));
        },
        stringify: function stringify(_ref2) {
            var value = _ref2.value;
            return Number(value).toExponential();
        }
    },
    {
        identify: function identify(value) {
            return typeof value === 'number';
        },
        default: true,
        tag: 'tag:yaml.org,2002:float',
        test: /^[-+]?(?:[0-9][0-9_]*)?\.([0-9_]*)$/,
        resolve: function resolve(str, frac) {
            var node = new $42uI7.S(parseFloat(str.replace(/_/g, '')));
            if (frac) {
                var f = frac.replace(/_/g, '');
                if (f[f.length - 1] === '0') node.minFractionDigits = f.length;
            }
            return node;
        },
        stringify: $42uI7.k
    }
], $lk3XD.b, $lk3XD.o, $lk3XD.p, $lk3XD.s, $lk3XD.i, $lk3XD.f, $lk3XD.t);
var $13f99e32ee032bd0$var$schemas = {
    core: $13f99e32ee032bd0$var$core,
    failsafe: $13f99e32ee032bd0$var$failsafe,
    json: $13f99e32ee032bd0$var$json,
    yaml11: $13f99e32ee032bd0$var$yaml11
};
var $13f99e32ee032bd0$var$tags = {
    binary: $lk3XD.b,
    bool: $13f99e32ee032bd0$var$boolObj,
    float: $13f99e32ee032bd0$var$floatObj,
    floatExp: $13f99e32ee032bd0$var$expObj,
    floatNaN: $13f99e32ee032bd0$var$nanObj,
    floatTime: $lk3XD.f,
    int: $13f99e32ee032bd0$var$intObj,
    intHex: $13f99e32ee032bd0$var$hexObj,
    intOct: $13f99e32ee032bd0$var$octObj,
    intTime: $lk3XD.i,
    map: $13f99e32ee032bd0$var$map,
    null: $13f99e32ee032bd0$var$nullObj,
    omap: $lk3XD.o,
    pairs: $lk3XD.p,
    seq: $13f99e32ee032bd0$var$seq,
    set: $lk3XD.s,
    timestamp: $lk3XD.t
};
function $13f99e32ee032bd0$var$findTagObject(value, tagName, tags) {
    if (tagName) {
        var match = tags.filter(function(t) {
            return t.tag === tagName;
        });
        var tagObj = match.find(function(t) {
            return !t.format;
        }) || match[0];
        if (!tagObj) throw new Error("Tag ".concat(tagName, " not found"));
        return tagObj;
    } // TODO: deprecate/remove class check
    return tags.find(function(t) {
        return (t.identify && t.identify(value) || t.class && value instanceof t.class) && !t.format;
    });
}
function $13f99e32ee032bd0$var$createNode(value, tagName, ctx) {
    if (value instanceof $42uI7.N) return value;
    var defaultPrefix = ctx.defaultPrefix, onTagObj = ctx.onTagObj, prevObjects = ctx.prevObjects, schema = ctx.schema, wrapScalars = ctx.wrapScalars;
    if (tagName && tagName.startsWith('!!')) tagName = defaultPrefix + tagName.slice(2);
    var tagObj = $13f99e32ee032bd0$var$findTagObject(value, tagName, schema.tags);
    if (!tagObj) {
        if (typeof value.toJSON === 'function') value = value.toJSON();
        if (!value || $DMDG9.a(value) !== 'object') return wrapScalars ? new $42uI7.S(value) : value;
        tagObj = value instanceof Map ? $13f99e32ee032bd0$var$map : value[Symbol.iterator] ? $13f99e32ee032bd0$var$seq : $13f99e32ee032bd0$var$map;
    }
    if (onTagObj) {
        onTagObj(tagObj);
        delete ctx.onTagObj;
    } // Detect duplicate references to the same object & use Alias nodes for all
    // after first. The `obj` wrapper allows for circular references to resolve.
    var obj = {
        value: undefined,
        node: undefined
    };
    if (value && $DMDG9.a(value) === 'object' && prevObjects) {
        var prev = prevObjects.get(value);
        if (prev) {
            var alias = new $42uI7.A(prev); // leaves source dirty; must be cleaned by caller
            ctx.aliasNodes.push(alias); // defined along with prevObjects
            return alias;
        }
        obj.value = value;
        prevObjects.set(value, obj);
    }
    obj.node = tagObj.createNode ? tagObj.createNode(ctx.schema, value, ctx) : wrapScalars ? new $42uI7.S(value) : value;
    if (tagName && obj.node instanceof $42uI7.N) obj.node.tag = tagName;
    return obj.node;
}
function $13f99e32ee032bd0$var$getSchemaTags(schemas, knownTags, customTags, schemaId) {
    var tags = schemas[schemaId.replace(/\W/g, '')]; // 'yaml-1.1' -> 'yaml11'
    if (!tags) {
        var keys = Object.keys(schemas).map(function(key) {
            return JSON.stringify(key);
        }).join(', ');
        throw new Error("Unknown schema \"".concat(schemaId, "\"; use one of ").concat(keys));
    }
    if (Array.isArray(customTags)) {
        var _iterator = $DMDG9._(customTags), _step;
        try {
            for(_iterator.s(); !(_step = _iterator.n()).done;){
                var tag = _step.value;
                tags = tags.concat(tag);
            }
        } catch (err) {
            _iterator.e(err);
        } finally{
            _iterator.f();
        }
    } else if (typeof customTags === 'function') tags = customTags(tags.slice());
    for(var i = 0; i < tags.length; ++i){
        var _tag = tags[i];
        if (typeof _tag === 'string') {
            var tagObj = knownTags[_tag];
            if (!tagObj) {
                var _keys = Object.keys(knownTags).map(function(key) {
                    return JSON.stringify(key);
                }).join(', ');
                throw new Error("Unknown custom tag \"".concat(_tag, "\"; use one of ").concat(_keys));
            }
            tags[i] = tagObj;
        }
    }
    return tags;
}
var $13f99e32ee032bd0$var$sortMapEntriesByKey = function sortMapEntriesByKey(a, b) {
    return a.key < b.key ? -1 : a.key > b.key ? 1 : 0;
};
var $13f99e32ee032bd0$export$25ce5a424b770e84 = /*#__PURE__*/ function() {
    // TODO: remove in v2
    // TODO: remove in v2
    function $13f99e32ee032bd0$export$25ce5a424b770e84(_ref) {
        var customTags = _ref.customTags, merge = _ref.merge, schema = _ref.schema, sortMapEntries = _ref.sortMapEntries, deprecatedCustomTags = _ref.tags;
        $DMDG9.c(this, $13f99e32ee032bd0$export$25ce5a424b770e84);
        this.merge = !!merge;
        this.name = schema;
        this.sortMapEntries = sortMapEntries === true ? $13f99e32ee032bd0$var$sortMapEntriesByKey : sortMapEntries || null;
        if (!customTags && deprecatedCustomTags) $lk3XD.a('tags', 'customTags');
        this.tags = $13f99e32ee032bd0$var$getSchemaTags($13f99e32ee032bd0$var$schemas, $13f99e32ee032bd0$var$tags, customTags || deprecatedCustomTags, schema);
    }
    $DMDG9.b($13f99e32ee032bd0$export$25ce5a424b770e84, [
        {
            key: "createNode",
            value: function createNode$1(value, wrapScalars, tagName, ctx) {
                var baseCtx = {
                    defaultPrefix: $13f99e32ee032bd0$export$25ce5a424b770e84.defaultPrefix,
                    schema: this,
                    wrapScalars: wrapScalars
                };
                var createCtx = ctx ? Object.assign(ctx, baseCtx) : baseCtx;
                return $13f99e32ee032bd0$var$createNode(value, tagName, createCtx);
            }
        },
        {
            key: "createPair",
            value: function createPair(key, value, ctx) {
                if (!ctx) ctx = {
                    wrapScalars: true
                };
                var k = this.createNode(key, ctx.wrapScalars, null, ctx);
                var v = this.createNode(value, ctx.wrapScalars, null, ctx);
                return new $42uI7.P(k, v);
            }
        }
    ]);
    return $13f99e32ee032bd0$export$25ce5a424b770e84;
}();
$DMDG9.e($13f99e32ee032bd0$export$25ce5a424b770e84, "defaultPrefix", $DMDG9.d);
$DMDG9.e($13f99e32ee032bd0$export$25ce5a424b770e84, "defaultTags", $DMDG9.n);

});
parcelRequire.register("lk3XD", function(module, exports) {

$parcel$export(module.exports, "b", () => $f85e89c2d34f8f77$export$8b22cf2602fb60ce);
$parcel$export(module.exports, "p", () => $f85e89c2d34f8f77$export$ffb5f4729a158638);
$parcel$export(module.exports, "o", () => $f85e89c2d34f8f77$export$ae1af26003f05816);
$parcel$export(module.exports, "s", () => $f85e89c2d34f8f77$export$2408f22a0fab9ae5);
$parcel$export(module.exports, "i", () => $f85e89c2d34f8f77$export$23f2a1d2818174ef);
$parcel$export(module.exports, "f", () => $f85e89c2d34f8f77$export$2d1720544b23b823);
$parcel$export(module.exports, "t", () => $f85e89c2d34f8f77$export$625550452a3fa3ec);
$parcel$export(module.exports, "w", () => $f85e89c2d34f8f77$export$efccba1c4a2ef57b);
$parcel$export(module.exports, "a", () => $f85e89c2d34f8f77$export$407448d2b89b1813);

var $DMDG9 = parcelRequire("DMDG9");

var $42uI7 = parcelRequire("42uI7");

var $4DZrq = parcelRequire("4DZrq");

var $ax3hF = parcelRequire("ax3hF");
var $f85e89c2d34f8f77$require$Buffer = $ax3hF.Buffer;
/* global atob, btoa, Buffer */ var $f85e89c2d34f8f77$export$8b22cf2602fb60ce = {
    identify: function identify(value) {
        return value instanceof Uint8Array;
    },
    // Buffer inherits from Uint8Array
    default: false,
    tag: 'tag:yaml.org,2002:binary',
    /**
   * Returns a Buffer in node and an Uint8Array in browsers
   *
   * To use the resulting buffer as an image, you'll want to do something like:
   *
   *   const blob = new Blob([buffer], { type: 'image/jpeg' })
   *   document.querySelector('#photo').src = URL.createObjectURL(blob)
   */ resolve: function resolve(doc, node) {
        var src = $42uI7.j(doc, node);
        if (typeof $f85e89c2d34f8f77$require$Buffer === 'function') return $f85e89c2d34f8f77$require$Buffer.from(src, 'base64');
        else if (typeof atob === 'function') {
            // On IE 11, atob() can't handle newlines
            var str = atob(src.replace(/[\n\r]/g, ''));
            var buffer = new Uint8Array(str.length);
            for(var i = 0; i < str.length; ++i)buffer[i] = str.charCodeAt(i);
            return buffer;
        } else {
            var msg = 'This environment does not support reading binary tags; either Buffer or atob is required';
            doc.errors.push(new $DMDG9.o(node, msg));
            return null;
        }
    },
    options: $42uI7.b,
    stringify: function stringify(_ref, ctx, onComment, onChompKeep) {
        var comment = _ref.comment, type = _ref.type, value = _ref.value;
        var src;
        if (typeof $f85e89c2d34f8f77$require$Buffer === 'function') src = value instanceof $f85e89c2d34f8f77$require$Buffer ? value.toString('base64') : $f85e89c2d34f8f77$require$Buffer.from(value.buffer).toString('base64');
        else if (typeof btoa === 'function') {
            var s = '';
            for(var i = 0; i < value.length; ++i)s += String.fromCharCode(value[i]);
            src = btoa(s);
        } else throw new Error('This environment does not support writing binary tags; either Buffer or btoa is required');
        if (!type) type = $42uI7.b.defaultType;
        if (type === $DMDG9.T.QUOTE_DOUBLE) value = src;
        else {
            var lineWidth = $42uI7.b.lineWidth;
            var n = Math.ceil(src.length / lineWidth);
            var lines = new Array(n);
            for(var _i = 0, o = 0; _i < n; ++_i, o += lineWidth)lines[_i] = src.substr(o, lineWidth);
            value = lines.join(type === $DMDG9.T.BLOCK_LITERAL ? '\n' : ' ');
        }
        return $42uI7.c({
            comment: comment,
            type: type,
            value: value
        }, ctx, onComment, onChompKeep);
    }
};
function $f85e89c2d34f8f77$var$parsePairs(doc, cst) {
    var seq = $42uI7.h(doc, cst);
    for(var i = 0; i < seq.items.length; ++i){
        var item = seq.items[i];
        if (item instanceof $42uI7.P) continue;
        else if (item instanceof $42uI7.d) {
            if (item.items.length > 1) {
                var msg = 'Each pair must have its own sequence indicator';
                throw new $DMDG9.g(cst, msg);
            }
            var pair = item.items[0] || new $42uI7.P();
            if (item.commentBefore) pair.commentBefore = pair.commentBefore ? "".concat(item.commentBefore, "\n").concat(pair.commentBefore) : item.commentBefore;
            if (item.comment) pair.comment = pair.comment ? "".concat(item.comment, "\n").concat(pair.comment) : item.comment;
            item = pair;
        }
        seq.items[i] = item instanceof $42uI7.P ? item : new $42uI7.P(item);
    }
    return seq;
}
function $f85e89c2d34f8f77$var$createPairs(schema, iterable, ctx) {
    var $f85e89c2d34f8f77$export$ffb5f4729a158638 = new $42uI7.Y(schema);
    $f85e89c2d34f8f77$export$ffb5f4729a158638.tag = 'tag:yaml.org,2002:pairs';
    var _iterator = $DMDG9._(iterable), _step;
    try {
        for(_iterator.s(); !(_step = _iterator.n()).done;){
            var it = _step.value;
            var key = void 0, value = void 0;
            if (Array.isArray(it)) {
                if (it.length === 2) {
                    key = it[0];
                    value = it[1];
                } else throw new TypeError("Expected [key, value] tuple: ".concat(it));
            } else if (it && it instanceof Object) {
                var keys = Object.keys(it);
                if (keys.length === 1) {
                    key = keys[0];
                    value = it[key];
                } else throw new TypeError("Expected { key: value } tuple: ".concat(it));
            } else key = it;
            var pair = schema.createPair(key, value, ctx);
            $f85e89c2d34f8f77$export$ffb5f4729a158638.items.push(pair);
        }
    } catch (err) {
        _iterator.e(err);
    } finally{
        _iterator.f();
    }
    return $f85e89c2d34f8f77$export$ffb5f4729a158638;
}
var $f85e89c2d34f8f77$export$ffb5f4729a158638 = {
    default: false,
    tag: 'tag:yaml.org,2002:pairs',
    resolve: $f85e89c2d34f8f77$var$parsePairs,
    createNode: $f85e89c2d34f8f77$var$createPairs
};
var $f85e89c2d34f8f77$var$YAMLOMap = /*#__PURE__*/ function(_YAMLSeq) {
    $DMDG9.j(YAMLOMap, _YAMLSeq);
    var _super = $DMDG9.k(YAMLOMap);
    function YAMLOMap() {
        var _this;
        $DMDG9.c(this, YAMLOMap);
        _this = _super.call(this);
        $DMDG9.e($DMDG9.p(_this), "add", $42uI7.d.prototype.add.bind($DMDG9.p(_this)));
        $DMDG9.e($DMDG9.p(_this), "delete", $42uI7.d.prototype.delete.bind($DMDG9.p(_this)));
        $DMDG9.e($DMDG9.p(_this), "get", $42uI7.d.prototype.get.bind($DMDG9.p(_this)));
        $DMDG9.e($DMDG9.p(_this), "has", $42uI7.d.prototype.has.bind($DMDG9.p(_this)));
        $DMDG9.e($DMDG9.p(_this), "set", $42uI7.d.prototype.set.bind($DMDG9.p(_this)));
        _this.tag = YAMLOMap.tag;
        return _this;
    }
    $DMDG9.b(YAMLOMap, [
        {
            key: "toJSON",
            value: function toJSON$1(_, ctx) {
                var map = new Map();
                if (ctx && ctx.onCreate) ctx.onCreate(map);
                var _iterator = $DMDG9._(this.items), _step;
                try {
                    for(_iterator.s(); !(_step = _iterator.n()).done;){
                        var pair = _step.value;
                        var key = void 0, value = void 0;
                        if (pair instanceof $42uI7.P) {
                            key = $42uI7.t(pair.key, '', ctx);
                            value = $42uI7.t(pair.value, key, ctx);
                        } else key = $42uI7.t(pair, '', ctx);
                        if (map.has(key)) throw new Error('Ordered maps must not include duplicate keys');
                        map.set(key, value);
                    }
                } catch (err) {
                    _iterator.e(err);
                } finally{
                    _iterator.f();
                }
                return map;
            }
        }
    ]);
    return YAMLOMap;
}($42uI7.Y);
$DMDG9.e($f85e89c2d34f8f77$var$YAMLOMap, "tag", 'tag:yaml.org,2002:omap');
function $f85e89c2d34f8f77$var$parseOMap(doc, cst) {
    var $f85e89c2d34f8f77$export$ffb5f4729a158638 = $f85e89c2d34f8f77$var$parsePairs(doc, cst);
    var seenKeys = [];
    var _iterator2 = $DMDG9._($f85e89c2d34f8f77$export$ffb5f4729a158638.items), _step2;
    try {
        for(_iterator2.s(); !(_step2 = _iterator2.n()).done;){
            var key = _step2.value.key;
            if (key instanceof $42uI7.S) {
                if (seenKeys.includes(key.value)) {
                    var msg = 'Ordered maps must not include duplicate keys';
                    throw new $DMDG9.g(cst, msg);
                } else seenKeys.push(key.value);
            }
        }
    } catch (err) {
        _iterator2.e(err);
    } finally{
        _iterator2.f();
    }
    return Object.assign(new $f85e89c2d34f8f77$var$YAMLOMap(), $f85e89c2d34f8f77$export$ffb5f4729a158638);
}
function $f85e89c2d34f8f77$var$createOMap(schema, iterable, ctx) {
    var $f85e89c2d34f8f77$export$ffb5f4729a158638 = $f85e89c2d34f8f77$var$createPairs(schema, iterable, ctx);
    var $f85e89c2d34f8f77$export$ae1af26003f05816 = new $f85e89c2d34f8f77$var$YAMLOMap();
    $f85e89c2d34f8f77$export$ae1af26003f05816.items = $f85e89c2d34f8f77$export$ffb5f4729a158638.items;
    return $f85e89c2d34f8f77$export$ae1af26003f05816;
}
var $f85e89c2d34f8f77$export$ae1af26003f05816 = {
    identify: function identify(value) {
        return value instanceof Map;
    },
    nodeClass: $f85e89c2d34f8f77$var$YAMLOMap,
    default: false,
    tag: 'tag:yaml.org,2002:omap',
    resolve: $f85e89c2d34f8f77$var$parseOMap,
    createNode: $f85e89c2d34f8f77$var$createOMap
};
var $f85e89c2d34f8f77$var$YAMLSet = /*#__PURE__*/ function(_YAMLMap) {
    $DMDG9.j(YAMLSet, _YAMLMap);
    var _super = $DMDG9.k(YAMLSet);
    function YAMLSet() {
        var _this;
        $DMDG9.c(this, YAMLSet);
        _this = _super.call(this);
        _this.tag = YAMLSet.tag;
        return _this;
    }
    $DMDG9.b(YAMLSet, [
        {
            key: "add",
            value: function add(key) {
                var pair = key instanceof $42uI7.P ? key : new $42uI7.P(key);
                var prev = $42uI7.l(this.items, pair.key);
                if (!prev) this.items.push(pair);
            }
        },
        {
            key: "get",
            value: function get(key, keepPair) {
                var pair = $42uI7.l(this.items, key);
                return !keepPair && pair instanceof $42uI7.P ? pair.key instanceof $42uI7.S ? pair.key.value : pair.key : pair;
            }
        },
        {
            key: "set",
            value: function $f85e89c2d34f8f77$export$2408f22a0fab9ae5(key, value) {
                if (typeof value !== 'boolean') throw new Error("Expected boolean value for set(key, value) in a YAML set, not ".concat($DMDG9.a(value)));
                var prev = $42uI7.l(this.items, key);
                if (prev && !value) this.items.splice(this.items.indexOf(prev), 1);
                else if (!prev && value) this.items.push(new $42uI7.P(key));
            }
        },
        {
            key: "toJSON",
            value: function toJSON(_, ctx) {
                return $DMDG9.l($DMDG9.m(YAMLSet.prototype), "toJSON", this).call(this, _, ctx, Set);
            }
        },
        {
            key: "toString",
            value: function toString(ctx, onComment, onChompKeep) {
                if (!ctx) return JSON.stringify(this);
                if (this.hasAllNullValues()) return $DMDG9.l($DMDG9.m(YAMLSet.prototype), "toString", this).call(this, ctx, onComment, onChompKeep);
                else throw new Error('Set items must all have null values');
            }
        }
    ]);
    return YAMLSet;
}($42uI7.d);
$DMDG9.e($f85e89c2d34f8f77$var$YAMLSet, "tag", 'tag:yaml.org,2002:set');
function $f85e89c2d34f8f77$var$parseSet(doc, cst) {
    var map = $42uI7.g(doc, cst);
    if (!map.hasAllNullValues()) throw new $DMDG9.g(cst, 'Set items must all have null values');
    return Object.assign(new $f85e89c2d34f8f77$var$YAMLSet(), map);
}
function $f85e89c2d34f8f77$var$createSet(schema, iterable, ctx) {
    var $f85e89c2d34f8f77$export$2408f22a0fab9ae5 = new $f85e89c2d34f8f77$var$YAMLSet();
    var _iterator = $DMDG9._(iterable), _step;
    try {
        for(_iterator.s(); !(_step = _iterator.n()).done;){
            var value = _step.value;
            $f85e89c2d34f8f77$export$2408f22a0fab9ae5.items.push(schema.createPair(value, null, ctx));
        }
    } catch (err) {
        _iterator.e(err);
    } finally{
        _iterator.f();
    }
    return $f85e89c2d34f8f77$export$2408f22a0fab9ae5;
}
var $f85e89c2d34f8f77$export$2408f22a0fab9ae5 = {
    identify: function identify(value) {
        return value instanceof Set;
    },
    nodeClass: $f85e89c2d34f8f77$var$YAMLSet,
    default: false,
    tag: 'tag:yaml.org,2002:set',
    resolve: $f85e89c2d34f8f77$var$parseSet,
    createNode: $f85e89c2d34f8f77$var$createSet
};
var $f85e89c2d34f8f77$var$parseSexagesimal = function parseSexagesimal(sign, parts) {
    var n1 = parts.split(':').reduce(function(n, p) {
        return n * 60 + Number(p);
    }, 0);
    return sign === '-' ? -n1 : n1;
}; // hhhh:mm:ss.sss
var $f85e89c2d34f8f77$var$stringifySexagesimal = function stringifySexagesimal(_ref) {
    var value = _ref.value;
    if (isNaN(value) || !isFinite(value)) return $42uI7.k(value);
    var sign = '';
    if (value < 0) {
        sign = '-';
        value = Math.abs(value);
    }
    var parts = [
        value % 60
    ]; // seconds, including ms
    if (value < 60) parts.unshift(0); // at least one : is required
    else {
        value = Math.round((value - parts[0]) / 60);
        parts.unshift(value % 60); // minutes
        if (value >= 60) {
            value = Math.round((value - parts[0]) / 60);
            parts.unshift(value); // hours
        }
    }
    return sign + parts.map(function(n) {
        return n < 10 ? '0' + String(n) : String(n);
    }).join(':').replace(/000000\d*$/, '') // % 60 may introduce error
    ;
};
var $f85e89c2d34f8f77$export$23f2a1d2818174ef = {
    identify: function identify(value) {
        return typeof value === 'number';
    },
    default: true,
    tag: 'tag:yaml.org,2002:int',
    format: 'TIME',
    test: /^([-+]?)([0-9][0-9_]*(?::[0-5]?[0-9])+)$/,
    resolve: function resolve(str, sign, parts) {
        return $f85e89c2d34f8f77$var$parseSexagesimal(sign, parts.replace(/_/g, ''));
    },
    stringify: $f85e89c2d34f8f77$var$stringifySexagesimal
};
var $f85e89c2d34f8f77$export$2d1720544b23b823 = {
    identify: function identify(value) {
        return typeof value === 'number';
    },
    default: true,
    tag: 'tag:yaml.org,2002:float',
    format: 'TIME',
    test: /^([-+]?)([0-9][0-9_]*(?::[0-5]?[0-9])+\.[0-9_]*)$/,
    resolve: function resolve(str, sign, parts) {
        return $f85e89c2d34f8f77$var$parseSexagesimal(sign, parts.replace(/_/g, ''));
    },
    stringify: $f85e89c2d34f8f77$var$stringifySexagesimal
};
var $f85e89c2d34f8f77$export$625550452a3fa3ec = {
    identify: function identify(value) {
        return value instanceof Date;
    },
    default: true,
    tag: 'tag:yaml.org,2002:timestamp',
    // If the time zone is omitted, the timestamp is assumed to be specified in UTC. The time part
    // may be omitted altogether, resulting in a date format. In such a case, the time part is
    // assumed to be 00:00:00Z (start of day, UTC).
    test: RegExp("^(?:([0-9]{4})-([0-9]{1,2})-([0-9]{1,2})(?:(?:t|T|[ \\t]+)([0-9]{1,2}):([0-9]{1,2}):([0-9]{1,2}(\\.[0-9]+)?)(?:[ \\t]*(Z|[-+][012]?[0-9](?::[0-9]{2})?))?)?)$"),
    resolve: function resolve(str, year, month, day, hour, minute, second, millisec, tz) {
        if (millisec) millisec = (millisec + '00').substr(1, 3);
        var date = Date.UTC(year, month - 1, day, hour || 0, minute || 0, second || 0, millisec || 0);
        if (tz && tz !== 'Z') {
            var d = $f85e89c2d34f8f77$var$parseSexagesimal(tz[0], tz.slice(1));
            if (Math.abs(d) < 30) d *= 60;
            date -= 60000 * d;
        }
        return new Date(date);
    },
    stringify: function stringify(_ref2) {
        var value = _ref2.value;
        return value.toISOString().replace(/((T00:00)?:00)?\.000Z$/, '');
    }
};
/* global console, process, YAML_SILENCE_DEPRECATION_WARNINGS, YAML_SILENCE_WARNINGS */ function $f85e89c2d34f8f77$var$shouldWarn(deprecation) {
    var env = typeof $4DZrq !== 'undefined' && $4DZrq.env || {};
    if (deprecation) {
        if (typeof YAML_SILENCE_DEPRECATION_WARNINGS !== 'undefined') return !YAML_SILENCE_DEPRECATION_WARNINGS;
        return !env.YAML_SILENCE_DEPRECATION_WARNINGS;
    }
    if (typeof YAML_SILENCE_WARNINGS !== 'undefined') return !YAML_SILENCE_WARNINGS;
    return !env.YAML_SILENCE_WARNINGS;
}
function $f85e89c2d34f8f77$export$efccba1c4a2ef57b(warning, type) {
    if ($f85e89c2d34f8f77$var$shouldWarn(false)) {
        var emit = typeof $4DZrq !== 'undefined' && $4DZrq.emitWarning; // This will throw in Jest if `warning` is an Error instance due to
        // https://github.com/facebook/jest/issues/2549
        if (emit) emit(warning, type);
        else // eslint-disable-next-line no-console
        console.warn(type ? "".concat(type, ": ").concat(warning) : warning);
    }
}
function $f85e89c2d34f8f77$export$db3b6bfb95261072(filename) {
    if ($f85e89c2d34f8f77$var$shouldWarn(true)) {
        var path = filename.replace(/.*yaml[/\\]/i, '').replace(/\.js$/, '').replace(/\\/g, '/');
        $f85e89c2d34f8f77$export$efccba1c4a2ef57b("The endpoint 'yaml/".concat(path, "' will be removed in a future release."), 'DeprecationWarning');
    }
}
var $f85e89c2d34f8f77$var$warned = {};
function $f85e89c2d34f8f77$export$407448d2b89b1813(name, alternative) {
    if (!$f85e89c2d34f8f77$var$warned[name] && $f85e89c2d34f8f77$var$shouldWarn(true)) {
        $f85e89c2d34f8f77$var$warned[name] = true;
        var msg = "The option '".concat(name, "' will be removed in a future release");
        msg += alternative ? ", use '".concat(alternative, "' instead.") : '.';
        $f85e89c2d34f8f77$export$efccba1c4a2ef57b(msg, 'DeprecationWarning');
    }
}

});



parcelRequire.register("fU773", function(module, exports) {




module.exports = Promise.all([
    (parcelRequire("78S7W"))(new URL((parcelRequire("aKzDW")).resolve("5NKGo"), import.meta.url).toString()),
    import("./" + (parcelRequire("aKzDW")).resolve("2Tez0")),
    import("./" + (parcelRequire("aKzDW")).resolve("2MxqH"))
]).then(()=>parcelRequire('1IV1P')
);

});
parcelRequire.register("78S7W", function(module, exports) {
"use strict";

var $drOOz = parcelRequire("drOOz");
module.exports = $drOOz(function(bundle) {
    return new Promise(function(resolve, reject) {
        // Don't insert the same link element twice (e.g. if it was already in the HTML)
        var existingLinks = document.getElementsByTagName('link');
        if ([].concat(existingLinks).some(function isCurrentBundle(link) {
            return link.href === bundle && link.rel.indexOf('stylesheet') > -1;
        })) {
            resolve();
            return;
        }
        var link1 = document.createElement('link');
        link1.rel = 'stylesheet';
        link1.href = bundle;
        link1.onerror = function(e) {
            link1.onerror = link1.onload = null;
            link1.remove();
            reject(e);
        };
        link1.onload = function() {
            link1.onerror = link1.onload = null;
            resolve();
        };
        document.getElementsByTagName('head')[0].appendChild(link1);
    });
});

});
parcelRequire.register("drOOz", function(module, exports) {
"use strict";
var $9ca536af4281fa60$var$cachedBundles = {};
var $9ca536af4281fa60$var$cachedPreloads = {};
var $9ca536af4281fa60$var$cachedPrefetches = {};
function $9ca536af4281fa60$var$getCache(type) {
    switch(type){
        case 'preload':
            return $9ca536af4281fa60$var$cachedPreloads;
        case 'prefetch':
            return $9ca536af4281fa60$var$cachedPrefetches;
        default:
            return $9ca536af4281fa60$var$cachedBundles;
    }
}
module.exports = function(loader, type) {
    return function(bundle) {
        var cache = $9ca536af4281fa60$var$getCache(type);
        if (cache[bundle]) return cache[bundle];
        return cache[bundle] = loader.apply(null, arguments).catch(function(e) {
            delete cache[bundle];
            throw e;
        });
    };
};

});



parcelRequire.register("401cX", function(module, exports) {



module.exports = Promise.all([
    (parcelRequire("78S7W"))(new URL((parcelRequire("aKzDW")).resolve("5NKGo"), import.meta.url).toString()),
    import("./" + (parcelRequire("aKzDW")).resolve("6HLxC"))
]).then(()=>parcelRequire('5q283')
);

});

parcelRequire.register("dIwFy", function(module, exports) {



module.exports = Promise.all([
    (parcelRequire("78S7W"))(new URL((parcelRequire("aKzDW")).resolve("5NKGo"), import.meta.url).toString()),
    import("./" + (parcelRequire("aKzDW")).resolve("j5c8r"))
]).then(()=>parcelRequire('86ZEt')
);

});

parcelRequire.register("e0p8h", function(module, exports) {



module.exports = Promise.all([
    (parcelRequire("78S7W"))(new URL((parcelRequire("aKzDW")).resolve("5NKGo"), import.meta.url).toString()),
    import("./" + (parcelRequire("aKzDW")).resolve("gFLWa"))
]).then(()=>parcelRequire('gbMUR')
);

});

parcelRequire.register("iTYPm", function(module, exports) {

module.exports = import("./" + (parcelRequire("aKzDW")).resolve("386YG")).then(()=>parcelRequire('1UxV9')
);

});

parcelRequire.register("8H55E", function(module, exports) {

module.exports = import("./" + (parcelRequire("aKzDW")).resolve("96Cuj")).then(()=>parcelRequire('2o8zk')
);

});

parcelRequire.register("2HlO2", function(module, exports) {

module.exports = import("./" + (parcelRequire("aKzDW")).resolve("cC9AK")).then(()=>parcelRequire('8cNXv')
);

});

parcelRequire.register("jCTyQ", function(module, exports) {

module.exports = import("./" + (parcelRequire("aKzDW")).resolve("92aHR")).then(()=>parcelRequire('17Pnp')
);

});

parcelRequire.register("367y7", function(module, exports) {

module.exports = import("./" + (parcelRequire("aKzDW")).resolve("cWM23")).then(()=>parcelRequire('2AGxt')
);

});

parcelRequire.register("a6edP", function(module, exports) {

module.exports = import("./" + (parcelRequire("aKzDW")).resolve("iqhkq")).then(()=>parcelRequire('54lA1')
);

});

parcelRequire.register("kmmXc", function(module, exports) {

module.exports = import("./" + (parcelRequire("aKzDW")).resolve("gJjgm")).then(()=>parcelRequire('eKdOH')
);

});

parcelRequire.register("cBt83", function(module, exports) {

module.exports = import("./" + (parcelRequire("aKzDW")).resolve("6KMEZ")).then(()=>parcelRequire('7ku2K')
);

});

parcelRequire.register("ciOdx", function(module, exports) {

module.exports = import("./" + (parcelRequire("aKzDW")).resolve("ey7g2")).then(()=>parcelRequire('3EsFJ')
);

});

parcelRequire.register("cfhvA", function(module, exports) {

module.exports = import("./" + (parcelRequire("aKzDW")).resolve("3U181")).then(()=>parcelRequire('gMine')
);

});

parcelRequire.register("8aRCU", function(module, exports) {

module.exports = import("./" + (parcelRequire("aKzDW")).resolve("zkmlX")).then(()=>parcelRequire('jdNgO')
);

});

parcelRequire.register("dJO6u", function(module, exports) {

module.exports = import("./" + (parcelRequire("aKzDW")).resolve("7GZ0h")).then(()=>parcelRequire('6MQut')
);

});

parcelRequire.register("37i5t", function(module, exports) {

module.exports = import("./" + (parcelRequire("aKzDW")).resolve("9IUor")).then(()=>parcelRequire('qGhTA')
);

});

parcelRequire.register("bZEay", function(module, exports) {

module.exports = import("./" + (parcelRequire("aKzDW")).resolve("lJTMC")).then(()=>parcelRequire('o0B29')
);

});

parcelRequire.register("eRAKK", function(module, exports) {

module.exports = import("./" + (parcelRequire("aKzDW")).resolve("byNgD")).then(()=>parcelRequire('1vqOg')
);

});

parcelRequire.register("d5pOl", function(module, exports) {

module.exports = import("./" + (parcelRequire("aKzDW")).resolve("6jVMp")).then(()=>parcelRequire('crID8')
);

});

parcelRequire.register("eL2cl", function(module, exports) {

module.exports = import("./" + (parcelRequire("aKzDW")).resolve("5QpBx")).then(()=>parcelRequire('i2Iip')
);

});

parcelRequire.register("b6JBQ", function(module, exports) {

module.exports = import("./" + (parcelRequire("aKzDW")).resolve("a9Thi")).then(()=>parcelRequire('2SoAN')
);

});

parcelRequire.register("ku4P3", function(module, exports) {

module.exports = import("./" + (parcelRequire("aKzDW")).resolve("Xrqge")).then(()=>parcelRequire('4Jkxd')
);

});

parcelRequire.register("idEfQ", function(module, exports) {

module.exports = import("./" + (parcelRequire("aKzDW")).resolve("2NZTC")).then(()=>parcelRequire('44ON1')
);

});

parcelRequire.register("95eEp", function(module, exports) {



module.exports = Promise.all([
    (parcelRequire("78S7W"))(new URL((parcelRequire("aKzDW")).resolve("5NKGo"), import.meta.url).toString()),
    import("./" + (parcelRequire("aKzDW")).resolve("laKDm"))
]).then(()=>parcelRequire('dpCef')
);

});

parcelRequire.register("f8r3b", function(module, exports) {

module.exports = import("./" + (parcelRequire("aKzDW")).resolve("6lJgM")).then(()=>parcelRequire('bIuBx')
);

});

parcelRequire.register("khvKP", function(module, exports) {



module.exports = Promise.all([
    (parcelRequire("78S7W"))(new URL((parcelRequire("aKzDW")).resolve("5NKGo"), import.meta.url).toString()),
    import("./" + (parcelRequire("aKzDW")).resolve("gjECk"))
]).then(()=>parcelRequire('koAYE')
);

});

parcelRequire.register("5eN6q", function(module, exports) {

module.exports = import("./" + (parcelRequire("aKzDW")).resolve("hTdHZ")).then(()=>parcelRequire('1JJF5')
);

});

parcelRequire.register("kb0WW", function(module, exports) {

module.exports = import("./" + (parcelRequire("aKzDW")).resolve("k1UAh")).then(()=>parcelRequire('5sWOB')
);

});

parcelRequire.register("dQXjO", function(module, exports) {




module.exports = Promise.all([
    (parcelRequire("78S7W"))(new URL((parcelRequire("aKzDW")).resolve("5NKGo"), import.meta.url).toString()),
    import("./" + (parcelRequire("aKzDW")).resolve("aB8ce")),
    import("./" + (parcelRequire("aKzDW")).resolve("c77Dt"))
]).then(()=>parcelRequire('9naGx')
);

});

parcelRequire.register("jEzo6", function(module, exports) {

module.exports = import("./" + (parcelRequire("aKzDW")).resolve("c7yhD")).then(()=>parcelRequire('YFtUT')
);

});

parcelRequire.register("6zcvr", function(module, exports) {

module.exports = import("./" + (parcelRequire("aKzDW")).resolve("6PGIJ")).then(()=>parcelRequire('hLFGY')
);

});

parcelRequire.register("2fZzP", function(module, exports) {

module.exports = import("./" + (parcelRequire("aKzDW")).resolve("iWudn")).then(()=>parcelRequire('4pmMk')
);

});

parcelRequire.register("ijxk5", function(module, exports) {

module.exports = import("./" + (parcelRequire("aKzDW")).resolve("j8hzi")).then(()=>parcelRequire('8LLHg')
);

});

parcelRequire.register("cCs8J", function(module, exports) {

module.exports = import("./" + (parcelRequire("aKzDW")).resolve("NBXPA")).then(()=>parcelRequire('2NpkF')
);

});

parcelRequire.register("jCEgS", function(module, exports) {



module.exports = Promise.all([
    (parcelRequire("78S7W"))(new URL((parcelRequire("aKzDW")).resolve("5NKGo"), import.meta.url).toString()),
    import("./" + (parcelRequire("aKzDW")).resolve("9aNRP"))
]).then(()=>parcelRequire('5dKK1')
);

});

parcelRequire.register("20wCy", function(module, exports) {

module.exports = import("./" + (parcelRequire("aKzDW")).resolve("2BcvG")).then(()=>parcelRequire('kRS9D')
);

});

parcelRequire.register("9ZdOC", function(module, exports) {

module.exports = import("./" + (parcelRequire("aKzDW")).resolve("aUAM2")).then(()=>parcelRequire('bcjk6')
);

});

parcelRequire.register("bMLX8", function(module, exports) {

module.exports = import("./" + (parcelRequire("aKzDW")).resolve("idcfG")).then(()=>parcelRequire('1HtrO')
);

});

parcelRequire.register("5Usgn", function(module, exports) {

module.exports = import("./" + (parcelRequire("aKzDW")).resolve("2yQbM")).then(()=>parcelRequire('dWoEL')
);

});

parcelRequire.register("jfuIX", function(module, exports) {

module.exports = import("./" + (parcelRequire("aKzDW")).resolve("cFEwf")).then(()=>parcelRequire('1hTxw')
);

});

parcelRequire.register("eVDWr", function(module, exports) {

module.exports = import("./" + (parcelRequire("aKzDW")).resolve("4rjk7")).then(()=>parcelRequire('6C3pB')
);

});

parcelRequire.register("hcMmU", function(module, exports) {

module.exports = import("./" + (parcelRequire("aKzDW")).resolve("5QpwW")).then(()=>parcelRequire('lCk9N')
);

});

parcelRequire.register("axTJv", function(module, exports) {

module.exports = import("./" + (parcelRequire("aKzDW")).resolve("a7Guy")).then(()=>parcelRequire('faI3j')
);

});

parcelRequire.register("kQqMn", function(module, exports) {

module.exports = import("./" + (parcelRequire("aKzDW")).resolve("aegpd")).then(()=>parcelRequire('doIrs')
);

});

parcelRequire.register("5qTFf", function(module, exports) {

module.exports = import("./" + (parcelRequire("aKzDW")).resolve("6oxgU")).then(()=>parcelRequire('dA0iz')
);

});

parcelRequire.register("jwsPq", function(module, exports) {

module.exports = import("./" + (parcelRequire("aKzDW")).resolve("jYxf2")).then(()=>parcelRequire('aH961')
);

});

parcelRequire.register("6FnhZ", function(module, exports) {

module.exports = import("./" + (parcelRequire("aKzDW")).resolve("ebt0f")).then(()=>parcelRequire('gt9P5')
);

});

parcelRequire.register("fEIv1", function(module, exports) {

module.exports = import("./" + (parcelRequire("aKzDW")).resolve("fMYzI")).then(()=>parcelRequire('ds6yv')
);

});

parcelRequire.register("bSsM3", function(module, exports) {

module.exports = import("./" + (parcelRequire("aKzDW")).resolve("5zXnb")).then(()=>parcelRequire('5X58i')
);

});

parcelRequire.register("irkQO", function(module, exports) {

module.exports = import("./" + (parcelRequire("aKzDW")).resolve("34s5E")).then(()=>parcelRequire('e6iaN')
);

});

parcelRequire.register("dcfpT", function(module, exports) {

module.exports = import("./" + (parcelRequire("aKzDW")).resolve("enA9C")).then(()=>parcelRequire('krTOh')
);

});

parcelRequire.register("drr2M", function(module, exports) {

module.exports = import("./" + (parcelRequire("aKzDW")).resolve("1NZfa")).then(()=>parcelRequire('g51rz')
);

});

parcelRequire.register("eCPam", function(module, exports) {



module.exports = Promise.all([
    (parcelRequire("78S7W"))(new URL((parcelRequire("aKzDW")).resolve("5NKGo"), import.meta.url).toString()),
    import("./" + (parcelRequire("aKzDW")).resolve("DH3qd"))
]).then(()=>parcelRequire('7cfTk')
);

});

parcelRequire.register("3tGw8", function(module, exports) {

module.exports = import("./" + (parcelRequire("aKzDW")).resolve("jq0cL")).then(()=>parcelRequire('5BBoy')
);

});

parcelRequire.register("8MDYi", function(module, exports) {

module.exports = import("./" + (parcelRequire("aKzDW")).resolve("2MXEi")).then(()=>parcelRequire('ao2eK')
);

});

parcelRequire.register("klXkH", function(module, exports) {



module.exports = Promise.all([
    (parcelRequire("78S7W"))(new URL((parcelRequire("aKzDW")).resolve("5NKGo"), import.meta.url).toString()),
    import("./" + (parcelRequire("aKzDW")).resolve("dUzmG"))
]).then(()=>parcelRequire('74SDM')
);

});

parcelRequire.register("jYpBe", function(module, exports) {

module.exports = import("./" + (parcelRequire("aKzDW")).resolve("j3SqC")).then(()=>parcelRequire('jojKd')
);

});

parcelRequire.register("3pvrD", function(module, exports) {

module.exports = import("./" + (parcelRequire("aKzDW")).resolve("j95mE")).then(()=>parcelRequire('arjyY')
);

});

parcelRequire.register("lWnRI", function(module, exports) {

module.exports = import("./" + (parcelRequire("aKzDW")).resolve("dnLNu")).then(()=>parcelRequire('gJuf3')
);

});

parcelRequire.register("27zVP", function(module, exports) {

module.exports = import("./" + (parcelRequire("aKzDW")).resolve("h8dpu")).then(()=>parcelRequire('bq1Cz')
);

});

parcelRequire.register("9dyRt", function(module, exports) {

module.exports = import("./" + (parcelRequire("aKzDW")).resolve("k2A5H")).then(()=>parcelRequire('2Q9VK')
);

});

parcelRequire.register("7RRJA", function(module, exports) {

module.exports = import("./" + (parcelRequire("aKzDW")).resolve("cHsuW")).then(()=>parcelRequire('7IpVC')
);

});

parcelRequire.register("gV4qz", function(module, exports) {

module.exports = import("./" + (parcelRequire("aKzDW")).resolve("lP3Qc")).then(()=>parcelRequire('e2QHe')
);

});

parcelRequire.register("5ESMm", function(module, exports) {

module.exports = import("./" + (parcelRequire("aKzDW")).resolve("jarW5")).then(()=>parcelRequire('3zH1I')
);

});

parcelRequire.register("2AUU8", function(module, exports) {

module.exports = import("./" + (parcelRequire("aKzDW")).resolve("dN2en")).then(()=>parcelRequire('j6kGx')
);

});

parcelRequire.register("g5LMg", function(module, exports) {

module.exports = import("./" + (parcelRequire("aKzDW")).resolve("5itLi")).then(()=>parcelRequire('6Pskm')
);

});

parcelRequire.register("5WJUF", function(module, exports) {

module.exports = import("./" + (parcelRequire("aKzDW")).resolve("9FboI")).then(()=>parcelRequire('iDB4m')
);

});

parcelRequire.register("yBPUU", function(module, exports) {

module.exports = import("./" + (parcelRequire("aKzDW")).resolve("9ebd7")).then(()=>parcelRequire('7dFT3')
);

});

parcelRequire.register("5Qk85", function(module, exports) {

module.exports = import("./" + (parcelRequire("aKzDW")).resolve("iNW1N")).then(()=>parcelRequire('kLspA')
);

});

parcelRequire.register("cqJT5", function(module, exports) {

module.exports = import("./" + (parcelRequire("aKzDW")).resolve("ayv1d")).then(()=>parcelRequire('25pvS')
);

});

parcelRequire.register("4WLys", function(module, exports) {

module.exports = import("./" + (parcelRequire("aKzDW")).resolve("ggRv2")).then(()=>parcelRequire('66ZpJ')
);

});

parcelRequire.register("dVfm1", function(module, exports) {

module.exports = import("./" + (parcelRequire("aKzDW")).resolve("2T53g")).then(()=>parcelRequire('hAVic')
);

});

parcelRequire.register("b62GA", function(module, exports) {

module.exports = import("./" + (parcelRequire("aKzDW")).resolve("9Wklf")).then(()=>parcelRequire('87O85')
);

});

parcelRequire.register("891Ze", function(module, exports) {

module.exports = import("./" + (parcelRequire("aKzDW")).resolve("eb6RT")).then(()=>parcelRequire('epSDg')
);

});

parcelRequire.register("a93lS", function(module, exports) {

module.exports = import("./" + (parcelRequire("aKzDW")).resolve("8rPqn")).then(()=>parcelRequire('h2YvV')
);

});

parcelRequire.register("gLr9i", function(module, exports) {



module.exports = Promise.all([
    (parcelRequire("78S7W"))(new URL((parcelRequire("aKzDW")).resolve("5NKGo"), import.meta.url).toString()),
    import("./" + (parcelRequire("aKzDW")).resolve("aB8ce"))
]).then(()=>parcelRequire('g5v8v')
);

});

parcelRequire.register("khf1M", function(module, exports) {

module.exports = import("./" + (parcelRequire("aKzDW")).resolve("8RsZy")).then(()=>parcelRequire('l0TFS')
);

});

parcelRequire.register("cLj96", function(module, exports) {



module.exports = Promise.all([
    (parcelRequire("78S7W"))(new URL((parcelRequire("aKzDW")).resolve("5NKGo"), import.meta.url).toString()),
    import("./" + (parcelRequire("aKzDW")).resolve("eQmo4"))
]).then(()=>parcelRequire('fEFwS')
);

});

parcelRequire.register("gFNkk", function(module, exports) {

module.exports = import("./" + (parcelRequire("aKzDW")).resolve("9OUv9")).then(()=>parcelRequire('18RR9')
);

});

var $3f2b56b2d1c4186b$exports = {};

(parcelRequire("aKzDW")).register(JSON.parse("{\"7qi2V\":\"index.368c142a.js\",\"a2ir2\":\"editor.worker.dfaa3d5c.js\",\"2MxqH\":\"tsMode.62ad95b3.js\",\"5NKGo\":\"index.2c2db378.css\",\"2Tez0\":\"index.e4c333b0.js\",\"6HLxC\":\"cssMode.1877d9cf.js\",\"j5c8r\":\"jsonMode.ec2b9a52.js\",\"gFLWa\":\"htmlMode.3d04d0d6.js\",\"386YG\":\"abap.8c1847b9.js\",\"96Cuj\":\"apex.c71099e2.js\",\"cC9AK\":\"azcli.fd845922.js\",\"92aHR\":\"bat.067a5d5b.js\",\"cWM23\":\"bicep.de1d7bfd.js\",\"iqhkq\":\"cameligo.9cd93ce9.js\",\"gJjgm\":\"clojure.77ed558e.js\",\"6KMEZ\":\"coffee.3f4e6727.js\",\"ey7g2\":\"cpp.d3278220.js\",\"3U181\":\"csharp.2dc5a67a.js\",\"zkmlX\":\"csp.24cb30f2.js\",\"7GZ0h\":\"css.09498f7f.js\",\"9IUor\":\"dart.5b824774.js\",\"lJTMC\":\"dockerfile.f9b9dc71.js\",\"byNgD\":\"ecl.be58e32e.js\",\"6jVMp\":\"elixir.cb058a3a.js\",\"5QpBx\":\"flow9.c35bc0a6.js\",\"a9Thi\":\"fsharp.f5a4bbaf.js\",\"Xrqge\":\"go.74fc4b93.js\",\"2NZTC\":\"graphql.5b382974.js\",\"laKDm\":\"handlebars.69a1e199.js\",\"6lJgM\":\"hcl.af5bc71c.js\",\"gjECk\":\"html.0c65359c.js\",\"hTdHZ\":\"ini.dd34ee97.js\",\"k1UAh\":\"java.03ee14f1.js\",\"c77Dt\":\"javascript.4b438af5.js\",\"aB8ce\":\"typescript.34866cb4.js\",\"c7yhD\":\"julia.a6181991.js\",\"6PGIJ\":\"kotlin.f2777cf1.js\",\"iWudn\":\"less.4323ec77.js\",\"j8hzi\":\"lexon.3010e005.js\",\"NBXPA\":\"lua.74bcc449.js\",\"9aNRP\":\"liquid.1e11bf09.js\",\"2BcvG\":\"m3.b2f8130d.js\",\"aUAM2\":\"markdown.b5cce8d9.js\",\"idcfG\":\"mips.781d1d33.js\",\"2yQbM\":\"msdax.c2e60ca1.js\",\"cFEwf\":\"mysql.d80718f2.js\",\"4rjk7\":\"objective-c.5f9fc206.js\",\"5QpwW\":\"pascal.ab959019.js\",\"a7Guy\":\"pascaligo.c3a07366.js\",\"aegpd\":\"perl.a9a4ecc1.js\",\"6oxgU\":\"pgsql.c3214e7c.js\",\"jYxf2\":\"php.56556ac8.js\",\"ebt0f\":\"pla.64c030ea.js\",\"fMYzI\":\"postiats.69fbb666.js\",\"5zXnb\":\"powerquery.3b8d2e00.js\",\"34s5E\":\"powershell.0506596e.js\",\"enA9C\":\"protobuf.5cd07929.js\",\"1NZfa\":\"pug.251b594e.js\",\"DH3qd\":\"python.1e0661d2.js\",\"jq0cL\":\"qsharp.3975513a.js\",\"2MXEi\":\"r.95cb0f3c.js\",\"dUzmG\":\"razor.e70158fd.js\",\"j3SqC\":\"redis.0303772f.js\",\"j95mE\":\"redshift.1b488da6.js\",\"dnLNu\":\"restructuredtext.b1946be4.js\",\"h8dpu\":\"ruby.1213ce4d.js\",\"k2A5H\":\"rust.8e06270a.js\",\"cHsuW\":\"sb.4f36fefb.js\",\"lP3Qc\":\"scala.9408ec52.js\",\"jarW5\":\"scheme.86eaffad.js\",\"dN2en\":\"scss.ceb82d0a.js\",\"5itLi\":\"shell.1f94ccf6.js\",\"9FboI\":\"solidity.3bd07fa3.js\",\"9ebd7\":\"sophia.b7534db4.js\",\"iNW1N\":\"sparql.ad8ed4dc.js\",\"ayv1d\":\"sql.829c82e8.js\",\"ggRv2\":\"st.e2121834.js\",\"2T53g\":\"swift.4f940150.js\",\"9Wklf\":\"systemverilog.6fbd2172.js\",\"eb6RT\":\"tcl.04a78412.js\",\"8rPqn\":\"twig.d149aa8f.js\",\"8RsZy\":\"vb.0ecde440.js\",\"eQmo4\":\"xml.f64977cb.js\",\"9OUv9\":\"yaml.84c2abf1.js\",\"b7uTR\":\"diagram.c73cfc97.gif\",\"khf9e\":\"editor.bd27f0e2.gif\"}"));

var $d55355b2171fa273$exports = {};

$d55355b2171fa273$exports = (parcelRequire("5exdt")).YAML;


var $d5095eb4ae9ffad3$exports = {};

$d5095eb4ae9ffad3$exports = new URL((parcelRequire("aKzDW")).resolve("a2ir2"), import.meta.url).toString();



var $leKFq = parcelRequire("leKFq");

var $leKFq = parcelRequire("leKFq");
/*!-----------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Version: 0.31.0(252e010eb73ddc2fa1a37c1dade7bf35d87106cd)
 * Released under the MIT license
 * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt
 *-----------------------------------------------------------------------------*/ var $2160d1780f3fea88$var$__defProp = Object.defineProperty;
var $2160d1780f3fea88$var$__getOwnPropDesc = Object.getOwnPropertyDescriptor;
var $2160d1780f3fea88$var$__getOwnPropNames = Object.getOwnPropertyNames;
var $2160d1780f3fea88$var$__hasOwnProp = Object.prototype.hasOwnProperty;
var $2160d1780f3fea88$var$__markAsModule = (target)=>$2160d1780f3fea88$var$__defProp(target, "__esModule", {
        value: true
    })
;
var $2160d1780f3fea88$var$__reExport = (target, module, desc)=>{
    if (module && typeof module === "object" || typeof module === "function") {
        for (let key of $2160d1780f3fea88$var$__getOwnPropNames(module))if (!$2160d1780f3fea88$var$__hasOwnProp.call(target, key) && key !== "default") $2160d1780f3fea88$var$__defProp(target, key, {
            get: ()=>module[key]
            ,
            enumerable: !(desc = $2160d1780f3fea88$var$__getOwnPropDesc(module, key)) || desc.enumerable
        });
    }
    return target;
};
// src/typescript/lib/typescriptServicesMetadata.ts
var $2160d1780f3fea88$var$typescriptVersion = "4.4.4";
// src/fillers/monaco-editor-core.ts
var $2160d1780f3fea88$var$monaco_editor_core_exports = {};
$2160d1780f3fea88$var$__markAsModule($2160d1780f3fea88$var$monaco_editor_core_exports);
$2160d1780f3fea88$var$__reExport($2160d1780f3fea88$var$monaco_editor_core_exports, $leKFq);
// src/typescript/monaco.contribution.ts
var $2160d1780f3fea88$export$2932e787d4bab445;
(function(ModuleKind2) {
    ModuleKind2[ModuleKind2["None"] = 0] = "None";
    ModuleKind2[ModuleKind2["CommonJS"] = 1] = "CommonJS";
    ModuleKind2[ModuleKind2["AMD"] = 2] = "AMD";
    ModuleKind2[ModuleKind2["UMD"] = 3] = "UMD";
    ModuleKind2[ModuleKind2["System"] = 4] = "System";
    ModuleKind2[ModuleKind2["ES2015"] = 5] = "ES2015";
    ModuleKind2[ModuleKind2["ESNext"] = 99] = "ESNext";
})($2160d1780f3fea88$export$2932e787d4bab445 || ($2160d1780f3fea88$export$2932e787d4bab445 = {}));
var $2160d1780f3fea88$export$23b47a46c244d065;
(function(JsxEmit2) {
    JsxEmit2[JsxEmit2["None"] = 0] = "None";
    JsxEmit2[JsxEmit2["Preserve"] = 1] = "Preserve";
    JsxEmit2[JsxEmit2["React"] = 2] = "React";
    JsxEmit2[JsxEmit2["ReactNative"] = 3] = "ReactNative";
    JsxEmit2[JsxEmit2["ReactJSX"] = 4] = "ReactJSX";
    JsxEmit2[JsxEmit2["ReactJSXDev"] = 5] = "ReactJSXDev";
})($2160d1780f3fea88$export$23b47a46c244d065 || ($2160d1780f3fea88$export$23b47a46c244d065 = {}));
var $2160d1780f3fea88$export$c28f76d17c23333a;
(function(NewLineKind2) {
    NewLineKind2[NewLineKind2["CarriageReturnLineFeed"] = 0] = "CarriageReturnLineFeed";
    NewLineKind2[NewLineKind2["LineFeed"] = 1] = "LineFeed";
})($2160d1780f3fea88$export$c28f76d17c23333a || ($2160d1780f3fea88$export$c28f76d17c23333a = {}));
var $2160d1780f3fea88$export$36609ff6f261a579;
(function(ScriptTarget2) {
    ScriptTarget2[ScriptTarget2["ES3"] = 0] = "ES3";
    ScriptTarget2[ScriptTarget2["ES5"] = 1] = "ES5";
    ScriptTarget2[ScriptTarget2["ES2015"] = 2] = "ES2015";
    ScriptTarget2[ScriptTarget2["ES2016"] = 3] = "ES2016";
    ScriptTarget2[ScriptTarget2["ES2017"] = 4] = "ES2017";
    ScriptTarget2[ScriptTarget2["ES2018"] = 5] = "ES2018";
    ScriptTarget2[ScriptTarget2["ES2019"] = 6] = "ES2019";
    ScriptTarget2[ScriptTarget2["ES2020"] = 7] = "ES2020";
    ScriptTarget2[ScriptTarget2["ESNext"] = 99] = "ESNext";
    ScriptTarget2[ScriptTarget2["JSON"] = 100] = "JSON";
    ScriptTarget2[ScriptTarget2["Latest"] = 99] = "Latest";
})($2160d1780f3fea88$export$36609ff6f261a579 || ($2160d1780f3fea88$export$36609ff6f261a579 = {}));
var $2160d1780f3fea88$export$2e45c31d6e8ee3d0;
(function(ModuleResolutionKind2) {
    ModuleResolutionKind2[ModuleResolutionKind2["Classic"] = 1] = "Classic";
    ModuleResolutionKind2[ModuleResolutionKind2["NodeJs"] = 2] = "NodeJs";
})($2160d1780f3fea88$export$2e45c31d6e8ee3d0 || ($2160d1780f3fea88$export$2e45c31d6e8ee3d0 = {}));
var $2160d1780f3fea88$var$LanguageServiceDefaultsImpl = class {
    constructor(compilerOptions, diagnosticsOptions, workerOptions, inlayHintsOptions){
        this._onDidChange = new $2160d1780f3fea88$var$monaco_editor_core_exports.Emitter();
        this._onDidExtraLibsChange = new $2160d1780f3fea88$var$monaco_editor_core_exports.Emitter();
        this._extraLibs = Object.create(null);
        this._removedExtraLibs = Object.create(null);
        this._eagerModelSync = false;
        this.setCompilerOptions(compilerOptions);
        this.setDiagnosticsOptions(diagnosticsOptions);
        this.setWorkerOptions(workerOptions);
        this.setInlayHintsOptions(inlayHintsOptions);
        this._onDidExtraLibsChangeTimeout = -1;
    }
    get onDidChange() {
        return this._onDidChange.event;
    }
    get onDidExtraLibsChange() {
        return this._onDidExtraLibsChange.event;
    }
    get workerOptions() {
        return this._workerOptions;
    }
    get inlayHintsOptions() {
        return this._inlayHintsOptions;
    }
    getExtraLibs() {
        return this._extraLibs;
    }
    addExtraLib(content, _filePath) {
        let filePath;
        if (typeof _filePath === "undefined") filePath = `ts:extralib-${Math.random().toString(36).substring(2, 15)}`;
        else filePath = _filePath;
        if (this._extraLibs[filePath] && this._extraLibs[filePath].content === content) return {
            dispose: ()=>{}
        };
        let myVersion = 1;
        if (this._removedExtraLibs[filePath]) myVersion = this._removedExtraLibs[filePath] + 1;
        if (this._extraLibs[filePath]) myVersion = this._extraLibs[filePath].version + 1;
        this._extraLibs[filePath] = {
            content: content,
            version: myVersion
        };
        this._fireOnDidExtraLibsChangeSoon();
        return {
            dispose: ()=>{
                let extraLib = this._extraLibs[filePath];
                if (!extraLib) return;
                if (extraLib.version !== myVersion) return;
                delete this._extraLibs[filePath];
                this._removedExtraLibs[filePath] = myVersion;
                this._fireOnDidExtraLibsChangeSoon();
            }
        };
    }
    setExtraLibs(libs) {
        for(const filePath in this._extraLibs)this._removedExtraLibs[filePath] = this._extraLibs[filePath].version;
        this._extraLibs = Object.create(null);
        if (libs && libs.length > 0) for (const lib of libs){
            const filePath = lib.filePath || `ts:extralib-${Math.random().toString(36).substring(2, 15)}`;
            const content = lib.content;
            let myVersion = 1;
            if (this._removedExtraLibs[filePath]) myVersion = this._removedExtraLibs[filePath] + 1;
            this._extraLibs[filePath] = {
                content: content,
                version: myVersion
            };
        }
        this._fireOnDidExtraLibsChangeSoon();
    }
    _fireOnDidExtraLibsChangeSoon() {
        if (this._onDidExtraLibsChangeTimeout !== -1) return;
        this._onDidExtraLibsChangeTimeout = window.setTimeout(()=>{
            this._onDidExtraLibsChangeTimeout = -1;
            this._onDidExtraLibsChange.fire(void 0);
        }, 0);
    }
    getCompilerOptions() {
        return this._compilerOptions;
    }
    setCompilerOptions(options) {
        this._compilerOptions = options || Object.create(null);
        this._onDidChange.fire(void 0);
    }
    getDiagnosticsOptions() {
        return this._diagnosticsOptions;
    }
    setDiagnosticsOptions(options) {
        this._diagnosticsOptions = options || Object.create(null);
        this._onDidChange.fire(void 0);
    }
    setWorkerOptions(options) {
        this._workerOptions = options || Object.create(null);
        this._onDidChange.fire(void 0);
    }
    setInlayHintsOptions(options) {
        this._inlayHintsOptions = options || Object.create(null);
        this._onDidChange.fire(void 0);
    }
    setMaximumWorkerIdleTime(value) {}
    setEagerModelSync(value) {
        this._eagerModelSync = value;
    }
    getEagerModelSync() {
        return this._eagerModelSync;
    }
};
var $2160d1780f3fea88$export$30d76bc34f51c345 = $2160d1780f3fea88$var$typescriptVersion;
var $2160d1780f3fea88$export$5b7e032c201ff89d = new $2160d1780f3fea88$var$LanguageServiceDefaultsImpl({
    allowNonTsExtensions: true,
    target: 99
}, {
    noSemanticValidation: false,
    noSyntaxValidation: false,
    onlyVisible: false
}, {}, {});
var $2160d1780f3fea88$export$15c6eb181a3131d2 = new $2160d1780f3fea88$var$LanguageServiceDefaultsImpl({
    allowNonTsExtensions: true,
    allowJs: true,
    target: 99
}, {
    noSemanticValidation: true,
    noSyntaxValidation: false,
    onlyVisible: false
}, {}, {});
var $2160d1780f3fea88$export$f4433c6b950b070e = ()=>{
    return $2160d1780f3fea88$var$getMode().then((mode)=>mode.getTypeScriptWorker()
    );
};
var $2160d1780f3fea88$export$42142bcd5970f8e8 = ()=>{
    return $2160d1780f3fea88$var$getMode().then((mode)=>mode.getJavaScriptWorker()
    );
};
$2160d1780f3fea88$var$monaco_editor_core_exports.languages.typescript = {
    ModuleKind: $2160d1780f3fea88$export$2932e787d4bab445,
    JsxEmit: $2160d1780f3fea88$export$23b47a46c244d065,
    NewLineKind: $2160d1780f3fea88$export$c28f76d17c23333a,
    ScriptTarget: $2160d1780f3fea88$export$36609ff6f261a579,
    ModuleResolutionKind: $2160d1780f3fea88$export$2e45c31d6e8ee3d0,
    typescriptVersion: $2160d1780f3fea88$export$30d76bc34f51c345,
    typescriptDefaults: $2160d1780f3fea88$export$5b7e032c201ff89d,
    javascriptDefaults: $2160d1780f3fea88$export$15c6eb181a3131d2,
    getTypeScriptWorker: $2160d1780f3fea88$export$f4433c6b950b070e,
    getJavaScriptWorker: $2160d1780f3fea88$export$42142bcd5970f8e8
};

function $2160d1780f3fea88$var$getMode() {
    var resolve, reject;
    return (parcelRequire("fU773"));
}
$2160d1780f3fea88$var$monaco_editor_core_exports.languages.onLanguage("typescript", ()=>{
    return $2160d1780f3fea88$var$getMode().then((mode)=>mode.setupTypeScript($2160d1780f3fea88$export$5b7e032c201ff89d)
    );
});
$2160d1780f3fea88$var$monaco_editor_core_exports.languages.onLanguage("javascript", ()=>{
    return $2160d1780f3fea88$var$getMode().then((mode)=>mode.setupJavaScript($2160d1780f3fea88$export$15c6eb181a3131d2)
    );
});



var $leKFq = parcelRequire("leKFq");

var $leKFq = parcelRequire("leKFq");
/*!-----------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Version: 0.31.0(252e010eb73ddc2fa1a37c1dade7bf35d87106cd)
 * Released under the MIT license
 * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt
 *-----------------------------------------------------------------------------*/ var $f2734415f551a785$var$__defProp = Object.defineProperty;
var $f2734415f551a785$var$__getOwnPropDesc = Object.getOwnPropertyDescriptor;
var $f2734415f551a785$var$__getOwnPropNames = Object.getOwnPropertyNames;
var $f2734415f551a785$var$__hasOwnProp = Object.prototype.hasOwnProperty;
var $f2734415f551a785$var$__markAsModule = (target)=>$f2734415f551a785$var$__defProp(target, "__esModule", {
        value: true
    })
;
var $f2734415f551a785$var$__reExport = (target, module, desc)=>{
    if (module && typeof module === "object" || typeof module === "function") {
        for (let key of $f2734415f551a785$var$__getOwnPropNames(module))if (!$f2734415f551a785$var$__hasOwnProp.call(target, key) && key !== "default") $f2734415f551a785$var$__defProp(target, key, {
            get: ()=>module[key]
            ,
            enumerable: !(desc = $f2734415f551a785$var$__getOwnPropDesc(module, key)) || desc.enumerable
        });
    }
    return target;
};
// src/fillers/monaco-editor-core.ts
var $f2734415f551a785$var$monaco_editor_core_exports = {};
$f2734415f551a785$var$__markAsModule($f2734415f551a785$var$monaco_editor_core_exports);
$f2734415f551a785$var$__reExport($f2734415f551a785$var$monaco_editor_core_exports, $leKFq);
// src/css/monaco.contribution.ts
var $f2734415f551a785$var$LanguageServiceDefaultsImpl = class {
    constructor(languageId, options, modeConfiguration){
        this._onDidChange = new $f2734415f551a785$var$monaco_editor_core_exports.Emitter();
        this._languageId = languageId;
        this.setOptions(options);
        this.setModeConfiguration(modeConfiguration);
    }
    get onDidChange() {
        return this._onDidChange.event;
    }
    get languageId() {
        return this._languageId;
    }
    get modeConfiguration() {
        return this._modeConfiguration;
    }
    get diagnosticsOptions() {
        return this.options;
    }
    get options() {
        return this._options;
    }
    setOptions(options) {
        this._options = options || Object.create(null);
        this._onDidChange.fire(this);
    }
    setDiagnosticsOptions(options) {
        this.setOptions(options);
    }
    setModeConfiguration(modeConfiguration) {
        this._modeConfiguration = modeConfiguration || Object.create(null);
        this._onDidChange.fire(this);
    }
};
var $f2734415f551a785$var$optionsDefault = {
    validate: true,
    lint: {
        compatibleVendorPrefixes: "ignore",
        vendorPrefix: "warning",
        duplicateProperties: "warning",
        emptyRules: "warning",
        importStatement: "ignore",
        boxModel: "ignore",
        universalSelector: "ignore",
        zeroUnits: "ignore",
        fontFaceProperties: "warning",
        hexColorLength: "error",
        argumentsInColorFunction: "error",
        unknownProperties: "warning",
        ieHack: "ignore",
        unknownVendorSpecificProperties: "ignore",
        propertyIgnoredDueToDisplay: "warning",
        important: "ignore",
        float: "ignore",
        idSelector: "ignore"
    },
    data: {
        useDefaultDataProvider: true
    }
};
var $f2734415f551a785$var$modeConfigurationDefault = {
    completionItems: true,
    hovers: true,
    documentSymbols: true,
    definitions: true,
    references: true,
    documentHighlights: true,
    rename: true,
    colors: true,
    foldingRanges: true,
    diagnostics: true,
    selectionRanges: true
};
var $f2734415f551a785$export$c2a404aa831e27bd = new $f2734415f551a785$var$LanguageServiceDefaultsImpl("css", $f2734415f551a785$var$optionsDefault, $f2734415f551a785$var$modeConfigurationDefault);
var $f2734415f551a785$export$54af320ade247add = new $f2734415f551a785$var$LanguageServiceDefaultsImpl("scss", $f2734415f551a785$var$optionsDefault, $f2734415f551a785$var$modeConfigurationDefault);
var $f2734415f551a785$export$c8aa2efd916a3011 = new $f2734415f551a785$var$LanguageServiceDefaultsImpl("less", $f2734415f551a785$var$optionsDefault, $f2734415f551a785$var$modeConfigurationDefault);
$f2734415f551a785$var$monaco_editor_core_exports.languages.css = {
    cssDefaults: $f2734415f551a785$export$c2a404aa831e27bd,
    lessDefaults: $f2734415f551a785$export$c8aa2efd916a3011,
    scssDefaults: $f2734415f551a785$export$54af320ade247add
};

function $f2734415f551a785$var$getMode() {
    var resolve, reject;
    return (parcelRequire("401cX"));
}
$f2734415f551a785$var$monaco_editor_core_exports.languages.onLanguage("less", ()=>{
    $f2734415f551a785$var$getMode().then((mode)=>mode.setupMode($f2734415f551a785$export$c8aa2efd916a3011)
    );
});
$f2734415f551a785$var$monaco_editor_core_exports.languages.onLanguage("scss", ()=>{
    $f2734415f551a785$var$getMode().then((mode)=>mode.setupMode($f2734415f551a785$export$54af320ade247add)
    );
});
$f2734415f551a785$var$monaco_editor_core_exports.languages.onLanguage("css", ()=>{
    $f2734415f551a785$var$getMode().then((mode)=>mode.setupMode($f2734415f551a785$export$c2a404aa831e27bd)
    );
});



var $leKFq = parcelRequire("leKFq");

var $leKFq = parcelRequire("leKFq");
/*!-----------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Version: 0.31.0(252e010eb73ddc2fa1a37c1dade7bf35d87106cd)
 * Released under the MIT license
 * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt
 *-----------------------------------------------------------------------------*/ var $e338b09d9aea2590$var$__defProp = Object.defineProperty;
var $e338b09d9aea2590$var$__getOwnPropDesc = Object.getOwnPropertyDescriptor;
var $e338b09d9aea2590$var$__getOwnPropNames = Object.getOwnPropertyNames;
var $e338b09d9aea2590$var$__hasOwnProp = Object.prototype.hasOwnProperty;
var $e338b09d9aea2590$var$__markAsModule = (target)=>$e338b09d9aea2590$var$__defProp(target, "__esModule", {
        value: true
    })
;
var $e338b09d9aea2590$var$__reExport = (target, module, desc)=>{
    if (module && typeof module === "object" || typeof module === "function") {
        for (let key of $e338b09d9aea2590$var$__getOwnPropNames(module))if (!$e338b09d9aea2590$var$__hasOwnProp.call(target, key) && key !== "default") $e338b09d9aea2590$var$__defProp(target, key, {
            get: ()=>module[key]
            ,
            enumerable: !(desc = $e338b09d9aea2590$var$__getOwnPropDesc(module, key)) || desc.enumerable
        });
    }
    return target;
};
// src/fillers/monaco-editor-core.ts
var $e338b09d9aea2590$var$monaco_editor_core_exports = {};
$e338b09d9aea2590$var$__markAsModule($e338b09d9aea2590$var$monaco_editor_core_exports);
$e338b09d9aea2590$var$__reExport($e338b09d9aea2590$var$monaco_editor_core_exports, $leKFq);
// src/json/monaco.contribution.ts
var $e338b09d9aea2590$var$LanguageServiceDefaultsImpl = class {
    constructor(languageId, diagnosticsOptions, modeConfiguration){
        this._onDidChange = new $e338b09d9aea2590$var$monaco_editor_core_exports.Emitter();
        this._languageId = languageId;
        this.setDiagnosticsOptions(diagnosticsOptions);
        this.setModeConfiguration(modeConfiguration);
    }
    get onDidChange() {
        return this._onDidChange.event;
    }
    get languageId() {
        return this._languageId;
    }
    get modeConfiguration() {
        return this._modeConfiguration;
    }
    get diagnosticsOptions() {
        return this._diagnosticsOptions;
    }
    setDiagnosticsOptions(options) {
        this._diagnosticsOptions = options || Object.create(null);
        this._onDidChange.fire(this);
    }
    setModeConfiguration(modeConfiguration) {
        this._modeConfiguration = modeConfiguration || Object.create(null);
        this._onDidChange.fire(this);
    }
};
var $e338b09d9aea2590$var$diagnosticDefault = {
    validate: true,
    allowComments: true,
    schemas: [],
    enableSchemaRequest: false,
    schemaRequest: "warning",
    schemaValidation: "warning",
    comments: "error",
    trailingCommas: "error"
};
var $e338b09d9aea2590$var$modeConfigurationDefault = {
    documentFormattingEdits: true,
    documentRangeFormattingEdits: true,
    completionItems: true,
    hovers: true,
    documentSymbols: true,
    tokens: true,
    colors: true,
    foldingRanges: true,
    diagnostics: true,
    selectionRanges: true
};
var $e338b09d9aea2590$export$f9a800bb9a97e438 = new $e338b09d9aea2590$var$LanguageServiceDefaultsImpl("json", $e338b09d9aea2590$var$diagnosticDefault, $e338b09d9aea2590$var$modeConfigurationDefault);
$e338b09d9aea2590$var$monaco_editor_core_exports.languages.json = {
    jsonDefaults: $e338b09d9aea2590$export$f9a800bb9a97e438
};

function $e338b09d9aea2590$var$getMode() {
    var resolve, reject;
    return (parcelRequire("dIwFy"));
}
$e338b09d9aea2590$var$monaco_editor_core_exports.languages.register({
    id: "json",
    extensions: [
        ".json",
        ".bowerrc",
        ".jshintrc",
        ".jscsrc",
        ".eslintrc",
        ".babelrc",
        ".har"
    ],
    aliases: [
        "JSON",
        "json"
    ],
    mimetypes: [
        "application/json"
    ]
});
$e338b09d9aea2590$var$monaco_editor_core_exports.languages.onLanguage("json", ()=>{
    $e338b09d9aea2590$var$getMode().then((mode)=>mode.setupMode($e338b09d9aea2590$export$f9a800bb9a97e438)
    );
});



var $leKFq = parcelRequire("leKFq");

var $leKFq = parcelRequire("leKFq");
/*!-----------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Version: 0.31.0(252e010eb73ddc2fa1a37c1dade7bf35d87106cd)
 * Released under the MIT license
 * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt
 *-----------------------------------------------------------------------------*/ var $9a77febeae1a49a9$var$__defProp = Object.defineProperty;
var $9a77febeae1a49a9$var$__getOwnPropDesc = Object.getOwnPropertyDescriptor;
var $9a77febeae1a49a9$var$__getOwnPropNames = Object.getOwnPropertyNames;
var $9a77febeae1a49a9$var$__hasOwnProp = Object.prototype.hasOwnProperty;
var $9a77febeae1a49a9$var$__markAsModule = (target)=>$9a77febeae1a49a9$var$__defProp(target, "__esModule", {
        value: true
    })
;
var $9a77febeae1a49a9$var$__reExport = (target, module, desc)=>{
    if (module && typeof module === "object" || typeof module === "function") {
        for (let key of $9a77febeae1a49a9$var$__getOwnPropNames(module))if (!$9a77febeae1a49a9$var$__hasOwnProp.call(target, key) && key !== "default") $9a77febeae1a49a9$var$__defProp(target, key, {
            get: ()=>module[key]
            ,
            enumerable: !(desc = $9a77febeae1a49a9$var$__getOwnPropDesc(module, key)) || desc.enumerable
        });
    }
    return target;
};
// src/fillers/monaco-editor-core.ts
var $9a77febeae1a49a9$var$monaco_editor_core_exports = {};
$9a77febeae1a49a9$var$__markAsModule($9a77febeae1a49a9$var$monaco_editor_core_exports);
$9a77febeae1a49a9$var$__reExport($9a77febeae1a49a9$var$monaco_editor_core_exports, $leKFq);
// src/html/monaco.contribution.ts
var $9a77febeae1a49a9$var$LanguageServiceDefaultsImpl = class {
    constructor(languageId, options, modeConfiguration){
        this._onDidChange = new $9a77febeae1a49a9$var$monaco_editor_core_exports.Emitter();
        this._languageId = languageId;
        this.setOptions(options);
        this.setModeConfiguration(modeConfiguration);
    }
    get onDidChange() {
        return this._onDidChange.event;
    }
    get languageId() {
        return this._languageId;
    }
    get options() {
        return this._options;
    }
    get modeConfiguration() {
        return this._modeConfiguration;
    }
    setOptions(options) {
        this._options = options || Object.create(null);
        this._onDidChange.fire(this);
    }
    setModeConfiguration(modeConfiguration) {
        this._modeConfiguration = modeConfiguration || Object.create(null);
        this._onDidChange.fire(this);
    }
};
var $9a77febeae1a49a9$var$formatDefaults = {
    tabSize: 4,
    insertSpaces: false,
    wrapLineLength: 120,
    unformatted: 'default": "a, abbr, acronym, b, bdo, big, br, button, cite, code, dfn, em, i, img, input, kbd, label, map, object, q, samp, select, small, span, strong, sub, sup, textarea, tt, var',
    contentUnformatted: "pre",
    indentInnerHtml: false,
    preserveNewLines: true,
    maxPreserveNewLines: void 0,
    indentHandlebars: false,
    endWithNewline: false,
    extraLiners: "head, body, /html",
    wrapAttributes: "auto"
};
var $9a77febeae1a49a9$var$optionsDefault = {
    format: $9a77febeae1a49a9$var$formatDefaults,
    suggest: {},
    data: {
        useDefaultDataProvider: true
    }
};
function $9a77febeae1a49a9$var$getConfigurationDefault(languageId) {
    return {
        completionItems: true,
        hovers: true,
        documentSymbols: true,
        links: true,
        documentHighlights: true,
        rename: true,
        colors: true,
        foldingRanges: true,
        selectionRanges: true,
        diagnostics: languageId === $9a77febeae1a49a9$var$htmlLanguageId,
        documentFormattingEdits: languageId === $9a77febeae1a49a9$var$htmlLanguageId,
        documentRangeFormattingEdits: languageId === $9a77febeae1a49a9$var$htmlLanguageId
    };
}
var $9a77febeae1a49a9$var$htmlLanguageId = "html";
var $9a77febeae1a49a9$var$handlebarsLanguageId = "handlebars";
var $9a77febeae1a49a9$var$razorLanguageId = "razor";
var $9a77febeae1a49a9$export$5fef39c1049dc16a = $9a77febeae1a49a9$export$282c563ccf44ceb9($9a77febeae1a49a9$var$htmlLanguageId, $9a77febeae1a49a9$var$optionsDefault, $9a77febeae1a49a9$var$getConfigurationDefault($9a77febeae1a49a9$var$htmlLanguageId));
var $9a77febeae1a49a9$export$57db705433ed60e4 = $9a77febeae1a49a9$export$5fef39c1049dc16a.defaults;
var $9a77febeae1a49a9$export$7128923f244739ae = $9a77febeae1a49a9$export$282c563ccf44ceb9($9a77febeae1a49a9$var$handlebarsLanguageId, $9a77febeae1a49a9$var$optionsDefault, $9a77febeae1a49a9$var$getConfigurationDefault($9a77febeae1a49a9$var$handlebarsLanguageId));
var $9a77febeae1a49a9$export$d6789e1e299dadea = $9a77febeae1a49a9$export$7128923f244739ae.defaults;
var $9a77febeae1a49a9$export$c0c348172212aa68 = $9a77febeae1a49a9$export$282c563ccf44ceb9($9a77febeae1a49a9$var$razorLanguageId, $9a77febeae1a49a9$var$optionsDefault, $9a77febeae1a49a9$var$getConfigurationDefault($9a77febeae1a49a9$var$razorLanguageId));
var $9a77febeae1a49a9$export$ca427800aa66cf63 = $9a77febeae1a49a9$export$c0c348172212aa68.defaults;
$9a77febeae1a49a9$var$monaco_editor_core_exports.languages.html = {
    htmlDefaults: $9a77febeae1a49a9$export$57db705433ed60e4,
    razorDefaults: $9a77febeae1a49a9$export$ca427800aa66cf63,
    handlebarDefaults: $9a77febeae1a49a9$export$d6789e1e299dadea,
    htmlLanguageService: $9a77febeae1a49a9$export$5fef39c1049dc16a,
    handlebarLanguageService: $9a77febeae1a49a9$export$7128923f244739ae,
    razorLanguageService: $9a77febeae1a49a9$export$c0c348172212aa68,
    registerHTMLLanguageService: $9a77febeae1a49a9$export$282c563ccf44ceb9
};

function $9a77febeae1a49a9$var$getMode() {
    var resolve, reject;
    return (parcelRequire("e0p8h"));
}
function $9a77febeae1a49a9$export$282c563ccf44ceb9(languageId, options = $9a77febeae1a49a9$var$optionsDefault, modeConfiguration = $9a77febeae1a49a9$var$getConfigurationDefault(languageId)) {
    const defaults = new $9a77febeae1a49a9$var$LanguageServiceDefaultsImpl(languageId, options, modeConfiguration);
    let mode;
    const onLanguageListener = $9a77febeae1a49a9$var$monaco_editor_core_exports.languages.onLanguage(languageId, async ()=>{
        mode = (await $9a77febeae1a49a9$var$getMode()).setupMode(defaults);
    });
    return {
        defaults: defaults,
        dispose () {
            onLanguageListener.dispose();
            mode?.dispose();
            mode = void 0;
        }
    };
}


parcelRequire("leKFq");

var $leKFq = parcelRequire("leKFq");
/*!-----------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Version: 0.31.0(252e010eb73ddc2fa1a37c1dade7bf35d87106cd)
 * Released under the MIT license
 * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt
 *-----------------------------------------------------------------------------*/ var $0eeba481b8e259d4$var$__defProp = Object.defineProperty;
var $0eeba481b8e259d4$var$__getOwnPropDesc = Object.getOwnPropertyDescriptor;
var $0eeba481b8e259d4$var$__getOwnPropNames = Object.getOwnPropertyNames;
var $0eeba481b8e259d4$var$__hasOwnProp = Object.prototype.hasOwnProperty;
var $0eeba481b8e259d4$var$__markAsModule = (target)=>$0eeba481b8e259d4$var$__defProp(target, "__esModule", {
        value: true
    })
;
var $0eeba481b8e259d4$var$__reExport = (target, module, desc)=>{
    if (module && typeof module === "object" || typeof module === "function") {
        for (let key of $0eeba481b8e259d4$var$__getOwnPropNames(module))if (!$0eeba481b8e259d4$var$__hasOwnProp.call(target, key) && key !== "default") $0eeba481b8e259d4$var$__defProp(target, key, {
            get: ()=>module[key]
            ,
            enumerable: !(desc = $0eeba481b8e259d4$var$__getOwnPropDesc(module, key)) || desc.enumerable
        });
    }
    return target;
};
// src/fillers/monaco-editor-core.ts
var $0eeba481b8e259d4$var$monaco_editor_core_exports = {};
$0eeba481b8e259d4$var$__markAsModule($0eeba481b8e259d4$var$monaco_editor_core_exports);
$0eeba481b8e259d4$var$__reExport($0eeba481b8e259d4$var$monaco_editor_core_exports, $leKFq);
// src/basic-languages/_.contribution.ts
var $0eeba481b8e259d4$var$languageDefinitions = {};
var $0eeba481b8e259d4$var$lazyLanguageLoaders = {};
var $0eeba481b8e259d4$var$LazyLanguageLoader = class {
    static getOrCreate(languageId) {
        if (!$0eeba481b8e259d4$var$lazyLanguageLoaders[languageId]) $0eeba481b8e259d4$var$lazyLanguageLoaders[languageId] = new $0eeba481b8e259d4$var$LazyLanguageLoader(languageId);
        return $0eeba481b8e259d4$var$lazyLanguageLoaders[languageId];
    }
    constructor(languageId){
        this._languageId = languageId;
        this._loadingTriggered = false;
        this._lazyLoadPromise = new Promise((resolve, reject)=>{
            this._lazyLoadPromiseResolve = resolve;
            this._lazyLoadPromiseReject = reject;
        });
    }
    whenLoaded() {
        return this._lazyLoadPromise;
    }
    load() {
        if (!this._loadingTriggered) {
            this._loadingTriggered = true;
            $0eeba481b8e259d4$var$languageDefinitions[this._languageId].loader().then((mod)=>this._lazyLoadPromiseResolve(mod)
            , (err)=>this._lazyLoadPromiseReject(err)
            );
        }
        return this._lazyLoadPromise;
    }
};
function $0eeba481b8e259d4$export$f02cbd868e2f57cf(languageId) {
    return $0eeba481b8e259d4$var$LazyLanguageLoader.getOrCreate(languageId).load();
}
function $0eeba481b8e259d4$export$b5daeabefb05ee6b(def) {
    const languageId = def.id;
    $0eeba481b8e259d4$var$languageDefinitions[languageId] = def;
    $0eeba481b8e259d4$var$monaco_editor_core_exports.languages.register(def);
    const lazyLanguageLoader = $0eeba481b8e259d4$var$LazyLanguageLoader.getOrCreate(languageId);
    $0eeba481b8e259d4$var$monaco_editor_core_exports.languages.setMonarchTokensProvider(languageId, lazyLanguageLoader.whenLoaded().then((mod)=>mod.language
    ));
    $0eeba481b8e259d4$var$monaco_editor_core_exports.languages.onLanguage(languageId, ()=>{
        lazyLanguageLoader.load().then((mod)=>{
            $0eeba481b8e259d4$var$monaco_editor_core_exports.languages.setLanguageConfiguration(languageId, mod.conf);
        });
    });
}



$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "abap",
    extensions: [
        ".abap"
    ],
    aliases: [
        "abap",
        "ABAP"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("iTYPm"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "apex",
    extensions: [
        ".cls"
    ],
    aliases: [
        "Apex",
        "apex"
    ],
    mimetypes: [
        "text/x-apex-source",
        "text/x-apex"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("8H55E"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "azcli",
    extensions: [
        ".azcli"
    ],
    aliases: [
        "Azure CLI",
        "azcli"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("2HlO2"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "bat",
    extensions: [
        ".bat",
        ".cmd"
    ],
    aliases: [
        "Batch",
        "bat"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("jCTyQ"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "bicep",
    extensions: [
        ".bicep"
    ],
    aliases: [
        "Bicep"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("367y7"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "cameligo",
    extensions: [
        ".mligo"
    ],
    aliases: [
        "Cameligo"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("a6edP"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "clojure",
    extensions: [
        ".clj",
        ".cljs",
        ".cljc",
        ".edn"
    ],
    aliases: [
        "clojure",
        "Clojure"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("kmmXc"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "coffeescript",
    extensions: [
        ".coffee"
    ],
    aliases: [
        "CoffeeScript",
        "coffeescript",
        "coffee"
    ],
    mimetypes: [
        "text/x-coffeescript",
        "text/coffeescript"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("cBt83"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "c",
    extensions: [
        ".c",
        ".h"
    ],
    aliases: [
        "C",
        "c"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("ciOdx"));
    }
});

$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "cpp",
    extensions: [
        ".cpp",
        ".cc",
        ".cxx",
        ".hpp",
        ".hh",
        ".hxx"
    ],
    aliases: [
        "C++",
        "Cpp",
        "cpp"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("ciOdx"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "csharp",
    extensions: [
        ".cs",
        ".csx",
        ".cake"
    ],
    aliases: [
        "C#",
        "csharp"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("cfhvA"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "csp",
    extensions: [],
    aliases: [
        "CSP",
        "csp"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("8aRCU"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "css",
    extensions: [
        ".css"
    ],
    aliases: [
        "CSS",
        "css"
    ],
    mimetypes: [
        "text/css"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("dJO6u"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "dart",
    extensions: [
        ".dart"
    ],
    aliases: [
        "Dart",
        "dart"
    ],
    mimetypes: [
        "text/x-dart-source",
        "text/x-dart"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("37i5t"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "dockerfile",
    extensions: [
        ".dockerfile"
    ],
    filenames: [
        "Dockerfile"
    ],
    aliases: [
        "Dockerfile"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("bZEay"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "ecl",
    extensions: [
        ".ecl"
    ],
    aliases: [
        "ECL",
        "Ecl",
        "ecl"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("eRAKK"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "elixir",
    extensions: [
        ".ex",
        ".exs"
    ],
    aliases: [
        "Elixir",
        "elixir",
        "ex"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("d5pOl"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "flow9",
    extensions: [
        ".flow"
    ],
    aliases: [
        "Flow9",
        "Flow",
        "flow9",
        "flow"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("eL2cl"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "fsharp",
    extensions: [
        ".fs",
        ".fsi",
        ".ml",
        ".mli",
        ".fsx",
        ".fsscript"
    ],
    aliases: [
        "F#",
        "FSharp",
        "fsharp"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("b6JBQ"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "go",
    extensions: [
        ".go"
    ],
    aliases: [
        "Go"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("ku4P3"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "graphql",
    extensions: [
        ".graphql",
        ".gql"
    ],
    aliases: [
        "GraphQL",
        "graphql",
        "gql"
    ],
    mimetypes: [
        "application/graphql"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("idEfQ"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "handlebars",
    extensions: [
        ".handlebars",
        ".hbs"
    ],
    aliases: [
        "Handlebars",
        "handlebars",
        "hbs"
    ],
    mimetypes: [
        "text/x-handlebars-template"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("95eEp"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "hcl",
    extensions: [
        ".tf",
        ".tfvars",
        ".hcl"
    ],
    aliases: [
        "Terraform",
        "tf",
        "HCL",
        "hcl"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("f8r3b"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "html",
    extensions: [
        ".html",
        ".htm",
        ".shtml",
        ".xhtml",
        ".mdoc",
        ".jsp",
        ".asp",
        ".aspx",
        ".jshtm"
    ],
    aliases: [
        "HTML",
        "htm",
        "html",
        "xhtml"
    ],
    mimetypes: [
        "text/html",
        "text/x-jshtm",
        "text/template",
        "text/ng-template"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("khvKP"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "ini",
    extensions: [
        ".ini",
        ".properties",
        ".gitconfig"
    ],
    filenames: [
        "config",
        ".gitattributes",
        ".gitconfig",
        ".editorconfig"
    ],
    aliases: [
        "Ini",
        "ini"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("5eN6q"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "java",
    extensions: [
        ".java",
        ".jav"
    ],
    aliases: [
        "Java",
        "java"
    ],
    mimetypes: [
        "text/x-java-source",
        "text/x-java"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("kb0WW"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "javascript",
    extensions: [
        ".js",
        ".es6",
        ".jsx",
        ".mjs"
    ],
    firstLine: "^#!.*\\bnode",
    filenames: [
        "jakefile"
    ],
    aliases: [
        "JavaScript",
        "javascript",
        "js"
    ],
    mimetypes: [
        "text/javascript"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("dQXjO"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "julia",
    extensions: [
        ".jl"
    ],
    aliases: [
        "julia",
        "Julia"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("jEzo6"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "kotlin",
    extensions: [
        ".kt"
    ],
    aliases: [
        "Kotlin",
        "kotlin"
    ],
    mimetypes: [
        "text/x-kotlin-source",
        "text/x-kotlin"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("6zcvr"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "less",
    extensions: [
        ".less"
    ],
    aliases: [
        "Less",
        "less"
    ],
    mimetypes: [
        "text/x-less",
        "text/less"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("2fZzP"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "lexon",
    extensions: [
        ".lex"
    ],
    aliases: [
        "Lexon"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("ijxk5"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "lua",
    extensions: [
        ".lua"
    ],
    aliases: [
        "Lua",
        "lua"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("cCs8J"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "liquid",
    extensions: [
        ".liquid",
        ".html.liquid"
    ],
    aliases: [
        "Liquid",
        "liquid"
    ],
    mimetypes: [
        "application/liquid"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("jCEgS"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "m3",
    extensions: [
        ".m3",
        ".i3",
        ".mg",
        ".ig"
    ],
    aliases: [
        "Modula-3",
        "Modula3",
        "modula3",
        "m3"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("20wCy"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "markdown",
    extensions: [
        ".md",
        ".markdown",
        ".mdown",
        ".mkdn",
        ".mkd",
        ".mdwn",
        ".mdtxt",
        ".mdtext"
    ],
    aliases: [
        "Markdown",
        "markdown"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("9ZdOC"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "mips",
    extensions: [
        ".s"
    ],
    aliases: [
        "MIPS",
        "MIPS-V"
    ],
    mimetypes: [
        "text/x-mips",
        "text/mips",
        "text/plaintext"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("bMLX8"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "msdax",
    extensions: [
        ".dax",
        ".msdax"
    ],
    aliases: [
        "DAX",
        "MSDAX"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("5Usgn"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "mysql",
    extensions: [],
    aliases: [
        "MySQL",
        "mysql"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("jfuIX"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "objective-c",
    extensions: [
        ".m"
    ],
    aliases: [
        "Objective-C"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("eVDWr"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "pascal",
    extensions: [
        ".pas",
        ".p",
        ".pp"
    ],
    aliases: [
        "Pascal",
        "pas"
    ],
    mimetypes: [
        "text/x-pascal-source",
        "text/x-pascal"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("hcMmU"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "pascaligo",
    extensions: [
        ".ligo"
    ],
    aliases: [
        "Pascaligo",
        "ligo"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("axTJv"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "perl",
    extensions: [
        ".pl"
    ],
    aliases: [
        "Perl",
        "pl"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("kQqMn"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "pgsql",
    extensions: [],
    aliases: [
        "PostgreSQL",
        "postgres",
        "pg",
        "postgre"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("5qTFf"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "php",
    extensions: [
        ".php",
        ".php4",
        ".php5",
        ".phtml",
        ".ctp"
    ],
    aliases: [
        "PHP",
        "php"
    ],
    mimetypes: [
        "application/x-php"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("jwsPq"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "pla",
    extensions: [
        ".pla"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("6FnhZ"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "postiats",
    extensions: [
        ".dats",
        ".sats",
        ".hats"
    ],
    aliases: [
        "ATS",
        "ATS/Postiats"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("fEIv1"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "powerquery",
    extensions: [
        ".pq",
        ".pqm"
    ],
    aliases: [
        "PQ",
        "M",
        "Power Query",
        "Power Query M"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("bSsM3"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "powershell",
    extensions: [
        ".ps1",
        ".psm1",
        ".psd1"
    ],
    aliases: [
        "PowerShell",
        "powershell",
        "ps",
        "ps1"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("irkQO"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "proto",
    extensions: [
        ".proto"
    ],
    aliases: [
        "protobuf",
        "Protocol Buffers"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("dcfpT"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "pug",
    extensions: [
        ".jade",
        ".pug"
    ],
    aliases: [
        "Pug",
        "Jade",
        "jade"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("drr2M"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "python",
    extensions: [
        ".py",
        ".rpy",
        ".pyw",
        ".cpy",
        ".gyp",
        ".gypi"
    ],
    aliases: [
        "Python",
        "py"
    ],
    firstLine: "^#!/.*\\bpython[0-9.-]*\\b",
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("eCPam"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "qsharp",
    extensions: [
        ".qs"
    ],
    aliases: [
        "Q#",
        "qsharp"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("3tGw8"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "r",
    extensions: [
        ".r",
        ".rhistory",
        ".rmd",
        ".rprofile",
        ".rt"
    ],
    aliases: [
        "R",
        "r"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("8MDYi"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "razor",
    extensions: [
        ".cshtml"
    ],
    aliases: [
        "Razor",
        "razor"
    ],
    mimetypes: [
        "text/x-cshtml"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("klXkH"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "redis",
    extensions: [
        ".redis"
    ],
    aliases: [
        "redis"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("jYpBe"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "redshift",
    extensions: [],
    aliases: [
        "Redshift",
        "redshift"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("3pvrD"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "restructuredtext",
    extensions: [
        ".rst"
    ],
    aliases: [
        "reStructuredText",
        "restructuredtext"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("lWnRI"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "ruby",
    extensions: [
        ".rb",
        ".rbx",
        ".rjs",
        ".gemspec",
        ".pp"
    ],
    filenames: [
        "rakefile",
        "Gemfile"
    ],
    aliases: [
        "Ruby",
        "rb"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("27zVP"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "rust",
    extensions: [
        ".rs",
        ".rlib"
    ],
    aliases: [
        "Rust",
        "rust"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("9dyRt"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "sb",
    extensions: [
        ".sb"
    ],
    aliases: [
        "Small Basic",
        "sb"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("7RRJA"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "scala",
    extensions: [
        ".scala",
        ".sc",
        ".sbt"
    ],
    aliases: [
        "Scala",
        "scala",
        "SBT",
        "Sbt",
        "sbt",
        "Dotty",
        "dotty"
    ],
    mimetypes: [
        "text/x-scala-source",
        "text/x-scala",
        "text/x-sbt",
        "text/x-dotty"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("gV4qz"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "scheme",
    extensions: [
        ".scm",
        ".ss",
        ".sch",
        ".rkt"
    ],
    aliases: [
        "scheme",
        "Scheme"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("5ESMm"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "scss",
    extensions: [
        ".scss"
    ],
    aliases: [
        "Sass",
        "sass",
        "scss"
    ],
    mimetypes: [
        "text/x-scss",
        "text/scss"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("2AUU8"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "shell",
    extensions: [
        ".sh",
        ".bash"
    ],
    aliases: [
        "Shell",
        "sh"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("g5LMg"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "sol",
    extensions: [
        ".sol"
    ],
    aliases: [
        "sol",
        "solidity",
        "Solidity"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("5WJUF"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "aes",
    extensions: [
        ".aes"
    ],
    aliases: [
        "aes",
        "sophia",
        "Sophia"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("yBPUU"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "sparql",
    extensions: [
        ".rq"
    ],
    aliases: [
        "sparql",
        "SPARQL"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("5Qk85"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "sql",
    extensions: [
        ".sql"
    ],
    aliases: [
        "SQL"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("cqJT5"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "st",
    extensions: [
        ".st",
        ".iecst",
        ".iecplc",
        ".lc3lib"
    ],
    aliases: [
        "StructuredText",
        "scl",
        "stl"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("4WLys"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "swift",
    aliases: [
        "Swift",
        "swift"
    ],
    extensions: [
        ".swift"
    ],
    mimetypes: [
        "text/swift"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("dVfm1"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "systemverilog",
    extensions: [
        ".sv",
        ".svh"
    ],
    aliases: [
        "SV",
        "sv",
        "SystemVerilog",
        "systemverilog"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("b62GA"));
    }
});

$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "verilog",
    extensions: [
        ".v",
        ".vh"
    ],
    aliases: [
        "V",
        "v",
        "Verilog",
        "verilog"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("b62GA"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "tcl",
    extensions: [
        ".tcl"
    ],
    aliases: [
        "tcl",
        "Tcl",
        "tcltk",
        "TclTk",
        "tcl/tk",
        "Tcl/Tk"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("891Ze"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "twig",
    extensions: [
        ".twig"
    ],
    aliases: [
        "Twig",
        "twig"
    ],
    mimetypes: [
        "text/x-twig"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("a93lS"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "typescript",
    extensions: [
        ".ts",
        ".tsx"
    ],
    aliases: [
        "TypeScript",
        "ts",
        "typescript"
    ],
    mimetypes: [
        "text/typescript"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("gLr9i"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "vb",
    extensions: [
        ".vb"
    ],
    aliases: [
        "Visual Basic",
        "vb"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("khf1M"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "xml",
    extensions: [
        ".xml",
        ".dtd",
        ".ascx",
        ".csproj",
        ".config",
        ".wxi",
        ".wxl",
        ".wxs",
        ".xaml",
        ".svg",
        ".svgz",
        ".opf",
        ".xsl"
    ],
    firstLine: "(\\<\\?xml.*)|(\\<svg)|(\\<\\!doctype\\s+svg)",
    aliases: [
        "XML",
        "xml"
    ],
    mimetypes: [
        "text/xml",
        "application/xml",
        "application/xaml+xml",
        "application/xml-dtd"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("cLj96"));
    }
});




$0eeba481b8e259d4$export$b5daeabefb05ee6b({
    id: "yaml",
    extensions: [
        ".yaml",
        ".yml"
    ],
    aliases: [
        "YAML",
        "yaml",
        "YML",
        "yml"
    ],
    mimetypes: [
        "application/x-yaml",
        "text/x-yaml"
    ],
    loader: ()=>{
        var resolve, reject;
        return (parcelRequire("gFNkk"));
    }
});




parcelRequire("ami5U");
parcelRequire("kdjz4");
parcelRequire("gD9SF");
parcelRequire("klBRu");
var $16744ae6913d83dc$exports = {};

var $aIbUW = parcelRequire("aIbUW");

var $iGmb0 = parcelRequire("iGmb0");

var $fuc8X = parcelRequire("fuc8X");


var $2iJTi = parcelRequire("2iJTi");

var $jzicX = parcelRequire("jzicX");

var $ibKGQ = parcelRequire("ibKGQ");

var $4dEdH = parcelRequire("4dEdH");

var $cxCeF = parcelRequire("cxCeF");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $16744ae6913d83dc$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var $16744ae6913d83dc$var$__param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
};
var $16744ae6913d83dc$var$__awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
const $16744ae6913d83dc$export$3d83c0749714b612 = new $cxCeF.RawContextKey('selectionAnchorSet', false);
let $16744ae6913d83dc$var$SelectionAnchorController = class SelectionAnchorController {
    constructor(editor, contextKeyService){
        this.editor = editor;
        this.selectionAnchorSetContextKey = $16744ae6913d83dc$export$3d83c0749714b612.bindTo(contextKeyService);
        this.modelChangeListener = editor.onDidChangeModel(()=>this.selectionAnchorSetContextKey.reset()
        );
    }
    static get(editor) {
        return editor.getContribution(SelectionAnchorController.ID);
    }
    setSelectionAnchor() {
        if (this.editor.hasModel()) {
            const position = this.editor.getPosition();
            const previousDecorations = this.decorationId ? [
                this.decorationId
            ] : [];
            const newDecorationId = this.editor.deltaDecorations(previousDecorations, [
                {
                    range: $jzicX.Selection.fromPositions(position, position),
                    options: {
                        description: 'selection-anchor',
                        stickiness: 1 /* NeverGrowsWhenTypingAtEdges */ ,
                        hoverMessage: new $iGmb0.MarkdownString().appendText($4dEdH.localize('selectionAnchor', "Selection Anchor")),
                        className: 'selection-anchor'
                    }
                }
            ]);
            this.decorationId = newDecorationId[0];
            this.selectionAnchorSetContextKey.set(!!this.decorationId);
            $aIbUW.alert($4dEdH.localize('anchorSet', "Anchor set at {0}:{1}", position.lineNumber, position.column));
        }
    }
    goToSelectionAnchor() {
        if (this.editor.hasModel() && this.decorationId) {
            const anchorPosition = this.editor.getModel().getDecorationRange(this.decorationId);
            if (anchorPosition) this.editor.setPosition(anchorPosition.getStartPosition());
        }
    }
    selectFromAnchorToCursor() {
        if (this.editor.hasModel() && this.decorationId) {
            const start = this.editor.getModel().getDecorationRange(this.decorationId);
            if (start) {
                const end = this.editor.getPosition();
                this.editor.setSelection($jzicX.Selection.fromPositions(start.getStartPosition(), end));
                this.cancelSelectionAnchor();
            }
        }
    }
    cancelSelectionAnchor() {
        if (this.decorationId) {
            this.editor.deltaDecorations([
                this.decorationId
            ], []);
            this.decorationId = undefined;
            this.selectionAnchorSetContextKey.set(false);
        }
    }
    dispose() {
        this.cancelSelectionAnchor();
        this.modelChangeListener.dispose();
    }
};
$16744ae6913d83dc$var$SelectionAnchorController.ID = 'editor.contrib.selectionAnchorController';
$16744ae6913d83dc$var$SelectionAnchorController = $16744ae6913d83dc$var$__decorate([
    $16744ae6913d83dc$var$__param(1, $cxCeF.IContextKeyService)
], $16744ae6913d83dc$var$SelectionAnchorController);
class $16744ae6913d83dc$var$SetSelectionAnchor extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: 'editor.action.setSelectionAnchor',
            label: $4dEdH.localize('setSelectionAnchor', "Set Selection Anchor"),
            alias: 'Set Selection Anchor',
            precondition: undefined,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.editorTextFocus,
                primary: $fuc8X.KeyChord(2089 /* KeyK */ , 2080 /* KeyB */ ),
                weight: 100 /* EditorContrib */ 
            }
        });
    }
    run(_accessor, editor) {
        return $16744ae6913d83dc$var$__awaiter(this, void 0, void 0, function*() {
            const controller = $16744ae6913d83dc$var$SelectionAnchorController.get(editor);
            controller.setSelectionAnchor();
        });
    }
}
class $16744ae6913d83dc$var$GoToSelectionAnchor extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: 'editor.action.goToSelectionAnchor',
            label: $4dEdH.localize('goToSelectionAnchor', "Go to Selection Anchor"),
            alias: 'Go to Selection Anchor',
            precondition: $16744ae6913d83dc$export$3d83c0749714b612
        });
    }
    run(_accessor, editor) {
        return $16744ae6913d83dc$var$__awaiter(this, void 0, void 0, function*() {
            const controller = $16744ae6913d83dc$var$SelectionAnchorController.get(editor);
            controller.goToSelectionAnchor();
        });
    }
}
class $16744ae6913d83dc$var$SelectFromAnchorToCursor extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: 'editor.action.selectFromAnchorToCursor',
            label: $4dEdH.localize('selectFromAnchorToCursor', "Select from Anchor to Cursor"),
            alias: 'Select from Anchor to Cursor',
            precondition: $16744ae6913d83dc$export$3d83c0749714b612,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.editorTextFocus,
                primary: $fuc8X.KeyChord(2089 /* KeyK */ , 2089 /* KeyK */ ),
                weight: 100 /* EditorContrib */ 
            }
        });
    }
    run(_accessor, editor) {
        return $16744ae6913d83dc$var$__awaiter(this, void 0, void 0, function*() {
            const controller = $16744ae6913d83dc$var$SelectionAnchorController.get(editor);
            controller.selectFromAnchorToCursor();
        });
    }
}
class $16744ae6913d83dc$var$CancelSelectionAnchor extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: 'editor.action.cancelSelectionAnchor',
            label: $4dEdH.localize('cancelSelectionAnchor', "Cancel Selection Anchor"),
            alias: 'Cancel Selection Anchor',
            precondition: $16744ae6913d83dc$export$3d83c0749714b612,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.editorTextFocus,
                primary: 9 /* Escape */ ,
                weight: 100 /* EditorContrib */ 
            }
        });
    }
    run(_accessor, editor) {
        return $16744ae6913d83dc$var$__awaiter(this, void 0, void 0, function*() {
            const controller = $16744ae6913d83dc$var$SelectionAnchorController.get(editor);
            controller.cancelSelectionAnchor();
        });
    }
}
$2iJTi.registerEditorContribution($16744ae6913d83dc$var$SelectionAnchorController.ID, $16744ae6913d83dc$var$SelectionAnchorController);
$2iJTi.registerEditorAction($16744ae6913d83dc$var$SetSelectionAnchor);
$2iJTi.registerEditorAction($16744ae6913d83dc$var$GoToSelectionAnchor);
$2iJTi.registerEditorAction($16744ae6913d83dc$var$SelectFromAnchorToCursor);
$2iJTi.registerEditorAction($16744ae6913d83dc$var$CancelSelectionAnchor);



var $6bXyA = parcelRequire("6bXyA");

var $9cWcn = parcelRequire("9cWcn");


var $2iJTi = parcelRequire("2iJTi");

var $dcxQ7 = parcelRequire("dcxQ7");

var $d00il = parcelRequire("d00il");

var $jzicX = parcelRequire("jzicX");

var $ibKGQ = parcelRequire("ibKGQ");

var $1Y4vr = parcelRequire("1Y4vr");

var $91ntV = parcelRequire("91ntV");

var $50T4y = parcelRequire("50T4y");

var $4dEdH = parcelRequire("4dEdH");

var $g4v7E = parcelRequire("g4v7E");

var $gaWeX = parcelRequire("gaWeX");

var $azIPz = parcelRequire("azIPz");
const $ae9222e03c3e1d6f$var$overviewRulerBracketMatchForeground = $gaWeX.registerColor('editorOverviewRuler.bracketMatchForeground', {
    dark: '#A0A0A0',
    light: '#A0A0A0',
    hc: '#A0A0A0'
}, $4dEdH.localize('overviewRulerBracketMatchForeground', 'Overview ruler marker color for matching brackets.'));
class $ae9222e03c3e1d6f$var$JumpToBracketAction extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: 'editor.action.jumpToBracket',
            label: $4dEdH.localize('smartSelect.jumpBracket', "Go to Bracket"),
            alias: 'Go to Bracket',
            precondition: undefined,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.editorTextFocus,
                primary: 3160 /* Backslash */ ,
                weight: 100 /* EditorContrib */ 
            }
        });
    }
    run(accessor, editor) {
        let controller = $ae9222e03c3e1d6f$export$b2b226e5cffb93ca.get(editor);
        if (!controller) return;
        controller.jumpToBracket();
    }
}
class $ae9222e03c3e1d6f$var$SelectToBracketAction extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: 'editor.action.selectToBracket',
            label: $4dEdH.localize('smartSelect.selectToBracket', "Select to Bracket"),
            alias: 'Select to Bracket',
            precondition: undefined,
            description: {
                description: `Select to Bracket`,
                args: [
                    {
                        name: 'args',
                        schema: {
                            type: 'object',
                            properties: {
                                'selectBrackets': {
                                    type: 'boolean',
                                    default: true
                                }
                            }
                        }
                    }
                ]
            }
        });
    }
    run(accessor, editor, args) {
        const controller = $ae9222e03c3e1d6f$export$b2b226e5cffb93ca.get(editor);
        if (!controller) return;
        let selectBrackets = true;
        if (args && args.selectBrackets === false) selectBrackets = false;
        controller.selectToBracket(selectBrackets);
    }
}
class $ae9222e03c3e1d6f$var$BracketsData {
    constructor(position, brackets, options){
        this.position = position;
        this.brackets = brackets;
        this.options = options;
    }
}
class $ae9222e03c3e1d6f$export$b2b226e5cffb93ca extends $9cWcn.Disposable {
    constructor(editor){
        super();
        this._editor = editor;
        this._lastBracketsData = [];
        this._lastVersionId = 0;
        this._decorations = [];
        this._updateBracketsSoon = this._register(new $6bXyA.RunOnceScheduler(()=>this._updateBrackets()
        , 50));
        this._matchBrackets = this._editor.getOption(63 /* matchBrackets */ );
        this._updateBracketsSoon.schedule();
        this._register(editor.onDidChangeCursorPosition((e)=>{
            if (this._matchBrackets === 'never') // Early exit if nothing needs to be done!
            // Leave some form of early exit check here if you wish to continue being a cursor position change listener ;)
            return;
            this._updateBracketsSoon.schedule();
        }));
        this._register(editor.onDidChangeModelContent((e)=>{
            this._updateBracketsSoon.schedule();
        }));
        this._register(editor.onDidChangeModel((e)=>{
            this._lastBracketsData = [];
            this._decorations = [];
            this._updateBracketsSoon.schedule();
        }));
        this._register(editor.onDidChangeModelLanguageConfiguration((e)=>{
            this._lastBracketsData = [];
            this._updateBracketsSoon.schedule();
        }));
        this._register(editor.onDidChangeConfiguration((e)=>{
            if (e.hasChanged(63 /* matchBrackets */ )) {
                this._matchBrackets = this._editor.getOption(63 /* matchBrackets */ );
                this._decorations = this._editor.deltaDecorations(this._decorations, []);
                this._lastBracketsData = [];
                this._lastVersionId = 0;
                this._updateBracketsSoon.schedule();
            }
        }));
        this._register(editor.onDidBlurEditorWidget(()=>{
            this._updateBracketsSoon.schedule();
        }));
        this._register(editor.onDidFocusEditorWidget(()=>{
            this._updateBracketsSoon.schedule();
        }));
    }
    static get(editor) {
        return editor.getContribution($ae9222e03c3e1d6f$export$b2b226e5cffb93ca.ID);
    }
    jumpToBracket() {
        if (!this._editor.hasModel()) return;
        const model = this._editor.getModel();
        const newSelections = this._editor.getSelections().map((selection)=>{
            const position = selection.getStartPosition();
            // find matching brackets if position is on a bracket
            const brackets = model.bracketPairs.matchBracket(position);
            let newCursorPosition = null;
            if (brackets) {
                if (brackets[0].containsPosition(position)) newCursorPosition = brackets[1].getStartPosition();
                else if (brackets[1].containsPosition(position)) newCursorPosition = brackets[0].getStartPosition();
            } else {
                // find the enclosing brackets if the position isn't on a matching bracket
                const enclosingBrackets = model.bracketPairs.findEnclosingBrackets(position);
                if (enclosingBrackets) newCursorPosition = enclosingBrackets[0].getStartPosition();
                else {
                    // no enclosing brackets, try the very first next bracket
                    const nextBracket = model.bracketPairs.findNextBracket(position);
                    if (nextBracket && nextBracket.range) newCursorPosition = nextBracket.range.getStartPosition();
                }
            }
            if (newCursorPosition) return new $jzicX.Selection(newCursorPosition.lineNumber, newCursorPosition.column, newCursorPosition.lineNumber, newCursorPosition.column);
            return new $jzicX.Selection(position.lineNumber, position.column, position.lineNumber, position.column);
        });
        this._editor.setSelections(newSelections);
        this._editor.revealRange(newSelections[0]);
    }
    selectToBracket(selectBrackets) {
        if (!this._editor.hasModel()) return;
        const model = this._editor.getModel();
        const newSelections = [];
        this._editor.getSelections().forEach((selection)=>{
            const position = selection.getStartPosition();
            let brackets = model.bracketPairs.matchBracket(position);
            if (!brackets) {
                brackets = model.bracketPairs.findEnclosingBrackets(position);
                if (!brackets) {
                    const nextBracket = model.bracketPairs.findNextBracket(position);
                    if (nextBracket && nextBracket.range) brackets = model.bracketPairs.matchBracket(nextBracket.range.getStartPosition());
                }
            }
            let selectFrom = null;
            let selectTo = null;
            if (brackets) {
                brackets.sort($d00il.Range.compareRangesUsingStarts);
                const [open, close] = brackets;
                selectFrom = selectBrackets ? open.getStartPosition() : open.getEndPosition();
                selectTo = selectBrackets ? close.getEndPosition() : close.getStartPosition();
                if (close.containsPosition(position)) {
                    // select backwards if the cursor was on the closing bracket
                    const tmp = selectFrom;
                    selectFrom = selectTo;
                    selectTo = tmp;
                }
            }
            if (selectFrom && selectTo) newSelections.push(new $jzicX.Selection(selectFrom.lineNumber, selectFrom.column, selectTo.lineNumber, selectTo.column));
        });
        if (newSelections.length > 0) {
            this._editor.setSelections(newSelections);
            this._editor.revealRange(newSelections[0]);
        }
    }
    _updateBrackets() {
        if (this._matchBrackets === 'never') return;
        this._recomputeBrackets();
        let newDecorations = [], newDecorationsLen = 0;
        for (const bracketData of this._lastBracketsData){
            let brackets = bracketData.brackets;
            if (brackets) {
                newDecorations[newDecorationsLen++] = {
                    range: brackets[0],
                    options: bracketData.options
                };
                newDecorations[newDecorationsLen++] = {
                    range: brackets[1],
                    options: bracketData.options
                };
            }
        }
        this._decorations = this._editor.deltaDecorations(this._decorations, newDecorations);
    }
    _recomputeBrackets() {
        if (!this._editor.hasModel() || !this._editor.hasWidgetFocus()) {
            // no model or no focus => no brackets!
            this._lastBracketsData = [];
            this._lastVersionId = 0;
            return;
        }
        const selections = this._editor.getSelections();
        if (selections.length > 100) {
            // no bracket matching for high numbers of selections
            this._lastBracketsData = [];
            this._lastVersionId = 0;
            return;
        }
        const model = this._editor.getModel();
        const versionId = model.getVersionId();
        let previousData = [];
        if (this._lastVersionId === versionId) // use the previous data only if the model is at the same version id
        previousData = this._lastBracketsData;
        let positions = [], positionsLen = 0;
        for(let i = 0, len = selections.length; i < len; i++){
            let selection = selections[i];
            if (selection.isEmpty()) // will bracket match a cursor only if the selection is collapsed
            positions[positionsLen++] = selection.getStartPosition();
        }
        // sort positions for `previousData` cache hits
        if (positions.length > 1) positions.sort($dcxQ7.Position.compare);
        let newData = [], newDataLen = 0;
        let previousIndex = 0, previousLen = previousData.length;
        for(let i1 = 0, len1 = positions.length; i1 < len1; i1++){
            let position = positions[i1];
            while(previousIndex < previousLen && previousData[previousIndex].position.isBefore(position))previousIndex++;
            if (previousIndex < previousLen && previousData[previousIndex].position.equals(position)) newData[newDataLen++] = previousData[previousIndex];
            else {
                let brackets = model.bracketPairs.matchBracket(position);
                let options = $ae9222e03c3e1d6f$export$b2b226e5cffb93ca._DECORATION_OPTIONS_WITH_OVERVIEW_RULER;
                if (!brackets && this._matchBrackets === 'always') {
                    brackets = model.bracketPairs.findEnclosingBrackets(position, 20 /* give at most 20ms to compute */ );
                    options = $ae9222e03c3e1d6f$export$b2b226e5cffb93ca._DECORATION_OPTIONS_WITHOUT_OVERVIEW_RULER;
                }
                newData[newDataLen++] = new $ae9222e03c3e1d6f$var$BracketsData(position, brackets, options);
            }
        }
        this._lastBracketsData = newData;
        this._lastVersionId = versionId;
    }
}
$ae9222e03c3e1d6f$export$b2b226e5cffb93ca.ID = 'editor.contrib.bracketMatchingController';
$ae9222e03c3e1d6f$export$b2b226e5cffb93ca._DECORATION_OPTIONS_WITH_OVERVIEW_RULER = $91ntV.ModelDecorationOptions.register({
    description: 'bracket-match-overview',
    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */ ,
    className: 'bracket-match',
    overviewRuler: {
        color: $azIPz.themeColorFromId($ae9222e03c3e1d6f$var$overviewRulerBracketMatchForeground),
        position: $1Y4vr.OverviewRulerLane.Center
    }
});
$ae9222e03c3e1d6f$export$b2b226e5cffb93ca._DECORATION_OPTIONS_WITHOUT_OVERVIEW_RULER = $91ntV.ModelDecorationOptions.register({
    description: 'bracket-match-no-overview',
    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */ ,
    className: 'bracket-match'
});
$2iJTi.registerEditorContribution($ae9222e03c3e1d6f$export$b2b226e5cffb93ca.ID, $ae9222e03c3e1d6f$export$b2b226e5cffb93ca);
$2iJTi.registerEditorAction($ae9222e03c3e1d6f$var$SelectToBracketAction);
$2iJTi.registerEditorAction($ae9222e03c3e1d6f$var$JumpToBracketAction);
$azIPz.registerThemingParticipant((theme, collector)=>{
    const bracketMatchBackground = theme.getColor($50T4y.editorBracketMatchBackground);
    if (bracketMatchBackground) collector.addRule(`.monaco-editor .bracket-match { background-color: ${bracketMatchBackground}; }`);
    const bracketMatchBorder = theme.getColor($50T4y.editorBracketMatchBorder);
    if (bracketMatchBorder) collector.addRule(`.monaco-editor .bracket-match { border: 1px solid ${bracketMatchBorder}; }`);
});
// Go to menu
$g4v7E.MenuRegistry.appendMenuItem($g4v7E.MenuId.MenubarGoMenu, {
    group: '5_infile_nav',
    command: {
        id: 'editor.action.jumpToBracket',
        title: $4dEdH.localize({
            key: 'miGoToBracket',
            comment: [
                '&& denotes a mnemonic'
            ]
        }, "Go to &&Bracket")
    },
    order: 2
});



var $2iJTi = parcelRequire("2iJTi");

var $ibKGQ = parcelRequire("ibKGQ");

var $d00il = parcelRequire("d00il");

var $jzicX = parcelRequire("jzicX");
class $57874eac054ed654$export$2acdcd460d66aef1 {
    constructor(selection, isMovingLeft){
        this._selection = selection;
        this._isMovingLeft = isMovingLeft;
    }
    getEditOperations(model, builder) {
        if (this._selection.startLineNumber !== this._selection.endLineNumber || this._selection.isEmpty()) return;
        const lineNumber = this._selection.startLineNumber;
        const startColumn = this._selection.startColumn;
        const endColumn = this._selection.endColumn;
        if (this._isMovingLeft && startColumn === 1) return;
        if (!this._isMovingLeft && endColumn === model.getLineMaxColumn(lineNumber)) return;
        if (this._isMovingLeft) {
            const rangeBefore = new $d00il.Range(lineNumber, startColumn - 1, lineNumber, startColumn);
            const charBefore = model.getValueInRange(rangeBefore);
            builder.addEditOperation(rangeBefore, null);
            builder.addEditOperation(new $d00il.Range(lineNumber, endColumn, lineNumber, endColumn), charBefore);
        } else {
            const rangeAfter = new $d00il.Range(lineNumber, endColumn, lineNumber, endColumn + 1);
            const charAfter = model.getValueInRange(rangeAfter);
            builder.addEditOperation(rangeAfter, null);
            builder.addEditOperation(new $d00il.Range(lineNumber, startColumn, lineNumber, startColumn), charAfter);
        }
    }
    computeCursorState(model, helper) {
        if (this._isMovingLeft) return new $jzicX.Selection(this._selection.startLineNumber, this._selection.startColumn - 1, this._selection.endLineNumber, this._selection.endColumn - 1);
        else return new $jzicX.Selection(this._selection.startLineNumber, this._selection.startColumn + 1, this._selection.endLineNumber, this._selection.endColumn + 1);
    }
}



var $4dEdH = parcelRequire("4dEdH");
class $c2ed19bde6b5069b$var$MoveCaretAction extends $2iJTi.EditorAction {
    constructor(left, opts){
        super(opts);
        this.left = left;
    }
    run(accessor, editor) {
        if (!editor.hasModel()) return;
        let commands = [];
        let selections = editor.getSelections();
        for (const selection of selections)commands.push(new $57874eac054ed654$export$2acdcd460d66aef1(selection, this.left));
        editor.pushUndoStop();
        editor.executeCommands(this.id, commands);
        editor.pushUndoStop();
    }
}
class $c2ed19bde6b5069b$var$MoveCaretLeftAction extends $c2ed19bde6b5069b$var$MoveCaretAction {
    constructor(){
        super(true, {
            id: 'editor.action.moveCarretLeftAction',
            label: $4dEdH.localize('caret.moveLeft', "Move Selected Text Left"),
            alias: 'Move Selected Text Left',
            precondition: $ibKGQ.EditorContextKeys.writable
        });
    }
}
class $c2ed19bde6b5069b$var$MoveCaretRightAction extends $c2ed19bde6b5069b$var$MoveCaretAction {
    constructor(){
        super(false, {
            id: 'editor.action.moveCarretRightAction',
            label: $4dEdH.localize('caret.moveRight', "Move Selected Text Right"),
            alias: 'Move Selected Text Right',
            precondition: $ibKGQ.EditorContextKeys.writable
        });
    }
}
$2iJTi.registerEditorAction($c2ed19bde6b5069b$var$MoveCaretLeftAction);
$2iJTi.registerEditorAction($c2ed19bde6b5069b$var$MoveCaretRightAction);



var $2iJTi = parcelRequire("2iJTi");

var $5TVJR = parcelRequire("5TVJR");

var $dVMuN = parcelRequire("dVMuN");

var $d00il = parcelRequire("d00il");

var $ibKGQ = parcelRequire("ibKGQ");

var $4dEdH = parcelRequire("4dEdH");
class $6170679b06c65c2d$var$TransposeLettersAction extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: 'editor.action.transposeLetters',
            label: $4dEdH.localize('transposeLetters.label', "Transpose Letters"),
            alias: 'Transpose Letters',
            precondition: $ibKGQ.EditorContextKeys.writable,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.textInputFocus,
                primary: 0,
                mac: {
                    primary: 306 /* KeyT */ 
                },
                weight: 100 /* EditorContrib */ 
            }
        });
    }
    run(accessor, editor) {
        if (!editor.hasModel()) return;
        let model = editor.getModel();
        let commands = [];
        let selections = editor.getSelections();
        for (let selection of selections){
            if (!selection.isEmpty()) continue;
            let lineNumber = selection.startLineNumber;
            let column = selection.startColumn;
            let lastColumn = model.getLineMaxColumn(lineNumber);
            if (lineNumber === 1 && (column === 1 || column === 2 && lastColumn === 2)) continue;
            // handle special case: when at end of line, transpose left two chars
            // otherwise, transpose left and right chars
            let endPosition = column === lastColumn ? selection.getPosition() : $dVMuN.MoveOperations.rightPosition(model, selection.getPosition().lineNumber, selection.getPosition().column);
            let middlePosition = $dVMuN.MoveOperations.leftPosition(model, endPosition);
            let beginPosition = $dVMuN.MoveOperations.leftPosition(model, middlePosition);
            let leftChar = model.getValueInRange($d00il.Range.fromPositions(beginPosition, middlePosition));
            let rightChar = model.getValueInRange($d00il.Range.fromPositions(middlePosition, endPosition));
            let replaceRange = $d00il.Range.fromPositions(beginPosition, endPosition);
            commands.push(new $5TVJR.ReplaceCommand(replaceRange, rightChar + leftChar));
        }
        if (commands.length > 0) {
            editor.pushUndoStop();
            editor.executeCommands(this.id, commands);
            editor.pushUndoStop();
        }
    }
}
$2iJTi.registerEditorAction($6170679b06c65c2d$var$TransposeLettersAction);


var $95df918b09e36b99$exports = {};

var $5yY14 = parcelRequire("5yY14");

var $lb0Ah = parcelRequire("lb0Ah");

var $al9cc = parcelRequire("al9cc");

var $2iJTi = parcelRequire("2iJTi");

var $2Qfl0 = parcelRequire("2Qfl0");

var $ibKGQ = parcelRequire("ibKGQ");

var $4dEdH = parcelRequire("4dEdH");

var $g4v7E = parcelRequire("g4v7E");

var $8QSW4 = parcelRequire("8QSW4");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $95df918b09e36b99$var$__awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
const $95df918b09e36b99$var$CLIPBOARD_CONTEXT_MENU_GROUP = '9_cutcopypaste';
const $95df918b09e36b99$var$supportsCut = $lb0Ah.isNative || document.queryCommandSupported('cut');
const $95df918b09e36b99$var$supportsCopy = $lb0Ah.isNative || document.queryCommandSupported('copy');
// Firefox only supports navigator.clipboard.readText() in browser extensions.
// See https://developer.mozilla.org/en-US/docs/Web/API/Clipboard/readText#Browser_compatibility
// When loading over http, navigator.clipboard can be undefined. See https://github.com/microsoft/monaco-editor/issues/2313
const $95df918b09e36b99$var$supportsPaste = typeof navigator.clipboard === 'undefined' || $5yY14.isFirefox ? document.queryCommandSupported('paste') : true;
function $95df918b09e36b99$var$registerCommand(command) {
    command.register();
    return command;
}
const $95df918b09e36b99$export$c126fcd83420b17 = $95df918b09e36b99$var$supportsCut ? $95df918b09e36b99$var$registerCommand(new $2iJTi.MultiCommand({
    id: 'editor.action.clipboardCutAction',
    precondition: undefined,
    kbOpts: // Do not bind cut keybindings in the browser,
    // since browsers do that for us and it avoids security prompts
    $lb0Ah.isNative ? {
        primary: 2102 /* KeyX */ ,
        win: {
            primary: 2102 /* KeyX */ ,
            secondary: [
                1044 /* Delete */ 
            ]
        },
        weight: 100 /* EditorContrib */ 
    } : undefined,
    menuOpts: [
        {
            menuId: $g4v7E.MenuId.MenubarEditMenu,
            group: '2_ccp',
            title: $4dEdH.localize({
                key: 'miCut',
                comment: [
                    '&& denotes a mnemonic'
                ]
            }, "Cu&&t"),
            order: 1
        },
        {
            menuId: $g4v7E.MenuId.EditorContext,
            group: $95df918b09e36b99$var$CLIPBOARD_CONTEXT_MENU_GROUP,
            title: $4dEdH.localize('actions.clipboard.cutLabel', "Cut"),
            when: $ibKGQ.EditorContextKeys.writable,
            order: 1
        },
        {
            menuId: $g4v7E.MenuId.CommandPalette,
            group: '',
            title: $4dEdH.localize('actions.clipboard.cutLabel', "Cut"),
            order: 1
        },
        {
            menuId: $g4v7E.MenuId.SimpleEditorContext,
            group: $95df918b09e36b99$var$CLIPBOARD_CONTEXT_MENU_GROUP,
            title: $4dEdH.localize('actions.clipboard.cutLabel', "Cut"),
            when: $ibKGQ.EditorContextKeys.writable,
            order: 1
        }
    ]
})) : undefined;
const $95df918b09e36b99$export$958df07cbf9735fc = $95df918b09e36b99$var$supportsCopy ? $95df918b09e36b99$var$registerCommand(new $2iJTi.MultiCommand({
    id: 'editor.action.clipboardCopyAction',
    precondition: undefined,
    kbOpts: // Do not bind copy keybindings in the browser,
    // since browsers do that for us and it avoids security prompts
    $lb0Ah.isNative ? {
        primary: 2081 /* KeyC */ ,
        win: {
            primary: 2081 /* KeyC */ ,
            secondary: [
                2067 /* Insert */ 
            ]
        },
        weight: 100 /* EditorContrib */ 
    } : undefined,
    menuOpts: [
        {
            menuId: $g4v7E.MenuId.MenubarEditMenu,
            group: '2_ccp',
            title: $4dEdH.localize({
                key: 'miCopy',
                comment: [
                    '&& denotes a mnemonic'
                ]
            }, "&&Copy"),
            order: 2
        },
        {
            menuId: $g4v7E.MenuId.EditorContext,
            group: $95df918b09e36b99$var$CLIPBOARD_CONTEXT_MENU_GROUP,
            title: $4dEdH.localize('actions.clipboard.copyLabel', "Copy"),
            order: 2
        },
        {
            menuId: $g4v7E.MenuId.CommandPalette,
            group: '',
            title: $4dEdH.localize('actions.clipboard.copyLabel', "Copy"),
            order: 1
        },
        {
            menuId: $g4v7E.MenuId.SimpleEditorContext,
            group: $95df918b09e36b99$var$CLIPBOARD_CONTEXT_MENU_GROUP,
            title: $4dEdH.localize('actions.clipboard.copyLabel', "Copy"),
            order: 2
        }
    ]
})) : undefined;
$g4v7E.MenuRegistry.appendMenuItem($g4v7E.MenuId.MenubarEditMenu, {
    submenu: $g4v7E.MenuId.MenubarCopy,
    title: {
        value: $4dEdH.localize('copy as', "Copy As"),
        original: 'Copy As'
    },
    group: '2_ccp',
    order: 3
});
$g4v7E.MenuRegistry.appendMenuItem($g4v7E.MenuId.EditorContext, {
    submenu: $g4v7E.MenuId.EditorContextCopy,
    title: {
        value: $4dEdH.localize('copy as', "Copy As"),
        original: 'Copy As'
    },
    group: $95df918b09e36b99$var$CLIPBOARD_CONTEXT_MENU_GROUP,
    order: 3
});
const $95df918b09e36b99$export$c386eebeb0318c58 = $95df918b09e36b99$var$supportsPaste ? $95df918b09e36b99$var$registerCommand(new $2iJTi.MultiCommand({
    id: 'editor.action.clipboardPasteAction',
    precondition: undefined,
    kbOpts: // Do not bind paste keybindings in the browser,
    // since browsers do that for us and it avoids security prompts
    $lb0Ah.isNative ? {
        primary: 2100 /* KeyV */ ,
        win: {
            primary: 2100 /* KeyV */ ,
            secondary: [
                1043 /* Insert */ 
            ]
        },
        linux: {
            primary: 2100 /* KeyV */ ,
            secondary: [
                1043 /* Insert */ 
            ]
        },
        weight: 100 /* EditorContrib */ 
    } : undefined,
    menuOpts: [
        {
            menuId: $g4v7E.MenuId.MenubarEditMenu,
            group: '2_ccp',
            title: $4dEdH.localize({
                key: 'miPaste',
                comment: [
                    '&& denotes a mnemonic'
                ]
            }, "&&Paste"),
            order: 4
        },
        {
            menuId: $g4v7E.MenuId.EditorContext,
            group: $95df918b09e36b99$var$CLIPBOARD_CONTEXT_MENU_GROUP,
            title: $4dEdH.localize('actions.clipboard.pasteLabel', "Paste"),
            when: $ibKGQ.EditorContextKeys.writable,
            order: 4
        },
        {
            menuId: $g4v7E.MenuId.CommandPalette,
            group: '',
            title: $4dEdH.localize('actions.clipboard.pasteLabel', "Paste"),
            order: 1
        },
        {
            menuId: $g4v7E.MenuId.SimpleEditorContext,
            group: $95df918b09e36b99$var$CLIPBOARD_CONTEXT_MENU_GROUP,
            title: $4dEdH.localize('actions.clipboard.pasteLabel', "Paste"),
            when: $ibKGQ.EditorContextKeys.writable,
            order: 4
        }
    ]
})) : undefined;
class $95df918b09e36b99$var$ExecCommandCopyWithSyntaxHighlightingAction extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: 'editor.action.clipboardCopyWithSyntaxHighlightingAction',
            label: $4dEdH.localize('actions.clipboard.copyWithSyntaxHighlightingLabel', "Copy With Syntax Highlighting"),
            alias: 'Copy With Syntax Highlighting',
            precondition: undefined,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.textInputFocus,
                primary: 0,
                weight: 100 /* EditorContrib */ 
            }
        });
    }
    run(accessor, editor) {
        if (!editor.hasModel()) return;
        const emptySelectionClipboard = editor.getOption(32 /* emptySelectionClipboard */ );
        if (!emptySelectionClipboard && editor.getSelection().isEmpty()) return;
        $al9cc.CopyOptions.forceCopyWithSyntaxHighlighting = true;
        editor.focus();
        document.execCommand('copy');
        $al9cc.CopyOptions.forceCopyWithSyntaxHighlighting = false;
    }
}
function $95df918b09e36b99$var$registerExecCommandImpl(target, browserCommand) {
    if (!target) return;
    // 1. handle case when focus is in editor.
    target.addImplementation(10000, 'code-editor', (accessor, args)=>{
        // Only if editor text focus (i.e. not if editor has widget focus).
        const focusedEditor = accessor.get($2Qfl0.ICodeEditorService).getFocusedCodeEditor();
        if (focusedEditor && focusedEditor.hasTextFocus()) {
            // Do not execute if there is no selection and empty selection clipboard is off
            const emptySelectionClipboard = focusedEditor.getOption(32 /* emptySelectionClipboard */ );
            const selection = focusedEditor.getSelection();
            if (selection && selection.isEmpty() && !emptySelectionClipboard) return true;
            document.execCommand(browserCommand);
            return true;
        }
        return false;
    });
    // 2. (default) handle case when focus is somewhere else.
    target.addImplementation(0, 'generic-dom', (accessor, args)=>{
        document.execCommand(browserCommand);
        return true;
    });
}
$95df918b09e36b99$var$registerExecCommandImpl($95df918b09e36b99$export$c126fcd83420b17, 'cut');
$95df918b09e36b99$var$registerExecCommandImpl($95df918b09e36b99$export$958df07cbf9735fc, 'copy');
if ($95df918b09e36b99$export$c386eebeb0318c58) {
    // 1. Paste: handle case when focus is in editor.
    $95df918b09e36b99$export$c386eebeb0318c58.addImplementation(10000, 'code-editor', (accessor, args)=>{
        const codeEditorService = accessor.get($2Qfl0.ICodeEditorService);
        const clipboardService = accessor.get($8QSW4.IClipboardService);
        // Only if editor text focus (i.e. not if editor has widget focus).
        const focusedEditor = codeEditorService.getFocusedCodeEditor();
        if (focusedEditor && focusedEditor.hasTextFocus()) {
            const result = document.execCommand('paste');
            // Use the clipboard service if document.execCommand('paste') was not successful
            if (!result && $lb0Ah.isWeb) return (()=>$95df918b09e36b99$var$__awaiter(void 0, void 0, void 0, function*() {
                    const clipboardText = yield clipboardService.readText();
                    if (clipboardText !== '') {
                        const metadata = $al9cc.InMemoryClipboardMetadataManager.INSTANCE.get(clipboardText);
                        let pasteOnNewLine = false;
                        let multicursorText = null;
                        let mode = null;
                        if (metadata) {
                            pasteOnNewLine = focusedEditor.getOption(32 /* emptySelectionClipboard */ ) && !!metadata.isFromEmptySelection;
                            multicursorText = typeof metadata.multicursorText !== 'undefined' ? metadata.multicursorText : null;
                            mode = metadata.mode;
                        }
                        focusedEditor.trigger('keyboard', "paste" /* Paste */ , {
                            text: clipboardText,
                            pasteOnNewLine: pasteOnNewLine,
                            multicursorText: multicursorText,
                            mode: mode
                        });
                    }
                })
            )();
            return true;
        }
        return false;
    });
    // 2. Paste: (default) handle case when focus is somewhere else.
    $95df918b09e36b99$export$c386eebeb0318c58.addImplementation(0, 'generic-dom', (accessor, args)=>{
        document.execCommand('paste');
        return true;
    });
}
if ($95df918b09e36b99$var$supportsCopy) $2iJTi.registerEditorAction($95df918b09e36b99$var$ExecCommandCopyWithSyntaxHighlightingAction);



var $2iJTi = parcelRequire("2iJTi");
var $f851b37e0ba4c126$exports = {};

$parcel$export($f851b37e0ba4c126$exports, "QuickFixController", () => $f851b37e0ba4c126$export$12bfd62cda48c28c, (v) => $f851b37e0ba4c126$export$12bfd62cda48c28c = v);
$parcel$export($f851b37e0ba4c126$exports, "QuickFixAction", () => $f851b37e0ba4c126$export$882e0ee127a25fbb, (v) => $f851b37e0ba4c126$export$882e0ee127a25fbb = v);
$parcel$export($f851b37e0ba4c126$exports, "AutoFixAction", () => $f851b37e0ba4c126$export$2bffd38cf19da049, (v) => $f851b37e0ba4c126$export$2bffd38cf19da049 = v);
$parcel$export($f851b37e0ba4c126$exports, "CodeActionCommand", () => $f851b37e0ba4c126$export$94d24ce7f8ca1f8c, (v) => $f851b37e0ba4c126$export$94d24ce7f8ca1f8c = v);
$parcel$export($f851b37e0ba4c126$exports, "RefactorAction", () => $f851b37e0ba4c126$export$717c8b29cf6c7de0, (v) => $f851b37e0ba4c126$export$717c8b29cf6c7de0 = v);
$parcel$export($f851b37e0ba4c126$exports, "SourceAction", () => $f851b37e0ba4c126$export$6754a4b1b720e9fb, (v) => $f851b37e0ba4c126$export$6754a4b1b720e9fb = v);
$parcel$export($f851b37e0ba4c126$exports, "OrganizeImportsAction", () => $f851b37e0ba4c126$export$839e26b4813ba04c, (v) => $f851b37e0ba4c126$export$839e26b4813ba04c = v);
$parcel$export($f851b37e0ba4c126$exports, "FixAllAction", () => $f851b37e0ba4c126$export$900fefaddb0995e3, (v) => $f851b37e0ba4c126$export$900fefaddb0995e3 = v);

var $giPcZ = parcelRequire("giPcZ");
class $58e627bffd4b13cd$export$b624eff549462981 {
    constructor(executor){
        this.executor = executor;
        this._didRun = false;
    }
    /**
     * Get the wrapped value.
     *
     * This will force evaluation of the lazy value if it has not been resolved yet. Lazy values are only
     * resolved once. `getValue` will re-throw exceptions that are hit while resolving the value
     */ getValue() {
        if (!this._didRun) try {
            this._value = this.executor();
        } catch (err) {
            this._error = err;
        } finally{
            this._didRun = true;
        }
        if (this._error) throw this._error;
        return this._value;
    }
    /**
     * Get the wrapped value without forcing evaluation.
     */ get rawValue() {
        return this._value;
    }
}



var $9cWcn = parcelRequire("9cWcn");

var $jcr1R = parcelRequire("jcr1R");

var $2iJTi = parcelRequire("2iJTi");

var $d4p5R = parcelRequire("d4p5R");

var $ibKGQ = parcelRequire("ibKGQ");
var $c8a1288d9cef392a$exports = {};

$parcel$export($c8a1288d9cef392a$exports, "codeActionCommandId", () => $c8a1288d9cef392a$export$47d177835ea6d398, (v) => $c8a1288d9cef392a$export$47d177835ea6d398 = v);
$parcel$export($c8a1288d9cef392a$exports, "refactorCommandId", () => $c8a1288d9cef392a$export$691d097e330e1493, (v) => $c8a1288d9cef392a$export$691d097e330e1493 = v);
$parcel$export($c8a1288d9cef392a$exports, "sourceActionCommandId", () => $c8a1288d9cef392a$export$239def49abcdebc4, (v) => $c8a1288d9cef392a$export$239def49abcdebc4 = v);
$parcel$export($c8a1288d9cef392a$exports, "organizeImportsCommandId", () => $c8a1288d9cef392a$export$9f47236fc64ddcf5, (v) => $c8a1288d9cef392a$export$9f47236fc64ddcf5 = v);
$parcel$export($c8a1288d9cef392a$exports, "fixAllCommandId", () => $c8a1288d9cef392a$export$9866f0c931c06a92, (v) => $c8a1288d9cef392a$export$9866f0c931c06a92 = v);
$parcel$export($c8a1288d9cef392a$exports, "CodeActionItem", () => $c8a1288d9cef392a$export$1ff0bf878d7aea77, (v) => $c8a1288d9cef392a$export$1ff0bf878d7aea77 = v);
$parcel$export($c8a1288d9cef392a$exports, "getCodeActions", () => $c8a1288d9cef392a$export$52ee0249dd058aac, (v) => $c8a1288d9cef392a$export$52ee0249dd058aac = v);

var $kJ8UG = parcelRequire("kJ8UG");

var $giPcZ = parcelRequire("giPcZ");

var $gPkHZ = parcelRequire("gPkHZ");

var $9cWcn = parcelRequire("9cWcn");

var $5OJ54 = parcelRequire("5OJ54");

var $r7siU = parcelRequire("r7siU");

var $d00il = parcelRequire("d00il");

var $jzicX = parcelRequire("jzicX");

var $4PmRQ = parcelRequire("4PmRQ");

var $15EOE = parcelRequire("15EOE");

var $8tcMz = parcelRequire("8tcMz");

var $4E7vx = parcelRequire("4E7vx");
class $9aa3d1d48c7ddba3$export$c72b5966cfff6b4d {
    constructor(value){
        this.value = value;
    }
    equals(other) {
        return this.value === other.value;
    }
    contains(other) {
        return this.equals(other) || this.value === '' || other.value.startsWith(this.value + $9aa3d1d48c7ddba3$export$c72b5966cfff6b4d.sep);
    }
    intersects(other) {
        return this.contains(other) || other.contains(this);
    }
    append(part) {
        return new $9aa3d1d48c7ddba3$export$c72b5966cfff6b4d(this.value + $9aa3d1d48c7ddba3$export$c72b5966cfff6b4d.sep + part);
    }
}
$9aa3d1d48c7ddba3$export$c72b5966cfff6b4d.sep = '.';
$9aa3d1d48c7ddba3$export$c72b5966cfff6b4d.None = new $9aa3d1d48c7ddba3$export$c72b5966cfff6b4d('@@none@@'); // Special code action that contains nothing
$9aa3d1d48c7ddba3$export$c72b5966cfff6b4d.Empty = new $9aa3d1d48c7ddba3$export$c72b5966cfff6b4d('');
$9aa3d1d48c7ddba3$export$c72b5966cfff6b4d.QuickFix = new $9aa3d1d48c7ddba3$export$c72b5966cfff6b4d('quickfix');
$9aa3d1d48c7ddba3$export$c72b5966cfff6b4d.Refactor = new $9aa3d1d48c7ddba3$export$c72b5966cfff6b4d('refactor');
$9aa3d1d48c7ddba3$export$c72b5966cfff6b4d.Source = new $9aa3d1d48c7ddba3$export$c72b5966cfff6b4d('source');
$9aa3d1d48c7ddba3$export$c72b5966cfff6b4d.SourceOrganizeImports = $9aa3d1d48c7ddba3$export$c72b5966cfff6b4d.Source.append('organizeImports');
$9aa3d1d48c7ddba3$export$c72b5966cfff6b4d.SourceFixAll = $9aa3d1d48c7ddba3$export$c72b5966cfff6b4d.Source.append('fixAll');
function $9aa3d1d48c7ddba3$export$260c8da5ecf5f71d(filter, providedKind) {
    // A provided kind may be a subset or superset of our filtered kind.
    if (filter.include && !filter.include.intersects(providedKind)) return false;
    if (filter.excludes) {
        if (filter.excludes.some((exclude)=>$9aa3d1d48c7ddba3$var$excludesAction(providedKind, exclude, filter.include)
        )) return false;
    }
    // Don't return source actions unless they are explicitly requested
    if (!filter.includeSourceActions && $9aa3d1d48c7ddba3$export$c72b5966cfff6b4d.Source.contains(providedKind)) return false;
    return true;
}
function $9aa3d1d48c7ddba3$export$b4bbf6ad637c4d35(filter, action) {
    const actionKind = action.kind ? new $9aa3d1d48c7ddba3$export$c72b5966cfff6b4d(action.kind) : undefined;
    // Filter out actions by kind
    if (filter.include) {
        if (!actionKind || !filter.include.contains(actionKind)) return false;
    }
    if (filter.excludes) {
        if (actionKind && filter.excludes.some((exclude)=>$9aa3d1d48c7ddba3$var$excludesAction(actionKind, exclude, filter.include)
        )) return false;
    }
    // Don't return source actions unless they are explicitly requested
    if (!filter.includeSourceActions) {
        if (actionKind && $9aa3d1d48c7ddba3$export$c72b5966cfff6b4d.Source.contains(actionKind)) return false;
    }
    if (filter.onlyIncludePreferredActions) {
        if (!action.isPreferred) return false;
    }
    return true;
}
function $9aa3d1d48c7ddba3$var$excludesAction(providedKind, exclude, include) {
    if (!exclude.contains(providedKind)) return false;
    if (include && exclude.contains(include)) // The include is more specific, don't filter out
    return false;
    return true;
}
class $9aa3d1d48c7ddba3$export$b4557d8a7419d430 {
    constructor(kind, apply, preferred){
        this.kind = kind;
        this.apply = apply;
        this.preferred = preferred;
    }
    static fromUser(arg, defaults) {
        if (!arg || typeof arg !== 'object') return new $9aa3d1d48c7ddba3$export$b4557d8a7419d430(defaults.kind, defaults.apply, false);
        return new $9aa3d1d48c7ddba3$export$b4557d8a7419d430($9aa3d1d48c7ddba3$export$b4557d8a7419d430.getKindFromUser(arg, defaults.kind), $9aa3d1d48c7ddba3$export$b4557d8a7419d430.getApplyFromUser(arg, defaults.apply), $9aa3d1d48c7ddba3$export$b4557d8a7419d430.getPreferredUser(arg));
    }
    static getApplyFromUser(arg, defaultAutoApply) {
        switch(typeof arg.apply === 'string' ? arg.apply.toLowerCase() : ''){
            case 'first':
                return "first" /* First */ ;
            case 'never':
                return "never" /* Never */ ;
            case 'ifsingle':
                return "ifSingle" /* IfSingle */ ;
            default:
                return defaultAutoApply;
        }
    }
    static getKindFromUser(arg, defaultKind) {
        return typeof arg.kind === 'string' ? new $9aa3d1d48c7ddba3$export$c72b5966cfff6b4d(arg.kind) : defaultKind;
    }
    static getPreferredUser(arg) {
        return typeof arg.preferred === 'boolean' ? arg.preferred : false;
    }
}


/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $c8a1288d9cef392a$var$__awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
const $c8a1288d9cef392a$export$47d177835ea6d398 = 'editor.action.codeAction';
const $c8a1288d9cef392a$export$691d097e330e1493 = 'editor.action.refactor';
const $c8a1288d9cef392a$export$239def49abcdebc4 = 'editor.action.sourceAction';
const $c8a1288d9cef392a$export$9f47236fc64ddcf5 = 'editor.action.organizeImports';
const $c8a1288d9cef392a$export$9866f0c931c06a92 = 'editor.action.fixAll';
class $c8a1288d9cef392a$export$1ff0bf878d7aea77 {
    constructor(action, provider){
        this.action = action;
        this.provider = provider;
    }
    resolve(token) {
        var _a;
        return $c8a1288d9cef392a$var$__awaiter(this, void 0, void 0, function*() {
            if (((_a = this.provider) === null || _a === void 0 ? void 0 : _a.resolveCodeAction) && !this.action.edit) {
                let action;
                try {
                    action = yield this.provider.resolveCodeAction(this.action, token);
                } catch (err) {
                    $gPkHZ.onUnexpectedExternalError(err);
                }
                if (action) this.action.edit = action.edit;
            }
            return this;
        });
    }
}
class $c8a1288d9cef392a$var$ManagedCodeActionSet extends $9cWcn.Disposable {
    constructor(actions, documentation, disposables){
        super();
        this.documentation = documentation;
        this._register(disposables);
        this.allActions = [
            ...actions
        ].sort($c8a1288d9cef392a$var$ManagedCodeActionSet.codeActionsComparator);
        this.validActions = this.allActions.filter(({ action: action  })=>!action.disabled
        );
    }
    static codeActionsComparator({ action: a  }, { action: b  }) {
        if (a.isPreferred && !b.isPreferred) return -1;
        else if (!a.isPreferred && b.isPreferred) return 1;
        if ($kJ8UG.isNonEmptyArray(a.diagnostics)) {
            if ($kJ8UG.isNonEmptyArray(b.diagnostics)) return a.diagnostics[0].message.localeCompare(b.diagnostics[0].message);
            else return -1;
        } else if ($kJ8UG.isNonEmptyArray(b.diagnostics)) return 1;
        else return 0; // both have no diagnostics
    }
    get hasAutoFix() {
        return this.validActions.some(({ action: fix  })=>!!fix.kind && $9aa3d1d48c7ddba3$export$c72b5966cfff6b4d.QuickFix.contains(new $9aa3d1d48c7ddba3$export$c72b5966cfff6b4d(fix.kind)) && !!fix.isPreferred
        );
    }
}
const $c8a1288d9cef392a$var$emptyCodeActionsResponse = {
    actions: [],
    documentation: undefined
};
function $c8a1288d9cef392a$export$52ee0249dd058aac(model, rangeOrSelection, trigger, progress, token) {
    var _a;
    const filter = trigger.filter || {};
    const codeActionContext = {
        only: (_a = filter.include) === null || _a === void 0 ? void 0 : _a.value,
        trigger: trigger.type
    };
    const cts = new $r7siU.TextModelCancellationTokenSource(model, token);
    const providers = $c8a1288d9cef392a$var$getCodeActionProviders(model, filter);
    const disposables = new $9cWcn.DisposableStore();
    const promises = providers.map((provider)=>$c8a1288d9cef392a$var$__awaiter(this, void 0, void 0, function*() {
            try {
                progress.report(provider);
                const providedCodeActions = yield provider.provideCodeActions(model, rangeOrSelection, codeActionContext, cts.token);
                if (providedCodeActions) disposables.add(providedCodeActions);
                if (cts.token.isCancellationRequested) return $c8a1288d9cef392a$var$emptyCodeActionsResponse;
                const filteredActions = ((providedCodeActions === null || providedCodeActions === void 0 ? void 0 : providedCodeActions.actions) || []).filter((action)=>action && $9aa3d1d48c7ddba3$export$b4bbf6ad637c4d35(filter, action)
                );
                const documentation = $c8a1288d9cef392a$var$getDocumentation(provider, filteredActions, filter.include);
                return {
                    actions: filteredActions.map((action)=>new $c8a1288d9cef392a$export$1ff0bf878d7aea77(action, provider)
                    ),
                    documentation: documentation
                };
            } catch (err) {
                if ($gPkHZ.isPromiseCanceledError(err)) throw err;
                $gPkHZ.onUnexpectedExternalError(err);
                return $c8a1288d9cef392a$var$emptyCodeActionsResponse;
            }
        })
    );
    const listener = $4PmRQ.CodeActionProviderRegistry.onDidChange(()=>{
        const newProviders = $4PmRQ.CodeActionProviderRegistry.all(model);
        if (!$kJ8UG.equals(newProviders, providers)) cts.cancel();
    });
    return Promise.all(promises).then((actions)=>{
        const allActions = $kJ8UG.flatten(actions.map((x)=>x.actions
        ));
        const allDocumentation = $kJ8UG.coalesce(actions.map((x)=>x.documentation
        ));
        return new $c8a1288d9cef392a$var$ManagedCodeActionSet(allActions, allDocumentation, disposables);
    }).finally(()=>{
        listener.dispose();
        cts.dispose();
    });
}
function $c8a1288d9cef392a$var$getCodeActionProviders(model, filter) {
    return $4PmRQ.CodeActionProviderRegistry.all(model)// Don't include providers that we know will not return code actions of interest
    .filter((provider)=>{
        if (!provider.providedCodeActionKinds) // We don't know what type of actions this provider will return.
        return true;
        return provider.providedCodeActionKinds.some((kind)=>$9aa3d1d48c7ddba3$export$260c8da5ecf5f71d(filter, new $9aa3d1d48c7ddba3$export$c72b5966cfff6b4d(kind))
        );
    });
}
function $c8a1288d9cef392a$var$getDocumentation(provider, providedCodeActions, only) {
    if (!provider.documentation) return undefined;
    const documentation = provider.documentation.map((entry)=>({
            kind: new $9aa3d1d48c7ddba3$export$c72b5966cfff6b4d(entry.kind),
            command: entry.command
        })
    );
    if (only) {
        let currentBest;
        for (const entry of documentation)if (entry.kind.contains(only)) {
            if (!currentBest) currentBest = entry;
            else // Take best match
            if (currentBest.kind.contains(entry.kind)) currentBest = entry;
        }
        if (currentBest) return currentBest === null || currentBest === void 0 ? void 0 : currentBest.command;
    }
    // Otherwise, check to see if any of the provided actions match.
    for (const action of providedCodeActions){
        if (!action.kind) continue;
        for (const entry of documentation){
            if (entry.kind.contains(new $9aa3d1d48c7ddba3$export$c72b5966cfff6b4d(action.kind))) return entry.command;
        }
    }
    return undefined;
}
$8tcMz.CommandsRegistry.registerCommand('_executeCodeActionProvider', function(accessor, resource, rangeOrSelection, kind, itemResolveCount) {
    return $c8a1288d9cef392a$var$__awaiter(this, void 0, void 0, function*() {
        if (!(resource instanceof $5OJ54.URI)) throw $gPkHZ.illegalArgument();
        const model = accessor.get($15EOE.IModelService).getModel(resource);
        if (!model) throw $gPkHZ.illegalArgument();
        const validatedRangeOrSelection = $jzicX.Selection.isISelection(rangeOrSelection) ? $jzicX.Selection.liftSelection(rangeOrSelection) : $d00il.Range.isIRange(rangeOrSelection) ? model.validateRange(rangeOrSelection) : undefined;
        if (!validatedRangeOrSelection) throw $gPkHZ.illegalArgument();
        const include = typeof kind === 'string' ? new $9aa3d1d48c7ddba3$export$c72b5966cfff6b4d(kind) : undefined;
        const codeActionSet = yield $c8a1288d9cef392a$export$52ee0249dd058aac(model, validatedRangeOrSelection, {
            type: 1 /* Invoke */ ,
            filter: {
                includeSourceActions: true,
                include: include
            }
        }, $4E7vx.Progress.None, $giPcZ.CancellationToken.None);
        const resolving = [];
        const resolveCount = Math.min(codeActionSet.validActions.length, typeof itemResolveCount === 'number' ? itemResolveCount : 0);
        for(let i = 0; i < resolveCount; i++)resolving.push(codeActionSet.validActions[i].resolve($giPcZ.CancellationToken.None));
        try {
            yield Promise.all(resolving);
            return codeActionSet.validActions.map((item)=>item.action
            );
        } finally{
            setTimeout(()=>codeActionSet.dispose()
            , 100);
        }
    });
});


var $47746b1b319e9adf$exports = {};

$parcel$export($47746b1b319e9adf$exports, "CodeActionUi", () => $47746b1b319e9adf$export$47357a276704fe7, (v) => $47746b1b319e9adf$export$47357a276704fe7 = v);

var $gPkHZ = parcelRequire("gPkHZ");


var $9cWcn = parcelRequire("9cWcn");
var $25f94a4f82af6366$exports = {};

$parcel$export($25f94a4f82af6366$exports, "MessageController", () => $25f94a4f82af6366$export$8c2d6d477e341dce, (v) => $25f94a4f82af6366$export$8c2d6d477e341dce = v);

var $aIbUW = parcelRequire("aIbUW");

var $6bXyA = parcelRequire("6bXyA");

var $9cWcn = parcelRequire("9cWcn");


var $2iJTi = parcelRequire("2iJTi");

var $d00il = parcelRequire("d00il");

var $4dEdH = parcelRequire("4dEdH");

var $cxCeF = parcelRequire("cxCeF");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $25f94a4f82af6366$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var $25f94a4f82af6366$var$__param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
};
let $25f94a4f82af6366$export$8c2d6d477e341dce = class $25f94a4f82af6366$export$8c2d6d477e341dce {
    constructor(editor, contextKeyService){
        this._messageWidget = new $9cWcn.MutableDisposable();
        this._messageListeners = new $9cWcn.DisposableStore();
        this._editor = editor;
        this._visible = $25f94a4f82af6366$export$8c2d6d477e341dce.MESSAGE_VISIBLE.bindTo(contextKeyService);
        this._editorListener = this._editor.onDidAttemptReadOnlyEdit(()=>this._onDidAttemptReadOnlyEdit()
        );
    }
    static get(editor) {
        return editor.getContribution($25f94a4f82af6366$export$8c2d6d477e341dce.ID);
    }
    dispose() {
        this._editorListener.dispose();
        this._messageListeners.dispose();
        this._messageWidget.dispose();
        this._visible.reset();
    }
    showMessage(message, position) {
        $aIbUW.alert(message);
        this._visible.set(true);
        this._messageWidget.clear();
        this._messageListeners.clear();
        this._messageWidget.value = new $25f94a4f82af6366$var$MessageWidget(this._editor, position, message);
        // close on blur, cursor, model change, dispose
        this._messageListeners.add(this._editor.onDidBlurEditorText(()=>this.closeMessage()
        ));
        this._messageListeners.add(this._editor.onDidChangeCursorPosition(()=>this.closeMessage()
        ));
        this._messageListeners.add(this._editor.onDidDispose(()=>this.closeMessage()
        ));
        this._messageListeners.add(this._editor.onDidChangeModel(()=>this.closeMessage()
        ));
        // 3sec
        this._messageListeners.add(new $6bXyA.TimeoutTimer(()=>this.closeMessage()
        , 3000));
        // close on mouse move
        let bounds;
        this._messageListeners.add(this._editor.onMouseMove((e)=>{
            // outside the text area
            if (!e.target.position) return;
            if (!bounds) // define bounding box around position and first mouse occurance
            bounds = new $d00il.Range(position.lineNumber - 3, 1, e.target.position.lineNumber + 3, 1);
            else if (!bounds.containsPosition(e.target.position)) // check if position is still in bounds
            this.closeMessage();
        }));
    }
    closeMessage() {
        this._visible.reset();
        this._messageListeners.clear();
        if (this._messageWidget.value) this._messageListeners.add($25f94a4f82af6366$var$MessageWidget.fadeOut(this._messageWidget.value));
    }
    _onDidAttemptReadOnlyEdit() {
        if (this._editor.hasModel()) this.showMessage($4dEdH.localize('editor.readonly', "Cannot edit in read-only editor"), this._editor.getPosition());
    }
};
$25f94a4f82af6366$export$8c2d6d477e341dce.ID = 'editor.contrib.messageController';
$25f94a4f82af6366$export$8c2d6d477e341dce.MESSAGE_VISIBLE = new $cxCeF.RawContextKey('messageVisible', false, $4dEdH.localize('messageVisible', 'Whether the editor is currently showing an inline message'));
$25f94a4f82af6366$export$8c2d6d477e341dce = $25f94a4f82af6366$var$__decorate([
    $25f94a4f82af6366$var$__param(1, $cxCeF.IContextKeyService)
], $25f94a4f82af6366$export$8c2d6d477e341dce);
const $25f94a4f82af6366$var$MessageCommand = $2iJTi.EditorCommand.bindToContribution($25f94a4f82af6366$export$8c2d6d477e341dce.get);
$2iJTi.registerEditorCommand(new $25f94a4f82af6366$var$MessageCommand({
    id: 'leaveEditorMessage',
    precondition: $25f94a4f82af6366$export$8c2d6d477e341dce.MESSAGE_VISIBLE,
    handler: (c)=>c.closeMessage()
    ,
    kbOpts: {
        weight: 130,
        primary: 9 /* Escape */ 
    }
}));
class $25f94a4f82af6366$var$MessageWidget {
    constructor(editor, { lineNumber: lineNumber , column: column  }, text){
        // Editor.IContentWidget.allowEditorOverflow
        this.allowEditorOverflow = true;
        this.suppressMouseDown = false;
        this._editor = editor;
        this._editor.revealLinesInCenterIfOutsideViewport(lineNumber, lineNumber, 0 /* Smooth */ );
        this._position = {
            lineNumber: lineNumber,
            column: column - 1
        };
        this._domNode = document.createElement('div');
        this._domNode.classList.add('monaco-editor-overlaymessage');
        const anchorTop = document.createElement('div');
        anchorTop.classList.add('anchor', 'top');
        this._domNode.appendChild(anchorTop);
        const message = document.createElement('div');
        message.classList.add('message');
        message.textContent = text;
        this._domNode.appendChild(message);
        const anchorBottom = document.createElement('div');
        anchorBottom.classList.add('anchor', 'below');
        this._domNode.appendChild(anchorBottom);
        this._editor.addContentWidget(this);
        this._domNode.classList.add('fadeIn');
    }
    static fadeOut(messageWidget) {
        let handle;
        const dispose = ()=>{
            messageWidget.dispose();
            clearTimeout(handle);
            messageWidget.getDomNode().removeEventListener('animationend', dispose);
        };
        handle = setTimeout(dispose, 110);
        messageWidget.getDomNode().addEventListener('animationend', dispose);
        messageWidget.getDomNode().classList.add('fadeOut');
        return {
            dispose: dispose
        };
    }
    dispose() {
        this._editor.removeContentWidget(this);
    }
    getId() {
        return 'messageoverlay';
    }
    getDomNode() {
        return this._domNode;
    }
    getPosition() {
        return {
            position: this._position,
            preference: [
                1 /* ABOVE */ ,
                2 /* BELOW */ 
            ]
        };
    }
    afterRender(position) {
        this._domNode.classList.toggle('below', position === 2 /* BELOW */ );
    }
}
$2iJTi.registerEditorContribution($25f94a4f82af6366$export$8c2d6d477e341dce.ID, $25f94a4f82af6366$export$8c2d6d477e341dce);



var $fdGPu = parcelRequire("fdGPu");
var $6e8a5a9b3775e143$exports = {};

$parcel$export($6e8a5a9b3775e143$exports, "CodeActionMenu", () => $6e8a5a9b3775e143$export$b25117b97cd5f4f9, (v) => $6e8a5a9b3775e143$export$b25117b97cd5f4f9 = v);

var $bDzmQ = parcelRequire("bDzmQ");

var $cVfMQ = parcelRequire("cVfMQ");

var $gPkHZ = parcelRequire("gPkHZ");


var $9cWcn = parcelRequire("9cWcn");

var $dcxQ7 = parcelRequire("dcxQ7");

var $4PmRQ = parcelRequire("4PmRQ");



var $d6K7e = parcelRequire("d6K7e");

var $7IxGd = parcelRequire("7IxGd");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $6e8a5a9b3775e143$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var $6e8a5a9b3775e143$var$__param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
};
var $6e8a5a9b3775e143$var$__awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
class $6e8a5a9b3775e143$var$CodeActionAction extends $cVfMQ.Action {
    constructor(action, callback){
        super(action.command ? action.command.id : action.title, $6e8a5a9b3775e143$var$stripNewlines(action.title), undefined, !action.disabled, callback);
        this.action = action;
    }
}
function $6e8a5a9b3775e143$var$stripNewlines(str) {
    return str.replace(/\r\n|\r|\n/g, ' ');
}
let $6e8a5a9b3775e143$export$b25117b97cd5f4f9 = class $6e8a5a9b3775e143$export$b25117b97cd5f4f9 extends $9cWcn.Disposable {
    constructor(_editor, _delegate, _contextMenuService, keybindingService){
        super();
        this._editor = _editor;
        this._delegate = _delegate;
        this._contextMenuService = _contextMenuService;
        this._visible = false;
        this._showingActions = this._register(new $9cWcn.MutableDisposable());
        this._keybindingResolver = new $6e8a5a9b3775e143$export$5b41f08e102f6dbe({
            getKeybindings: ()=>keybindingService.getKeybindings()
        });
    }
    get isVisible() {
        return this._visible;
    }
    show(trigger, codeActions, at, options) {
        return $6e8a5a9b3775e143$var$__awaiter(this, void 0, void 0, function*() {
            const actionsToShow = options.includeDisabledActions ? codeActions.allActions : codeActions.validActions;
            if (!actionsToShow.length) {
                this._visible = false;
                return;
            }
            if (!this._editor.getDomNode()) {
                // cancel when editor went off-dom
                this._visible = false;
                throw $gPkHZ.canceled();
            }
            this._visible = true;
            this._showingActions.value = codeActions;
            const menuActions = this.getMenuActions(trigger, actionsToShow, codeActions.documentation);
            const anchor = $dcxQ7.Position.isIPosition(at) ? this._toCoords(at) : at || {
                x: 0,
                y: 0
            };
            const resolver = this._keybindingResolver.getResolver();
            const useShadowDOM = this._editor.getOption(114 /* useShadowDOM */ );
            this._contextMenuService.showContextMenu({
                domForShadowRoot: useShadowDOM ? this._editor.getDomNode() : undefined,
                getAnchor: ()=>anchor
                ,
                getActions: ()=>menuActions
                ,
                onHide: ()=>{
                    this._visible = false;
                    this._editor.focus();
                },
                autoSelectFirstItem: true,
                getKeyBinding: (action)=>action instanceof $6e8a5a9b3775e143$var$CodeActionAction ? resolver(action.action) : undefined
            });
        });
    }
    getMenuActions(trigger, actionsToShow, documentation) {
        var _a, _b;
        const toCodeActionAction = (item)=>new $6e8a5a9b3775e143$var$CodeActionAction(item.action, ()=>this._delegate.onSelectCodeAction(item)
            )
        ;
        const result = actionsToShow.map(toCodeActionAction);
        const allDocumentation = [
            ...documentation
        ];
        const model = this._editor.getModel();
        if (model && result.length) {
            for (const provider of $4PmRQ.CodeActionProviderRegistry.all(model))if (provider._getAdditionalMenuItems) allDocumentation.push(...provider._getAdditionalMenuItems({
                trigger: trigger.type,
                only: (_b = (_a = trigger.filter) === null || _a === void 0 ? void 0 : _a.include) === null || _b === void 0 ? void 0 : _b.value
            }, actionsToShow.map((item)=>item.action
            )));
        }
        if (allDocumentation.length) result.push(new $cVfMQ.Separator(), ...allDocumentation.map((command)=>toCodeActionAction(new $c8a1288d9cef392a$exports.CodeActionItem({
                title: command.title,
                command: command
            }, undefined))
        ));
        return result;
    }
    _toCoords(position) {
        if (!this._editor.hasModel()) return {
            x: 0,
            y: 0
        };
        this._editor.revealPosition(position, 1 /* Immediate */ );
        this._editor.render();
        // Translate to absolute editor position
        const cursorCoords = this._editor.getScrolledVisiblePosition(position);
        const editorCoords = $bDzmQ.getDomNodePagePosition(this._editor.getDomNode());
        const x = editorCoords.left + cursorCoords.left;
        const y = editorCoords.top + cursorCoords.top + cursorCoords.height;
        return {
            x: x,
            y: y
        };
    }
};
$6e8a5a9b3775e143$export$b25117b97cd5f4f9 = $6e8a5a9b3775e143$var$__decorate([
    $6e8a5a9b3775e143$var$__param(2, $d6K7e.IContextMenuService),
    $6e8a5a9b3775e143$var$__param(3, $7IxGd.IKeybindingService)
], $6e8a5a9b3775e143$export$b25117b97cd5f4f9);
class $6e8a5a9b3775e143$export$5b41f08e102f6dbe {
    constructor(_keybindingProvider){
        this._keybindingProvider = _keybindingProvider;
    }
    getResolver() {
        // Lazy since we may not actually ever read the value
        const allCodeActionBindings = new $58e627bffd4b13cd$export$b624eff549462981(()=>this._keybindingProvider.getKeybindings().filter((item)=>$6e8a5a9b3775e143$export$5b41f08e102f6dbe.codeActionCommands.indexOf(item.command) >= 0
            ).filter((item)=>item.resolvedKeybinding
            ).map((item)=>{
                // Special case these commands since they come built-in with VS Code and don't use 'commandArgs'
                let commandArgs = item.commandArgs;
                if (item.command === $c8a1288d9cef392a$exports.organizeImportsCommandId) commandArgs = {
                    kind: $9aa3d1d48c7ddba3$export$c72b5966cfff6b4d.SourceOrganizeImports.value
                };
                else if (item.command === $c8a1288d9cef392a$exports.fixAllCommandId) commandArgs = {
                    kind: $9aa3d1d48c7ddba3$export$c72b5966cfff6b4d.SourceFixAll.value
                };
                return Object.assign({
                    resolvedKeybinding: item.resolvedKeybinding
                }, $9aa3d1d48c7ddba3$export$b4557d8a7419d430.fromUser(commandArgs, {
                    kind: $9aa3d1d48c7ddba3$export$c72b5966cfff6b4d.None,
                    apply: "never" /* Never */ 
                }));
            })
        );
        return (action)=>{
            if (action.kind) {
                const binding = this.bestKeybindingForCodeAction(action, allCodeActionBindings.getValue());
                return binding === null || binding === void 0 ? void 0 : binding.resolvedKeybinding;
            }
            return undefined;
        };
    }
    bestKeybindingForCodeAction(action, candidates) {
        if (!action.kind) return undefined;
        const kind = new $9aa3d1d48c7ddba3$export$c72b5966cfff6b4d(action.kind);
        return candidates.filter((candidate)=>candidate.kind.contains(kind)
        ).filter((candidate)=>{
            if (candidate.preferred) // If the candidate keybinding only applies to preferred actions, the this action must also be preferred
            return action.isPreferred;
            return true;
        }).reduceRight((currentBest, candidate)=>{
            if (!currentBest) return candidate;
            // Select the more specific binding
            return currentBest.kind.contains(candidate.kind) ? candidate : currentBest;
        }, undefined);
    }
}
$6e8a5a9b3775e143$export$5b41f08e102f6dbe.codeActionCommands = [
    $c8a1288d9cef392a$exports.refactorCommandId,
    $c8a1288d9cef392a$exports.codeActionCommandId,
    $c8a1288d9cef392a$exports.sourceActionCommandId,
    $c8a1288d9cef392a$exports.organizeImportsCommandId,
    $c8a1288d9cef392a$exports.fixAllCommandId
];


var $de505aa1041e1e63$exports = {};

$parcel$export($de505aa1041e1e63$exports, "LightBulbWidget", () => $de505aa1041e1e63$export$87ab1750f69500a0, (v) => $de505aa1041e1e63$export$87ab1750f69500a0 = v);

var $bDzmQ = parcelRequire("bDzmQ");

var $cfNuA = parcelRequire("cfNuA");

var $cnAUf = parcelRequire("cnAUf");

var $awgRE = parcelRequire("awgRE");

var $5YaSO = parcelRequire("5YaSO");

var $9cWcn = parcelRequire("9cWcn");


var $91ntV = parcelRequire("91ntV");

var $4dEdH = parcelRequire("4dEdH");

var $7IxGd = parcelRequire("7IxGd");

var $gaWeX = parcelRequire("gaWeX");

var $azIPz = parcelRequire("azIPz");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $de505aa1041e1e63$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var $de505aa1041e1e63$var$__param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
};
var $de505aa1041e1e63$var$LightBulbState;
(function(LightBulbState) {
    LightBulbState.Hidden = {
        type: 0 /* Hidden */ 
    };
    class Showing {
        constructor(actions, trigger, editorPosition, widgetPosition){
            this.actions = actions;
            this.trigger = trigger;
            this.editorPosition = editorPosition;
            this.widgetPosition = widgetPosition;
            this.type = 1 /* Showing */ ;
        }
    }
    LightBulbState.Showing = Showing;
})($de505aa1041e1e63$var$LightBulbState || ($de505aa1041e1e63$var$LightBulbState = {}));
let $de505aa1041e1e63$export$87ab1750f69500a0 = class $de505aa1041e1e63$export$87ab1750f69500a0 extends $9cWcn.Disposable {
    constructor(_editor, _quickFixActionId, _preferredFixActionId, _keybindingService){
        super();
        this._editor = _editor;
        this._quickFixActionId = _quickFixActionId;
        this._preferredFixActionId = _preferredFixActionId;
        this._keybindingService = _keybindingService;
        this._onClick = this._register(new $5YaSO.Emitter());
        this.onClick = this._onClick.event;
        this._state = $de505aa1041e1e63$var$LightBulbState.Hidden;
        this._domNode = document.createElement('div');
        this._domNode.className = $awgRE.Codicon.lightBulb.classNames;
        this._editor.addContentWidget(this);
        this._register(this._editor.onDidChangeModelContent((_)=>{
            // cancel when the line in question has been removed
            const editorModel = this._editor.getModel();
            if (this.state.type !== 1 /* Showing */  || !editorModel || this.state.editorPosition.lineNumber >= editorModel.getLineCount()) this.hide();
        }));
        $cnAUf.Gesture.ignoreTarget(this._domNode);
        this._register($bDzmQ.addStandardDisposableGenericMouseDownListner(this._domNode, (e)=>{
            if (this.state.type !== 1 /* Showing */ ) return;
            // Make sure that focus / cursor location is not lost when clicking widget icon
            this._editor.focus();
            e.preventDefault();
            // a bit of extra work to make sure the menu
            // doesn't cover the line-text
            const { top: top , height: height  } = $bDzmQ.getDomNodePagePosition(this._domNode);
            const lineHeight = this._editor.getOption(58 /* lineHeight */ );
            let pad = Math.floor(lineHeight / 3);
            if (this.state.widgetPosition.position !== null && this.state.widgetPosition.position.lineNumber < this.state.editorPosition.lineNumber) pad += lineHeight;
            this._onClick.fire({
                x: e.posx,
                y: top + height + pad,
                actions: this.state.actions,
                trigger: this.state.trigger
            });
        }));
        this._register($bDzmQ.addDisposableListener(this._domNode, 'mouseenter', (e)=>{
            if ((e.buttons & 1) !== 1) return;
            // mouse enters lightbulb while the primary/left button
            // is being pressed -> hide the lightbulb and block future
            // showings until mouse is released
            this.hide();
            const monitor = new $cfNuA.GlobalMouseMoveMonitor();
            monitor.startMonitoring(e.target, e.buttons, $cfNuA.standardMouseMoveMerger, ()=>{}, ()=>{
                monitor.dispose();
            });
        }));
        this._register(this._editor.onDidChangeConfiguration((e)=>{
            // hide when told to do so
            if (e.hasChanged(56 /* lightbulb */ ) && !this._editor.getOption(56 /* lightbulb */ ).enabled) this.hide();
        }));
        this._updateLightBulbTitleAndIcon();
        this._register(this._keybindingService.onDidUpdateKeybindings(this._updateLightBulbTitleAndIcon, this));
    }
    dispose() {
        super.dispose();
        this._editor.removeContentWidget(this);
    }
    getId() {
        return 'LightBulbWidget';
    }
    getDomNode() {
        return this._domNode;
    }
    getPosition() {
        return this._state.type === 1 /* Showing */  ? this._state.widgetPosition : null;
    }
    update(actions, trigger, atPosition) {
        if (actions.validActions.length <= 0) return this.hide();
        const options = this._editor.getOptions();
        if (!options.get(56 /* lightbulb */ ).enabled) return this.hide();
        const model = this._editor.getModel();
        if (!model) return this.hide();
        const { lineNumber: lineNumber1 , column: column  } = model.validatePosition(atPosition);
        const tabSize = model.getOptions().tabSize;
        const fontInfo = options.get(43 /* fontInfo */ );
        const lineContent = model.getLineContent(lineNumber1);
        const indent = $91ntV.TextModel.computeIndentLevel(lineContent, tabSize);
        const lineHasSpace = fontInfo.spaceWidth * indent > 22;
        const isFolded = (lineNumber)=>{
            return lineNumber > 2 && this._editor.getTopForLineNumber(lineNumber) === this._editor.getTopForLineNumber(lineNumber - 1);
        };
        let effectiveLineNumber = lineNumber1;
        if (!lineHasSpace) {
            if (lineNumber1 > 1 && !isFolded(lineNumber1 - 1)) effectiveLineNumber -= 1;
            else if (!isFolded(lineNumber1 + 1)) effectiveLineNumber += 1;
            else if (column * fontInfo.spaceWidth < 22) // cannot show lightbulb above/below and showing
            // it inline would overlay the cursor...
            return this.hide();
        }
        this.state = new $de505aa1041e1e63$var$LightBulbState.Showing(actions, trigger, atPosition, {
            position: {
                lineNumber: effectiveLineNumber,
                column: 1
            },
            preference: $de505aa1041e1e63$export$87ab1750f69500a0._posPref
        });
        this._editor.layoutContentWidget(this);
    }
    hide() {
        this.state = $de505aa1041e1e63$var$LightBulbState.Hidden;
        this._editor.layoutContentWidget(this);
    }
    get state() {
        return this._state;
    }
    set state(value) {
        this._state = value;
        this._updateLightBulbTitleAndIcon();
    }
    _updateLightBulbTitleAndIcon() {
        if (this.state.type === 1 /* Showing */  && this.state.actions.hasAutoFix) {
            // update icon
            this._domNode.classList.remove(...$awgRE.Codicon.lightBulb.classNamesArray);
            this._domNode.classList.add(...$awgRE.Codicon.lightbulbAutofix.classNamesArray);
            const preferredKb = this._keybindingService.lookupKeybinding(this._preferredFixActionId);
            if (preferredKb) {
                this.title = $4dEdH.localize('preferredcodeActionWithKb', "Show Code Actions. Preferred Quick Fix Available ({0})", preferredKb.getLabel());
                return;
            }
        }
        // update icon
        this._domNode.classList.remove(...$awgRE.Codicon.lightbulbAutofix.classNamesArray);
        this._domNode.classList.add(...$awgRE.Codicon.lightBulb.classNamesArray);
        const kb = this._keybindingService.lookupKeybinding(this._quickFixActionId);
        if (kb) this.title = $4dEdH.localize('codeActionWithKb', "Show Code Actions ({0})", kb.getLabel());
        else this.title = $4dEdH.localize('codeAction', "Show Code Actions");
    }
    set title(value) {
        this._domNode.title = value;
    }
};
$de505aa1041e1e63$export$87ab1750f69500a0._posPref = [
    0 /* EXACT */ 
];
$de505aa1041e1e63$export$87ab1750f69500a0 = $de505aa1041e1e63$var$__decorate([
    $de505aa1041e1e63$var$__param(3, $7IxGd.IKeybindingService)
], $de505aa1041e1e63$export$87ab1750f69500a0);
$azIPz.registerThemingParticipant((theme, collector)=>{
    var _a;
    const editorBackgroundColor = (_a = theme.getColor($gaWeX.editorBackground)) === null || _a === void 0 ? void 0 : _a.transparent(0.7);
    // Lightbulb Icon
    const editorLightBulbForegroundColor = theme.getColor($gaWeX.editorLightBulbForeground);
    if (editorLightBulbForegroundColor) collector.addRule(`
		.monaco-editor .contentWidgets ${$awgRE.Codicon.lightBulb.cssSelector} {
			color: ${editorLightBulbForegroundColor};
			background-color: ${editorBackgroundColor};
		}`);
    // Lightbulb Auto Fix Icon
    const editorLightBulbAutoFixForegroundColor = theme.getColor($gaWeX.editorLightBulbAutoFixForeground);
    if (editorLightBulbAutoFixForegroundColor) collector.addRule(`
		.monaco-editor .contentWidgets ${$awgRE.Codicon.lightbulbAutofix.cssSelector} {
			color: ${editorLightBulbAutoFixForegroundColor};
			background-color: ${editorBackgroundColor};
		}`);
});


/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $47746b1b319e9adf$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var $47746b1b319e9adf$var$__param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
};
var $47746b1b319e9adf$var$__awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var $47746b1b319e9adf$var$__classPrivateFieldSet = undefined && undefined.__classPrivateFieldSet || function(receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;
};
var $47746b1b319e9adf$var$__classPrivateFieldGet = undefined && undefined.__classPrivateFieldGet || function(receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var $47746b1b319e9adf$var$_CodeActionUi_disposed;
let $47746b1b319e9adf$export$47357a276704fe7 = class $47746b1b319e9adf$export$47357a276704fe7 extends $9cWcn.Disposable {
    constructor(_editor, quickFixActionId, preferredFixActionId, delegate, instantiationService){
        super();
        this._editor = _editor;
        this.delegate = delegate;
        this._activeCodeActions = this._register(new $9cWcn.MutableDisposable());
        $47746b1b319e9adf$var$_CodeActionUi_disposed.set(this, false);
        this._codeActionWidget = new $58e627bffd4b13cd$export$b624eff549462981(()=>{
            return this._register(instantiationService.createInstance($6e8a5a9b3775e143$exports.CodeActionMenu, this._editor, {
                onSelectCodeAction: (action)=>$47746b1b319e9adf$var$__awaiter(this, void 0, void 0, function*() {
                        this.delegate.applyCodeAction(action, /* retrigger */ true);
                    })
            }));
        });
        this._lightBulbWidget = new $58e627bffd4b13cd$export$b624eff549462981(()=>{
            const widget = this._register(instantiationService.createInstance($de505aa1041e1e63$exports.LightBulbWidget, this._editor, quickFixActionId, preferredFixActionId));
            this._register(widget.onClick((e)=>this.showCodeActionList(e.trigger, e.actions, e, {
                    includeDisabledActions: false
                })
            ));
            return widget;
        });
    }
    dispose() {
        $47746b1b319e9adf$var$__classPrivateFieldSet(this, $47746b1b319e9adf$var$_CodeActionUi_disposed, true, "f");
        super.dispose();
    }
    update(newState) {
        var _a, _b, _c;
        return $47746b1b319e9adf$var$__awaiter(this, void 0, void 0, function*() {
            if (newState.type !== 1 /* Triggered */ ) {
                (_a = this._lightBulbWidget.rawValue) === null || _a === void 0 || _a.hide();
                return;
            }
            let actions;
            try {
                actions = yield newState.actions;
            } catch (e) {
                $gPkHZ.onUnexpectedError(e);
                return;
            }
            if ($47746b1b319e9adf$var$__classPrivateFieldGet(this, $47746b1b319e9adf$var$_CodeActionUi_disposed, "f")) return;
            this._lightBulbWidget.getValue().update(actions, newState.trigger, newState.position);
            if (newState.trigger.type === 1 /* Invoke */ ) {
                if ((_b = newState.trigger.filter) === null || _b === void 0 ? void 0 : _b.include) {
                    // Check to see if we want to auto apply.
                    const validActionToApply = this.tryGetValidActionToApply(newState.trigger, actions);
                    if (validActionToApply) {
                        try {
                            this._lightBulbWidget.getValue().hide();
                            yield this.delegate.applyCodeAction(validActionToApply, false);
                        } finally{
                            actions.dispose();
                        }
                        return;
                    }
                    // Check to see if there is an action that we would have applied were it not invalid
                    if (newState.trigger.context) {
                        const invalidAction = this.getInvalidActionThatWouldHaveBeenApplied(newState.trigger, actions);
                        if (invalidAction && invalidAction.action.disabled) {
                            $25f94a4f82af6366$exports.MessageController.get(this._editor).showMessage(invalidAction.action.disabled, newState.trigger.context.position);
                            actions.dispose();
                            return;
                        }
                    }
                }
                const includeDisabledActions = !!((_c = newState.trigger.filter) === null || _c === void 0 ? void 0 : _c.include);
                if (newState.trigger.context) {
                    if (!actions.allActions.length || !includeDisabledActions && !actions.validActions.length) {
                        $25f94a4f82af6366$exports.MessageController.get(this._editor).showMessage(newState.trigger.context.notAvailableMessage, newState.trigger.context.position);
                        this._activeCodeActions.value = actions;
                        actions.dispose();
                        return;
                    }
                }
                this._activeCodeActions.value = actions;
                this._codeActionWidget.getValue().show(newState.trigger, actions, newState.position, {
                    includeDisabledActions: includeDisabledActions
                });
            } else // auto magically triggered
            if (this._codeActionWidget.getValue().isVisible) // TODO: Figure out if we should update the showing menu?
            actions.dispose();
            else this._activeCodeActions.value = actions;
        });
    }
    getInvalidActionThatWouldHaveBeenApplied(trigger, actions) {
        if (!actions.allActions.length) return undefined;
        if (trigger.autoApply === "first" /* First */  && actions.validActions.length === 0 || trigger.autoApply === "ifSingle" /* IfSingle */  && actions.allActions.length === 1) return actions.allActions.find(({ action: action  })=>action.disabled
        );
        return undefined;
    }
    tryGetValidActionToApply(trigger, actions) {
        if (!actions.validActions.length) return undefined;
        if (trigger.autoApply === "first" /* First */  && actions.validActions.length > 0 || trigger.autoApply === "ifSingle" /* IfSingle */  && actions.validActions.length === 1) return actions.validActions[0];
        return undefined;
    }
    showCodeActionList(trigger, actions, at, options) {
        return $47746b1b319e9adf$var$__awaiter(this, void 0, void 0, function*() {
            this._codeActionWidget.getValue().show(trigger, actions, at, options);
        });
    }
};
$47746b1b319e9adf$var$_CodeActionUi_disposed = new WeakMap();
$47746b1b319e9adf$export$47357a276704fe7 = $47746b1b319e9adf$var$__decorate([
    $47746b1b319e9adf$var$__param(4, $fdGPu.IInstantiationService)
], $47746b1b319e9adf$export$47357a276704fe7);




var $4dEdH = parcelRequire("4dEdH");

var $8tcMz = parcelRequire("8tcMz");

var $cxCeF = parcelRequire("cxCeF");

var $fdGPu = parcelRequire("fdGPu");

var $enNKM = parcelRequire("enNKM");

var $kCOKl = parcelRequire("kCOKl");

var $4E7vx = parcelRequire("4E7vx");

var $lMGba = parcelRequire("lMGba");
var $267d209648ad54f7$exports = {};

$parcel$export($267d209648ad54f7$exports, "SUPPORTED_CODE_ACTIONS", () => $267d209648ad54f7$export$1209f8b35536d626, (v) => $267d209648ad54f7$export$1209f8b35536d626 = v);
$parcel$export($267d209648ad54f7$exports, "CodeActionModel", () => $267d209648ad54f7$export$d2ba69ecaab87b2c, (v) => $267d209648ad54f7$export$d2ba69ecaab87b2c = v);

var $6bXyA = parcelRequire("6bXyA");

var $gPkHZ = parcelRequire("gPkHZ");

var $5YaSO = parcelRequire("5YaSO");

var $9cWcn = parcelRequire("9cWcn");

var $5Aea5 = parcelRequire("5Aea5");

var $d00il = parcelRequire("d00il");

var $4PmRQ = parcelRequire("4PmRQ");

var $cxCeF = parcelRequire("cxCeF");

var $4E7vx = parcelRequire("4E7vx");

/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $267d209648ad54f7$var$__classPrivateFieldGet = undefined && undefined.__classPrivateFieldGet || function(receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var $267d209648ad54f7$var$__classPrivateFieldSet = undefined && undefined.__classPrivateFieldSet || function(receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;
};
var $267d209648ad54f7$var$_CodeActionModel_isDisposed;
const $267d209648ad54f7$export$1209f8b35536d626 = new $cxCeF.RawContextKey('supportedCodeAction', '');
class $267d209648ad54f7$var$CodeActionOracle extends $9cWcn.Disposable {
    constructor(_editor, _markerService, _signalChange, _delay = 250){
        super();
        this._editor = _editor;
        this._markerService = _markerService;
        this._signalChange = _signalChange;
        this._delay = _delay;
        this._autoTriggerTimer = this._register(new $6bXyA.TimeoutTimer());
        this._register(this._markerService.onMarkerChanged((e)=>this._onMarkerChanges(e)
        ));
        this._register(this._editor.onDidChangeCursorPosition(()=>this._onCursorChange()
        ));
    }
    trigger(trigger) {
        const selection = this._getRangeOfSelectionUnlessWhitespaceEnclosed(trigger);
        return this._createEventAndSignalChange(trigger, selection);
    }
    _onMarkerChanges(resources) {
        const model = this._editor.getModel();
        if (!model) return;
        if (resources.some((resource)=>$5Aea5.isEqual(resource, model.uri)
        )) this._autoTriggerTimer.cancelAndSet(()=>{
            this.trigger({
                type: 2 /* Auto */ 
            });
        }, this._delay);
    }
    _onCursorChange() {
        this._autoTriggerTimer.cancelAndSet(()=>{
            this.trigger({
                type: 2 /* Auto */ 
            });
        }, this._delay);
    }
    _getRangeOfMarker(selection) {
        const model = this._editor.getModel();
        if (!model) return undefined;
        for (const marker of this._markerService.read({
            resource: model.uri
        })){
            const markerRange = model.validateRange(marker);
            if ($d00il.Range.intersectRanges(markerRange, selection)) return $d00il.Range.lift(markerRange);
        }
        return undefined;
    }
    _getRangeOfSelectionUnlessWhitespaceEnclosed(trigger) {
        if (!this._editor.hasModel()) return undefined;
        const model = this._editor.getModel();
        const selection = this._editor.getSelection();
        if (selection.isEmpty() && trigger.type === 2 /* Auto */ ) {
            const { lineNumber: lineNumber , column: column  } = selection.getPosition();
            const line = model.getLineContent(lineNumber);
            if (line.length === 0) // empty line
            return undefined;
            else if (column === 1) {
                // look only right
                if (/\s/.test(line[0])) return undefined;
            } else if (column === model.getLineMaxColumn(lineNumber)) {
                // look only left
                if (/\s/.test(line[line.length - 1])) return undefined;
            } else {
                // look left and right
                if (/\s/.test(line[column - 2]) && /\s/.test(line[column - 1])) return undefined;
            }
        }
        return selection;
    }
    _createEventAndSignalChange(trigger, selection) {
        const model = this._editor.getModel();
        if (!selection || !model) {
            // cancel
            this._signalChange(undefined);
            return undefined;
        }
        const markerRange = this._getRangeOfMarker(selection);
        const position = markerRange ? markerRange.getStartPosition() : selection.getStartPosition();
        const e = {
            trigger: trigger,
            selection: selection,
            position: position
        };
        this._signalChange(e);
        return e;
    }
}
var $267d209648ad54f7$export$6e13bf9b6b21a756;
(function($267d209648ad54f7$export$6e13bf9b6b21a756) {
    $267d209648ad54f7$export$6e13bf9b6b21a756.Empty = {
        type: 0 /* Empty */ 
    };
    class Triggered {
        constructor(trigger, rangeOrSelection, position, _cancellablePromise){
            this.trigger = trigger;
            this.rangeOrSelection = rangeOrSelection;
            this.position = position;
            this._cancellablePromise = _cancellablePromise;
            this.type = 1 /* Triggered */ ;
            this.actions = _cancellablePromise.catch((e)=>{
                if ($gPkHZ.isPromiseCanceledError(e)) return $267d209648ad54f7$var$emptyCodeActionSet;
                throw e;
            });
        }
        cancel() {
            this._cancellablePromise.cancel();
        }
    }
    $267d209648ad54f7$export$6e13bf9b6b21a756.Triggered = Triggered;
})($267d209648ad54f7$export$6e13bf9b6b21a756 || ($267d209648ad54f7$export$6e13bf9b6b21a756 = {}));
const $267d209648ad54f7$var$emptyCodeActionSet = {
    allActions: [],
    validActions: [],
    dispose: ()=>{},
    documentation: [],
    hasAutoFix: false
};
class $267d209648ad54f7$export$d2ba69ecaab87b2c extends $9cWcn.Disposable {
    constructor(_editor, _markerService, contextKeyService, _progressService){
        super();
        this._editor = _editor;
        this._markerService = _markerService;
        this._progressService = _progressService;
        this._codeActionOracle = this._register(new $9cWcn.MutableDisposable());
        this._state = $267d209648ad54f7$export$6e13bf9b6b21a756.Empty;
        this._onDidChangeState = this._register(new $5YaSO.Emitter());
        this.onDidChangeState = this._onDidChangeState.event;
        $267d209648ad54f7$var$_CodeActionModel_isDisposed.set(this, false);
        this._supportedCodeActions = $267d209648ad54f7$export$1209f8b35536d626.bindTo(contextKeyService);
        this._register(this._editor.onDidChangeModel(()=>this._update()
        ));
        this._register(this._editor.onDidChangeModelLanguage(()=>this._update()
        ));
        this._register($4PmRQ.CodeActionProviderRegistry.onDidChange(()=>this._update()
        ));
        this._update();
    }
    dispose() {
        if ($267d209648ad54f7$var$__classPrivateFieldGet(this, $267d209648ad54f7$var$_CodeActionModel_isDisposed, "f")) return;
        $267d209648ad54f7$var$__classPrivateFieldSet(this, $267d209648ad54f7$var$_CodeActionModel_isDisposed, true, "f");
        super.dispose();
        this.setState($267d209648ad54f7$export$6e13bf9b6b21a756.Empty, true);
    }
    _update() {
        if ($267d209648ad54f7$var$__classPrivateFieldGet(this, $267d209648ad54f7$var$_CodeActionModel_isDisposed, "f")) return;
        this._codeActionOracle.value = undefined;
        this.setState($267d209648ad54f7$export$6e13bf9b6b21a756.Empty);
        const model = this._editor.getModel();
        if (model && $4PmRQ.CodeActionProviderRegistry.has(model) && !this._editor.getOption(80 /* readOnly */ )) {
            const supportedActions = [];
            for (const provider of $4PmRQ.CodeActionProviderRegistry.all(model))if (Array.isArray(provider.providedCodeActionKinds)) supportedActions.push(...provider.providedCodeActionKinds);
            this._supportedCodeActions.set(supportedActions.join(' '));
            this._codeActionOracle.value = new $267d209648ad54f7$var$CodeActionOracle(this._editor, this._markerService, (trigger)=>{
                var _a;
                if (!trigger) {
                    this.setState($267d209648ad54f7$export$6e13bf9b6b21a756.Empty);
                    return;
                }
                const actions = $6bXyA.createCancelablePromise((token)=>$c8a1288d9cef392a$exports.getCodeActions(model, trigger.selection, trigger.trigger, $4E7vx.Progress.None, token)
                );
                if (trigger.trigger.type === 1 /* Invoke */ ) (_a = this._progressService) === null || _a === void 0 || _a.showWhile(actions, 250);
                this.setState(new $267d209648ad54f7$export$6e13bf9b6b21a756.Triggered(trigger.trigger, trigger.selection, trigger.position, actions));
            }, undefined);
            this._codeActionOracle.value.trigger({
                type: 2 /* Auto */ 
            });
        } else this._supportedCodeActions.reset();
    }
    trigger(trigger) {
        if (this._codeActionOracle.value) this._codeActionOracle.value.trigger(trigger);
    }
    setState(newState, skipNotify) {
        if (newState === this._state) return;
        // Cancel old request
        if (this._state.type === 1 /* Triggered */ ) this._state.cancel();
        this._state = newState;
        if (!skipNotify && !$267d209648ad54f7$var$__classPrivateFieldGet(this, $267d209648ad54f7$var$_CodeActionModel_isDisposed, "f")) this._onDidChangeState.fire(newState);
    }
}
$267d209648ad54f7$var$_CodeActionModel_isDisposed = new WeakMap();



/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $f851b37e0ba4c126$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var $f851b37e0ba4c126$var$__param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
};
var $f851b37e0ba4c126$var$__awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
function $f851b37e0ba4c126$var$contextKeyForSupportedActions(kind) {
    return $cxCeF.ContextKeyExpr.regex($267d209648ad54f7$exports.SUPPORTED_CODE_ACTIONS.keys()[0], new RegExp('(\\s|^)' + $jcr1R.escapeRegExpCharacters(kind.value) + '\\b'));
}
const $f851b37e0ba4c126$var$argsSchema = {
    type: 'object',
    defaultSnippets: [
        {
            body: {
                kind: ''
            }
        }
    ],
    properties: {
        'kind': {
            type: 'string',
            description: $4dEdH.localize('args.schema.kind', "Kind of the code action to run.")
        },
        'apply': {
            type: 'string',
            description: $4dEdH.localize('args.schema.apply', "Controls when the returned actions are applied."),
            default: "ifSingle" /* IfSingle */ ,
            enum: [
                "first" /* First */ ,
                "ifSingle" /* IfSingle */ ,
                "never" /* Never */ 
            ],
            enumDescriptions: [
                $4dEdH.localize('args.schema.apply.first', "Always apply the first returned code action."),
                $4dEdH.localize('args.schema.apply.ifSingle', "Apply the first returned code action if it is the only one."),
                $4dEdH.localize('args.schema.apply.never', "Do not apply the returned code actions."), 
            ]
        },
        'preferred': {
            type: 'boolean',
            default: false,
            description: $4dEdH.localize('args.schema.preferred', "Controls if only preferred code actions should be returned.")
        }
    }
};
let $f851b37e0ba4c126$export$12bfd62cda48c28c = class $f851b37e0ba4c126$export$12bfd62cda48c28c extends $9cWcn.Disposable {
    constructor(editor, markerService, contextKeyService, progressService, _instantiationService){
        super();
        this._instantiationService = _instantiationService;
        this._editor = editor;
        this._model = this._register(new $267d209648ad54f7$exports.CodeActionModel(this._editor, markerService, contextKeyService, progressService));
        this._register(this._model.onDidChangeState((newState)=>this.update(newState)
        ));
        this._ui = new $58e627bffd4b13cd$export$b624eff549462981(()=>this._register(new $47746b1b319e9adf$exports.CodeActionUi(editor, $f851b37e0ba4c126$export$882e0ee127a25fbb.Id, $f851b37e0ba4c126$export$2bffd38cf19da049.Id, {
                applyCodeAction: (action, retrigger)=>$f851b37e0ba4c126$var$__awaiter(this, void 0, void 0, function*() {
                        try {
                            yield this._applyCodeAction(action);
                        } finally{
                            if (retrigger) this._trigger({
                                type: 2 /* Auto */ ,
                                filter: {}
                            });
                        }
                    })
            }, this._instantiationService))
        );
    }
    static get(editor) {
        return editor.getContribution($f851b37e0ba4c126$export$12bfd62cda48c28c.ID);
    }
    update(newState) {
        this._ui.getValue().update(newState);
    }
    showCodeActions(trigger, actions, at) {
        return this._ui.getValue().showCodeActionList(trigger, actions, at, {
            includeDisabledActions: false
        });
    }
    manualTriggerAtCurrentPosition(notAvailableMessage, filter, autoApply) {
        if (!this._editor.hasModel()) return;
        $25f94a4f82af6366$exports.MessageController.get(this._editor).closeMessage();
        const triggerPosition = this._editor.getPosition();
        this._trigger({
            type: 1 /* Invoke */ ,
            filter: filter,
            autoApply: autoApply,
            context: {
                notAvailableMessage: notAvailableMessage,
                position: triggerPosition
            }
        });
    }
    _trigger(trigger) {
        return this._model.trigger(trigger);
    }
    _applyCodeAction(action) {
        return this._instantiationService.invokeFunction($f851b37e0ba4c126$export$69c5fd17c7ee0695, action, this._editor);
    }
};
$f851b37e0ba4c126$export$12bfd62cda48c28c.ID = 'editor.contrib.quickFixController';
$f851b37e0ba4c126$export$12bfd62cda48c28c = $f851b37e0ba4c126$var$__decorate([
    $f851b37e0ba4c126$var$__param(1, $enNKM.IMarkerService),
    $f851b37e0ba4c126$var$__param(2, $cxCeF.IContextKeyService),
    $f851b37e0ba4c126$var$__param(3, $4E7vx.IEditorProgressService),
    $f851b37e0ba4c126$var$__param(4, $fdGPu.IInstantiationService)
], $f851b37e0ba4c126$export$12bfd62cda48c28c);
function $f851b37e0ba4c126$export$69c5fd17c7ee0695(accessor, item, editor) {
    return $f851b37e0ba4c126$var$__awaiter(this, void 0, void 0, function*() {
        const bulkEditService = accessor.get($d4p5R.IBulkEditService);
        const commandService = accessor.get($8tcMz.ICommandService);
        const telemetryService = accessor.get($lMGba.ITelemetryService);
        const notificationService = accessor.get($kCOKl.INotificationService);
        telemetryService.publicLog2('codeAction.applyCodeAction', {
            codeActionTitle: item.action.title,
            codeActionKind: item.action.kind,
            codeActionIsPreferred: !!item.action.isPreferred
        });
        yield item.resolve($giPcZ.CancellationToken.None);
        if (item.action.edit) yield bulkEditService.apply($d4p5R.ResourceEdit.convert(item.action.edit), {
            editor: editor,
            label: item.action.title
        });
        if (item.action.command) try {
            yield commandService.executeCommand(item.action.command.id, ...item.action.command.arguments || []);
        } catch (err) {
            const message = $f851b37e0ba4c126$var$asMessage(err);
            notificationService.error(typeof message === 'string' ? message : $4dEdH.localize('applyCodeActionFailed', "An unknown error occurred while applying the code action"));
        }
    });
}
function $f851b37e0ba4c126$var$asMessage(err) {
    if (typeof err === 'string') return err;
    else if (err instanceof Error && typeof err.message === 'string') return err.message;
    else return undefined;
}
function $f851b37e0ba4c126$var$triggerCodeActionsForEditorSelection(editor, notAvailableMessage, filter, autoApply) {
    if (editor.hasModel()) {
        const controller = $f851b37e0ba4c126$export$12bfd62cda48c28c.get(editor);
        if (controller) controller.manualTriggerAtCurrentPosition(notAvailableMessage, filter, autoApply);
    }
}
class $f851b37e0ba4c126$export$882e0ee127a25fbb extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: $f851b37e0ba4c126$export$882e0ee127a25fbb.Id,
            label: $4dEdH.localize('quickfix.trigger.label', "Quick Fix..."),
            alias: 'Quick Fix...',
            precondition: $cxCeF.ContextKeyExpr.and($ibKGQ.EditorContextKeys.writable, $ibKGQ.EditorContextKeys.hasCodeActionsProvider),
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.editorTextFocus,
                primary: 2132 /* Period */ ,
                weight: 100 /* EditorContrib */ 
            }
        });
    }
    run(_accessor, editor) {
        return $f851b37e0ba4c126$var$triggerCodeActionsForEditorSelection(editor, $4dEdH.localize('editor.action.quickFix.noneMessage', "No code actions available"), undefined, undefined);
    }
}
$f851b37e0ba4c126$export$882e0ee127a25fbb.Id = 'editor.action.quickFix';
class $f851b37e0ba4c126$export$94d24ce7f8ca1f8c extends $2iJTi.EditorCommand {
    constructor(){
        super({
            id: $c8a1288d9cef392a$exports.codeActionCommandId,
            precondition: $cxCeF.ContextKeyExpr.and($ibKGQ.EditorContextKeys.writable, $ibKGQ.EditorContextKeys.hasCodeActionsProvider),
            description: {
                description: 'Trigger a code action',
                args: [
                    {
                        name: 'args',
                        schema: $f851b37e0ba4c126$var$argsSchema
                    }
                ]
            }
        });
    }
    runEditorCommand(_accessor, editor, userArgs) {
        const args = $9aa3d1d48c7ddba3$export$b4557d8a7419d430.fromUser(userArgs, {
            kind: $9aa3d1d48c7ddba3$export$c72b5966cfff6b4d.Empty,
            apply: "ifSingle" /* IfSingle */ 
        });
        return $f851b37e0ba4c126$var$triggerCodeActionsForEditorSelection(editor, typeof (userArgs === null || userArgs === void 0 ? void 0 : userArgs.kind) === 'string' ? args.preferred ? $4dEdH.localize('editor.action.codeAction.noneMessage.preferred.kind', "No preferred code actions for '{0}' available", userArgs.kind) : $4dEdH.localize('editor.action.codeAction.noneMessage.kind', "No code actions for '{0}' available", userArgs.kind) : args.preferred ? $4dEdH.localize('editor.action.codeAction.noneMessage.preferred', "No preferred code actions available") : $4dEdH.localize('editor.action.codeAction.noneMessage', "No code actions available"), {
            include: args.kind,
            includeSourceActions: true,
            onlyIncludePreferredActions: args.preferred
        }, args.apply);
    }
}
class $f851b37e0ba4c126$export$717c8b29cf6c7de0 extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: $c8a1288d9cef392a$exports.refactorCommandId,
            label: $4dEdH.localize('refactor.label', "Refactor..."),
            alias: 'Refactor...',
            precondition: $cxCeF.ContextKeyExpr.and($ibKGQ.EditorContextKeys.writable, $ibKGQ.EditorContextKeys.hasCodeActionsProvider),
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.editorTextFocus,
                primary: 3120 /* KeyR */ ,
                mac: {
                    primary: 1328 /* KeyR */ 
                },
                weight: 100 /* EditorContrib */ 
            },
            contextMenuOpts: {
                group: '1_modification',
                order: 2,
                when: $cxCeF.ContextKeyExpr.and($ibKGQ.EditorContextKeys.writable, $f851b37e0ba4c126$var$contextKeyForSupportedActions($9aa3d1d48c7ddba3$export$c72b5966cfff6b4d.Refactor))
            },
            description: {
                description: 'Refactor...',
                args: [
                    {
                        name: 'args',
                        schema: $f851b37e0ba4c126$var$argsSchema
                    }
                ]
            }
        });
    }
    run(_accessor, editor, userArgs) {
        const args = $9aa3d1d48c7ddba3$export$b4557d8a7419d430.fromUser(userArgs, {
            kind: $9aa3d1d48c7ddba3$export$c72b5966cfff6b4d.Refactor,
            apply: "never" /* Never */ 
        });
        return $f851b37e0ba4c126$var$triggerCodeActionsForEditorSelection(editor, typeof (userArgs === null || userArgs === void 0 ? void 0 : userArgs.kind) === 'string' ? args.preferred ? $4dEdH.localize('editor.action.refactor.noneMessage.preferred.kind', "No preferred refactorings for '{0}' available", userArgs.kind) : $4dEdH.localize('editor.action.refactor.noneMessage.kind', "No refactorings for '{0}' available", userArgs.kind) : args.preferred ? $4dEdH.localize('editor.action.refactor.noneMessage.preferred', "No preferred refactorings available") : $4dEdH.localize('editor.action.refactor.noneMessage', "No refactorings available"), {
            include: $9aa3d1d48c7ddba3$export$c72b5966cfff6b4d.Refactor.contains(args.kind) ? args.kind : $9aa3d1d48c7ddba3$export$c72b5966cfff6b4d.None,
            onlyIncludePreferredActions: args.preferred
        }, args.apply);
    }
}
class $f851b37e0ba4c126$export$6754a4b1b720e9fb extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: $c8a1288d9cef392a$exports.sourceActionCommandId,
            label: $4dEdH.localize('source.label', "Source Action..."),
            alias: 'Source Action...',
            precondition: $cxCeF.ContextKeyExpr.and($ibKGQ.EditorContextKeys.writable, $ibKGQ.EditorContextKeys.hasCodeActionsProvider),
            contextMenuOpts: {
                group: '1_modification',
                order: 2.1,
                when: $cxCeF.ContextKeyExpr.and($ibKGQ.EditorContextKeys.writable, $f851b37e0ba4c126$var$contextKeyForSupportedActions($9aa3d1d48c7ddba3$export$c72b5966cfff6b4d.Source))
            },
            description: {
                description: 'Source Action...',
                args: [
                    {
                        name: 'args',
                        schema: $f851b37e0ba4c126$var$argsSchema
                    }
                ]
            }
        });
    }
    run(_accessor, editor, userArgs) {
        const args = $9aa3d1d48c7ddba3$export$b4557d8a7419d430.fromUser(userArgs, {
            kind: $9aa3d1d48c7ddba3$export$c72b5966cfff6b4d.Source,
            apply: "never" /* Never */ 
        });
        return $f851b37e0ba4c126$var$triggerCodeActionsForEditorSelection(editor, typeof (userArgs === null || userArgs === void 0 ? void 0 : userArgs.kind) === 'string' ? args.preferred ? $4dEdH.localize('editor.action.source.noneMessage.preferred.kind', "No preferred source actions for '{0}' available", userArgs.kind) : $4dEdH.localize('editor.action.source.noneMessage.kind', "No source actions for '{0}' available", userArgs.kind) : args.preferred ? $4dEdH.localize('editor.action.source.noneMessage.preferred', "No preferred source actions available") : $4dEdH.localize('editor.action.source.noneMessage', "No source actions available"), {
            include: $9aa3d1d48c7ddba3$export$c72b5966cfff6b4d.Source.contains(args.kind) ? args.kind : $9aa3d1d48c7ddba3$export$c72b5966cfff6b4d.None,
            includeSourceActions: true,
            onlyIncludePreferredActions: args.preferred
        }, args.apply);
    }
}
class $f851b37e0ba4c126$export$839e26b4813ba04c extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: $c8a1288d9cef392a$exports.organizeImportsCommandId,
            label: $4dEdH.localize('organizeImports.label', "Organize Imports"),
            alias: 'Organize Imports',
            precondition: $cxCeF.ContextKeyExpr.and($ibKGQ.EditorContextKeys.writable, $f851b37e0ba4c126$var$contextKeyForSupportedActions($9aa3d1d48c7ddba3$export$c72b5966cfff6b4d.SourceOrganizeImports)),
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.editorTextFocus,
                primary: 1581 /* KeyO */ ,
                weight: 100 /* EditorContrib */ 
            }
        });
    }
    run(_accessor, editor) {
        return $f851b37e0ba4c126$var$triggerCodeActionsForEditorSelection(editor, $4dEdH.localize('editor.action.organize.noneMessage', "No organize imports action available"), {
            include: $9aa3d1d48c7ddba3$export$c72b5966cfff6b4d.SourceOrganizeImports,
            includeSourceActions: true
        }, "ifSingle" /* IfSingle */ );
    }
}
class $f851b37e0ba4c126$export$900fefaddb0995e3 extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: $c8a1288d9cef392a$exports.fixAllCommandId,
            label: $4dEdH.localize('fixAll.label', "Fix All"),
            alias: 'Fix All',
            precondition: $cxCeF.ContextKeyExpr.and($ibKGQ.EditorContextKeys.writable, $f851b37e0ba4c126$var$contextKeyForSupportedActions($9aa3d1d48c7ddba3$export$c72b5966cfff6b4d.SourceFixAll))
        });
    }
    run(_accessor, editor) {
        return $f851b37e0ba4c126$var$triggerCodeActionsForEditorSelection(editor, $4dEdH.localize('fixAll.noneMessage', "No fix all action available"), {
            include: $9aa3d1d48c7ddba3$export$c72b5966cfff6b4d.SourceFixAll,
            includeSourceActions: true
        }, "ifSingle" /* IfSingle */ );
    }
}
class $f851b37e0ba4c126$export$2bffd38cf19da049 extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: $f851b37e0ba4c126$export$2bffd38cf19da049.Id,
            label: $4dEdH.localize('autoFix.label', "Auto Fix..."),
            alias: 'Auto Fix...',
            precondition: $cxCeF.ContextKeyExpr.and($ibKGQ.EditorContextKeys.writable, $f851b37e0ba4c126$var$contextKeyForSupportedActions($9aa3d1d48c7ddba3$export$c72b5966cfff6b4d.QuickFix)),
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.editorTextFocus,
                primary: 1620 /* Period */ ,
                mac: {
                    primary: 2644 /* Period */ 
                },
                weight: 100 /* EditorContrib */ 
            }
        });
    }
    run(_accessor, editor) {
        return $f851b37e0ba4c126$var$triggerCodeActionsForEditorSelection(editor, $4dEdH.localize('editor.action.autoFix.noneMessage', "No auto fixes available"), {
            include: $9aa3d1d48c7ddba3$export$c72b5966cfff6b4d.QuickFix,
            onlyIncludePreferredActions: true
        }, "ifSingle" /* IfSingle */ );
    }
}
$f851b37e0ba4c126$export$2bffd38cf19da049.Id = 'editor.action.autoFix';


$2iJTi.registerEditorContribution($f851b37e0ba4c126$exports.QuickFixController.ID, $f851b37e0ba4c126$exports.QuickFixController);
$2iJTi.registerEditorAction($f851b37e0ba4c126$exports.QuickFixAction);
$2iJTi.registerEditorAction($f851b37e0ba4c126$exports.RefactorAction);
$2iJTi.registerEditorAction($f851b37e0ba4c126$exports.SourceAction);
$2iJTi.registerEditorAction($f851b37e0ba4c126$exports.OrganizeImportsAction);
$2iJTi.registerEditorAction($f851b37e0ba4c126$exports.AutoFixAction);
$2iJTi.registerEditorAction($f851b37e0ba4c126$exports.FixAllAction);
$2iJTi.registerEditorCommand(new $f851b37e0ba4c126$exports.CodeActionCommand());


var $a50c4cf8d163a383$exports = {};

var $bDzmQ = parcelRequire("bDzmQ");

var $6bXyA = parcelRequire("6bXyA");

var $gPkHZ = parcelRequire("gPkHZ");

var $n7820 = parcelRequire("n7820");

var $9cWcn = parcelRequire("9cWcn");

var $r7siU = parcelRequire("r7siU");

var $2iJTi = parcelRequire("2iJTi");

var $cd4KD = parcelRequire("cd4KD");

var $ibKGQ = parcelRequire("ibKGQ");

var $4PmRQ = parcelRequire("4PmRQ");

var $6HKlt = parcelRequire("6HKlt");
var $873d24acc4f2a9e6$exports = {};

$parcel$export($873d24acc4f2a9e6$exports, "CodeLensModel", () => $873d24acc4f2a9e6$export$c6268d20d31c03ba, (v) => $873d24acc4f2a9e6$export$c6268d20d31c03ba = v);
$parcel$export($873d24acc4f2a9e6$exports, "getCodeLensModel", () => $873d24acc4f2a9e6$export$bebcff98c7e74873, (v) => $873d24acc4f2a9e6$export$bebcff98c7e74873 = v);

var $giPcZ = parcelRequire("giPcZ");

var $gPkHZ = parcelRequire("gPkHZ");

var $9cWcn = parcelRequire("9cWcn");

var $bxBg7 = parcelRequire("bxBg7");

var $5OJ54 = parcelRequire("5OJ54");

var $4PmRQ = parcelRequire("4PmRQ");

var $15EOE = parcelRequire("15EOE");

var $8tcMz = parcelRequire("8tcMz");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $873d24acc4f2a9e6$var$__awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
class $873d24acc4f2a9e6$export$c6268d20d31c03ba {
    constructor(){
        this.lenses = [];
        this._disposables = new $9cWcn.DisposableStore();
    }
    dispose() {
        this._disposables.dispose();
    }
    add(list, provider) {
        this._disposables.add(list);
        for (const symbol of list.lenses)this.lenses.push({
            symbol: symbol,
            provider: provider
        });
    }
}
function $873d24acc4f2a9e6$export$bebcff98c7e74873(model, token) {
    return $873d24acc4f2a9e6$var$__awaiter(this, void 0, void 0, function*() {
        const provider1 = $4PmRQ.CodeLensProviderRegistry.ordered(model);
        const providerRanks = new Map();
        const result = new $873d24acc4f2a9e6$export$c6268d20d31c03ba();
        const promises = provider1.map((provider, i)=>$873d24acc4f2a9e6$var$__awaiter(this, void 0, void 0, function*() {
                providerRanks.set(provider, i);
                try {
                    const list = yield Promise.resolve(provider.provideCodeLenses(model, token));
                    if (list) result.add(list, provider);
                } catch (err) {
                    $gPkHZ.onUnexpectedExternalError(err);
                }
            })
        );
        yield Promise.all(promises);
        result.lenses = result.lenses.sort((a, b)=>{
            // sort by lineNumber, provider-rank, and column
            if (a.symbol.range.startLineNumber < b.symbol.range.startLineNumber) return -1;
            else if (a.symbol.range.startLineNumber > b.symbol.range.startLineNumber) return 1;
            else if (providerRanks.get(a.provider) < providerRanks.get(b.provider)) return -1;
            else if (providerRanks.get(a.provider) > providerRanks.get(b.provider)) return 1;
            else if (a.symbol.range.startColumn < b.symbol.range.startColumn) return -1;
            else if (a.symbol.range.startColumn > b.symbol.range.startColumn) return 1;
            else return 0;
        });
        return result;
    });
}
$8tcMz.CommandsRegistry.registerCommand('_executeCodeLensProvider', function(accessor, ...args) {
    let [uri, itemResolveCount] = args;
    $bxBg7.assertType($5OJ54.URI.isUri(uri));
    $bxBg7.assertType(typeof itemResolveCount === 'number' || !itemResolveCount);
    const model = accessor.get($15EOE.IModelService).getModel(uri);
    if (!model) throw $gPkHZ.illegalArgument();
    const result = [];
    const disposables = new $9cWcn.DisposableStore();
    return $873d24acc4f2a9e6$export$bebcff98c7e74873(model, $giPcZ.CancellationToken.None).then((value)=>{
        disposables.add(value);
        let resolve = [];
        for (const item of value.lenses){
            if (itemResolveCount === undefined || itemResolveCount === null || Boolean(item.symbol.command)) result.push(item.symbol);
            else if (itemResolveCount-- > 0 && item.provider.resolveCodeLens) resolve.push(Promise.resolve(item.provider.resolveCodeLens(model, item.symbol, $giPcZ.CancellationToken.None)).then((symbol)=>result.push(symbol || item.symbol)
            ));
        }
        return Promise.all(resolve);
    }).then(()=>{
        return result;
    }).finally(()=>{
        // make sure to return results, then (on next tick)
        // dispose the results
        setTimeout(()=>disposables.dispose()
        , 100);
    });
});


var $c00cf726eee84224$exports = {};

$parcel$export($c00cf726eee84224$exports, "ICodeLensCache", () => $c00cf726eee84224$export$49a51fe6a3a59e77, (v) => $c00cf726eee84224$export$49a51fe6a3a59e77 = v);

var $6bXyA = parcelRequire("6bXyA");

var $5eGXQ = parcelRequire("5eGXQ");

var $askDf = parcelRequire("askDf");

var $d00il = parcelRequire("d00il");


var $lf2vF = parcelRequire("lf2vF");

var $fdGPu = parcelRequire("fdGPu");

var $2AUoS = parcelRequire("2AUoS");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $c00cf726eee84224$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var $c00cf726eee84224$var$__param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
};
const $c00cf726eee84224$export$49a51fe6a3a59e77 = $fdGPu.createDecorator('ICodeLensCache');
class $c00cf726eee84224$var$CacheItem {
    constructor(lineCount, data){
        this.lineCount = lineCount;
        this.data = data;
    }
}
let $c00cf726eee84224$export$ff670dd45c13b8eb = class $c00cf726eee84224$export$ff670dd45c13b8eb {
    constructor(storageService){
        this._fakeProvider = new class {
            provideCodeLenses() {
                throw new Error('not supported');
            }
        };
        this._cache = new $askDf.LRUCache(20, 0.75);
        // remove old data
        const oldkey = 'codelens/cache';
        $6bXyA.runWhenIdle(()=>storageService.remove(oldkey, 1 /* WORKSPACE */ )
        );
        // restore lens data on start
        const key = 'codelens/cache2';
        const raw = storageService.get(key, 1 /* WORKSPACE */ , '{}');
        this._deserialize(raw);
        // store lens data on shutdown
        $5eGXQ.once(storageService.onWillSaveState)((e)=>{
            if (e.reason === $2AUoS.WillSaveStateReason.SHUTDOWN) storageService.store(key, this._serialize(), 1 /* WORKSPACE */ , 1 /* MACHINE */ );
        });
    }
    put(model, data) {
        // create a copy of the model that is without command-ids
        // but with comand-labels
        const copyItems = data.lenses.map((item)=>{
            var _a;
            return {
                range: item.symbol.range,
                command: item.symbol.command && {
                    id: '',
                    title: (_a = item.symbol.command) === null || _a === void 0 ? void 0 : _a.title
                }
            };
        });
        const copyModel = new $873d24acc4f2a9e6$exports.CodeLensModel();
        copyModel.add({
            lenses: copyItems,
            dispose: ()=>{}
        }, this._fakeProvider);
        const item1 = new $c00cf726eee84224$var$CacheItem(model.getLineCount(), copyModel);
        this._cache.set(model.uri.toString(), item1);
    }
    get(model) {
        const item = this._cache.get(model.uri.toString());
        return item && item.lineCount === model.getLineCount() ? item.data : undefined;
    }
    delete(model) {
        this._cache.delete(model.uri.toString());
    }
    // --- persistence
    _serialize() {
        const data = Object.create(null);
        for (const [key, value] of this._cache){
            const lines = new Set();
            for (const d of value.data.lenses)lines.add(d.symbol.range.startLineNumber);
            data[key] = {
                lineCount: value.lineCount,
                lines: [
                    ...lines.values()
                ]
            };
        }
        return JSON.stringify(data);
    }
    _deserialize(raw) {
        try {
            const data = JSON.parse(raw);
            for(const key in data){
                const element = data[key];
                const lenses = [];
                for (const line of element.lines)lenses.push({
                    range: new $d00il.Range(line, 1, line, 11)
                });
                const model = new $873d24acc4f2a9e6$exports.CodeLensModel();
                model.add({
                    lenses: lenses,
                    dispose () {}
                }, this._fakeProvider);
                this._cache.set(key, new $c00cf726eee84224$var$CacheItem(element.lineCount, model));
            }
        } catch (_a) {
        // ignore...
        }
    }
};
$c00cf726eee84224$export$ff670dd45c13b8eb = $c00cf726eee84224$var$__decorate([
    $c00cf726eee84224$var$__param(0, $2AUoS.IStorageService)
], $c00cf726eee84224$export$ff670dd45c13b8eb);
$lf2vF.registerSingleton($c00cf726eee84224$export$49a51fe6a3a59e77, $c00cf726eee84224$export$ff670dd45c13b8eb);



var $bDzmQ = parcelRequire("bDzmQ");

var $6G2yS = parcelRequire("6G2yS");


var $d00il = parcelRequire("d00il");

var $91ntV = parcelRequire("91ntV");
class $052e9ff4b6c9e1d0$var$CodeLensViewZone {
    constructor(afterLineNumber, heightInPx, onHeight){
        this.afterLineNumber = afterLineNumber;
        this.heightInPx = heightInPx;
        this._onHeight = onHeight;
        this.suppressMouseDown = true;
        this.domNode = document.createElement('div');
    }
    onComputedHeight(height) {
        if (this._lastHeight === undefined) this._lastHeight = height;
        else if (this._lastHeight !== height) {
            this._lastHeight = height;
            this._onHeight();
        }
    }
    isVisible() {
        return this._lastHeight !== 0 && this.domNode.hasAttribute('monaco-visible-view-zone');
    }
}
class $052e9ff4b6c9e1d0$var$CodeLensContentWidget {
    constructor(editor, className, line){
        // Editor.IContentWidget.allowEditorOverflow
        this.allowEditorOverflow = false;
        this.suppressMouseDown = true;
        this._commands = new Map();
        this._isEmpty = true;
        this._editor = editor;
        this._id = `codelens.widget-${$052e9ff4b6c9e1d0$var$CodeLensContentWidget._idPool++}`;
        this.updatePosition(line);
        this._domNode = document.createElement('span');
        this._domNode.className = `codelens-decoration ${className}`;
    }
    withCommands(lenses, animate) {
        this._commands.clear();
        let children = [];
        let hasSymbol = false;
        for(let i = 0; i < lenses.length; i++){
            const lens = lenses[i];
            if (!lens) continue;
            hasSymbol = true;
            if (lens.command) {
                const title = $6G2yS.renderLabelWithIcons(lens.command.title.trim());
                if (lens.command.id) {
                    children.push($bDzmQ.$('a', {
                        id: String(i),
                        title: lens.command.tooltip
                    }, ...title));
                    this._commands.set(String(i), lens.command);
                } else children.push($bDzmQ.$('span', {
                    title: lens.command.tooltip
                }, ...title));
                if (i + 1 < lenses.length) children.push($bDzmQ.$('span', undefined, '\u00a0|\u00a0'));
            }
        }
        if (!hasSymbol) // symbols but no commands
        $bDzmQ.reset(this._domNode, $bDzmQ.$('span', undefined, 'no commands'));
        else {
            // symbols and commands
            $bDzmQ.reset(this._domNode, ...children);
            if (this._isEmpty && animate) this._domNode.classList.add('fadein');
            this._isEmpty = false;
        }
    }
    getCommand(link) {
        return link.parentElement === this._domNode ? this._commands.get(link.id) : undefined;
    }
    getId() {
        return this._id;
    }
    getDomNode() {
        return this._domNode;
    }
    updatePosition(line) {
        const column = this._editor.getModel().getLineFirstNonWhitespaceColumn(line);
        this._widgetPosition = {
            position: {
                lineNumber: line,
                column: column
            },
            preference: [
                1 /* ABOVE */ 
            ]
        };
    }
    getPosition() {
        return this._widgetPosition || null;
    }
}
$052e9ff4b6c9e1d0$var$CodeLensContentWidget._idPool = 0;
class $052e9ff4b6c9e1d0$export$76bdebf29cc4b59e {
    constructor(){
        this._removeDecorations = [];
        this._addDecorations = [];
        this._addDecorationsCallbacks = [];
    }
    addDecoration(decoration, callback) {
        this._addDecorations.push(decoration);
        this._addDecorationsCallbacks.push(callback);
    }
    removeDecoration(decorationId) {
        this._removeDecorations.push(decorationId);
    }
    commit(changeAccessor) {
        let resultingDecorations = changeAccessor.deltaDecorations(this._removeDecorations, this._addDecorations);
        for(let i = 0, len = resultingDecorations.length; i < len; i++)this._addDecorationsCallbacks[i](resultingDecorations[i]);
    }
}
class $052e9ff4b6c9e1d0$export$c4760329dfff1b1c {
    constructor(data, editor, className, helper, viewZoneChangeAccessor, heightInPx, updateCallback){
        this._isDisposed = false;
        this._editor = editor;
        this._className = className;
        this._data = data;
        // create combined range, track all ranges with decorations,
        // check if there is already something to render
        this._decorationIds = [];
        let range;
        let lenses = [];
        this._data.forEach((codeLensData, i)=>{
            if (codeLensData.symbol.command) lenses.push(codeLensData.symbol);
            helper.addDecoration({
                range: codeLensData.symbol.range,
                options: $91ntV.ModelDecorationOptions.EMPTY
            }, (id)=>this._decorationIds[i] = id
            );
            // the range contains all lenses on this line
            if (!range) range = $d00il.Range.lift(codeLensData.symbol.range);
            else range = $d00il.Range.plusRange(range, codeLensData.symbol.range);
        });
        this._viewZone = new $052e9ff4b6c9e1d0$var$CodeLensViewZone(range.startLineNumber - 1, heightInPx, updateCallback);
        this._viewZoneId = viewZoneChangeAccessor.addZone(this._viewZone);
        if (lenses.length > 0) {
            this._createContentWidgetIfNecessary();
            this._contentWidget.withCommands(lenses, false);
        }
    }
    _createContentWidgetIfNecessary() {
        if (!this._contentWidget) {
            this._contentWidget = new $052e9ff4b6c9e1d0$var$CodeLensContentWidget(this._editor, this._className, this._viewZone.afterLineNumber + 1);
            this._editor.addContentWidget(this._contentWidget);
        } else this._editor.layoutContentWidget(this._contentWidget);
    }
    dispose(helper, viewZoneChangeAccessor) {
        this._decorationIds.forEach(helper.removeDecoration, helper);
        this._decorationIds = [];
        if (viewZoneChangeAccessor) viewZoneChangeAccessor.removeZone(this._viewZoneId);
        if (this._contentWidget) {
            this._editor.removeContentWidget(this._contentWidget);
            this._contentWidget = undefined;
        }
        this._isDisposed = true;
    }
    isDisposed() {
        return this._isDisposed;
    }
    isValid() {
        return this._decorationIds.some((id, i)=>{
            const range = this._editor.getModel().getDecorationRange(id);
            const symbol = this._data[i].symbol;
            return !!(range && $d00il.Range.isEmpty(symbol.range) === range.isEmpty());
        });
    }
    updateCodeLensSymbols(data, helper) {
        this._decorationIds.forEach(helper.removeDecoration, helper);
        this._decorationIds = [];
        this._data = data;
        this._data.forEach((codeLensData, i)=>{
            helper.addDecoration({
                range: codeLensData.symbol.range,
                options: $91ntV.ModelDecorationOptions.EMPTY
            }, (id)=>this._decorationIds[i] = id
            );
        });
    }
    updateHeight(height, viewZoneChangeAccessor) {
        this._viewZone.heightInPx = height;
        viewZoneChangeAccessor.layoutZone(this._viewZoneId);
        if (this._contentWidget) this._editor.layoutContentWidget(this._contentWidget);
    }
    computeIfNecessary(model) {
        if (!this._viewZone.isVisible()) return null;
        // Read editor current state
        for(let i = 0; i < this._decorationIds.length; i++){
            const range = model.getDecorationRange(this._decorationIds[i]);
            if (range) this._data[i].symbol.range = range;
        }
        return this._data;
    }
    updateCommands(symbols) {
        this._createContentWidgetIfNecessary();
        this._contentWidget.withCommands(symbols, true);
        for(let i = 0; i < this._data.length; i++){
            const resolved = symbols[i];
            if (resolved) {
                const { symbol: symbol  } = this._data[i];
                symbol.command = resolved.command || symbol.command;
            }
        }
    }
    getCommand(link) {
        var _a;
        return (_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.getCommand(link);
    }
    getLineNumber() {
        const range = this._editor.getModel().getDecorationRange(this._decorationIds[0]);
        if (range) return range.startLineNumber;
        return -1;
    }
    update(viewZoneChangeAccessor) {
        if (this.isValid()) {
            const range = this._editor.getModel().getDecorationRange(this._decorationIds[0]);
            if (range) {
                this._viewZone.afterLineNumber = range.startLineNumber - 1;
                viewZoneChangeAccessor.layoutZone(this._viewZoneId);
                if (this._contentWidget) {
                    this._contentWidget.updatePosition(range.startLineNumber);
                    this._editor.layoutContentWidget(this._contentWidget);
                }
            }
        }
    }
    getItems() {
        return this._data;
    }
}



var $4dEdH = parcelRequire("4dEdH");

var $8tcMz = parcelRequire("8tcMz");

var $kCOKl = parcelRequire("kCOKl");

var $3XkzC = parcelRequire("3XkzC");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $a50c4cf8d163a383$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var $a50c4cf8d163a383$var$__param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
};
var $a50c4cf8d163a383$var$__awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
let $a50c4cf8d163a383$export$2ad2fe275c1424ff = class $a50c4cf8d163a383$export$2ad2fe275c1424ff {
    constructor(_editor, _commandService, _notificationService, _codeLensCache){
        this._editor = _editor;
        this._commandService = _commandService;
        this._notificationService = _notificationService;
        this._codeLensCache = _codeLensCache;
        this._disposables = new $9cWcn.DisposableStore();
        this._localToDispose = new $9cWcn.DisposableStore();
        this._lenses = [];
        this._getCodeLensModelDelays = new $6HKlt.LanguageFeatureRequestDelays($4PmRQ.CodeLensProviderRegistry, 250, 2500);
        this._oldCodeLensModels = new $9cWcn.DisposableStore();
        this._resolveCodeLensesDelays = new $6HKlt.LanguageFeatureRequestDelays($4PmRQ.CodeLensProviderRegistry, 250, 2500);
        this._resolveCodeLensesScheduler = new $6bXyA.RunOnceScheduler(()=>this._resolveCodeLensesInViewport()
        , this._resolveCodeLensesDelays.min);
        this._disposables.add(this._editor.onDidChangeModel(()=>this._onModelChange()
        ));
        this._disposables.add(this._editor.onDidChangeModelLanguage(()=>this._onModelChange()
        ));
        this._disposables.add(this._editor.onDidChangeConfiguration((e)=>{
            if (e.hasChanged(43 /* fontInfo */ ) || e.hasChanged(16 /* codeLensFontSize */ ) || e.hasChanged(15 /* codeLensFontFamily */ )) this._updateLensStyle();
            if (e.hasChanged(14 /* codeLens */ )) this._onModelChange();
        }));
        this._disposables.add($4PmRQ.CodeLensProviderRegistry.onDidChange(this._onModelChange, this));
        this._onModelChange();
        this._styleClassName = '_' + $n7820.hash(this._editor.getId()).toString(16);
        this._styleElement = $bDzmQ.createStyleSheet($bDzmQ.isInShadowDOM(this._editor.getContainerDomNode()) ? this._editor.getContainerDomNode() : undefined);
        this._updateLensStyle();
    }
    dispose() {
        var _a;
        this._localDispose();
        this._disposables.dispose();
        this._oldCodeLensModels.dispose();
        (_a = this._currentCodeLensModel) === null || _a === void 0 || _a.dispose();
        this._styleElement.remove();
    }
    _getLayoutInfo() {
        let fontSize = this._editor.getOption(16 /* codeLensFontSize */ );
        let codeLensHeight;
        if (!fontSize || fontSize < 5) {
            fontSize = this._editor.getOption(45 /* fontSize */ ) * 0.9 | 0;
            codeLensHeight = this._editor.getOption(58 /* lineHeight */ );
        } else codeLensHeight = fontSize * Math.max(1.3, this._editor.getOption(58 /* lineHeight */ ) / this._editor.getOption(45 /* fontSize */ )) | 0;
        return {
            codeLensHeight: codeLensHeight,
            fontSize: fontSize
        };
    }
    _updateLensStyle() {
        const { codeLensHeight: codeLensHeight , fontSize: fontSize  } = this._getLayoutInfo();
        const fontFamily = this._editor.getOption(15 /* codeLensFontFamily */ );
        const editorFontInfo = this._editor.getOption(43 /* fontInfo */ );
        const fontFamilyVar = `--codelens-font-family${this._styleClassName}`;
        const fontFeaturesVar = `--codelens-font-features${this._styleClassName}`;
        let newStyle = `
		.monaco-editor .codelens-decoration.${this._styleClassName} { line-height: ${codeLensHeight}px; font-size: ${fontSize}px; padding-right: ${Math.round(fontSize * 0.5)}px; font-feature-settings: var(${fontFeaturesVar}) }
		.monaco-editor .codelens-decoration.${this._styleClassName} span.codicon { line-height: ${codeLensHeight}px; font-size: ${fontSize}px; }
		`;
        if (fontFamily) newStyle += `.monaco-editor .codelens-decoration.${this._styleClassName} { font-family: var(${fontFamilyVar}), ${$cd4KD.EDITOR_FONT_DEFAULTS.fontFamily}}`;
        this._styleElement.textContent = newStyle;
        this._editor.getContainerDomNode().style.setProperty(fontFamilyVar, fontFamily !== null && fontFamily !== void 0 ? fontFamily : 'inherit');
        this._editor.getContainerDomNode().style.setProperty(fontFeaturesVar, editorFontInfo.fontFeatureSettings);
        //
        this._editor.changeViewZones((accessor)=>{
            for (let lens of this._lenses)lens.updateHeight(codeLensHeight, accessor);
        });
    }
    _localDispose() {
        var _a, _b, _c;
        (_a = this._getCodeLensModelPromise) === null || _a === void 0 || _a.cancel();
        this._getCodeLensModelPromise = undefined;
        (_b = this._resolveCodeLensesPromise) === null || _b === void 0 || _b.cancel();
        this._resolveCodeLensesPromise = undefined;
        this._localToDispose.clear();
        this._oldCodeLensModels.clear();
        (_c = this._currentCodeLensModel) === null || _c === void 0 || _c.dispose();
    }
    _onModelChange() {
        this._localDispose();
        const model = this._editor.getModel();
        if (!model) return;
        if (!this._editor.getOption(14 /* codeLens */ )) return;
        const cachedLenses = this._codeLensCache.get(model);
        if (cachedLenses) this._renderCodeLensSymbols(cachedLenses);
        if (!$4PmRQ.CodeLensProviderRegistry.has(model)) {
            // no provider -> return but check with
            // cached lenses. they expire after 30 seconds
            if (cachedLenses) this._localToDispose.add($6bXyA.disposableTimeout(()=>{
                const cachedLensesNow = this._codeLensCache.get(model);
                if (cachedLenses === cachedLensesNow) {
                    this._codeLensCache.delete(model);
                    this._onModelChange();
                }
            }, 30000));
            return;
        }
        for (const provider of $4PmRQ.CodeLensProviderRegistry.all(model))if (typeof provider.onDidChange === 'function') {
            let registration = provider.onDidChange(()=>scheduler.schedule()
            );
            this._localToDispose.add(registration);
        }
        const scheduler = new $6bXyA.RunOnceScheduler(()=>{
            var _a;
            const t1 = Date.now();
            (_a = this._getCodeLensModelPromise) === null || _a === void 0 || _a.cancel();
            this._getCodeLensModelPromise = $6bXyA.createCancelablePromise((token)=>$873d24acc4f2a9e6$exports.getCodeLensModel(model, token)
            );
            this._getCodeLensModelPromise.then((result)=>{
                if (this._currentCodeLensModel) this._oldCodeLensModels.add(this._currentCodeLensModel);
                this._currentCodeLensModel = result;
                // cache model to reduce flicker
                this._codeLensCache.put(model, result);
                // update moving average
                const newDelay = this._getCodeLensModelDelays.update(model, Date.now() - t1);
                scheduler.delay = newDelay;
                // render lenses
                this._renderCodeLensSymbols(result);
                // dom.scheduleAtNextAnimationFrame(() => this._resolveCodeLensesInViewport());
                this._resolveCodeLensesInViewportSoon();
            }, $gPkHZ.onUnexpectedError);
        }, this._getCodeLensModelDelays.get(model));
        this._localToDispose.add(scheduler);
        this._localToDispose.add($9cWcn.toDisposable(()=>this._resolveCodeLensesScheduler.cancel()
        ));
        this._localToDispose.add(this._editor.onDidChangeModelContent(()=>{
            this._editor.changeDecorations((decorationsAccessor)=>{
                this._editor.changeViewZones((viewZonesAccessor)=>{
                    let toDispose = [];
                    let lastLensLineNumber = -1;
                    this._lenses.forEach((lens)=>{
                        if (!lens.isValid() || lastLensLineNumber === lens.getLineNumber()) // invalid -> lens collapsed, attach range doesn't exist anymore
                        // line_number -> lenses should never be on the same line
                        toDispose.push(lens);
                        else {
                            lens.update(viewZonesAccessor);
                            lastLensLineNumber = lens.getLineNumber();
                        }
                    });
                    let helper = new $052e9ff4b6c9e1d0$export$76bdebf29cc4b59e();
                    toDispose.forEach((l)=>{
                        l.dispose(helper, viewZonesAccessor);
                        this._lenses.splice(this._lenses.indexOf(l), 1);
                    });
                    helper.commit(decorationsAccessor);
                });
            });
            // Ask for all references again
            scheduler.schedule();
        }));
        this._localToDispose.add(this._editor.onDidFocusEditorWidget(()=>{
            scheduler.schedule();
        }));
        this._localToDispose.add(this._editor.onDidScrollChange((e)=>{
            if (e.scrollTopChanged && this._lenses.length > 0) this._resolveCodeLensesInViewportSoon();
        }));
        this._localToDispose.add(this._editor.onDidLayoutChange(()=>{
            this._resolveCodeLensesInViewportSoon();
        }));
        this._localToDispose.add($9cWcn.toDisposable(()=>{
            if (this._editor.getModel()) {
                const scrollState = $r7siU.StableEditorScrollState.capture(this._editor);
                this._editor.changeDecorations((decorationsAccessor)=>{
                    this._editor.changeViewZones((viewZonesAccessor)=>{
                        this._disposeAllLenses(decorationsAccessor, viewZonesAccessor);
                    });
                });
                scrollState.restore(this._editor);
            } else // No accessors available
            this._disposeAllLenses(undefined, undefined);
        }));
        this._localToDispose.add(this._editor.onMouseDown((e)=>{
            if (e.target.type !== 9 /* CONTENT_WIDGET */ ) return;
            let target = e.target.element;
            if ((target === null || target === void 0 ? void 0 : target.tagName) === 'SPAN') target = target.parentElement;
            if ((target === null || target === void 0 ? void 0 : target.tagName) === 'A') for (const lens of this._lenses){
                let command = lens.getCommand(target);
                if (command) {
                    this._commandService.executeCommand(command.id, ...command.arguments || []).catch((err)=>this._notificationService.error(err)
                    );
                    break;
                }
            }
        }));
        scheduler.schedule();
    }
    _disposeAllLenses(decChangeAccessor, viewZoneChangeAccessor) {
        const helper = new $052e9ff4b6c9e1d0$export$76bdebf29cc4b59e();
        for (const lens of this._lenses)lens.dispose(helper, viewZoneChangeAccessor);
        if (decChangeAccessor) helper.commit(decChangeAccessor);
        this._lenses.length = 0;
    }
    _renderCodeLensSymbols(symbols) {
        if (!this._editor.hasModel()) return;
        let maxLineNumber = this._editor.getModel().getLineCount();
        let groups = [];
        let lastGroup;
        for (let symbol of symbols.lenses){
            let line = symbol.symbol.range.startLineNumber;
            if (line < 1 || line > maxLineNumber) continue;
            else if (lastGroup && lastGroup[lastGroup.length - 1].symbol.range.startLineNumber === line) // on same line as previous
            lastGroup.push(symbol);
            else {
                // on later line as previous
                lastGroup = [
                    symbol
                ];
                groups.push(lastGroup);
            }
        }
        const scrollState = $r7siU.StableEditorScrollState.capture(this._editor);
        const layoutInfo = this._getLayoutInfo();
        this._editor.changeDecorations((decorationsAccessor)=>{
            this._editor.changeViewZones((viewZoneAccessor)=>{
                const helper = new $052e9ff4b6c9e1d0$export$76bdebf29cc4b59e();
                let codeLensIndex = 0;
                let groupsIndex = 0;
                while(groupsIndex < groups.length && codeLensIndex < this._lenses.length){
                    let symbolsLineNumber = groups[groupsIndex][0].symbol.range.startLineNumber;
                    let codeLensLineNumber = this._lenses[codeLensIndex].getLineNumber();
                    if (codeLensLineNumber < symbolsLineNumber) {
                        this._lenses[codeLensIndex].dispose(helper, viewZoneAccessor);
                        this._lenses.splice(codeLensIndex, 1);
                    } else if (codeLensLineNumber === symbolsLineNumber) {
                        this._lenses[codeLensIndex].updateCodeLensSymbols(groups[groupsIndex], helper);
                        groupsIndex++;
                        codeLensIndex++;
                    } else {
                        this._lenses.splice(codeLensIndex, 0, new $052e9ff4b6c9e1d0$export$c4760329dfff1b1c(groups[groupsIndex], this._editor, this._styleClassName, helper, viewZoneAccessor, layoutInfo.codeLensHeight, ()=>this._resolveCodeLensesInViewportSoon()
                        ));
                        codeLensIndex++;
                        groupsIndex++;
                    }
                }
                // Delete extra code lenses
                while(codeLensIndex < this._lenses.length){
                    this._lenses[codeLensIndex].dispose(helper, viewZoneAccessor);
                    this._lenses.splice(codeLensIndex, 1);
                }
                // Create extra symbols
                while(groupsIndex < groups.length){
                    this._lenses.push(new $052e9ff4b6c9e1d0$export$c4760329dfff1b1c(groups[groupsIndex], this._editor, this._styleClassName, helper, viewZoneAccessor, layoutInfo.codeLensHeight, ()=>this._resolveCodeLensesInViewportSoon()
                    ));
                    groupsIndex++;
                }
                helper.commit(decorationsAccessor);
            });
        });
        scrollState.restore(this._editor);
    }
    _resolveCodeLensesInViewportSoon() {
        const model = this._editor.getModel();
        if (model) this._resolveCodeLensesScheduler.schedule();
    }
    _resolveCodeLensesInViewport() {
        var _a;
        (_a = this._resolveCodeLensesPromise) === null || _a === void 0 || _a.cancel();
        this._resolveCodeLensesPromise = undefined;
        const model = this._editor.getModel();
        if (!model) return;
        const toResolve = [];
        const lenses = [];
        this._lenses.forEach((lens)=>{
            const request = lens.computeIfNecessary(model);
            if (request) {
                toResolve.push(request);
                lenses.push(lens);
            }
        });
        if (toResolve.length === 0) return;
        const t1 = Date.now();
        const resolvePromise = $6bXyA.createCancelablePromise((token)=>{
            const promises1 = toResolve.map((request1, i1)=>{
                const resolvedSymbols = new Array(request1.length);
                const promises = request1.map((request, i)=>{
                    if (!request.symbol.command && typeof request.provider.resolveCodeLens === 'function') return Promise.resolve(request.provider.resolveCodeLens(model, request.symbol, token)).then((symbol)=>{
                        resolvedSymbols[i] = symbol;
                    }, $gPkHZ.onUnexpectedExternalError);
                    else {
                        resolvedSymbols[i] = request.symbol;
                        return Promise.resolve(undefined);
                    }
                });
                return Promise.all(promises).then(()=>{
                    if (!token.isCancellationRequested && !lenses[i1].isDisposed()) lenses[i1].updateCommands(resolvedSymbols);
                });
            });
            return Promise.all(promises1);
        });
        this._resolveCodeLensesPromise = resolvePromise;
        this._resolveCodeLensesPromise.then(()=>{
            // update moving average
            const newDelay = this._resolveCodeLensesDelays.update(model, Date.now() - t1);
            this._resolveCodeLensesScheduler.delay = newDelay;
            if (this._currentCodeLensModel) this._codeLensCache.put(model, this._currentCodeLensModel);
            this._oldCodeLensModels.clear(); // dispose old models once we have updated the UI with the current model
            if (resolvePromise === this._resolveCodeLensesPromise) this._resolveCodeLensesPromise = undefined;
        }, (err)=>{
            $gPkHZ.onUnexpectedError(err); // can also be cancellation!
            if (resolvePromise === this._resolveCodeLensesPromise) this._resolveCodeLensesPromise = undefined;
        });
    }
    getLenses() {
        return this._lenses;
    }
};
$a50c4cf8d163a383$export$2ad2fe275c1424ff.ID = 'css.editor.codeLens';
$a50c4cf8d163a383$export$2ad2fe275c1424ff = $a50c4cf8d163a383$var$__decorate([
    $a50c4cf8d163a383$var$__param(1, $8tcMz.ICommandService),
    $a50c4cf8d163a383$var$__param(2, $kCOKl.INotificationService),
    $a50c4cf8d163a383$var$__param(3, $c00cf726eee84224$exports.ICodeLensCache)
], $a50c4cf8d163a383$export$2ad2fe275c1424ff);
$2iJTi.registerEditorContribution($a50c4cf8d163a383$export$2ad2fe275c1424ff.ID, $a50c4cf8d163a383$export$2ad2fe275c1424ff);
$2iJTi.registerEditorAction(class ShowLensesInCurrentLine extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: 'codelens.showLensesInCurrentLine',
            precondition: $ibKGQ.EditorContextKeys.hasCodeLensProvider,
            label: $4dEdH.localize('showLensOnLine', "Show CodeLens Commands For Current Line"),
            alias: 'Show CodeLens Commands For Current Line'
        });
    }
    run(accessor, editor) {
        return $a50c4cf8d163a383$var$__awaiter(this, void 0, void 0, function*() {
            if (!editor.hasModel()) return;
            const quickInputService = accessor.get($3XkzC.IQuickInputService);
            const commandService = accessor.get($8tcMz.ICommandService);
            const notificationService = accessor.get($kCOKl.INotificationService);
            const lineNumber = editor.getSelection().positionLineNumber;
            const codelensController = editor.getContribution($a50c4cf8d163a383$export$2ad2fe275c1424ff.ID);
            const items = [];
            for (let lens of codelensController.getLenses()){
                if (lens.getLineNumber() === lineNumber) for (let item of lens.getItems()){
                    const { command: command  } = item.symbol;
                    if (command) items.push({
                        label: command.title,
                        command: command
                    });
                }
            }
            if (items.length === 0) // We dont want an empty picker
            return;
            const item = yield quickInputService.pick(items, {
                canPickMany: false
            });
            if (!item) // Nothing picked
            return;
            try {
                yield commandService.executeCommand(item.command.id, ...item.command.arguments || []);
            } catch (err) {
                notificationService.error(err);
            }
        });
    }
});



var $9cWcn = parcelRequire("9cWcn");

var $2iJTi = parcelRequire("2iJTi");

var $d00il = parcelRequire("d00il");
var $01b7de2658dc2e72$exports = {};

$parcel$export($01b7de2658dc2e72$exports, "ColorDetector", () => $01b7de2658dc2e72$export$267b3b1876bfdb86, (v) => $01b7de2658dc2e72$export$267b3b1876bfdb86 = v);

var $6bXyA = parcelRequire("6bXyA");

var $bjjQO = parcelRequire("bjjQO");

var $gPkHZ = parcelRequire("gPkHZ");

var $9cWcn = parcelRequire("9cWcn");

var $jcr1R = parcelRequire("jcr1R");

var $loznH = parcelRequire("loznH");

var $2iJTi = parcelRequire("2iJTi");

var $d00il = parcelRequire("d00il");

var $91ntV = parcelRequire("91ntV");

var $4PmRQ = parcelRequire("4PmRQ");

var $giPcZ = parcelRequire("giPcZ");

var $gPkHZ = parcelRequire("gPkHZ");

var $5OJ54 = parcelRequire("5OJ54");

var $d00il = parcelRequire("d00il");

var $4PmRQ = parcelRequire("4PmRQ");

var $15EOE = parcelRequire("15EOE");

var $8tcMz = parcelRequire("8tcMz");
function $2cc4a5ad460eb87d$export$6cee60e8aa85e528(model, token) {
    const colors = [];
    const providers = $4PmRQ.ColorProviderRegistry.ordered(model).reverse();
    const promises = providers.map((provider)=>Promise.resolve(provider.provideDocumentColors(model, token)).then((result)=>{
            if (Array.isArray(result)) for (let colorInfo of result)colors.push({
                colorInfo: colorInfo,
                provider: provider
            });
        })
    );
    return Promise.all(promises).then(()=>colors
    );
}
function $2cc4a5ad460eb87d$export$c3064c7f8ffdbaa5(model, colorInfo, provider, token) {
    return Promise.resolve(provider.provideColorPresentations(model, colorInfo, token));
}
$8tcMz.CommandsRegistry.registerCommand('_executeDocumentColorProvider', function(accessor, ...args) {
    const [resource] = args;
    if (!(resource instanceof $5OJ54.URI)) throw $gPkHZ.illegalArgument();
    const model = accessor.get($15EOE.IModelService).getModel(resource);
    if (!model) throw $gPkHZ.illegalArgument();
    const rawCIs = [];
    const providers = $4PmRQ.ColorProviderRegistry.ordered(model).reverse();
    const promises = providers.map((provider)=>Promise.resolve(provider.provideDocumentColors(model, $giPcZ.CancellationToken.None)).then((result)=>{
            if (Array.isArray(result)) for (let ci of result)rawCIs.push({
                range: ci.range,
                color: [
                    ci.color.red,
                    ci.color.green,
                    ci.color.blue,
                    ci.color.alpha
                ]
            });
        })
    );
    return Promise.all(promises).then(()=>rawCIs
    );
});
$8tcMz.CommandsRegistry.registerCommand('_executeColorPresentationProvider', function(accessor, ...args) {
    const [color, context] = args;
    const { uri: uri , range: range  } = context;
    if (!(uri instanceof $5OJ54.URI) || !Array.isArray(color) || color.length !== 4 || !$d00il.Range.isIRange(range)) throw $gPkHZ.illegalArgument();
    const [red, green, blue, alpha] = color;
    const model = accessor.get($15EOE.IModelService).getModel(uri);
    if (!model) throw $gPkHZ.illegalArgument();
    const colorInfo = {
        range: range,
        color: {
            red: red,
            green: green,
            blue: blue,
            alpha: alpha
        }
    };
    const presentations = [];
    const providers = $4PmRQ.ColorProviderRegistry.ordered(model).reverse();
    const promises = providers.map((provider)=>Promise.resolve(provider.provideColorPresentations(model, colorInfo, $giPcZ.CancellationToken.None)).then((result)=>{
            if (Array.isArray(result)) presentations.push(...result);
        })
    );
    return Promise.all(promises).then(()=>presentations
    );
});



var $35IZ9 = parcelRequire("35IZ9");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $01b7de2658dc2e72$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var $01b7de2658dc2e72$var$__param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
};
const $01b7de2658dc2e72$var$MAX_DECORATORS = 500;
let $01b7de2658dc2e72$export$267b3b1876bfdb86 = class $01b7de2658dc2e72$export$267b3b1876bfdb86 extends $9cWcn.Disposable {
    constructor(_editor, _configurationService){
        super();
        this._editor = _editor;
        this._configurationService = _configurationService;
        this._localToDispose = this._register(new $9cWcn.DisposableStore());
        this._decorationsIds = [];
        this._colorDatas = new Map();
        this._colorDecoratorIds = new Set();
        this._ruleFactory = new $loznH.DynamicCssRules(this._editor);
        this._colorDecorationClassRefs = this._register(new $9cWcn.DisposableStore());
        this._register(_editor.onDidChangeModel(()=>{
            this._isEnabled = this.isEnabled();
            this.onModelChanged();
        }));
        this._register(_editor.onDidChangeModelLanguage(()=>this.onModelChanged()
        ));
        this._register($4PmRQ.ColorProviderRegistry.onDidChange(()=>this.onModelChanged()
        ));
        this._register(_editor.onDidChangeConfiguration(()=>{
            let prevIsEnabled = this._isEnabled;
            this._isEnabled = this.isEnabled();
            if (prevIsEnabled !== this._isEnabled) {
                if (this._isEnabled) this.onModelChanged();
                else this.removeAllDecorations();
            }
        }));
        this._timeoutTimer = null;
        this._computePromise = null;
        this._isEnabled = this.isEnabled();
        this.onModelChanged();
    }
    isEnabled() {
        const model = this._editor.getModel();
        if (!model) return false;
        const languageId = model.getLanguageId();
        // handle deprecated settings. [languageId].colorDecorators.enable
        const deprecatedConfig = this._configurationService.getValue(languageId);
        if (deprecatedConfig && typeof deprecatedConfig === 'object') {
            const colorDecorators = deprecatedConfig['colorDecorators']; // deprecatedConfig.valueOf('.colorDecorators.enable');
            if (colorDecorators && colorDecorators['enable'] !== undefined && !colorDecorators['enable']) return colorDecorators['enable'];
        }
        return this._editor.getOption(17 /* colorDecorators */ );
    }
    static get(editor) {
        return editor.getContribution(this.ID);
    }
    dispose() {
        this.stop();
        this.removeAllDecorations();
        super.dispose();
    }
    onModelChanged() {
        this.stop();
        if (!this._isEnabled) return;
        const model = this._editor.getModel();
        if (!model || !$4PmRQ.ColorProviderRegistry.has(model)) return;
        this._localToDispose.add(this._editor.onDidChangeModelContent(()=>{
            if (!this._timeoutTimer) {
                this._timeoutTimer = new $6bXyA.TimeoutTimer();
                this._timeoutTimer.cancelAndSet(()=>{
                    this._timeoutTimer = null;
                    this.beginCompute();
                }, $01b7de2658dc2e72$export$267b3b1876bfdb86.RECOMPUTE_TIME);
            }
        }));
        this.beginCompute();
    }
    beginCompute() {
        this._computePromise = $6bXyA.createCancelablePromise((token)=>{
            const model = this._editor.getModel();
            if (!model) return Promise.resolve([]);
            return $2cc4a5ad460eb87d$export$6cee60e8aa85e528(model, token);
        });
        this._computePromise.then((colorInfos)=>{
            this.updateDecorations(colorInfos);
            this.updateColorDecorators(colorInfos);
            this._computePromise = null;
        }, $gPkHZ.onUnexpectedError);
    }
    stop() {
        if (this._timeoutTimer) {
            this._timeoutTimer.cancel();
            this._timeoutTimer = null;
        }
        if (this._computePromise) {
            this._computePromise.cancel();
            this._computePromise = null;
        }
        this._localToDispose.clear();
    }
    updateDecorations(colorDatas) {
        const decorations = colorDatas.map((c)=>({
                range: {
                    startLineNumber: c.colorInfo.range.startLineNumber,
                    startColumn: c.colorInfo.range.startColumn,
                    endLineNumber: c.colorInfo.range.endLineNumber,
                    endColumn: c.colorInfo.range.endColumn
                },
                options: $91ntV.ModelDecorationOptions.EMPTY
            })
        );
        this._decorationsIds = this._editor.deltaDecorations(this._decorationsIds, decorations);
        this._colorDatas = new Map();
        this._decorationsIds.forEach((id, i)=>this._colorDatas.set(id, colorDatas[i])
        );
    }
    updateColorDecorators(colorData) {
        this._colorDecorationClassRefs.clear();
        let decorations = [];
        for(let i = 0; i < colorData.length && decorations.length < $01b7de2658dc2e72$var$MAX_DECORATORS; i++){
            const { red: red , green: green , blue: blue , alpha: alpha  } = colorData[i].colorInfo.color;
            const rgba = new $bjjQO.RGBA(Math.round(red * 255), Math.round(green * 255), Math.round(blue * 255), alpha);
            let color = `rgba(${rgba.r}, ${rgba.g}, ${rgba.b}, ${rgba.a})`;
            const ref = this._colorDecorationClassRefs.add(this._ruleFactory.createClassNameRef({
                backgroundColor: color
            }));
            decorations.push({
                range: {
                    startLineNumber: colorData[i].colorInfo.range.startLineNumber,
                    startColumn: colorData[i].colorInfo.range.startColumn,
                    endLineNumber: colorData[i].colorInfo.range.endLineNumber,
                    endColumn: colorData[i].colorInfo.range.endColumn
                },
                options: {
                    description: 'colorDetector',
                    before: {
                        content: $jcr1R.noBreakWhitespace,
                        inlineClassName: `${ref.className} colorpicker-color-decoration`,
                        inlineClassNameAffectsLetterSpacing: true
                    }
                }
            });
        }
        this._colorDecoratorIds = new Set(this._editor.deltaDecorations([
            ...this._colorDecoratorIds
        ], decorations));
    }
    removeAllDecorations() {
        this._decorationsIds = this._editor.deltaDecorations(this._decorationsIds, []);
        this._colorDecoratorIds = new Set(this._editor.deltaDecorations([
            ...this._colorDecoratorIds
        ], []));
        this._colorDecorationClassRefs.clear();
    }
    getColorData(position) {
        const model = this._editor.getModel();
        if (!model) return null;
        const decorations = model.getDecorationsInRange($d00il.Range.fromPositions(position, position)).filter((d)=>this._colorDatas.has(d.id)
        );
        if (decorations.length === 0) return null;
        return this._colorDatas.get(decorations[0].id);
    }
    isColorDecorationId(decorationId) {
        return this._colorDecoratorIds.has(decorationId);
    }
};
$01b7de2658dc2e72$export$267b3b1876bfdb86.ID = 'editor.contrib.colorDetector';
$01b7de2658dc2e72$export$267b3b1876bfdb86.RECOMPUTE_TIME = 1000; // ms
$01b7de2658dc2e72$export$267b3b1876bfdb86 = $01b7de2658dc2e72$var$__decorate([
    $01b7de2658dc2e72$var$__param(1, $35IZ9.IConfigurationService)
], $01b7de2658dc2e72$export$267b3b1876bfdb86);
$2iJTi.registerEditorContribution($01b7de2658dc2e72$export$267b3b1876bfdb86.ID, $01b7de2658dc2e72$export$267b3b1876bfdb86);


var $2856eeccefbc7426$exports = {};

$parcel$export($2856eeccefbc7426$exports, "ModesHoverController", () => $2856eeccefbc7426$export$5fb2eabf73ef0293, (v) => $2856eeccefbc7426$export$5fb2eabf73ef0293 = v);

var $fuc8X = parcelRequire("fuc8X");

var $9cWcn = parcelRequire("9cWcn");

var $2iJTi = parcelRequire("2iJTi");

var $d00il = parcelRequire("d00il");

var $ibKGQ = parcelRequire("ibKGQ");

var $is5YK = parcelRequire("is5YK");
var $226c3ac84291cb47$exports = {};

$parcel$export($226c3ac84291cb47$exports, "GotoDefinitionAtPositionEditorContribution", () => $226c3ac84291cb47$export$35cdf6493d1302e, (v) => $226c3ac84291cb47$export$35cdf6493d1302e = v);

var $6bXyA = parcelRequire("6bXyA");

var $gPkHZ = parcelRequire("gPkHZ");

var $iGmb0 = parcelRequire("iGmb0");

var $9cWcn = parcelRequire("9cWcn");

var $bxBg7 = parcelRequire("bxBg7");


var $r7siU = parcelRequire("r7siU");

var $2iJTi = parcelRequire("2iJTi");

var $dcxQ7 = parcelRequire("dcxQ7");

var $d00il = parcelRequire("d00il");

var $4PmRQ = parcelRequire("4PmRQ");

var $is5YK = parcelRequire("is5YK");

var $aTkrt = parcelRequire("aTkrt");

var $5YaSO = parcelRequire("5YaSO");

var $9cWcn = parcelRequire("9cWcn");

var $lb0Ah = parcelRequire("lb0Ah");
function $7a43732d8fccb9d5$var$hasModifier(e, modifier) {
    return !!e[modifier];
}
class $7a43732d8fccb9d5$export$69f99c1197f68370 {
    constructor(source, opts){
        this.target = source.target;
        this.hasTriggerModifier = $7a43732d8fccb9d5$var$hasModifier(source.event, opts.triggerModifier);
        this.hasSideBySideModifier = $7a43732d8fccb9d5$var$hasModifier(source.event, opts.triggerSideBySideModifier);
        this.isNoneOrSingleMouseDown = source.event.detail <= 1;
    }
}
class $7a43732d8fccb9d5$export$40b9eb22d04cd705 {
    constructor(source, opts){
        this.keyCodeIsTriggerKey = source.keyCode === opts.triggerKey;
        this.keyCodeIsSideBySideKey = source.keyCode === opts.triggerSideBySideKey;
        this.hasTriggerModifier = $7a43732d8fccb9d5$var$hasModifier(source, opts.triggerModifier);
    }
}
class $7a43732d8fccb9d5$export$17acd7002e6c5cb3 {
    constructor(triggerKey, triggerModifier, triggerSideBySideKey, triggerSideBySideModifier){
        this.triggerKey = triggerKey;
        this.triggerModifier = triggerModifier;
        this.triggerSideBySideKey = triggerSideBySideKey;
        this.triggerSideBySideModifier = triggerSideBySideModifier;
    }
    equals(other) {
        return this.triggerKey === other.triggerKey && this.triggerModifier === other.triggerModifier && this.triggerSideBySideKey === other.triggerSideBySideKey && this.triggerSideBySideModifier === other.triggerSideBySideModifier;
    }
}
function $7a43732d8fccb9d5$var$createOptions(multiCursorModifier) {
    if (multiCursorModifier === 'altKey') {
        if ($lb0Ah.isMacintosh) return new $7a43732d8fccb9d5$export$17acd7002e6c5cb3(57 /* Meta */ , 'metaKey', 6 /* Alt */ , 'altKey');
        return new $7a43732d8fccb9d5$export$17acd7002e6c5cb3(5 /* Ctrl */ , 'ctrlKey', 6 /* Alt */ , 'altKey');
    }
    if ($lb0Ah.isMacintosh) return new $7a43732d8fccb9d5$export$17acd7002e6c5cb3(6 /* Alt */ , 'altKey', 57 /* Meta */ , 'metaKey');
    return new $7a43732d8fccb9d5$export$17acd7002e6c5cb3(6 /* Alt */ , 'altKey', 5 /* Ctrl */ , 'ctrlKey');
}
class $7a43732d8fccb9d5$export$e5a83b5c609cb4bb extends $9cWcn.Disposable {
    constructor(editor){
        super();
        this._onMouseMoveOrRelevantKeyDown = this._register(new $5YaSO.Emitter());
        this.onMouseMoveOrRelevantKeyDown = this._onMouseMoveOrRelevantKeyDown.event;
        this._onExecute = this._register(new $5YaSO.Emitter());
        this.onExecute = this._onExecute.event;
        this._onCancel = this._register(new $5YaSO.Emitter());
        this.onCancel = this._onCancel.event;
        this._editor = editor;
        this._opts = $7a43732d8fccb9d5$var$createOptions(this._editor.getOption(69 /* multiCursorModifier */ ));
        this._lastMouseMoveEvent = null;
        this._hasTriggerKeyOnMouseDown = false;
        this._lineNumberOnMouseDown = 0;
        this._register(this._editor.onDidChangeConfiguration((e)=>{
            if (e.hasChanged(69 /* multiCursorModifier */ )) {
                const newOpts = $7a43732d8fccb9d5$var$createOptions(this._editor.getOption(69 /* multiCursorModifier */ ));
                if (this._opts.equals(newOpts)) return;
                this._opts = newOpts;
                this._lastMouseMoveEvent = null;
                this._hasTriggerKeyOnMouseDown = false;
                this._lineNumberOnMouseDown = 0;
                this._onCancel.fire();
            }
        }));
        this._register(this._editor.onMouseMove((e)=>this._onEditorMouseMove(new $7a43732d8fccb9d5$export$69f99c1197f68370(e, this._opts))
        ));
        this._register(this._editor.onMouseDown((e)=>this._onEditorMouseDown(new $7a43732d8fccb9d5$export$69f99c1197f68370(e, this._opts))
        ));
        this._register(this._editor.onMouseUp((e)=>this._onEditorMouseUp(new $7a43732d8fccb9d5$export$69f99c1197f68370(e, this._opts))
        ));
        this._register(this._editor.onKeyDown((e)=>this._onEditorKeyDown(new $7a43732d8fccb9d5$export$40b9eb22d04cd705(e, this._opts))
        ));
        this._register(this._editor.onKeyUp((e)=>this._onEditorKeyUp(new $7a43732d8fccb9d5$export$40b9eb22d04cd705(e, this._opts))
        ));
        this._register(this._editor.onMouseDrag(()=>this._resetHandler()
        ));
        this._register(this._editor.onDidChangeCursorSelection((e)=>this._onDidChangeCursorSelection(e)
        ));
        this._register(this._editor.onDidChangeModel((e)=>this._resetHandler()
        ));
        this._register(this._editor.onDidChangeModelContent(()=>this._resetHandler()
        ));
        this._register(this._editor.onDidScrollChange((e)=>{
            if (e.scrollTopChanged || e.scrollLeftChanged) this._resetHandler();
        }));
    }
    _onDidChangeCursorSelection(e) {
        if (e.selection && e.selection.startColumn !== e.selection.endColumn) this._resetHandler(); // immediately stop this feature if the user starts to select (https://github.com/microsoft/vscode/issues/7827)
    }
    _onEditorMouseMove(mouseEvent) {
        this._lastMouseMoveEvent = mouseEvent;
        this._onMouseMoveOrRelevantKeyDown.fire([
            mouseEvent,
            null
        ]);
    }
    _onEditorMouseDown(mouseEvent) {
        // We need to record if we had the trigger key on mouse down because someone might select something in the editor
        // holding the mouse down and then while mouse is down start to press Ctrl/Cmd to start a copy operation and then
        // release the mouse button without wanting to do the navigation.
        // With this flag we prevent goto definition if the mouse was down before the trigger key was pressed.
        this._hasTriggerKeyOnMouseDown = mouseEvent.hasTriggerModifier;
        this._lineNumberOnMouseDown = mouseEvent.target.position ? mouseEvent.target.position.lineNumber : 0;
    }
    _onEditorMouseUp(mouseEvent) {
        const currentLineNumber = mouseEvent.target.position ? mouseEvent.target.position.lineNumber : 0;
        if (this._hasTriggerKeyOnMouseDown && this._lineNumberOnMouseDown && this._lineNumberOnMouseDown === currentLineNumber) this._onExecute.fire(mouseEvent);
    }
    _onEditorKeyDown(e) {
        if (this._lastMouseMoveEvent && (e.keyCodeIsTriggerKey // User just pressed Ctrl/Cmd (normal goto definition)
         || e.keyCodeIsSideBySideKey && e.hasTriggerModifier // User pressed Ctrl/Cmd+Alt (goto definition to the side)
        )) this._onMouseMoveOrRelevantKeyDown.fire([
            this._lastMouseMoveEvent,
            e
        ]);
        else if (e.hasTriggerModifier) this._onCancel.fire(); // remove decorations if user holds another key with ctrl/cmd to prevent accident goto declaration
    }
    _onEditorKeyUp(e) {
        if (e.keyCodeIsTriggerKey) this._onCancel.fire();
    }
    _resetHandler() {
        this._lastMouseMoveEvent = null;
        this._hasTriggerKeyOnMouseDown = false;
        this._onCancel.fire();
    }
}


var $f45c93015d251d27$exports = {};

$parcel$export($f45c93015d251d27$exports, "IPeekViewService", () => $f45c93015d251d27$export$8277d1187e5db7d6, (v) => $f45c93015d251d27$export$8277d1187e5db7d6 = v);
$parcel$export($f45c93015d251d27$exports, "PeekContext", () => $f45c93015d251d27$export$5afd50a7c05ff96a, (v) => $f45c93015d251d27$export$5afd50a7c05ff96a = v);
$parcel$export($f45c93015d251d27$exports, "getOuterEditor", () => $f45c93015d251d27$export$434a98f74be8c7b9, (v) => $f45c93015d251d27$export$434a98f74be8c7b9 = v);
$parcel$export($f45c93015d251d27$exports, "PeekViewWidget", () => $f45c93015d251d27$export$85acc0ce60f75b9f, (v) => $f45c93015d251d27$export$85acc0ce60f75b9f = v);
$parcel$export($f45c93015d251d27$exports, "peekViewTitleBackground", () => $f45c93015d251d27$export$b1e2a843606aa53d, (v) => $f45c93015d251d27$export$b1e2a843606aa53d = v);
$parcel$export($f45c93015d251d27$exports, "peekViewTitleForeground", () => $f45c93015d251d27$export$5f7b8e8b47f91ad3, (v) => $f45c93015d251d27$export$5f7b8e8b47f91ad3 = v);
$parcel$export($f45c93015d251d27$exports, "peekViewTitleInfoForeground", () => $f45c93015d251d27$export$cdda5f1c5d2481c1, (v) => $f45c93015d251d27$export$cdda5f1c5d2481c1 = v);
$parcel$export($f45c93015d251d27$exports, "peekViewBorder", () => $f45c93015d251d27$export$2d4f038d18170ad2, (v) => $f45c93015d251d27$export$2d4f038d18170ad2 = v);
$parcel$export($f45c93015d251d27$exports, "peekViewResultsBackground", () => $f45c93015d251d27$export$84f26812d83dda36, (v) => $f45c93015d251d27$export$84f26812d83dda36 = v);

var $bDzmQ = parcelRequire("bDzmQ");

var $czr0Q = parcelRequire("czr0Q");

var $cVfMQ = parcelRequire("cVfMQ");

var $awgRE = parcelRequire("awgRE");

var $bjjQO = parcelRequire("bjjQO");

var $5YaSO = parcelRequire("5YaSO");

var $7w8Da = parcelRequire("7w8Da");


var $2iJTi = parcelRequire("2iJTi");

var $2Qfl0 = parcelRequire("2Qfl0");
var $998bf45916d8a6ec$exports = {};

$parcel$export($998bf45916d8a6ec$exports, "EmbeddedCodeEditorWidget", () => $998bf45916d8a6ec$export$3c7efbd913d316d0, (v) => $998bf45916d8a6ec$export$3c7efbd913d316d0 = v);

var $7w8Da = parcelRequire("7w8Da");

var $2Qfl0 = parcelRequire("2Qfl0");

var $kdjz4 = parcelRequire("kdjz4");

var $8tcMz = parcelRequire("8tcMz");

var $cxCeF = parcelRequire("cxCeF");

var $fdGPu = parcelRequire("fdGPu");

var $kCOKl = parcelRequire("kCOKl");

var $azIPz = parcelRequire("azIPz");

var $gjaQN = parcelRequire("gjaQN");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $998bf45916d8a6ec$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var $998bf45916d8a6ec$var$__param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
};
let $998bf45916d8a6ec$export$3c7efbd913d316d0 = class $998bf45916d8a6ec$export$3c7efbd913d316d0 extends $kdjz4.CodeEditorWidget {
    constructor(domElement, options, parentEditor, instantiationService, codeEditorService, commandService, contextKeyService, themeService, notificationService, accessibilityService){
        super(domElement, Object.assign(Object.assign({}, parentEditor.getRawOptions()), {
            overflowWidgetsDomNode: parentEditor.getOverflowWidgetsDomNode()
        }), {}, instantiationService, codeEditorService, commandService, contextKeyService, themeService, notificationService, accessibilityService);
        this._parentEditor = parentEditor;
        this._overwriteOptions = options;
        // Overwrite parent's options
        super.updateOptions(this._overwriteOptions);
        this._register(parentEditor.onDidChangeConfiguration((e)=>this._onParentConfigurationChanged(e)
        ));
    }
    getParentEditor() {
        return this._parentEditor;
    }
    _onParentConfigurationChanged(e) {
        super.updateOptions(this._parentEditor.getRawOptions());
        super.updateOptions(this._overwriteOptions);
    }
    updateOptions(newOptions) {
        $7w8Da.mixin(this._overwriteOptions, newOptions, true);
        super.updateOptions(this._overwriteOptions);
    }
};
$998bf45916d8a6ec$export$3c7efbd913d316d0 = $998bf45916d8a6ec$var$__decorate([
    $998bf45916d8a6ec$var$__param(3, $fdGPu.IInstantiationService),
    $998bf45916d8a6ec$var$__param(4, $2Qfl0.ICodeEditorService),
    $998bf45916d8a6ec$var$__param(5, $8tcMz.ICommandService),
    $998bf45916d8a6ec$var$__param(6, $cxCeF.IContextKeyService),
    $998bf45916d8a6ec$var$__param(7, $azIPz.IThemeService),
    $998bf45916d8a6ec$var$__param(8, $kCOKl.INotificationService),
    $998bf45916d8a6ec$var$__param(9, $gjaQN.IAccessibilityService)
], $998bf45916d8a6ec$export$3c7efbd913d316d0);



var $bDzmQ = parcelRequire("bDzmQ");

var $9lxpu = parcelRequire("9lxpu");

var $bjjQO = parcelRequire("bjjQO");

var $nKTlZ = parcelRequire("nKTlZ");

var $9cWcn = parcelRequire("9cWcn");

var $7w8Da = parcelRequire("7w8Da");


var $d00il = parcelRequire("d00il");

var $91ntV = parcelRequire("91ntV");
const $26ccd8585e87abef$var$defaultColor = new $bjjQO.Color(new $bjjQO.RGBA(0, 122, 204));
const $26ccd8585e87abef$var$defaultOptions = {
    showArrow: true,
    showFrame: true,
    className: '',
    frameColor: $26ccd8585e87abef$var$defaultColor,
    arrowColor: $26ccd8585e87abef$var$defaultColor,
    keepEditorSelection: false
};
const $26ccd8585e87abef$var$WIDGET_ID = 'vs.editor.contrib.zoneWidget';
class $26ccd8585e87abef$export$4ca7b154cb5b1d8d {
    constructor(domNode, afterLineNumber, afterColumn, heightInLines, onDomNodeTop, onComputedHeight){
        this.id = ''; // A valid zone id should be greater than 0
        this.domNode = domNode;
        this.afterLineNumber = afterLineNumber;
        this.afterColumn = afterColumn;
        this.heightInLines = heightInLines;
        this._onDomNodeTop = onDomNodeTop;
        this._onComputedHeight = onComputedHeight;
    }
    onDomNodeTop(top) {
        this._onDomNodeTop(top);
    }
    onComputedHeight(height) {
        this._onComputedHeight(height);
    }
}
class $26ccd8585e87abef$export$4f860089b67ba96 {
    constructor(id, domNode){
        this._id = id;
        this._domNode = domNode;
    }
    getId() {
        return this._id;
    }
    getDomNode() {
        return this._domNode;
    }
    getPosition() {
        return null;
    }
}
class $26ccd8585e87abef$var$Arrow {
    constructor(_editor){
        this._editor = _editor;
        this._ruleName = $26ccd8585e87abef$var$Arrow._IdGenerator.nextId();
        this._decorations = [];
        this._color = null;
        this._height = -1;
    //
    }
    dispose() {
        this.hide();
        $bDzmQ.removeCSSRulesContainingSelector(this._ruleName);
    }
    set color(value) {
        if (this._color !== value) {
            this._color = value;
            this._updateStyle();
        }
    }
    set height(value) {
        if (this._height !== value) {
            this._height = value;
            this._updateStyle();
        }
    }
    _updateStyle() {
        $bDzmQ.removeCSSRulesContainingSelector(this._ruleName);
        $bDzmQ.createCSSRule(`.monaco-editor ${this._ruleName}`, `border-style: solid; border-color: transparent; border-bottom-color: ${this._color}; border-width: ${this._height}px; bottom: -${this._height}px; margin-left: -${this._height}px; `);
    }
    show(where) {
        if (where.column === 1) // the arrow isn't pretty at column 1 and we need to push it out a little
        where = {
            lineNumber: where.lineNumber,
            column: 2
        };
        this._decorations = this._editor.deltaDecorations(this._decorations, [
            {
                range: $d00il.Range.fromPositions(where),
                options: {
                    description: 'zone-widget-arrow',
                    className: this._ruleName,
                    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */ 
                }
            }
        ]);
    }
    hide() {
        this._editor.deltaDecorations(this._decorations, []);
    }
}
$26ccd8585e87abef$var$Arrow._IdGenerator = new $nKTlZ.IdGenerator('.arrow-decoration-');
class $26ccd8585e87abef$export$4a50bb71db87eba6 {
    constructor(editor, options = {}){
        this._arrow = null;
        this._overlayWidget = null;
        this._resizeSash = null;
        this._positionMarkerId = [];
        this._viewZone = null;
        this._disposables = new $9cWcn.DisposableStore();
        this.container = null;
        this._isShowing = false;
        this.editor = editor;
        this.options = $7w8Da.deepClone(options);
        $7w8Da.mixin(this.options, $26ccd8585e87abef$var$defaultOptions, false);
        this.domNode = document.createElement('div');
        if (!this.options.isAccessible) {
            this.domNode.setAttribute('aria-hidden', 'true');
            this.domNode.setAttribute('role', 'presentation');
        }
        this._disposables.add(this.editor.onDidLayoutChange((info)=>{
            const width = this._getWidth(info);
            this.domNode.style.width = width + 'px';
            this.domNode.style.left = this._getLeft(info) + 'px';
            this._onWidth(width);
        }));
    }
    dispose() {
        if (this._overlayWidget) {
            this.editor.removeOverlayWidget(this._overlayWidget);
            this._overlayWidget = null;
        }
        if (this._viewZone) this.editor.changeViewZones((accessor)=>{
            if (this._viewZone) accessor.removeZone(this._viewZone.id);
            this._viewZone = null;
        });
        this.editor.deltaDecorations(this._positionMarkerId, []);
        this._positionMarkerId = [];
        this._disposables.dispose();
    }
    create() {
        this.domNode.classList.add('zone-widget');
        if (this.options.className) this.domNode.classList.add(this.options.className);
        this.container = document.createElement('div');
        this.container.classList.add('zone-widget-container');
        this.domNode.appendChild(this.container);
        if (this.options.showArrow) {
            this._arrow = new $26ccd8585e87abef$var$Arrow(this.editor);
            this._disposables.add(this._arrow);
        }
        this._fillContainer(this.container);
        this._initSash();
        this._applyStyles();
    }
    style(styles) {
        if (styles.frameColor) this.options.frameColor = styles.frameColor;
        if (styles.arrowColor) this.options.arrowColor = styles.arrowColor;
        this._applyStyles();
    }
    _applyStyles() {
        if (this.container && this.options.frameColor) {
            let frameColor = this.options.frameColor.toString();
            this.container.style.borderTopColor = frameColor;
            this.container.style.borderBottomColor = frameColor;
        }
        if (this._arrow && this.options.arrowColor) {
            let arrowColor = this.options.arrowColor.toString();
            this._arrow.color = arrowColor;
        }
    }
    _getWidth(info) {
        return info.width - info.minimap.minimapWidth - info.verticalScrollbarWidth;
    }
    _getLeft(info) {
        // If minimap is to the left, we move beyond it
        if (info.minimap.minimapWidth > 0 && info.minimap.minimapLeft === 0) return info.minimap.minimapWidth;
        return 0;
    }
    _onViewZoneTop(top) {
        this.domNode.style.top = top + 'px';
    }
    _onViewZoneHeight(height) {
        this.domNode.style.height = `${height}px`;
        if (this.container) {
            let containerHeight = height - this._decoratingElementsHeight();
            this.container.style.height = `${containerHeight}px`;
            const layoutInfo = this.editor.getLayoutInfo();
            this._doLayout(containerHeight, this._getWidth(layoutInfo));
        }
        if (this._resizeSash) this._resizeSash.layout();
    }
    get position() {
        const [id] = this._positionMarkerId;
        if (!id) return undefined;
        const model = this.editor.getModel();
        if (!model) return undefined;
        const range = model.getDecorationRange(id);
        if (!range) return undefined;
        return range.getStartPosition();
    }
    show(rangeOrPos, heightInLines) {
        const range = $d00il.Range.isIRange(rangeOrPos) ? $d00il.Range.lift(rangeOrPos) : $d00il.Range.fromPositions(rangeOrPos);
        this._isShowing = true;
        this._showImpl(range, heightInLines);
        this._isShowing = false;
        this._positionMarkerId = this.editor.deltaDecorations(this._positionMarkerId, [
            {
                range: range,
                options: $91ntV.ModelDecorationOptions.EMPTY
            }
        ]);
    }
    hide() {
        if (this._viewZone) {
            this.editor.changeViewZones((accessor)=>{
                if (this._viewZone) accessor.removeZone(this._viewZone.id);
            });
            this._viewZone = null;
        }
        if (this._overlayWidget) {
            this.editor.removeOverlayWidget(this._overlayWidget);
            this._overlayWidget = null;
        }
        if (this._arrow) this._arrow.hide();
    }
    _decoratingElementsHeight() {
        let lineHeight = this.editor.getOption(58 /* lineHeight */ );
        let result = 0;
        if (this.options.showArrow) {
            let arrowHeight = Math.round(lineHeight / 3);
            result += 2 * arrowHeight;
        }
        if (this.options.showFrame) {
            let frameThickness = Math.round(lineHeight / 9);
            result += 2 * frameThickness;
        }
        return result;
    }
    _showImpl(where, heightInLines) {
        const position = where.getStartPosition();
        const layoutInfo = this.editor.getLayoutInfo();
        const width = this._getWidth(layoutInfo);
        this.domNode.style.width = `${width}px`;
        this.domNode.style.left = this._getLeft(layoutInfo) + 'px';
        // Render the widget as zone (rendering) and widget (lifecycle)
        const viewZoneDomNode = document.createElement('div');
        viewZoneDomNode.style.overflow = 'hidden';
        const lineHeight = this.editor.getOption(58 /* lineHeight */ );
        // adjust heightInLines to viewport
        const maxHeightInLines = Math.max(12, this.editor.getLayoutInfo().height / lineHeight * 0.8);
        heightInLines = Math.min(heightInLines, maxHeightInLines);
        let arrowHeight = 0;
        let frameThickness = 0;
        // Render the arrow one 1/3 of an editor line height
        if (this._arrow && this.options.showArrow) {
            arrowHeight = Math.round(lineHeight / 3);
            this._arrow.height = arrowHeight;
            this._arrow.show(position);
        }
        // Render the frame as 1/9 of an editor line height
        if (this.options.showFrame) frameThickness = Math.round(lineHeight / 9);
        // insert zone widget
        this.editor.changeViewZones((accessor)=>{
            if (this._viewZone) accessor.removeZone(this._viewZone.id);
            if (this._overlayWidget) {
                this.editor.removeOverlayWidget(this._overlayWidget);
                this._overlayWidget = null;
            }
            this.domNode.style.top = '-1000px';
            this._viewZone = new $26ccd8585e87abef$export$4ca7b154cb5b1d8d(viewZoneDomNode, position.lineNumber, position.column, heightInLines, (top)=>this._onViewZoneTop(top)
            , (height)=>this._onViewZoneHeight(height)
            );
            this._viewZone.id = accessor.addZone(this._viewZone);
            this._overlayWidget = new $26ccd8585e87abef$export$4f860089b67ba96($26ccd8585e87abef$var$WIDGET_ID + this._viewZone.id, this.domNode);
            this.editor.addOverlayWidget(this._overlayWidget);
        });
        if (this.container && this.options.showFrame) {
            const width = this.options.frameWidth ? this.options.frameWidth : frameThickness;
            this.container.style.borderTopWidth = width + 'px';
            this.container.style.borderBottomWidth = width + 'px';
        }
        let containerHeight = heightInLines * lineHeight - this._decoratingElementsHeight();
        if (this.container) {
            this.container.style.top = arrowHeight + 'px';
            this.container.style.height = containerHeight + 'px';
            this.container.style.overflow = 'hidden';
        }
        this._doLayout(containerHeight, width);
        if (!this.options.keepEditorSelection) this.editor.setSelection(where);
        const model = this.editor.getModel();
        if (model) {
            const revealLine = where.endLineNumber + 1;
            if (revealLine <= model.getLineCount()) // reveal line below the zone widget
            this.revealLine(revealLine, false);
            else // reveal last line atop
            this.revealLine(model.getLineCount(), true);
        }
    }
    revealLine(lineNumber, isLastLine) {
        if (isLastLine) this.editor.revealLineInCenter(lineNumber, 0 /* Smooth */ );
        else this.editor.revealLine(lineNumber, 0 /* Smooth */ );
    }
    setCssClass(className, classToReplace) {
        if (!this.container) return;
        if (classToReplace) this.container.classList.remove(classToReplace);
        this.container.classList.add(className);
    }
    _onWidth(widthInPixel) {
    // implement in subclass
    }
    _doLayout(heightInPixel, widthInPixel) {
    // implement in subclass
    }
    _relayout(newHeightInLines) {
        if (this._viewZone && this._viewZone.heightInLines !== newHeightInLines) this.editor.changeViewZones((accessor)=>{
            if (this._viewZone) {
                this._viewZone.heightInLines = newHeightInLines;
                accessor.layoutZone(this._viewZone.id);
            }
        });
    }
    // --- sash
    _initSash() {
        if (this._resizeSash) return;
        this._resizeSash = this._disposables.add(new $9lxpu.Sash(this.domNode, this, {
            orientation: 1 /* HORIZONTAL */ 
        }));
        if (!this.options.isResizeable) this._resizeSash.state = 0 /* Disabled */ ;
        let data;
        this._disposables.add(this._resizeSash.onDidStart((e)=>{
            if (this._viewZone) data = {
                startY: e.startY,
                heightInLines: this._viewZone.heightInLines
            };
        }));
        this._disposables.add(this._resizeSash.onDidEnd(()=>{
            data = undefined;
        }));
        this._disposables.add(this._resizeSash.onDidChange((evt)=>{
            if (data) {
                let lineDelta = (evt.currentY - data.startY) / this.editor.getOption(58 /* lineHeight */ );
                let roundedLineDelta = lineDelta < 0 ? Math.ceil(lineDelta) : Math.floor(lineDelta);
                let newHeightInLines = data.heightInLines + roundedLineDelta;
                if (newHeightInLines > 5 && newHeightInLines < 35) this._relayout(newHeightInLines);
            }
        }));
    }
    getHorizontalSashLeft() {
        return 0;
    }
    getHorizontalSashTop() {
        return (this.domNode.style.height === null ? 0 : parseInt(this.domNode.style.height)) - this._decoratingElementsHeight() / 2;
    }
    getHorizontalSashWidth() {
        const layoutInfo = this.editor.getLayoutInfo();
        return layoutInfo.width - layoutInfo.minimap.minimapWidth;
    }
}



var $4dEdH = parcelRequire("4dEdH");
var $c8327240e537732a$exports = {};

$parcel$export($c8327240e537732a$exports, "createAndFillInActionBarActions", () => $c8327240e537732a$export$3b3f8def22d21768, (v) => $c8327240e537732a$export$3b3f8def22d21768 = v);
$parcel$export($c8327240e537732a$exports, "MenuEntryActionViewItem", () => $c8327240e537732a$export$8606409db23e2e47, (v) => $c8327240e537732a$export$8606409db23e2e47 = v);
$parcel$export($c8327240e537732a$exports, "createActionViewItem", () => $c8327240e537732a$export$9d27065ccc5be4d8, (v) => $c8327240e537732a$export$9d27065ccc5be4d8 = v);

var $bDzmQ = parcelRequire("bDzmQ");

var $gV002 = parcelRequire("gV002");

var $6nSvp = parcelRequire("6nSvp");

var $bDzmQ = parcelRequire("bDzmQ");

var $6nSvp = parcelRequire("6nSvp");

var $bDzmQ = parcelRequire("bDzmQ");

var $gV002 = parcelRequire("gV002");

var $cnAUf = parcelRequire("cnAUf");

var $cVfMQ = parcelRequire("cVfMQ");

var $5YaSO = parcelRequire("5YaSO");

class $18be9dadcd63aca7$export$962ca21a659a1a24 extends $cVfMQ.ActionRunner {
    constructor(container1, options){
        super();
        this._onDidChangeVisibility = this._register(new $5YaSO.Emitter());
        this.onDidChangeVisibility = this._onDidChangeVisibility.event;
        this._element = $bDzmQ.append(container1, $bDzmQ.$('.monaco-dropdown'));
        this._label = $bDzmQ.append(this._element, $bDzmQ.$('.dropdown-label'));
        let labelRenderer = options.labelRenderer;
        if (!labelRenderer) labelRenderer = (container)=>{
            container.textContent = options.label || '';
            return null;
        };
        for (const event2 of [
            $bDzmQ.EventType.CLICK,
            $bDzmQ.EventType.MOUSE_DOWN,
            $cnAUf.EventType.Tap
        ])this._register($bDzmQ.addDisposableListener(this.element, event2, (e)=>$bDzmQ.EventHelper.stop(e, true)
        )); // prevent default click behaviour to trigger
        for (const event1 of [
            $bDzmQ.EventType.MOUSE_DOWN,
            $cnAUf.EventType.Tap
        ])this._register($bDzmQ.addDisposableListener(this._label, event1, (e)=>{
            if (e instanceof MouseEvent && e.detail > 1) return; // prevent multiple clicks to open multiple context menus (https://github.com/microsoft/vscode/issues/41363)
            if (this.visible) this.hide();
            else this.show();
        }));
        this._register($bDzmQ.addDisposableListener(this._label, $bDzmQ.EventType.KEY_UP, (e)=>{
            const event = new $gV002.StandardKeyboardEvent(e);
            if (event.equals(3 /* Enter */ ) || event.equals(10 /* Space */ )) {
                $bDzmQ.EventHelper.stop(e, true); // https://github.com/microsoft/vscode/issues/57997
                if (this.visible) this.hide();
                else this.show();
            }
        }));
        const cleanupFn = labelRenderer(this._label);
        if (cleanupFn) this._register(cleanupFn);
        this._register($cnAUf.Gesture.addTarget(this._label));
    }
    get element() {
        return this._element;
    }
    show() {
        if (!this.visible) {
            this.visible = true;
            this._onDidChangeVisibility.fire(true);
        }
    }
    hide() {
        if (this.visible) {
            this.visible = false;
            this._onDidChangeVisibility.fire(false);
        }
    }
    dispose() {
        super.dispose();
        this.hide();
        if (this.boxContainer) {
            this.boxContainer.remove();
            this.boxContainer = undefined;
        }
        if (this.contents) {
            this.contents.remove();
            this.contents = undefined;
        }
        if (this._label) {
            this._label.remove();
            this._label = undefined;
        }
    }
}
class $18be9dadcd63aca7$export$e44a253a59704894 extends $18be9dadcd63aca7$export$962ca21a659a1a24 {
    constructor(container, options){
        super(container, options);
        this._actions = [];
        this._contextMenuProvider = options.contextMenuProvider;
        this.actions = options.actions || [];
        this.actionProvider = options.actionProvider;
        this.menuClassName = options.menuClassName || '';
        this.menuAsChild = !!options.menuAsChild;
    }
    set menuOptions(options) {
        this._menuOptions = options;
    }
    get menuOptions() {
        return this._menuOptions;
    }
    get actions() {
        if (this.actionProvider) return this.actionProvider.getActions();
        return this._actions;
    }
    set actions(actions) {
        this._actions = actions;
    }
    show() {
        super.show();
        this.element.classList.add('active');
        this._contextMenuProvider.showContextMenu({
            getAnchor: ()=>this.element
            ,
            getActions: ()=>this.actions
            ,
            getActionsContext: ()=>this.menuOptions ? this.menuOptions.context : null
            ,
            getActionViewItem: (action)=>this.menuOptions && this.menuOptions.actionViewItemProvider ? this.menuOptions.actionViewItemProvider(action) : undefined
            ,
            getKeyBinding: (action)=>this.menuOptions && this.menuOptions.getKeyBinding ? this.menuOptions.getKeyBinding(action) : undefined
            ,
            getMenuClassName: ()=>this.menuClassName
            ,
            onHide: ()=>this.onHide()
            ,
            actionRunner: this.menuOptions ? this.menuOptions.actionRunner : undefined,
            anchorAlignment: this.menuOptions ? this.menuOptions.anchorAlignment : 0 /* LEFT */ ,
            domForShadowRoot: this.menuAsChild ? this.element : undefined
        });
    }
    hide() {
        super.hide();
    }
    onHide() {
        this.hide();
        this.element.classList.remove('active');
    }
}



var $5YaSO = parcelRequire("5YaSO");

class $8f701e0eee4d937f$export$7c477a01defd15d5 extends $6nSvp.BaseActionViewItem {
    constructor(action, menuActionsOrProvider, contextMenuProvider, options = Object.create(null)){
        super(null, action, options);
        this.actionItem = null;
        this._onDidChangeVisibility = this._register(new $5YaSO.Emitter());
        this.menuActionsOrProvider = menuActionsOrProvider;
        this.contextMenuProvider = contextMenuProvider;
        this.options = options;
        if (this.options.actionRunner) this.actionRunner = this.options.actionRunner;
    }
    render(container) {
        this.actionItem = container;
        const labelRenderer = (el)=>{
            this.element = $bDzmQ.append(el, $bDzmQ.$('a.action-label'));
            let classNames = [];
            if (typeof this.options.classNames === 'string') classNames = this.options.classNames.split(/\s+/g).filter((s)=>!!s
            );
            else if (this.options.classNames) classNames = this.options.classNames;
            // todo@aeschli: remove codicon, should come through `this.options.classNames`
            if (!classNames.find((c)=>c === 'icon'
            )) classNames.push('codicon');
            this.element.classList.add(...classNames);
            this.element.setAttribute('role', 'button');
            this.element.setAttribute('aria-haspopup', 'true');
            this.element.setAttribute('aria-expanded', 'false');
            this.element.title = this._action.label || '';
            return null;
        };
        const isActionsArray = Array.isArray(this.menuActionsOrProvider);
        const options = {
            contextMenuProvider: this.contextMenuProvider,
            labelRenderer: labelRenderer,
            menuAsChild: this.options.menuAsChild,
            actions: isActionsArray ? this.menuActionsOrProvider : undefined,
            actionProvider: isActionsArray ? undefined : this.menuActionsOrProvider
        };
        this.dropdownMenu = this._register(new $18be9dadcd63aca7$export$e44a253a59704894(container, options));
        this._register(this.dropdownMenu.onDidChangeVisibility((visible)=>{
            var _a;
            (_a = this.element) === null || _a === void 0 || _a.setAttribute('aria-expanded', `${visible}`);
            this._onDidChangeVisibility.fire(visible);
        }));
        this.dropdownMenu.menuOptions = {
            actionViewItemProvider: this.options.actionViewItemProvider,
            actionRunner: this.actionRunner,
            getKeyBinding: this.options.keybindingProvider,
            context: this._context
        };
        if (this.options.anchorAlignmentProvider) {
            const that = this;
            this.dropdownMenu.menuOptions = Object.assign(Object.assign({}, this.dropdownMenu.menuOptions), {
                get anchorAlignment () {
                    return that.options.anchorAlignmentProvider();
                }
            });
        }
        this.updateEnabled();
    }
    setActionContext(newContext) {
        super.setActionContext(newContext);
        if (this.dropdownMenu) {
            if (this.dropdownMenu.menuOptions) this.dropdownMenu.menuOptions.context = newContext;
            else this.dropdownMenu.menuOptions = {
                context: newContext
            };
        }
    }
    updateEnabled() {
        var _a, _b;
        const disabled = !this.getAction().enabled;
        (_a = this.actionItem) === null || _a === void 0 || _a.classList.toggle('disabled', disabled);
        (_b = this.element) === null || _b === void 0 || _b.classList.toggle('disabled', disabled);
    }
}



var $cVfMQ = parcelRequire("cVfMQ");

var $fD7hM = parcelRequire("fD7hM");

var $9cWcn = parcelRequire("9cWcn");

var $lb0Ah = parcelRequire("lb0Ah");


var $4dEdH = parcelRequire("4dEdH");

var $g4v7E = parcelRequire("g4v7E");

var $cxCeF = parcelRequire("cxCeF");

var $d6K7e = parcelRequire("d6K7e");

var $fdGPu = parcelRequire("fdGPu");

var $7IxGd = parcelRequire("7IxGd");

var $kCOKl = parcelRequire("kCOKl");

var $2AUoS = parcelRequire("2AUoS");

var $azIPz = parcelRequire("azIPz");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $c8327240e537732a$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var $c8327240e537732a$var$__param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
};
var $c8327240e537732a$var$__awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
function $c8327240e537732a$export$3b3f8def22d21768(menu, options, target, primaryGroup, primaryMaxCount, shouldInlineSubmenu, useSeparatorsInPrimaryActions) {
    const groups = menu.getActions(options);
    const isPrimaryAction = typeof primaryGroup === 'string' ? (actionGroup)=>actionGroup === primaryGroup
     : primaryGroup;
    // Action bars handle alternative actions on their own so the alternative actions should be ignored
    $c8327240e537732a$var$fillInActions(groups, target, false, isPrimaryAction, primaryMaxCount, shouldInlineSubmenu, useSeparatorsInPrimaryActions);
    return $c8327240e537732a$var$asDisposable(groups);
}
function $c8327240e537732a$var$asDisposable(groups) {
    const disposables = new $9cWcn.DisposableStore();
    for (const [, actions] of groups)for (const action of actions)disposables.add(action);
    return disposables;
}
function $c8327240e537732a$var$fillInActions(groups, target, useAlternativeActions, isPrimaryAction = (actionGroup)=>actionGroup === 'navigation'
, primaryMaxCount = Number.MAX_SAFE_INTEGER, shouldInlineSubmenu = ()=>false
, useSeparatorsInPrimaryActions = false) {
    let primaryBucket;
    let secondaryBucket;
    if (Array.isArray(target)) {
        primaryBucket = target;
        secondaryBucket = target;
    } else {
        primaryBucket = target.primary;
        secondaryBucket = target.secondary;
    }
    const submenuInfo = new Set();
    for (const [group, actions] of groups){
        let target;
        if (isPrimaryAction(group)) {
            target = primaryBucket;
            if (target.length > 0 && useSeparatorsInPrimaryActions) target.push(new $cVfMQ.Separator());
        } else {
            target = secondaryBucket;
            if (target.length > 0) target.push(new $cVfMQ.Separator());
        }
        for (let action of actions){
            if (useAlternativeActions) action = action instanceof $g4v7E.MenuItemAction && action.alt ? action.alt : action;
            const newLen = target.push(action);
            // keep submenu info for later inlining
            if (action instanceof $cVfMQ.SubmenuAction) submenuInfo.add({
                group: group,
                action: action,
                index: newLen - 1
            });
        }
    }
    // ask the outside if submenu should be inlined or not. only ask when
    // there would be enough space
    for (const { group: group1 , action: action , index: index  } of submenuInfo){
        const target = isPrimaryAction(group1) ? primaryBucket : secondaryBucket;
        // inlining submenus with length 0 or 1 is easy,
        // larger submenus need to be checked with the overall limit
        const submenuActions = action.actions;
        if ((submenuActions.length <= 1 || target.length + submenuActions.length - 2 <= primaryMaxCount) && shouldInlineSubmenu(action, group1, target.length)) target.splice(index, 1, ...submenuActions);
    }
    // overflow items from the primary group into the secondary bucket
    if (primaryBucket !== secondaryBucket && primaryBucket.length > primaryMaxCount) {
        const overflow = primaryBucket.splice(primaryMaxCount, primaryBucket.length - primaryMaxCount);
        secondaryBucket.unshift(...overflow, new $cVfMQ.Separator());
    }
}
let $c8327240e537732a$export$8606409db23e2e47 = class $c8327240e537732a$export$8606409db23e2e47 extends $6nSvp.ActionViewItem {
    constructor(_action, options, _keybindingService, _notificationService, _contextKeyService){
        super(undefined, _action, {
            icon: !!(_action.class || _action.item.icon),
            label: !_action.class && !_action.item.icon,
            draggable: options === null || options === void 0 ? void 0 : options.draggable
        });
        this._keybindingService = _keybindingService;
        this._notificationService = _notificationService;
        this._contextKeyService = _contextKeyService;
        this._wantsAltCommand = false;
        this._itemClassDispose = this._register(new $9cWcn.MutableDisposable());
        this._altKey = $bDzmQ.ModifierKeyEmitter.getInstance();
    }
    get _menuItemAction() {
        return this._action;
    }
    get _commandAction() {
        return this._wantsAltCommand && this._menuItemAction.alt || this._menuItemAction;
    }
    onClick(event) {
        return $c8327240e537732a$var$__awaiter(this, void 0, void 0, function*() {
            event.preventDefault();
            event.stopPropagation();
            try {
                yield this.actionRunner.run(this._commandAction, this._context);
            } catch (err) {
                this._notificationService.error(err);
            }
        });
    }
    render(container) {
        super.render(container);
        container.classList.add('menu-entry');
        this._updateItemClass(this._menuItemAction.item);
        let mouseOver = false;
        let alternativeKeyDown = this._altKey.keyStatus.altKey || ($lb0Ah.isWindows || $lb0Ah.isLinux) && this._altKey.keyStatus.shiftKey;
        const updateAltState = ()=>{
            const wantsAltCommand = mouseOver && alternativeKeyDown;
            if (wantsAltCommand !== this._wantsAltCommand) {
                this._wantsAltCommand = wantsAltCommand;
                this.updateLabel();
                this.updateTooltip();
                this.updateClass();
            }
        };
        if (this._menuItemAction.alt) this._register(this._altKey.event((value)=>{
            alternativeKeyDown = value.altKey || ($lb0Ah.isWindows || $lb0Ah.isLinux) && value.shiftKey;
            updateAltState();
        }));
        this._register($bDzmQ.addDisposableListener(container, 'mouseleave', (_)=>{
            mouseOver = false;
            updateAltState();
        }));
        this._register($bDzmQ.addDisposableListener(container, 'mouseenter', (_)=>{
            mouseOver = true;
            updateAltState();
        }));
    }
    updateLabel() {
        if (this.options.label && this.label) this.label.textContent = this._commandAction.label;
    }
    updateTooltip() {
        if (this.label) {
            const keybinding = this._keybindingService.lookupKeybinding(this._commandAction.id, this._contextKeyService);
            const keybindingLabel = keybinding && keybinding.getLabel();
            const tooltip = this._commandAction.tooltip || this._commandAction.label;
            let title = keybindingLabel ? $4dEdH.localize('titleAndKb', "{0} ({1})", tooltip, keybindingLabel) : tooltip;
            if (!this._wantsAltCommand && this._menuItemAction.alt) {
                const altTooltip = this._menuItemAction.alt.tooltip || this._menuItemAction.alt.label;
                const altKeybinding = this._keybindingService.lookupKeybinding(this._menuItemAction.alt.id, this._contextKeyService);
                const altKeybindingLabel = altKeybinding && altKeybinding.getLabel();
                const altTitleSection = altKeybindingLabel ? $4dEdH.localize('titleAndKb', "{0} ({1})", altTooltip, altKeybindingLabel) : altTooltip;
                title += `\n[${$fD7hM.UILabelProvider.modifierLabels[$lb0Ah.OS].altKey}] ${altTitleSection}`;
            }
            this.label.title = title;
        }
    }
    updateClass() {
        if (this.options.icon) {
            if (this._commandAction !== this._menuItemAction) {
                if (this._menuItemAction.alt) this._updateItemClass(this._menuItemAction.alt.item);
            } else if (this._menuItemAction.alt) this._updateItemClass(this._menuItemAction.item);
        }
    }
    _updateItemClass(item) {
        var _a;
        this._itemClassDispose.value = undefined;
        const { element: element , label: label  } = this;
        if (!element || !label) return;
        const icon = this._commandAction.checked && ((_a = item.toggled) === null || _a === void 0 ? void 0 : _a.icon) ? item.toggled.icon : item.icon;
        if (!icon) return;
        if ($azIPz.ThemeIcon.isThemeIcon(icon)) {
            // theme icons
            const iconClasses = $azIPz.ThemeIcon.asClassNameArray(icon);
            label.classList.add(...iconClasses);
            this._itemClassDispose.value = $9cWcn.toDisposable(()=>{
                label.classList.remove(...iconClasses);
            });
        } else {
            // icon path/url
            if (icon.light) label.style.setProperty('--menu-entry-icon-light', $bDzmQ.asCSSUrl(icon.light));
            if (icon.dark) label.style.setProperty('--menu-entry-icon-dark', $bDzmQ.asCSSUrl(icon.dark));
            label.classList.add('icon');
            this._itemClassDispose.value = $9cWcn.toDisposable(()=>{
                label.classList.remove('icon');
                label.style.removeProperty('--menu-entry-icon-light');
                label.style.removeProperty('--menu-entry-icon-dark');
            });
        }
    }
};
$c8327240e537732a$export$8606409db23e2e47 = $c8327240e537732a$var$__decorate([
    $c8327240e537732a$var$__param(2, $7IxGd.IKeybindingService),
    $c8327240e537732a$var$__param(3, $kCOKl.INotificationService),
    $c8327240e537732a$var$__param(4, $cxCeF.IContextKeyService)
], $c8327240e537732a$export$8606409db23e2e47);
let $c8327240e537732a$export$18ad113e1f38dbd9 = class $c8327240e537732a$export$18ad113e1f38dbd9 extends $8f701e0eee4d937f$export$7c477a01defd15d5 {
    constructor(action, options, contextMenuService){
        var _a, _b;
        const dropdownOptions = Object.assign({}, options !== null && options !== void 0 ? options : Object.create(null), {
            menuAsChild: (_a = options === null || options === void 0 ? void 0 : options.menuAsChild) !== null && _a !== void 0 ? _a : false,
            classNames: (_b = options === null || options === void 0 ? void 0 : options.classNames) !== null && _b !== void 0 ? _b : $azIPz.ThemeIcon.isThemeIcon(action.item.icon) ? $azIPz.ThemeIcon.asClassName(action.item.icon) : undefined
        });
        super(action, {
            getActions: ()=>action.actions
        }, contextMenuService, dropdownOptions);
    }
    render(container) {
        super.render(container);
        if (this.element) {
            container.classList.add('menu-entry');
            const { icon: icon  } = this._action.item;
            if (icon && !$azIPz.ThemeIcon.isThemeIcon(icon)) {
                this.element.classList.add('icon');
                if (icon.light) this.element.style.setProperty('--menu-entry-icon-light', $bDzmQ.asCSSUrl(icon.light));
                if (icon.dark) this.element.style.setProperty('--menu-entry-icon-dark', $bDzmQ.asCSSUrl(icon.dark));
            }
        }
    }
};
$c8327240e537732a$export$18ad113e1f38dbd9 = $c8327240e537732a$var$__decorate([
    $c8327240e537732a$var$__param(2, $d6K7e.IContextMenuService)
], $c8327240e537732a$export$18ad113e1f38dbd9);
let $c8327240e537732a$var$DropdownWithDefaultActionViewItem = class DropdownWithDefaultActionViewItem extends $6nSvp.BaseActionViewItem {
    constructor(submenuAction, options, _keybindingService, _notificationService, _contextMenuService, _menuService, _instaService, _storageService){
        var _a, _b, _c;
        super(null, submenuAction);
        this._keybindingService = _keybindingService;
        this._notificationService = _notificationService;
        this._contextMenuService = _contextMenuService;
        this._menuService = _menuService;
        this._instaService = _instaService;
        this._storageService = _storageService;
        this._container = null;
        this._storageKey = `${submenuAction.item.submenu._debugName}_lastActionId`;
        // determine default action
        let defaultAction;
        let defaultActionId = _storageService.get(this._storageKey, 1 /* WORKSPACE */ );
        if (defaultActionId) defaultAction = submenuAction.actions.find((a)=>defaultActionId === a.id
        );
        if (!defaultAction) defaultAction = submenuAction.actions[0];
        this._defaultAction = this._instaService.createInstance($c8327240e537732a$export$8606409db23e2e47, defaultAction, undefined);
        const dropdownOptions = Object.assign({}, options !== null && options !== void 0 ? options : Object.create(null), {
            menuAsChild: (_a = options === null || options === void 0 ? void 0 : options.menuAsChild) !== null && _a !== void 0 ? _a : true,
            classNames: (_b = options === null || options === void 0 ? void 0 : options.classNames) !== null && _b !== void 0 ? _b : [
                'codicon',
                'codicon-chevron-down'
            ],
            actionRunner: (_c = options === null || options === void 0 ? void 0 : options.actionRunner) !== null && _c !== void 0 ? _c : new $cVfMQ.ActionRunner()
        });
        this._dropdown = new $8f701e0eee4d937f$export$7c477a01defd15d5(submenuAction, submenuAction.actions, this._contextMenuService, dropdownOptions);
        this._dropdown.actionRunner.onDidRun((e)=>{
            if (e.action instanceof $g4v7E.MenuItemAction) this.update(e.action);
        });
    }
    update(lastAction) {
        this._storageService.store(this._storageKey, lastAction.id, 1 /* WORKSPACE */ , 0 /* USER */ );
        this._defaultAction.dispose();
        this._defaultAction = this._instaService.createInstance($c8327240e537732a$export$8606409db23e2e47, lastAction, undefined);
        this._defaultAction.actionRunner = new class extends $cVfMQ.ActionRunner {
            runAction(action, context) {
                return $c8327240e537732a$var$__awaiter(this, void 0, void 0, function*() {
                    yield action.run(undefined);
                });
            }
        }();
        if (this._container) this._defaultAction.render($bDzmQ.prepend(this._container, $bDzmQ.$('.action-container')));
    }
    setActionContext(newContext) {
        super.setActionContext(newContext);
        this._defaultAction.setActionContext(newContext);
        this._dropdown.setActionContext(newContext);
    }
    render(container) {
        this._container = container;
        super.render(this._container);
        this._container.classList.add('monaco-dropdown-with-default');
        const primaryContainer = $bDzmQ.$('.action-container');
        this._defaultAction.render($bDzmQ.append(this._container, primaryContainer));
        this._register($bDzmQ.addDisposableListener(primaryContainer, $bDzmQ.EventType.KEY_DOWN, (e)=>{
            const event = new $gV002.StandardKeyboardEvent(e);
            if (event.equals(17 /* RightArrow */ )) {
                this._defaultAction.element.tabIndex = -1;
                this._dropdown.focus();
                event.stopPropagation();
            }
        }));
        const dropdownContainer = $bDzmQ.$('.dropdown-action-container');
        this._dropdown.render($bDzmQ.append(this._container, dropdownContainer));
        this._register($bDzmQ.addDisposableListener(dropdownContainer, $bDzmQ.EventType.KEY_DOWN, (e)=>{
            var _a;
            const event = new $gV002.StandardKeyboardEvent(e);
            if (event.equals(15 /* LeftArrow */ )) {
                this._defaultAction.element.tabIndex = 0;
                this._dropdown.setFocusable(false);
                (_a = this._defaultAction.element) === null || _a === void 0 || _a.focus();
                event.stopPropagation();
            }
        }));
    }
    focus(fromRight) {
        if (fromRight) this._dropdown.focus();
        else {
            this._defaultAction.element.tabIndex = 0;
            this._defaultAction.element.focus();
        }
    }
    blur() {
        this._defaultAction.element.tabIndex = -1;
        this._dropdown.blur();
        this._container.blur();
    }
    setFocusable(focusable) {
        if (focusable) this._defaultAction.element.tabIndex = 0;
        else {
            this._defaultAction.element.tabIndex = -1;
            this._dropdown.setFocusable(false);
        }
    }
    dispose() {
        this._defaultAction.dispose();
        this._dropdown.dispose();
        super.dispose();
    }
};
$c8327240e537732a$var$DropdownWithDefaultActionViewItem = $c8327240e537732a$var$__decorate([
    $c8327240e537732a$var$__param(2, $7IxGd.IKeybindingService),
    $c8327240e537732a$var$__param(3, $kCOKl.INotificationService),
    $c8327240e537732a$var$__param(4, $d6K7e.IContextMenuService),
    $c8327240e537732a$var$__param(5, $g4v7E.IMenuService),
    $c8327240e537732a$var$__param(6, $fdGPu.IInstantiationService),
    $c8327240e537732a$var$__param(7, $2AUoS.IStorageService)
], $c8327240e537732a$var$DropdownWithDefaultActionViewItem);
function $c8327240e537732a$export$9d27065ccc5be4d8(instaService, action, options) {
    if (action instanceof $g4v7E.MenuItemAction) return instaService.createInstance($c8327240e537732a$export$8606409db23e2e47, action, undefined);
    else if (action instanceof $g4v7E.SubmenuItemAction) {
        if (action.item.rememberDefaultAction) return instaService.createInstance($c8327240e537732a$var$DropdownWithDefaultActionViewItem, action, options);
        else return instaService.createInstance($c8327240e537732a$export$18ad113e1f38dbd9, action, options);
    } else return undefined;
}



var $cxCeF = parcelRequire("cxCeF");

var $lf2vF = parcelRequire("lf2vF");

var $fdGPu = parcelRequire("fdGPu");

var $gaWeX = parcelRequire("gaWeX");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $f45c93015d251d27$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var $f45c93015d251d27$var$__param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
};
const $f45c93015d251d27$export$8277d1187e5db7d6 = $fdGPu.createDecorator('IPeekViewService');
$lf2vF.registerSingleton($f45c93015d251d27$export$8277d1187e5db7d6, class {
    constructor(){
        this._widgets = new Map();
    }
    addExclusiveWidget(editor, widget) {
        const existing = this._widgets.get(editor);
        if (existing) {
            existing.listener.dispose();
            existing.widget.dispose();
        }
        const remove = ()=>{
            const data = this._widgets.get(editor);
            if (data && data.widget === widget) {
                data.listener.dispose();
                this._widgets.delete(editor);
            }
        };
        this._widgets.set(editor, {
            widget: widget,
            listener: widget.onDidClose(remove)
        });
    }
});
var $f45c93015d251d27$export$5afd50a7c05ff96a;
(function($f45c93015d251d27$export$5afd50a7c05ff96a) {
    $f45c93015d251d27$export$5afd50a7c05ff96a.inPeekEditor = new $cxCeF.RawContextKey('inReferenceSearchEditor', true, $4dEdH.localize('inReferenceSearchEditor', "Whether the current code editor is embedded inside peek"));
    $f45c93015d251d27$export$5afd50a7c05ff96a.notInPeekEditor = $f45c93015d251d27$export$5afd50a7c05ff96a.inPeekEditor.toNegated();
})($f45c93015d251d27$export$5afd50a7c05ff96a || ($f45c93015d251d27$export$5afd50a7c05ff96a = {}));
let $f45c93015d251d27$var$PeekContextController = class PeekContextController {
    constructor(editor, contextKeyService){
        if (editor instanceof $998bf45916d8a6ec$exports.EmbeddedCodeEditorWidget) $f45c93015d251d27$export$5afd50a7c05ff96a.inPeekEditor.bindTo(contextKeyService);
    }
    dispose() {}
};
$f45c93015d251d27$var$PeekContextController.ID = 'editor.contrib.referenceController';
$f45c93015d251d27$var$PeekContextController = $f45c93015d251d27$var$__decorate([
    $f45c93015d251d27$var$__param(1, $cxCeF.IContextKeyService)
], $f45c93015d251d27$var$PeekContextController);
$2iJTi.registerEditorContribution($f45c93015d251d27$var$PeekContextController.ID, $f45c93015d251d27$var$PeekContextController);
function $f45c93015d251d27$export$434a98f74be8c7b9(accessor) {
    let editor = accessor.get($2Qfl0.ICodeEditorService).getFocusedCodeEditor();
    if (editor instanceof $998bf45916d8a6ec$exports.EmbeddedCodeEditorWidget) return editor.getParentEditor();
    return editor;
}
const $f45c93015d251d27$var$defaultOptions = {
    headerBackgroundColor: $bjjQO.Color.white,
    primaryHeadingColor: $bjjQO.Color.fromHex('#333333'),
    secondaryHeadingColor: $bjjQO.Color.fromHex('#6c6c6cb3')
};
let $f45c93015d251d27$export$85acc0ce60f75b9f = class $f45c93015d251d27$export$85acc0ce60f75b9f extends $26ccd8585e87abef$export$4a50bb71db87eba6 {
    constructor(editor, options, instantiationService){
        super(editor, options);
        this.instantiationService = instantiationService;
        this._onDidClose = new $5YaSO.Emitter();
        this.onDidClose = this._onDidClose.event;
        $7w8Da.mixin(this.options, $f45c93015d251d27$var$defaultOptions, false);
    }
    dispose() {
        if (!this.disposed) {
            this.disposed = true; // prevent consumers who dispose on onDidClose from looping
            super.dispose();
            this._onDidClose.fire(this);
        }
    }
    style(styles) {
        let options = this.options;
        if (styles.headerBackgroundColor) options.headerBackgroundColor = styles.headerBackgroundColor;
        if (styles.primaryHeadingColor) options.primaryHeadingColor = styles.primaryHeadingColor;
        if (styles.secondaryHeadingColor) options.secondaryHeadingColor = styles.secondaryHeadingColor;
        super.style(styles);
    }
    _applyStyles() {
        super._applyStyles();
        let options = this.options;
        if (this._headElement && options.headerBackgroundColor) this._headElement.style.backgroundColor = options.headerBackgroundColor.toString();
        if (this._primaryHeading && options.primaryHeadingColor) this._primaryHeading.style.color = options.primaryHeadingColor.toString();
        if (this._secondaryHeading && options.secondaryHeadingColor) this._secondaryHeading.style.color = options.secondaryHeadingColor.toString();
        if (this._bodyElement && options.frameColor) this._bodyElement.style.borderColor = options.frameColor.toString();
    }
    _fillContainer(container) {
        this.setCssClass('peekview-widget');
        this._headElement = $bDzmQ.$('.head');
        this._bodyElement = $bDzmQ.$('.body');
        this._fillHead(this._headElement);
        this._fillBody(this._bodyElement);
        container.appendChild(this._headElement);
        container.appendChild(this._bodyElement);
    }
    _fillHead(container, noCloseAction) {
        const titleElement = $bDzmQ.$('.peekview-title');
        if (this.options.supportOnTitleClick) {
            titleElement.classList.add('clickable');
            $bDzmQ.addStandardDisposableListener(titleElement, 'click', (event)=>this._onTitleClick(event)
            );
        }
        $bDzmQ.append(this._headElement, titleElement);
        this._fillTitleIcon(titleElement);
        this._primaryHeading = $bDzmQ.$('span.filename');
        this._secondaryHeading = $bDzmQ.$('span.dirname');
        this._metaHeading = $bDzmQ.$('span.meta');
        $bDzmQ.append(titleElement, this._primaryHeading, this._secondaryHeading, this._metaHeading);
        const actionsContainer = $bDzmQ.$('.peekview-actions');
        $bDzmQ.append(this._headElement, actionsContainer);
        const actionBarOptions = this._getActionBarOptions();
        this._actionbarWidget = new $czr0Q.ActionBar(actionsContainer, actionBarOptions);
        this._disposables.add(this._actionbarWidget);
        if (!noCloseAction) this._actionbarWidget.push(new $cVfMQ.Action('peekview.close', $4dEdH.localize('label.close', "Close"), $awgRE.Codicon.close.classNames, true, ()=>{
            this.dispose();
            return Promise.resolve();
        }), {
            label: false,
            icon: true
        });
    }
    _fillTitleIcon(container) {}
    _getActionBarOptions() {
        return {
            actionViewItemProvider: $c8327240e537732a$exports.createActionViewItem.bind(undefined, this.instantiationService),
            orientation: 0 /* HORIZONTAL */ 
        };
    }
    _onTitleClick(event) {
    // implement me if supportOnTitleClick option is set
    }
    setTitle(primaryHeading, secondaryHeading) {
        if (this._primaryHeading && this._secondaryHeading) {
            this._primaryHeading.innerText = primaryHeading;
            this._primaryHeading.setAttribute('title', primaryHeading);
            if (secondaryHeading) this._secondaryHeading.innerText = secondaryHeading;
            else $bDzmQ.clearNode(this._secondaryHeading);
        }
    }
    setMetaTitle(value) {
        if (this._metaHeading) {
            if (value) {
                this._metaHeading.innerText = value;
                $bDzmQ.show(this._metaHeading);
            } else $bDzmQ.hide(this._metaHeading);
        }
    }
    _doLayout(heightInPixel, widthInPixel) {
        if (!this._isShowing && heightInPixel < 0) {
            // Looks like the view zone got folded away!
            this.dispose();
            return;
        }
        const headHeight = Math.ceil(this.editor.getOption(58 /* lineHeight */ ) * 1.2);
        const bodyHeight = Math.round(heightInPixel - (headHeight + 2 /* the border-top/bottom width*/ ));
        this._doLayoutHead(headHeight, widthInPixel);
        this._doLayoutBody(bodyHeight, widthInPixel);
    }
    _doLayoutHead(heightInPixel, widthInPixel) {
        if (this._headElement) {
            this._headElement.style.height = `${heightInPixel}px`;
            this._headElement.style.lineHeight = this._headElement.style.height;
        }
    }
    _doLayoutBody(heightInPixel, widthInPixel) {
        if (this._bodyElement) this._bodyElement.style.height = `${heightInPixel}px`;
    }
};
$f45c93015d251d27$export$85acc0ce60f75b9f = $f45c93015d251d27$var$__decorate([
    $f45c93015d251d27$var$__param(2, $fdGPu.IInstantiationService)
], $f45c93015d251d27$export$85acc0ce60f75b9f);
const $f45c93015d251d27$export$b1e2a843606aa53d = $gaWeX.registerColor('peekViewTitle.background', {
    dark: $gaWeX.transparent($gaWeX.editorInfoForeground, 0.1),
    light: $gaWeX.transparent($gaWeX.editorInfoForeground, 0.1),
    hc: null
}, $4dEdH.localize('peekViewTitleBackground', 'Background color of the peek view title area.'));
const $f45c93015d251d27$export$5f7b8e8b47f91ad3 = $gaWeX.registerColor('peekViewTitleLabel.foreground', {
    dark: $bjjQO.Color.white,
    light: $bjjQO.Color.black,
    hc: $bjjQO.Color.white
}, $4dEdH.localize('peekViewTitleForeground', 'Color of the peek view title.'));
const $f45c93015d251d27$export$cdda5f1c5d2481c1 = $gaWeX.registerColor('peekViewTitleDescription.foreground', {
    dark: '#ccccccb3',
    light: '#616161',
    hc: '#FFFFFF99'
}, $4dEdH.localize('peekViewTitleInfoForeground', 'Color of the peek view title info.'));
const $f45c93015d251d27$export$2d4f038d18170ad2 = $gaWeX.registerColor('peekView.border', {
    dark: $gaWeX.editorInfoForeground,
    light: $gaWeX.editorInfoForeground,
    hc: $gaWeX.contrastBorder
}, $4dEdH.localize('peekViewBorder', 'Color of the peek view borders and arrow.'));
const $f45c93015d251d27$export$84f26812d83dda36 = $gaWeX.registerColor('peekViewResult.background', {
    dark: '#252526',
    light: '#F3F3F3',
    hc: $bjjQO.Color.black
}, $4dEdH.localize('peekViewResultsBackground', 'Background color of the peek view result list.'));



var $4dEdH = parcelRequire("4dEdH");

var $cxCeF = parcelRequire("cxCeF");

var $gaWeX = parcelRequire("gaWeX");

var $azIPz = parcelRequire("azIPz");
var $e9b66150677fe80b$exports = {};

$parcel$export($e9b66150677fe80b$exports, "DefinitionAction", () => $e9b66150677fe80b$export$5aed1003b9513172, (v) => $e9b66150677fe80b$export$5aed1003b9513172 = v);

var $5yY14 = parcelRequire("5yY14");

var $aIbUW = parcelRequire("aIbUW");

var $6bXyA = parcelRequire("6bXyA");

var $fuc8X = parcelRequire("fuc8X");

var $lb0Ah = parcelRequire("lb0Ah");

var $bxBg7 = parcelRequire("bxBg7");

var $5OJ54 = parcelRequire("5OJ54");

var $r7siU = parcelRequire("r7siU");

var $7UXLG = parcelRequire("7UXLG");

var $2iJTi = parcelRequire("2iJTi");

var $2Qfl0 = parcelRequire("2Qfl0");


var $dcxQ7 = parcelRequire("dcxQ7");

var $d00il = parcelRequire("d00il");

var $ibKGQ = parcelRequire("ibKGQ");

var $4PmRQ = parcelRequire("4PmRQ");
var $356aea24a08017bc$exports = {};

$parcel$export($356aea24a08017bc$exports, "ReferencesController", () => $356aea24a08017bc$export$60e6f978b59c492d, (v) => $356aea24a08017bc$export$60e6f978b59c492d = v);

var $6bXyA = parcelRequire("6bXyA");

var $gPkHZ = parcelRequire("gPkHZ");

var $fuc8X = parcelRequire("fuc8X");

var $9cWcn = parcelRequire("9cWcn");

var $2Qfl0 = parcelRequire("2Qfl0");

var $dcxQ7 = parcelRequire("dcxQ7");

var $d00il = parcelRequire("d00il");


var $4dEdH = parcelRequire("4dEdH");

var $8tcMz = parcelRequire("8tcMz");

var $35IZ9 = parcelRequire("35IZ9");

var $cxCeF = parcelRequire("cxCeF");

var $fdGPu = parcelRequire("fdGPu");

var $6AWYG = parcelRequire("6AWYG");

var $7UXCS = parcelRequire("7UXCS");

var $kCOKl = parcelRequire("kCOKl");

var $2AUoS = parcelRequire("2AUoS");
var $d939e0b708222bac$exports = {};

$parcel$export($d939e0b708222bac$exports, "OneReference", () => $d939e0b708222bac$export$5a16ca2afcb50c8b, (v) => $d939e0b708222bac$export$5a16ca2afcb50c8b = v);
$parcel$export($d939e0b708222bac$exports, "FileReferences", () => $d939e0b708222bac$export$abd311b1beafe84f, (v) => $d939e0b708222bac$export$abd311b1beafe84f = v);
$parcel$export($d939e0b708222bac$exports, "ReferencesModel", () => $d939e0b708222bac$export$f3299b77f3be0450, (v) => $d939e0b708222bac$export$f3299b77f3be0450 = v);

var $gPkHZ = parcelRequire("gPkHZ");

var $5YaSO = parcelRequire("5YaSO");

var $nKTlZ = parcelRequire("nKTlZ");

var $9cWcn = parcelRequire("9cWcn");

var $askDf = parcelRequire("askDf");

var $5Aea5 = parcelRequire("5Aea5");

var $jcr1R = parcelRequire("jcr1R");

var $d00il = parcelRequire("d00il");

var $4dEdH = parcelRequire("4dEdH");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $d939e0b708222bac$var$__awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
class $d939e0b708222bac$export$5a16ca2afcb50c8b {
    constructor(isProviderFirst, parent, link, _rangeCallback){
        this.isProviderFirst = isProviderFirst;
        this.parent = parent;
        this.link = link;
        this._rangeCallback = _rangeCallback;
        this.id = $nKTlZ.defaultGenerator.nextId();
    }
    get uri() {
        return this.link.uri;
    }
    get range() {
        var _a, _b;
        return (_b = (_a = this._range) !== null && _a !== void 0 ? _a : this.link.targetSelectionRange) !== null && _b !== void 0 ? _b : this.link.range;
    }
    set range(value) {
        this._range = value;
        this._rangeCallback(this);
    }
    get ariaMessage() {
        var _a;
        const preview = (_a = this.parent.getPreview(this)) === null || _a === void 0 ? void 0 : _a.preview(this.range);
        if (!preview) return $4dEdH.localize('aria.oneReference', "symbol in {0} on line {1} at column {2}", $5Aea5.basename(this.uri), this.range.startLineNumber, this.range.startColumn);
        else return $4dEdH.localize({
            key: 'aria.oneReference.preview',
            comment: [
                'Placeholders are: 0: filename, 1:line number, 2: column number, 3: preview snippet of source code'
            ]
        }, "symbol in {0} on line {1} at column {2}, {3}", $5Aea5.basename(this.uri), this.range.startLineNumber, this.range.startColumn, preview.value);
    }
}
class $d939e0b708222bac$export$a127194569a41afb {
    constructor(_modelReference){
        this._modelReference = _modelReference;
    }
    dispose() {
        this._modelReference.dispose();
    }
    preview(range, n = 8) {
        const model = this._modelReference.object.textEditorModel;
        if (!model) return undefined;
        const { startLineNumber: startLineNumber , startColumn: startColumn , endLineNumber: endLineNumber , endColumn: endColumn  } = range;
        const word = model.getWordUntilPosition({
            lineNumber: startLineNumber,
            column: startColumn - n
        });
        const beforeRange = new $d00il.Range(startLineNumber, word.startColumn, startLineNumber, startColumn);
        const afterRange = new $d00il.Range(endLineNumber, endColumn, endLineNumber, 1073741824 /* MAX_SAFE_SMALL_INTEGER */ );
        const before = model.getValueInRange(beforeRange).replace(/^\s+/, '');
        const inside = model.getValueInRange(range);
        const after = model.getValueInRange(afterRange).replace(/\s+$/, '');
        return {
            value: before + inside + after,
            highlight: {
                start: before.length,
                end: before.length + inside.length
            }
        };
    }
}
class $d939e0b708222bac$export$abd311b1beafe84f {
    constructor(parent, uri){
        this.parent = parent;
        this.uri = uri;
        this.children = [];
        this._previews = new $askDf.ResourceMap();
    }
    dispose() {
        $9cWcn.dispose(this._previews.values());
        this._previews.clear();
    }
    getPreview(child) {
        return this._previews.get(child.uri);
    }
    get ariaMessage() {
        const len = this.children.length;
        if (len === 1) return $4dEdH.localize('aria.fileReferences.1', "1 symbol in {0}, full path {1}", $5Aea5.basename(this.uri), this.uri.fsPath);
        else return $4dEdH.localize('aria.fileReferences.N', "{0} symbols in {1}, full path {2}", len, $5Aea5.basename(this.uri), this.uri.fsPath);
    }
    resolve(textModelResolverService) {
        return $d939e0b708222bac$var$__awaiter(this, void 0, void 0, function*() {
            if (this._previews.size !== 0) return this;
            for (let child of this.children){
                if (this._previews.has(child.uri)) continue;
                try {
                    const ref = yield textModelResolverService.createModelReference(child.uri);
                    this._previews.set(child.uri, new $d939e0b708222bac$export$a127194569a41afb(ref));
                } catch (err) {
                    $gPkHZ.onUnexpectedError(err);
                }
            }
            return this;
        });
    }
}
class $d939e0b708222bac$export$f3299b77f3be0450 {
    constructor(links, title){
        this.groups = [];
        this.references = [];
        this._onDidChangeReferenceRange = new $5YaSO.Emitter();
        this.onDidChangeReferenceRange = this._onDidChangeReferenceRange.event;
        this._links = links;
        this._title = title;
        // grouping and sorting
        const [providersFirst] = links;
        links.sort($d939e0b708222bac$export$f3299b77f3be0450._compareReferences);
        let current;
        for (let link of links){
            if (!current || !$5Aea5.extUri.isEqual(current.uri, link.uri, true)) {
                // new group
                current = new $d939e0b708222bac$export$abd311b1beafe84f(this, link.uri);
                this.groups.push(current);
            }
            // append, check for equality first!
            if (current.children.length === 0 || $d939e0b708222bac$export$f3299b77f3be0450._compareReferences(link, current.children[current.children.length - 1]) !== 0) {
                const oneRef = new $d939e0b708222bac$export$5a16ca2afcb50c8b(providersFirst === link, current, link, (ref)=>this._onDidChangeReferenceRange.fire(ref)
                );
                this.references.push(oneRef);
                current.children.push(oneRef);
            }
        }
    }
    dispose() {
        $9cWcn.dispose(this.groups);
        this._onDidChangeReferenceRange.dispose();
        this.groups.length = 0;
    }
    clone() {
        return new $d939e0b708222bac$export$f3299b77f3be0450(this._links, this._title);
    }
    get title() {
        return this._title;
    }
    get isEmpty() {
        return this.groups.length === 0;
    }
    get ariaMessage() {
        if (this.isEmpty) return $4dEdH.localize('aria.result.0', "No results found");
        else if (this.references.length === 1) return $4dEdH.localize('aria.result.1', "Found 1 symbol in {0}", this.references[0].uri.fsPath);
        else if (this.groups.length === 1) return $4dEdH.localize('aria.result.n1', "Found {0} symbols in {1}", this.references.length, this.groups[0].uri.fsPath);
        else return $4dEdH.localize('aria.result.nm', "Found {0} symbols in {1} files", this.references.length, this.groups.length);
    }
    nextOrPreviousReference(reference, next) {
        let { parent: parent  } = reference;
        let idx = parent.children.indexOf(reference);
        let childCount = parent.children.length;
        let groupCount = parent.parent.groups.length;
        if (groupCount === 1 || next && idx + 1 < childCount || !next && idx > 0) {
            // cycling within one file
            if (next) idx = (idx + 1) % childCount;
            else idx = (idx + childCount - 1) % childCount;
            return parent.children[idx];
        }
        idx = parent.parent.groups.indexOf(parent);
        if (next) {
            idx = (idx + 1) % groupCount;
            return parent.parent.groups[idx].children[0];
        } else {
            idx = (idx + groupCount - 1) % groupCount;
            return parent.parent.groups[idx].children[parent.parent.groups[idx].children.length - 1];
        }
    }
    nearestReference(resource, position) {
        const nearest = this.references.map((ref, idx)=>{
            return {
                idx: idx,
                prefixLen: $jcr1R.commonPrefixLength(ref.uri.toString(), resource.toString()),
                offsetDist: Math.abs(ref.range.startLineNumber - position.lineNumber) * 100 + Math.abs(ref.range.startColumn - position.column)
            };
        }).sort((a, b)=>{
            if (a.prefixLen > b.prefixLen) return -1;
            else if (a.prefixLen < b.prefixLen) return 1;
            else if (a.offsetDist < b.offsetDist) return -1;
            else if (a.offsetDist > b.offsetDist) return 1;
            else return 0;
        })[0];
        if (nearest) return this.references[nearest.idx];
        return undefined;
    }
    referenceAt(resource, position) {
        for (const ref of this.references)if (ref.uri.toString() === resource.toString()) {
            if ($d00il.Range.containsPosition(ref.range, position)) return ref;
        }
        return undefined;
    }
    firstReference() {
        for (const ref of this.references){
            if (ref.isProviderFirst) return ref;
        }
        return this.references[0];
    }
    static _compareReferences(a, b) {
        return $5Aea5.extUri.compare(a.uri, b.uri) || $d00il.Range.compareRangesUsingStarts(a.range, b.range);
    }
}


var $dcaf7f68c2e5ca40$exports = {};

$parcel$export($dcaf7f68c2e5ca40$exports, "LayoutData", () => $dcaf7f68c2e5ca40$export$276a580b24a20d1, (v) => $dcaf7f68c2e5ca40$export$276a580b24a20d1 = v);
$parcel$export($dcaf7f68c2e5ca40$exports, "ReferenceWidget", () => $dcaf7f68c2e5ca40$export$a6aef00aae3b3577, (v) => $dcaf7f68c2e5ca40$export$a6aef00aae3b3577 = v);

var $bDzmQ = parcelRequire("bDzmQ");

var $ilw5j = parcelRequire("ilw5j");

var $bjjQO = parcelRequire("bjjQO");

var $5YaSO = parcelRequire("5YaSO");

var $9cWcn = parcelRequire("9cWcn");

var $8GPp8 = parcelRequire("8GPp8");

var $5Aea5 = parcelRequire("5Aea5");



var $d00il = parcelRequire("d00il");

var $91ntV = parcelRequire("91ntV");

var $aKdIg = parcelRequire("aKdIg");

var $is5YK = parcelRequire("is5YK");

var $aTkrt = parcelRequire("aTkrt");
var $b05e994f67db906f$exports = {};

$parcel$export($b05e994f67db906f$exports, "DataSource", () => $b05e994f67db906f$export$accd73d198d77d2f, (v) => $b05e994f67db906f$export$accd73d198d77d2f = v);
$parcel$export($b05e994f67db906f$exports, "Delegate", () => $b05e994f67db906f$export$2a8f9cc4e68431ea, (v) => $b05e994f67db906f$export$2a8f9cc4e68431ea = v);
$parcel$export($b05e994f67db906f$exports, "FileReferencesRenderer", () => $b05e994f67db906f$export$15497fea8d02acf6, (v) => $b05e994f67db906f$export$15497fea8d02acf6 = v);
$parcel$export($b05e994f67db906f$exports, "OneReferenceRenderer", () => $b05e994f67db906f$export$b181a089ad2d048d, (v) => $b05e994f67db906f$export$b181a089ad2d048d = v);
$parcel$export($b05e994f67db906f$exports, "StringRepresentationProvider", () => $b05e994f67db906f$export$5a1ff9bb06397f8e, (v) => $b05e994f67db906f$export$5a1ff9bb06397f8e = v);
$parcel$export($b05e994f67db906f$exports, "IdentityProvider", () => $b05e994f67db906f$export$26106abfb5b2a456, (v) => $b05e994f67db906f$export$26106abfb5b2a456 = v);
$parcel$export($b05e994f67db906f$exports, "AccessibilityProvider", () => $b05e994f67db906f$export$aa8739b876e4b61f, (v) => $b05e994f67db906f$export$aa8739b876e4b61f = v);

var $bDzmQ = parcelRequire("bDzmQ");

var $gmIgD = parcelRequire("gmIgD");

var $5WE8v = parcelRequire("5WE8v");

var $7XjKn = parcelRequire("7XjKn");

var $lk06m = parcelRequire("lk06m");

var $fGpwm = parcelRequire("fGpwm");

var $8GPp8 = parcelRequire("8GPp8");

var $lb0Ah = parcelRequire("lb0Ah");

var $5Aea5 = parcelRequire("5Aea5");

var $5OJ54 = parcelRequire("5OJ54");
function $41077bc526ea28e1$export$c8ab9bf6b3a1df37(resource) {
    if (!resource) return undefined;
    if (typeof resource === 'string') resource = $5OJ54.URI.file(resource);
    const base = $5Aea5.basename(resource) || (resource.scheme === $8GPp8.Schemas.file ? resource.fsPath : resource.path /* can be empty string if '/' is passed in */ );
    // convert c: => C:
    if ($lb0Ah.isWindows && $fGpwm.isRootOrDriveLetter(base)) return $41077bc526ea28e1$export$86de3c9238cdb7b7(base);
    return base;
}
function $41077bc526ea28e1$export$86de3c9238cdb7b7(path, continueAsWindows) {
    if ($fGpwm.hasDriveLetter(path, continueAsWindows)) return path.charAt(0).toUpperCase() + path.slice(1);
    return path;
}



var $9cWcn = parcelRequire("9cWcn");

var $5Aea5 = parcelRequire("5Aea5");

var $aTkrt = parcelRequire("aTkrt");

var $4dEdH = parcelRequire("4dEdH");

var $fdGPu = parcelRequire("fdGPu");

var $7IxGd = parcelRequire("7IxGd");

var $8GcbM = parcelRequire("8GcbM");

var $8oQv6 = parcelRequire("8oQv6");

var $azIPz = parcelRequire("azIPz");

/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $b05e994f67db906f$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var $b05e994f67db906f$var$__param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
};
let $b05e994f67db906f$export$accd73d198d77d2f = class $b05e994f67db906f$export$accd73d198d77d2f {
    constructor(_resolverService){
        this._resolverService = _resolverService;
    }
    hasChildren(element) {
        if (element instanceof $d939e0b708222bac$exports.ReferencesModel) return true;
        if (element instanceof $d939e0b708222bac$exports.FileReferences) return true;
        return false;
    }
    getChildren(element) {
        if (element instanceof $d939e0b708222bac$exports.ReferencesModel) return element.groups;
        if (element instanceof $d939e0b708222bac$exports.FileReferences) return element.resolve(this._resolverService).then((val)=>{
            // if (element.failure) {
            // 	// refresh the element on failure so that
            // 	// we can update its rendering
            // 	return tree.refresh(element).then(() => val.children);
            // }
            return val.children;
        });
        throw new Error('bad tree');
    }
};
$b05e994f67db906f$export$accd73d198d77d2f = $b05e994f67db906f$var$__decorate([
    $b05e994f67db906f$var$__param(0, $aTkrt.ITextModelService)
], $b05e994f67db906f$export$accd73d198d77d2f);
class $b05e994f67db906f$export$2a8f9cc4e68431ea {
    getHeight() {
        return 23;
    }
    getTemplateId(element) {
        if (element instanceof $d939e0b708222bac$exports.FileReferences) return $b05e994f67db906f$export$15497fea8d02acf6.id;
        else return $b05e994f67db906f$export$b181a089ad2d048d.id;
    }
}
let $b05e994f67db906f$export$5a1ff9bb06397f8e = class $b05e994f67db906f$export$5a1ff9bb06397f8e {
    constructor(_keybindingService){
        this._keybindingService = _keybindingService;
    }
    getKeyboardNavigationLabel(element) {
        var _a;
        if (element instanceof $d939e0b708222bac$exports.OneReference) {
            const parts = (_a = element.parent.getPreview(element)) === null || _a === void 0 ? void 0 : _a.preview(element.range);
            if (parts) return parts.value;
        }
        // FileReferences or unresolved OneReference
        return $5Aea5.basename(element.uri);
    }
};
$b05e994f67db906f$export$5a1ff9bb06397f8e = $b05e994f67db906f$var$__decorate([
    $b05e994f67db906f$var$__param(0, $7IxGd.IKeybindingService)
], $b05e994f67db906f$export$5a1ff9bb06397f8e);
class $b05e994f67db906f$export$26106abfb5b2a456 {
    getId(element) {
        return element instanceof $d939e0b708222bac$exports.OneReference ? element.id : element.uri;
    }
}
//#region render: File
let $b05e994f67db906f$var$FileReferencesTemplate = class FileReferencesTemplate extends $9cWcn.Disposable {
    constructor(container, _uriLabel, themeService){
        super();
        this._uriLabel = _uriLabel;
        const parent = document.createElement('div');
        parent.classList.add('reference-file');
        this.file = this._register(new $7XjKn.IconLabel(parent, {
            supportHighlights: true
        }));
        this.badge = new $gmIgD.CountBadge($bDzmQ.append(parent, $bDzmQ.$('.count')));
        this._register($8oQv6.attachBadgeStyler(this.badge, themeService));
        container.appendChild(parent);
    }
    set(element, matches) {
        let parent = $5Aea5.dirname(element.uri);
        this.file.setLabel($41077bc526ea28e1$export$c8ab9bf6b3a1df37(element.uri), this._uriLabel.getUriLabel(parent, {
            relative: true
        }), {
            title: this._uriLabel.getUriLabel(element.uri),
            matches: matches
        });
        const len = element.children.length;
        this.badge.setCount(len);
        if (len > 1) this.badge.setTitleFormat($4dEdH.localize('referencesCount', "{0} references", len));
        else this.badge.setTitleFormat($4dEdH.localize('referenceCount', "{0} reference", len));
    }
};
$b05e994f67db906f$var$FileReferencesTemplate = $b05e994f67db906f$var$__decorate([
    $b05e994f67db906f$var$__param(1, $8GcbM.ILabelService),
    $b05e994f67db906f$var$__param(2, $azIPz.IThemeService)
], $b05e994f67db906f$var$FileReferencesTemplate);
let $b05e994f67db906f$export$15497fea8d02acf6 = class $b05e994f67db906f$export$15497fea8d02acf6 {
    constructor(_instantiationService){
        this._instantiationService = _instantiationService;
        this.templateId = $b05e994f67db906f$export$15497fea8d02acf6.id;
    }
    renderTemplate(container) {
        return this._instantiationService.createInstance($b05e994f67db906f$var$FileReferencesTemplate, container);
    }
    renderElement(node, index, template) {
        template.set(node.element, $lk06m.createMatches(node.filterData));
    }
    disposeTemplate(templateData) {
        templateData.dispose();
    }
};
$b05e994f67db906f$export$15497fea8d02acf6.id = 'FileReferencesRenderer';
$b05e994f67db906f$export$15497fea8d02acf6 = $b05e994f67db906f$var$__decorate([
    $b05e994f67db906f$var$__param(0, $fdGPu.IInstantiationService)
], $b05e994f67db906f$export$15497fea8d02acf6);
//#endregion
//#region render: Reference
class $b05e994f67db906f$var$OneReferenceTemplate {
    constructor(container){
        this.label = new $5WE8v.HighlightedLabel(container);
    }
    set(element, score) {
        var _a;
        const preview = (_a = element.parent.getPreview(element)) === null || _a === void 0 ? void 0 : _a.preview(element.range);
        if (!preview || !preview.value) // this means we FAILED to resolve the document or the value is the empty string
        this.label.set(`${$5Aea5.basename(element.uri)}:${element.range.startLineNumber + 1}:${element.range.startColumn + 1}`);
        else {
            // render search match as highlight unless
            // we have score, then render the score
            const { value: value , highlight: highlight  } = preview;
            if (score && !$lk06m.FuzzyScore.isDefault(score)) {
                this.label.element.classList.toggle('referenceMatch', false);
                this.label.set(value, $lk06m.createMatches(score));
            } else {
                this.label.element.classList.toggle('referenceMatch', true);
                this.label.set(value, [
                    highlight
                ]);
            }
        }
    }
}
class $b05e994f67db906f$export$b181a089ad2d048d {
    constructor(){
        this.templateId = $b05e994f67db906f$export$b181a089ad2d048d.id;
    }
    renderTemplate(container) {
        return new $b05e994f67db906f$var$OneReferenceTemplate(container);
    }
    renderElement(node, index, templateData) {
        templateData.set(node.element, node.filterData);
    }
    disposeTemplate() {}
}
$b05e994f67db906f$export$b181a089ad2d048d.id = 'OneReferenceRenderer';
class $b05e994f67db906f$export$aa8739b876e4b61f {
    getWidgetAriaLabel() {
        return $4dEdH.localize('treeAriaLabel', "References");
    }
    getAriaLabel(element) {
        return element.ariaMessage;
    }
}




var $4dEdH = parcelRequire("4dEdH");

var $fdGPu = parcelRequire("fdGPu");

var $7IxGd = parcelRequire("7IxGd");

var $8GcbM = parcelRequire("8GcbM");

var $7UXCS = parcelRequire("7UXCS");

var $azIPz = parcelRequire("azIPz");

var $hXIQW = parcelRequire("hXIQW");

/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $dcaf7f68c2e5ca40$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var $dcaf7f68c2e5ca40$var$__param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
};
var $dcaf7f68c2e5ca40$var$__awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
class $dcaf7f68c2e5ca40$var$DecorationsManager {
    constructor(_editor, _model){
        this._editor = _editor;
        this._model = _model;
        this._decorations = new Map();
        this._decorationIgnoreSet = new Set();
        this._callOnDispose = new $9cWcn.DisposableStore();
        this._callOnModelChange = new $9cWcn.DisposableStore();
        this._callOnDispose.add(this._editor.onDidChangeModel(()=>this._onModelChanged()
        ));
        this._onModelChanged();
    }
    dispose() {
        this._callOnModelChange.dispose();
        this._callOnDispose.dispose();
        this.removeDecorations();
    }
    _onModelChanged() {
        this._callOnModelChange.clear();
        const model = this._editor.getModel();
        if (!model) return;
        for (let ref of this._model.references)if (ref.uri.toString() === model.uri.toString()) {
            this._addDecorations(ref.parent);
            return;
        }
    }
    _addDecorations(reference) {
        if (!this._editor.hasModel()) return;
        this._callOnModelChange.add(this._editor.getModel().onDidChangeDecorations(()=>this._onDecorationChanged()
        ));
        const newDecorations = [];
        const newDecorationsActualIndex = [];
        for(let i = 0, len = reference.children.length; i < len; i++){
            let oneReference = reference.children[i];
            if (this._decorationIgnoreSet.has(oneReference.id)) continue;
            if (oneReference.uri.toString() !== this._editor.getModel().uri.toString()) continue;
            newDecorations.push({
                range: oneReference.range,
                options: $dcaf7f68c2e5ca40$var$DecorationsManager.DecorationOptions
            });
            newDecorationsActualIndex.push(i);
        }
        const decorations = this._editor.deltaDecorations([], newDecorations);
        for(let i1 = 0; i1 < decorations.length; i1++)this._decorations.set(decorations[i1], reference.children[newDecorationsActualIndex[i1]]);
    }
    _onDecorationChanged() {
        const toRemove = [];
        const model = this._editor.getModel();
        if (!model) return;
        for (let [decorationId, reference] of this._decorations){
            const newRange = model.getDecorationRange(decorationId);
            if (!newRange) continue;
            let ignore = false;
            if ($d00il.Range.equalsRange(newRange, reference.range)) continue;
            if ($d00il.Range.spansMultipleLines(newRange)) ignore = true;
            else {
                const lineLength = reference.range.endColumn - reference.range.startColumn;
                const newLineLength = newRange.endColumn - newRange.startColumn;
                if (lineLength !== newLineLength) ignore = true;
            }
            if (ignore) {
                this._decorationIgnoreSet.add(reference.id);
                toRemove.push(decorationId);
            } else reference.range = newRange;
        }
        for(let i = 0, len = toRemove.length; i < len; i++)this._decorations.delete(toRemove[i]);
        this._editor.deltaDecorations(toRemove, []);
    }
    removeDecorations() {
        this._editor.deltaDecorations([
            ...this._decorations.keys()
        ], []);
        this._decorations.clear();
    }
}
$dcaf7f68c2e5ca40$var$DecorationsManager.DecorationOptions = $91ntV.ModelDecorationOptions.register({
    description: 'reference-decoration',
    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */ ,
    className: 'reference-decoration'
});
class $dcaf7f68c2e5ca40$export$276a580b24a20d1 {
    constructor(){
        this.ratio = 0.7;
        this.heightInLines = 18;
    }
    static fromJSON(raw) {
        let ratio;
        let heightInLines;
        try {
            const data = JSON.parse(raw);
            ratio = data.ratio;
            heightInLines = data.heightInLines;
        } catch (_a) {
        //
        }
        return {
            ratio: ratio || 0.7,
            heightInLines: heightInLines || 18
        };
    }
}
class $dcaf7f68c2e5ca40$var$ReferencesTree extends $7UXCS.WorkbenchAsyncDataTree {
}
/**
 * ZoneWidget that is shown inside the editor
 */ let $dcaf7f68c2e5ca40$export$a6aef00aae3b3577 = class $dcaf7f68c2e5ca40$export$a6aef00aae3b3577 extends $f45c93015d251d27$exports.PeekViewWidget {
    constructor(editor, _defaultTreeKeyboardSupport, layoutData, themeService, _textModelResolverService, _instantiationService, _peekViewService, _uriLabel, _undoRedoService, _keybindingService, _modeService, _languageConfigurationService){
        super(editor, {
            showFrame: false,
            showArrow: true,
            isResizeable: true,
            isAccessible: true,
            supportOnTitleClick: true
        }, _instantiationService);
        this._defaultTreeKeyboardSupport = _defaultTreeKeyboardSupport;
        this.layoutData = layoutData;
        this._textModelResolverService = _textModelResolverService;
        this._instantiationService = _instantiationService;
        this._peekViewService = _peekViewService;
        this._uriLabel = _uriLabel;
        this._undoRedoService = _undoRedoService;
        this._keybindingService = _keybindingService;
        this._modeService = _modeService;
        this._languageConfigurationService = _languageConfigurationService;
        this._disposeOnNewModel = new $9cWcn.DisposableStore();
        this._callOnDispose = new $9cWcn.DisposableStore();
        this._onDidSelectReference = new $5YaSO.Emitter();
        this.onDidSelectReference = this._onDidSelectReference.event;
        this._dim = new $bDzmQ.Dimension(0, 0);
        this._applyTheme(themeService.getColorTheme());
        this._callOnDispose.add(themeService.onDidColorThemeChange(this._applyTheme.bind(this)));
        this._peekViewService.addExclusiveWidget(editor, this);
        this.create();
    }
    dispose() {
        this.setModel(undefined);
        this._callOnDispose.dispose();
        this._disposeOnNewModel.dispose();
        $9cWcn.dispose(this._preview);
        $9cWcn.dispose(this._previewNotAvailableMessage);
        $9cWcn.dispose(this._tree);
        $9cWcn.dispose(this._previewModelReference);
        this._splitView.dispose();
        super.dispose();
    }
    _applyTheme(theme) {
        const borderColor = theme.getColor($f45c93015d251d27$exports.peekViewBorder) || $bjjQO.Color.transparent;
        this.style({
            arrowColor: borderColor,
            frameColor: borderColor,
            headerBackgroundColor: theme.getColor($f45c93015d251d27$exports.peekViewTitleBackground) || $bjjQO.Color.transparent,
            primaryHeadingColor: theme.getColor($f45c93015d251d27$exports.peekViewTitleForeground),
            secondaryHeadingColor: theme.getColor($f45c93015d251d27$exports.peekViewTitleInfoForeground)
        });
    }
    show(where) {
        this.editor.revealRangeInCenterIfOutsideViewport(where, 0 /* Smooth */ );
        super.show(where, this.layoutData.heightInLines || 18);
    }
    focusOnReferenceTree() {
        this._tree.domFocus();
    }
    focusOnPreviewEditor() {
        this._preview.focus();
    }
    isPreviewEditorFocused() {
        return this._preview.hasTextFocus();
    }
    _onTitleClick(e) {
        if (this._preview && this._preview.getModel()) this._onDidSelectReference.fire({
            element: this._getFocusedReference(),
            kind: e.ctrlKey || e.metaKey || e.altKey ? 'side' : 'open',
            source: 'title'
        });
    }
    _fillBody(containerElement) {
        this.setCssClass('reference-zone-widget');
        // message pane
        this._messageContainer = $bDzmQ.append(containerElement, $bDzmQ.$('div.messages'));
        $bDzmQ.hide(this._messageContainer);
        this._splitView = new $ilw5j.SplitView(containerElement, {
            orientation: 1 /* HORIZONTAL */ 
        });
        // editor
        this._previewContainer = $bDzmQ.append(containerElement, $bDzmQ.$('div.preview.inline'));
        let options = {
            scrollBeyondLastLine: false,
            scrollbar: {
                verticalScrollbarSize: 14,
                horizontal: 'auto',
                useShadows: true,
                verticalHasArrows: false,
                horizontalHasArrows: false,
                alwaysConsumeMouseWheel: false
            },
            overviewRulerLanes: 2,
            fixedOverflowWidgets: true,
            minimap: {
                enabled: false
            }
        };
        this._preview = this._instantiationService.createInstance($998bf45916d8a6ec$exports.EmbeddedCodeEditorWidget, this._previewContainer, options, this.editor);
        $bDzmQ.hide(this._previewContainer);
        this._previewNotAvailableMessage = new $91ntV.TextModel($4dEdH.localize('missingPreviewMessage', "no preview available"), $91ntV.TextModel.DEFAULT_CREATION_OPTIONS, null, null, this._undoRedoService, this._modeService, this._languageConfigurationService);
        // tree
        this._treeContainer = $bDzmQ.append(containerElement, $bDzmQ.$('div.ref-tree.inline'));
        const treeOptions = {
            keyboardSupport: this._defaultTreeKeyboardSupport,
            accessibilityProvider: new $b05e994f67db906f$exports.AccessibilityProvider(),
            keyboardNavigationLabelProvider: this._instantiationService.createInstance($b05e994f67db906f$exports.StringRepresentationProvider),
            identityProvider: new $b05e994f67db906f$exports.IdentityProvider(),
            openOnSingleClick: true,
            selectionNavigation: true,
            overrideStyles: {
                listBackground: $f45c93015d251d27$exports.peekViewResultsBackground
            }
        };
        if (this._defaultTreeKeyboardSupport) // the tree will consume `Escape` and prevent the widget from closing
        this._callOnDispose.add($bDzmQ.addStandardDisposableListener(this._treeContainer, 'keydown', (e)=>{
            if (e.equals(9 /* Escape */ )) {
                this._keybindingService.dispatchEvent(e, e.target);
                e.stopPropagation();
            }
        }, true));
        this._tree = this._instantiationService.createInstance($dcaf7f68c2e5ca40$var$ReferencesTree, 'ReferencesWidget', this._treeContainer, new $b05e994f67db906f$exports.Delegate(), [
            this._instantiationService.createInstance($b05e994f67db906f$exports.FileReferencesRenderer),
            this._instantiationService.createInstance($b05e994f67db906f$exports.OneReferenceRenderer), 
        ], this._instantiationService.createInstance($b05e994f67db906f$exports.DataSource), treeOptions);
        // split stuff
        this._splitView.addView({
            onDidChange: $5YaSO.Event.None,
            element: this._previewContainer,
            minimumSize: 200,
            maximumSize: Number.MAX_VALUE,
            layout: (width)=>{
                this._preview.layout({
                    height: this._dim.height,
                    width: width
                });
            }
        }, $ilw5j.Sizing.Distribute);
        this._splitView.addView({
            onDidChange: $5YaSO.Event.None,
            element: this._treeContainer,
            minimumSize: 100,
            maximumSize: Number.MAX_VALUE,
            layout: (width)=>{
                this._treeContainer.style.height = `${this._dim.height}px`;
                this._treeContainer.style.width = `${width}px`;
                this._tree.layout(this._dim.height, width);
            }
        }, $ilw5j.Sizing.Distribute);
        this._disposables.add(this._splitView.onDidSashChange(()=>{
            if (this._dim.width) this.layoutData.ratio = this._splitView.getViewSize(0) / this._dim.width;
        }, undefined));
        // listen on selection and focus
        let onEvent = (element, kind)=>{
            if (element instanceof $d939e0b708222bac$exports.OneReference) {
                if (kind === 'show') this._revealReference(element, false);
                this._onDidSelectReference.fire({
                    element: element,
                    kind: kind,
                    source: 'tree'
                });
            }
        };
        this._tree.onDidOpen((e)=>{
            if (e.sideBySide) onEvent(e.element, 'side');
            else if (e.editorOptions.pinned) onEvent(e.element, 'goto');
            else onEvent(e.element, 'show');
        });
        $bDzmQ.hide(this._treeContainer);
    }
    _onWidth(width) {
        if (this._dim) this._doLayoutBody(this._dim.height, width);
    }
    _doLayoutBody(heightInPixel, widthInPixel) {
        super._doLayoutBody(heightInPixel, widthInPixel);
        this._dim = new $bDzmQ.Dimension(widthInPixel, heightInPixel);
        this.layoutData.heightInLines = this._viewZone ? this._viewZone.heightInLines : this.layoutData.heightInLines;
        this._splitView.layout(widthInPixel);
        this._splitView.resizeView(0, widthInPixel * this.layoutData.ratio);
    }
    setSelection(selection) {
        return this._revealReference(selection, true).then(()=>{
            if (!this._model) // disposed
            return;
            // show in tree
            this._tree.setSelection([
                selection
            ]);
            this._tree.setFocus([
                selection
            ]);
        });
    }
    setModel(newModel) {
        // clean up
        this._disposeOnNewModel.clear();
        this._model = newModel;
        if (this._model) return this._onNewModel();
        return Promise.resolve();
    }
    _onNewModel() {
        if (!this._model) return Promise.resolve(undefined);
        if (this._model.isEmpty) {
            this.setTitle('');
            this._messageContainer.innerText = $4dEdH.localize('noResults', "No results");
            $bDzmQ.show(this._messageContainer);
            return Promise.resolve(undefined);
        }
        $bDzmQ.hide(this._messageContainer);
        this._decorationsManager = new $dcaf7f68c2e5ca40$var$DecorationsManager(this._preview, this._model);
        this._disposeOnNewModel.add(this._decorationsManager);
        // listen on model changes
        this._disposeOnNewModel.add(this._model.onDidChangeReferenceRange((reference)=>this._tree.rerender(reference)
        ));
        // listen on editor
        this._disposeOnNewModel.add(this._preview.onMouseDown((e)=>{
            const { event: event , target: target  } = e;
            if (event.detail !== 2) return;
            const element = this._getFocusedReference();
            if (!element) return;
            this._onDidSelectReference.fire({
                element: {
                    uri: element.uri,
                    range: target.range
                },
                kind: event.ctrlKey || event.metaKey || event.altKey ? 'side' : 'open',
                source: 'editor'
            });
        }));
        // make sure things are rendered
        this.container.classList.add('results-loaded');
        $bDzmQ.show(this._treeContainer);
        $bDzmQ.show(this._previewContainer);
        this._splitView.layout(this._dim.width);
        this.focusOnReferenceTree();
        // pick input and a reference to begin with
        return this._tree.setInput(this._model.groups.length === 1 ? this._model.groups[0] : this._model);
    }
    _getFocusedReference() {
        const [element] = this._tree.getFocus();
        if (element instanceof $d939e0b708222bac$exports.OneReference) return element;
        else if (element instanceof $d939e0b708222bac$exports.FileReferences) {
            if (element.children.length > 0) return element.children[0];
        }
        return undefined;
    }
    revealReference(reference) {
        return $dcaf7f68c2e5ca40$var$__awaiter(this, void 0, void 0, function*() {
            yield this._revealReference(reference, false);
            this._onDidSelectReference.fire({
                element: reference,
                kind: 'goto',
                source: 'tree'
            });
        });
    }
    _revealReference(reference, revealParent) {
        return $dcaf7f68c2e5ca40$var$__awaiter(this, void 0, void 0, function*() {
            // check if there is anything to do...
            if (this._revealedReference === reference) return;
            this._revealedReference = reference;
            // Update widget header
            if (reference.uri.scheme !== $8GPp8.Schemas.inMemory) this.setTitle($5Aea5.basenameOrAuthority(reference.uri), this._uriLabel.getUriLabel($5Aea5.dirname(reference.uri)));
            else this.setTitle($4dEdH.localize('peekView.alternateTitle', "References"));
            const promise = this._textModelResolverService.createModelReference(reference.uri);
            if (this._tree.getInput() === reference.parent) this._tree.reveal(reference);
            else {
                if (revealParent) this._tree.reveal(reference.parent);
                yield this._tree.expand(reference.parent);
                this._tree.reveal(reference);
            }
            const ref = yield promise;
            if (!this._model) {
                // disposed
                ref.dispose();
                return;
            }
            $9cWcn.dispose(this._previewModelReference);
            // show in editor
            const model = ref.object;
            if (model) {
                const scrollType = this._preview.getModel() === model.textEditorModel ? 0 /* Smooth */  : 1 /* Immediate */ ;
                const sel = $d00il.Range.lift(reference.range).collapseToStart();
                this._previewModelReference = ref;
                this._preview.setModel(model.textEditorModel);
                this._preview.setSelection(sel);
                this._preview.revealRangeInCenter(sel, scrollType);
            } else {
                this._preview.setModel(this._previewNotAvailableMessage);
                ref.dispose();
            }
        });
    }
};
$dcaf7f68c2e5ca40$export$a6aef00aae3b3577 = $dcaf7f68c2e5ca40$var$__decorate([
    $dcaf7f68c2e5ca40$var$__param(3, $azIPz.IThemeService),
    $dcaf7f68c2e5ca40$var$__param(4, $aTkrt.ITextModelService),
    $dcaf7f68c2e5ca40$var$__param(5, $fdGPu.IInstantiationService),
    $dcaf7f68c2e5ca40$var$__param(6, $f45c93015d251d27$exports.IPeekViewService),
    $dcaf7f68c2e5ca40$var$__param(7, $8GcbM.ILabelService),
    $dcaf7f68c2e5ca40$var$__param(8, $hXIQW.IUndoRedoService),
    $dcaf7f68c2e5ca40$var$__param(9, $7IxGd.IKeybindingService),
    $dcaf7f68c2e5ca40$var$__param(10, $is5YK.IModeService),
    $dcaf7f68c2e5ca40$var$__param(11, $aKdIg.ILanguageConfigurationService)
], $dcaf7f68c2e5ca40$export$a6aef00aae3b3577);


/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $356aea24a08017bc$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var $356aea24a08017bc$var$__param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
};
var $356aea24a08017bc$var$__awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
const $356aea24a08017bc$export$8ecb7f78c7d67b70 = new $cxCeF.RawContextKey('referenceSearchVisible', false, $4dEdH.localize('referenceSearchVisible', "Whether reference peek is visible, like 'Peek References' or 'Peek Definition'"));
let $356aea24a08017bc$export$60e6f978b59c492d = class $356aea24a08017bc$export$60e6f978b59c492d {
    constructor(_defaultTreeKeyboardSupport, _editor, contextKeyService, _editorService, _notificationService, _instantiationService, _storageService, _configurationService){
        this._defaultTreeKeyboardSupport = _defaultTreeKeyboardSupport;
        this._editor = _editor;
        this._editorService = _editorService;
        this._notificationService = _notificationService;
        this._instantiationService = _instantiationService;
        this._storageService = _storageService;
        this._configurationService = _configurationService;
        this._disposables = new $9cWcn.DisposableStore();
        this._requestIdPool = 0;
        this._ignoreModelChangeEvent = false;
        this._referenceSearchVisible = $356aea24a08017bc$export$8ecb7f78c7d67b70.bindTo(contextKeyService);
    }
    static get(editor) {
        return editor.getContribution($356aea24a08017bc$export$60e6f978b59c492d.ID);
    }
    dispose() {
        var _a, _b;
        this._referenceSearchVisible.reset();
        this._disposables.dispose();
        (_a = this._widget) === null || _a === void 0 || _a.dispose();
        (_b = this._model) === null || _b === void 0 || _b.dispose();
        this._widget = undefined;
        this._model = undefined;
    }
    toggleWidget(range, modelPromise, peekMode) {
        // close current widget and return early is position didn't change
        let widgetPosition;
        if (this._widget) widgetPosition = this._widget.position;
        this.closeWidget();
        if (!!widgetPosition && range.containsPosition(widgetPosition)) return;
        this._peekMode = peekMode;
        this._referenceSearchVisible.set(true);
        // close the widget on model/mode changes
        this._disposables.add(this._editor.onDidChangeModelLanguage(()=>{
            this.closeWidget();
        }));
        this._disposables.add(this._editor.onDidChangeModel(()=>{
            if (!this._ignoreModelChangeEvent) this.closeWidget();
        }));
        const storageKey = 'peekViewLayout';
        const data = $dcaf7f68c2e5ca40$exports.LayoutData.fromJSON(this._storageService.get(storageKey, 0 /* GLOBAL */ , '{}'));
        this._widget = this._instantiationService.createInstance($dcaf7f68c2e5ca40$exports.ReferenceWidget, this._editor, this._defaultTreeKeyboardSupport, data);
        this._widget.setTitle($4dEdH.localize('labelLoading', "Loading..."));
        this._widget.show(range);
        this._disposables.add(this._widget.onDidClose(()=>{
            modelPromise.cancel();
            if (this._widget) {
                this._storageService.store(storageKey, JSON.stringify(this._widget.layoutData), 0 /* GLOBAL */ , 1 /* MACHINE */ );
                this._widget = undefined;
            }
            this.closeWidget();
        }));
        this._disposables.add(this._widget.onDidSelectReference((event)=>{
            let { element: element , kind: kind  } = event;
            if (!element) return;
            switch(kind){
                case 'open':
                    if (event.source !== 'editor' || !this._configurationService.getValue('editor.stablePeek')) // when stable peek is configured we don't close
                    // the peek window on selecting the editor
                    this.openReference(element, false, false);
                    break;
                case 'side':
                    this.openReference(element, true, false);
                    break;
                case 'goto':
                    if (peekMode) this._gotoReference(element);
                    else this.openReference(element, false, true);
                    break;
            }
        }));
        const requestId = ++this._requestIdPool;
        modelPromise.then((model)=>{
            var _a;
            // still current request? widget still open?
            if (requestId !== this._requestIdPool || !this._widget) {
                model.dispose();
                return undefined;
            }
            (_a = this._model) === null || _a === void 0 || _a.dispose();
            this._model = model;
            // show widget
            return this._widget.setModel(this._model).then(()=>{
                if (this._widget && this._model && this._editor.hasModel()) {
                    // set title
                    if (!this._model.isEmpty) this._widget.setMetaTitle($4dEdH.localize('metaTitle.N', "{0} ({1})", this._model.title, this._model.references.length));
                    else this._widget.setMetaTitle('');
                    // set 'best' selection
                    let uri = this._editor.getModel().uri;
                    let pos = new $dcxQ7.Position(range.startLineNumber, range.startColumn);
                    let selection = this._model.nearestReference(uri, pos);
                    if (selection) return this._widget.setSelection(selection).then(()=>{
                        if (this._widget && this._editor.getOption(76 /* peekWidgetDefaultFocus */ ) === 'editor') this._widget.focusOnPreviewEditor();
                    });
                }
                return undefined;
            });
        }, (error)=>{
            this._notificationService.error(error);
        });
    }
    changeFocusBetweenPreviewAndReferences() {
        if (!this._widget) // can be called while still resolving...
        return;
        if (this._widget.isPreviewEditorFocused()) this._widget.focusOnReferenceTree();
        else this._widget.focusOnPreviewEditor();
    }
    goToNextOrPreviousReference(fwd) {
        return $356aea24a08017bc$var$__awaiter(this, void 0, void 0, function*() {
            if (!this._editor.hasModel() || !this._model || !this._widget) // can be called while still resolving...
            return;
            const currentPosition = this._widget.position;
            if (!currentPosition) return;
            const source = this._model.nearestReference(this._editor.getModel().uri, currentPosition);
            if (!source) return;
            const target = this._model.nextOrPreviousReference(source, fwd);
            const editorFocus = this._editor.hasTextFocus();
            const previewEditorFocus = this._widget.isPreviewEditorFocused();
            yield this._widget.setSelection(target);
            yield this._gotoReference(target);
            if (editorFocus) this._editor.focus();
            else if (this._widget && previewEditorFocus) this._widget.focusOnPreviewEditor();
        });
    }
    revealReference(reference) {
        return $356aea24a08017bc$var$__awaiter(this, void 0, void 0, function*() {
            if (!this._editor.hasModel() || !this._model || !this._widget) // can be called while still resolving...
            return;
            yield this._widget.revealReference(reference);
        });
    }
    closeWidget(focusEditor = true) {
        var _a, _b;
        (_a = this._widget) === null || _a === void 0 || _a.dispose();
        (_b = this._model) === null || _b === void 0 || _b.dispose();
        this._referenceSearchVisible.reset();
        this._disposables.clear();
        this._widget = undefined;
        this._model = undefined;
        if (focusEditor) this._editor.focus();
        this._requestIdPool += 1; // Cancel pending requests
    }
    _gotoReference(ref) {
        if (this._widget) this._widget.hide();
        this._ignoreModelChangeEvent = true;
        const range = $d00il.Range.lift(ref.range).collapseToStart();
        return this._editorService.openCodeEditor({
            resource: ref.uri,
            options: {
                selection: range
            }
        }, this._editor).then((openedEditor)=>{
            var _a;
            this._ignoreModelChangeEvent = false;
            if (!openedEditor || !this._widget) {
                // something went wrong...
                this.closeWidget();
                return;
            }
            if (this._editor === openedEditor) {
                //
                this._widget.show(range);
                this._widget.focusOnReferenceTree();
            } else {
                // we opened a different editor instance which means a different controller instance.
                // therefore we stop with this controller and continue with the other
                const other = $356aea24a08017bc$export$60e6f978b59c492d.get(openedEditor);
                const model = this._model.clone();
                this.closeWidget();
                openedEditor.focus();
                other.toggleWidget(range, $6bXyA.createCancelablePromise((_)=>Promise.resolve(model)
                ), (_a = this._peekMode) !== null && _a !== void 0 ? _a : false);
            }
        }, (err)=>{
            this._ignoreModelChangeEvent = false;
            $gPkHZ.onUnexpectedError(err);
        });
    }
    openReference(ref, sideBySide, pinned) {
        // clear stage
        if (!sideBySide) this.closeWidget();
        const { uri: uri , range: range  } = ref;
        this._editorService.openCodeEditor({
            resource: uri,
            options: {
                selection: range,
                pinned: pinned
            }
        }, this._editor, sideBySide);
    }
};
$356aea24a08017bc$export$60e6f978b59c492d.ID = 'editor.contrib.referencesController';
$356aea24a08017bc$export$60e6f978b59c492d = $356aea24a08017bc$var$__decorate([
    $356aea24a08017bc$var$__param(2, $cxCeF.IContextKeyService),
    $356aea24a08017bc$var$__param(3, $2Qfl0.ICodeEditorService),
    $356aea24a08017bc$var$__param(4, $kCOKl.INotificationService),
    $356aea24a08017bc$var$__param(5, $fdGPu.IInstantiationService),
    $356aea24a08017bc$var$__param(6, $2AUoS.IStorageService),
    $356aea24a08017bc$var$__param(7, $35IZ9.IConfigurationService)
], $356aea24a08017bc$export$60e6f978b59c492d);
function $356aea24a08017bc$var$withController(accessor, fn) {
    const outerEditor = $f45c93015d251d27$exports.getOuterEditor(accessor);
    if (!outerEditor) return;
    let controller = $356aea24a08017bc$export$60e6f978b59c492d.get(outerEditor);
    if (controller) fn(controller);
}
$6AWYG.KeybindingsRegistry.registerCommandAndKeybindingRule({
    id: 'togglePeekWidgetFocus',
    weight: 100 /* EditorContrib */ ,
    primary: $fuc8X.KeyChord(2089 /* KeyK */ , 60 /* F2 */ ),
    when: $cxCeF.ContextKeyExpr.or($356aea24a08017bc$export$8ecb7f78c7d67b70, $f45c93015d251d27$exports.PeekContext.inPeekEditor),
    handler (accessor) {
        $356aea24a08017bc$var$withController(accessor, (controller)=>{
            controller.changeFocusBetweenPreviewAndReferences();
        });
    }
});
$6AWYG.KeybindingsRegistry.registerCommandAndKeybindingRule({
    id: 'goToNextReference',
    weight: 90,
    primary: 62 /* F4 */ ,
    secondary: [
        70 /* F12 */ 
    ],
    when: $cxCeF.ContextKeyExpr.or($356aea24a08017bc$export$8ecb7f78c7d67b70, $f45c93015d251d27$exports.PeekContext.inPeekEditor),
    handler (accessor) {
        $356aea24a08017bc$var$withController(accessor, (controller)=>{
            controller.goToNextOrPreviousReference(true);
        });
    }
});
$6AWYG.KeybindingsRegistry.registerCommandAndKeybindingRule({
    id: 'goToPreviousReference',
    weight: 90,
    primary: 1086 /* F4 */ ,
    secondary: [
        1094 /* F12 */ 
    ],
    when: $cxCeF.ContextKeyExpr.or($356aea24a08017bc$export$8ecb7f78c7d67b70, $f45c93015d251d27$exports.PeekContext.inPeekEditor),
    handler (accessor) {
        $356aea24a08017bc$var$withController(accessor, (controller)=>{
            controller.goToNextOrPreviousReference(false);
        });
    }
});
// commands that aren't needed anymore because there is now ContextKeyExpr.OR
$8tcMz.CommandsRegistry.registerCommandAlias('goToNextReferenceFromEmbeddedEditor', 'goToNextReference');
$8tcMz.CommandsRegistry.registerCommandAlias('goToPreviousReferenceFromEmbeddedEditor', 'goToPreviousReference');
// close
$8tcMz.CommandsRegistry.registerCommandAlias('closeReferenceSearchEditor', 'closeReferenceSearch');
$8tcMz.CommandsRegistry.registerCommand('closeReferenceSearch', (accessor)=>$356aea24a08017bc$var$withController(accessor, (controller)=>controller.closeWidget()
    )
);
$6AWYG.KeybindingsRegistry.registerKeybindingRule({
    id: 'closeReferenceSearch',
    weight: -1,
    primary: 9 /* Escape */ ,
    secondary: [
        1033 /* Escape */ 
    ],
    when: $cxCeF.ContextKeyExpr.and($f45c93015d251d27$exports.PeekContext.inPeekEditor, $cxCeF.ContextKeyExpr.not('config.editor.stablePeek'))
});
$6AWYG.KeybindingsRegistry.registerKeybindingRule({
    id: 'closeReferenceSearch',
    weight: 250,
    primary: 9 /* Escape */ ,
    secondary: [
        1033 /* Escape */ 
    ],
    when: $cxCeF.ContextKeyExpr.and($356aea24a08017bc$export$8ecb7f78c7d67b70, $cxCeF.ContextKeyExpr.not('config.editor.stablePeek'))
});
$6AWYG.KeybindingsRegistry.registerCommandAndKeybindingRule({
    id: 'revealReference',
    weight: 200 /* WorkbenchContrib */ ,
    primary: 3 /* Enter */ ,
    mac: {
        primary: 3 /* Enter */ ,
        secondary: [
            2066 /* DownArrow */ 
        ]
    },
    when: $cxCeF.ContextKeyExpr.and($356aea24a08017bc$export$8ecb7f78c7d67b70, $7UXCS.WorkbenchListFocusContextKey),
    handler (accessor) {
        var _a;
        const listService = accessor.get($7UXCS.IListService);
        const focus = (_a = listService.lastFocusedList) === null || _a === void 0 ? void 0 : _a.getFocus();
        if (Array.isArray(focus) && focus[0] instanceof $d939e0b708222bac$exports.OneReference) $356aea24a08017bc$var$withController(accessor, (controller)=>controller.revealReference(focus[0])
        );
    }
});
$6AWYG.KeybindingsRegistry.registerCommandAndKeybindingRule({
    id: 'openReferenceToSide',
    weight: 100 /* EditorContrib */ ,
    primary: 2051 /* Enter */ ,
    mac: {
        primary: 259 /* Enter */ 
    },
    when: $cxCeF.ContextKeyExpr.and($356aea24a08017bc$export$8ecb7f78c7d67b70, $7UXCS.WorkbenchListFocusContextKey),
    handler (accessor) {
        var _a;
        const listService = accessor.get($7UXCS.IListService);
        const focus = (_a = listService.lastFocusedList) === null || _a === void 0 ? void 0 : _a.getFocus();
        if (Array.isArray(focus) && focus[0] instanceof $d939e0b708222bac$exports.OneReference) $356aea24a08017bc$var$withController(accessor, (controller)=>controller.openReference(focus[0], true, true)
        );
    }
});
$8tcMz.CommandsRegistry.registerCommand('openReference', (accessor)=>{
    var _a;
    const listService = accessor.get($7UXCS.IListService);
    const focus = (_a = listService.lastFocusedList) === null || _a === void 0 ? void 0 : _a.getFocus();
    if (Array.isArray(focus) && focus[0] instanceof $d939e0b708222bac$exports.OneReference) $356aea24a08017bc$var$withController(accessor, (controller)=>controller.openReference(focus[0], false, true)
    );
});



var $664892541e4b1672$exports = {};

$parcel$export($664892541e4b1672$exports, "ISymbolNavigationService", () => $664892541e4b1672$export$feb1d4817f01196e, (v) => $664892541e4b1672$export$feb1d4817f01196e = v);

var $5YaSO = parcelRequire("5YaSO");

var $9cWcn = parcelRequire("9cWcn");

var $5Aea5 = parcelRequire("5Aea5");

var $2iJTi = parcelRequire("2iJTi");

var $2Qfl0 = parcelRequire("2Qfl0");

var $d00il = parcelRequire("d00il");

var $4dEdH = parcelRequire("4dEdH");

var $cxCeF = parcelRequire("cxCeF");

var $lf2vF = parcelRequire("lf2vF");

var $fdGPu = parcelRequire("fdGPu");

var $7IxGd = parcelRequire("7IxGd");

var $6AWYG = parcelRequire("6AWYG");

var $kCOKl = parcelRequire("kCOKl");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $664892541e4b1672$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var $664892541e4b1672$var$__param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
};
const $664892541e4b1672$export$8abaed58afa3da78 = new $cxCeF.RawContextKey('hasSymbols', false, $4dEdH.localize('hasSymbols', "Whether there are symbol locations that can be navigated via keyboard-only."));
const $664892541e4b1672$export$feb1d4817f01196e = $fdGPu.createDecorator('ISymbolNavigationService');
let $664892541e4b1672$var$SymbolNavigationService = class SymbolNavigationService {
    constructor(contextKeyService, _editorService, _notificationService, _keybindingService){
        this._editorService = _editorService;
        this._notificationService = _notificationService;
        this._keybindingService = _keybindingService;
        this._currentModel = undefined;
        this._currentIdx = -1;
        this._ignoreEditorChange = false;
        this._ctxHasSymbols = $664892541e4b1672$export$8abaed58afa3da78.bindTo(contextKeyService);
    }
    reset() {
        var _a, _b;
        this._ctxHasSymbols.reset();
        (_a = this._currentState) === null || _a === void 0 || _a.dispose();
        (_b = this._currentMessage) === null || _b === void 0 || _b.dispose();
        this._currentModel = undefined;
        this._currentIdx = -1;
    }
    put(anchor) {
        const refModel = anchor.parent.parent;
        if (refModel.references.length <= 1) {
            this.reset();
            return;
        }
        this._currentModel = refModel;
        this._currentIdx = refModel.references.indexOf(anchor);
        this._ctxHasSymbols.set(true);
        this._showMessage();
        const editorState = new $664892541e4b1672$var$EditorState(this._editorService);
        const listener = editorState.onDidChange((_)=>{
            if (this._ignoreEditorChange) return;
            const editor = this._editorService.getActiveCodeEditor();
            if (!editor) return;
            const model = editor.getModel();
            const position = editor.getPosition();
            if (!model || !position) return;
            let seenUri = false;
            let seenPosition = false;
            for (const reference of refModel.references){
                if ($5Aea5.isEqual(reference.uri, model.uri)) {
                    seenUri = true;
                    seenPosition = seenPosition || $d00il.Range.containsPosition(reference.range, position);
                } else if (seenUri) break;
            }
            if (!seenUri || !seenPosition) this.reset();
        });
        this._currentState = $9cWcn.combinedDisposable(editorState, listener);
    }
    revealNext(source) {
        if (!this._currentModel) return Promise.resolve();
        // get next result and advance
        this._currentIdx += 1;
        this._currentIdx %= this._currentModel.references.length;
        const reference = this._currentModel.references[this._currentIdx];
        // status
        this._showMessage();
        // open editor, ignore events while that happens
        this._ignoreEditorChange = true;
        return this._editorService.openCodeEditor({
            resource: reference.uri,
            options: {
                selection: $d00il.Range.collapseToStart(reference.range),
                selectionRevealType: 3 /* NearTopIfOutsideViewport */ 
            }
        }, source).finally(()=>{
            this._ignoreEditorChange = false;
        });
    }
    _showMessage() {
        var _a;
        (_a = this._currentMessage) === null || _a === void 0 || _a.dispose();
        const kb = this._keybindingService.lookupKeybinding('editor.gotoNextSymbolFromResult');
        const message = kb ? $4dEdH.localize('location.kb', "Symbol {0} of {1}, {2} for next", this._currentIdx + 1, this._currentModel.references.length, kb.getLabel()) : $4dEdH.localize('location', "Symbol {0} of {1}", this._currentIdx + 1, this._currentModel.references.length);
        this._currentMessage = this._notificationService.status(message);
    }
};
$664892541e4b1672$var$SymbolNavigationService = $664892541e4b1672$var$__decorate([
    $664892541e4b1672$var$__param(0, $cxCeF.IContextKeyService),
    $664892541e4b1672$var$__param(1, $2Qfl0.ICodeEditorService),
    $664892541e4b1672$var$__param(2, $kCOKl.INotificationService),
    $664892541e4b1672$var$__param(3, $7IxGd.IKeybindingService)
], $664892541e4b1672$var$SymbolNavigationService);
$lf2vF.registerSingleton($664892541e4b1672$export$feb1d4817f01196e, $664892541e4b1672$var$SymbolNavigationService, true);
$2iJTi.registerEditorCommand(new class extends $2iJTi.EditorCommand {
    constructor(){
        super({
            id: 'editor.gotoNextSymbolFromResult',
            precondition: $664892541e4b1672$export$8abaed58afa3da78,
            kbOpts: {
                weight: 100 /* EditorContrib */ ,
                primary: 70 /* F12 */ 
            }
        });
    }
    runEditorCommand(accessor, editor) {
        return accessor.get($664892541e4b1672$export$feb1d4817f01196e).revealNext(editor);
    }
});
$6AWYG.KeybindingsRegistry.registerCommandAndKeybindingRule({
    id: 'editor.gotoNextSymbolFromResult.cancel',
    weight: 100 /* EditorContrib */ ,
    when: $664892541e4b1672$export$8abaed58afa3da78,
    primary: 9 /* Escape */ ,
    handler (accessor) {
        accessor.get($664892541e4b1672$export$feb1d4817f01196e).reset();
    }
});
//
let $664892541e4b1672$var$EditorState = class EditorState {
    constructor(editorService){
        this._listener = new Map();
        this._disposables = new $9cWcn.DisposableStore();
        this._onDidChange = new $5YaSO.Emitter();
        this.onDidChange = this._onDidChange.event;
        this._disposables.add(editorService.onCodeEditorRemove(this._onDidRemoveEditor, this));
        this._disposables.add(editorService.onCodeEditorAdd(this._onDidAddEditor, this));
        editorService.listCodeEditors().forEach(this._onDidAddEditor, this);
    }
    dispose() {
        this._disposables.dispose();
        this._onDidChange.dispose();
        $9cWcn.dispose(this._listener.values());
    }
    _onDidAddEditor(editor) {
        this._listener.set(editor, $9cWcn.combinedDisposable(editor.onDidChangeCursorPosition((_)=>this._onDidChange.fire({
                editor: editor
            })
        ), editor.onDidChangeModelContent((_)=>this._onDidChange.fire({
                editor: editor
            })
        )));
    }
    _onDidRemoveEditor(editor) {
        var _a;
        (_a = this._listener.get(editor)) === null || _a === void 0 || _a.dispose();
        this._listener.delete(editor);
    }
};
$664892541e4b1672$var$EditorState = $664892541e4b1672$var$__decorate([
    $664892541e4b1672$var$__param(0, $2Qfl0.ICodeEditorService)
], $664892541e4b1672$var$EditorState);





var $4dEdH = parcelRequire("4dEdH");

var $g4v7E = parcelRequire("g4v7E");

var $8tcMz = parcelRequire("8tcMz");

var $cxCeF = parcelRequire("cxCeF");

var $fdGPu = parcelRequire("fdGPu");

var $kCOKl = parcelRequire("kCOKl");

var $4E7vx = parcelRequire("4E7vx");
var $cb782dabccc4510f$exports = {};

$parcel$export($cb782dabccc4510f$exports, "getDefinitionsAtPosition", () => $cb782dabccc4510f$export$6b9dcdfe32ab3450, (v) => $cb782dabccc4510f$export$6b9dcdfe32ab3450 = v);
$parcel$export($cb782dabccc4510f$exports, "getDeclarationsAtPosition", () => $cb782dabccc4510f$export$268ced517630b719, (v) => $cb782dabccc4510f$export$268ced517630b719 = v);
$parcel$export($cb782dabccc4510f$exports, "getImplementationsAtPosition", () => $cb782dabccc4510f$export$7d6802a2edcceb51, (v) => $cb782dabccc4510f$export$7d6802a2edcceb51 = v);
$parcel$export($cb782dabccc4510f$exports, "getTypeDefinitionsAtPosition", () => $cb782dabccc4510f$export$e2b810cd1720408a, (v) => $cb782dabccc4510f$export$e2b810cd1720408a = v);
$parcel$export($cb782dabccc4510f$exports, "getReferencesAtPosition", () => $cb782dabccc4510f$export$2bb33a4e47554443, (v) => $cb782dabccc4510f$export$2bb33a4e47554443 = v);

var $giPcZ = parcelRequire("giPcZ");

var $gPkHZ = parcelRequire("gPkHZ");

var $2iJTi = parcelRequire("2iJTi");

var $4PmRQ = parcelRequire("4PmRQ");

/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $cb782dabccc4510f$var$__awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
function $cb782dabccc4510f$var$getLocationLinks(model, position, registry, provide) {
    const provider1 = registry.ordered(model);
    // get results
    const promises = provider1.map((provider)=>{
        return Promise.resolve(provide(provider, model, position)).then(undefined, (err)=>{
            $gPkHZ.onUnexpectedExternalError(err);
            return undefined;
        });
    });
    return Promise.all(promises).then((values)=>{
        const result = [];
        for (let value of values){
            if (Array.isArray(value)) result.push(...value);
            else if (value) result.push(value);
        }
        return result;
    });
}
function $cb782dabccc4510f$export$6b9dcdfe32ab3450(model1, position1, token) {
    return $cb782dabccc4510f$var$getLocationLinks(model1, position1, $4PmRQ.DefinitionProviderRegistry, (provider, model, position)=>{
        return provider.provideDefinition(model, position, token);
    });
}
function $cb782dabccc4510f$export$268ced517630b719(model2, position2, token) {
    return $cb782dabccc4510f$var$getLocationLinks(model2, position2, $4PmRQ.DeclarationProviderRegistry, (provider, model, position)=>{
        return provider.provideDeclaration(model, position, token);
    });
}
function $cb782dabccc4510f$export$7d6802a2edcceb51(model3, position3, token) {
    return $cb782dabccc4510f$var$getLocationLinks(model3, position3, $4PmRQ.ImplementationProviderRegistry, (provider, model, position)=>{
        return provider.provideImplementation(model, position, token);
    });
}
function $cb782dabccc4510f$export$e2b810cd1720408a(model4, position4, token) {
    return $cb782dabccc4510f$var$getLocationLinks(model4, position4, $4PmRQ.TypeDefinitionProviderRegistry, (provider, model, position)=>{
        return provider.provideTypeDefinition(model, position, token);
    });
}
function $cb782dabccc4510f$export$2bb33a4e47554443(model5, position5, compact, token) {
    return $cb782dabccc4510f$var$getLocationLinks(model5, position5, $4PmRQ.ReferenceProviderRegistry, (provider, model, position)=>$cb782dabccc4510f$var$__awaiter(this, void 0, void 0, function*() {
            const result = yield provider.provideReferences(model, position, {
                includeDeclaration: true
            }, token);
            if (!compact || !result || result.length !== 2) return result;
            const resultWithoutDeclaration = yield provider.provideReferences(model, position, {
                includeDeclaration: false
            }, token);
            if (resultWithoutDeclaration && resultWithoutDeclaration.length === 1) return resultWithoutDeclaration;
            return result;
        })
    );
}
// -- API commands ----
function $cb782dabccc4510f$var$_sortedAndDeduped(callback) {
    return $cb782dabccc4510f$var$__awaiter(this, void 0, void 0, function*() {
        const rawLinks = yield callback();
        const model = new $d939e0b708222bac$exports.ReferencesModel(rawLinks, '');
        const modelLinks = model.references.map((ref)=>ref.link
        );
        model.dispose();
        return modelLinks;
    });
}
$2iJTi.registerModelAndPositionCommand('_executeDefinitionProvider', (model, position)=>$cb782dabccc4510f$var$_sortedAndDeduped(()=>$cb782dabccc4510f$export$6b9dcdfe32ab3450(model, position, $giPcZ.CancellationToken.None)
    )
);
$2iJTi.registerModelAndPositionCommand('_executeDeclarationProvider', (model, position)=>$cb782dabccc4510f$var$_sortedAndDeduped(()=>$cb782dabccc4510f$export$268ced517630b719(model, position, $giPcZ.CancellationToken.None)
    )
);
$2iJTi.registerModelAndPositionCommand('_executeImplementationProvider', (model, position)=>$cb782dabccc4510f$var$_sortedAndDeduped(()=>$cb782dabccc4510f$export$7d6802a2edcceb51(model, position, $giPcZ.CancellationToken.None)
    )
);
$2iJTi.registerModelAndPositionCommand('_executeTypeDefinitionProvider', (model, position)=>$cb782dabccc4510f$var$_sortedAndDeduped(()=>$cb782dabccc4510f$export$e2b810cd1720408a(model, position, $giPcZ.CancellationToken.None)
    )
);
$2iJTi.registerModelAndPositionCommand('_executeReferenceProvider', (model, position)=>$cb782dabccc4510f$var$_sortedAndDeduped(()=>$cb782dabccc4510f$export$2bb33a4e47554443(model, position, false, $giPcZ.CancellationToken.None)
    )
);


/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $e9b66150677fe80b$var$__awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var $e9b66150677fe80b$var$_a, $e9b66150677fe80b$var$_b, $e9b66150677fe80b$var$_c, $e9b66150677fe80b$var$_d, $e9b66150677fe80b$var$_e, $e9b66150677fe80b$var$_f, $e9b66150677fe80b$var$_g, $e9b66150677fe80b$var$_h;
$g4v7E.MenuRegistry.appendMenuItem($g4v7E.MenuId.EditorContext, {
    submenu: $g4v7E.MenuId.EditorContextPeek,
    title: $4dEdH.localize('peek.submenu', "Peek"),
    group: 'navigation',
    order: 100
});
const $e9b66150677fe80b$var$_goToActionIds = new Set();
function $e9b66150677fe80b$var$registerGoToAction(ctor) {
    const result = new ctor();
    $2iJTi.registerInstantiatedEditorAction(result);
    $e9b66150677fe80b$var$_goToActionIds.add(result.id);
    return result;
}
class $e9b66150677fe80b$var$SymbolNavigationAction extends $2iJTi.EditorAction {
    constructor(configuration, opts){
        super(opts);
        this._configuration = configuration;
    }
    run(accessor, editor) {
        if (!editor.hasModel()) return Promise.resolve(undefined);
        const notificationService = accessor.get($kCOKl.INotificationService);
        const editorService = accessor.get($2Qfl0.ICodeEditorService);
        const progressService = accessor.get($4E7vx.IEditorProgressService);
        const symbolNavService = accessor.get($664892541e4b1672$exports.ISymbolNavigationService);
        const model = editor.getModel();
        const pos = editor.getPosition();
        const cts = new $r7siU.EditorStateCancellationTokenSource(editor, 5 /* Position */ );
        const promise = $6bXyA.raceCancellation(this._getLocationModel(model, pos, cts.token), cts.token).then((references)=>$e9b66150677fe80b$var$__awaiter(this, void 0, void 0, function*() {
                if (!references || cts.token.isCancellationRequested) return;
                $aIbUW.alert(references.ariaMessage);
                let altAction;
                if (references.referenceAt(model.uri, pos)) {
                    const altActionId = this._getAlternativeCommand(editor);
                    if (altActionId !== this.id && $e9b66150677fe80b$var$_goToActionIds.has(altActionId)) altAction = editor.getAction(altActionId);
                }
                const referenceCount = references.references.length;
                if (referenceCount === 0) // no result -> show message
                {
                    if (!this._configuration.muteMessage) {
                        const info = model.getWordAtPosition(pos);
                        $25f94a4f82af6366$exports.MessageController.get(editor).showMessage(this._getNoResultFoundMessage(info), pos);
                    }
                } else if (referenceCount === 1 && altAction) // already at the only result, run alternative
                altAction.run();
                else // normal results handling
                return this._onResult(editorService, symbolNavService, editor, references);
            })
        , (err)=>{
            // report an error
            notificationService.error(err);
        }).finally(()=>{
            cts.dispose();
        });
        progressService.showWhile(promise, 250);
        return promise;
    }
    _onResult(editorService, symbolNavService, editor, model) {
        return $e9b66150677fe80b$var$__awaiter(this, void 0, void 0, function*() {
            const gotoLocation = this._getGoToPreference(editor);
            if (!(editor instanceof $998bf45916d8a6ec$exports.EmbeddedCodeEditorWidget) && (this._configuration.openInPeek || gotoLocation === 'peek' && model.references.length > 1)) this._openInPeek(editor, model);
            else {
                const next = model.firstReference();
                const peek = model.references.length > 1 && gotoLocation === 'gotoAndPeek';
                const targetEditor = yield this._openReference(editor, editorService, next, this._configuration.openToSide, !peek);
                if (peek && targetEditor) this._openInPeek(targetEditor, model);
                else model.dispose();
                // keep remaining locations around when using
                // 'goto'-mode
                if (gotoLocation === 'goto') symbolNavService.put(next);
            }
        });
    }
    _openReference(editor, editorService, reference, sideBySide, highlight) {
        return $e9b66150677fe80b$var$__awaiter(this, void 0, void 0, function*() {
            // range is the target-selection-range when we have one
            // and the fallback is the 'full' range
            let range = undefined;
            if ($4PmRQ.isLocationLink(reference)) range = reference.targetSelectionRange;
            if (!range) range = reference.range;
            if (!range) return undefined;
            const targetEditor = yield editorService.openCodeEditor({
                resource: reference.uri,
                options: {
                    selection: $d00il.Range.collapseToStart(range),
                    selectionRevealType: 3 /* NearTopIfOutsideViewport */ 
                }
            }, editor, sideBySide);
            if (!targetEditor) return undefined;
            if (highlight) {
                const modelNow = targetEditor.getModel();
                const ids = targetEditor.deltaDecorations([], [
                    {
                        range: range,
                        options: {
                            description: 'symbol-navigate-action-highlight',
                            className: 'symbolHighlight'
                        }
                    }
                ]);
                setTimeout(()=>{
                    if (targetEditor.getModel() === modelNow) targetEditor.deltaDecorations(ids, []);
                }, 350);
            }
            return targetEditor;
        });
    }
    _openInPeek(target, model) {
        let controller = $356aea24a08017bc$exports.ReferencesController.get(target);
        if (controller && target.hasModel()) controller.toggleWidget(target.getSelection(), $6bXyA.createCancelablePromise((_)=>Promise.resolve(model)
        ), this._configuration.openInPeek);
        else model.dispose();
    }
}
class $e9b66150677fe80b$export$5aed1003b9513172 extends $e9b66150677fe80b$var$SymbolNavigationAction {
    _getLocationModel(model, position, token) {
        return $e9b66150677fe80b$var$__awaiter(this, void 0, void 0, function*() {
            return new $d939e0b708222bac$exports.ReferencesModel((yield $cb782dabccc4510f$exports.getDefinitionsAtPosition(model, position, token)), $4dEdH.localize('def.title', 'Definitions'));
        });
    }
    _getNoResultFoundMessage(info) {
        return info && info.word ? $4dEdH.localize('noResultWord', "No definition found for '{0}'", info.word) : $4dEdH.localize('generic.noResults', "No definition found");
    }
    _getAlternativeCommand(editor) {
        return editor.getOption(50 /* gotoLocation */ ).alternativeDefinitionCommand;
    }
    _getGoToPreference(editor) {
        return editor.getOption(50 /* gotoLocation */ ).multipleDefinitions;
    }
}
const $e9b66150677fe80b$var$goToDefinitionKb = $lb0Ah.isWeb && !$5yY14.isStandalone ? 2118 /* F12 */  : 70 /* F12 */ ;
$e9b66150677fe80b$var$registerGoToAction(($e9b66150677fe80b$var$_a = class GoToDefinitionAction extends $e9b66150677fe80b$export$5aed1003b9513172 {
    constructor(){
        super({
            openToSide: false,
            openInPeek: false,
            muteMessage: false
        }, {
            id: GoToDefinitionAction.id,
            label: $4dEdH.localize('actions.goToDecl.label', "Go to Definition"),
            alias: 'Go to Definition',
            precondition: $cxCeF.ContextKeyExpr.and($ibKGQ.EditorContextKeys.hasDefinitionProvider, $ibKGQ.EditorContextKeys.isInWalkThroughSnippet.toNegated()),
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.editorTextFocus,
                primary: $e9b66150677fe80b$var$goToDefinitionKb,
                weight: 100 /* EditorContrib */ 
            },
            contextMenuOpts: {
                group: 'navigation',
                order: 1.1
            }
        });
        $8tcMz.CommandsRegistry.registerCommandAlias('editor.action.goToDeclaration', GoToDefinitionAction.id);
    }
}, $e9b66150677fe80b$var$_a.id = 'editor.action.revealDefinition', $e9b66150677fe80b$var$_a));
$e9b66150677fe80b$var$registerGoToAction(($e9b66150677fe80b$var$_b = class OpenDefinitionToSideAction extends $e9b66150677fe80b$export$5aed1003b9513172 {
    constructor(){
        super({
            openToSide: true,
            openInPeek: false,
            muteMessage: false
        }, {
            id: OpenDefinitionToSideAction.id,
            label: $4dEdH.localize('actions.goToDeclToSide.label', "Open Definition to the Side"),
            alias: 'Open Definition to the Side',
            precondition: $cxCeF.ContextKeyExpr.and($ibKGQ.EditorContextKeys.hasDefinitionProvider, $ibKGQ.EditorContextKeys.isInWalkThroughSnippet.toNegated()),
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.editorTextFocus,
                primary: $fuc8X.KeyChord(2089 /* KeyK */ , $e9b66150677fe80b$var$goToDefinitionKb),
                weight: 100 /* EditorContrib */ 
            }
        });
        $8tcMz.CommandsRegistry.registerCommandAlias('editor.action.openDeclarationToTheSide', OpenDefinitionToSideAction.id);
    }
}, $e9b66150677fe80b$var$_b.id = 'editor.action.revealDefinitionAside', $e9b66150677fe80b$var$_b));
$e9b66150677fe80b$var$registerGoToAction(($e9b66150677fe80b$var$_c = class PeekDefinitionAction extends $e9b66150677fe80b$export$5aed1003b9513172 {
    constructor(){
        super({
            openToSide: false,
            openInPeek: true,
            muteMessage: false
        }, {
            id: PeekDefinitionAction.id,
            label: $4dEdH.localize('actions.previewDecl.label', "Peek Definition"),
            alias: 'Peek Definition',
            precondition: $cxCeF.ContextKeyExpr.and($ibKGQ.EditorContextKeys.hasDefinitionProvider, $f45c93015d251d27$exports.PeekContext.notInPeekEditor, $ibKGQ.EditorContextKeys.isInWalkThroughSnippet.toNegated()),
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.editorTextFocus,
                primary: 582 /* F12 */ ,
                linux: {
                    primary: 3140 /* F10 */ 
                },
                weight: 100 /* EditorContrib */ 
            },
            contextMenuOpts: {
                menuId: $g4v7E.MenuId.EditorContextPeek,
                group: 'peek',
                order: 2
            }
        });
        $8tcMz.CommandsRegistry.registerCommandAlias('editor.action.previewDeclaration', PeekDefinitionAction.id);
    }
}, $e9b66150677fe80b$var$_c.id = 'editor.action.peekDefinition', $e9b66150677fe80b$var$_c));
//#endregion
//#region --- DECLARATION
class $e9b66150677fe80b$var$DeclarationAction extends $e9b66150677fe80b$var$SymbolNavigationAction {
    _getLocationModel(model, position, token) {
        return $e9b66150677fe80b$var$__awaiter(this, void 0, void 0, function*() {
            return new $d939e0b708222bac$exports.ReferencesModel((yield $cb782dabccc4510f$exports.getDeclarationsAtPosition(model, position, token)), $4dEdH.localize('decl.title', 'Declarations'));
        });
    }
    _getNoResultFoundMessage(info) {
        return info && info.word ? $4dEdH.localize('decl.noResultWord', "No declaration found for '{0}'", info.word) : $4dEdH.localize('decl.generic.noResults', "No declaration found");
    }
    _getAlternativeCommand(editor) {
        return editor.getOption(50 /* gotoLocation */ ).alternativeDeclarationCommand;
    }
    _getGoToPreference(editor) {
        return editor.getOption(50 /* gotoLocation */ ).multipleDeclarations;
    }
}
$e9b66150677fe80b$var$registerGoToAction(($e9b66150677fe80b$var$_d = class GoToDeclarationAction extends $e9b66150677fe80b$var$DeclarationAction {
    constructor(){
        super({
            openToSide: false,
            openInPeek: false,
            muteMessage: false
        }, {
            id: GoToDeclarationAction.id,
            label: $4dEdH.localize('actions.goToDeclaration.label', "Go to Declaration"),
            alias: 'Go to Declaration',
            precondition: $cxCeF.ContextKeyExpr.and($ibKGQ.EditorContextKeys.hasDeclarationProvider, $ibKGQ.EditorContextKeys.isInWalkThroughSnippet.toNegated()),
            contextMenuOpts: {
                group: 'navigation',
                order: 1.3
            }
        });
    }
    _getNoResultFoundMessage(info) {
        return info && info.word ? $4dEdH.localize('decl.noResultWord', "No declaration found for '{0}'", info.word) : $4dEdH.localize('decl.generic.noResults', "No declaration found");
    }
}, $e9b66150677fe80b$var$_d.id = 'editor.action.revealDeclaration', $e9b66150677fe80b$var$_d));
$e9b66150677fe80b$var$registerGoToAction(class PeekDeclarationAction extends $e9b66150677fe80b$var$DeclarationAction {
    constructor(){
        super({
            openToSide: false,
            openInPeek: true,
            muteMessage: false
        }, {
            id: 'editor.action.peekDeclaration',
            label: $4dEdH.localize('actions.peekDecl.label', "Peek Declaration"),
            alias: 'Peek Declaration',
            precondition: $cxCeF.ContextKeyExpr.and($ibKGQ.EditorContextKeys.hasDeclarationProvider, $f45c93015d251d27$exports.PeekContext.notInPeekEditor, $ibKGQ.EditorContextKeys.isInWalkThroughSnippet.toNegated()),
            contextMenuOpts: {
                menuId: $g4v7E.MenuId.EditorContextPeek,
                group: 'peek',
                order: 3
            }
        });
    }
});
//#endregion
//#region --- TYPE DEFINITION
class $e9b66150677fe80b$var$TypeDefinitionAction extends $e9b66150677fe80b$var$SymbolNavigationAction {
    _getLocationModel(model, position, token) {
        return $e9b66150677fe80b$var$__awaiter(this, void 0, void 0, function*() {
            return new $d939e0b708222bac$exports.ReferencesModel((yield $cb782dabccc4510f$exports.getTypeDefinitionsAtPosition(model, position, token)), $4dEdH.localize('typedef.title', 'Type Definitions'));
        });
    }
    _getNoResultFoundMessage(info) {
        return info && info.word ? $4dEdH.localize('goToTypeDefinition.noResultWord', "No type definition found for '{0}'", info.word) : $4dEdH.localize('goToTypeDefinition.generic.noResults', "No type definition found");
    }
    _getAlternativeCommand(editor) {
        return editor.getOption(50 /* gotoLocation */ ).alternativeTypeDefinitionCommand;
    }
    _getGoToPreference(editor) {
        return editor.getOption(50 /* gotoLocation */ ).multipleTypeDefinitions;
    }
}
$e9b66150677fe80b$var$registerGoToAction(($e9b66150677fe80b$var$_e = class GoToTypeDefinitionAction extends $e9b66150677fe80b$var$TypeDefinitionAction {
    constructor(){
        super({
            openToSide: false,
            openInPeek: false,
            muteMessage: false
        }, {
            id: GoToTypeDefinitionAction.ID,
            label: $4dEdH.localize('actions.goToTypeDefinition.label', "Go to Type Definition"),
            alias: 'Go to Type Definition',
            precondition: $cxCeF.ContextKeyExpr.and($ibKGQ.EditorContextKeys.hasTypeDefinitionProvider, $ibKGQ.EditorContextKeys.isInWalkThroughSnippet.toNegated()),
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.editorTextFocus,
                primary: 0,
                weight: 100 /* EditorContrib */ 
            },
            contextMenuOpts: {
                group: 'navigation',
                order: 1.4
            }
        });
    }
}, $e9b66150677fe80b$var$_e.ID = 'editor.action.goToTypeDefinition', $e9b66150677fe80b$var$_e));
$e9b66150677fe80b$var$registerGoToAction(($e9b66150677fe80b$var$_f = class PeekTypeDefinitionAction extends $e9b66150677fe80b$var$TypeDefinitionAction {
    constructor(){
        super({
            openToSide: false,
            openInPeek: true,
            muteMessage: false
        }, {
            id: PeekTypeDefinitionAction.ID,
            label: $4dEdH.localize('actions.peekTypeDefinition.label', "Peek Type Definition"),
            alias: 'Peek Type Definition',
            precondition: $cxCeF.ContextKeyExpr.and($ibKGQ.EditorContextKeys.hasTypeDefinitionProvider, $f45c93015d251d27$exports.PeekContext.notInPeekEditor, $ibKGQ.EditorContextKeys.isInWalkThroughSnippet.toNegated()),
            contextMenuOpts: {
                menuId: $g4v7E.MenuId.EditorContextPeek,
                group: 'peek',
                order: 4
            }
        });
    }
}, $e9b66150677fe80b$var$_f.ID = 'editor.action.peekTypeDefinition', $e9b66150677fe80b$var$_f));
//#endregion
//#region --- IMPLEMENTATION
class $e9b66150677fe80b$var$ImplementationAction extends $e9b66150677fe80b$var$SymbolNavigationAction {
    _getLocationModel(model, position, token) {
        return $e9b66150677fe80b$var$__awaiter(this, void 0, void 0, function*() {
            return new $d939e0b708222bac$exports.ReferencesModel((yield $cb782dabccc4510f$exports.getImplementationsAtPosition(model, position, token)), $4dEdH.localize('impl.title', 'Implementations'));
        });
    }
    _getNoResultFoundMessage(info) {
        return info && info.word ? $4dEdH.localize('goToImplementation.noResultWord', "No implementation found for '{0}'", info.word) : $4dEdH.localize('goToImplementation.generic.noResults', "No implementation found");
    }
    _getAlternativeCommand(editor) {
        return editor.getOption(50 /* gotoLocation */ ).alternativeImplementationCommand;
    }
    _getGoToPreference(editor) {
        return editor.getOption(50 /* gotoLocation */ ).multipleImplementations;
    }
}
$e9b66150677fe80b$var$registerGoToAction(($e9b66150677fe80b$var$_g = class GoToImplementationAction extends $e9b66150677fe80b$var$ImplementationAction {
    constructor(){
        super({
            openToSide: false,
            openInPeek: false,
            muteMessage: false
        }, {
            id: GoToImplementationAction.ID,
            label: $4dEdH.localize('actions.goToImplementation.label', "Go to Implementations"),
            alias: 'Go to Implementations',
            precondition: $cxCeF.ContextKeyExpr.and($ibKGQ.EditorContextKeys.hasImplementationProvider, $ibKGQ.EditorContextKeys.isInWalkThroughSnippet.toNegated()),
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.editorTextFocus,
                primary: 2118 /* F12 */ ,
                weight: 100 /* EditorContrib */ 
            },
            contextMenuOpts: {
                group: 'navigation',
                order: 1.45
            }
        });
    }
}, $e9b66150677fe80b$var$_g.ID = 'editor.action.goToImplementation', $e9b66150677fe80b$var$_g));
$e9b66150677fe80b$var$registerGoToAction(($e9b66150677fe80b$var$_h = class PeekImplementationAction extends $e9b66150677fe80b$var$ImplementationAction {
    constructor(){
        super({
            openToSide: false,
            openInPeek: true,
            muteMessage: false
        }, {
            id: PeekImplementationAction.ID,
            label: $4dEdH.localize('actions.peekImplementation.label', "Peek Implementations"),
            alias: 'Peek Implementations',
            precondition: $cxCeF.ContextKeyExpr.and($ibKGQ.EditorContextKeys.hasImplementationProvider, $f45c93015d251d27$exports.PeekContext.notInPeekEditor, $ibKGQ.EditorContextKeys.isInWalkThroughSnippet.toNegated()),
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.editorTextFocus,
                primary: 3142 /* F12 */ ,
                weight: 100 /* EditorContrib */ 
            },
            contextMenuOpts: {
                menuId: $g4v7E.MenuId.EditorContextPeek,
                group: 'peek',
                order: 5
            }
        });
    }
}, $e9b66150677fe80b$var$_h.ID = 'editor.action.peekImplementation', $e9b66150677fe80b$var$_h));
//#endregion
//#region --- REFERENCES
class $e9b66150677fe80b$var$ReferencesAction extends $e9b66150677fe80b$var$SymbolNavigationAction {
    _getNoResultFoundMessage(info) {
        return info ? $4dEdH.localize('references.no', "No references found for '{0}'", info.word) : $4dEdH.localize('references.noGeneric', "No references found");
    }
    _getAlternativeCommand(editor) {
        return editor.getOption(50 /* gotoLocation */ ).alternativeReferenceCommand;
    }
    _getGoToPreference(editor) {
        return editor.getOption(50 /* gotoLocation */ ).multipleReferences;
    }
}
$e9b66150677fe80b$var$registerGoToAction(class GoToReferencesAction extends $e9b66150677fe80b$var$ReferencesAction {
    constructor(){
        super({
            openToSide: false,
            openInPeek: false,
            muteMessage: false
        }, {
            id: 'editor.action.goToReferences',
            label: $4dEdH.localize('goToReferences.label', "Go to References"),
            alias: 'Go to References',
            precondition: $cxCeF.ContextKeyExpr.and($ibKGQ.EditorContextKeys.hasReferenceProvider, $f45c93015d251d27$exports.PeekContext.notInPeekEditor, $ibKGQ.EditorContextKeys.isInWalkThroughSnippet.toNegated()),
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.editorTextFocus,
                primary: 1094 /* F12 */ ,
                weight: 100 /* EditorContrib */ 
            },
            contextMenuOpts: {
                group: 'navigation',
                order: 1.45
            }
        });
    }
    _getLocationModel(model, position, token) {
        return $e9b66150677fe80b$var$__awaiter(this, void 0, void 0, function*() {
            return new $d939e0b708222bac$exports.ReferencesModel((yield $cb782dabccc4510f$exports.getReferencesAtPosition(model, position, true, token)), $4dEdH.localize('ref.title', 'References'));
        });
    }
});
$e9b66150677fe80b$var$registerGoToAction(class PeekReferencesAction extends $e9b66150677fe80b$var$ReferencesAction {
    constructor(){
        super({
            openToSide: false,
            openInPeek: true,
            muteMessage: false
        }, {
            id: 'editor.action.referenceSearch.trigger',
            label: $4dEdH.localize('references.action.label', "Peek References"),
            alias: 'Peek References',
            precondition: $cxCeF.ContextKeyExpr.and($ibKGQ.EditorContextKeys.hasReferenceProvider, $f45c93015d251d27$exports.PeekContext.notInPeekEditor, $ibKGQ.EditorContextKeys.isInWalkThroughSnippet.toNegated()),
            contextMenuOpts: {
                menuId: $g4v7E.MenuId.EditorContextPeek,
                group: 'peek',
                order: 6
            }
        });
    }
    _getLocationModel(model, position, token) {
        return $e9b66150677fe80b$var$__awaiter(this, void 0, void 0, function*() {
            return new $d939e0b708222bac$exports.ReferencesModel((yield $cb782dabccc4510f$exports.getReferencesAtPosition(model, position, false, token)), $4dEdH.localize('ref.title', 'References'));
        });
    }
});
//#endregion
//#region --- GENERIC goto symbols command
class $e9b66150677fe80b$var$GenericGoToLocationAction extends $e9b66150677fe80b$var$SymbolNavigationAction {
    constructor(config, _references, _gotoMultipleBehaviour){
        super(config, {
            id: 'editor.action.goToLocation',
            label: $4dEdH.localize('label.generic', "Go to Any Symbol"),
            alias: 'Go to Any Symbol',
            precondition: $cxCeF.ContextKeyExpr.and($f45c93015d251d27$exports.PeekContext.notInPeekEditor, $ibKGQ.EditorContextKeys.isInWalkThroughSnippet.toNegated())
        });
        this._references = _references;
        this._gotoMultipleBehaviour = _gotoMultipleBehaviour;
    }
    _getLocationModel(_model, _position, _token) {
        return $e9b66150677fe80b$var$__awaiter(this, void 0, void 0, function*() {
            return new $d939e0b708222bac$exports.ReferencesModel(this._references, $4dEdH.localize('generic.title', 'Locations'));
        });
    }
    _getNoResultFoundMessage(info) {
        return info && $4dEdH.localize('generic.noResult', "No results for '{0}'", info.word) || '';
    }
    _getGoToPreference(editor) {
        var _a;
        return (_a = this._gotoMultipleBehaviour) !== null && _a !== void 0 ? _a : editor.getOption(50 /* gotoLocation */ ).multipleReferences;
    }
    _getAlternativeCommand() {
        return '';
    }
}
$8tcMz.CommandsRegistry.registerCommand({
    id: 'editor.action.goToLocations',
    description: {
        description: 'Go to locations from a position in a file',
        args: [
            {
                name: 'uri',
                description: 'The text document in which to start',
                constraint: $5OJ54.URI
            },
            {
                name: 'position',
                description: 'The position at which to start',
                constraint: $dcxQ7.Position.isIPosition
            },
            {
                name: 'locations',
                description: 'An array of locations.',
                constraint: Array
            },
            {
                name: 'multiple',
                description: 'Define what to do when having multiple results, either `peek`, `gotoAndPeek`, or `goto'
            },
            {
                name: 'noResultsMessage',
                description: 'Human readable message that shows when locations is empty.'
            }, 
        ]
    },
    handler: (accessor1, resource, position, references, multiple, noResultsMessage, openInPeek)=>$e9b66150677fe80b$var$__awaiter(void 0, void 0, void 0, function*() {
            $bxBg7.assertType($5OJ54.URI.isUri(resource));
            $bxBg7.assertType($dcxQ7.Position.isIPosition(position));
            $bxBg7.assertType(Array.isArray(references));
            $bxBg7.assertType(typeof multiple === 'undefined' || typeof multiple === 'string');
            $bxBg7.assertType(typeof openInPeek === 'undefined' || typeof openInPeek === 'boolean');
            const editorService = accessor1.get($2Qfl0.ICodeEditorService);
            const editor = yield editorService.openCodeEditor({
                resource: resource
            }, editorService.getFocusedCodeEditor());
            if ($7UXLG.isCodeEditor(editor)) {
                editor.setPosition(position);
                editor.revealPositionInCenterIfOutsideViewport(position, 0 /* Smooth */ );
                return editor.invokeWithinContext((accessor)=>{
                    const command = new class extends $e9b66150677fe80b$var$GenericGoToLocationAction {
                        _getNoResultFoundMessage(info) {
                            return noResultsMessage || super._getNoResultFoundMessage(info);
                        }
                    }({
                        muteMessage: !Boolean(noResultsMessage),
                        openInPeek: Boolean(openInPeek),
                        openToSide: false
                    }, references, multiple);
                    accessor.get($fdGPu.IInstantiationService).invokeFunction(command.run.bind(command), editor);
                });
            }
        })
});
$8tcMz.CommandsRegistry.registerCommand({
    id: 'editor.action.peekLocations',
    description: {
        description: 'Peek locations from a position in a file',
        args: [
            {
                name: 'uri',
                description: 'The text document in which to start',
                constraint: $5OJ54.URI
            },
            {
                name: 'position',
                description: 'The position at which to start',
                constraint: $dcxQ7.Position.isIPosition
            },
            {
                name: 'locations',
                description: 'An array of locations.',
                constraint: Array
            },
            {
                name: 'multiple',
                description: 'Define what to do when having multiple results, either `peek`, `gotoAndPeek`, or `goto'
            }, 
        ]
    },
    handler: (accessor, resource, position, references, multiple)=>$e9b66150677fe80b$var$__awaiter(void 0, void 0, void 0, function*() {
            accessor.get($8tcMz.ICommandService).executeCommand('editor.action.goToLocations', resource, position, references, multiple, undefined, true);
        })
});
//#endregion
//#region --- REFERENCE search special commands
$8tcMz.CommandsRegistry.registerCommand({
    id: 'editor.action.findReferences',
    handler: (accessor, resource, position)=>{
        $bxBg7.assertType($5OJ54.URI.isUri(resource));
        $bxBg7.assertType($dcxQ7.Position.isIPosition(position));
        const codeEditorService = accessor.get($2Qfl0.ICodeEditorService);
        return codeEditorService.openCodeEditor({
            resource: resource
        }, codeEditorService.getFocusedCodeEditor()).then((control)=>{
            if (!$7UXLG.isCodeEditor(control) || !control.hasModel()) return undefined;
            const controller = $356aea24a08017bc$exports.ReferencesController.get(control);
            if (!controller) return undefined;
            const references1 = $6bXyA.createCancelablePromise((token)=>$cb782dabccc4510f$exports.getReferencesAtPosition(control.getModel(), $dcxQ7.Position.lift(position), false, token).then((references)=>new $d939e0b708222bac$exports.ReferencesModel(references, $4dEdH.localize('ref.title', 'References'))
                )
            );
            const range = new $d00il.Range(position.lineNumber, position.column, position.lineNumber, position.column);
            return Promise.resolve(controller.toggleWidget(range, references1, false));
        });
    }
});
// use NEW command
$8tcMz.CommandsRegistry.registerCommandAlias('editor.action.showReferences', 'editor.action.peekLocations');
//#endregion
// -- unconditionally register goto-action
$g4v7E.MenuRegistry.appendMenuItems([
    {
        id: $g4v7E.MenuId.MenubarGoMenu,
        item: {
            command: {
                id: 'editor.action.revealDefinition',
                title: $4dEdH.localize({
                    key: 'miGotoDefinition',
                    comment: [
                        '&& denotes a mnemonic'
                    ]
                }, "Go to &&Definition")
            },
            group: '4_symbol_nav',
            order: 2
        }
    },
    {
        id: $g4v7E.MenuId.MenubarGoMenu,
        item: {
            command: {
                id: 'editor.action.revealDeclaration',
                title: $4dEdH.localize({
                    key: 'miGotoDeclaration',
                    comment: [
                        '&& denotes a mnemonic'
                    ]
                }, "Go to &&Declaration")
            },
            group: '4_symbol_nav',
            order: 3
        }
    },
    {
        id: $g4v7E.MenuId.MenubarGoMenu,
        item: {
            command: {
                id: 'editor.action.goToTypeDefinition',
                title: $4dEdH.localize({
                    key: 'miGotoTypeDefinition',
                    comment: [
                        '&& denotes a mnemonic'
                    ]
                }, "Go to &&Type Definition")
            },
            group: '4_symbol_nav',
            order: 3
        }
    },
    {
        id: $g4v7E.MenuId.MenubarGoMenu,
        item: {
            command: {
                id: 'editor.action.goToImplementation',
                title: $4dEdH.localize({
                    key: 'miGotoImplementation',
                    comment: [
                        '&& denotes a mnemonic'
                    ]
                }, "Go to &&Implementations")
            },
            group: '4_symbol_nav',
            order: 4
        }
    },
    {
        id: $g4v7E.MenuId.MenubarGoMenu,
        item: {
            command: {
                id: 'editor.action.goToReferences',
                title: $4dEdH.localize({
                    key: 'miGotoReference',
                    comment: [
                        '&& denotes a mnemonic'
                    ]
                }, "Go to &&References")
            },
            group: '4_symbol_nav',
            order: 5
        }
    }, 
]);



/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $226c3ac84291cb47$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var $226c3ac84291cb47$var$__param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
};
let $226c3ac84291cb47$export$35cdf6493d1302e = class $226c3ac84291cb47$export$35cdf6493d1302e {
    constructor(editor, textModelResolverService, modeService){
        this.textModelResolverService = textModelResolverService;
        this.modeService = modeService;
        this.toUnhook = new $9cWcn.DisposableStore();
        this.toUnhookForKeyboard = new $9cWcn.DisposableStore();
        this.linkDecorations = [];
        this.currentWordAtPosition = null;
        this.previousPromise = null;
        this.editor = editor;
        let linkGesture = new $7a43732d8fccb9d5$export$e5a83b5c609cb4bb(editor);
        this.toUnhook.add(linkGesture);
        this.toUnhook.add(linkGesture.onMouseMoveOrRelevantKeyDown(([mouseEvent, keyboardEvent])=>{
            this.startFindDefinitionFromMouse(mouseEvent, $bxBg7.withNullAsUndefined(keyboardEvent));
        }));
        this.toUnhook.add(linkGesture.onExecute((mouseEvent)=>{
            if (this.isEnabled(mouseEvent)) this.gotoDefinition(mouseEvent.target.position, mouseEvent.hasSideBySideModifier).then(()=>{
                this.removeLinkDecorations();
            }, (error)=>{
                this.removeLinkDecorations();
                $gPkHZ.onUnexpectedError(error);
            });
        }));
        this.toUnhook.add(linkGesture.onCancel(()=>{
            this.removeLinkDecorations();
            this.currentWordAtPosition = null;
        }));
    }
    static get(editor) {
        return editor.getContribution($226c3ac84291cb47$export$35cdf6493d1302e.ID);
    }
    startFindDefinitionFromCursor(position) {
        // For issue: https://github.com/microsoft/vscode/issues/46257
        // equivalent to mouse move with meta/ctrl key
        // First find the definition and add decorations
        // to the editor to be shown with the content hover widget
        return this.startFindDefinition(position).then(()=>{
            // Add listeners for editor cursor move and key down events
            // Dismiss the "extended" editor decorations when the user hides
            // the hover widget. There is no event for the widget itself so these
            // serve as a best effort. After removing the link decorations, the hover
            // widget is clean and will only show declarations per next request.
            this.toUnhookForKeyboard.add(this.editor.onDidChangeCursorPosition(()=>{
                this.currentWordAtPosition = null;
                this.removeLinkDecorations();
                this.toUnhookForKeyboard.clear();
            }));
            this.toUnhookForKeyboard.add(this.editor.onKeyDown((e)=>{
                if (e) {
                    this.currentWordAtPosition = null;
                    this.removeLinkDecorations();
                    this.toUnhookForKeyboard.clear();
                }
            }));
        });
    }
    startFindDefinitionFromMouse(mouseEvent, withKey) {
        // check if we are active and on a content widget
        if (mouseEvent.target.type === 9 /* CONTENT_WIDGET */  && this.linkDecorations.length > 0) return;
        if (!this.editor.hasModel() || !this.isEnabled(mouseEvent, withKey)) {
            this.currentWordAtPosition = null;
            this.removeLinkDecorations();
            return;
        }
        const position = mouseEvent.target.position;
        this.startFindDefinition(position);
    }
    startFindDefinition(position) {
        var _a;
        // Dispose listeners for updating decorations when using keyboard to show definition hover
        this.toUnhookForKeyboard.clear();
        // Find word at mouse position
        const word = position ? (_a = this.editor.getModel()) === null || _a === void 0 ? void 0 : _a.getWordAtPosition(position) : null;
        if (!word) {
            this.currentWordAtPosition = null;
            this.removeLinkDecorations();
            return Promise.resolve(0);
        }
        // Return early if word at position is still the same
        if (this.currentWordAtPosition && this.currentWordAtPosition.startColumn === word.startColumn && this.currentWordAtPosition.endColumn === word.endColumn && this.currentWordAtPosition.word === word.word) return Promise.resolve(0);
        this.currentWordAtPosition = word;
        // Find definition and decorate word if found
        let state = new $r7siU.EditorState(this.editor, 15 /* Scroll */ );
        if (this.previousPromise) {
            this.previousPromise.cancel();
            this.previousPromise = null;
        }
        this.previousPromise = $6bXyA.createCancelablePromise((token)=>this.findDefinition(position, token)
        );
        return this.previousPromise.then((results)=>{
            if (!results || !results.length || !state.validate(this.editor)) {
                this.removeLinkDecorations();
                return;
            }
            // Multiple results
            if (results.length > 1) this.addDecoration(new $d00il.Range(position.lineNumber, word.startColumn, position.lineNumber, word.endColumn), new $iGmb0.MarkdownString().appendText($4dEdH.localize('multipleResults', "Click to show {0} definitions.", results.length)));
            else {
                let result = results[0];
                if (!result.uri) return;
                this.textModelResolverService.createModelReference(result.uri).then((ref)=>{
                    if (!ref.object || !ref.object.textEditorModel) {
                        ref.dispose();
                        return;
                    }
                    const { object: { textEditorModel: textEditorModel  }  } = ref;
                    const { startLineNumber: startLineNumber  } = result.range;
                    if (startLineNumber < 1 || startLineNumber > textEditorModel.getLineCount()) {
                        // invalid range
                        ref.dispose();
                        return;
                    }
                    const previewValue = this.getPreviewValue(textEditorModel, startLineNumber, result);
                    let wordRange;
                    if (result.originSelectionRange) wordRange = $d00il.Range.lift(result.originSelectionRange);
                    else wordRange = new $d00il.Range(position.lineNumber, word.startColumn, position.lineNumber, word.endColumn);
                    const languageId = this.modeService.getModeIdByFilepathOrFirstLine(textEditorModel.uri);
                    this.addDecoration(wordRange, new $iGmb0.MarkdownString().appendCodeblock(languageId ? languageId : '', previewValue));
                    ref.dispose();
                });
            }
        }).then(undefined, $gPkHZ.onUnexpectedError);
    }
    getPreviewValue(textEditorModel, startLineNumber, result) {
        let rangeToUse = result.targetSelectionRange ? result.range : this.getPreviewRangeBasedOnBrackets(textEditorModel, startLineNumber);
        const numberOfLinesInRange = rangeToUse.endLineNumber - rangeToUse.startLineNumber;
        if (numberOfLinesInRange >= $226c3ac84291cb47$export$35cdf6493d1302e.MAX_SOURCE_PREVIEW_LINES) rangeToUse = this.getPreviewRangeBasedOnIndentation(textEditorModel, startLineNumber);
        const previewValue = this.stripIndentationFromPreviewRange(textEditorModel, startLineNumber, rangeToUse);
        return previewValue;
    }
    stripIndentationFromPreviewRange(textEditorModel, startLineNumber, previewRange) {
        const startIndent = textEditorModel.getLineFirstNonWhitespaceColumn(startLineNumber);
        let minIndent = startIndent;
        for(let endLineNumber = startLineNumber + 1; endLineNumber < previewRange.endLineNumber; endLineNumber++){
            const endIndent = textEditorModel.getLineFirstNonWhitespaceColumn(endLineNumber);
            minIndent = Math.min(minIndent, endIndent);
        }
        const previewValue = textEditorModel.getValueInRange(previewRange).replace(new RegExp(`^\\s{${minIndent - 1}}`, 'gm'), '').trim();
        return previewValue;
    }
    getPreviewRangeBasedOnIndentation(textEditorModel, startLineNumber) {
        const startIndent = textEditorModel.getLineFirstNonWhitespaceColumn(startLineNumber);
        const maxLineNumber = Math.min(textEditorModel.getLineCount(), startLineNumber + $226c3ac84291cb47$export$35cdf6493d1302e.MAX_SOURCE_PREVIEW_LINES);
        let endLineNumber = startLineNumber + 1;
        for(; endLineNumber < maxLineNumber; endLineNumber++){
            let endIndent = textEditorModel.getLineFirstNonWhitespaceColumn(endLineNumber);
            if (startIndent === endIndent) break;
        }
        return new $d00il.Range(startLineNumber, 1, endLineNumber + 1, 1);
    }
    getPreviewRangeBasedOnBrackets(textEditorModel, startLineNumber) {
        const maxLineNumber = Math.min(textEditorModel.getLineCount(), startLineNumber + $226c3ac84291cb47$export$35cdf6493d1302e.MAX_SOURCE_PREVIEW_LINES);
        const brackets = [];
        let ignoreFirstEmpty = true;
        let currentBracket = textEditorModel.bracketPairs.findNextBracket(new $dcxQ7.Position(startLineNumber, 1));
        while(currentBracket !== null){
            if (brackets.length === 0) brackets.push(currentBracket);
            else {
                const lastBracket = brackets[brackets.length - 1];
                if (lastBracket.open[0] === currentBracket.open[0] && lastBracket.isOpen && !currentBracket.isOpen) brackets.pop();
                else brackets.push(currentBracket);
                if (brackets.length === 0) {
                    if (ignoreFirstEmpty) ignoreFirstEmpty = false;
                    else return new $d00il.Range(startLineNumber, 1, currentBracket.range.endLineNumber + 1, 1);
                }
            }
            const maxColumn = textEditorModel.getLineMaxColumn(startLineNumber);
            let nextLineNumber = currentBracket.range.endLineNumber;
            let nextColumn = currentBracket.range.endColumn;
            if (maxColumn === currentBracket.range.endColumn) {
                nextLineNumber++;
                nextColumn = 1;
            }
            if (nextLineNumber > maxLineNumber) return new $d00il.Range(startLineNumber, 1, maxLineNumber + 1, 1);
            currentBracket = textEditorModel.bracketPairs.findNextBracket(new $dcxQ7.Position(nextLineNumber, nextColumn));
        }
        return new $d00il.Range(startLineNumber, 1, maxLineNumber + 1, 1);
    }
    addDecoration(range, hoverMessage) {
        const newDecorations = {
            range: range,
            options: {
                description: 'goto-definition-link',
                inlineClassName: 'goto-definition-link',
                hoverMessage: hoverMessage
            }
        };
        this.linkDecorations = this.editor.deltaDecorations(this.linkDecorations, [
            newDecorations
        ]);
    }
    removeLinkDecorations() {
        if (this.linkDecorations.length > 0) this.linkDecorations = this.editor.deltaDecorations(this.linkDecorations, []);
    }
    isEnabled(mouseEvent, withKey) {
        return this.editor.hasModel() && mouseEvent.isNoneOrSingleMouseDown && mouseEvent.target.type === 6 /* CONTENT_TEXT */  && (mouseEvent.hasTriggerModifier || (withKey ? withKey.keyCodeIsTriggerKey : false)) && $4PmRQ.DefinitionProviderRegistry.has(this.editor.getModel());
    }
    findDefinition(position, token) {
        const model = this.editor.getModel();
        if (!model) return Promise.resolve(null);
        return $cb782dabccc4510f$exports.getDefinitionsAtPosition(model, position, token);
    }
    gotoDefinition(position, openToSide) {
        this.editor.setPosition(position);
        return this.editor.invokeWithinContext((accessor)=>{
            const canPeek = !openToSide && this.editor.getOption(77 /* definitionLinkOpensInPeek */ ) && !this.isInPeekEditor(accessor);
            const action = new $e9b66150677fe80b$exports.DefinitionAction({
                openToSide: openToSide,
                openInPeek: canPeek,
                muteMessage: true
            }, {
                alias: '',
                label: '',
                id: '',
                precondition: undefined
            });
            return action.run(accessor, this.editor);
        });
    }
    isInPeekEditor(accessor) {
        const contextKeyService = accessor.get($cxCeF.IContextKeyService);
        return $f45c93015d251d27$exports.PeekContext.inPeekEditor.getValue(contextKeyService);
    }
    dispose() {
        this.toUnhook.dispose();
    }
};
$226c3ac84291cb47$export$35cdf6493d1302e.ID = 'editor.contrib.gotodefinitionatposition';
$226c3ac84291cb47$export$35cdf6493d1302e.MAX_SOURCE_PREVIEW_LINES = 8;
$226c3ac84291cb47$export$35cdf6493d1302e = $226c3ac84291cb47$var$__decorate([
    $226c3ac84291cb47$var$__param(1, $aTkrt.ITextModelService),
    $226c3ac84291cb47$var$__param(2, $is5YK.IModeService)
], $226c3ac84291cb47$export$35cdf6493d1302e);
$2iJTi.registerEditorContribution($226c3ac84291cb47$export$35cdf6493d1302e.ID, $226c3ac84291cb47$export$35cdf6493d1302e);
$azIPz.registerThemingParticipant((theme, collector)=>{
    const activeLinkForeground = theme.getColor($gaWeX.editorActiveLinkForeground);
    if (activeLinkForeground) collector.addRule(`.monaco-editor .goto-definition-link { color: ${activeLinkForeground} !important; }`);
});


var $0ce1866a32ac636a$exports = {};

$parcel$export($0ce1866a32ac636a$exports, "ModesContentHoverWidget", () => $0ce1866a32ac636a$export$27477712c6ad8b14, (v) => $0ce1866a32ac636a$export$27477712c6ad8b14 = v);

var $bDzmQ = parcelRequire("bDzmQ");

var $bDzmQ = parcelRequire("bDzmQ");

var $2aRJR = parcelRequire("2aRJR");

var $9cWcn = parcelRequire("9cWcn");

const $e29efaa31939aae6$var$$ = $bDzmQ.$;
class $e29efaa31939aae6$export$bd9cbe052e594410 extends $9cWcn.Disposable {
    constructor(){
        super();
        this.containerDomNode = document.createElement('div');
        this.containerDomNode.className = 'monaco-hover';
        this.containerDomNode.tabIndex = 0;
        this.containerDomNode.setAttribute('role', 'tooltip');
        this.contentsDomNode = document.createElement('div');
        this.contentsDomNode.className = 'monaco-hover-content';
        this._scrollbar = this._register(new $2aRJR.DomScrollableElement(this.contentsDomNode, {
            consumeMouseWheelIfScrollbarIsNeeded: true
        }));
        this.containerDomNode.appendChild(this._scrollbar.getDomNode());
    }
    onContentsChanged() {
        this._scrollbar.scanDomNode();
    }
}
class $e29efaa31939aae6$export$bc0ed2dd33dfd810 extends $9cWcn.Disposable {
    constructor(parent, actionOptions, keybindingLabel){
        super();
        this.actionContainer = $bDzmQ.append(parent, $e29efaa31939aae6$var$$('div.action-container'));
        this.action = $bDzmQ.append(this.actionContainer, $e29efaa31939aae6$var$$('a.action'));
        this.action.setAttribute('role', 'button');
        if (actionOptions.iconClass) $bDzmQ.append(this.action, $e29efaa31939aae6$var$$(`span.icon.${actionOptions.iconClass}`));
        const label = $bDzmQ.append(this.action, $e29efaa31939aae6$var$$('span'));
        label.textContent = keybindingLabel ? `${actionOptions.label} (${keybindingLabel})` : actionOptions.label;
        this._register($bDzmQ.addDisposableListener(this.actionContainer, $bDzmQ.EventType.MOUSE_DOWN, (e)=>{
            e.stopPropagation();
            e.preventDefault();
            actionOptions.run(this.actionContainer);
        }));
        this.setEnabled(true);
    }
    static render(parent, actionOptions, keybindingLabel) {
        return new $e29efaa31939aae6$export$bc0ed2dd33dfd810(parent, actionOptions, keybindingLabel);
    }
    setEnabled(enabled) {
        if (enabled) {
            this.actionContainer.classList.remove('disabled');
            this.actionContainer.removeAttribute('aria-disabled');
        } else {
            this.actionContainer.classList.add('disabled');
            this.actionContainer.setAttribute('aria-disabled', 'true');
        }
    }
}



var $fxJYg = parcelRequire("fxJYg");

var $kJ8UG = parcelRequire("kJ8UG");

var $9cWcn = parcelRequire("9cWcn");

var $dcxQ7 = parcelRequire("dcxQ7");

var $d00il = parcelRequire("d00il");

var $91ntV = parcelRequire("91ntV");

var $4PmRQ = parcelRequire("4PmRQ");
var $7dc94ba1d30207cb$exports = {};

$parcel$export($7dc94ba1d30207cb$exports, "ColorHoverParticipant", () => $7dc94ba1d30207cb$export$c4145a38e12cf25c, (v) => $7dc94ba1d30207cb$export$c4145a38e12cf25c = v);

var $6bXyA = parcelRequire("6bXyA");

var $giPcZ = parcelRequire("giPcZ");

var $bjjQO = parcelRequire("bjjQO");

var $9cWcn = parcelRequire("9cWcn");

var $d00il = parcelRequire("d00il");



var $5YaSO = parcelRequire("5YaSO");
class $176ec113a17add05$export$76cf66edc64e95a7 {
    constructor(color, availableColorPresentations, presentationIndex){
        this.presentationIndex = presentationIndex;
        this._onColorFlushed = new $5YaSO.Emitter();
        this.onColorFlushed = this._onColorFlushed.event;
        this._onDidChangeColor = new $5YaSO.Emitter();
        this.onDidChangeColor = this._onDidChangeColor.event;
        this._onDidChangePresentation = new $5YaSO.Emitter();
        this.onDidChangePresentation = this._onDidChangePresentation.event;
        this.originalColor = color;
        this._color = color;
        this._colorPresentations = availableColorPresentations;
    }
    get color() {
        return this._color;
    }
    set color(color) {
        if (this._color.equals(color)) return;
        this._color = color;
        this._onDidChangeColor.fire(color);
    }
    get presentation() {
        return this.colorPresentations[this.presentationIndex];
    }
    get colorPresentations() {
        return this._colorPresentations;
    }
    set colorPresentations(colorPresentations) {
        this._colorPresentations = colorPresentations;
        if (this.presentationIndex > colorPresentations.length - 1) this.presentationIndex = 0;
        this._onDidChangePresentation.fire(this.presentation);
    }
    selectNextColorPresentation() {
        this.presentationIndex = (this.presentationIndex + 1) % this.colorPresentations.length;
        this.flushColor();
        this._onDidChangePresentation.fire(this.presentation);
    }
    guessColorPresentation(color, originalText) {
        for(let i = 0; i < this.colorPresentations.length; i++)if (originalText.toLowerCase() === this.colorPresentations[i].label) {
            this.presentationIndex = i;
            this._onDidChangePresentation.fire(this.presentation);
            break;
        }
    }
    flushColor() {
        this._onColorFlushed.fire(this._color);
    }
}



var $5yY14 = parcelRequire("5yY14");

var $bDzmQ = parcelRequire("bDzmQ");

var $cfNuA = parcelRequire("cfNuA");

var $fxJYg = parcelRequire("fxJYg");

var $bjjQO = parcelRequire("bjjQO");

var $5YaSO = parcelRequire("5YaSO");

var $9cWcn = parcelRequire("9cWcn");


var $4dEdH = parcelRequire("4dEdH");

var $gaWeX = parcelRequire("gaWeX");

var $azIPz = parcelRequire("azIPz");
const $f514d2c817e10f7d$var$$ = $bDzmQ.$;
class $f514d2c817e10f7d$export$89f2225ce9c7d7ad extends $9cWcn.Disposable {
    constructor(container, model, themeService){
        super();
        this.model = model;
        this.domNode = $f514d2c817e10f7d$var$$('.colorpicker-header');
        $bDzmQ.append(container, this.domNode);
        this.pickedColorNode = $bDzmQ.append(this.domNode, $f514d2c817e10f7d$var$$('.picked-color'));
        const tooltip = $4dEdH.localize('clickToToggleColorOptions', "Click to toggle color options (rgb/hsl/hex)");
        this.pickedColorNode.setAttribute('title', tooltip);
        const colorBox = $bDzmQ.append(this.domNode, $f514d2c817e10f7d$var$$('.original-color'));
        colorBox.style.backgroundColor = $bjjQO.Color.Format.CSS.format(this.model.originalColor) || '';
        this.backgroundColor = themeService.getColorTheme().getColor($gaWeX.editorHoverBackground) || $bjjQO.Color.white;
        this._register($azIPz.registerThemingParticipant((theme, collector)=>{
            this.backgroundColor = theme.getColor($gaWeX.editorHoverBackground) || $bjjQO.Color.white;
        }));
        this._register($bDzmQ.addDisposableListener(this.pickedColorNode, $bDzmQ.EventType.CLICK, ()=>this.model.selectNextColorPresentation()
        ));
        this._register($bDzmQ.addDisposableListener(colorBox, $bDzmQ.EventType.CLICK, ()=>{
            this.model.color = this.model.originalColor;
            this.model.flushColor();
        }));
        this._register(model.onDidChangeColor(this.onDidChangeColor, this));
        this._register(model.onDidChangePresentation(this.onDidChangePresentation, this));
        this.pickedColorNode.style.backgroundColor = $bjjQO.Color.Format.CSS.format(model.color) || '';
        this.pickedColorNode.classList.toggle('light', model.color.rgba.a < 0.5 ? this.backgroundColor.isLighter() : model.color.isLighter());
        this.onDidChangeColor(this.model.color);
    }
    onDidChangeColor(color) {
        this.pickedColorNode.style.backgroundColor = $bjjQO.Color.Format.CSS.format(color) || '';
        this.pickedColorNode.classList.toggle('light', color.rgba.a < 0.5 ? this.backgroundColor.isLighter() : color.isLighter());
        this.onDidChangePresentation();
    }
    onDidChangePresentation() {
        this.pickedColorNode.textContent = this.model.presentation ? this.model.presentation.label : '';
        this.pickedColorNode.prepend($f514d2c817e10f7d$var$$('.codicon.codicon-color-mode'));
    }
}
class $f514d2c817e10f7d$export$d4d2a64f59ef343b extends $9cWcn.Disposable {
    constructor(container, model, pixelRatio){
        super();
        this.model = model;
        this.pixelRatio = pixelRatio;
        this.domNode = $f514d2c817e10f7d$var$$('.colorpicker-body');
        $bDzmQ.append(container, this.domNode);
        this.saturationBox = new $f514d2c817e10f7d$var$SaturationBox(this.domNode, this.model, this.pixelRatio);
        this._register(this.saturationBox);
        this._register(this.saturationBox.onDidChange(this.onDidSaturationValueChange, this));
        this._register(this.saturationBox.onColorFlushed(this.flushColor, this));
        this.opacityStrip = new $f514d2c817e10f7d$var$OpacityStrip(this.domNode, this.model);
        this._register(this.opacityStrip);
        this._register(this.opacityStrip.onDidChange(this.onDidOpacityChange, this));
        this._register(this.opacityStrip.onColorFlushed(this.flushColor, this));
        this.hueStrip = new $f514d2c817e10f7d$var$HueStrip(this.domNode, this.model);
        this._register(this.hueStrip);
        this._register(this.hueStrip.onDidChange(this.onDidHueChange, this));
        this._register(this.hueStrip.onColorFlushed(this.flushColor, this));
    }
    flushColor() {
        this.model.flushColor();
    }
    onDidSaturationValueChange({ s: s , v: v  }) {
        const hsva = this.model.color.hsva;
        this.model.color = new $bjjQO.Color(new $bjjQO.HSVA(hsva.h, s, v, hsva.a));
    }
    onDidOpacityChange(a) {
        const hsva = this.model.color.hsva;
        this.model.color = new $bjjQO.Color(new $bjjQO.HSVA(hsva.h, hsva.s, hsva.v, a));
    }
    onDidHueChange(value) {
        const hsva = this.model.color.hsva;
        const h = (1 - value) * 360;
        this.model.color = new $bjjQO.Color(new $bjjQO.HSVA(h === 360 ? 0 : h, hsva.s, hsva.v, hsva.a));
    }
    layout() {
        this.saturationBox.layout();
        this.opacityStrip.layout();
        this.hueStrip.layout();
    }
}
class $f514d2c817e10f7d$var$SaturationBox extends $9cWcn.Disposable {
    constructor(container, model, pixelRatio){
        super();
        this.model = model;
        this.pixelRatio = pixelRatio;
        this._onDidChange = new $5YaSO.Emitter();
        this.onDidChange = this._onDidChange.event;
        this._onColorFlushed = new $5YaSO.Emitter();
        this.onColorFlushed = this._onColorFlushed.event;
        this.domNode = $f514d2c817e10f7d$var$$('.saturation-wrap');
        $bDzmQ.append(container, this.domNode);
        // Create canvas, draw selected color
        this.canvas = document.createElement('canvas');
        this.canvas.className = 'saturation-box';
        $bDzmQ.append(this.domNode, this.canvas);
        // Add selection circle
        this.selection = $f514d2c817e10f7d$var$$('.saturation-selection');
        $bDzmQ.append(this.domNode, this.selection);
        this.layout();
        this._register($bDzmQ.addDisposableGenericMouseDownListner(this.domNode, (e)=>this.onMouseDown(e)
        ));
        this._register(this.model.onDidChangeColor(this.onDidChangeColor, this));
        this.monitor = null;
    }
    onMouseDown(e) {
        this.monitor = this._register(new $cfNuA.GlobalMouseMoveMonitor());
        const origin = $bDzmQ.getDomNodePagePosition(this.domNode);
        if (e.target !== this.selection) this.onDidChangePosition(e.offsetX, e.offsetY);
        this.monitor.startMonitoring(e.target, e.buttons, $cfNuA.standardMouseMoveMerger, (event)=>this.onDidChangePosition(event.posx - origin.left, event.posy - origin.top)
        , ()=>null
        );
        const mouseUpListener = $bDzmQ.addDisposableGenericMouseUpListner(document, ()=>{
            this._onColorFlushed.fire();
            mouseUpListener.dispose();
            if (this.monitor) {
                this.monitor.stopMonitoring(true);
                this.monitor = null;
            }
        }, true);
    }
    onDidChangePosition(left, top) {
        const s = Math.max(0, Math.min(1, left / this.width));
        const v = Math.max(0, Math.min(1, 1 - top / this.height));
        this.paintSelection(s, v);
        this._onDidChange.fire({
            s: s,
            v: v
        });
    }
    layout() {
        this.width = this.domNode.offsetWidth;
        this.height = this.domNode.offsetHeight;
        this.canvas.width = this.width * this.pixelRatio;
        this.canvas.height = this.height * this.pixelRatio;
        this.paint();
        const hsva = this.model.color.hsva;
        this.paintSelection(hsva.s, hsva.v);
    }
    paint() {
        const hsva = this.model.color.hsva;
        const saturatedColor = new $bjjQO.Color(new $bjjQO.HSVA(hsva.h, 1, 1, 1));
        const ctx = this.canvas.getContext('2d');
        const whiteGradient = ctx.createLinearGradient(0, 0, this.canvas.width, 0);
        whiteGradient.addColorStop(0, 'rgba(255, 255, 255, 1)');
        whiteGradient.addColorStop(0.5, 'rgba(255, 255, 255, 0.5)');
        whiteGradient.addColorStop(1, 'rgba(255, 255, 255, 0)');
        const blackGradient = ctx.createLinearGradient(0, 0, 0, this.canvas.height);
        blackGradient.addColorStop(0, 'rgba(0, 0, 0, 0)');
        blackGradient.addColorStop(1, 'rgba(0, 0, 0, 1)');
        ctx.rect(0, 0, this.canvas.width, this.canvas.height);
        ctx.fillStyle = $bjjQO.Color.Format.CSS.format(saturatedColor);
        ctx.fill();
        ctx.fillStyle = whiteGradient;
        ctx.fill();
        ctx.fillStyle = blackGradient;
        ctx.fill();
    }
    paintSelection(s, v) {
        this.selection.style.left = `${s * this.width}px`;
        this.selection.style.top = `${this.height - v * this.height}px`;
    }
    onDidChangeColor() {
        if (this.monitor && this.monitor.isMonitoring()) return;
        this.paint();
    }
}
class $f514d2c817e10f7d$var$Strip extends $9cWcn.Disposable {
    constructor(container, model){
        super();
        this.model = model;
        this._onDidChange = new $5YaSO.Emitter();
        this.onDidChange = this._onDidChange.event;
        this._onColorFlushed = new $5YaSO.Emitter();
        this.onColorFlushed = this._onColorFlushed.event;
        this.domNode = $bDzmQ.append(container, $f514d2c817e10f7d$var$$('.strip'));
        this.overlay = $bDzmQ.append(this.domNode, $f514d2c817e10f7d$var$$('.overlay'));
        this.slider = $bDzmQ.append(this.domNode, $f514d2c817e10f7d$var$$('.slider'));
        this.slider.style.top = `0px`;
        this._register($bDzmQ.addDisposableGenericMouseDownListner(this.domNode, (e)=>this.onMouseDown(e)
        ));
        this.layout();
    }
    layout() {
        this.height = this.domNode.offsetHeight - this.slider.offsetHeight;
        const value = this.getValue(this.model.color);
        this.updateSliderPosition(value);
    }
    onMouseDown(e) {
        const monitor = this._register(new $cfNuA.GlobalMouseMoveMonitor());
        const origin = $bDzmQ.getDomNodePagePosition(this.domNode);
        this.domNode.classList.add('grabbing');
        if (e.target !== this.slider) this.onDidChangeTop(e.offsetY);
        monitor.startMonitoring(e.target, e.buttons, $cfNuA.standardMouseMoveMerger, (event)=>this.onDidChangeTop(event.posy - origin.top)
        , ()=>null
        );
        const mouseUpListener = $bDzmQ.addDisposableGenericMouseUpListner(document, ()=>{
            this._onColorFlushed.fire();
            mouseUpListener.dispose();
            monitor.stopMonitoring(true);
            this.domNode.classList.remove('grabbing');
        }, true);
    }
    onDidChangeTop(top) {
        const value = Math.max(0, Math.min(1, 1 - top / this.height));
        this.updateSliderPosition(value);
        this._onDidChange.fire(value);
    }
    updateSliderPosition(value) {
        this.slider.style.top = `${(1 - value) * this.height}px`;
    }
}
class $f514d2c817e10f7d$var$OpacityStrip extends $f514d2c817e10f7d$var$Strip {
    constructor(container, model){
        super(container, model);
        this.domNode.classList.add('opacity-strip');
        this._register(model.onDidChangeColor(this.onDidChangeColor, this));
        this.onDidChangeColor(this.model.color);
    }
    onDidChangeColor(color) {
        const { r: r , g: g , b: b  } = color.rgba;
        const opaque = new $bjjQO.Color(new $bjjQO.RGBA(r, g, b, 1));
        const transparent = new $bjjQO.Color(new $bjjQO.RGBA(r, g, b, 0));
        this.overlay.style.background = `linear-gradient(to bottom, ${opaque} 0%, ${transparent} 100%)`;
    }
    getValue(color) {
        return color.hsva.a;
    }
}
class $f514d2c817e10f7d$var$HueStrip extends $f514d2c817e10f7d$var$Strip {
    constructor(container, model){
        super(container, model);
        this.domNode.classList.add('hue-strip');
    }
    getValue(color) {
        return 1 - color.hsva.h / 360;
    }
}
class $f514d2c817e10f7d$export$1d10c81ebf4df2e3 extends $fxJYg.Widget {
    constructor(container, model, pixelRatio, themeService){
        super();
        this.model = model;
        this.pixelRatio = pixelRatio;
        this._register($5yY14.onDidChangeZoomLevel(()=>this.layout()
        ));
        const element = $f514d2c817e10f7d$var$$('.colorpicker-widget');
        container.appendChild(element);
        const header = new $f514d2c817e10f7d$export$89f2225ce9c7d7ad(element, this.model, themeService);
        this.body = new $f514d2c817e10f7d$export$d4d2a64f59ef343b(element, this.model, this.pixelRatio);
        this._register(header);
        this._register(this.body);
    }
    layout() {
        this.body.layout();
    }
}



var $azIPz = parcelRequire("azIPz");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $7dc94ba1d30207cb$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var $7dc94ba1d30207cb$var$__param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
};
var $7dc94ba1d30207cb$var$__awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
class $7dc94ba1d30207cb$export$1e790ecd6a44b70f {
    constructor(owner, range, model, provider){
        this.owner = owner;
        this.range = range;
        this.model = model;
        this.provider = provider;
        /**
         * Force the hover to always be rendered at this specific range,
         * even in the case of multiple hover parts.
         */ this.forceShowAtRange = true;
    }
    isValidForHoverAnchor(anchor) {
        return anchor.type === 1 /* Range */  && this.range.startColumn <= anchor.range.startColumn && this.range.endColumn >= anchor.range.endColumn;
    }
}
let $7dc94ba1d30207cb$export$c4145a38e12cf25c = class $7dc94ba1d30207cb$export$c4145a38e12cf25c {
    constructor(_editor, _hover, _themeService){
        this._editor = _editor;
        this._hover = _hover;
        this._themeService = _themeService;
    }
    computeSync(anchor, lineDecorations) {
        return [];
    }
    computeAsync(anchor, lineDecorations, token) {
        return $6bXyA.AsyncIterableObject.fromPromise(this._computeAsync(anchor, lineDecorations, token));
    }
    _computeAsync(anchor, lineDecorations, token) {
        return $7dc94ba1d30207cb$var$__awaiter(this, void 0, void 0, function*() {
            if (!this._editor.hasModel()) return [];
            const colorDetector = $01b7de2658dc2e72$exports.ColorDetector.get(this._editor);
            for (const d of lineDecorations){
                if (!colorDetector.isColorDecorationId(d.id)) continue;
                const colorData = colorDetector.getColorData(d.range.getStartPosition());
                if (colorData) {
                    const colorHover = yield this._createColorHover(this._editor.getModel(), colorData.colorInfo, colorData.provider);
                    return [
                        colorHover
                    ];
                }
            }
            return [];
        });
    }
    _createColorHover(editorModel, colorInfo, provider) {
        return $7dc94ba1d30207cb$var$__awaiter(this, void 0, void 0, function*() {
            const originalText = editorModel.getValueInRange(colorInfo.range);
            const { red: red , green: green , blue: blue , alpha: alpha  } = colorInfo.color;
            const rgba = new $bjjQO.RGBA(Math.round(red * 255), Math.round(green * 255), Math.round(blue * 255), alpha);
            const color = new $bjjQO.Color(rgba);
            const colorPresentations = yield $2cc4a5ad460eb87d$export$c3064c7f8ffdbaa5(editorModel, colorInfo, provider, $giPcZ.CancellationToken.None);
            const model = new $176ec113a17add05$export$76cf66edc64e95a7(color, [], 0);
            model.colorPresentations = colorPresentations || [];
            model.guessColorPresentation(color, originalText);
            return new $7dc94ba1d30207cb$export$1e790ecd6a44b70f(this, $d00il.Range.lift(colorInfo.range), model, provider);
        });
    }
    renderHoverParts(hoverParts, fragment, statusBar) {
        if (hoverParts.length === 0 || !this._editor.hasModel()) return $9cWcn.Disposable.None;
        const disposables = new $9cWcn.DisposableStore();
        const colorHover = hoverParts[0];
        const editorModel = this._editor.getModel();
        const model = colorHover.model;
        const widget = disposables.add(new $f514d2c817e10f7d$export$1d10c81ebf4df2e3(fragment, model, this._editor.getOption(128 /* pixelRatio */ ), this._themeService));
        let range = new $d00il.Range(colorHover.range.startLineNumber, colorHover.range.startColumn, colorHover.range.endLineNumber, colorHover.range.endColumn);
        const updateEditorModel = ()=>{
            let textEdits;
            let newRange;
            if (model.presentation.textEdit) {
                textEdits = [
                    model.presentation.textEdit
                ];
                newRange = new $d00il.Range(model.presentation.textEdit.range.startLineNumber, model.presentation.textEdit.range.startColumn, model.presentation.textEdit.range.endLineNumber, model.presentation.textEdit.range.endColumn);
                const trackedRange = this._editor.getModel()._setTrackedRange(null, newRange, 3 /* GrowsOnlyWhenTypingAfter */ );
                this._editor.pushUndoStop();
                this._editor.executeEdits('colorpicker', textEdits);
                newRange = this._editor.getModel()._getTrackedRange(trackedRange) || newRange;
            } else {
                textEdits = [
                    {
                        identifier: null,
                        range: range,
                        text: model.presentation.label,
                        forceMoveMarkers: false
                    }
                ];
                newRange = range.setEndPosition(range.endLineNumber, range.startColumn + model.presentation.label.length);
                this._editor.pushUndoStop();
                this._editor.executeEdits('colorpicker', textEdits);
            }
            if (model.presentation.additionalTextEdits) {
                textEdits = [
                    ...model.presentation.additionalTextEdits
                ];
                this._editor.executeEdits('colorpicker', textEdits);
                this._hover.hide();
            }
            this._editor.pushUndoStop();
            range = newRange;
        };
        const updateColorPresentations = (color)=>{
            return $2cc4a5ad460eb87d$export$c3064c7f8ffdbaa5(editorModel, {
                range: range,
                color: {
                    red: color.rgba.r / 255,
                    green: color.rgba.g / 255,
                    blue: color.rgba.b / 255,
                    alpha: color.rgba.a
                }
            }, colorHover.provider, $giPcZ.CancellationToken.None).then((colorPresentations)=>{
                model.colorPresentations = colorPresentations || [];
            });
        };
        disposables.add(model.onColorFlushed((color)=>{
            updateColorPresentations(color).then(updateEditorModel);
        }));
        disposables.add(model.onDidChangeColor(updateColorPresentations));
        this._hover.setColorPicker(widget);
        return disposables;
    }
};
$7dc94ba1d30207cb$export$c4145a38e12cf25c = $7dc94ba1d30207cb$var$__decorate([
    $7dc94ba1d30207cb$var$__param(2, $azIPz.IThemeService)
], $7dc94ba1d30207cb$export$c4145a38e12cf25c);


var $07191fb782b2e743$exports = {};

$parcel$export($07191fb782b2e743$exports, "HoverOperation", () => $07191fb782b2e743$export$35fb423ab90fde65, (v) => $07191fb782b2e743$export$35fb423ab90fde65 = v);

var $6bXyA = parcelRequire("6bXyA");

var $gPkHZ = parcelRequire("gPkHZ");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $07191fb782b2e743$var$__awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var $07191fb782b2e743$var$__asyncValues = undefined && undefined.__asyncValues || function(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function() {
        return this;
    }, i);
    function verb(n) {
        i[n] = o[n] && function(v) {
            return new Promise(function(resolve, reject) {
                v = o[n](v), settle(resolve, reject, v.done, v.value);
            });
        };
    }
    function settle(resolve, reject, d, v1) {
        Promise.resolve(v1).then(function(v) {
            resolve({
                value: v,
                done: d
            });
        }, reject);
    }
};
class $07191fb782b2e743$export$35fb423ab90fde65 {
    constructor(computer, success, error, progress, hoverTime){
        this._computer = computer;
        this._state = 0 /* IDLE */ ;
        this._hoverTime = hoverTime;
        this._firstWaitScheduler = new $6bXyA.RunOnceScheduler(()=>this._triggerAsyncComputation()
        , 0);
        this._secondWaitScheduler = new $6bXyA.RunOnceScheduler(()=>this._triggerSyncComputation()
        , 0);
        this._loadingMessageScheduler = new $6bXyA.RunOnceScheduler(()=>this._showLoadingMessage()
        , 0);
        this._asyncIterable = null;
        this._asyncIterableDone = false;
        this._completeCallback = success;
        this._errorCallback = error;
        this._progressCallback = progress;
    }
    setHoverTime(hoverTime) {
        this._hoverTime = hoverTime;
    }
    _firstWaitTime() {
        return this._hoverTime / 2;
    }
    _secondWaitTime() {
        return this._hoverTime / 2;
    }
    _loadingMessageTime() {
        return 3 * this._hoverTime;
    }
    _triggerAsyncComputation() {
        this._state = 2 /* SECOND_WAIT */ ;
        this._secondWaitScheduler.schedule(this._secondWaitTime());
        if (this._computer.computeAsync) {
            this._asyncIterableDone = false;
            this._asyncIterable = $6bXyA.createCancelableAsyncIterable((token)=>this._computer.computeAsync(token)
            );
            (()=>$07191fb782b2e743$var$__awaiter(this, void 0, void 0, function*() {
                    var e_1, _a;
                    try {
                        try {
                            for(var _b = $07191fb782b2e743$var$__asyncValues(this._asyncIterable), _c; _c = yield _b.next(), !_c.done;){
                                const item = _c.value;
                                if (item) {
                                    this._computer.onResult([
                                        item
                                    ], false);
                                    this._onProgress();
                                }
                            }
                        } catch (e_1_1) {
                            e_1 = {
                                error: e_1_1
                            };
                        } finally{
                            try {
                                if (_c && !_c.done && (_a = _b.return)) yield _a.call(_b);
                            } finally{
                                if (e_1) throw e_1.error;
                            }
                        }
                        this._asyncIterableDone = true;
                        this._withAsyncResult();
                    } catch (e) {
                        this._onError(e);
                    }
                })
            )();
        } else this._asyncIterableDone = true;
    }
    _triggerSyncComputation() {
        if (this._computer.computeSync) this._computer.onResult(this._computer.computeSync(), true);
        if (this._asyncIterableDone) {
            this._state = 0 /* IDLE */ ;
            this._onComplete();
        } else {
            this._state = 3 /* WAITING_FOR_ASYNC_COMPUTATION */ ;
            this._onProgress();
        }
    }
    _showLoadingMessage() {
        if (this._state === 3 /* WAITING_FOR_ASYNC_COMPUTATION */ ) {
            this._state = 4 /* WAITING_FOR_ASYNC_COMPUTATION_SHOWING_LOADING */ ;
            this._onProgress();
        }
    }
    _withAsyncResult() {
        if (this._state === 3 /* WAITING_FOR_ASYNC_COMPUTATION */  || this._state === 4 /* WAITING_FOR_ASYNC_COMPUTATION_SHOWING_LOADING */ ) {
            this._state = 0 /* IDLE */ ;
            this._onComplete();
        }
    }
    _onComplete() {
        this._completeCallback(this._computer.getResult());
    }
    _onError(error) {
        if (this._errorCallback) this._errorCallback(error);
        else $gPkHZ.onUnexpectedError(error);
    }
    _onProgress() {
        if (this._state === 4 /* WAITING_FOR_ASYNC_COMPUTATION_SHOWING_LOADING */ ) this._progressCallback(this._computer.getResultWithLoadingMessage());
        else this._progressCallback(this._computer.getResult());
    }
    start(mode) {
        if (mode === 0 /* Delayed */ ) {
            if (this._state === 0 /* IDLE */ ) {
                this._state = 1 /* FIRST_WAIT */ ;
                this._firstWaitScheduler.schedule(this._firstWaitTime());
                this._loadingMessageScheduler.schedule(this._loadingMessageTime());
            }
        } else switch(this._state){
            case 0 /* IDLE */ :
                this._triggerAsyncComputation();
                this._secondWaitScheduler.cancel();
                this._triggerSyncComputation();
                break;
            case 2 /* SECOND_WAIT */ :
                this._secondWaitScheduler.cancel();
                this._triggerSyncComputation();
                break;
        }
    }
    cancel() {
        this._firstWaitScheduler.cancel();
        this._secondWaitScheduler.cancel();
        this._loadingMessageScheduler.cancel();
        if (this._asyncIterable) {
            this._asyncIterable.cancel();
            this._asyncIterable = null;
        }
        this._state = 0 /* IDLE */ ;
    }
}


class $ba5b81fb43f4256d$export$2a967524099ecc2c {
    constructor(priority, range){
        this.priority = priority;
        this.range = range;
        this.type = 1 /* Range */ ;
    }
    equals(other) {
        return other.type === 1 /* Range */  && this.range.equalsRange(other.range);
    }
    canAdoptVisibleHover(lastAnchor, showAtPosition) {
        return lastAnchor.type === 1 /* Range */  && showAtPosition.lineNumber === this.range.startLineNumber;
    }
}
class $ba5b81fb43f4256d$export$cadc11e524c92809 {
    constructor(priority, owner, range){
        this.priority = priority;
        this.owner = owner;
        this.range = range;
        this.type = 2 /* ForeignElement */ ;
    }
    equals(other) {
        return other.type === 2 /* ForeignElement */  && this.owner === other.owner;
    }
    canAdoptVisibleHover(lastAnchor, showAtPosition) {
        return lastAnchor.type === 2 /* ForeignElement */  && this.owner === lastAnchor.owner;
    }
}


var $8459e7f81eef09f2$exports = {};

$parcel$export($8459e7f81eef09f2$exports, "MarkdownHover", () => $8459e7f81eef09f2$export$de5210377542b3f9, (v) => $8459e7f81eef09f2$export$de5210377542b3f9 = v);
$parcel$export($8459e7f81eef09f2$exports, "MarkdownHoverParticipant", () => $8459e7f81eef09f2$export$db7233c4b0ae81a2, (v) => $8459e7f81eef09f2$export$db7233c4b0ae81a2 = v);
$parcel$export($8459e7f81eef09f2$exports, "renderMarkdownHovers", () => $8459e7f81eef09f2$export$d74d68ef545bd110, (v) => $8459e7f81eef09f2$export$d74d68ef545bd110 = v);

var $bDzmQ = parcelRequire("bDzmQ");

var $kJ8UG = parcelRequire("kJ8UG");

var $6bXyA = parcelRequire("6bXyA");

var $iGmb0 = parcelRequire("iGmb0");

var $9cWcn = parcelRequire("9cWcn");
var $0f615ea767437954$exports = {};

$parcel$export($0f615ea767437954$exports, "MarkdownRenderer", () => $0f615ea767437954$export$22c2c977437cf477, (v) => $0f615ea767437954$export$22c2c977437cf477 = v);

var $bDzmQ = parcelRequire("bDzmQ");
/*! @license DOMPurify 2.3.1 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/2.3.1/LICENSE */ function $ea61991ee04c533a$var$_toConsumableArray(arr) {
    if (Array.isArray(arr)) {
        for(var i = 0, arr2 = Array(arr.length); i < arr.length; i++)arr2[i] = arr[i];
        return arr2;
    } else return Array.from(arr);
}
var $ea61991ee04c533a$var$hasOwnProperty = Object.hasOwnProperty, $ea61991ee04c533a$var$setPrototypeOf = Object.setPrototypeOf, $ea61991ee04c533a$var$isFrozen = Object.isFrozen, $ea61991ee04c533a$var$getPrototypeOf = Object.getPrototypeOf, $ea61991ee04c533a$var$getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var $ea61991ee04c533a$var$freeze = Object.freeze, $ea61991ee04c533a$var$seal = Object.seal, $ea61991ee04c533a$var$create = Object.create; // eslint-disable-line import/no-mutable-exports
var $ea61991ee04c533a$var$_ref = typeof Reflect !== 'undefined' && Reflect, $ea61991ee04c533a$var$apply = $ea61991ee04c533a$var$_ref.apply, $ea61991ee04c533a$var$construct = $ea61991ee04c533a$var$_ref.construct;
if (!$ea61991ee04c533a$var$apply) $ea61991ee04c533a$var$apply = function apply(fun, thisValue, args) {
    return fun.apply(thisValue, args);
};
if (!$ea61991ee04c533a$var$freeze) $ea61991ee04c533a$var$freeze = function freeze(x) {
    return x;
};
if (!$ea61991ee04c533a$var$seal) $ea61991ee04c533a$var$seal = function seal(x) {
    return x;
};
if (!$ea61991ee04c533a$var$construct) $ea61991ee04c533a$var$construct = function construct(Func, args) {
    return new (Function.prototype.bind.apply(Func, [
        null
    ].concat($ea61991ee04c533a$var$_toConsumableArray(args))))();
};
var $ea61991ee04c533a$var$arrayForEach = $ea61991ee04c533a$var$unapply(Array.prototype.forEach);
var $ea61991ee04c533a$var$arrayPop = $ea61991ee04c533a$var$unapply(Array.prototype.pop);
var $ea61991ee04c533a$var$arrayPush = $ea61991ee04c533a$var$unapply(Array.prototype.push);
var $ea61991ee04c533a$var$stringToLowerCase = $ea61991ee04c533a$var$unapply(String.prototype.toLowerCase);
var $ea61991ee04c533a$var$stringMatch = $ea61991ee04c533a$var$unapply(String.prototype.match);
var $ea61991ee04c533a$var$stringReplace = $ea61991ee04c533a$var$unapply(String.prototype.replace);
var $ea61991ee04c533a$var$stringIndexOf = $ea61991ee04c533a$var$unapply(String.prototype.indexOf);
var $ea61991ee04c533a$var$stringTrim = $ea61991ee04c533a$var$unapply(String.prototype.trim);
var $ea61991ee04c533a$var$regExpTest = $ea61991ee04c533a$var$unapply(RegExp.prototype.test);
var $ea61991ee04c533a$var$typeErrorCreate = $ea61991ee04c533a$var$unconstruct(TypeError);
function $ea61991ee04c533a$var$unapply(func) {
    return function(thisArg) {
        for(var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++)args[_key - 1] = arguments[_key];
        return $ea61991ee04c533a$var$apply(func, thisArg, args);
    };
}
function $ea61991ee04c533a$var$unconstruct(func) {
    return function() {
        for(var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++)args[_key2] = arguments[_key2];
        return $ea61991ee04c533a$var$construct(func, args);
    };
}
/* Add properties to a lookup table */ function $ea61991ee04c533a$var$addToSet(set, array) {
    if ($ea61991ee04c533a$var$setPrototypeOf) // Make 'in' and truthy checks like Boolean(set.constructor)
    // independent of any properties defined on Object.prototype.
    // Prevent prototype setters from intercepting set as a this value.
    $ea61991ee04c533a$var$setPrototypeOf(set, null);
    var l = array.length;
    while(l--){
        var element = array[l];
        if (typeof element === 'string') {
            var lcElement = $ea61991ee04c533a$var$stringToLowerCase(element);
            if (lcElement !== element) {
                // Config presets (e.g. tags.js, attrs.js) are immutable.
                if (!$ea61991ee04c533a$var$isFrozen(array)) array[l] = lcElement;
                element = lcElement;
            }
        }
        set[element] = true;
    }
    return set;
}
/* Shallow clone an object */ function $ea61991ee04c533a$var$clone(object) {
    var newObject = $ea61991ee04c533a$var$create(null);
    var property = void 0;
    for(property in object)if ($ea61991ee04c533a$var$apply($ea61991ee04c533a$var$hasOwnProperty, object, [
        property
    ])) newObject[property] = object[property];
    return newObject;
}
/* IE10 doesn't support __lookupGetter__ so lets'
 * simulate it. It also automatically checks
 * if the prop is function or getter and behaves
 * accordingly. */ function $ea61991ee04c533a$var$lookupGetter(object, prop) {
    while(object !== null){
        var desc = $ea61991ee04c533a$var$getOwnPropertyDescriptor(object, prop);
        if (desc) {
            if (desc.get) return $ea61991ee04c533a$var$unapply(desc.get);
            if (typeof desc.value === 'function') return $ea61991ee04c533a$var$unapply(desc.value);
        }
        object = $ea61991ee04c533a$var$getPrototypeOf(object);
    }
    function fallbackValue(element) {
        console.warn('fallback value for', element);
        return null;
    }
    return fallbackValue;
}
var $ea61991ee04c533a$var$html = $ea61991ee04c533a$var$freeze([
    'a',
    'abbr',
    'acronym',
    'address',
    'area',
    'article',
    'aside',
    'audio',
    'b',
    'bdi',
    'bdo',
    'big',
    'blink',
    'blockquote',
    'body',
    'br',
    'button',
    'canvas',
    'caption',
    'center',
    'cite',
    'code',
    'col',
    'colgroup',
    'content',
    'data',
    'datalist',
    'dd',
    'decorator',
    'del',
    'details',
    'dfn',
    'dialog',
    'dir',
    'div',
    'dl',
    'dt',
    'element',
    'em',
    'fieldset',
    'figcaption',
    'figure',
    'font',
    'footer',
    'form',
    'h1',
    'h2',
    'h3',
    'h4',
    'h5',
    'h6',
    'head',
    'header',
    'hgroup',
    'hr',
    'html',
    'i',
    'img',
    'input',
    'ins',
    'kbd',
    'label',
    'legend',
    'li',
    'main',
    'map',
    'mark',
    'marquee',
    'menu',
    'menuitem',
    'meter',
    'nav',
    'nobr',
    'ol',
    'optgroup',
    'option',
    'output',
    'p',
    'picture',
    'pre',
    'progress',
    'q',
    'rp',
    'rt',
    'ruby',
    's',
    'samp',
    'section',
    'select',
    'shadow',
    'small',
    'source',
    'spacer',
    'span',
    'strike',
    'strong',
    'style',
    'sub',
    'summary',
    'sup',
    'table',
    'tbody',
    'td',
    'template',
    'textarea',
    'tfoot',
    'th',
    'thead',
    'time',
    'tr',
    'track',
    'tt',
    'u',
    'ul',
    'var',
    'video',
    'wbr'
]);
// SVG
var $ea61991ee04c533a$var$svg = $ea61991ee04c533a$var$freeze([
    'svg',
    'a',
    'altglyph',
    'altglyphdef',
    'altglyphitem',
    'animatecolor',
    'animatemotion',
    'animatetransform',
    'circle',
    'clippath',
    'defs',
    'desc',
    'ellipse',
    'filter',
    'font',
    'g',
    'glyph',
    'glyphref',
    'hkern',
    'image',
    'line',
    'lineargradient',
    'marker',
    'mask',
    'metadata',
    'mpath',
    'path',
    'pattern',
    'polygon',
    'polyline',
    'radialgradient',
    'rect',
    'stop',
    'style',
    'switch',
    'symbol',
    'text',
    'textpath',
    'title',
    'tref',
    'tspan',
    'view',
    'vkern'
]);
var $ea61991ee04c533a$var$svgFilters = $ea61991ee04c533a$var$freeze([
    'feBlend',
    'feColorMatrix',
    'feComponentTransfer',
    'feComposite',
    'feConvolveMatrix',
    'feDiffuseLighting',
    'feDisplacementMap',
    'feDistantLight',
    'feFlood',
    'feFuncA',
    'feFuncB',
    'feFuncG',
    'feFuncR',
    'feGaussianBlur',
    'feMerge',
    'feMergeNode',
    'feMorphology',
    'feOffset',
    'fePointLight',
    'feSpecularLighting',
    'feSpotLight',
    'feTile',
    'feTurbulence'
]);
// List of SVG elements that are disallowed by default.
// We still need to know them so that we can do namespace
// checks properly in case one wants to add them to
// allow-list.
var $ea61991ee04c533a$var$svgDisallowed = $ea61991ee04c533a$var$freeze([
    'animate',
    'color-profile',
    'cursor',
    'discard',
    'fedropshadow',
    'feimage',
    'font-face',
    'font-face-format',
    'font-face-name',
    'font-face-src',
    'font-face-uri',
    'foreignobject',
    'hatch',
    'hatchpath',
    'mesh',
    'meshgradient',
    'meshpatch',
    'meshrow',
    'missing-glyph',
    'script',
    'set',
    'solidcolor',
    'unknown',
    'use'
]);
var $ea61991ee04c533a$var$mathMl = $ea61991ee04c533a$var$freeze([
    'math',
    'menclose',
    'merror',
    'mfenced',
    'mfrac',
    'mglyph',
    'mi',
    'mlabeledtr',
    'mmultiscripts',
    'mn',
    'mo',
    'mover',
    'mpadded',
    'mphantom',
    'mroot',
    'mrow',
    'ms',
    'mspace',
    'msqrt',
    'mstyle',
    'msub',
    'msup',
    'msubsup',
    'mtable',
    'mtd',
    'mtext',
    'mtr',
    'munder',
    'munderover'
]);
// Similarly to SVG, we want to know all MathML elements,
// even those that we disallow by default.
var $ea61991ee04c533a$var$mathMlDisallowed = $ea61991ee04c533a$var$freeze([
    'maction',
    'maligngroup',
    'malignmark',
    'mlongdiv',
    'mscarries',
    'mscarry',
    'msgroup',
    'mstack',
    'msline',
    'msrow',
    'semantics',
    'annotation',
    'annotation-xml',
    'mprescripts',
    'none'
]);
var $ea61991ee04c533a$var$text = $ea61991ee04c533a$var$freeze([
    '#text'
]);
var $ea61991ee04c533a$var$html$1 = $ea61991ee04c533a$var$freeze([
    'accept',
    'action',
    'align',
    'alt',
    'autocapitalize',
    'autocomplete',
    'autopictureinpicture',
    'autoplay',
    'background',
    'bgcolor',
    'border',
    'capture',
    'cellpadding',
    'cellspacing',
    'checked',
    'cite',
    'class',
    'clear',
    'color',
    'cols',
    'colspan',
    'controls',
    'controlslist',
    'coords',
    'crossorigin',
    'datetime',
    'decoding',
    'default',
    'dir',
    'disabled',
    'disablepictureinpicture',
    'disableremoteplayback',
    'download',
    'draggable',
    'enctype',
    'enterkeyhint',
    'face',
    'for',
    'headers',
    'height',
    'hidden',
    'high',
    'href',
    'hreflang',
    'id',
    'inputmode',
    'integrity',
    'ismap',
    'kind',
    'label',
    'lang',
    'list',
    'loading',
    'loop',
    'low',
    'max',
    'maxlength',
    'media',
    'method',
    'min',
    'minlength',
    'multiple',
    'muted',
    'name',
    'noshade',
    'novalidate',
    'nowrap',
    'open',
    'optimum',
    'pattern',
    'placeholder',
    'playsinline',
    'poster',
    'preload',
    'pubdate',
    'radiogroup',
    'readonly',
    'rel',
    'required',
    'rev',
    'reversed',
    'role',
    'rows',
    'rowspan',
    'spellcheck',
    'scope',
    'selected',
    'shape',
    'size',
    'sizes',
    'span',
    'srclang',
    'start',
    'src',
    'srcset',
    'step',
    'style',
    'summary',
    'tabindex',
    'title',
    'translate',
    'type',
    'usemap',
    'valign',
    'value',
    'width',
    'xmlns',
    'slot'
]);
var $ea61991ee04c533a$var$svg$1 = $ea61991ee04c533a$var$freeze([
    'accent-height',
    'accumulate',
    'additive',
    'alignment-baseline',
    'ascent',
    'attributename',
    'attributetype',
    'azimuth',
    'basefrequency',
    'baseline-shift',
    'begin',
    'bias',
    'by',
    'class',
    'clip',
    'clippathunits',
    'clip-path',
    'clip-rule',
    'color',
    'color-interpolation',
    'color-interpolation-filters',
    'color-profile',
    'color-rendering',
    'cx',
    'cy',
    'd',
    'dx',
    'dy',
    'diffuseconstant',
    'direction',
    'display',
    'divisor',
    'dur',
    'edgemode',
    'elevation',
    'end',
    'fill',
    'fill-opacity',
    'fill-rule',
    'filter',
    'filterunits',
    'flood-color',
    'flood-opacity',
    'font-family',
    'font-size',
    'font-size-adjust',
    'font-stretch',
    'font-style',
    'font-variant',
    'font-weight',
    'fx',
    'fy',
    'g1',
    'g2',
    'glyph-name',
    'glyphref',
    'gradientunits',
    'gradienttransform',
    'height',
    'href',
    'id',
    'image-rendering',
    'in',
    'in2',
    'k',
    'k1',
    'k2',
    'k3',
    'k4',
    'kerning',
    'keypoints',
    'keysplines',
    'keytimes',
    'lang',
    'lengthadjust',
    'letter-spacing',
    'kernelmatrix',
    'kernelunitlength',
    'lighting-color',
    'local',
    'marker-end',
    'marker-mid',
    'marker-start',
    'markerheight',
    'markerunits',
    'markerwidth',
    'maskcontentunits',
    'maskunits',
    'max',
    'mask',
    'media',
    'method',
    'mode',
    'min',
    'name',
    'numoctaves',
    'offset',
    'operator',
    'opacity',
    'order',
    'orient',
    'orientation',
    'origin',
    'overflow',
    'paint-order',
    'path',
    'pathlength',
    'patterncontentunits',
    'patterntransform',
    'patternunits',
    'points',
    'preservealpha',
    'preserveaspectratio',
    'primitiveunits',
    'r',
    'rx',
    'ry',
    'radius',
    'refx',
    'refy',
    'repeatcount',
    'repeatdur',
    'restart',
    'result',
    'rotate',
    'scale',
    'seed',
    'shape-rendering',
    'specularconstant',
    'specularexponent',
    'spreadmethod',
    'startoffset',
    'stddeviation',
    'stitchtiles',
    'stop-color',
    'stop-opacity',
    'stroke-dasharray',
    'stroke-dashoffset',
    'stroke-linecap',
    'stroke-linejoin',
    'stroke-miterlimit',
    'stroke-opacity',
    'stroke',
    'stroke-width',
    'style',
    'surfacescale',
    'systemlanguage',
    'tabindex',
    'targetx',
    'targety',
    'transform',
    'text-anchor',
    'text-decoration',
    'text-rendering',
    'textlength',
    'type',
    'u1',
    'u2',
    'unicode',
    'values',
    'viewbox',
    'visibility',
    'version',
    'vert-adv-y',
    'vert-origin-x',
    'vert-origin-y',
    'width',
    'word-spacing',
    'wrap',
    'writing-mode',
    'xchannelselector',
    'ychannelselector',
    'x',
    'x1',
    'x2',
    'xmlns',
    'y',
    'y1',
    'y2',
    'z',
    'zoomandpan'
]);
var $ea61991ee04c533a$var$mathMl$1 = $ea61991ee04c533a$var$freeze([
    'accent',
    'accentunder',
    'align',
    'bevelled',
    'close',
    'columnsalign',
    'columnlines',
    'columnspan',
    'denomalign',
    'depth',
    'dir',
    'display',
    'displaystyle',
    'encoding',
    'fence',
    'frame',
    'height',
    'href',
    'id',
    'largeop',
    'length',
    'linethickness',
    'lspace',
    'lquote',
    'mathbackground',
    'mathcolor',
    'mathsize',
    'mathvariant',
    'maxsize',
    'minsize',
    'movablelimits',
    'notation',
    'numalign',
    'open',
    'rowalign',
    'rowlines',
    'rowspacing',
    'rowspan',
    'rspace',
    'rquote',
    'scriptlevel',
    'scriptminsize',
    'scriptsizemultiplier',
    'selection',
    'separator',
    'separators',
    'stretchy',
    'subscriptshift',
    'supscriptshift',
    'symmetric',
    'voffset',
    'width',
    'xmlns'
]);
var $ea61991ee04c533a$var$xml = $ea61991ee04c533a$var$freeze([
    'xlink:href',
    'xml:id',
    'xlink:title',
    'xml:space',
    'xmlns:xlink'
]);
// eslint-disable-next-line unicorn/better-regex
var $ea61991ee04c533a$var$MUSTACHE_EXPR = $ea61991ee04c533a$var$seal(/\{\{[\s\S]*|[\s\S]*\}\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode
var $ea61991ee04c533a$var$ERB_EXPR = $ea61991ee04c533a$var$seal(/<%[\s\S]*|[\s\S]*%>/gm);
var $ea61991ee04c533a$var$DATA_ATTR = $ea61991ee04c533a$var$seal(/^data-[\-\w.\u00B7-\uFFFF]/); // eslint-disable-line no-useless-escape
var $ea61991ee04c533a$var$ARIA_ATTR = $ea61991ee04c533a$var$seal(/^aria-[\-\w]+$/); // eslint-disable-line no-useless-escape
var $ea61991ee04c533a$var$IS_ALLOWED_URI = $ea61991ee04c533a$var$seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\-]+(?:[^a-z+.\-:]|$))/i // eslint-disable-line no-useless-escape
);
var $ea61991ee04c533a$var$IS_SCRIPT_OR_DATA = $ea61991ee04c533a$var$seal(/^(?:\w+script|data):/i);
var $ea61991ee04c533a$var$ATTR_WHITESPACE = $ea61991ee04c533a$var$seal(/[\u0000-\u0020\u00A0\u1680\u180E\u2000-\u2029\u205F\u3000]/g // eslint-disable-line no-control-regex
);
var $ea61991ee04c533a$var$_typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function(obj) {
    return typeof obj;
} : function(obj) {
    return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
};
function $ea61991ee04c533a$var$_toConsumableArray$1(arr) {
    if (Array.isArray(arr)) {
        for(var i = 0, arr2 = Array(arr.length); i < arr.length; i++)arr2[i] = arr[i];
        return arr2;
    } else return Array.from(arr);
}
var $ea61991ee04c533a$var$getGlobal = function getGlobal() {
    return typeof window === 'undefined' ? null : window;
};
/**
 * Creates a no-op policy for internal use only.
 * Don't export this function outside this module!
 * @param {?TrustedTypePolicyFactory} trustedTypes The policy factory.
 * @param {Document} document The document object (to determine policy name suffix)
 * @return {?TrustedTypePolicy} The policy created (or null, if Trusted Types
 * are not supported).
 */ var $ea61991ee04c533a$var$_createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, document) {
    if ((typeof trustedTypes === 'undefined' ? 'undefined' : $ea61991ee04c533a$var$_typeof(trustedTypes)) !== 'object' || typeof trustedTypes.createPolicy !== 'function') return null;
    // Allow the callers to control the unique policy name
    // by adding a data-tt-policy-suffix to the script element with the DOMPurify.
    // Policy creation with duplicate names throws in Trusted Types.
    var suffix = null;
    var ATTR_NAME = 'data-tt-policy-suffix';
    if (document.currentScript && document.currentScript.hasAttribute(ATTR_NAME)) suffix = document.currentScript.getAttribute(ATTR_NAME);
    var policyName = 'dompurify' + (suffix ? '#' + suffix : '');
    try {
        return trustedTypes.createPolicy(policyName, {
            createHTML: function createHTML(html$$1) {
                return html$$1;
            }
        });
    } catch (_) {
        // Policy creation failed (most likely another DOMPurify script has
        // already run). Skip creating the policy, as this will only cause errors
        // if TT are enforced.
        console.warn('TrustedTypes policy ' + policyName + ' could not be created.');
        return null;
    }
};
function $ea61991ee04c533a$var$createDOMPurify() {
    var window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : $ea61991ee04c533a$var$getGlobal();
    var DOMPurify = function DOMPurify(root) {
        return $ea61991ee04c533a$var$createDOMPurify(root);
    };
    /**
   * Version label, exposed for easier checks
   * if DOMPurify is up to date or not
   */ DOMPurify.version = '2.3.1';
    /**
   * Array of elements that DOMPurify removed during sanitation.
   * Empty if nothing was removed.
   */ DOMPurify.removed = [];
    if (!window || !window.document || window.document.nodeType !== 9) {
        // Not running in a browser, provide a factory function
        // so that you can pass your own Window
        DOMPurify.isSupported = false;
        return DOMPurify;
    }
    var originalDocument = window.document;
    var document = window.document;
    var DocumentFragment = window.DocumentFragment, HTMLTemplateElement = window.HTMLTemplateElement, Node = window.Node, Element = window.Element, NodeFilter = window.NodeFilter, _window$NamedNodeMap = window.NamedNodeMap, NamedNodeMap = _window$NamedNodeMap === undefined ? window.NamedNodeMap || window.MozNamedAttrMap : _window$NamedNodeMap, Text = window.Text, Comment = window.Comment, DOMParser = window.DOMParser, trustedTypes = window.trustedTypes;
    var ElementPrototype = Element.prototype;
    var cloneNode = $ea61991ee04c533a$var$lookupGetter(ElementPrototype, 'cloneNode');
    var getNextSibling = $ea61991ee04c533a$var$lookupGetter(ElementPrototype, 'nextSibling');
    var getChildNodes = $ea61991ee04c533a$var$lookupGetter(ElementPrototype, 'childNodes');
    var getParentNode = $ea61991ee04c533a$var$lookupGetter(ElementPrototype, 'parentNode');
    // As per issue #47, the web-components registry is inherited by a
    // new document created via createHTMLDocument. As per the spec
    // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)
    // a new empty registry is used when creating a template contents owner
    // document, so we use that as our parent document to ensure nothing
    // is inherited.
    if (typeof HTMLTemplateElement === 'function') {
        var template = document.createElement('template');
        if (template.content && template.content.ownerDocument) document = template.content.ownerDocument;
    }
    var trustedTypesPolicy = $ea61991ee04c533a$var$_createTrustedTypesPolicy(trustedTypes, originalDocument);
    var emptyHTML = trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML('') : '';
    var _document = document, implementation = _document.implementation, createNodeIterator = _document.createNodeIterator, createDocumentFragment = _document.createDocumentFragment, getElementsByTagName = _document.getElementsByTagName;
    var importNode = originalDocument.importNode;
    var documentMode = {};
    try {
        documentMode = $ea61991ee04c533a$var$clone(document).documentMode ? document.documentMode : {};
    } catch (_) {}
    var hooks = {};
    /**
   * Expose whether this browser supports running the full DOMPurify.
   */ DOMPurify.isSupported = typeof getParentNode === 'function' && implementation && typeof implementation.createHTMLDocument !== 'undefined' && documentMode !== 9;
    var MUSTACHE_EXPR$$1 = $ea61991ee04c533a$var$MUSTACHE_EXPR, ERB_EXPR$$1 = $ea61991ee04c533a$var$ERB_EXPR, DATA_ATTR$$1 = $ea61991ee04c533a$var$DATA_ATTR, ARIA_ATTR$$1 = $ea61991ee04c533a$var$ARIA_ATTR, IS_SCRIPT_OR_DATA$$1 = $ea61991ee04c533a$var$IS_SCRIPT_OR_DATA, ATTR_WHITESPACE$$1 = $ea61991ee04c533a$var$ATTR_WHITESPACE;
    var IS_ALLOWED_URI$$1 = $ea61991ee04c533a$var$IS_ALLOWED_URI;
    /**
   * We consider the elements and attributes below to be safe. Ideally
   * don't add any new ones but feel free to remove unwanted ones.
   */ /* allowed element names */ var ALLOWED_TAGS = null;
    var DEFAULT_ALLOWED_TAGS = $ea61991ee04c533a$var$addToSet({}, [].concat($ea61991ee04c533a$var$_toConsumableArray$1($ea61991ee04c533a$var$html), $ea61991ee04c533a$var$_toConsumableArray$1($ea61991ee04c533a$var$svg), $ea61991ee04c533a$var$_toConsumableArray$1($ea61991ee04c533a$var$svgFilters), $ea61991ee04c533a$var$_toConsumableArray$1($ea61991ee04c533a$var$mathMl), $ea61991ee04c533a$var$_toConsumableArray$1($ea61991ee04c533a$var$text)));
    /* Allowed attribute names */ var ALLOWED_ATTR = null;
    var DEFAULT_ALLOWED_ATTR = $ea61991ee04c533a$var$addToSet({}, [].concat($ea61991ee04c533a$var$_toConsumableArray$1($ea61991ee04c533a$var$html$1), $ea61991ee04c533a$var$_toConsumableArray$1($ea61991ee04c533a$var$svg$1), $ea61991ee04c533a$var$_toConsumableArray$1($ea61991ee04c533a$var$mathMl$1), $ea61991ee04c533a$var$_toConsumableArray$1($ea61991ee04c533a$var$xml)));
    /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */ var FORBID_TAGS = null;
    /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */ var FORBID_ATTR = null;
    /* Decide if ARIA attributes are okay */ var ALLOW_ARIA_ATTR = true;
    /* Decide if custom data attributes are okay */ var ALLOW_DATA_ATTR = true;
    /* Decide if unknown protocols are okay */ var ALLOW_UNKNOWN_PROTOCOLS = false;
    /* Output should be safe for common template engines.
   * This means, DOMPurify removes data attributes, mustaches and ERB
   */ var SAFE_FOR_TEMPLATES = false;
    /* Decide if document with <html>... should be returned */ var WHOLE_DOCUMENT = false;
    /* Track whether config is already set on this instance of DOMPurify. */ var SET_CONFIG = false;
    /* Decide if all elements (e.g. style, script) must be children of
   * document.body. By default, browsers might move them to document.head */ var FORCE_BODY = false;
    /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html
   * string (or a TrustedHTML object if Trusted Types are supported).
   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead
   */ var RETURN_DOM = false;
    /* Decide if a DOM `DocumentFragment` should be returned, instead of a html
   * string  (or a TrustedHTML object if Trusted Types are supported) */ var RETURN_DOM_FRAGMENT = false;
    /* If `RETURN_DOM` or `RETURN_DOM_FRAGMENT` is enabled, decide if the returned DOM
   * `Node` is imported into the current `Document`. If this flag is not enabled the
   * `Node` will belong (its ownerDocument) to a fresh `HTMLDocument`, created by
   * DOMPurify.
   *
   * This defaults to `true` starting DOMPurify 2.2.0. Note that setting it to `false`
   * might cause XSS from attacks hidden in closed shadowroots in case the browser
   * supports Declarative Shadow: DOM https://web.dev/declarative-shadow-dom/
   */ var RETURN_DOM_IMPORT = true;
    /* Try to return a Trusted Type object instead of a string, return a string in
   * case Trusted Types are not supported  */ var RETURN_TRUSTED_TYPE = false;
    /* Output should be free from DOM clobbering attacks? */ var SANITIZE_DOM = true;
    /* Keep element content when removing element? */ var KEEP_CONTENT = true;
    /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead
   * of importing it into a new Document and returning a sanitized copy */ var IN_PLACE = false;
    /* Allow usage of profiles like html, svg and mathMl */ var USE_PROFILES = {};
    /* Tags to ignore content of when KEEP_CONTENT is true */ var FORBID_CONTENTS = null;
    var DEFAULT_FORBID_CONTENTS = $ea61991ee04c533a$var$addToSet({}, [
        'annotation-xml',
        'audio',
        'colgroup',
        'desc',
        'foreignobject',
        'head',
        'iframe',
        'math',
        'mi',
        'mn',
        'mo',
        'ms',
        'mtext',
        'noembed',
        'noframes',
        'noscript',
        'plaintext',
        'script',
        'style',
        'svg',
        'template',
        'thead',
        'title',
        'video',
        'xmp'
    ]);
    /* Tags that are safe for data: URIs */ var DATA_URI_TAGS = null;
    var DEFAULT_DATA_URI_TAGS = $ea61991ee04c533a$var$addToSet({}, [
        'audio',
        'video',
        'img',
        'source',
        'image',
        'track'
    ]);
    /* Attributes safe for values like "javascript:" */ var URI_SAFE_ATTRIBUTES = null;
    var DEFAULT_URI_SAFE_ATTRIBUTES = $ea61991ee04c533a$var$addToSet({}, [
        'alt',
        'class',
        'for',
        'id',
        'label',
        'name',
        'pattern',
        'placeholder',
        'role',
        'summary',
        'title',
        'value',
        'style',
        'xmlns'
    ]);
    var MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';
    var SVG_NAMESPACE = 'http://www.w3.org/2000/svg';
    var HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';
    /* Document namespace */ var NAMESPACE = HTML_NAMESPACE;
    var IS_EMPTY_INPUT = false;
    /* Keep a reference to config to pass to hooks */ var CONFIG = null;
    /* Ideally, do not touch anything below this line */ /* ______________________________________________ */ var formElement = document.createElement('form');
    /**
   * _parseConfig
   *
   * @param  {Object} cfg optional config literal
   */ // eslint-disable-next-line complexity
    var _parseConfig = function _parseConfig(cfg) {
        if (CONFIG && CONFIG === cfg) return;
        /* Shield configuration object from tampering */ if (!cfg || (typeof cfg === 'undefined' ? 'undefined' : $ea61991ee04c533a$var$_typeof(cfg)) !== 'object') cfg = {};
        /* Shield configuration object from prototype pollution */ cfg = $ea61991ee04c533a$var$clone(cfg);
        /* Set configuration parameters */ ALLOWED_TAGS = 'ALLOWED_TAGS' in cfg ? $ea61991ee04c533a$var$addToSet({}, cfg.ALLOWED_TAGS) : DEFAULT_ALLOWED_TAGS;
        ALLOWED_ATTR = 'ALLOWED_ATTR' in cfg ? $ea61991ee04c533a$var$addToSet({}, cfg.ALLOWED_ATTR) : DEFAULT_ALLOWED_ATTR;
        URI_SAFE_ATTRIBUTES = 'ADD_URI_SAFE_ATTR' in cfg ? $ea61991ee04c533a$var$addToSet($ea61991ee04c533a$var$clone(DEFAULT_URI_SAFE_ATTRIBUTES), cfg.ADD_URI_SAFE_ATTR) : DEFAULT_URI_SAFE_ATTRIBUTES;
        DATA_URI_TAGS = 'ADD_DATA_URI_TAGS' in cfg ? $ea61991ee04c533a$var$addToSet($ea61991ee04c533a$var$clone(DEFAULT_DATA_URI_TAGS), cfg.ADD_DATA_URI_TAGS) : DEFAULT_DATA_URI_TAGS;
        FORBID_CONTENTS = 'FORBID_CONTENTS' in cfg ? $ea61991ee04c533a$var$addToSet({}, cfg.FORBID_CONTENTS) : DEFAULT_FORBID_CONTENTS;
        FORBID_TAGS = 'FORBID_TAGS' in cfg ? $ea61991ee04c533a$var$addToSet({}, cfg.FORBID_TAGS) : {};
        FORBID_ATTR = 'FORBID_ATTR' in cfg ? $ea61991ee04c533a$var$addToSet({}, cfg.FORBID_ATTR) : {};
        USE_PROFILES = 'USE_PROFILES' in cfg ? cfg.USE_PROFILES : false;
        ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true
        ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true
        ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false
        SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false
        WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false
        RETURN_DOM = cfg.RETURN_DOM || false; // Default false
        RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false
        RETURN_DOM_IMPORT = cfg.RETURN_DOM_IMPORT !== false; // Default true
        RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false
        FORCE_BODY = cfg.FORCE_BODY || false; // Default false
        SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true
        KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true
        IN_PLACE = cfg.IN_PLACE || false; // Default false
        IS_ALLOWED_URI$$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI$$1;
        NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;
        if (SAFE_FOR_TEMPLATES) ALLOW_DATA_ATTR = false;
        if (RETURN_DOM_FRAGMENT) RETURN_DOM = true;
        /* Parse profile info */ if (USE_PROFILES) {
            ALLOWED_TAGS = $ea61991ee04c533a$var$addToSet({}, [].concat($ea61991ee04c533a$var$_toConsumableArray$1($ea61991ee04c533a$var$text)));
            ALLOWED_ATTR = [];
            if (USE_PROFILES.html === true) {
                $ea61991ee04c533a$var$addToSet(ALLOWED_TAGS, $ea61991ee04c533a$var$html);
                $ea61991ee04c533a$var$addToSet(ALLOWED_ATTR, $ea61991ee04c533a$var$html$1);
            }
            if (USE_PROFILES.svg === true) {
                $ea61991ee04c533a$var$addToSet(ALLOWED_TAGS, $ea61991ee04c533a$var$svg);
                $ea61991ee04c533a$var$addToSet(ALLOWED_ATTR, $ea61991ee04c533a$var$svg$1);
                $ea61991ee04c533a$var$addToSet(ALLOWED_ATTR, $ea61991ee04c533a$var$xml);
            }
            if (USE_PROFILES.svgFilters === true) {
                $ea61991ee04c533a$var$addToSet(ALLOWED_TAGS, $ea61991ee04c533a$var$svgFilters);
                $ea61991ee04c533a$var$addToSet(ALLOWED_ATTR, $ea61991ee04c533a$var$svg$1);
                $ea61991ee04c533a$var$addToSet(ALLOWED_ATTR, $ea61991ee04c533a$var$xml);
            }
            if (USE_PROFILES.mathMl === true) {
                $ea61991ee04c533a$var$addToSet(ALLOWED_TAGS, $ea61991ee04c533a$var$mathMl);
                $ea61991ee04c533a$var$addToSet(ALLOWED_ATTR, $ea61991ee04c533a$var$mathMl$1);
                $ea61991ee04c533a$var$addToSet(ALLOWED_ATTR, $ea61991ee04c533a$var$xml);
            }
        }
        /* Merge configuration parameters */ if (cfg.ADD_TAGS) {
            if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) ALLOWED_TAGS = $ea61991ee04c533a$var$clone(ALLOWED_TAGS);
            $ea61991ee04c533a$var$addToSet(ALLOWED_TAGS, cfg.ADD_TAGS);
        }
        if (cfg.ADD_ATTR) {
            if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) ALLOWED_ATTR = $ea61991ee04c533a$var$clone(ALLOWED_ATTR);
            $ea61991ee04c533a$var$addToSet(ALLOWED_ATTR, cfg.ADD_ATTR);
        }
        if (cfg.ADD_URI_SAFE_ATTR) $ea61991ee04c533a$var$addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR);
        if (cfg.FORBID_CONTENTS) {
            if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) FORBID_CONTENTS = $ea61991ee04c533a$var$clone(FORBID_CONTENTS);
            $ea61991ee04c533a$var$addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS);
        }
        /* Add #text in case KEEP_CONTENT is set to true */ if (KEEP_CONTENT) ALLOWED_TAGS['#text'] = true;
        /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */ if (WHOLE_DOCUMENT) $ea61991ee04c533a$var$addToSet(ALLOWED_TAGS, [
            'html',
            'head',
            'body'
        ]);
        /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */ if (ALLOWED_TAGS.table) {
            $ea61991ee04c533a$var$addToSet(ALLOWED_TAGS, [
                'tbody'
            ]);
            delete FORBID_TAGS.tbody;
        }
        // Prevent further manipulation of configuration.
        // Not available in IE8, Safari 5, etc.
        if ($ea61991ee04c533a$var$freeze) $ea61991ee04c533a$var$freeze(cfg);
        CONFIG = cfg;
    };
    var MATHML_TEXT_INTEGRATION_POINTS = $ea61991ee04c533a$var$addToSet({}, [
        'mi',
        'mo',
        'mn',
        'ms',
        'mtext'
    ]);
    var HTML_INTEGRATION_POINTS = $ea61991ee04c533a$var$addToSet({}, [
        'foreignobject',
        'desc',
        'title',
        'annotation-xml'
    ]);
    /* Keep track of all possible SVG and MathML tags
   * so that we can perform the namespace checks
   * correctly. */ var ALL_SVG_TAGS = $ea61991ee04c533a$var$addToSet({}, $ea61991ee04c533a$var$svg);
    $ea61991ee04c533a$var$addToSet(ALL_SVG_TAGS, $ea61991ee04c533a$var$svgFilters);
    $ea61991ee04c533a$var$addToSet(ALL_SVG_TAGS, $ea61991ee04c533a$var$svgDisallowed);
    var ALL_MATHML_TAGS = $ea61991ee04c533a$var$addToSet({}, $ea61991ee04c533a$var$mathMl);
    $ea61991ee04c533a$var$addToSet(ALL_MATHML_TAGS, $ea61991ee04c533a$var$mathMlDisallowed);
    /**
   *
   *
   * @param  {Element} element a DOM element whose namespace is being checked
   * @returns {boolean} Return false if the element has a
   *  namespace that a spec-compliant parser would never
   *  return. Return true otherwise.
   */ var _checkValidNamespace = function _checkValidNamespace(element) {
        var parent = getParentNode(element);
        // In JSDOM, if we're inside shadow DOM, then parentNode
        // can be null. We just simulate parent in this case.
        if (!parent || !parent.tagName) parent = {
            namespaceURI: HTML_NAMESPACE,
            tagName: 'template'
        };
        var tagName = $ea61991ee04c533a$var$stringToLowerCase(element.tagName);
        var parentTagName = $ea61991ee04c533a$var$stringToLowerCase(parent.tagName);
        if (element.namespaceURI === SVG_NAMESPACE) {
            // The only way to switch from HTML namespace to SVG
            // is via <svg>. If it happens via any other tag, then
            // it should be killed.
            if (parent.namespaceURI === HTML_NAMESPACE) return tagName === 'svg';
            // The only way to switch from MathML to SVG is via
            // svg if parent is either <annotation-xml> or MathML
            // text integration points.
            if (parent.namespaceURI === MATHML_NAMESPACE) return tagName === 'svg' && (parentTagName === 'annotation-xml' || MATHML_TEXT_INTEGRATION_POINTS[parentTagName]);
            // We only allow elements that are defined in SVG
            // spec. All others are disallowed in SVG namespace.
            return Boolean(ALL_SVG_TAGS[tagName]);
        }
        if (element.namespaceURI === MATHML_NAMESPACE) {
            // The only way to switch from HTML namespace to MathML
            // is via <math>. If it happens via any other tag, then
            // it should be killed.
            if (parent.namespaceURI === HTML_NAMESPACE) return tagName === 'math';
            // The only way to switch from SVG to MathML is via
            // <math> and HTML integration points
            if (parent.namespaceURI === SVG_NAMESPACE) return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];
            // We only allow elements that are defined in MathML
            // spec. All others are disallowed in MathML namespace.
            return Boolean(ALL_MATHML_TAGS[tagName]);
        }
        if (element.namespaceURI === HTML_NAMESPACE) {
            // The only way to switch from SVG to HTML is via
            // HTML integration points, and from MathML to HTML
            // is via MathML text integration points
            if (parent.namespaceURI === SVG_NAMESPACE && !HTML_INTEGRATION_POINTS[parentTagName]) return false;
            if (parent.namespaceURI === MATHML_NAMESPACE && !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]) return false;
            // Certain elements are allowed in both SVG and HTML
            // namespace. We need to specify them explicitly
            // so that they don't get erronously deleted from
            // HTML namespace.
            var commonSvgAndHTMLElements = $ea61991ee04c533a$var$addToSet({}, [
                'title',
                'style',
                'font',
                'a',
                'script'
            ]);
            // We disallow tags that are specific for MathML
            // or SVG and should never appear in HTML namespace
            return !ALL_MATHML_TAGS[tagName] && (commonSvgAndHTMLElements[tagName] || !ALL_SVG_TAGS[tagName]);
        }
        // The code should never reach this place (this means
        // that the element somehow got namespace that is not
        // HTML, SVG or MathML). Return false just in case.
        return false;
    };
    /**
   * _forceRemove
   *
   * @param  {Node} node a DOM node
   */ var _forceRemove = function _forceRemove(node) {
        $ea61991ee04c533a$var$arrayPush(DOMPurify.removed, {
            element: node
        });
        try {
            // eslint-disable-next-line unicorn/prefer-dom-node-remove
            node.parentNode.removeChild(node);
        } catch (_) {
            try {
                node.outerHTML = emptyHTML;
            } catch (_) {
                node.remove();
            }
        }
    };
    /**
   * _removeAttribute
   *
   * @param  {String} name an Attribute name
   * @param  {Node} node a DOM node
   */ var _removeAttribute = function _removeAttribute(name, node) {
        try {
            $ea61991ee04c533a$var$arrayPush(DOMPurify.removed, {
                attribute: node.getAttributeNode(name),
                from: node
            });
        } catch (_) {
            $ea61991ee04c533a$var$arrayPush(DOMPurify.removed, {
                attribute: null,
                from: node
            });
        }
        node.removeAttribute(name);
        // We void attribute values for unremovable "is"" attributes
        if (name === 'is' && !ALLOWED_ATTR[name]) {
            if (RETURN_DOM || RETURN_DOM_FRAGMENT) try {
                _forceRemove(node);
            } catch (_) {}
            else try {
                node.setAttribute(name, '');
            } catch (_1) {}
        }
    };
    /**
   * _initDocument
   *
   * @param  {String} dirty a string of dirty markup
   * @return {Document} a DOM, filled with the dirty markup
   */ var _initDocument = function _initDocument(dirty) {
        /* Create a HTML document */ var doc = void 0;
        var leadingWhitespace = void 0;
        if (FORCE_BODY) dirty = '<remove></remove>' + dirty;
        else {
            /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */ var matches = $ea61991ee04c533a$var$stringMatch(dirty, /^[\r\n\t ]+/);
            leadingWhitespace = matches && matches[0];
        }
        var dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;
        /*
     * Use the DOMParser API by default, fallback later if needs be
     * DOMParser not work for svg when has multiple root element.
     */ if (NAMESPACE === HTML_NAMESPACE) try {
            doc = new DOMParser().parseFromString(dirtyPayload, 'text/html');
        } catch (_) {}
        /* Use createHTMLDocument in case DOMParser is not available */ if (!doc || !doc.documentElement) {
            doc = implementation.createDocument(NAMESPACE, 'template', null);
            try {
                doc.documentElement.innerHTML = IS_EMPTY_INPUT ? '' : dirtyPayload;
            } catch (_) {
            // Syntax error if dirtyPayload is invalid xml
            }
        }
        var body = doc.body || doc.documentElement;
        if (dirty && leadingWhitespace) body.insertBefore(document.createTextNode(leadingWhitespace), body.childNodes[0] || null);
        /* Work on whole document or just its body */ if (NAMESPACE === HTML_NAMESPACE) return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];
        return WHOLE_DOCUMENT ? doc.documentElement : body;
    };
    /**
   * _createIterator
   *
   * @param  {Document} root document/fragment to create iterator for
   * @return {Iterator} iterator instance
   */ var _createIterator = function _createIterator(root) {
        return createNodeIterator.call(root.ownerDocument || root, root, NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT, null, false);
    };
    /**
   * _isClobbered
   *
   * @param  {Node} elm element to check for clobbering attacks
   * @return {Boolean} true if clobbered, false if safe
   */ var _isClobbered = function _isClobbered(elm) {
        if (elm instanceof Text || elm instanceof Comment) return false;
        if (typeof elm.nodeName !== 'string' || typeof elm.textContent !== 'string' || typeof elm.removeChild !== 'function' || !(elm.attributes instanceof NamedNodeMap) || typeof elm.removeAttribute !== 'function' || typeof elm.setAttribute !== 'function' || typeof elm.namespaceURI !== 'string' || typeof elm.insertBefore !== 'function') return true;
        return false;
    };
    /**
   * _isNode
   *
   * @param  {Node} obj object to check whether it's a DOM node
   * @return {Boolean} true is object is a DOM node
   */ var _isNode = function _isNode(object) {
        return (typeof Node === 'undefined' ? 'undefined' : $ea61991ee04c533a$var$_typeof(Node)) === 'object' ? object instanceof Node : object && (typeof object === 'undefined' ? 'undefined' : $ea61991ee04c533a$var$_typeof(object)) === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string';
    };
    /**
   * _executeHook
   * Execute user configurable hooks
   *
   * @param  {String} entryPoint  Name of the hook's entry point
   * @param  {Node} currentNode node to work on with the hook
   * @param  {Object} data additional hook parameters
   */ var _executeHook = function _executeHook(entryPoint, currentNode, data) {
        if (!hooks[entryPoint]) return;
        $ea61991ee04c533a$var$arrayForEach(hooks[entryPoint], function(hook) {
            hook.call(DOMPurify, currentNode, data, CONFIG);
        });
    };
    /**
   * _sanitizeElements
   *
   * @protect nodeName
   * @protect textContent
   * @protect removeChild
   *
   * @param   {Node} currentNode to check for permission to exist
   * @return  {Boolean} true if node was killed, false if left alive
   */ var _sanitizeElements = function _sanitizeElements(currentNode) {
        var content = void 0;
        /* Execute a hook if present */ _executeHook('beforeSanitizeElements', currentNode, null);
        /* Check if element is clobbered or can clobber */ if (_isClobbered(currentNode)) {
            _forceRemove(currentNode);
            return true;
        }
        /* Check if tagname contains Unicode */ if ($ea61991ee04c533a$var$stringMatch(currentNode.nodeName, /[\u0080-\uFFFF]/)) {
            _forceRemove(currentNode);
            return true;
        }
        /* Now let's check the element's type and name */ var tagName = $ea61991ee04c533a$var$stringToLowerCase(currentNode.nodeName);
        /* Execute a hook if present */ _executeHook('uponSanitizeElement', currentNode, {
            tagName: tagName,
            allowedTags: ALLOWED_TAGS
        });
        /* Detect mXSS attempts abusing namespace confusion */ if (!_isNode(currentNode.firstElementChild) && (!_isNode(currentNode.content) || !_isNode(currentNode.content.firstElementChild)) && $ea61991ee04c533a$var$regExpTest(/<[/\w]/g, currentNode.innerHTML) && $ea61991ee04c533a$var$regExpTest(/<[/\w]/g, currentNode.textContent)) {
            _forceRemove(currentNode);
            return true;
        }
        /* Mitigate a problem with templates inside select */ if (tagName === 'select' && $ea61991ee04c533a$var$regExpTest(/<template/i, currentNode.innerHTML)) {
            _forceRemove(currentNode);
            return true;
        }
        /* Remove element if anything forbids its presence */ if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {
            /* Keep content except for bad-listed elements */ if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {
                var parentNode = getParentNode(currentNode) || currentNode.parentNode;
                var childNodes = getChildNodes(currentNode) || currentNode.childNodes;
                if (childNodes && parentNode) {
                    var childCount = childNodes.length;
                    for(var i = childCount - 1; i >= 0; --i)parentNode.insertBefore(cloneNode(childNodes[i], true), getNextSibling(currentNode));
                }
            }
            _forceRemove(currentNode);
            return true;
        }
        /* Check whether element has a valid namespace */ if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {
            _forceRemove(currentNode);
            return true;
        }
        if ((tagName === 'noscript' || tagName === 'noembed') && $ea61991ee04c533a$var$regExpTest(/<\/no(script|embed)/i, currentNode.innerHTML)) {
            _forceRemove(currentNode);
            return true;
        }
        /* Sanitize element content to be template-safe */ if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {
            /* Get the element's text content */ content = currentNode.textContent;
            content = $ea61991ee04c533a$var$stringReplace(content, MUSTACHE_EXPR$$1, ' ');
            content = $ea61991ee04c533a$var$stringReplace(content, ERB_EXPR$$1, ' ');
            if (currentNode.textContent !== content) {
                $ea61991ee04c533a$var$arrayPush(DOMPurify.removed, {
                    element: currentNode.cloneNode()
                });
                currentNode.textContent = content;
            }
        }
        /* Execute a hook if present */ _executeHook('afterSanitizeElements', currentNode, null);
        return false;
    };
    /**
   * _isValidAttribute
   *
   * @param  {string} lcTag Lowercase tag name of containing element.
   * @param  {string} lcName Lowercase attribute name.
   * @param  {string} value Attribute value.
   * @return {Boolean} Returns true if `value` is valid, otherwise false.
   */ // eslint-disable-next-line complexity
    var _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {
        /* Make sure attribute cannot clobber */ if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) return false;
        /* Allow valid data-* attributes: At least one character after "-"
        (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)
        XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)
        We don't need to check the value; it's always URI safe. */ if (ALLOW_DATA_ATTR && !FORBID_ATTR[lcName] && $ea61991ee04c533a$var$regExpTest(DATA_ATTR$$1, lcName)) ;
        else if (ALLOW_ARIA_ATTR && $ea61991ee04c533a$var$regExpTest(ARIA_ATTR$$1, lcName)) ;
        else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) return false;
        else if (URI_SAFE_ATTRIBUTES[lcName]) ;
        else if ($ea61991ee04c533a$var$regExpTest(IS_ALLOWED_URI$$1, $ea61991ee04c533a$var$stringReplace(value, ATTR_WHITESPACE$$1, ''))) ;
        else if ((lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') && lcTag !== 'script' && $ea61991ee04c533a$var$stringIndexOf(value, 'data:') === 0 && DATA_URI_TAGS[lcTag]) ;
        else if (ALLOW_UNKNOWN_PROTOCOLS && !$ea61991ee04c533a$var$regExpTest(IS_SCRIPT_OR_DATA$$1, $ea61991ee04c533a$var$stringReplace(value, ATTR_WHITESPACE$$1, ''))) ;
        else if (!value) ;
        else return false;
        return true;
    };
    /**
   * _sanitizeAttributes
   *
   * @protect attributes
   * @protect nodeName
   * @protect removeAttribute
   * @protect setAttribute
   *
   * @param  {Node} currentNode to sanitize
   */ var _sanitizeAttributes = function _sanitizeAttributes(currentNode) {
        var attr = void 0;
        var value = void 0;
        var lcName = void 0;
        var l = void 0;
        /* Execute a hook if present */ _executeHook('beforeSanitizeAttributes', currentNode, null);
        var attributes = currentNode.attributes;
        /* Check if we have attributes; if not we might have a text node */ if (!attributes) return;
        var hookEvent = {
            attrName: '',
            attrValue: '',
            keepAttr: true,
            allowedAttributes: ALLOWED_ATTR
        };
        l = attributes.length;
        /* Go backwards over all attributes; safely remove bad ones */ while(l--){
            attr = attributes[l];
            var _attr = attr, name = _attr.name, namespaceURI = _attr.namespaceURI;
            value = $ea61991ee04c533a$var$stringTrim(attr.value);
            lcName = $ea61991ee04c533a$var$stringToLowerCase(name);
            /* Execute a hook if present */ hookEvent.attrName = lcName;
            hookEvent.attrValue = value;
            hookEvent.keepAttr = true;
            hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set
            _executeHook('uponSanitizeAttribute', currentNode, hookEvent);
            value = hookEvent.attrValue;
            /* Did the hooks approve of the attribute? */ if (hookEvent.forceKeepAttr) continue;
            /* Remove attribute */ _removeAttribute(name, currentNode);
            /* Did the hooks approve of the attribute? */ if (!hookEvent.keepAttr) continue;
            /* Work around a security issue in jQuery 3.0 */ if ($ea61991ee04c533a$var$regExpTest(/\/>/i, value)) {
                _removeAttribute(name, currentNode);
                continue;
            }
            /* Sanitize attribute content to be template-safe */ if (SAFE_FOR_TEMPLATES) {
                value = $ea61991ee04c533a$var$stringReplace(value, MUSTACHE_EXPR$$1, ' ');
                value = $ea61991ee04c533a$var$stringReplace(value, ERB_EXPR$$1, ' ');
            }
            /* Is `value` valid for this attribute? */ var lcTag = currentNode.nodeName.toLowerCase();
            if (!_isValidAttribute(lcTag, lcName, value)) continue;
            /* Handle invalid data-* attribute set by try-catching it */ try {
                if (namespaceURI) currentNode.setAttributeNS(namespaceURI, name, value);
                else /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. "x-schema". */ currentNode.setAttribute(name, value);
                $ea61991ee04c533a$var$arrayPop(DOMPurify.removed);
            } catch (_) {}
        }
        /* Execute a hook if present */ _executeHook('afterSanitizeAttributes', currentNode, null);
    };
    /**
   * _sanitizeShadowDOM
   *
   * @param  {DocumentFragment} fragment to iterate over recursively
   */ var _sanitizeShadowDOM1 = function _sanitizeShadowDOM(fragment) {
        var shadowNode = void 0;
        var shadowIterator = _createIterator(fragment);
        /* Execute a hook if present */ _executeHook('beforeSanitizeShadowDOM', fragment, null);
        while(shadowNode = shadowIterator.nextNode()){
            /* Execute a hook if present */ _executeHook('uponSanitizeShadowNode', shadowNode, null);
            /* Sanitize tags and elements */ if (_sanitizeElements(shadowNode)) continue;
            /* Deep shadow DOM detected */ if (shadowNode.content instanceof DocumentFragment) _sanitizeShadowDOM(shadowNode.content);
            /* Check attributes, sanitize if necessary */ _sanitizeAttributes(shadowNode);
        }
        /* Execute a hook if present */ _executeHook('afterSanitizeShadowDOM', fragment, null);
    };
    /**
   * Sanitize
   * Public method providing core sanitation functionality
   *
   * @param {String|Node} dirty string or DOM node
   * @param {Object} configuration object
   */ // eslint-disable-next-line complexity
    DOMPurify.sanitize = function(dirty, cfg) {
        var body = void 0;
        var importedNode = void 0;
        var currentNode = void 0;
        var oldNode = void 0;
        var returnNode = void 0;
        /* Make sure we have a string to sanitize.
      DO NOT return early, as this will return the wrong type if
      the user has requested a DOM object rather than a string */ IS_EMPTY_INPUT = !dirty;
        if (IS_EMPTY_INPUT) dirty = '<!-->';
        /* Stringify, in case dirty is an object */ if (typeof dirty !== 'string' && !_isNode(dirty)) {
            // eslint-disable-next-line no-negated-condition
            if (typeof dirty.toString !== 'function') throw $ea61991ee04c533a$var$typeErrorCreate('toString is not a function');
            else {
                dirty = dirty.toString();
                if (typeof dirty !== 'string') throw $ea61991ee04c533a$var$typeErrorCreate('dirty is not a string, aborting');
            }
        }
        /* Check we can run. Otherwise fall back or ignore */ if (!DOMPurify.isSupported) {
            if ($ea61991ee04c533a$var$_typeof(window.toStaticHTML) === 'object' || typeof window.toStaticHTML === 'function') {
                if (typeof dirty === 'string') return window.toStaticHTML(dirty);
                if (_isNode(dirty)) return window.toStaticHTML(dirty.outerHTML);
            }
            return dirty;
        }
        /* Assign config vars */ if (!SET_CONFIG) _parseConfig(cfg);
        /* Clean up removed elements */ DOMPurify.removed = [];
        /* Check if dirty is correctly typed for IN_PLACE */ if (typeof dirty === 'string') IN_PLACE = false;
        if (IN_PLACE) ;
        else if (dirty instanceof Node) {
            /* If dirty is a DOM element, append to an empty document to avoid
         elements being stripped by the parser */ body = _initDocument('<!---->');
            importedNode = body.ownerDocument.importNode(dirty, true);
            if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') /* Node is already a body, use as is */ body = importedNode;
            else if (importedNode.nodeName === 'HTML') body = importedNode;
            else // eslint-disable-next-line unicorn/prefer-dom-node-append
            body.appendChild(importedNode);
        } else {
            /* Exit directly if we have nothing to do */ if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT && // eslint-disable-next-line unicorn/prefer-includes
            dirty.indexOf('<') === -1) return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;
            /* Initialize the document to work on */ body = _initDocument(dirty);
            /* Check we have a DOM node from the data */ if (!body) return RETURN_DOM ? null : emptyHTML;
        }
        /* Remove first element node (ours) if FORCE_BODY is set */ if (body && FORCE_BODY) _forceRemove(body.firstChild);
        /* Get node iterator */ var nodeIterator = _createIterator(IN_PLACE ? dirty : body);
        /* Now start iterating over the created document */ while(currentNode = nodeIterator.nextNode()){
            /* Fix IE's strange behavior with manipulated textNodes #89 */ if (currentNode.nodeType === 3 && currentNode === oldNode) continue;
            /* Sanitize tags and elements */ if (_sanitizeElements(currentNode)) continue;
            /* Shadow DOM detected, sanitize it */ if (currentNode.content instanceof DocumentFragment) _sanitizeShadowDOM1(currentNode.content);
            /* Check attributes, sanitize if necessary */ _sanitizeAttributes(currentNode);
            oldNode = currentNode;
        }
        oldNode = null;
        /* If we sanitized `dirty` in-place, return it. */ if (IN_PLACE) return dirty;
        /* Return sanitized string or DOM */ if (RETURN_DOM) {
            if (RETURN_DOM_FRAGMENT) {
                returnNode = createDocumentFragment.call(body.ownerDocument);
                while(body.firstChild)// eslint-disable-next-line unicorn/prefer-dom-node-append
                returnNode.appendChild(body.firstChild);
            } else returnNode = body;
            if (RETURN_DOM_IMPORT) /*
          AdoptNode() is not used because internal state is not reset
          (e.g. the past names map of a HTMLFormElement), this is safe
          in theory but we would rather not risk another attack vector.
          The state that is cloned by importNode() is explicitly defined
          by the specs.
        */ returnNode = importNode.call(originalDocument, returnNode, true);
            return returnNode;
        }
        var serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;
        /* Sanitize final string template-safe */ if (SAFE_FOR_TEMPLATES) {
            serializedHTML = $ea61991ee04c533a$var$stringReplace(serializedHTML, MUSTACHE_EXPR$$1, ' ');
            serializedHTML = $ea61991ee04c533a$var$stringReplace(serializedHTML, ERB_EXPR$$1, ' ');
        }
        return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;
    };
    /**
   * Public method to set the configuration once
   * setConfig
   *
   * @param {Object} cfg configuration object
   */ DOMPurify.setConfig = function(cfg) {
        _parseConfig(cfg);
        SET_CONFIG = true;
    };
    /**
   * Public method to remove the configuration
   * clearConfig
   *
   */ DOMPurify.clearConfig = function() {
        CONFIG = null;
        SET_CONFIG = false;
    };
    /**
   * Public method to check if an attribute value is valid.
   * Uses last set config, if any. Otherwise, uses config defaults.
   * isValidAttribute
   *
   * @param  {string} tag Tag name of containing element.
   * @param  {string} attr Attribute name.
   * @param  {string} value Attribute value.
   * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.
   */ DOMPurify.isValidAttribute = function(tag, attr, value) {
        /* Initialize shared config vars if necessary. */ if (!CONFIG) _parseConfig({});
        var lcTag = $ea61991ee04c533a$var$stringToLowerCase(tag);
        var lcName = $ea61991ee04c533a$var$stringToLowerCase(attr);
        return _isValidAttribute(lcTag, lcName, value);
    };
    /**
   * AddHook
   * Public method to add DOMPurify hooks
   *
   * @param {String} entryPoint entry point for the hook to add
   * @param {Function} hookFunction function to execute
   */ DOMPurify.addHook = function(entryPoint, hookFunction) {
        if (typeof hookFunction !== 'function') return;
        hooks[entryPoint] = hooks[entryPoint] || [];
        $ea61991ee04c533a$var$arrayPush(hooks[entryPoint], hookFunction);
    };
    /**
   * RemoveHook
   * Public method to remove a DOMPurify hook at a given entryPoint
   * (pops it from the stack of hooks if more are present)
   *
   * @param {String} entryPoint entry point for the hook to remove
   */ DOMPurify.removeHook = function(entryPoint) {
        if (hooks[entryPoint]) $ea61991ee04c533a$var$arrayPop(hooks[entryPoint]);
    };
    /**
   * RemoveHooks
   * Public method to remove all DOMPurify hooks at a given entryPoint
   *
   * @param  {String} entryPoint entry point for the hooks to remove
   */ DOMPurify.removeHooks = function(entryPoint) {
        if (hooks[entryPoint]) hooks[entryPoint] = [];
    };
    /**
   * RemoveAllHooks
   * Public method to remove all DOMPurify hooks
   *
   */ DOMPurify.removeAllHooks = function() {
        hooks = {};
    };
    return DOMPurify;
}
var $ea61991ee04c533a$var$purify = $ea61991ee04c533a$var$createDOMPurify();
var // ESM-comment-begin
// define(function () { return purify; });
// ESM-comment-end
// ESM-uncomment-begin
$ea61991ee04c533a$export$2e2bcd8739ae039 = $ea61991ee04c533a$var$purify;
const $ea61991ee04c533a$export$83d89fbfd8236492 = $ea61991ee04c533a$var$purify.version;
const $ea61991ee04c533a$export$48c17662a6902497 = $ea61991ee04c533a$var$purify.isSupported;
const $ea61991ee04c533a$export$83d2e9e3e4ee39ed = $ea61991ee04c533a$var$purify.sanitize;
const $ea61991ee04c533a$export$940a7873bb071df8 = $ea61991ee04c533a$var$purify.setConfig;
const $ea61991ee04c533a$export$fddf4455c1a80feb = $ea61991ee04c533a$var$purify.clearConfig;
const $ea61991ee04c533a$export$ffe9bb2f80eb16c6 = $ea61991ee04c533a$var$purify.isValidAttribute;
const $ea61991ee04c533a$export$f99777bb87ac6904 = $ea61991ee04c533a$var$purify.addHook;
const $ea61991ee04c533a$export$4840506845da1500 = $ea61991ee04c533a$var$purify.removeHook;
const $ea61991ee04c533a$export$37b326390107f1c9 = $ea61991ee04c533a$var$purify.removeHooks;
const $ea61991ee04c533a$export$2d6b8bcac4994499 = $ea61991ee04c533a$var$purify.removeAllHooks; // ESM-uncomment-end



var $3vJsA = parcelRequire("3vJsA");

var $e65bg = parcelRequire("e65bg");

var $c8kCi = parcelRequire("c8kCi");

var $6G2yS = parcelRequire("6G2yS");

var $6bXyA = parcelRequire("6bXyA");

var $giPcZ = parcelRequire("giPcZ");

var $gPkHZ = parcelRequire("gPkHZ");

var $5YaSO = parcelRequire("5YaSO");

var $iGmb0 = parcelRequire("iGmb0");

var $3PwGr = parcelRequire("3PwGr");

var $nKTlZ = parcelRequire("nKTlZ");

var $9cWcn = parcelRequire("9cWcn");
var $33612996f59630e5$exports = {};

$parcel$export($33612996f59630e5$exports, "lexer", () => $33612996f59630e5$export$43feed32102720d2, (v) => $33612996f59630e5$export$43feed32102720d2 = v);
$parcel$export($33612996f59630e5$exports, "Tokenizer", () => $33612996f59630e5$export$55e8b082af4aa63e, (v) => $33612996f59630e5$export$55e8b082af4aa63e = v);
$parcel$export($33612996f59630e5$exports, "Lexer", () => $33612996f59630e5$export$6168dc8908a6c652, (v) => $33612996f59630e5$export$6168dc8908a6c652 = v);
$parcel$export($33612996f59630e5$exports, "Renderer", () => $33612996f59630e5$export$88530751e3977073, (v) => $33612996f59630e5$export$88530751e3977073 = v);
$parcel$export($33612996f59630e5$exports, "TextRenderer", () => $33612996f59630e5$export$75ebcd2c8ed5b901, (v) => $33612996f59630e5$export$75ebcd2c8ed5b901 = v);
$parcel$export($33612996f59630e5$exports, "Slugger", () => $33612996f59630e5$export$a2039dba1f9639d, (v) => $33612996f59630e5$export$a2039dba1f9639d = v);
$parcel$export($33612996f59630e5$exports, "Parser", () => $33612996f59630e5$export$7acfa6ed01010e37, (v) => $33612996f59630e5$export$7acfa6ed01010e37 = v);
$parcel$export($33612996f59630e5$exports, "parse", () => $33612996f59630e5$export$98e6a39c04603d36, (v) => $33612996f59630e5$export$98e6a39c04603d36 = v);
$parcel$export($33612996f59630e5$exports, "parser", () => $33612996f59630e5$export$8f49e4af10703ce3, (v) => $33612996f59630e5$export$8f49e4af10703ce3 = v);
$parcel$export($33612996f59630e5$exports, "marked", () => $33612996f59630e5$export$db8f131360c543a5, (v) => $33612996f59630e5$export$db8f131360c543a5 = v);
/**
 * marked - a markdown parser
 * Copyright (c) 2011-2021, Christopher Jeffrey. (MIT Licensed)
 * https://github.com/markedjs/marked
 */ /**
 * DO NOT EDIT THIS FILE
 * The code in this file is generated from files in ./src/
 */ // ESM-uncomment-begin
let $33612996f59630e5$var$__marked_exports;
(function() {
    function define(factory) {
        $33612996f59630e5$var$__marked_exports = factory();
    }
    define.amd = true;
    // ESM-uncomment-end
    (function(global, factory) {
        $33612996f59630e5$exports = factory();
    })(this, function() {
        'use strict';
        function _defineProperties(target, props) {
            for(var i = 0; i < props.length; i++){
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
            }
        }
        function _createClass(Constructor, protoProps, staticProps) {
            if (protoProps) _defineProperties(Constructor.prototype, protoProps);
            if (staticProps) _defineProperties(Constructor, staticProps);
            return Constructor;
        }
        function _unsupportedIterableToArray(o, minLen) {
            if (!o) return;
            if (typeof o === "string") return _arrayLikeToArray(o, minLen);
            var n = Object.prototype.toString.call(o).slice(8, -1);
            if (n === "Object" && o.constructor) n = o.constructor.name;
            if (n === "Map" || n === "Set") return Array.from(o);
            if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
        }
        function _arrayLikeToArray(arr, len) {
            if (len == null || len > arr.length) len = arr.length;
            for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
            return arr2;
        }
        function _createForOfIteratorHelperLoose(o, allowArrayLike) {
            var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
            if (it) return (it = it.call(o)).next.bind(it);
            if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") {
                if (it) o = it;
                var i = 0;
                return function() {
                    if (i >= o.length) return {
                        done: true
                    };
                    return {
                        done: false,
                        value: o[i++]
                    };
                };
            }
            throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        var defaults$5 = {
            exports: {}
        };
        function getDefaults$1() {
            return {
                baseUrl: null,
                breaks: false,
                extensions: null,
                gfm: true,
                headerIds: true,
                headerPrefix: '',
                highlight: null,
                langPrefix: 'language-',
                mangle: true,
                pedantic: false,
                renderer: null,
                sanitize: false,
                sanitizer: null,
                silent: false,
                smartLists: false,
                smartypants: false,
                tokenizer: null,
                walkTokens: null,
                xhtml: false
            };
        }
        function changeDefaults$1(newDefaults) {
            defaults$5.exports.defaults = newDefaults;
        }
        defaults$5.exports = {
            defaults: getDefaults$1(),
            getDefaults: getDefaults$1,
            changeDefaults: changeDefaults$1
        };
        /**
   * Helpers
   */ var escapeTest = /[&<>"']/;
        var escapeReplace = /[&<>"']/g;
        var escapeTestNoEncode = /[<>"']|&(?!#?\w+;)/;
        var escapeReplaceNoEncode = /[<>"']|&(?!#?\w+;)/g;
        var escapeReplacements = {
            '&': '&amp;',
            '<': '&lt;',
            '>': '&gt;',
            '"': '&quot;',
            "'": '&#39;'
        };
        var getEscapeReplacement = function getEscapeReplacement(ch) {
            return escapeReplacements[ch];
        };
        function escape$2(html, encode) {
            if (encode) {
                if (escapeTest.test(html)) return html.replace(escapeReplace, getEscapeReplacement);
            } else {
                if (escapeTestNoEncode.test(html)) return html.replace(escapeReplaceNoEncode, getEscapeReplacement);
            }
            return html;
        }
        var unescapeTest = /&(#(?:\d+)|(?:#x[0-9A-Fa-f]+)|(?:\w+));?/ig;
        function unescape$1(html) {
            // explicitly match decimal, hex, and named HTML entities
            return html.replace(unescapeTest, function(_, n) {
                n = n.toLowerCase();
                if (n === 'colon') return ':';
                if (n.charAt(0) === '#') return n.charAt(1) === 'x' ? String.fromCharCode(parseInt(n.substring(2), 16)) : String.fromCharCode(+n.substring(1));
                return '';
            });
        }
        var caret = /(^|[^\[])\^/g;
        function edit$1(regex, opt) {
            regex = regex.source || regex;
            opt = opt || '';
            var obj = {
                replace: function replace(name, val) {
                    val = val.source || val;
                    val = val.replace(caret, '$1');
                    regex = regex.replace(name, val);
                    return obj;
                },
                getRegex: function getRegex() {
                    return new RegExp(regex, opt);
                }
            };
            return obj;
        }
        var nonWordAndColonTest = /[^\w:]/g;
        var originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;
        function cleanUrl$1(sanitize, base, href) {
            if (sanitize) {
                var prot;
                try {
                    prot = decodeURIComponent(unescape$1(href)).replace(nonWordAndColonTest, '').toLowerCase();
                } catch (e) {
                    return null;
                }
                if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) return null;
            }
            if (base && !originIndependentUrl.test(href)) href = resolveUrl(base, href);
            try {
                href = encodeURI(href).replace(/%25/g, '%');
            } catch (e) {
                return null;
            }
            return href;
        }
        var baseUrls = {};
        var justDomain = /^[^:]+:\/*[^/]*$/;
        var protocol = /^([^:]+:)[\s\S]*$/;
        var domain = /^([^:]+:\/*[^/]*)[\s\S]*$/;
        function resolveUrl(base, href) {
            if (!baseUrls[' ' + base]) {
                // we can ignore everything in base after the last slash of its path component,
                // but we might need to add _that_
                // https://tools.ietf.org/html/rfc3986#section-3
                if (justDomain.test(base)) baseUrls[' ' + base] = base + '/';
                else baseUrls[' ' + base] = rtrim$1(base, '/', true);
            }
            base = baseUrls[' ' + base];
            var relativeBase = base.indexOf(':') === -1;
            if (href.substring(0, 2) === '//') {
                if (relativeBase) return href;
                return base.replace(protocol, '$1') + href;
            } else if (href.charAt(0) === '/') {
                if (relativeBase) return href;
                return base.replace(domain, '$1') + href;
            } else return base + href;
        }
        var noopTest$1 = {
            exec: function noopTest() {}
        };
        function merge$2(obj) {
            var i = 1, target, key;
            for(; i < arguments.length; i++){
                target = arguments[i];
                for(key in target)if (Object.prototype.hasOwnProperty.call(target, key)) obj[key] = target[key];
            }
            return obj;
        }
        function splitCells$1(tableRow, count) {
            // ensure that every cell-delimiting pipe has a space
            // before it to distinguish it from an escaped pipe
            var row = tableRow.replace(/\|/g, function(match, offset, str) {
                var escaped = false, curr = offset;
                while(--curr >= 0 && str[curr] === '\\')escaped = !escaped;
                if (escaped) // odd number of slashes means | is escaped
                // so we leave it alone
                return '|';
                else // add space before unescaped |
                return ' |';
            }), cells = row.split(/ \|/);
            var i = 0; // First/last cell in a row cannot be empty if it has no leading/trailing pipe
            if (!cells[0].trim()) cells.shift();
            if (!cells[cells.length - 1].trim()) cells.pop();
            if (cells.length > count) cells.splice(count);
            else while(cells.length < count)cells.push('');
            for(; i < cells.length; i++)// leading or trailing whitespace is ignored per the gfm spec
            cells[i] = cells[i].trim().replace(/\\\|/g, '|');
            return cells;
        } // Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').
        // /c*$/ is vulnerable to REDOS.
        // invert: Remove suffix of non-c chars instead. Default falsey.
        function rtrim$1(str, c, invert) {
            var l = str.length;
            if (l === 0) return '';
             // Length of suffix matching the invert condition.
            var suffLen = 0; // Step left until we fail to match the invert condition.
            while(suffLen < l){
                var currChar = str.charAt(l - suffLen - 1);
                if (currChar === c && !invert) suffLen++;
                else if (currChar !== c && invert) suffLen++;
                else break;
            }
            return str.substr(0, l - suffLen);
        }
        function findClosingBracket$1(str, b) {
            if (str.indexOf(b[1]) === -1) return -1;
            var l = str.length;
            var level = 0, i = 0;
            for(; i < l; i++){
                if (str[i] === '\\') i++;
                else if (str[i] === b[0]) level++;
                else if (str[i] === b[1]) {
                    level--;
                    if (level < 0) return i;
                }
            }
            return -1;
        }
        function checkSanitizeDeprecation$1(opt) {
            if (opt && opt.sanitize && !opt.silent) console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');
        } // copied from https://stackoverflow.com/a/5450113/806777
        function repeatString$1(pattern, count) {
            if (count < 1) return '';
            var result = '';
            while(count > 1){
                if (count & 1) result += pattern;
                count >>= 1;
                pattern += pattern;
            }
            return result + pattern;
        }
        var helpers = {
            escape: escape$2,
            unescape: unescape$1,
            edit: edit$1,
            cleanUrl: cleanUrl$1,
            resolveUrl: resolveUrl,
            noopTest: noopTest$1,
            merge: merge$2,
            splitCells: splitCells$1,
            rtrim: rtrim$1,
            findClosingBracket: findClosingBracket$1,
            checkSanitizeDeprecation: checkSanitizeDeprecation$1,
            repeatString: repeatString$1
        };
        var defaults$4 = defaults$5.exports.defaults;
        var rtrim = helpers.rtrim, splitCells = helpers.splitCells, _escape = helpers.escape, findClosingBracket = helpers.findClosingBracket;
        function outputLink(cap, link, raw, $33612996f59630e5$export$43feed32102720d2) {
            var href = link.href;
            var title = link.title ? _escape(link.title) : null;
            var text = cap[1].replace(/\\([\[\]])/g, '$1');
            if (cap[0].charAt(0) !== '!') {
                $33612996f59630e5$export$43feed32102720d2.state.inLink = true;
                var token = {
                    type: 'link',
                    raw: raw,
                    href: href,
                    title: title,
                    text: text,
                    tokens: $33612996f59630e5$export$43feed32102720d2.inlineTokens(text, [])
                };
                $33612996f59630e5$export$43feed32102720d2.state.inLink = false;
                return token;
            } else return {
                type: 'image',
                raw: raw,
                href: href,
                title: title,
                text: _escape(text)
            };
        }
        function indentCodeCompensation(raw, text) {
            var matchIndentToCode = raw.match(/^(\s+)(?:```)/);
            if (matchIndentToCode === null) return text;
            var indentToCode = matchIndentToCode[1];
            return text.split('\n').map(function(node) {
                var matchIndentInNode = node.match(/^\s+/);
                if (matchIndentInNode === null) return node;
                var indentInNode = matchIndentInNode[0];
                if (indentInNode.length >= indentToCode.length) return node.slice(indentToCode.length);
                return node;
            }).join('\n');
        }
        /**
   * Tokenizer
   */ var Tokenizer_1 = /*#__PURE__*/ function() {
            function $33612996f59630e5$export$55e8b082af4aa63e(options) {
                this.options = options || defaults$4;
            }
            var _proto = $33612996f59630e5$export$55e8b082af4aa63e.prototype;
            _proto.space = function space(src) {
                var cap = this.rules.block.newline.exec(src);
                if (cap) {
                    if (cap[0].length > 1) return {
                        type: 'space',
                        raw: cap[0]
                    };
                    return {
                        raw: '\n'
                    };
                }
            };
            _proto.code = function code(src) {
                var cap = this.rules.block.code.exec(src);
                if (cap) {
                    var text = cap[0].replace(/^ {1,4}/gm, '');
                    return {
                        type: 'code',
                        raw: cap[0],
                        codeBlockStyle: 'indented',
                        text: !this.options.pedantic ? rtrim(text, '\n') : text
                    };
                }
            };
            _proto.fences = function fences(src) {
                var cap = this.rules.block.fences.exec(src);
                if (cap) {
                    var raw = cap[0];
                    var text = indentCodeCompensation(raw, cap[3] || '');
                    return {
                        type: 'code',
                        raw: raw,
                        lang: cap[2] ? cap[2].trim() : cap[2],
                        text: text
                    };
                }
            };
            _proto.heading = function heading(src) {
                var cap = this.rules.block.heading.exec(src);
                if (cap) {
                    var text = cap[2].trim(); // remove trailing #s
                    if (/#$/.test(text)) {
                        var trimmed = rtrim(text, '#');
                        if (this.options.pedantic) text = trimmed.trim();
                        else if (!trimmed || / $/.test(trimmed)) // CommonMark requires space before trailing #s
                        text = trimmed.trim();
                    }
                    var token = {
                        type: 'heading',
                        raw: cap[0],
                        depth: cap[1].length,
                        text: text,
                        tokens: []
                    };
                    this.lexer.inline(token.text, token.tokens);
                    return token;
                }
            };
            _proto.hr = function hr(src) {
                var cap = this.rules.block.hr.exec(src);
                if (cap) return {
                    type: 'hr',
                    raw: cap[0]
                };
            };
            _proto.blockquote = function blockquote(src) {
                var cap = this.rules.block.blockquote.exec(src);
                if (cap) {
                    var text = cap[0].replace(/^ *> ?/gm, '');
                    return {
                        type: 'blockquote',
                        raw: cap[0],
                        tokens: this.lexer.blockTokens(text, []),
                        text: text
                    };
                }
            };
            _proto.list = function list(src) {
                var cap = this.rules.block.list.exec(src);
                if (cap) {
                    var raw, istask, ischecked, indent, i, blankLine, endsWithBlankLine, line, lines, itemContents;
                    var bull = cap[1].trim();
                    var isordered = bull.length > 1;
                    var list = {
                        type: 'list',
                        raw: '',
                        ordered: isordered,
                        start: isordered ? +bull.slice(0, -1) : '',
                        loose: false,
                        items: []
                    };
                    bull = isordered ? "\\d{1,9}\\" + bull.slice(-1) : "\\" + bull;
                    if (this.options.pedantic) bull = isordered ? bull : '[*+-]';
                     // Get next list item
                    var itemRegex = new RegExp("^( {0,3}" + bull + ")((?: [^\\n]*| *)(?:\\n[^\\n]*)*(?:\\n|$))"); // Get each top-level item
                    while(src){
                        if (this.rules.block.hr.test(src)) break;
                        if (!(cap = itemRegex.exec(src))) break;
                        lines = cap[2].split('\n');
                        if (this.options.pedantic) {
                            indent = 2;
                            itemContents = lines[0].trimLeft();
                        } else {
                            indent = cap[2].search(/[^ ]/); // Find first non-space char
                            indent = cap[1].length + (indent > 4 ? 1 : indent); // intented code blocks after 4 spaces; indent is always 1
                            itemContents = lines[0].slice(indent - cap[1].length);
                        }
                        blankLine = false;
                        raw = cap[0];
                        if (!lines[0] && /^ *$/.test(lines[1])) {
                            // items begin with at most one blank line
                            raw = cap[1] + lines.slice(0, 2).join('\n') + '\n';
                            list.loose = true;
                            lines = [];
                        }
                        var nextBulletRegex = new RegExp("^ {0," + Math.min(3, indent - 1) + "}(?:[*+-]|\\d{1,9}[.)])");
                        for(i = 1; i < lines.length; i++){
                            line = lines[i];
                            if (this.options.pedantic) // Re-align to follow commonmark nesting rules
                            line = line.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');
                             // End list item if found start of new bullet
                            if (nextBulletRegex.test(line)) {
                                raw = cap[1] + lines.slice(0, i).join('\n') + '\n';
                                break;
                            } // Until we encounter a blank line, item contents do not need indentation
                            if (!blankLine) {
                                if (!line.trim()) // Check if current line is empty
                                blankLine = true;
                                 // Dedent if possible
                                if (line.search(/[^ ]/) >= indent) itemContents += '\n' + line.slice(indent);
                                else itemContents += '\n' + line;
                                continue;
                            } // Dedent this line
                            if (line.search(/[^ ]/) >= indent || !line.trim()) {
                                itemContents += '\n' + line.slice(indent);
                                continue;
                            } else {
                                // Line was not properly indented; end of this item
                                raw = cap[1] + lines.slice(0, i).join('\n') + '\n';
                                break;
                            }
                        }
                        if (!list.loose) {
                            // If the previous item ended with a blank line, the list is loose
                            if (endsWithBlankLine) list.loose = true;
                            else if (/\n *\n *$/.test(raw)) endsWithBlankLine = true;
                        } // Check for task list items
                        if (this.options.gfm) {
                            istask = /^\[[ xX]\] /.exec(itemContents);
                            if (istask) {
                                ischecked = istask[0] !== '[ ] ';
                                itemContents = itemContents.replace(/^\[[ xX]\] +/, '');
                            }
                        }
                        list.items.push({
                            type: 'list_item',
                            raw: raw,
                            task: !!istask,
                            checked: ischecked,
                            loose: false,
                            text: itemContents
                        });
                        list.raw += raw;
                        src = src.slice(raw.length);
                    } // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic
                    list.items[list.items.length - 1].raw = raw.trimRight();
                    list.items[list.items.length - 1].text = itemContents.trimRight();
                    list.raw = list.raw.trimRight();
                    var l = list.items.length; // Item child tokens handled here at end because we needed to have the final item to trim it first
                    for(i = 0; i < l; i++){
                        this.lexer.state.top = false;
                        list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);
                        if (list.items[i].tokens.some(function(t) {
                            return t.type === 'space';
                        })) {
                            list.loose = true;
                            list.items[i].loose = true;
                        }
                    }
                    return list;
                }
            };
            _proto.html = function html(src) {
                var cap = this.rules.block.html.exec(src);
                if (cap) {
                    var token = {
                        type: 'html',
                        raw: cap[0],
                        pre: !this.options.sanitizer && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),
                        text: cap[0]
                    };
                    if (this.options.sanitize) {
                        token.type = 'paragraph';
                        token.text = this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]);
                        token.tokens = [];
                        this.lexer.inline(token.text, token.tokens);
                    }
                    return token;
                }
            };
            _proto.def = function def(src) {
                var cap = this.rules.block.def.exec(src);
                if (cap) {
                    if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);
                    var tag = cap[1].toLowerCase().replace(/\s+/g, ' ');
                    return {
                        type: 'def',
                        tag: tag,
                        raw: cap[0],
                        href: cap[2],
                        title: cap[3]
                    };
                }
            };
            _proto.table = function table(src) {
                var cap = this.rules.block.table.exec(src);
                if (cap) {
                    var item = {
                        type: 'table',
                        header: splitCells(cap[1]).map(function(c) {
                            return {
                                text: c
                            };
                        }),
                        align: cap[2].replace(/^ *|\| *$/g, '').split(/ *\| */),
                        rows: cap[3] ? cap[3].replace(/\n$/, '').split('\n') : []
                    };
                    if (item.header.length === item.align.length) {
                        item.raw = cap[0];
                        var l = item.align.length;
                        var i, j, k, row;
                        for(i = 0; i < l; i++){
                            if (/^ *-+: *$/.test(item.align[i])) item.align[i] = 'right';
                            else if (/^ *:-+: *$/.test(item.align[i])) item.align[i] = 'center';
                            else if (/^ *:-+ *$/.test(item.align[i])) item.align[i] = 'left';
                            else item.align[i] = null;
                        }
                        l = item.rows.length;
                        for(i = 0; i < l; i++)item.rows[i] = splitCells(item.rows[i], item.header.length).map(function(c) {
                            return {
                                text: c
                            };
                        });
                         // parse child tokens inside headers and cells
                        // header child tokens
                        l = item.header.length;
                        for(j = 0; j < l; j++){
                            item.header[j].tokens = [];
                            this.lexer.inlineTokens(item.header[j].text, item.header[j].tokens);
                        } // cell child tokens
                        l = item.rows.length;
                        for(j = 0; j < l; j++){
                            row = item.rows[j];
                            for(k = 0; k < row.length; k++){
                                row[k].tokens = [];
                                this.lexer.inlineTokens(row[k].text, row[k].tokens);
                            }
                        }
                        return item;
                    }
                }
            };
            _proto.lheading = function lheading(src) {
                var cap = this.rules.block.lheading.exec(src);
                if (cap) {
                    var token = {
                        type: 'heading',
                        raw: cap[0],
                        depth: cap[2].charAt(0) === '=' ? 1 : 2,
                        text: cap[1],
                        tokens: []
                    };
                    this.lexer.inline(token.text, token.tokens);
                    return token;
                }
            };
            _proto.paragraph = function paragraph(src) {
                var cap = this.rules.block.paragraph.exec(src);
                if (cap) {
                    var token = {
                        type: 'paragraph',
                        raw: cap[0],
                        text: cap[1].charAt(cap[1].length - 1) === '\n' ? cap[1].slice(0, -1) : cap[1],
                        tokens: []
                    };
                    this.lexer.inline(token.text, token.tokens);
                    return token;
                }
            };
            _proto.text = function text(src) {
                var cap = this.rules.block.text.exec(src);
                if (cap) {
                    var token = {
                        type: 'text',
                        raw: cap[0],
                        text: cap[0],
                        tokens: []
                    };
                    this.lexer.inline(token.text, token.tokens);
                    return token;
                }
            };
            _proto.escape = function escape(src) {
                var cap = this.rules.inline.escape.exec(src);
                if (cap) return {
                    type: 'escape',
                    raw: cap[0],
                    text: _escape(cap[1])
                };
            };
            _proto.tag = function tag(src) {
                var cap = this.rules.inline.tag.exec(src);
                if (cap) {
                    if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) this.lexer.state.inLink = true;
                    else if (this.lexer.state.inLink && /^<\/a>/i.test(cap[0])) this.lexer.state.inLink = false;
                    if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\s|>)/i.test(cap[0])) this.lexer.state.inRawBlock = true;
                    else if (this.lexer.state.inRawBlock && /^<\/(pre|code|kbd|script)(\s|>)/i.test(cap[0])) this.lexer.state.inRawBlock = false;
                    return {
                        type: this.options.sanitize ? 'text' : 'html',
                        raw: cap[0],
                        inLink: this.lexer.state.inLink,
                        inRawBlock: this.lexer.state.inRawBlock,
                        text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0]
                    };
                }
            };
            _proto.link = function link(src) {
                var cap = this.rules.inline.link.exec(src);
                if (cap) {
                    var trimmedUrl = cap[2].trim();
                    if (!this.options.pedantic && /^</.test(trimmedUrl)) {
                        // commonmark requires matching angle brackets
                        if (!/>$/.test(trimmedUrl)) return;
                         // ending angle bracket cannot be escaped
                        var rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\');
                        if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) return;
                    } else {
                        // find closing parenthesis
                        var lastParenIndex = findClosingBracket(cap[2], '()');
                        if (lastParenIndex > -1) {
                            var start = cap[0].indexOf('!') === 0 ? 5 : 4;
                            var linkLen = start + cap[1].length + lastParenIndex;
                            cap[2] = cap[2].substring(0, lastParenIndex);
                            cap[0] = cap[0].substring(0, linkLen).trim();
                            cap[3] = '';
                        }
                    }
                    var href = cap[2];
                    var title = '';
                    if (this.options.pedantic) {
                        // split pedantic href and title
                        var link = /^([^'"]*[^\s])\s+(['"])(.*)\2/.exec(href);
                        if (link) {
                            href = link[1];
                            title = link[3];
                        }
                    } else title = cap[3] ? cap[3].slice(1, -1) : '';
                    href = href.trim();
                    if (/^</.test(href)) {
                        if (this.options.pedantic && !/>$/.test(trimmedUrl)) // pedantic allows starting angle bracket without ending angle bracket
                        href = href.slice(1);
                        else href = href.slice(1, -1);
                    }
                    return outputLink(cap, {
                        href: href ? href.replace(this.rules.inline._escapes, '$1') : href,
                        title: title ? title.replace(this.rules.inline._escapes, '$1') : title
                    }, cap[0], this.lexer);
                }
            };
            _proto.reflink = function reflink(src, links) {
                var cap;
                if ((cap = this.rules.inline.reflink.exec(src)) || (cap = this.rules.inline.nolink.exec(src))) {
                    var link = (cap[2] || cap[1]).replace(/\s+/g, ' ');
                    link = links[link.toLowerCase()];
                    if (!link || !link.href) {
                        var text = cap[0].charAt(0);
                        return {
                            type: 'text',
                            raw: text,
                            text: text
                        };
                    }
                    return outputLink(cap, link, cap[0], this.lexer);
                }
            };
            _proto.emStrong = function emStrong(src, maskedSrc, prevChar) {
                if (prevChar === void 0) prevChar = '';
                var match = this.rules.inline.emStrong.lDelim.exec(src);
                if (!match) return; // _ can't be between two alphanumerics. \p{L}\p{N} includes non-english alphabet/numbers as well
                if (match[3] && prevChar.match(/(?:[0-9A-Za-z\xAA\xB2\xB3\xB5\xB9\xBA\xBC-\xBE\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u05D0-\u05EA\u05EF-\u05F2\u0620-\u064A\u0660-\u0669\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07C0-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u08A0-\u08B4\u08B6-\u08C7\u0904-\u0939\u093D\u0950\u0958-\u0961\u0966-\u096F\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09E6-\u09F1\u09F4-\u09F9\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A66-\u0A6F\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AE6-\u0AEF\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B66-\u0B6F\u0B71-\u0B77\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0BE6-\u0BF2\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C66-\u0C6F\u0C78-\u0C7E\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CE6-\u0CEF\u0CF1\u0CF2\u0D04-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D58-\u0D61\u0D66-\u0D78\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DE6-\u0DEF\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E86-\u0E8A\u0E8C-\u0EA3\u0EA5\u0EA7-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F20-\u0F33\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F-\u1049\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u1090-\u1099\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1369-\u137C\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u17E0-\u17E9\u17F0-\u17F9\u1810-\u1819\u1820-\u1878\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19DA\u1A00-\u1A16\u1A20-\u1A54\u1A80-\u1A89\u1A90-\u1A99\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B50-\u1B59\u1B83-\u1BA0\u1BAE-\u1BE5\u1C00-\u1C23\u1C40-\u1C49\u1C4D-\u1C7D\u1C80-\u1C88\u1C90-\u1CBA\u1CBD-\u1CBF\u1CE9-\u1CEC\u1CEE-\u1CF3\u1CF5\u1CF6\u1CFA\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2070\u2071\u2074-\u2079\u207F-\u2089\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2150-\u2189\u2460-\u249B\u24EA-\u24FF\u2776-\u2793\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2CFD\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u3192-\u3195\u31A0-\u31BF\u31F0-\u31FF\u3220-\u3229\u3248-\u324F\u3251-\u325F\u3280-\u3289\u32B1-\u32BF\u3400-\u4DBF\u4E00-\u9FFC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7BF\uA7C2-\uA7CA\uA7F5-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA830-\uA835\uA840-\uA873\uA882-\uA8B3\uA8D0-\uA8D9\uA8F2-\uA8F7\uA8FB\uA8FD\uA8FE\uA900-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF-\uA9D9\uA9E0-\uA9E4\uA9E6-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA50-\uAA59\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB69\uAB70-\uABE2\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD07-\uDD33\uDD40-\uDD78\uDD8A\uDD8B\uDE80-\uDE9C\uDEA0-\uDED0\uDEE1-\uDEFB\uDF00-\uDF23\uDF2D-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC58-\uDC76\uDC79-\uDC9E\uDCA7-\uDCAF\uDCE0-\uDCF2\uDCF4\uDCF5\uDCFB-\uDD1B\uDD20-\uDD39\uDD80-\uDDB7\uDDBC-\uDDCF\uDDD2-\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE35\uDE40-\uDE48\uDE60-\uDE7E\uDE80-\uDE9F\uDEC0-\uDEC7\uDEC9-\uDEE4\uDEEB-\uDEEF\uDF00-\uDF35\uDF40-\uDF55\uDF58-\uDF72\uDF78-\uDF91\uDFA9-\uDFAF]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2\uDCFA-\uDD23\uDD30-\uDD39\uDE60-\uDE7E\uDE80-\uDEA9\uDEB0\uDEB1\uDF00-\uDF27\uDF30-\uDF45\uDF51-\uDF54\uDFB0-\uDFCB\uDFE0-\uDFF6]|\uD804[\uDC03-\uDC37\uDC52-\uDC6F\uDC83-\uDCAF\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD03-\uDD26\uDD36-\uDD3F\uDD44\uDD47\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDD0-\uDDDA\uDDDC\uDDE1-\uDDF4\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDEF0-\uDEF9\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC50-\uDC59\uDC5F-\uDC61\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE50-\uDE59\uDE80-\uDEAA\uDEB8\uDEC0-\uDEC9\uDF00-\uDF1A\uDF30-\uDF3B]|\uD806[\uDC00-\uDC2B\uDCA0-\uDCF2\uDCFF-\uDD06\uDD09\uDD0C-\uDD13\uDD15\uDD16\uDD18-\uDD2F\uDD3F\uDD41\uDD50-\uDD59\uDDA0-\uDDA7\uDDAA-\uDDD0\uDDE1\uDDE3\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE89\uDE9D\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC50-\uDC6C\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46\uDD50-\uDD59\uDD60-\uDD65\uDD67\uDD68\uDD6A-\uDD89\uDD98\uDDA0-\uDDA9\uDEE0-\uDEF2\uDFB0\uDFC0-\uDFD4]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD822\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879\uD880-\uD883][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF50-\uDF59\uDF5B-\uDF61\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDE40-\uDE96\uDF00-\uDF4A\uDF50\uDF93-\uDF9F\uDFE0\uDFE1\uDFE3]|\uD821[\uDC00-\uDFF7]|\uD823[\uDC00-\uDCD5\uDD00-\uDD08]|\uD82C[\uDC00-\uDD1E\uDD50-\uDD52\uDD64-\uDD67\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD834[\uDEE0-\uDEF3\uDF60-\uDF78]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD838[\uDD00-\uDD2C\uDD37-\uDD3D\uDD40-\uDD49\uDD4E\uDEC0-\uDEEB\uDEF0-\uDEF9]|\uD83A[\uDC00-\uDCC4\uDCC7-\uDCCF\uDD00-\uDD43\uDD4B\uDD50-\uDD59]|\uD83B[\uDC71-\uDCAB\uDCAD-\uDCAF\uDCB1-\uDCB4\uDD01-\uDD2D\uDD2F-\uDD3D\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD83C[\uDD00-\uDD0C]|\uD83E[\uDFF0-\uDFF9]|\uD869[\uDC00-\uDEDD\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D]|\uD884[\uDC00-\uDF4A])/)) return;
                var nextChar = match[1] || match[2] || '';
                if (!nextChar || nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar))) {
                    var lLength = match[0].length - 1;
                    var rDelim, rLength, delimTotal = lLength, midDelimTotal = 0;
                    var endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;
                    endReg.lastIndex = 0; // Clip maskedSrc to same section of string as src (move to lexer?)
                    maskedSrc = maskedSrc.slice(-1 * src.length + lLength);
                    while((match = endReg.exec(maskedSrc)) != null){
                        rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];
                        if (!rDelim) continue; // skip single * in __abc*abc__
                        rLength = rDelim.length;
                        if (match[3] || match[4]) {
                            // found another Left Delim
                            delimTotal += rLength;
                            continue;
                        } else if (match[5] || match[6]) // either Left or Right Delim
                        {
                            if (lLength % 3 && !((lLength + rLength) % 3)) {
                                midDelimTotal += rLength;
                                continue; // CommonMark Emphasis Rules 9-10
                            }
                        }
                        delimTotal -= rLength;
                        if (delimTotal > 0) continue; // Haven't found enough closing delimiters
                        // Remove extra characters. *a*** -> *a*
                        rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal); // Create `em` if smallest delimiter has odd char count. *a***
                        if (Math.min(lLength, rLength) % 2) {
                            var _text = src.slice(1, lLength + match.index + rLength);
                            return {
                                type: 'em',
                                raw: src.slice(0, lLength + match.index + rLength + 1),
                                text: _text,
                                tokens: this.lexer.inlineTokens(_text, [])
                            };
                        } // Create 'strong' if smallest delimiter has even char count. **a***
                        var text = src.slice(2, lLength + match.index + rLength - 1);
                        return {
                            type: 'strong',
                            raw: src.slice(0, lLength + match.index + rLength + 1),
                            text: text,
                            tokens: this.lexer.inlineTokens(text, [])
                        };
                    }
                }
            };
            _proto.codespan = function codespan(src) {
                var cap = this.rules.inline.code.exec(src);
                if (cap) {
                    var text = cap[2].replace(/\n/g, ' ');
                    var hasNonSpaceChars = /[^ ]/.test(text);
                    var hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);
                    if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) text = text.substring(1, text.length - 1);
                    text = _escape(text, true);
                    return {
                        type: 'codespan',
                        raw: cap[0],
                        text: text
                    };
                }
            };
            _proto.br = function br(src) {
                var cap = this.rules.inline.br.exec(src);
                if (cap) return {
                    type: 'br',
                    raw: cap[0]
                };
            };
            _proto.del = function del(src) {
                var cap = this.rules.inline.del.exec(src);
                if (cap) return {
                    type: 'del',
                    raw: cap[0],
                    text: cap[2],
                    tokens: this.lexer.inlineTokens(cap[2], [])
                };
            };
            _proto.autolink = function autolink(src, mangle) {
                var cap = this.rules.inline.autolink.exec(src);
                if (cap) {
                    var text, href;
                    if (cap[2] === '@') {
                        text = _escape(this.options.mangle ? mangle(cap[1]) : cap[1]);
                        href = 'mailto:' + text;
                    } else {
                        text = _escape(cap[1]);
                        href = text;
                    }
                    return {
                        type: 'link',
                        raw: cap[0],
                        text: text,
                        href: href,
                        tokens: [
                            {
                                type: 'text',
                                raw: text,
                                text: text
                            }
                        ]
                    };
                }
            };
            _proto.url = function url(src, mangle) {
                var cap;
                if (cap = this.rules.inline.url.exec(src)) {
                    var text, href;
                    if (cap[2] === '@') {
                        text = _escape(this.options.mangle ? mangle(cap[0]) : cap[0]);
                        href = 'mailto:' + text;
                    } else {
                        // do extended autolink path validation
                        var prevCapZero;
                        do {
                            prevCapZero = cap[0];
                            cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];
                        }while (prevCapZero !== cap[0])
                        text = _escape(cap[0]);
                        if (cap[1] === 'www.') href = 'http://' + text;
                        else href = text;
                    }
                    return {
                        type: 'link',
                        raw: cap[0],
                        text: text,
                        href: href,
                        tokens: [
                            {
                                type: 'text',
                                raw: text,
                                text: text
                            }
                        ]
                    };
                }
            };
            _proto.inlineText = function inlineText(src, smartypants) {
                var cap = this.rules.inline.text.exec(src);
                if (cap) {
                    var text;
                    if (this.lexer.state.inRawBlock) text = this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0];
                    else text = _escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);
                    return {
                        type: 'text',
                        raw: cap[0],
                        text: text
                    };
                }
            };
            return $33612996f59630e5$export$55e8b082af4aa63e;
        }();
        var noopTest = helpers.noopTest, edit = helpers.edit, merge$1 = helpers.merge;
        /**
   * Block-Level Grammar
   */ var block$1 = {
            newline: /^(?: *(?:\n|$))+/,
            code: /^( {4}[^\n]+(?:\n(?: *(?:\n|$))*)?)+/,
            fences: /^ {0,3}(`{3,}(?=[^`\n]*\n)|~{3,})([^\n]*)\n(?:|([\s\S]*?)\n)(?: {0,3}\1[~`]* *(?=\n|$)|$)/,
            hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\* *){3,})(?:\n+|$)/,
            heading: /^ {0,3}(#{1,6})(?=\s|$)(.*)(?:\n+|$)/,
            blockquote: /^( {0,3}> ?(paragraph|[^\n]*)(?:\n|$))+/,
            list: /^( {0,3}bull)( [^\n]+?)?(?:\n|$)/,
            html: "^ {0,3}(?:<(script|pre|style|textarea)[\\s>][\\s\\S]*?(?:</\\1>[^\\n]*\\n+|$)|comment[^\\n]*(\\n+|$)|<\\?[\\s\\S]*?(?:\\?>\\n*|$)|<![A-Z][\\s\\S]*?(?:>\\n*|$)|<!\\[CDATA\\[[\\s\\S]*?(?:\\]\\]>\\n*|$)|</?(tag)(?: +|\\n|/?>)[\\s\\S]*?(?:(?:\\n *)+\\n|$)|<(?!script|pre|style|textarea)([a-z][\\w-]*)(?:attribute)*? */?>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:(?:\\n *)+\\n|$)|</(?!script|pre|style|textarea)[a-z][\\w-]*\\s*>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:(?:\\n *)+\\n|$))",
            def: /^ {0,3}\[(label)\]: *\n? *<?([^\s>]+)>?(?:(?: +\n? *| *\n *)(title))? *(?:\n+|$)/,
            table: noopTest,
            lheading: /^([^\n]+)\n {0,3}(=+|-+) *(?:\n+|$)/,
            // regex template, placeholders will be replaced according to different paragraph
            // interruption rules of commonmark and the original markdown spec:
            _paragraph: /^([^\n]+(?:\n(?!hr|heading|lheading|blockquote|fences|list|html| +\n)[^\n]+)*)/,
            text: /^[^\n]+/
        };
        block$1._label = /(?!\s*\])(?:\\[\[\]]|[^\[\]])+/;
        block$1._title = /(?:"(?:\\"?|[^"\\])*"|'[^'\n]*(?:\n[^'\n]+)*\n?'|\([^()]*\))/;
        block$1.def = edit(block$1.def).replace('label', block$1._label).replace('title', block$1._title).getRegex();
        block$1.bullet = /(?:[*+-]|\d{1,9}[.)])/;
        block$1.listItemStart = edit(/^( *)(bull) */).replace('bull', block$1.bullet).getRegex();
        block$1.list = edit(block$1.list).replace(/bull/g, block$1.bullet).replace('hr', '\\n+(?=\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$))').replace('def', '\\n+(?=' + block$1.def.source + ')').getRegex();
        block$1._tag = "address|article|aside|base|basefont|blockquote|body|caption|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr|track|ul";
        block$1._comment = /<!--(?!-?>)[\s\S]*?(?:-->|$)/;
        block$1.html = edit(block$1.html, 'i').replace('comment', block$1._comment).replace('tag', block$1._tag).replace('attribute', / +[a-zA-Z:_][\w.:-]*(?: *= *"[^"\n]*"| *= *'[^'\n]*'| *= *[^\s"'=<>`]+)?/).getRegex();
        block$1.paragraph = edit(block$1._paragraph).replace('hr', block$1.hr).replace('heading', ' {0,3}#{1,6} ').replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs
        .replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt
        .replace('html', '</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block$1._tag) // pars can be interrupted by type (6) html blocks
        .getRegex();
        block$1.blockquote = edit(block$1.blockquote).replace('paragraph', block$1.paragraph).getRegex();
        /**
   * Normal Block Grammar
   */ block$1.normal = merge$1({}, block$1);
        /**
   * GFM Block Grammar
   */ block$1.gfm = merge$1({}, block$1.normal, {
            table: "^ *([^\\n ].*\\|.*)\\n {0,3}(?:\\| *)?(:?-+:? *(?:\\| *:?-+:? *)*)\\|?(?:\\n((?:(?! *\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\n|$))*)\\n*|$)" // Cells
        });
        block$1.gfm.table = edit(block$1.gfm.table).replace('hr', block$1.hr).replace('heading', ' {0,3}#{1,6} ').replace('blockquote', ' {0,3}>').replace('code', ' {4}[^\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt
        .replace('html', '</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block$1._tag) // tables can be interrupted by type (6) html blocks
        .getRegex();
        /**
   * Pedantic grammar (original John Gruber's loose markdown specification)
   */ block$1.pedantic = merge$1({}, block$1.normal, {
            html: edit("^ *(?:comment *(?:\\n|\\s*$)|<(tag)[\\s\\S]+?</\\1> *(?:\\n{2,}|\\s*$)|<tag(?:\"[^\"]*\"|'[^']*'|\\s[^'\"/>\\s]*)*?/?> *(?:\\n{2,}|\\s*$))").replace('comment', block$1._comment).replace(/tag/g, "(?!(?:a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)\\b)\\w+(?!:|[^\\w\\s@]*@)\\b").getRegex(),
            def: /^ *\[([^\]]+)\]: *<?([^\s>]+)>?(?: +(["(][^\n]+[")]))? *(?:\n+|$)/,
            heading: /^(#{1,6})(.*)(?:\n+|$)/,
            fences: noopTest,
            // fences not supported
            paragraph: edit(block$1.normal._paragraph).replace('hr', block$1.hr).replace('heading', ' *#{1,6} *[^\n]').replace('lheading', block$1.lheading).replace('blockquote', ' {0,3}>').replace('|fences', '').replace('|list', '').replace('|html', '').getRegex()
        });
        /**
   * Inline-Level Grammar
   */ var inline$1 = {
            escape: /^\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/,
            autolink: /^<(scheme:[^\s\x00-\x1f<>]*|email)>/,
            url: noopTest,
            tag: "^comment|^</[a-zA-Z][\\w:-]*\\s*>|^<[a-zA-Z][\\w-]*(?:attribute)*?\\s*/?>|^<\\?[\\s\\S]*?\\?>|^<![a-zA-Z]+\\s[\\s\\S]*?>|^<!\\[CDATA\\[[\\s\\S]*?\\]\\]>",
            // CDATA section
            link: /^!?\[(label)\]\(\s*(href)(?:\s+(title))?\s*\)/,
            reflink: /^!?\[(label)\]\[(?!\s*\])((?:\\[\[\]]?|[^\[\]\\])+)\]/,
            nolink: /^!?\[(?!\s*\])((?:\[[^\[\]]*\]|\\[\[\]]|[^\[\]])*)\](?:\[\])?/,
            reflinkSearch: 'reflink|nolink(?!\\()',
            emStrong: {
                lDelim: /^(?:\*+(?:([punct_])|[^\s*]))|^_+(?:([punct*])|([^\s_]))/,
                //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.
                //        () Skip other delimiter (1) #***                   (2) a***#, a***                   (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a
                rDelimAst: /\_\_[^_*]*?\*[^_*]*?\_\_|[punct_](\*+)(?=[\s]|$)|[^punct*_\s](\*+)(?=[punct_\s]|$)|[punct_\s](\*+)(?=[^punct*_\s])|[\s](\*+)(?=[punct_])|[punct_](\*+)(?=[punct_])|[^punct*_\s](\*+)(?=[^punct*_\s])/,
                rDelimUnd: /\*\*[^_*]*?\_[^_*]*?\*\*|[punct*](\_+)(?=[\s]|$)|[^punct*_\s](\_+)(?=[punct*\s]|$)|[punct*\s](\_+)(?=[^punct*_\s])|[\s](\_+)(?=[punct*])|[punct*](\_+)(?=[punct*])/ // ^- Not allowed for _
            },
            code: /^(`+)([^`]|[^`][\s\S]*?[^`])\1(?!`)/,
            br: /^( {2,}|\\)\n(?!\s*$)/,
            del: noopTest,
            text: /^(`+|[^`])(?:(?= {2,}\n)|[\s\S]*?(?:(?=[\\<!\[`*_]|\b_|$)|[^ ](?= {2,}\n)))/,
            punctuation: /^([\spunctuation])/
        }; // list of punctuation marks from CommonMark spec
        // without * and _ to handle the different emphasis markers * and _
        inline$1._punctuation = '!"#$%&\'()+\\-.,/:;<=>?@\\[\\]`^{|}~';
        inline$1.punctuation = edit(inline$1.punctuation).replace(/punctuation/g, inline$1._punctuation).getRegex(); // sequences em should skip over [title](link), `code`, <html>
        inline$1.blockSkip = /\[[^\]]*?\]\([^\)]*?\)|`[^`]*?`|<[^>]*?>/g;
        inline$1.escapedEmSt = /\\\*|\\_/g;
        inline$1._comment = edit(block$1._comment).replace('(?:-->|$)', '-->').getRegex();
        inline$1.emStrong.lDelim = edit(inline$1.emStrong.lDelim).replace(/punct/g, inline$1._punctuation).getRegex();
        inline$1.emStrong.rDelimAst = edit(inline$1.emStrong.rDelimAst, 'g').replace(/punct/g, inline$1._punctuation).getRegex();
        inline$1.emStrong.rDelimUnd = edit(inline$1.emStrong.rDelimUnd, 'g').replace(/punct/g, inline$1._punctuation).getRegex();
        inline$1._escapes = /\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/g;
        inline$1._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;
        inline$1._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;
        inline$1.autolink = edit(inline$1.autolink).replace('scheme', inline$1._scheme).replace('email', inline$1._email).getRegex();
        inline$1._attribute = /\s+[a-zA-Z:_][\w.:-]*(?:\s*=\s*"[^"]*"|\s*=\s*'[^']*'|\s*=\s*[^\s"'=<>`]+)?/;
        inline$1.tag = edit(inline$1.tag).replace('comment', inline$1._comment).replace('attribute', inline$1._attribute).getRegex();
        inline$1._label = /(?:\[(?:\\.|[^\[\]\\])*\]|\\.|`[^`]*`|[^\[\]\\`])*?/;
        inline$1._href = /<(?:\\.|[^\n<>\\])+>|[^\s\x00-\x1f]*/;
        inline$1._title = /"(?:\\"?|[^"\\])*"|'(?:\\'?|[^'\\])*'|\((?:\\\)?|[^)\\])*\)/;
        inline$1.link = edit(inline$1.link).replace('label', inline$1._label).replace('href', inline$1._href).replace('title', inline$1._title).getRegex();
        inline$1.reflink = edit(inline$1.reflink).replace('label', inline$1._label).getRegex();
        inline$1.reflinkSearch = edit(inline$1.reflinkSearch, 'g').replace('reflink', inline$1.reflink).replace('nolink', inline$1.nolink).getRegex();
        /**
   * Normal Inline Grammar
   */ inline$1.normal = merge$1({}, inline$1);
        /**
   * Pedantic Inline Grammar
   */ inline$1.pedantic = merge$1({}, inline$1.normal, {
            strong: {
                start: /^__|\*\*/,
                middle: /^__(?=\S)([\s\S]*?\S)__(?!_)|^\*\*(?=\S)([\s\S]*?\S)\*\*(?!\*)/,
                endAst: /\*\*(?!\*)/g,
                endUnd: /__(?!_)/g
            },
            em: {
                start: /^_|\*/,
                middle: /^()\*(?=\S)([\s\S]*?\S)\*(?!\*)|^_(?=\S)([\s\S]*?\S)_(?!_)/,
                endAst: /\*(?!\*)/g,
                endUnd: /_(?!_)/g
            },
            link: edit(/^!?\[(label)\]\((.*?)\)/).replace('label', inline$1._label).getRegex(),
            reflink: edit(/^!?\[(label)\]\s*\[([^\]]*)\]/).replace('label', inline$1._label).getRegex()
        });
        /**
   * GFM Inline Grammar
   */ inline$1.gfm = merge$1({}, inline$1.normal, {
            escape: edit(inline$1.escape).replace('])', '~|])').getRegex(),
            _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,
            url: /^((?:ftp|https?):\/\/|www\.)(?:[a-zA-Z0-9\-]+\.?)+[^\s<]*|^email/,
            _backpedal: /(?:[^?!.,:;*_~()&]+|\([^)]*\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,
            del: /^(~~?)(?=[^\s~])([\s\S]*?[^\s~])\1(?=[^~]|$)/,
            text: /^([`~]+|[^`~])(?:(?= {2,}\n)|(?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@)|[\s\S]*?(?:(?=[\\<!\[`*~_]|\b_|https?:\/\/|ftp:\/\/|www\.|$)|[^ ](?= {2,}\n)|[^a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-](?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@)))/
        });
        inline$1.gfm.url = edit(inline$1.gfm.url, 'i').replace('email', inline$1.gfm._extended_email).getRegex();
        /**
   * GFM + Line Breaks Inline Grammar
   */ inline$1.breaks = merge$1({}, inline$1.gfm, {
            br: edit(inline$1.br).replace('{2,}', '*').getRegex(),
            text: edit(inline$1.gfm.text).replace('\\b_', '\\b_| {2,}\\n').replace(/\{2,\}/g, '*').getRegex()
        });
        var rules1 = {
            block: block$1,
            inline: inline$1
        };
        var Tokenizer$1 = Tokenizer_1;
        var defaults$3 = defaults$5.exports.defaults;
        var block = rules1.block, inline = rules1.inline;
        var repeatString = helpers.repeatString;
        /**
   * smartypants text replacement
   */ function smartypants1(text) {
            return text // em-dashes
            .replace(/---/g, "\u2014") // en-dashes
            .replace(/--/g, "\u2013") // opening singles
            .replace(/(^|[-\u2014/(\[{"\s])'/g, "$1\u2018") // closing singles & apostrophes
            .replace(/'/g, "\u2019") // opening doubles
            .replace(/(^|[-\u2014/(\[{\u2018\s])"/g, "$1\u201C") // closing doubles
            .replace(/"/g, "\u201D") // ellipses
            .replace(/\.{3}/g, "\u2026");
        }
        /**
   * mangle email addresses
   */ function mangle1(text) {
            var out = '', i, ch;
            var l = text.length;
            for(i = 0; i < l; i++){
                ch = text.charCodeAt(i);
                if (Math.random() > 0.5) ch = 'x' + ch.toString(16);
                out += '&#' + ch + ';';
            }
            return out;
        }
        /**
   * Block Lexer
   */ var Lexer_1 = /*#__PURE__*/ function() {
            function $33612996f59630e5$export$6168dc8908a6c652(options) {
                this.tokens = [];
                this.tokens.links = Object.create(null);
                this.options = options || defaults$3;
                this.options.tokenizer = this.options.tokenizer || new Tokenizer$1();
                this.tokenizer = this.options.tokenizer;
                this.tokenizer.options = this.options;
                this.tokenizer.lexer = this;
                this.inlineQueue = [];
                this.state = {
                    inLink: false,
                    inRawBlock: false,
                    top: true
                };
                var rules = {
                    block: block.normal,
                    inline: inline.normal
                };
                if (this.options.pedantic) {
                    rules.block = block.pedantic;
                    rules.inline = inline.pedantic;
                } else if (this.options.gfm) {
                    rules.block = block.gfm;
                    if (this.options.breaks) rules.inline = inline.breaks;
                    else rules.inline = inline.gfm;
                }
                this.tokenizer.rules = rules;
            }
            /**
     * Expose Rules
     */ /**
     * Static Lex Method
     */ $33612996f59630e5$export$6168dc8908a6c652.lex = function lex(src, options) {
                var $33612996f59630e5$export$43feed32102720d2 = new $33612996f59630e5$export$6168dc8908a6c652(options);
                return $33612996f59630e5$export$43feed32102720d2.lex(src);
            } /**
     * Static Lex Inline Method
     */ ;
            $33612996f59630e5$export$6168dc8908a6c652.lexInline = function lexInline(src, options) {
                var $33612996f59630e5$export$43feed32102720d2 = new $33612996f59630e5$export$6168dc8908a6c652(options);
                return $33612996f59630e5$export$43feed32102720d2.inlineTokens(src);
            } /**
     * Preprocessing
     */ ;
            var _proto = $33612996f59630e5$export$6168dc8908a6c652.prototype;
            _proto.lex = function lex(src) {
                src = src.replace(/\r\n|\r/g, '\n').replace(/\t/g, '    ');
                this.blockTokens(src, this.tokens);
                var next;
                while(next = this.inlineQueue.shift())this.inlineTokens(next.src, next.tokens);
                return this.tokens;
            } /**
     * Lexing
     */ ;
            _proto.blockTokens = function blockTokens(src, tokens) {
                var _this = this;
                if (tokens === void 0) tokens = [];
                if (this.options.pedantic) src = src.replace(/^ +$/gm, '');
                var token, lastToken, cutSrc, lastParagraphClipped;
                while(src){
                    if (this.options.extensions && this.options.extensions.block && this.options.extensions.block.some(function(extTokenizer) {
                        if (token = extTokenizer.call({
                            lexer: _this
                        }, src, tokens)) {
                            src = src.substring(token.raw.length);
                            tokens.push(token);
                            return true;
                        }
                        return false;
                    })) continue;
                     // newline
                    if (token = this.tokenizer.space(src)) {
                        src = src.substring(token.raw.length);
                        if (token.type) tokens.push(token);
                        continue;
                    } // code
                    if (token = this.tokenizer.code(src)) {
                        src = src.substring(token.raw.length);
                        lastToken = tokens[tokens.length - 1]; // An indented code block cannot interrupt a paragraph.
                        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {
                            lastToken.raw += '\n' + token.raw;
                            lastToken.text += '\n' + token.text;
                            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;
                        } else tokens.push(token);
                        continue;
                    } // fences
                    if (token = this.tokenizer.fences(src)) {
                        src = src.substring(token.raw.length);
                        tokens.push(token);
                        continue;
                    } // heading
                    if (token = this.tokenizer.heading(src)) {
                        src = src.substring(token.raw.length);
                        tokens.push(token);
                        continue;
                    } // hr
                    if (token = this.tokenizer.hr(src)) {
                        src = src.substring(token.raw.length);
                        tokens.push(token);
                        continue;
                    } // blockquote
                    if (token = this.tokenizer.blockquote(src)) {
                        src = src.substring(token.raw.length);
                        tokens.push(token);
                        continue;
                    } // list
                    if (token = this.tokenizer.list(src)) {
                        src = src.substring(token.raw.length);
                        tokens.push(token);
                        continue;
                    } // html
                    if (token = this.tokenizer.html(src)) {
                        src = src.substring(token.raw.length);
                        tokens.push(token);
                        continue;
                    } // def
                    if (token = this.tokenizer.def(src)) {
                        src = src.substring(token.raw.length);
                        lastToken = tokens[tokens.length - 1];
                        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {
                            lastToken.raw += '\n' + token.raw;
                            lastToken.text += '\n' + token.raw;
                            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;
                        } else if (!this.tokens.links[token.tag]) this.tokens.links[token.tag] = {
                            href: token.href,
                            title: token.title
                        };
                        continue;
                    } // table (gfm)
                    if (token = this.tokenizer.table(src)) {
                        src = src.substring(token.raw.length);
                        tokens.push(token);
                        continue;
                    } // lheading
                    if (token = this.tokenizer.lheading(src)) {
                        src = src.substring(token.raw.length);
                        tokens.push(token);
                        continue;
                    } // top-level paragraph
                    // prevent paragraph consuming extensions by clipping 'src' to extension start
                    cutSrc = src;
                    if (this.options.extensions && this.options.extensions.startBlock) (function() {
                        var startIndex = Infinity;
                        var tempSrc = src.slice(1);
                        var tempStart = void 0;
                        _this.options.extensions.startBlock.forEach(function(getStartIndex) {
                            tempStart = getStartIndex.call({
                                lexer: this
                            }, tempSrc);
                            if (typeof tempStart === 'number' && tempStart >= 0) startIndex = Math.min(startIndex, tempStart);
                        });
                        if (startIndex < Infinity && startIndex >= 0) cutSrc = src.substring(0, startIndex + 1);
                    })();
                    if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {
                        lastToken = tokens[tokens.length - 1];
                        if (lastParagraphClipped && lastToken.type === 'paragraph') {
                            lastToken.raw += '\n' + token.raw;
                            lastToken.text += '\n' + token.text;
                            this.inlineQueue.pop();
                            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;
                        } else tokens.push(token);
                        lastParagraphClipped = cutSrc.length !== src.length;
                        src = src.substring(token.raw.length);
                        continue;
                    } // text
                    if (token = this.tokenizer.text(src)) {
                        src = src.substring(token.raw.length);
                        lastToken = tokens[tokens.length - 1];
                        if (lastToken && lastToken.type === 'text') {
                            lastToken.raw += '\n' + token.raw;
                            lastToken.text += '\n' + token.text;
                            this.inlineQueue.pop();
                            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;
                        } else tokens.push(token);
                        continue;
                    }
                    if (src) {
                        var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);
                        if (this.options.silent) {
                            console.error(errMsg);
                            break;
                        } else throw new Error(errMsg);
                    }
                }
                this.state.top = true;
                return tokens;
            };
            _proto.inline = function inline(src, tokens) {
                this.inlineQueue.push({
                    src: src,
                    tokens: tokens
                });
            } /**
     * Lexing/Compiling
     */ ;
            _proto.inlineTokens = function inlineTokens(src, tokens) {
                var _this2 = this;
                if (tokens === void 0) tokens = [];
                var token, lastToken, cutSrc; // String with links masked to avoid interference with em and strong
                var maskedSrc = src;
                var match;
                var keepPrevChar, prevChar; // Mask out reflinks
                if (this.tokens.links) {
                    var links = Object.keys(this.tokens.links);
                    if (links.length > 0) {
                        while((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null)if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);
                    }
                } // Mask out other blocks
                while((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null)maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);
                 // Mask out escaped em & strong delimiters
                while((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null)maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);
                while(src){
                    if (!keepPrevChar) prevChar = '';
                    keepPrevChar = false; // extensions
                    if (this.options.extensions && this.options.extensions.inline && this.options.extensions.inline.some(function(extTokenizer) {
                        if (token = extTokenizer.call({
                            lexer: _this2
                        }, src, tokens)) {
                            src = src.substring(token.raw.length);
                            tokens.push(token);
                            return true;
                        }
                        return false;
                    })) continue;
                     // escape
                    if (token = this.tokenizer.escape(src)) {
                        src = src.substring(token.raw.length);
                        tokens.push(token);
                        continue;
                    } // tag
                    if (token = this.tokenizer.tag(src)) {
                        src = src.substring(token.raw.length);
                        lastToken = tokens[tokens.length - 1];
                        if (lastToken && token.type === 'text' && lastToken.type === 'text') {
                            lastToken.raw += token.raw;
                            lastToken.text += token.text;
                        } else tokens.push(token);
                        continue;
                    } // link
                    if (token = this.tokenizer.link(src)) {
                        src = src.substring(token.raw.length);
                        tokens.push(token);
                        continue;
                    } // reflink, nolink
                    if (token = this.tokenizer.reflink(src, this.tokens.links)) {
                        src = src.substring(token.raw.length);
                        lastToken = tokens[tokens.length - 1];
                        if (lastToken && token.type === 'text' && lastToken.type === 'text') {
                            lastToken.raw += token.raw;
                            lastToken.text += token.text;
                        } else tokens.push(token);
                        continue;
                    } // em & strong
                    if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {
                        src = src.substring(token.raw.length);
                        tokens.push(token);
                        continue;
                    } // code
                    if (token = this.tokenizer.codespan(src)) {
                        src = src.substring(token.raw.length);
                        tokens.push(token);
                        continue;
                    } // br
                    if (token = this.tokenizer.br(src)) {
                        src = src.substring(token.raw.length);
                        tokens.push(token);
                        continue;
                    } // del (gfm)
                    if (token = this.tokenizer.del(src)) {
                        src = src.substring(token.raw.length);
                        tokens.push(token);
                        continue;
                    } // autolink
                    if (token = this.tokenizer.autolink(src, mangle1)) {
                        src = src.substring(token.raw.length);
                        tokens.push(token);
                        continue;
                    } // url (gfm)
                    if (!this.state.inLink && (token = this.tokenizer.url(src, mangle1))) {
                        src = src.substring(token.raw.length);
                        tokens.push(token);
                        continue;
                    } // text
                    // prevent inlineText consuming extensions by clipping 'src' to extension start
                    cutSrc = src;
                    if (this.options.extensions && this.options.extensions.startInline) (function() {
                        var startIndex = Infinity;
                        var tempSrc = src.slice(1);
                        var tempStart = void 0;
                        _this2.options.extensions.startInline.forEach(function(getStartIndex) {
                            tempStart = getStartIndex.call({
                                lexer: this
                            }, tempSrc);
                            if (typeof tempStart === 'number' && tempStart >= 0) startIndex = Math.min(startIndex, tempStart);
                        });
                        if (startIndex < Infinity && startIndex >= 0) cutSrc = src.substring(0, startIndex + 1);
                    })();
                    if (token = this.tokenizer.inlineText(cutSrc, smartypants1)) {
                        src = src.substring(token.raw.length);
                        if (token.raw.slice(-1) !== '_') // Track prevChar before string of ____ started
                        prevChar = token.raw.slice(-1);
                        keepPrevChar = true;
                        lastToken = tokens[tokens.length - 1];
                        if (lastToken && lastToken.type === 'text') {
                            lastToken.raw += token.raw;
                            lastToken.text += token.text;
                        } else tokens.push(token);
                        continue;
                    }
                    if (src) {
                        var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);
                        if (this.options.silent) {
                            console.error(errMsg);
                            break;
                        } else throw new Error(errMsg);
                    }
                }
                return tokens;
            };
            _createClass($33612996f59630e5$export$6168dc8908a6c652, null, [
                {
                    key: "rules",
                    get: function get() {
                        return {
                            block: block,
                            inline: inline
                        };
                    }
                }
            ]);
            return $33612996f59630e5$export$6168dc8908a6c652;
        }();
        var defaults$2 = defaults$5.exports.defaults;
        var cleanUrl = helpers.cleanUrl, escape$1 = helpers.escape;
        /**
   * Renderer
   */ var Renderer_1 = /*#__PURE__*/ function() {
            function $33612996f59630e5$export$88530751e3977073(options) {
                this.options = options || defaults$2;
            }
            var _proto = $33612996f59630e5$export$88530751e3977073.prototype;
            _proto.code = function code(_code, infostring, escaped) {
                var lang = (infostring || '').match(/\S*/)[0];
                if (this.options.highlight) {
                    var out = this.options.highlight(_code, lang);
                    if (out != null && out !== _code) {
                        escaped = true;
                        _code = out;
                    }
                }
                _code = _code.replace(/\n$/, '') + '\n';
                if (!lang) return '<pre><code>' + (escaped ? _code : escape$1(_code, true)) + '</code></pre>\n';
                return '<pre><code class="' + this.options.langPrefix + escape$1(lang, true) + '">' + (escaped ? _code : escape$1(_code, true)) + '</code></pre>\n';
            };
            _proto.blockquote = function blockquote(quote) {
                return '<blockquote>\n' + quote + '</blockquote>\n';
            };
            _proto.html = function html(_html) {
                return _html;
            };
            _proto.heading = function heading(text, level, raw, slugger) {
                if (this.options.headerIds) return '<h' + level + ' id="' + this.options.headerPrefix + slugger.slug(raw) + '">' + text + '</h' + level + '>\n';
                 // ignore IDs
                return '<h' + level + '>' + text + '</h' + level + '>\n';
            };
            _proto.hr = function hr() {
                return this.options.xhtml ? '<hr/>\n' : '<hr>\n';
            };
            _proto.list = function list(body, ordered, start) {
                var type = ordered ? 'ol' : 'ul', startatt = ordered && start !== 1 ? ' start="' + start + '"' : '';
                return '<' + type + startatt + '>\n' + body + '</' + type + '>\n';
            };
            _proto.listitem = function listitem(text) {
                return '<li>' + text + '</li>\n';
            };
            _proto.checkbox = function checkbox(checked) {
                return '<input ' + (checked ? 'checked="" ' : '') + 'disabled="" type="checkbox"' + (this.options.xhtml ? ' /' : '') + '> ';
            };
            _proto.paragraph = function paragraph(text) {
                return '<p>' + text + '</p>\n';
            };
            _proto.table = function table(header, body) {
                if (body) body = '<tbody>' + body + '</tbody>';
                return "<table>\n<thead>\n" + header + '</thead>\n' + body + '</table>\n';
            };
            _proto.tablerow = function tablerow(content) {
                return '<tr>\n' + content + '</tr>\n';
            };
            _proto.tablecell = function tablecell(content, flags) {
                var type = flags.header ? 'th' : 'td';
                var tag = flags.align ? '<' + type + ' align="' + flags.align + '">' : '<' + type + '>';
                return tag + content + '</' + type + '>\n';
            } // span level renderer
            ;
            _proto.strong = function strong(text) {
                return '<strong>' + text + '</strong>';
            };
            _proto.em = function em(text) {
                return '<em>' + text + '</em>';
            };
            _proto.codespan = function codespan(text) {
                return '<code>' + text + '</code>';
            };
            _proto.br = function br() {
                return this.options.xhtml ? '<br/>' : '<br>';
            };
            _proto.del = function del(text) {
                return '<del>' + text + '</del>';
            };
            _proto.link = function link(href, title, text) {
                href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);
                if (href === null) return text;
                var out = '<a href="' + escape$1(href) + '"';
                if (title) out += ' title="' + title + '"';
                out += '>' + text + '</a>';
                return out;
            };
            _proto.image = function image(href, title, text) {
                href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);
                if (href === null) return text;
                var out = '<img src="' + href + '" alt="' + text + '"';
                if (title) out += ' title="' + title + '"';
                out += this.options.xhtml ? '/>' : '>';
                return out;
            };
            _proto.text = function text(_text) {
                return _text;
            };
            return $33612996f59630e5$export$88530751e3977073;
        }();
        /**
   * TextRenderer
   * returns only the textual part of the token
   */ var TextRenderer_1 = /*#__PURE__*/ function() {
            function $33612996f59630e5$export$75ebcd2c8ed5b901() {}
            var _proto = $33612996f59630e5$export$75ebcd2c8ed5b901.prototype;
            // no need for block level renderers
            _proto.strong = function strong(text) {
                return text;
            };
            _proto.em = function em(text) {
                return text;
            };
            _proto.codespan = function codespan(text) {
                return text;
            };
            _proto.del = function del(text) {
                return text;
            };
            _proto.html = function html(text) {
                return text;
            };
            _proto.text = function text(_text) {
                return _text;
            };
            _proto.link = function link(href, title, text) {
                return '' + text;
            };
            _proto.image = function image(href, title, text) {
                return '' + text;
            };
            _proto.br = function br() {
                return '';
            };
            return $33612996f59630e5$export$75ebcd2c8ed5b901;
        }();
        /**
   * Slugger generates header id
   */ var Slugger_1 = /*#__PURE__*/ function() {
            function $33612996f59630e5$export$a2039dba1f9639d() {
                this.seen = {};
            }
            var _proto = $33612996f59630e5$export$a2039dba1f9639d.prototype;
            _proto.serialize = function serialize(value) {
                return value.toLowerCase().trim() // remove html tags
                .replace(/<[!\/a-z].*?>/ig, '') // remove unwanted chars
                .replace(/[\u2000-\u206F\u2E00-\u2E7F\\'!"#$%&()*+,./:;<=>?@[\]^`{|}~]/g, '').replace(/\s/g, '-');
            } /**
     * Finds the next safe (unique) slug to use
     */ ;
            _proto.getNextSafeSlug = function getNextSafeSlug(originalSlug, isDryRun) {
                var slug = originalSlug;
                var occurenceAccumulator = 0;
                if (this.seen.hasOwnProperty(slug)) {
                    occurenceAccumulator = this.seen[originalSlug];
                    do {
                        occurenceAccumulator++;
                        slug = originalSlug + '-' + occurenceAccumulator;
                    }while (this.seen.hasOwnProperty(slug))
                }
                if (!isDryRun) {
                    this.seen[originalSlug] = occurenceAccumulator;
                    this.seen[slug] = 0;
                }
                return slug;
            } /**
     * Convert string to unique id
     * @param {object} options
     * @param {boolean} options.dryrun Generates the next unique slug without updating the internal accumulator.
     */ ;
            _proto.slug = function slug(value, options) {
                if (options === void 0) options = {};
                var slug = this.serialize(value);
                return this.getNextSafeSlug(slug, options.dryrun);
            };
            return $33612996f59630e5$export$a2039dba1f9639d;
        }();
        var Renderer$1 = Renderer_1;
        var TextRenderer$1 = TextRenderer_1;
        var Slugger$1 = Slugger_1;
        var defaults$1 = defaults$5.exports.defaults;
        var unescape = helpers.unescape;
        /**
   * Parsing & Compiling
   */ var Parser_1 = /*#__PURE__*/ function() {
            function $33612996f59630e5$export$7acfa6ed01010e37(options) {
                this.options = options || defaults$1;
                this.options.renderer = this.options.renderer || new Renderer$1();
                this.renderer = this.options.renderer;
                this.renderer.options = this.options;
                this.textRenderer = new TextRenderer$1();
                this.slugger = new Slugger$1();
            }
            /**
     * Static Parse Method
     */ $33612996f59630e5$export$7acfa6ed01010e37.parse = function $33612996f59630e5$export$98e6a39c04603d36(tokens, options) {
                var $33612996f59630e5$export$8f49e4af10703ce3 = new $33612996f59630e5$export$7acfa6ed01010e37(options);
                return $33612996f59630e5$export$8f49e4af10703ce3.parse(tokens);
            } /**
     * Static Parse Inline Method
     */ ;
            $33612996f59630e5$export$7acfa6ed01010e37.parseInline = function parseInline(tokens, options) {
                var $33612996f59630e5$export$8f49e4af10703ce3 = new $33612996f59630e5$export$7acfa6ed01010e37(options);
                return $33612996f59630e5$export$8f49e4af10703ce3.parseInline(tokens);
            } /**
     * Parse Loop
     */ ;
            var _proto = $33612996f59630e5$export$7acfa6ed01010e37.prototype;
            _proto.parse = function $33612996f59630e5$export$98e6a39c04603d36(tokens, top) {
                if (top === void 0) top = true;
                var out = '', i, j, k, l2, l3, row, cell, header, body, token, ordered, start, loose, itemBody, item, checked, task, checkbox, ret;
                var l = tokens.length;
                for(i = 0; i < l; i++){
                    token = tokens[i]; // Run any renderer extensions
                    if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {
                        ret = this.options.extensions.renderers[token.type].call({
                            parser: this
                        }, token);
                        if (ret !== false || ![
                            'space',
                            'hr',
                            'heading',
                            'code',
                            'table',
                            'blockquote',
                            'list',
                            'html',
                            'paragraph',
                            'text'
                        ].includes(token.type)) {
                            out += ret || '';
                            continue;
                        }
                    }
                    switch(token.type){
                        case 'space':
                            continue;
                        case 'hr':
                            out += this.renderer.hr();
                            continue;
                        case 'heading':
                            out += this.renderer.heading(this.parseInline(token.tokens), token.depth, unescape(this.parseInline(token.tokens, this.textRenderer)), this.slugger);
                            continue;
                        case 'code':
                            out += this.renderer.code(token.text, token.lang, token.escaped);
                            continue;
                        case 'table':
                            header = ''; // header
                            cell = '';
                            l2 = token.header.length;
                            for(j = 0; j < l2; j++)cell += this.renderer.tablecell(this.parseInline(token.header[j].tokens), {
                                header: true,
                                align: token.align[j]
                            });
                            header += this.renderer.tablerow(cell);
                            body = '';
                            l2 = token.rows.length;
                            for(j = 0; j < l2; j++){
                                row = token.rows[j];
                                cell = '';
                                l3 = row.length;
                                for(k = 0; k < l3; k++)cell += this.renderer.tablecell(this.parseInline(row[k].tokens), {
                                    header: false,
                                    align: token.align[k]
                                });
                                body += this.renderer.tablerow(cell);
                            }
                            out += this.renderer.table(header, body);
                            continue;
                        case 'blockquote':
                            body = this.parse(token.tokens);
                            out += this.renderer.blockquote(body);
                            continue;
                        case 'list':
                            ordered = token.ordered;
                            start = token.start;
                            loose = token.loose;
                            l2 = token.items.length;
                            body = '';
                            for(j = 0; j < l2; j++){
                                item = token.items[j];
                                checked = item.checked;
                                task = item.task;
                                itemBody = '';
                                if (item.task) {
                                    checkbox = this.renderer.checkbox(checked);
                                    if (loose) {
                                        if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {
                                            item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;
                                            if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;
                                        } else item.tokens.unshift({
                                            type: 'text',
                                            text: checkbox
                                        });
                                    } else itemBody += checkbox;
                                }
                                itemBody += this.parse(item.tokens, loose);
                                body += this.renderer.listitem(itemBody, task, checked);
                            }
                            out += this.renderer.list(body, ordered, start);
                            continue;
                        case 'html':
                            // TODO parse inline content if parameter markdown=1
                            out += this.renderer.html(token.text);
                            continue;
                        case 'paragraph':
                            out += this.renderer.paragraph(this.parseInline(token.tokens));
                            continue;
                        case 'text':
                            body = token.tokens ? this.parseInline(token.tokens) : token.text;
                            while(i + 1 < l && tokens[i + 1].type === 'text'){
                                token = tokens[++i];
                                body += '\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);
                            }
                            out += top ? this.renderer.paragraph(body) : body;
                            continue;
                        default:
                            var errMsg = 'Token with "' + token.type + '" type was not found.';
                            if (this.options.silent) {
                                console.error(errMsg);
                                return;
                            } else throw new Error(errMsg);
                    }
                }
                return out;
            } /**
     * Parse Inline Tokens
     */ ;
            _proto.parseInline = function parseInline(tokens, renderer) {
                renderer = renderer || this.renderer;
                var out = '', i, token, ret;
                var l = tokens.length;
                for(i = 0; i < l; i++){
                    token = tokens[i]; // Run any renderer extensions
                    if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {
                        ret = this.options.extensions.renderers[token.type].call({
                            parser: this
                        }, token);
                        if (ret !== false || ![
                            'escape',
                            'html',
                            'link',
                            'image',
                            'strong',
                            'em',
                            'codespan',
                            'br',
                            'del',
                            'text'
                        ].includes(token.type)) {
                            out += ret || '';
                            continue;
                        }
                    }
                    switch(token.type){
                        case 'escape':
                            out += renderer.text(token.text);
                            break;
                        case 'html':
                            out += renderer.html(token.text);
                            break;
                        case 'link':
                            out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));
                            break;
                        case 'image':
                            out += renderer.image(token.href, token.title, token.text);
                            break;
                        case 'strong':
                            out += renderer.strong(this.parseInline(token.tokens, renderer));
                            break;
                        case 'em':
                            out += renderer.em(this.parseInline(token.tokens, renderer));
                            break;
                        case 'codespan':
                            out += renderer.codespan(token.text);
                            break;
                        case 'br':
                            out += renderer.br();
                            break;
                        case 'del':
                            out += renderer.del(this.parseInline(token.tokens, renderer));
                            break;
                        case 'text':
                            out += renderer.text(token.text);
                            break;
                        default:
                            var errMsg = 'Token with "' + token.type + '" type was not found.';
                            if (this.options.silent) {
                                console.error(errMsg);
                                return;
                            } else throw new Error(errMsg);
                    }
                }
                return out;
            };
            return $33612996f59630e5$export$7acfa6ed01010e37;
        }();
        var $33612996f59630e5$export$6168dc8908a6c652 = Lexer_1;
        var $33612996f59630e5$export$7acfa6ed01010e37 = Parser_1;
        var $33612996f59630e5$export$55e8b082af4aa63e = Tokenizer_1;
        var $33612996f59630e5$export$88530751e3977073 = Renderer_1;
        var $33612996f59630e5$export$75ebcd2c8ed5b901 = TextRenderer_1;
        var $33612996f59630e5$export$a2039dba1f9639d = Slugger_1;
        var merge = helpers.merge, checkSanitizeDeprecation = helpers.checkSanitizeDeprecation, escape = helpers.escape;
        var getDefaults = defaults$5.exports.getDefaults, changeDefaults = defaults$5.exports.changeDefaults, defaults = defaults$5.exports.defaults;
        /**
   * Marked
   */ function $33612996f59630e5$export$db8f131360c543a5(src, opt, callback) {
            // throw error in case of non string input
            if (typeof src === 'undefined' || src === null) throw new Error('marked(): input parameter is undefined or null');
            if (typeof src !== 'string') throw new Error('marked(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');
            if (typeof opt === 'function') {
                callback = opt;
                opt = null;
            }
            opt = merge({}, $33612996f59630e5$export$db8f131360c543a5.defaults, opt || {});
            checkSanitizeDeprecation(opt);
            if (callback) {
                var highlight = opt.highlight;
                var tokens;
                try {
                    tokens = $33612996f59630e5$export$6168dc8908a6c652.lex(src, opt);
                } catch (e1) {
                    return callback(e1);
                }
                var done = function done(err) {
                    var out;
                    if (!err) try {
                        if (opt.walkTokens) $33612996f59630e5$export$db8f131360c543a5.walkTokens(tokens, opt.walkTokens);
                        out = $33612996f59630e5$export$7acfa6ed01010e37.parse(tokens, opt);
                    } catch (e) {
                        err = e;
                    }
                    opt.highlight = highlight;
                    return err ? callback(err) : callback(null, out);
                };
                if (!highlight || highlight.length < 3) return done();
                delete opt.highlight;
                if (!tokens.length) return done();
                var pending = 0;
                $33612996f59630e5$export$db8f131360c543a5.walkTokens(tokens, function(token) {
                    if (token.type === 'code') {
                        pending++;
                        setTimeout(function() {
                            highlight(token.text, token.lang, function(err, code) {
                                if (err) return done(err);
                                if (code != null && code !== token.text) {
                                    token.text = code;
                                    token.escaped = true;
                                }
                                pending--;
                                if (pending === 0) done();
                            });
                        }, 0);
                    }
                });
                if (pending === 0) done();
                return;
            }
            try {
                var _tokens = $33612996f59630e5$export$6168dc8908a6c652.lex(src, opt);
                if (opt.walkTokens) $33612996f59630e5$export$db8f131360c543a5.walkTokens(_tokens, opt.walkTokens);
                return $33612996f59630e5$export$7acfa6ed01010e37.parse(_tokens, opt);
            } catch (e) {
                e.message += '\nPlease report this to https://github.com/markedjs/marked.';
                if (opt.silent) return '<p>An error occurred:</p><pre>' + escape(e.message + '', true) + '</pre>';
                throw e;
            }
        }
        /**
   * Options
   */ $33612996f59630e5$export$db8f131360c543a5.options = $33612996f59630e5$export$db8f131360c543a5.setOptions = function(opt) {
            merge($33612996f59630e5$export$db8f131360c543a5.defaults, opt);
            changeDefaults($33612996f59630e5$export$db8f131360c543a5.defaults);
            return $33612996f59630e5$export$db8f131360c543a5;
        };
        $33612996f59630e5$export$db8f131360c543a5.getDefaults = getDefaults;
        $33612996f59630e5$export$db8f131360c543a5.defaults = defaults;
        /**
   * Use Extension
   */ $33612996f59630e5$export$db8f131360c543a5.use = function() {
            var _this = this;
            for(var _len = arguments.length, args1 = new Array(_len), _key = 0; _key < _len; _key++)args1[_key] = arguments[_key];
            var opts = merge.apply(void 0, [
                {}
            ].concat(args1));
            var extensions = $33612996f59630e5$export$db8f131360c543a5.defaults.extensions || {
                renderers: {},
                childTokens: {}
            };
            var hasExtensions;
            args1.forEach(function(pack) {
                // ==-- Parse "addon" extensions --== //
                if (pack.extensions) {
                    hasExtensions = true;
                    pack.extensions.forEach(function(ext) {
                        if (!ext.name) throw new Error('extension name required');
                        if (ext.renderer) {
                            // Renderer extensions
                            var prevRenderer = extensions.renderers ? extensions.renderers[ext.name] : null;
                            if (prevRenderer) // Replace extension with func to run new extension but fall back if false
                            extensions.renderers[ext.name] = function() {
                                for(var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++)args[_key2] = arguments[_key2];
                                var ret = ext.renderer.apply(this, args);
                                if (ret === false) ret = prevRenderer.apply(this, args);
                                return ret;
                            };
                            else extensions.renderers[ext.name] = ext.renderer;
                        }
                        if (ext.tokenizer) {
                            // Tokenizer Extensions
                            if (!ext.level || ext.level !== 'block' && ext.level !== 'inline') throw new Error("extension level must be 'block' or 'inline'");
                            if (extensions[ext.level]) extensions[ext.level].unshift(ext.tokenizer);
                            else extensions[ext.level] = [
                                ext.tokenizer
                            ];
                            if (ext.start) {
                                // Function to check for start of token
                                if (ext.level === 'block') {
                                    if (extensions.startBlock) extensions.startBlock.push(ext.start);
                                    else extensions.startBlock = [
                                        ext.start
                                    ];
                                } else if (ext.level === 'inline') {
                                    if (extensions.startInline) extensions.startInline.push(ext.start);
                                    else extensions.startInline = [
                                        ext.start
                                    ];
                                }
                            }
                        }
                        if (ext.childTokens) // Child tokens to be visited by walkTokens
                        extensions.childTokens[ext.name] = ext.childTokens;
                    });
                } // ==-- Parse "overwrite" extensions --== //
                if (pack.renderer) (function() {
                    var renderer = $33612996f59630e5$export$db8f131360c543a5.defaults.renderer || new $33612996f59630e5$export$88530751e3977073();
                    var _loop = function _loop(prop) {
                        var prevRenderer = renderer[prop]; // Replace renderer with func to run extension, but fall back if false
                        renderer[prop] = function() {
                            for(var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++)args[_key3] = arguments[_key3];
                            var ret = pack.renderer[prop].apply(renderer, args);
                            if (ret === false) ret = prevRenderer.apply(renderer, args);
                            return ret;
                        };
                    };
                    for(var prop1 in pack.renderer)_loop(prop1);
                    opts.renderer = renderer;
                })();
                if (pack.tokenizer) (function() {
                    var tokenizer = $33612996f59630e5$export$db8f131360c543a5.defaults.tokenizer || new $33612996f59630e5$export$55e8b082af4aa63e();
                    var _loop2 = function _loop2(prop) {
                        var prevTokenizer = tokenizer[prop]; // Replace tokenizer with func to run extension, but fall back if false
                        tokenizer[prop] = function() {
                            for(var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++)args[_key4] = arguments[_key4];
                            var ret = pack.tokenizer[prop].apply(tokenizer, args);
                            if (ret === false) ret = prevTokenizer.apply(tokenizer, args);
                            return ret;
                        };
                    };
                    for(var prop2 in pack.tokenizer)_loop2(prop2);
                    opts.tokenizer = tokenizer;
                })();
                 // ==-- Parse WalkTokens extensions --== //
                if (pack.walkTokens) {
                    var walkTokens = $33612996f59630e5$export$db8f131360c543a5.defaults.walkTokens;
                    opts.walkTokens = function(token) {
                        pack.walkTokens.call(_this, token);
                        if (walkTokens) walkTokens(token);
                    };
                }
                if (hasExtensions) opts.extensions = extensions;
                $33612996f59630e5$export$db8f131360c543a5.setOptions(opts);
            });
        };
        /**
   * Run callback for every token
   */ $33612996f59630e5$export$db8f131360c543a5.walkTokens = function(tokens, callback) {
            var _loop3 = function _loop3() {
                var token = _step.value;
                callback(token);
                switch(token.type){
                    case 'table':
                        for(var _iterator2 = _createForOfIteratorHelperLoose(token.header), _step2; !(_step2 = _iterator2()).done;){
                            var cell = _step2.value;
                            $33612996f59630e5$export$db8f131360c543a5.walkTokens(cell.tokens, callback);
                        }
                        for(var _iterator3 = _createForOfIteratorHelperLoose(token.rows), _step3; !(_step3 = _iterator3()).done;){
                            var row = _step3.value;
                            for(var _iterator4 = _createForOfIteratorHelperLoose(row), _step4; !(_step4 = _iterator4()).done;){
                                var _cell = _step4.value;
                                $33612996f59630e5$export$db8f131360c543a5.walkTokens(_cell.tokens, callback);
                            }
                        }
                        break;
                    case 'list':
                        $33612996f59630e5$export$db8f131360c543a5.walkTokens(token.items, callback);
                        break;
                    default:
                        if ($33612996f59630e5$export$db8f131360c543a5.defaults.extensions && $33612996f59630e5$export$db8f131360c543a5.defaults.extensions.childTokens && $33612996f59630e5$export$db8f131360c543a5.defaults.extensions.childTokens[token.type]) // Walk any extensions
                        $33612996f59630e5$export$db8f131360c543a5.defaults.extensions.childTokens[token.type].forEach(function(childTokens) {
                            $33612996f59630e5$export$db8f131360c543a5.walkTokens(token[childTokens], callback);
                        });
                        else if (token.tokens) $33612996f59630e5$export$db8f131360c543a5.walkTokens(token.tokens, callback);
                }
            };
            for(var _iterator = _createForOfIteratorHelperLoose(tokens), _step; !(_step = _iterator()).done;)_loop3();
        };
        /**
   * Parse Inline
   */ $33612996f59630e5$export$db8f131360c543a5.parseInline = function(src, opt) {
            // throw error in case of non string input
            if (typeof src === 'undefined' || src === null) throw new Error('marked.parseInline(): input parameter is undefined or null');
            if (typeof src !== 'string') throw new Error('marked.parseInline(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');
            opt = merge({}, $33612996f59630e5$export$db8f131360c543a5.defaults, opt || {});
            checkSanitizeDeprecation(opt);
            try {
                var tokens = $33612996f59630e5$export$6168dc8908a6c652.lexInline(src, opt);
                if (opt.walkTokens) $33612996f59630e5$export$db8f131360c543a5.walkTokens(tokens, opt.walkTokens);
                return $33612996f59630e5$export$7acfa6ed01010e37.parseInline(tokens, opt);
            } catch (e) {
                e.message += '\nPlease report this to https://github.com/markedjs/marked.';
                if (opt.silent) return '<p>An error occurred:</p><pre>' + escape(e.message + '', true) + '</pre>';
                throw e;
            }
        };
        /**
   * Expose
   */ $33612996f59630e5$export$db8f131360c543a5.Parser = $33612996f59630e5$export$7acfa6ed01010e37;
        $33612996f59630e5$export$db8f131360c543a5.parser = $33612996f59630e5$export$7acfa6ed01010e37.parse;
        $33612996f59630e5$export$db8f131360c543a5.Renderer = $33612996f59630e5$export$88530751e3977073;
        $33612996f59630e5$export$db8f131360c543a5.TextRenderer = $33612996f59630e5$export$75ebcd2c8ed5b901;
        $33612996f59630e5$export$db8f131360c543a5.Lexer = $33612996f59630e5$export$6168dc8908a6c652;
        $33612996f59630e5$export$db8f131360c543a5.lexer = $33612996f59630e5$export$6168dc8908a6c652.lex;
        $33612996f59630e5$export$db8f131360c543a5.Tokenizer = $33612996f59630e5$export$55e8b082af4aa63e;
        $33612996f59630e5$export$db8f131360c543a5.Slugger = $33612996f59630e5$export$a2039dba1f9639d;
        $33612996f59630e5$export$db8f131360c543a5.parse = $33612996f59630e5$export$db8f131360c543a5;
        var marked_1 = $33612996f59630e5$export$db8f131360c543a5;
        return marked_1;
    });
// ESM-uncomment-begin
})();
var $33612996f59630e5$export$db8f131360c543a5 = $33612996f59630e5$var$__marked_exports || $33612996f59630e5$exports;
var $33612996f59630e5$export$7acfa6ed01010e37 = ($33612996f59630e5$var$__marked_exports || $33612996f59630e5$exports).Parser;
var $33612996f59630e5$export$8f49e4af10703ce3 = ($33612996f59630e5$var$__marked_exports || $33612996f59630e5$exports).parser;
var $33612996f59630e5$export$88530751e3977073 = ($33612996f59630e5$var$__marked_exports || $33612996f59630e5$exports).Renderer;
var $33612996f59630e5$export$75ebcd2c8ed5b901 = ($33612996f59630e5$var$__marked_exports || $33612996f59630e5$exports).TextRenderer;
var $33612996f59630e5$export$6168dc8908a6c652 = ($33612996f59630e5$var$__marked_exports || $33612996f59630e5$exports).Lexer;
var $33612996f59630e5$export$43feed32102720d2 = ($33612996f59630e5$var$__marked_exports || $33612996f59630e5$exports).lexer;
var $33612996f59630e5$export$55e8b082af4aa63e = ($33612996f59630e5$var$__marked_exports || $33612996f59630e5$exports).Tokenizer;
var $33612996f59630e5$export$a2039dba1f9639d = ($33612996f59630e5$var$__marked_exports || $33612996f59630e5$exports).Slugger;
var $33612996f59630e5$export$98e6a39c04603d36 = ($33612996f59630e5$var$__marked_exports || $33612996f59630e5$exports).parse; // ESM-uncomment-end



var $gYUBr = parcelRequire("gYUBr");

var $8GPp8 = parcelRequire("8GPp8");

var $7w8Da = parcelRequire("7w8Da");

var $5Aea5 = parcelRequire("5Aea5");

var $jcr1R = parcelRequire("jcr1R");

var $5OJ54 = parcelRequire("5OJ54");
function $3c28da16a9343d25$export$bd27f0c8b4b4eabc(markdown, options = {}, markedOptions = {}) {
    var _a1;
    const disposables = new $9cWcn.DisposableStore();
    let isDisposed = false;
    const cts = disposables.add(new $giPcZ.CancellationTokenSource());
    const element = $e65bg.createElement(options);
    const _uriMassage = function(part) {
        let data;
        try {
            data = $gYUBr.parse(decodeURIComponent(part));
        } catch (e) {
        // ignore
        }
        if (!data) return part;
        data = $7w8Da.cloneAndChange(data, (value)=>{
            if (markdown.uris && markdown.uris[value]) return $5OJ54.URI.revive(markdown.uris[value]);
            else return undefined;
        });
        return encodeURIComponent(JSON.stringify(data));
    };
    const _href = function(href, isDomUri) {
        const data = markdown.uris && markdown.uris[href];
        let uri = $5OJ54.URI.revive(data);
        if (isDomUri) {
            if (href.startsWith($8GPp8.Schemas.data + ':')) return href;
            if (!uri) uri = $5OJ54.URI.parse(href);
            // this URI will end up as "src"-attribute of a dom node
            // and because of that special rewriting needs to be done
            // so that the URI uses a protocol that's understood by
            // browsers (like http or https)
            return $8GPp8.FileAccess.asBrowserUri(uri).toString(true);
        }
        if (!uri) return href;
        if ($5OJ54.URI.parse(href).toString() === uri.toString()) return href; // no transformation performed
        if (uri.query) uri = uri.with({
            query: _uriMassage(uri.query)
        });
        return uri.toString();
    };
    // signal to code-block render that the
    // element has been created
    let signalInnerHTML;
    const withInnerHTML = new Promise((c)=>signalInnerHTML = c
    );
    const renderer = new $33612996f59630e5$exports.Renderer();
    renderer.image = (href, title, text)=>{
        let dimensions = [];
        let attributes = [];
        if (href) {
            ({ href: href , dimensions: dimensions  } = $iGmb0.parseHrefAndDimensions(href));
            attributes.push(`src="${href}"`);
        }
        if (text) attributes.push(`alt="${text}"`);
        if (title) attributes.push(`title="${title}"`);
        if (dimensions.length) attributes = attributes.concat(dimensions);
        return '<img ' + attributes.join(' ') + '>';
    };
    renderer.link = (href, title, text)=>{
        // Remove markdown escapes. Workaround for https://github.com/chjj/marked/issues/829
        if (href === text) text = $iGmb0.removeMarkdownEscapes(text);
        href = _href(href, false);
        if (options.baseUrl) {
            const hasScheme = /^\w[\w\d+.-]*:/.test(href);
            if (!hasScheme) href = $5Aea5.resolvePath(options.baseUrl, href).toString();
        }
        title = $iGmb0.removeMarkdownEscapes(title);
        href = $iGmb0.removeMarkdownEscapes(href);
        if (!href || href.match(/^data:|javascript:/i) || href.match(/^command:/i) && !markdown.isTrusted || href.match(/^command:(\/\/\/)?_workbench\.downloadResource/i)) // drop the link
        return text;
        else {
            // HTML Encode href
            href = href.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/'/g, '&#39;');
            return `<a href="#" data-href="${href}" title="${title || href}">${text}</a>`;
        }
    };
    renderer.paragraph = (text)=>{
        return `<p>${text}</p>`;
    };
    if (options.codeBlockRenderer) renderer.code = (code, lang)=>{
        const value = options.codeBlockRenderer(lang, code);
        // when code-block rendering is async we return sync
        // but update the node with the real result later.
        const id = $nKTlZ.defaultGenerator.nextId();
        $6bXyA.raceCancellation(Promise.all([
            value,
            withInnerHTML
        ]), cts.token).then((values)=>{
            var _a;
            if (!isDisposed && values) {
                const span = element.querySelector(`div[data-code="${id}"]`);
                if (span) $bDzmQ.reset(span, values[0]);
                (_a = options.asyncRenderCallback) === null || _a === void 0 || _a.call(options);
            }
        }).catch(()=>{
        // ignore
        });
        return `<div class="code" data-code="${id}">${$jcr1R.escape(code)}</div>`;
    };
    if (options.actionHandler) {
        const onClick = options.actionHandler.disposables.add(new $3vJsA.DomEmitter(element, 'click'));
        const onAuxClick = options.actionHandler.disposables.add(new $3vJsA.DomEmitter(element, 'auxclick'));
        options.actionHandler.disposables.add($5YaSO.Event.any(onClick.event, onAuxClick.event)((e)=>{
            const mouseEvent = new $c8kCi.StandardMouseEvent(e);
            if (!mouseEvent.leftButton && !mouseEvent.middleButton) return;
            let target = mouseEvent.target;
            if (target.tagName !== 'A') {
                target = target.parentElement;
                if (!target || target.tagName !== 'A') return;
            }
            try {
                const href = target.dataset['href'];
                if (href) options.actionHandler.callback(href, mouseEvent);
            } catch (err) {
                $gPkHZ.onUnexpectedError(err);
            } finally{
                mouseEvent.preventDefault();
            }
        }));
    }
    if (!markdown.supportHtml) {
        // TODO: Can we deprecated this in favor of 'supportHtml'?
        // Use our own sanitizer so that we can let through only spans.
        // Otherwise, we'd be letting all html be rendered.
        // If we want to allow markdown permitted tags, then we can delete sanitizer and sanitize.
        // We always pass the output through dompurify after this so that we don't rely on
        // marked for sanitization.
        markedOptions.sanitizer = (html)=>{
            const match = markdown.isTrusted ? html.match(/^(<span[^>]+>)|(<\/\s*span>)$/) : undefined;
            return match ? html : '';
        };
        markedOptions.sanitize = true;
        markedOptions.silent = true;
    }
    markedOptions.renderer = renderer;
    // values that are too long will freeze the UI
    let value1 = (_a1 = markdown.value) !== null && _a1 !== void 0 ? _a1 : '';
    if (value1.length > 100000) value1 = `${value1.substr(0, 100000)}…`;
    // escape theme icons
    if (markdown.supportThemeIcons) value1 = $3PwGr.markdownEscapeEscapedIcons(value1);
    let renderedMarkdown = $33612996f59630e5$exports.parse(value1, markedOptions);
    // Rewrite theme icons
    if (markdown.supportThemeIcons) {
        const elements = $6G2yS.renderLabelWithIcons(renderedMarkdown);
        renderedMarkdown = elements.map((e)=>typeof e === 'string' ? e : e.outerHTML
        ).join('');
    }
    const htmlParser = new DOMParser();
    const markdownHtmlDoc = htmlParser.parseFromString($3c28da16a9343d25$var$sanitizeRenderedMarkdown(markdown, renderedMarkdown), 'text/html');
    markdownHtmlDoc.body.querySelectorAll('img').forEach((img)=>{
        if (img.src) {
            let href = _href(img.src, true);
            try {
                const hrefAsUri = $5OJ54.URI.parse(href);
                if (options.baseUrl && hrefAsUri.scheme === $8GPp8.Schemas.file) href = $5Aea5.resolvePath(options.baseUrl, href).toString();
            } catch (err) {}
            img.src = href;
        }
    });
    element.innerHTML = $3c28da16a9343d25$var$sanitizeRenderedMarkdown(markdown, markdownHtmlDoc.body.innerHTML);
    // signal that async code blocks can be now be inserted
    signalInnerHTML();
    // signal size changes for image tags
    if (options.asyncRenderCallback) for (const img1 of element.getElementsByTagName('img')){
        const listener = disposables.add($bDzmQ.addDisposableListener(img1, 'load', ()=>{
            listener.dispose();
            options.asyncRenderCallback();
        }));
    }
    return {
        element: element,
        dispose: ()=>{
            isDisposed = true;
            cts.cancel();
            disposables.dispose();
        }
    };
}
function $3c28da16a9343d25$var$sanitizeRenderedMarkdown(options, renderedMarkdown) {
    const { config: config , allowedSchemes: allowedSchemes  } = $3c28da16a9343d25$var$getSanitizerOptions(options);
    $ea61991ee04c533a$export$f99777bb87ac6904('uponSanitizeAttribute', (element, e)=>{
        if (e.attrName === 'style' || e.attrName === 'class') {
            if (element.tagName === 'SPAN') {
                if (e.attrName === 'style') {
                    e.keepAttr = /^(color\:#[0-9a-fA-F]+;)?(background-color\:#[0-9a-fA-F]+;)?$/.test(e.attrValue);
                    return;
                } else if (e.attrName === 'class') {
                    e.keepAttr = /^codicon codicon-[a-z\-]+( codicon-modifier-[a-z\-]+)?$/.test(e.attrValue);
                    return;
                }
            }
            e.keepAttr = false;
            return;
        }
    });
    // build an anchor to map URLs to
    const anchor = document.createElement('a');
    // https://github.com/cure53/DOMPurify/blob/main/demos/hooks-scheme-allowlist.html
    $ea61991ee04c533a$export$f99777bb87ac6904('afterSanitizeAttributes', (node)=>{
        // check all href/src attributes for validity
        for (const attr of [
            'href',
            'src'
        ])if (node.hasAttribute(attr)) {
            anchor.href = node.getAttribute(attr);
            if (!allowedSchemes.includes(anchor.protocol.replace(/:$/, ''))) node.removeAttribute(attr);
        }
    });
    try {
        return $ea61991ee04c533a$export$83d2e9e3e4ee39ed(renderedMarkdown, Object.assign(Object.assign({}, config), {
            RETURN_TRUSTED_TYPE: true
        }));
    } finally{
        $ea61991ee04c533a$export$4840506845da1500('uponSanitizeAttribute');
        $ea61991ee04c533a$export$4840506845da1500('afterSanitizeAttributes');
    }
}
function $3c28da16a9343d25$var$getSanitizerOptions(options) {
    const allowedSchemes = [
        $8GPp8.Schemas.http,
        $8GPp8.Schemas.https,
        $8GPp8.Schemas.mailto,
        $8GPp8.Schemas.data,
        $8GPp8.Schemas.file,
        $8GPp8.Schemas.vscodeFileResource,
        $8GPp8.Schemas.vscodeRemote,
        $8GPp8.Schemas.vscodeRemoteResource, 
    ];
    if (options.isTrusted) allowedSchemes.push($8GPp8.Schemas.command);
    return {
        config: {
            // allowedTags should included everything that markdown renders to.
            // Since we have our own sanitize function for marked, it's possible we missed some tag so let dompurify make sure.
            // HTML tags that can result from markdown are from reading https://spec.commonmark.org/0.29/
            // HTML table tags that can result from markdown are from https://github.github.com/gfm/#tables-extension-
            ALLOWED_TAGS: [
                'ul',
                'li',
                'p',
                'b',
                'i',
                'code',
                'blockquote',
                'ol',
                'h1',
                'h2',
                'h3',
                'h4',
                'h5',
                'h6',
                'hr',
                'em',
                'pre',
                'table',
                'thead',
                'tbody',
                'tr',
                'th',
                'td',
                'div',
                'del',
                'a',
                'strong',
                'br',
                'img',
                'span'
            ],
            ALLOWED_ATTR: [
                'href',
                'data-href',
                'target',
                'title',
                'src',
                'alt',
                'class',
                'style',
                'data-code',
                'width',
                'height',
                'align'
            ],
            ALLOW_UNKNOWN_PROTOCOLS: true
        },
        allowedSchemes: allowedSchemes
    };
}



var $iAi3o = parcelRequire("iAi3o");

var $is5YK = parcelRequire("is5YK");

var $gPkHZ = parcelRequire("gPkHZ");

var $4ZBwU = parcelRequire("4ZBwU");

var $5YaSO = parcelRequire("5YaSO");

var $9cWcn = parcelRequire("9cWcn");

var $4PmRQ = parcelRequire("4PmRQ");

var $7rhPc = parcelRequire("7rhPc");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $0f615ea767437954$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var $0f615ea767437954$var$__param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
};
var $0f615ea767437954$var$__awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var $0f615ea767437954$var$_a;
/**
 * Markdown renderer that can render codeblocks with the editor mechanics. This
 * renderer should always be preferred.
 */ let $0f615ea767437954$export$22c2c977437cf477 = class $0f615ea767437954$export$22c2c977437cf477 {
    constructor(_options, _modeService, _openerService){
        this._options = _options;
        this._modeService = _modeService;
        this._openerService = _openerService;
        this._onDidRenderAsync = new $5YaSO.Emitter();
        this.onDidRenderAsync = this._onDidRenderAsync.event;
    }
    dispose() {
        this._onDidRenderAsync.dispose();
    }
    render(markdown, options, markedOptions) {
        if (!markdown) {
            const element = document.createElement('span');
            return {
                element: element,
                dispose: ()=>{}
            };
        }
        const disposables = new $9cWcn.DisposableStore();
        const rendered = disposables.add($3c28da16a9343d25$export$bd27f0c8b4b4eabc(markdown, Object.assign(Object.assign({}, this._getRenderOptions(markdown, disposables)), options), markedOptions));
        return {
            element: rendered.element,
            dispose: ()=>disposables.dispose()
        };
    }
    _getRenderOptions(markdown, disposeables) {
        return {
            baseUrl: this._options.baseUrl,
            codeBlockRenderer: (languageAlias, value)=>$0f615ea767437954$var$__awaiter(this, void 0, void 0, function*() {
                    var _a, _b, _c, _d;
                    // In markdown,
                    // it is possible that we stumble upon language aliases (e.g.js instead of javascript)
                    // it is possible no alias is given in which case we fall back to the current editor lang
                    let languageId;
                    if (languageAlias) languageId = this._modeService.getModeIdForLanguageName(languageAlias);
                    else if (this._options.editor) languageId = (_a = this._options.editor.getModel()) === null || _a === void 0 ? void 0 : _a.getLanguageId();
                    if (!languageId) languageId = 'plaintext';
                    this._modeService.triggerMode(languageId);
                    const tokenization = (_b = yield $4PmRQ.TokenizationRegistry.getPromise(languageId)) !== null && _b !== void 0 ? _b : undefined;
                    const element = document.createElement('span');
                    element.innerHTML = (_d = (_c = $0f615ea767437954$export$22c2c977437cf477._ttpTokenizer) === null || _c === void 0 ? void 0 : _c.createHTML(value, this._modeService.languageIdCodec, tokenization)) !== null && _d !== void 0 ? _d : $4ZBwU.tokenizeToString(value, this._modeService.languageIdCodec, tokenization);
                    // use "good" font
                    if (this._options.editor) {
                        const fontInfo = this._options.editor.getOption(43 /* fontInfo */ );
                        $7rhPc.Configuration.applyFontInfoSlow(element, fontInfo);
                    } else if (this._options.codeBlockFontFamily) element.style.fontFamily = this._options.codeBlockFontFamily;
                    return element;
                })
            ,
            asyncRenderCallback: ()=>this._onDidRenderAsync.fire()
            ,
            actionHandler: {
                callback: (content)=>this._openerService.open(content, {
                        fromUserGesture: true,
                        allowContributedOpeners: true,
                        allowCommands: markdown.isTrusted
                    }).catch($gPkHZ.onUnexpectedError)
                ,
                disposables: disposeables
            }
        };
    }
};
$0f615ea767437954$export$22c2c977437cf477._ttpTokenizer = ($0f615ea767437954$var$_a = window.trustedTypes) === null || $0f615ea767437954$var$_a === void 0 ? void 0 : $0f615ea767437954$var$_a.createPolicy('tokenizeToString', {
    createHTML (value, languageIdCodec, tokenizer) {
        return $4ZBwU.tokenizeToString(value, languageIdCodec, tokenizer);
    }
});
$0f615ea767437954$export$22c2c977437cf477 = $0f615ea767437954$var$__decorate([
    $0f615ea767437954$var$__param(1, $is5YK.IModeService),
    $0f615ea767437954$var$__param(2, $iAi3o.IOpenerService)
], $0f615ea767437954$export$22c2c977437cf477);



var $dcxQ7 = parcelRequire("dcxQ7");

var $d00il = parcelRequire("d00il");

var $4PmRQ = parcelRequire("4PmRQ");

var $is5YK = parcelRequire("is5YK");
var $d1bb45e72f002bd1$exports = {};

$parcel$export($d1bb45e72f002bd1$exports, "getHover", () => $d1bb45e72f002bd1$export$6e0a32f513b2f3d3, (v) => $d1bb45e72f002bd1$export$6e0a32f513b2f3d3 = v);

var $6bXyA = parcelRequire("6bXyA");

var $giPcZ = parcelRequire("giPcZ");

var $gPkHZ = parcelRequire("gPkHZ");

var $2iJTi = parcelRequire("2iJTi");

var $4PmRQ = parcelRequire("4PmRQ");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $d1bb45e72f002bd1$var$__awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
class $d1bb45e72f002bd1$export$b4cb00c725d0d256 {
    constructor(provider, hover, ordinal){
        this.provider = provider;
        this.hover = hover;
        this.ordinal = ordinal;
    }
}
function $d1bb45e72f002bd1$var$executeProvider(provider, ordinal, model, position, token) {
    return $d1bb45e72f002bd1$var$__awaiter(this, void 0, void 0, function*() {
        try {
            const result = yield Promise.resolve(provider.provideHover(model, position, token));
            if (result && $d1bb45e72f002bd1$var$isValid(result)) return new $d1bb45e72f002bd1$export$b4cb00c725d0d256(provider, result, ordinal);
        } catch (err) {
            $gPkHZ.onUnexpectedExternalError(err);
        }
        return undefined;
    });
}
function $d1bb45e72f002bd1$export$6e0a32f513b2f3d3(model, position, token) {
    const providers = $4PmRQ.HoverProviderRegistry.ordered(model);
    const promises = providers.map((provider, index)=>$d1bb45e72f002bd1$var$executeProvider(provider, index, model, position, token)
    );
    return $6bXyA.AsyncIterableObject.fromPromises(promises).coalesce();
}
function $d1bb45e72f002bd1$export$8471e987413ee246(model, position, token) {
    return $d1bb45e72f002bd1$export$6e0a32f513b2f3d3(model, position, token).map((item)=>item.hover
    ).toPromise();
}
$2iJTi.registerModelAndPositionCommand('_executeHoverProvider', (model, position)=>$d1bb45e72f002bd1$export$8471e987413ee246(model, position, $giPcZ.CancellationToken.None)
);
function $d1bb45e72f002bd1$var$isValid(result) {
    const hasRange = typeof result.range !== 'undefined';
    const hasHtmlContent = typeof result.contents !== 'undefined' && result.contents && result.contents.length > 0;
    return hasRange && hasHtmlContent;
}



var $4dEdH = parcelRequire("4dEdH");

var $35IZ9 = parcelRequire("35IZ9");

var $iAi3o = parcelRequire("iAi3o");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $8459e7f81eef09f2$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var $8459e7f81eef09f2$var$__param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
};
const $8459e7f81eef09f2$var$$ = $bDzmQ.$;
class $8459e7f81eef09f2$export$de5210377542b3f9 {
    constructor(owner, range, contents, ordinal){
        this.owner = owner;
        this.range = range;
        this.contents = contents;
        this.ordinal = ordinal;
    }
    isValidForHoverAnchor(anchor) {
        return anchor.type === 1 /* Range */  && this.range.startColumn <= anchor.range.startColumn && this.range.endColumn >= anchor.range.endColumn;
    }
}
let $8459e7f81eef09f2$export$db7233c4b0ae81a2 = class $8459e7f81eef09f2$export$db7233c4b0ae81a2 {
    constructor(_editor, _hover, _modeService, _openerService, _configurationService){
        this._editor = _editor;
        this._hover = _hover;
        this._modeService = _modeService;
        this._openerService = _openerService;
        this._configurationService = _configurationService;
    }
    createLoadingMessage(anchor) {
        return new $8459e7f81eef09f2$export$de5210377542b3f9(this, anchor.range, [
            new $iGmb0.MarkdownString().appendText($4dEdH.localize('modesContentHover.loading', "Loading..."))
        ], 2000);
    }
    computeSync(anchor, lineDecorations) {
        if (!this._editor.hasModel() || anchor.type !== 1 /* Range */ ) return [];
        const model = this._editor.getModel();
        const lineNumber = anchor.range.startLineNumber;
        const maxColumn = model.getLineMaxColumn(lineNumber);
        const result = [];
        let index = 1000;
        const lineLength = model.getLineLength(lineNumber);
        const languageId = model.getLanguageIdAtPosition(anchor.range.startLineNumber, anchor.range.startColumn);
        const maxTokenizationLineLength = this._configurationService.getValue('editor.maxTokenizationLineLength', {
            overrideIdentifier: languageId
        });
        if (typeof maxTokenizationLineLength === 'number' && lineLength >= maxTokenizationLineLength) result.push(new $8459e7f81eef09f2$export$de5210377542b3f9(this, anchor.range, [
            {
                value: $4dEdH.localize('too many characters', "Tokenization is skipped for long lines for performance reasons. This can be configured via `editor.maxTokenizationLineLength`.")
            }
        ], index++));
        for (const d of lineDecorations){
            const startColumn = d.range.startLineNumber === lineNumber ? d.range.startColumn : 1;
            const endColumn = d.range.endLineNumber === lineNumber ? d.range.endColumn : maxColumn;
            const hoverMessage = d.options.hoverMessage;
            if (!hoverMessage || $iGmb0.isEmptyMarkdownString(hoverMessage)) continue;
            const range = new $d00il.Range(anchor.range.startLineNumber, startColumn, anchor.range.startLineNumber, endColumn);
            result.push(new $8459e7f81eef09f2$export$de5210377542b3f9(this, range, $kJ8UG.asArray(hoverMessage), index++));
        }
        return result;
    }
    computeAsync(anchor, lineDecorations, token) {
        if (!this._editor.hasModel() || anchor.type !== 1 /* Range */ ) return $6bXyA.AsyncIterableObject.EMPTY;
        const model = this._editor.getModel();
        if (!$4PmRQ.HoverProviderRegistry.has(model)) return $6bXyA.AsyncIterableObject.EMPTY;
        const position = new $dcxQ7.Position(anchor.range.startLineNumber, anchor.range.startColumn);
        return $d1bb45e72f002bd1$exports.getHover(model, position, token).filter((item)=>!$iGmb0.isEmptyMarkdownString(item.hover.contents)
        ).map((item)=>{
            const rng = item.hover.range ? $d00il.Range.lift(item.hover.range) : anchor.range;
            return new $8459e7f81eef09f2$export$de5210377542b3f9(this, rng, item.hover.contents, item.ordinal);
        });
    }
    renderHoverParts(hoverParts, fragment, statusBar) {
        return $8459e7f81eef09f2$export$d74d68ef545bd110(hoverParts, fragment, this._editor, this._hover, this._modeService, this._openerService);
    }
};
$8459e7f81eef09f2$export$db7233c4b0ae81a2 = $8459e7f81eef09f2$var$__decorate([
    $8459e7f81eef09f2$var$__param(2, $is5YK.IModeService),
    $8459e7f81eef09f2$var$__param(3, $iAi3o.IOpenerService),
    $8459e7f81eef09f2$var$__param(4, $35IZ9.IConfigurationService)
], $8459e7f81eef09f2$export$db7233c4b0ae81a2);
function $8459e7f81eef09f2$export$d74d68ef545bd110(hoverParts, fragment, editor, hover, modeService, openerService) {
    // Sort hover parts to keep them stable since they might come in async, out-of-order
    hoverParts.sort((a, b)=>a.ordinal - b.ordinal
    );
    const disposables = new $9cWcn.DisposableStore();
    for (const hoverPart of hoverParts)for (const contents of hoverPart.contents){
        if ($iGmb0.isEmptyMarkdownString(contents)) continue;
        const markdownHoverElement = $8459e7f81eef09f2$var$$('div.hover-row.markdown-hover');
        const hoverContentsElement = $bDzmQ.append(markdownHoverElement, $8459e7f81eef09f2$var$$('div.hover-contents'));
        const renderer = disposables.add(new $0f615ea767437954$exports.MarkdownRenderer({
            editor: editor
        }, modeService, openerService));
        disposables.add(renderer.onDidRenderAsync(()=>{
            hoverContentsElement.className = 'hover-contents code-hover-contents';
            hover.onContentsChanged();
        }));
        const renderedContents = disposables.add(renderer.render(contents));
        hoverContentsElement.appendChild(renderedContents.element);
        fragment.appendChild(markdownHoverElement);
    }
    return disposables;
}


var $f87cd0a2b877197d$exports = {};

$parcel$export($f87cd0a2b877197d$exports, "MarkerHoverParticipant", () => $f87cd0a2b877197d$export$32a9787b1b5ca518, (v) => $f87cd0a2b877197d$export$32a9787b1b5ca518 = v);

var $bDzmQ = parcelRequire("bDzmQ");

var $kJ8UG = parcelRequire("kJ8UG");

var $6bXyA = parcelRequire("6bXyA");

var $gPkHZ = parcelRequire("gPkHZ");

var $9cWcn = parcelRequire("9cWcn");

var $5Aea5 = parcelRequire("5Aea5");

var $d00il = parcelRequire("d00il");

var $9G5lf = parcelRequire("9G5lf");



var $b55fc0a4daee45f3$exports = {};

$parcel$export($b55fc0a4daee45f3$exports, "MarkerController", () => $b55fc0a4daee45f3$export$97b58da131ee49b9, (v) => $b55fc0a4daee45f3$export$97b58da131ee49b9 = v);
$parcel$export($b55fc0a4daee45f3$exports, "NextMarkerAction", () => $b55fc0a4daee45f3$export$d0f8fc22ad9db3b2, (v) => $b55fc0a4daee45f3$export$d0f8fc22ad9db3b2 = v);

var $awgRE = parcelRequire("awgRE");

var $9cWcn = parcelRequire("9cWcn");

var $2iJTi = parcelRequire("2iJTi");

var $2Qfl0 = parcelRequire("2Qfl0");

var $dcxQ7 = parcelRequire("dcxQ7");

var $d00il = parcelRequire("d00il");

var $ibKGQ = parcelRequire("ibKGQ");
var $d6f0b2d1e8b484ac$exports = {};

$parcel$export($d6f0b2d1e8b484ac$exports, "IMarkerNavigationService", () => $d6f0b2d1e8b484ac$export$f7ebd4a56ff523fe, (v) => $d6f0b2d1e8b484ac$export$f7ebd4a56ff523fe = v);

var $kJ8UG = parcelRequire("kJ8UG");

var $5YaSO = parcelRequire("5YaSO");

var $9cWcn = parcelRequire("9cWcn");

var $76Edp = parcelRequire("76Edp");

var $jcr1R = parcelRequire("jcr1R");

var $5OJ54 = parcelRequire("5OJ54");

var $d00il = parcelRequire("d00il");

var $lf2vF = parcelRequire("lf2vF");

var $fdGPu = parcelRequire("fdGPu");

var $enNKM = parcelRequire("enNKM");

var $35IZ9 = parcelRequire("35IZ9");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $d6f0b2d1e8b484ac$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var $d6f0b2d1e8b484ac$var$__param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
};
class $d6f0b2d1e8b484ac$export$184d3b30ff671af4 {
    constructor(marker, index, total){
        this.marker = marker;
        this.index = index;
        this.total = total;
    }
}
let $d6f0b2d1e8b484ac$export$b1f920f775feb297 = class $d6f0b2d1e8b484ac$export$b1f920f775feb297 {
    constructor(resourceFilter, _markerService, _configService){
        this._markerService = _markerService;
        this._configService = _configService;
        this._onDidChange = new $5YaSO.Emitter();
        this.onDidChange = this._onDidChange.event;
        this._dispoables = new $9cWcn.DisposableStore();
        this._markers = [];
        this._nextIdx = -1;
        if ($5OJ54.URI.isUri(resourceFilter)) this._resourceFilter = (uri)=>uri.toString() === resourceFilter.toString()
        ;
        else if (resourceFilter) this._resourceFilter = resourceFilter;
        const compareOrder = this._configService.getValue('problems.sortOrder');
        const compareMarker = (a, b)=>{
            let res = $jcr1R.compare(a.resource.toString(), b.resource.toString());
            if (compareOrder === 'position') res = $d00il.Range.compareRangesUsingStarts(a, b) || $enNKM.MarkerSeverity.compare(a.severity, b.severity);
            else res = $enNKM.MarkerSeverity.compare(a.severity, b.severity) || $d00il.Range.compareRangesUsingStarts(a, b);
            return res;
        };
        const updateMarker = ()=>{
            this._markers = this._markerService.read({
                resource: $5OJ54.URI.isUri(resourceFilter) ? resourceFilter : undefined,
                severities: $enNKM.MarkerSeverity.Error | $enNKM.MarkerSeverity.Warning | $enNKM.MarkerSeverity.Info
            });
            if (typeof resourceFilter === 'function') this._markers = this._markers.filter((m)=>this._resourceFilter(m.resource)
            );
            this._markers.sort(compareMarker);
        };
        updateMarker();
        this._dispoables.add(_markerService.onMarkerChanged((uris)=>{
            if (!this._resourceFilter || uris.some((uri)=>this._resourceFilter(uri)
            )) {
                updateMarker();
                this._nextIdx = -1;
                this._onDidChange.fire();
            }
        }));
    }
    dispose() {
        this._dispoables.dispose();
        this._onDidChange.dispose();
    }
    matches(uri) {
        if (!this._resourceFilter && !uri) return true;
        if (!this._resourceFilter || !uri) return false;
        return this._resourceFilter(uri);
    }
    get selected() {
        const marker = this._markers[this._nextIdx];
        return marker && new $d6f0b2d1e8b484ac$export$184d3b30ff671af4(marker, this._nextIdx + 1, this._markers.length);
    }
    _initIdx(model, position, fwd) {
        let found = false;
        let idx = this._markers.findIndex((marker)=>marker.resource.toString() === model.uri.toString()
        );
        if (idx < 0) {
            idx = $kJ8UG.binarySearch(this._markers, {
                resource: model.uri
            }, (a, b)=>$jcr1R.compare(a.resource.toString(), b.resource.toString())
            );
            if (idx < 0) idx = ~idx;
        }
        for(let i = idx; i < this._markers.length; i++){
            let range = $d00il.Range.lift(this._markers[i]);
            if (range.isEmpty()) {
                const word = model.getWordAtPosition(range.getStartPosition());
                if (word) range = new $d00il.Range(range.startLineNumber, word.startColumn, range.startLineNumber, word.endColumn);
            }
            if (position && (range.containsPosition(position) || position.isBeforeOrEqual(range.getStartPosition()))) {
                this._nextIdx = i;
                found = true;
                break;
            }
            if (this._markers[i].resource.toString() !== model.uri.toString()) break;
        }
        if (!found) // after the last change
        this._nextIdx = fwd ? 0 : this._markers.length - 1;
        if (this._nextIdx < 0) this._nextIdx = this._markers.length - 1;
    }
    resetIndex() {
        this._nextIdx = -1;
    }
    move(fwd, model, position) {
        if (this._markers.length === 0) return false;
        let oldIdx = this._nextIdx;
        if (this._nextIdx === -1) this._initIdx(model, position, fwd);
        else if (fwd) this._nextIdx = (this._nextIdx + 1) % this._markers.length;
        else if (!fwd) this._nextIdx = (this._nextIdx - 1 + this._markers.length) % this._markers.length;
        if (oldIdx !== this._nextIdx) return true;
        return false;
    }
    find(uri, position) {
        let idx = this._markers.findIndex((marker)=>marker.resource.toString() === uri.toString()
        );
        if (idx < 0) return undefined;
        for(; idx < this._markers.length; idx++){
            if ($d00il.Range.containsPosition(this._markers[idx], position)) return new $d6f0b2d1e8b484ac$export$184d3b30ff671af4(this._markers[idx], idx + 1, this._markers.length);
        }
        return undefined;
    }
};
$d6f0b2d1e8b484ac$export$b1f920f775feb297 = $d6f0b2d1e8b484ac$var$__decorate([
    $d6f0b2d1e8b484ac$var$__param(1, $enNKM.IMarkerService),
    $d6f0b2d1e8b484ac$var$__param(2, $35IZ9.IConfigurationService)
], $d6f0b2d1e8b484ac$export$b1f920f775feb297);
const $d6f0b2d1e8b484ac$export$f7ebd4a56ff523fe = $fdGPu.createDecorator('IMarkerNavigationService');
let $d6f0b2d1e8b484ac$var$MarkerNavigationService = class MarkerNavigationService {
    constructor(_markerService, _configService){
        this._markerService = _markerService;
        this._configService = _configService;
        this._provider = new $76Edp.LinkedList();
    }
    getMarkerList(resource) {
        for (let provider of this._provider){
            const result = provider.getMarkerList(resource);
            if (result) return result;
        }
        // default
        return new $d6f0b2d1e8b484ac$export$b1f920f775feb297(resource, this._markerService, this._configService);
    }
};
$d6f0b2d1e8b484ac$var$MarkerNavigationService = $d6f0b2d1e8b484ac$var$__decorate([
    $d6f0b2d1e8b484ac$var$__param(0, $enNKM.IMarkerService),
    $d6f0b2d1e8b484ac$var$__param(1, $35IZ9.IConfigurationService)
], $d6f0b2d1e8b484ac$var$MarkerNavigationService);
$lf2vF.registerSingleton($d6f0b2d1e8b484ac$export$f7ebd4a56ff523fe, $d6f0b2d1e8b484ac$var$MarkerNavigationService, true);



var $4dEdH = parcelRequire("4dEdH");

var $g4v7E = parcelRequire("g4v7E");

var $cxCeF = parcelRequire("cxCeF");

var $fdGPu = parcelRequire("fdGPu");

var $hEsmQ = parcelRequire("hEsmQ");
var $b4b4da5e406d2e39$exports = {};

$parcel$export($b4b4da5e406d2e39$exports, "MarkerNavigationWidget", () => $b4b4da5e406d2e39$export$8ebf142680ed82d6, (v) => $b4b4da5e406d2e39$export$8ebf142680ed82d6 = v);

var $bDzmQ = parcelRequire("bDzmQ");

var $2aRJR = parcelRequire("2aRJR");

var $kJ8UG = parcelRequire("kJ8UG");

var $bjjQO = parcelRequire("bjjQO");

var $5YaSO = parcelRequire("5YaSO");


var $9cWcn = parcelRequire("9cWcn");

var $5Aea5 = parcelRequire("5Aea5");

var $jcr1R = parcelRequire("jcr1R");


var $d00il = parcelRequire("d00il");


var $4dEdH = parcelRequire("4dEdH");


var $g4v7E = parcelRequire("g4v7E");

var $cxCeF = parcelRequire("cxCeF");

var $fdGPu = parcelRequire("fdGPu");

var $8GcbM = parcelRequire("8GcbM");

var $enNKM = parcelRequire("enNKM");

var $iAi3o = parcelRequire("iAi3o");

var $awgRE = parcelRequire("awgRE");

var $2NmM0 = parcelRequire("2NmM0");

var $gaWeX = parcelRequire("gaWeX");

var $azIPz = parcelRequire("azIPz");
var $8d15bba730a7e18d$export$cbca5336efb65586;
(function($8d15bba730a7e18d$export$cbca5336efb65586) {
    function className(severity) {
        switch(severity){
            case $2NmM0.default.Ignore:
                return 'severity-ignore ' + $awgRE.Codicon.info.classNames;
            case $2NmM0.default.Info:
                return $awgRE.Codicon.info.classNames;
            case $2NmM0.default.Warning:
                return $awgRE.Codicon.warning.classNames;
            case $2NmM0.default.Error:
                return $awgRE.Codicon.error.classNames;
            default:
                return '';
        }
    }
    $8d15bba730a7e18d$export$cbca5336efb65586.className = className;
})($8d15bba730a7e18d$export$cbca5336efb65586 || ($8d15bba730a7e18d$export$cbca5336efb65586 = {}));
$azIPz.registerThemingParticipant((theme, collector)=>{
    const errorIconForeground = theme.getColor($gaWeX.problemsErrorIconForeground);
    if (errorIconForeground) {
        const errorCodiconSelector = $awgRE.Codicon.error.cssSelector;
        collector.addRule(`
			.monaco-editor .zone-widget ${errorCodiconSelector},
			.markers-panel .marker-icon${errorCodiconSelector},
			.text-search-provider-messages .providerMessage ${errorCodiconSelector},
			.extensions-viewlet > .extensions ${errorCodiconSelector} {
				color: ${errorIconForeground};
			}
		`);
    }
    const warningIconForeground = theme.getColor($gaWeX.problemsWarningIconForeground);
    if (warningIconForeground) {
        const warningCodiconSelector = $awgRE.Codicon.warning.cssSelector;
        collector.addRule(`
			.monaco-editor .zone-widget ${warningCodiconSelector},
			.markers-panel .marker-icon${warningCodiconSelector},
			.extensions-viewlet > .extensions ${warningCodiconSelector},
			.extension-editor ${warningCodiconSelector},
			.text-search-provider-messages .providerMessage ${warningCodiconSelector},
			.preferences-editor ${warningCodiconSelector} {
				color: ${warningIconForeground};
			}
		`);
    }
    const infoIconForeground = theme.getColor($gaWeX.problemsInfoIconForeground);
    if (infoIconForeground) {
        const infoCodiconSelector = $awgRE.Codicon.info.cssSelector;
        collector.addRule(`
			.monaco-editor .zone-widget ${infoCodiconSelector},
			.markers-panel .marker-icon${infoCodiconSelector},
			.extensions-viewlet > .extensions ${infoCodiconSelector},
			.text-search-provider-messages .providerMessage ${infoCodiconSelector},
			.extension-editor ${infoCodiconSelector} {
				color: ${infoIconForeground};
			}
		`);
    }
});



var $gaWeX = parcelRequire("gaWeX");

var $azIPz = parcelRequire("azIPz");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $b4b4da5e406d2e39$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var $b4b4da5e406d2e39$var$__param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
};
class $b4b4da5e406d2e39$var$MessageWidget {
    constructor(parent, editor, onRelatedInformation, _openerService, _labelService){
        this._openerService = _openerService;
        this._labelService = _labelService;
        this._lines = 0;
        this._longestLineLength = 0;
        this._relatedDiagnostics = new WeakMap();
        this._disposables = new $9cWcn.DisposableStore();
        this._editor = editor;
        const domNode = document.createElement('div');
        domNode.className = 'descriptioncontainer';
        this._messageBlock = document.createElement('div');
        this._messageBlock.classList.add('message');
        this._messageBlock.setAttribute('aria-live', 'assertive');
        this._messageBlock.setAttribute('role', 'alert');
        domNode.appendChild(this._messageBlock);
        this._relatedBlock = document.createElement('div');
        domNode.appendChild(this._relatedBlock);
        this._disposables.add($bDzmQ.addStandardDisposableListener(this._relatedBlock, 'click', (event)=>{
            event.preventDefault();
            const related = this._relatedDiagnostics.get(event.target);
            if (related) onRelatedInformation(related);
        }));
        this._scrollable = new $2aRJR.ScrollableElement(domNode, {
            horizontal: 1 /* Auto */ ,
            vertical: 1 /* Auto */ ,
            useShadows: false,
            horizontalScrollbarSize: 6,
            verticalScrollbarSize: 6
        });
        parent.appendChild(this._scrollable.getDomNode());
        this._disposables.add(this._scrollable.onScroll((e)=>{
            domNode.style.left = `-${e.scrollLeft}px`;
            domNode.style.top = `-${e.scrollTop}px`;
        }));
        this._disposables.add(this._scrollable);
    }
    dispose() {
        $9cWcn.dispose(this._disposables);
    }
    update(marker) {
        const { source: source , message: message , relatedInformation: relatedInformation , code: code  } = marker;
        let sourceAndCodeLength = ((source === null || source === void 0 ? void 0 : source.length) || 0) + 2;
        if (code) {
            if (typeof code === 'string') sourceAndCodeLength += code.length;
            else sourceAndCodeLength += code.value.length;
        }
        const lines = $jcr1R.splitLines(message);
        this._lines = lines.length;
        this._longestLineLength = 0;
        for (const line of lines)this._longestLineLength = Math.max(line.length + sourceAndCodeLength, this._longestLineLength);
        $bDzmQ.clearNode(this._messageBlock);
        this._messageBlock.setAttribute('aria-label', this.getAriaLabel(marker));
        this._editor.applyFontInfo(this._messageBlock);
        let lastLineElement = this._messageBlock;
        for (const line1 of lines){
            lastLineElement = document.createElement('div');
            lastLineElement.innerText = line1;
            if (line1 === '') lastLineElement.style.height = this._messageBlock.style.lineHeight;
            this._messageBlock.appendChild(lastLineElement);
        }
        if (source || code) {
            const detailsElement = document.createElement('span');
            detailsElement.classList.add('details');
            lastLineElement.appendChild(detailsElement);
            if (source) {
                const sourceElement = document.createElement('span');
                sourceElement.innerText = source;
                sourceElement.classList.add('source');
                detailsElement.appendChild(sourceElement);
            }
            if (code) {
                if (typeof code === 'string') {
                    const codeElement = document.createElement('span');
                    codeElement.innerText = `(${code})`;
                    codeElement.classList.add('code');
                    detailsElement.appendChild(codeElement);
                } else {
                    this._codeLink = $bDzmQ.$('a.code-link');
                    this._codeLink.setAttribute('href', `${code.target.toString()}`);
                    this._codeLink.onclick = (e)=>{
                        this._openerService.open(code.target, {
                            allowCommands: true
                        });
                        e.preventDefault();
                        e.stopPropagation();
                    };
                    const codeElement = $bDzmQ.append(this._codeLink, $bDzmQ.$('span'));
                    codeElement.innerText = code.value;
                    detailsElement.appendChild(this._codeLink);
                }
            }
        }
        $bDzmQ.clearNode(this._relatedBlock);
        this._editor.applyFontInfo(this._relatedBlock);
        if ($kJ8UG.isNonEmptyArray(relatedInformation)) {
            const relatedInformationNode = this._relatedBlock.appendChild(document.createElement('div'));
            relatedInformationNode.style.paddingTop = `${Math.floor(this._editor.getOption(58 /* lineHeight */ ) * 0.66)}px`;
            this._lines += 1;
            for (const related of relatedInformation){
                let container = document.createElement('div');
                let relatedResource = document.createElement('a');
                relatedResource.classList.add('filename');
                relatedResource.innerText = `${$41077bc526ea28e1$export$c8ab9bf6b3a1df37(related.resource)}(${related.startLineNumber}, ${related.startColumn}): `;
                relatedResource.title = this._labelService.getUriLabel(related.resource);
                this._relatedDiagnostics.set(relatedResource, related);
                let relatedMessage = document.createElement('span');
                relatedMessage.innerText = related.message;
                container.appendChild(relatedResource);
                container.appendChild(relatedMessage);
                this._lines += 1;
                relatedInformationNode.appendChild(container);
            }
        }
        const fontInfo = this._editor.getOption(43 /* fontInfo */ );
        const scrollWidth = Math.ceil(fontInfo.typicalFullwidthCharacterWidth * this._longestLineLength * 0.75);
        const scrollHeight = fontInfo.lineHeight * this._lines;
        this._scrollable.setScrollDimensions({
            scrollWidth: scrollWidth,
            scrollHeight: scrollHeight
        });
    }
    layout(height, width) {
        this._scrollable.getDomNode().style.height = `${height}px`;
        this._scrollable.getDomNode().style.width = `${width}px`;
        this._scrollable.setScrollDimensions({
            width: width,
            height: height
        });
    }
    getHeightInLines() {
        return Math.min(17, this._lines);
    }
    getAriaLabel(marker) {
        let severityLabel = '';
        switch(marker.severity){
            case $enNKM.MarkerSeverity.Error:
                severityLabel = $4dEdH.localize('Error', "Error");
                break;
            case $enNKM.MarkerSeverity.Warning:
                severityLabel = $4dEdH.localize('Warning', "Warning");
                break;
            case $enNKM.MarkerSeverity.Info:
                severityLabel = $4dEdH.localize('Info', "Info");
                break;
            case $enNKM.MarkerSeverity.Hint:
                severityLabel = $4dEdH.localize('Hint', "Hint");
                break;
        }
        let ariaLabel = $4dEdH.localize('marker aria', "{0} at {1}. ", severityLabel, marker.startLineNumber + ':' + marker.startColumn);
        const model = this._editor.getModel();
        if (model && marker.startLineNumber <= model.getLineCount() && marker.startLineNumber >= 1) {
            const lineContent = model.getLineContent(marker.startLineNumber);
            ariaLabel = `${lineContent}, ${ariaLabel}`;
        }
        return ariaLabel;
    }
}
let $b4b4da5e406d2e39$export$8ebf142680ed82d6 = class $b4b4da5e406d2e39$export$8ebf142680ed82d6 extends $f45c93015d251d27$exports.PeekViewWidget {
    constructor(editor, _themeService, _openerService, _menuService, instantiationService, _contextKeyService, _labelService){
        super(editor, {
            showArrow: true,
            showFrame: true,
            isAccessible: true,
            frameWidth: 1
        }, instantiationService);
        this._themeService = _themeService;
        this._openerService = _openerService;
        this._menuService = _menuService;
        this._contextKeyService = _contextKeyService;
        this._labelService = _labelService;
        this._callOnDispose = new $9cWcn.DisposableStore();
        this._onDidSelectRelatedInformation = new $5YaSO.Emitter();
        this.onDidSelectRelatedInformation = this._onDidSelectRelatedInformation.event;
        this._severity = $enNKM.MarkerSeverity.Warning;
        this._backgroundColor = $bjjQO.Color.white;
        this._applyTheme(_themeService.getColorTheme());
        this._callOnDispose.add(_themeService.onDidColorThemeChange(this._applyTheme.bind(this)));
        this.create();
    }
    _applyTheme(theme) {
        this._backgroundColor = theme.getColor($b4b4da5e406d2e39$export$7a6daa92fa461be6);
        let colorId = $b4b4da5e406d2e39$export$ff384e915c6b89ec;
        let headerBackground = $b4b4da5e406d2e39$export$1c5169d3ea37732e;
        if (this._severity === $enNKM.MarkerSeverity.Warning) {
            colorId = $b4b4da5e406d2e39$export$f7008352a1446be1;
            headerBackground = $b4b4da5e406d2e39$export$fff85971e2f6d6a2;
        } else if (this._severity === $enNKM.MarkerSeverity.Info) {
            colorId = $b4b4da5e406d2e39$export$d670a0e9c7d1cc5;
            headerBackground = $b4b4da5e406d2e39$export$fb5ac90b8038d767;
        }
        const frameColor = theme.getColor(colorId);
        const headerBg = theme.getColor(headerBackground);
        this.style({
            arrowColor: frameColor,
            frameColor: frameColor,
            headerBackgroundColor: headerBg,
            primaryHeadingColor: theme.getColor($f45c93015d251d27$exports.peekViewTitleForeground),
            secondaryHeadingColor: theme.getColor($f45c93015d251d27$exports.peekViewTitleInfoForeground)
        }); // style() will trigger _applyStyles
    }
    _applyStyles() {
        if (this._parentContainer) this._parentContainer.style.backgroundColor = this._backgroundColor ? this._backgroundColor.toString() : '';
        super._applyStyles();
    }
    dispose() {
        this._callOnDispose.dispose();
        super.dispose();
    }
    _fillHead(container) {
        super._fillHead(container);
        this._disposables.add(this._actionbarWidget.actionRunner.onBeforeRun((e)=>this.editor.focus()
        ));
        const actions = [];
        const menu = this._menuService.createMenu($b4b4da5e406d2e39$export$8ebf142680ed82d6.TitleMenu, this._contextKeyService);
        $c8327240e537732a$exports.createAndFillInActionBarActions(menu, undefined, actions);
        this._actionbarWidget.push(actions, {
            label: false,
            icon: true,
            index: 0
        });
        menu.dispose();
    }
    _fillTitleIcon(container) {
        this._icon = $bDzmQ.append(container, $bDzmQ.$(''));
    }
    _fillBody(container) {
        this._parentContainer = container;
        container.classList.add('marker-widget');
        this._parentContainer.tabIndex = 0;
        this._parentContainer.setAttribute('role', 'tooltip');
        this._container = document.createElement('div');
        container.appendChild(this._container);
        this._message = new $b4b4da5e406d2e39$var$MessageWidget(this._container, this.editor, (related)=>this._onDidSelectRelatedInformation.fire(related)
        , this._openerService, this._labelService);
        this._disposables.add(this._message);
    }
    show() {
        throw new Error('call showAtMarker');
    }
    showAtMarker(marker, markerIdx, markerCount) {
        // update:
        // * title
        // * message
        this._container.classList.remove('stale');
        this._message.update(marker);
        // update frame color (only applied on 'show')
        this._severity = marker.severity;
        this._applyTheme(this._themeService.getColorTheme());
        // show
        let range = $d00il.Range.lift(marker);
        const editorPosition = this.editor.getPosition();
        let position = editorPosition && range.containsPosition(editorPosition) ? editorPosition : range.getStartPosition();
        super.show(position, this.computeRequiredHeight());
        const model = this.editor.getModel();
        if (model) {
            const detail = markerCount > 1 ? $4dEdH.localize('problems', "{0} of {1} problems", markerIdx, markerCount) : $4dEdH.localize('change', "{0} of {1} problem", markerIdx, markerCount);
            this.setTitle($5Aea5.basename(model.uri), detail);
        }
        this._icon.className = `codicon ${$8d15bba730a7e18d$export$cbca5336efb65586.className($enNKM.MarkerSeverity.toSeverity(this._severity))}`;
        this.editor.revealPositionNearTop(position, 0 /* Smooth */ );
        this.editor.focus();
    }
    updateMarker(marker) {
        this._container.classList.remove('stale');
        this._message.update(marker);
    }
    showStale() {
        this._container.classList.add('stale');
        this._relayout();
    }
    _doLayoutBody(heightInPixel, widthInPixel) {
        super._doLayoutBody(heightInPixel, widthInPixel);
        this._heightInPixel = heightInPixel;
        this._message.layout(heightInPixel, widthInPixel);
        this._container.style.height = `${heightInPixel}px`;
    }
    _onWidth(widthInPixel) {
        this._message.layout(this._heightInPixel, widthInPixel);
    }
    _relayout() {
        super._relayout(this.computeRequiredHeight());
    }
    computeRequiredHeight() {
        return 3 + this._message.getHeightInLines();
    }
};
$b4b4da5e406d2e39$export$8ebf142680ed82d6.TitleMenu = new $g4v7E.MenuId('gotoErrorTitleMenu');
$b4b4da5e406d2e39$export$8ebf142680ed82d6 = $b4b4da5e406d2e39$var$__decorate([
    $b4b4da5e406d2e39$var$__param(1, $azIPz.IThemeService),
    $b4b4da5e406d2e39$var$__param(2, $iAi3o.IOpenerService),
    $b4b4da5e406d2e39$var$__param(3, $g4v7E.IMenuService),
    $b4b4da5e406d2e39$var$__param(4, $fdGPu.IInstantiationService),
    $b4b4da5e406d2e39$var$__param(5, $cxCeF.IContextKeyService),
    $b4b4da5e406d2e39$var$__param(6, $8GcbM.ILabelService)
], $b4b4da5e406d2e39$export$8ebf142680ed82d6);
// theming
let $b4b4da5e406d2e39$var$errorDefault = $gaWeX.oneOf($gaWeX.editorErrorForeground, $gaWeX.editorErrorBorder);
let $b4b4da5e406d2e39$var$warningDefault = $gaWeX.oneOf($gaWeX.editorWarningForeground, $gaWeX.editorWarningBorder);
let $b4b4da5e406d2e39$var$infoDefault = $gaWeX.oneOf($gaWeX.editorInfoForeground, $gaWeX.editorInfoBorder);
const $b4b4da5e406d2e39$export$ff384e915c6b89ec = $gaWeX.registerColor('editorMarkerNavigationError.background', {
    dark: $b4b4da5e406d2e39$var$errorDefault,
    light: $b4b4da5e406d2e39$var$errorDefault,
    hc: $gaWeX.contrastBorder
}, $4dEdH.localize('editorMarkerNavigationError', 'Editor marker navigation widget error color.'));
const $b4b4da5e406d2e39$export$1c5169d3ea37732e = $gaWeX.registerColor('editorMarkerNavigationError.headerBackground', {
    dark: $gaWeX.transparent($b4b4da5e406d2e39$export$ff384e915c6b89ec, 0.1),
    light: $gaWeX.transparent($b4b4da5e406d2e39$export$ff384e915c6b89ec, 0.1),
    hc: null
}, $4dEdH.localize('editorMarkerNavigationErrorHeaderBackground', 'Editor marker navigation widget error heading background.'));
const $b4b4da5e406d2e39$export$f7008352a1446be1 = $gaWeX.registerColor('editorMarkerNavigationWarning.background', {
    dark: $b4b4da5e406d2e39$var$warningDefault,
    light: $b4b4da5e406d2e39$var$warningDefault,
    hc: $gaWeX.contrastBorder
}, $4dEdH.localize('editorMarkerNavigationWarning', 'Editor marker navigation widget warning color.'));
const $b4b4da5e406d2e39$export$fff85971e2f6d6a2 = $gaWeX.registerColor('editorMarkerNavigationWarning.headerBackground', {
    dark: $gaWeX.transparent($b4b4da5e406d2e39$export$f7008352a1446be1, 0.1),
    light: $gaWeX.transparent($b4b4da5e406d2e39$export$f7008352a1446be1, 0.1),
    hc: '#0C141F'
}, $4dEdH.localize('editorMarkerNavigationWarningBackground', 'Editor marker navigation widget warning heading background.'));
const $b4b4da5e406d2e39$export$d670a0e9c7d1cc5 = $gaWeX.registerColor('editorMarkerNavigationInfo.background', {
    dark: $b4b4da5e406d2e39$var$infoDefault,
    light: $b4b4da5e406d2e39$var$infoDefault,
    hc: $gaWeX.contrastBorder
}, $4dEdH.localize('editorMarkerNavigationInfo', 'Editor marker navigation widget info color.'));
const $b4b4da5e406d2e39$export$fb5ac90b8038d767 = $gaWeX.registerColor('editorMarkerNavigationInfo.headerBackground', {
    dark: $gaWeX.transparent($b4b4da5e406d2e39$export$d670a0e9c7d1cc5, 0.1),
    light: $gaWeX.transparent($b4b4da5e406d2e39$export$d670a0e9c7d1cc5, 0.1),
    hc: null
}, $4dEdH.localize('editorMarkerNavigationInfoHeaderBackground', 'Editor marker navigation widget info heading background.'));
const $b4b4da5e406d2e39$export$7a6daa92fa461be6 = $gaWeX.registerColor('editorMarkerNavigation.background', {
    dark: $gaWeX.editorBackground,
    light: $gaWeX.editorBackground,
    hc: $gaWeX.editorBackground
}, $4dEdH.localize('editorMarkerNavigationBackground', 'Editor marker navigation widget background.'));


/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $b55fc0a4daee45f3$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var $b55fc0a4daee45f3$var$__param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
};
var $b55fc0a4daee45f3$var$__awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
let $b55fc0a4daee45f3$export$97b58da131ee49b9 = class $b55fc0a4daee45f3$export$97b58da131ee49b9 {
    constructor(editor, _markerNavigationService, _contextKeyService, _editorService, _instantiationService){
        this._markerNavigationService = _markerNavigationService;
        this._contextKeyService = _contextKeyService;
        this._editorService = _editorService;
        this._instantiationService = _instantiationService;
        this._sessionDispoables = new $9cWcn.DisposableStore();
        this._editor = editor;
        this._widgetVisible = $b55fc0a4daee45f3$var$CONTEXT_MARKERS_NAVIGATION_VISIBLE.bindTo(this._contextKeyService);
    }
    static get(editor) {
        return editor.getContribution($b55fc0a4daee45f3$export$97b58da131ee49b9.ID);
    }
    dispose() {
        this._cleanUp();
        this._sessionDispoables.dispose();
    }
    _cleanUp() {
        this._widgetVisible.reset();
        this._sessionDispoables.clear();
        this._widget = undefined;
        this._model = undefined;
    }
    _getOrCreateModel(uri) {
        if (this._model && this._model.matches(uri)) return this._model;
        let reusePosition = false;
        if (this._model) {
            reusePosition = true;
            this._cleanUp();
        }
        this._model = this._markerNavigationService.getMarkerList(uri);
        if (reusePosition) this._model.move(true, this._editor.getModel(), this._editor.getPosition());
        this._widget = this._instantiationService.createInstance($b4b4da5e406d2e39$exports.MarkerNavigationWidget, this._editor);
        this._widget.onDidClose(()=>this.close()
        , this, this._sessionDispoables);
        this._widgetVisible.set(true);
        this._sessionDispoables.add(this._model);
        this._sessionDispoables.add(this._widget);
        // follow cursor
        this._sessionDispoables.add(this._editor.onDidChangeCursorPosition((e)=>{
            var _a, _b, _c;
            if (!((_a = this._model) === null || _a === void 0 ? void 0 : _a.selected) || !$d00il.Range.containsPosition((_b = this._model) === null || _b === void 0 ? void 0 : _b.selected.marker, e.position)) (_c = this._model) === null || _c === void 0 || _c.resetIndex();
        }));
        // update markers
        this._sessionDispoables.add(this._model.onDidChange(()=>{
            if (!this._widget || !this._widget.position || !this._model) return;
            const info = this._model.find(this._editor.getModel().uri, this._widget.position);
            if (info) this._widget.updateMarker(info.marker);
            else this._widget.showStale();
        }));
        // open related
        this._sessionDispoables.add(this._widget.onDidSelectRelatedInformation((related)=>{
            this._editorService.openCodeEditor({
                resource: related.resource,
                options: {
                    pinned: true,
                    revealIfOpened: true,
                    selection: $d00il.Range.lift(related).collapseToStart()
                }
            }, this._editor);
            this.close(false);
        }));
        this._sessionDispoables.add(this._editor.onDidChangeModel(()=>this._cleanUp()
        ));
        return this._model;
    }
    close(focusEditor = true) {
        this._cleanUp();
        if (focusEditor) this._editor.focus();
    }
    showAtMarker(marker) {
        if (this._editor.hasModel()) {
            const model = this._getOrCreateModel(this._editor.getModel().uri);
            model.resetIndex();
            model.move(true, this._editor.getModel(), new $dcxQ7.Position(marker.startLineNumber, marker.startColumn));
            if (model.selected) this._widget.showAtMarker(model.selected.marker, model.selected.index, model.selected.total);
        }
    }
    nagivate(next, multiFile) {
        return $b55fc0a4daee45f3$var$__awaiter(this, void 0, void 0, function*() {
            if (this._editor.hasModel()) {
                const model = this._getOrCreateModel(multiFile ? undefined : this._editor.getModel().uri);
                model.move(next, this._editor.getModel(), this._editor.getPosition());
                if (!model.selected) return;
                if (model.selected.marker.resource.toString() !== this._editor.getModel().uri.toString()) {
                    // show in different editor
                    this._cleanUp();
                    const otherEditor = yield this._editorService.openCodeEditor({
                        resource: model.selected.marker.resource,
                        options: {
                            pinned: false,
                            revealIfOpened: true,
                            selectionRevealType: 2 /* NearTop */ ,
                            selection: model.selected.marker
                        }
                    }, this._editor);
                    if (otherEditor) {
                        $b55fc0a4daee45f3$export$97b58da131ee49b9.get(otherEditor).close();
                        $b55fc0a4daee45f3$export$97b58da131ee49b9.get(otherEditor).nagivate(next, multiFile);
                    }
                } else // show in this editor
                this._widget.showAtMarker(model.selected.marker, model.selected.index, model.selected.total);
            }
        });
    }
};
$b55fc0a4daee45f3$export$97b58da131ee49b9.ID = 'editor.contrib.markerController';
$b55fc0a4daee45f3$export$97b58da131ee49b9 = $b55fc0a4daee45f3$var$__decorate([
    $b55fc0a4daee45f3$var$__param(1, $d6f0b2d1e8b484ac$exports.IMarkerNavigationService),
    $b55fc0a4daee45f3$var$__param(2, $cxCeF.IContextKeyService),
    $b55fc0a4daee45f3$var$__param(3, $2Qfl0.ICodeEditorService),
    $b55fc0a4daee45f3$var$__param(4, $fdGPu.IInstantiationService)
], $b55fc0a4daee45f3$export$97b58da131ee49b9);
class $b55fc0a4daee45f3$var$MarkerNavigationAction extends $2iJTi.EditorAction {
    constructor(_next, _multiFile, opts){
        super(opts);
        this._next = _next;
        this._multiFile = _multiFile;
    }
    run(_accessor, editor) {
        return $b55fc0a4daee45f3$var$__awaiter(this, void 0, void 0, function*() {
            if (editor.hasModel()) $b55fc0a4daee45f3$export$97b58da131ee49b9.get(editor).nagivate(this._next, this._multiFile);
        });
    }
}
class $b55fc0a4daee45f3$export$d0f8fc22ad9db3b2 extends $b55fc0a4daee45f3$var$MarkerNavigationAction {
    constructor(){
        super(true, false, {
            id: $b55fc0a4daee45f3$export$d0f8fc22ad9db3b2.ID,
            label: $b55fc0a4daee45f3$export$d0f8fc22ad9db3b2.LABEL,
            alias: 'Go to Next Problem (Error, Warning, Info)',
            precondition: undefined,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.focus,
                primary: 578 /* F8 */ ,
                weight: 100 /* EditorContrib */ 
            },
            menuOpts: {
                menuId: $b4b4da5e406d2e39$exports.MarkerNavigationWidget.TitleMenu,
                title: $b55fc0a4daee45f3$export$d0f8fc22ad9db3b2.LABEL,
                icon: $hEsmQ.registerIcon('marker-navigation-next', $awgRE.Codicon.arrowDown, $4dEdH.localize('nextMarkerIcon', 'Icon for goto next marker.')),
                group: 'navigation',
                order: 1
            }
        });
    }
}
$b55fc0a4daee45f3$export$d0f8fc22ad9db3b2.ID = 'editor.action.marker.next';
$b55fc0a4daee45f3$export$d0f8fc22ad9db3b2.LABEL = $4dEdH.localize('markerAction.next.label', "Go to Next Problem (Error, Warning, Info)");
class $b55fc0a4daee45f3$var$PrevMarkerAction extends $b55fc0a4daee45f3$var$MarkerNavigationAction {
    constructor(){
        super(false, false, {
            id: $b55fc0a4daee45f3$var$PrevMarkerAction.ID,
            label: $b55fc0a4daee45f3$var$PrevMarkerAction.LABEL,
            alias: 'Go to Previous Problem (Error, Warning, Info)',
            precondition: undefined,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.focus,
                primary: 1602 /* F8 */ ,
                weight: 100 /* EditorContrib */ 
            },
            menuOpts: {
                menuId: $b4b4da5e406d2e39$exports.MarkerNavigationWidget.TitleMenu,
                title: $b55fc0a4daee45f3$export$d0f8fc22ad9db3b2.LABEL,
                icon: $hEsmQ.registerIcon('marker-navigation-previous', $awgRE.Codicon.arrowUp, $4dEdH.localize('previousMarkerIcon', 'Icon for goto previous marker.')),
                group: 'navigation',
                order: 2
            }
        });
    }
}
$b55fc0a4daee45f3$var$PrevMarkerAction.ID = 'editor.action.marker.prev';
$b55fc0a4daee45f3$var$PrevMarkerAction.LABEL = $4dEdH.localize('markerAction.previous.label', "Go to Previous Problem (Error, Warning, Info)");
class $b55fc0a4daee45f3$var$NextMarkerInFilesAction extends $b55fc0a4daee45f3$var$MarkerNavigationAction {
    constructor(){
        super(true, true, {
            id: 'editor.action.marker.nextInFiles',
            label: $4dEdH.localize('markerAction.nextInFiles.label', "Go to Next Problem in Files (Error, Warning, Info)"),
            alias: 'Go to Next Problem in Files (Error, Warning, Info)',
            precondition: undefined,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.focus,
                primary: 66 /* F8 */ ,
                weight: 100 /* EditorContrib */ 
            },
            menuOpts: {
                menuId: $g4v7E.MenuId.MenubarGoMenu,
                title: $4dEdH.localize({
                    key: 'miGotoNextProblem',
                    comment: [
                        '&& denotes a mnemonic'
                    ]
                }, "Next &&Problem"),
                group: '6_problem_nav',
                order: 1
            }
        });
    }
}
class $b55fc0a4daee45f3$var$PrevMarkerInFilesAction extends $b55fc0a4daee45f3$var$MarkerNavigationAction {
    constructor(){
        super(false, true, {
            id: 'editor.action.marker.prevInFiles',
            label: $4dEdH.localize('markerAction.previousInFiles.label', "Go to Previous Problem in Files (Error, Warning, Info)"),
            alias: 'Go to Previous Problem in Files (Error, Warning, Info)',
            precondition: undefined,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.focus,
                primary: 1090 /* F8 */ ,
                weight: 100 /* EditorContrib */ 
            },
            menuOpts: {
                menuId: $g4v7E.MenuId.MenubarGoMenu,
                title: $4dEdH.localize({
                    key: 'miGotoPreviousProblem',
                    comment: [
                        '&& denotes a mnemonic'
                    ]
                }, "Previous &&Problem"),
                group: '6_problem_nav',
                order: 2
            }
        });
    }
}
$2iJTi.registerEditorContribution($b55fc0a4daee45f3$export$97b58da131ee49b9.ID, $b55fc0a4daee45f3$export$97b58da131ee49b9);
$2iJTi.registerEditorAction($b55fc0a4daee45f3$export$d0f8fc22ad9db3b2);
$2iJTi.registerEditorAction($b55fc0a4daee45f3$var$PrevMarkerAction);
$2iJTi.registerEditorAction($b55fc0a4daee45f3$var$NextMarkerInFilesAction);
$2iJTi.registerEditorAction($b55fc0a4daee45f3$var$PrevMarkerInFilesAction);
const $b55fc0a4daee45f3$var$CONTEXT_MARKERS_NAVIGATION_VISIBLE = new $cxCeF.RawContextKey('markersNavigationVisible', false);
const $b55fc0a4daee45f3$var$MarkerCommand = $2iJTi.EditorCommand.bindToContribution($b55fc0a4daee45f3$export$97b58da131ee49b9.get);
$2iJTi.registerEditorCommand(new $b55fc0a4daee45f3$var$MarkerCommand({
    id: 'closeMarkersNavigation',
    precondition: $b55fc0a4daee45f3$var$CONTEXT_MARKERS_NAVIGATION_VISIBLE,
    handler: (x)=>x.close()
    ,
    kbOpts: {
        weight: 150,
        kbExpr: $ibKGQ.EditorContextKeys.focus,
        primary: 9 /* Escape */ ,
        secondary: [
            1033 /* Escape */ 
        ]
    }
}));



var $4dEdH = parcelRequire("4dEdH");

var $enNKM = parcelRequire("enNKM");

var $iAi3o = parcelRequire("iAi3o");

var $4E7vx = parcelRequire("4E7vx");

var $gaWeX = parcelRequire("gaWeX");

var $azIPz = parcelRequire("azIPz");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $f87cd0a2b877197d$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var $f87cd0a2b877197d$var$__param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
};
const $f87cd0a2b877197d$var$$ = $bDzmQ.$;
class $f87cd0a2b877197d$export$c0c5b6dfb6f41d44 {
    constructor(owner, range, marker){
        this.owner = owner;
        this.range = range;
        this.marker = marker;
    }
    isValidForHoverAnchor(anchor) {
        return anchor.type === 1 /* Range */  && this.range.startColumn <= anchor.range.startColumn && this.range.endColumn >= anchor.range.endColumn;
    }
}
const $f87cd0a2b877197d$var$markerCodeActionTrigger = {
    type: 1 /* Invoke */ ,
    filter: {
        include: $9aa3d1d48c7ddba3$export$c72b5966cfff6b4d.QuickFix
    }
};
let $f87cd0a2b877197d$export$32a9787b1b5ca518 = class $f87cd0a2b877197d$export$32a9787b1b5ca518 {
    constructor(_editor, _hover, _markerDecorationsService, _openerService){
        this._editor = _editor;
        this._hover = _hover;
        this._markerDecorationsService = _markerDecorationsService;
        this._openerService = _openerService;
        this.recentMarkerCodeActionsInfo = undefined;
    }
    computeSync(anchor, lineDecorations) {
        if (!this._editor.hasModel() || anchor.type !== 1 /* Range */ ) return [];
        const model = this._editor.getModel();
        const lineNumber = anchor.range.startLineNumber;
        const maxColumn = model.getLineMaxColumn(lineNumber);
        const result = [];
        for (const d of lineDecorations){
            const startColumn = d.range.startLineNumber === lineNumber ? d.range.startColumn : 1;
            const endColumn = d.range.endLineNumber === lineNumber ? d.range.endColumn : maxColumn;
            const marker = this._markerDecorationsService.getMarker(model.uri, d);
            if (!marker) continue;
            const range = new $d00il.Range(anchor.range.startLineNumber, startColumn, anchor.range.startLineNumber, endColumn);
            result.push(new $f87cd0a2b877197d$export$c0c5b6dfb6f41d44(this, range, marker));
        }
        return result;
    }
    renderHoverParts(hoverParts, fragment, statusBar) {
        if (!hoverParts.length) return $9cWcn.Disposable.None;
        const disposables = new $9cWcn.DisposableStore();
        hoverParts.forEach((msg)=>fragment.appendChild(this.renderMarkerHover(msg, disposables))
        );
        const markerHoverForStatusbar = hoverParts.length === 1 ? hoverParts[0] : hoverParts.sort((a, b)=>$enNKM.MarkerSeverity.compare(a.marker.severity, b.marker.severity)
        )[0];
        this.renderMarkerStatusbar(markerHoverForStatusbar, statusBar, disposables);
        return disposables;
    }
    renderMarkerHover(markerHover, disposables) {
        const hoverElement = $f87cd0a2b877197d$var$$('div.hover-row');
        const markerElement = $bDzmQ.append(hoverElement, $f87cd0a2b877197d$var$$('div.marker.hover-contents'));
        const { source: source , message: message , code: code , relatedInformation: relatedInformation  } = markerHover.marker;
        this._editor.applyFontInfo(markerElement);
        const messageElement = $bDzmQ.append(markerElement, $f87cd0a2b877197d$var$$('span'));
        messageElement.style.whiteSpace = 'pre-wrap';
        messageElement.innerText = message;
        if (source || code) {
            // Code has link
            if (code && typeof code !== 'string') {
                const sourceAndCodeElement = $f87cd0a2b877197d$var$$('span');
                if (source) {
                    const sourceElement = $bDzmQ.append(sourceAndCodeElement, $f87cd0a2b877197d$var$$('span'));
                    sourceElement.innerText = source;
                }
                const codeLink = $bDzmQ.append(sourceAndCodeElement, $f87cd0a2b877197d$var$$('a.code-link'));
                codeLink.setAttribute('href', code.target.toString());
                disposables.add($bDzmQ.addDisposableListener(codeLink, 'click', (e)=>{
                    this._openerService.open(code.target, {
                        allowCommands: true
                    });
                    e.preventDefault();
                    e.stopPropagation();
                }));
                const codeElement = $bDzmQ.append(codeLink, $f87cd0a2b877197d$var$$('span'));
                codeElement.innerText = code.value;
                const detailsElement = $bDzmQ.append(markerElement, sourceAndCodeElement);
                detailsElement.style.opacity = '0.6';
                detailsElement.style.paddingLeft = '6px';
            } else {
                const detailsElement = $bDzmQ.append(markerElement, $f87cd0a2b877197d$var$$('span'));
                detailsElement.style.opacity = '0.6';
                detailsElement.style.paddingLeft = '6px';
                detailsElement.innerText = source && code ? `${source}(${code})` : source ? source : `(${code})`;
            }
        }
        if ($kJ8UG.isNonEmptyArray(relatedInformation)) for (const { message: message1 , resource: resource , startLineNumber: startLineNumber , startColumn: startColumn  } of relatedInformation){
            const relatedInfoContainer = $bDzmQ.append(markerElement, $f87cd0a2b877197d$var$$('div'));
            relatedInfoContainer.style.marginTop = '8px';
            const a = $bDzmQ.append(relatedInfoContainer, $f87cd0a2b877197d$var$$('a'));
            a.innerText = `${$5Aea5.basename(resource)}(${startLineNumber}, ${startColumn}): `;
            a.style.cursor = 'pointer';
            disposables.add($bDzmQ.addDisposableListener(a, 'click', (e)=>{
                e.stopPropagation();
                e.preventDefault();
                if (this._openerService) this._openerService.open(resource, {
                    fromUserGesture: true,
                    editorOptions: {
                        selection: {
                            startLineNumber: startLineNumber,
                            startColumn: startColumn
                        }
                    }
                }).catch($gPkHZ.onUnexpectedError);
            }));
            const messageElement = $bDzmQ.append(relatedInfoContainer, $f87cd0a2b877197d$var$$('span'));
            messageElement.innerText = message1;
            this._editor.applyFontInfo(messageElement);
        }
        return hoverElement;
    }
    renderMarkerStatusbar(markerHover, statusBar, disposables) {
        if (markerHover.marker.severity === $enNKM.MarkerSeverity.Error || markerHover.marker.severity === $enNKM.MarkerSeverity.Warning || markerHover.marker.severity === $enNKM.MarkerSeverity.Info) statusBar.addAction({
            label: $4dEdH.localize('view problem', "View Problem"),
            commandId: $b55fc0a4daee45f3$exports.NextMarkerAction.ID,
            run: ()=>{
                this._hover.hide();
                $b55fc0a4daee45f3$exports.MarkerController.get(this._editor).showAtMarker(markerHover.marker);
                this._editor.focus();
            }
        });
        if (!this._editor.getOption(80 /* readOnly */ )) {
            const quickfixPlaceholderElement = statusBar.append($f87cd0a2b877197d$var$$('div'));
            if (this.recentMarkerCodeActionsInfo) {
                if ($enNKM.IMarkerData.makeKey(this.recentMarkerCodeActionsInfo.marker) === $enNKM.IMarkerData.makeKey(markerHover.marker)) {
                    if (!this.recentMarkerCodeActionsInfo.hasCodeActions) quickfixPlaceholderElement.textContent = $4dEdH.localize('noQuickFixes', "No quick fixes available");
                } else this.recentMarkerCodeActionsInfo = undefined;
            }
            const updatePlaceholderDisposable = this.recentMarkerCodeActionsInfo && !this.recentMarkerCodeActionsInfo.hasCodeActions ? $9cWcn.Disposable.None : disposables.add($6bXyA.disposableTimeout(()=>quickfixPlaceholderElement.textContent = $4dEdH.localize('checkingForQuickFixes', "Checking for quick fixes...")
            , 200));
            if (!quickfixPlaceholderElement.textContent) // Have some content in here to avoid flickering
            quickfixPlaceholderElement.textContent = String.fromCharCode(160); // &nbsp;
            const codeActionsPromise = this.getCodeActions(markerHover.marker);
            disposables.add($9cWcn.toDisposable(()=>codeActionsPromise.cancel()
            ));
            codeActionsPromise.then((actions)=>{
                updatePlaceholderDisposable.dispose();
                this.recentMarkerCodeActionsInfo = {
                    marker: markerHover.marker,
                    hasCodeActions: actions.validActions.length > 0
                };
                if (!this.recentMarkerCodeActionsInfo.hasCodeActions) {
                    actions.dispose();
                    quickfixPlaceholderElement.textContent = $4dEdH.localize('noQuickFixes', "No quick fixes available");
                    return;
                }
                quickfixPlaceholderElement.style.display = 'none';
                let showing = false;
                disposables.add($9cWcn.toDisposable(()=>{
                    if (!showing) actions.dispose();
                }));
                statusBar.addAction({
                    label: $4dEdH.localize('quick fixes', "Quick Fix..."),
                    commandId: $f851b37e0ba4c126$exports.QuickFixAction.Id,
                    run: (target)=>{
                        showing = true;
                        const controller = $f851b37e0ba4c126$exports.QuickFixController.get(this._editor);
                        const elementPosition = $bDzmQ.getDomNodePagePosition(target);
                        // Hide the hover pre-emptively, otherwise the editor can close the code actions
                        // context menu as well when using keyboard navigation
                        this._hover.hide();
                        controller.showCodeActions($f87cd0a2b877197d$var$markerCodeActionTrigger, actions, {
                            x: elementPosition.left + 6,
                            y: elementPosition.top + elementPosition.height + 6
                        });
                    }
                });
            }, $gPkHZ.onUnexpectedError);
        }
    }
    getCodeActions(marker) {
        return $6bXyA.createCancelablePromise((cancellationToken)=>{
            return $c8a1288d9cef392a$exports.getCodeActions(this._editor.getModel(), new $d00il.Range(marker.startLineNumber, marker.startColumn, marker.endLineNumber, marker.endColumn), $f87cd0a2b877197d$var$markerCodeActionTrigger, $4E7vx.Progress.None, cancellationToken);
        });
    }
};
$f87cd0a2b877197d$export$32a9787b1b5ca518 = $f87cd0a2b877197d$var$__decorate([
    $f87cd0a2b877197d$var$__param(2, $9G5lf.IMarkerDecorationsService),
    $f87cd0a2b877197d$var$__param(3, $iAi3o.IOpenerService)
], $f87cd0a2b877197d$export$32a9787b1b5ca518);
$azIPz.registerThemingParticipant((theme, collector)=>{
    const linkFg = theme.getColor($gaWeX.textLinkForeground);
    if (linkFg) collector.addRule(`.monaco-hover .hover-contents a.code-link span { color: ${linkFg}; }`);
    const activeLinkFg = theme.getColor($gaWeX.textLinkActiveForeground);
    if (activeLinkFg) collector.addRule(`.monaco-hover .hover-contents a.code-link span:hover { color: ${activeLinkFg}; }`);
});


var $a95621aefca04020$exports = {};

$parcel$export($a95621aefca04020$exports, "InlineCompletionsHoverParticipant", () => $a95621aefca04020$export$85c63d130bb225cb, (v) => $a95621aefca04020$export$85c63d130bb225cb = v);

var $bDzmQ = parcelRequire("bDzmQ");

var $iGmb0 = parcelRequire("iGmb0");

var $9cWcn = parcelRequire("9cWcn");


var $d00il = parcelRequire("d00il");

var $is5YK = parcelRequire("is5YK");

var $dadbf4ad7ee2ca71$exports = {};

$parcel$export($dadbf4ad7ee2ca71$exports, "GhostTextController", () => $dadbf4ad7ee2ca71$export$ffa5b9ac8848b7ee, (v) => $dadbf4ad7ee2ca71$export$ffa5b9ac8848b7ee = v);
$parcel$export($dadbf4ad7ee2ca71$exports, "commitInlineSuggestionAction", () => $dadbf4ad7ee2ca71$export$6bdad8075dfe5c6b, (v) => $dadbf4ad7ee2ca71$export$6bdad8075dfe5c6b = v);
$parcel$export($dadbf4ad7ee2ca71$exports, "ShowNextInlineSuggestionAction", () => $dadbf4ad7ee2ca71$export$57edbf9569cc9779, (v) => $dadbf4ad7ee2ca71$export$57edbf9569cc9779 = v);
$parcel$export($dadbf4ad7ee2ca71$exports, "ShowPreviousInlineSuggestionAction", () => $dadbf4ad7ee2ca71$export$deb45c643cbebb10, (v) => $dadbf4ad7ee2ca71$export$deb45c643cbebb10 = v);

var $9cWcn = parcelRequire("9cWcn");

var $jcr1R = parcelRequire("jcr1R");

var $2iJTi = parcelRequire("2iJTi");

var $gLGey = parcelRequire("gLGey");

var $ibKGQ = parcelRequire("ibKGQ");
const $61a2bfdf10b08408$export$f1235a78c589a102 = 'editor.action.inlineSuggest.commit';


var $875a3147a301ee65$exports = {};

$parcel$export($875a3147a301ee65$exports, "GhostTextModel", () => $875a3147a301ee65$export$c35e2fb758843dde, (v) => $875a3147a301ee65$export$c35e2fb758843dde = v);

var $5YaSO = parcelRequire("5YaSO");

var $9cWcn = parcelRequire("9cWcn");

var $dcxQ7 = parcelRequire("dcxQ7");

var $4PmRQ = parcelRequire("4PmRQ");
var $5e15e07d10d57848$exports = {};

$parcel$export($5e15e07d10d57848$exports, "InlineCompletionsModel", () => $5e15e07d10d57848$export$5323521c789f2485, (v) => $5e15e07d10d57848$export$5323521c789f2485 = v);
$parcel$export($5e15e07d10d57848$exports, "provideInlineCompletions", () => $5e15e07d10d57848$export$eb35bd557f596021, (v) => $5e15e07d10d57848$export$eb35bd557f596021 = v);
$parcel$export($5e15e07d10d57848$exports, "UpdateOperation", () => $5e15e07d10d57848$export$fcd951c1cbced25, (v) => $5e15e07d10d57848$export$fcd951c1cbced25 = v);
$parcel$export($5e15e07d10d57848$exports, "SynchronizedInlineCompletionsCache", () => $5e15e07d10d57848$export$f1e185e738fbe6, (v) => $5e15e07d10d57848$export$f1e185e738fbe6 = v);
$parcel$export($5e15e07d10d57848$exports, "minimizeInlineCompletion", () => $5e15e07d10d57848$export$5a88d2c8f5e7fefc, (v) => $5e15e07d10d57848$export$5a88d2c8f5e7fefc = v);

var $6bXyA = parcelRequire("6bXyA");

var $giPcZ = parcelRequire("giPcZ");

var $gPkHZ = parcelRequire("gPkHZ");

var $5YaSO = parcelRequire("5YaSO");

var $9cWcn = parcelRequire("9cWcn");

var $jcr1R = parcelRequire("jcr1R");

var $ami5U = parcelRequire("ami5U");

var $kHJv6 = parcelRequire("kHJv6");

var $d00il = parcelRequire("d00il");

var $4PmRQ = parcelRequire("4PmRQ");

var $5YaSO = parcelRequire("5YaSO");

var $9cWcn = parcelRequire("9cWcn");

var $d00il = parcelRequire("d00il");
class $1bc1d87513e0927e$export$9415a6e27591b584 {
    constructor(lineNumber, parts, additionalReservedLineCount = 0){
        this.lineNumber = lineNumber;
        this.parts = parts;
        this.additionalReservedLineCount = additionalReservedLineCount;
    }
    renderForScreenReader(lineText) {
        if (this.parts.length === 0) return '';
        const lastPart = this.parts[this.parts.length - 1];
        const cappedLineText = lineText.substr(0, lastPart.column - 1);
        const text = $1bc1d87513e0927e$var$applyEdits(cappedLineText, this.parts.map((p)=>({
                range: {
                    startLineNumber: 1,
                    endLineNumber: 1,
                    startColumn: p.column,
                    endColumn: p.column
                },
                text: p.lines.join('\n')
            })
        ));
        return text.substring(this.parts[0].column - 1);
    }
}
class $1bc1d87513e0927e$var$PositionOffsetTransformer {
    constructor(text){
        this.lineStartOffsetByLineIdx = [];
        this.lineStartOffsetByLineIdx.push(0);
        for(let i = 0; i < text.length; i++)if (text.charAt(i) === '\n') this.lineStartOffsetByLineIdx.push(i + 1);
    }
    getOffset(position) {
        return this.lineStartOffsetByLineIdx[position.lineNumber - 1] + position.column - 1;
    }
}
function $1bc1d87513e0927e$var$applyEdits(text, edits) {
    const transformer = new $1bc1d87513e0927e$var$PositionOffsetTransformer(text);
    const offsetEdits = edits.map((e)=>{
        const range = $d00il.Range.lift(e.range);
        return {
            startOffset: transformer.getOffset(range.getStartPosition()),
            endOffset: transformer.getOffset(range.getEndPosition()),
            text: e.text
        };
    });
    offsetEdits.sort((a, b)=>b.startOffset - a.startOffset
    );
    for (const edit of offsetEdits)text = text.substring(0, edit.startOffset) + edit.text + text.substring(edit.endOffset);
    return text;
}
class $1bc1d87513e0927e$export$cd17cedf46fe2f2 {
    constructor(column, lines, /**
     * Indicates if this part is a preview of an inline suggestion when a suggestion is previewed.
    */ preview){
        this.column = column;
        this.lines = lines;
        this.preview = preview;
    }
}
class $1bc1d87513e0927e$export$e69a41b67268cb2a extends $9cWcn.Disposable {
    constructor(editor){
        super();
        this.editor = editor;
        this._expanded = undefined;
        this.onDidChangeEmitter = new $5YaSO.Emitter();
        this.onDidChange = this.onDidChangeEmitter.event;
        this._register(editor.onDidChangeConfiguration((e)=>{
            if (e.hasChanged(105 /* suggest */ ) && this._expanded === undefined) this.onDidChangeEmitter.fire();
        }));
    }
    setExpanded(expanded) {
        this._expanded = true;
        this.onDidChangeEmitter.fire();
    }
}



var $8tcMz = parcelRequire("8tcMz");


var $kiSz0 = parcelRequire("kiSz0");

var $jcr1R = parcelRequire("jcr1R");

var $d00il = parcelRequire("d00il");

function $0610dfc0502ff4de$export$11e165236064256b(a, b) {
    if (a === b) return true;
    if (!a || !b) return false;
    return a.range.equalsRange(b.range) && a.text === b.text && a.command === b.command;
}
function $0610dfc0502ff4de$export$31cc5495dc7f07c1(inlineCompletion, textModel, mode, cursorPosition, previewSuffixLength = 0) {
    if (inlineCompletion.range.startLineNumber !== inlineCompletion.range.endLineNumber) // Only single line replacements are supported.
    return undefined;
    const sourceLine = textModel.getLineContent(inlineCompletion.range.startLineNumber);
    const sourceIndentationLength = $jcr1R.getLeadingWhitespace(sourceLine).length;
    const suggestionTouchesIndentation = inlineCompletion.range.startColumn - 1 <= sourceIndentationLength;
    if (suggestionTouchesIndentation) {
        // source:      ··········[······abc]
        //                         ^^^^^^^^^ inlineCompletion.range
        //              ^^^^^^^^^^ ^^^^^^ sourceIndentationLength
        //                         ^^^^^^ replacedIndentation.length
        //                               ^^^ rangeThatDoesNotReplaceIndentation
        // inlineCompletion.text: '··foo'
        //                         ^^ suggestionAddedIndentationLength
        const suggestionAddedIndentationLength = $jcr1R.getLeadingWhitespace(inlineCompletion.text).length;
        const replacedIndentation = sourceLine.substring(inlineCompletion.range.startColumn - 1, sourceIndentationLength);
        const rangeThatDoesNotReplaceIndentation = $d00il.Range.fromPositions(inlineCompletion.range.getStartPosition().delta(0, replacedIndentation.length), inlineCompletion.range.getEndPosition());
        const suggestionWithoutIndentationChange = inlineCompletion.text.startsWith(replacedIndentation) ? inlineCompletion.text.substring(replacedIndentation.length) : inlineCompletion.text.substring(suggestionAddedIndentationLength);
        inlineCompletion = {
            range: rangeThatDoesNotReplaceIndentation,
            text: suggestionWithoutIndentationChange,
            command: inlineCompletion.command
        };
    }
    // This is a single line string
    const valueToBeReplaced = textModel.getValueInRange(inlineCompletion.range);
    const changes = $0610dfc0502ff4de$var$cachingDiff(valueToBeReplaced, inlineCompletion.text);
    if (!changes) // No ghost text in case the diff would be too slow to compute
    return undefined;
    const lineNumber = inlineCompletion.range.startLineNumber;
    const parts = new Array();
    if (mode === 'prefix') {
        const filteredChanges = changes.filter((c)=>c.originalLength === 0
        );
        if (filteredChanges.length > 1 || filteredChanges.length === 1 && filteredChanges[0].originalStart !== valueToBeReplaced.length) // Prefixes only have a single change.
        return undefined;
    }
    const previewStartInCompletionText = inlineCompletion.text.length - previewSuffixLength;
    for (const c1 of changes){
        const insertColumn = inlineCompletion.range.startColumn + c1.originalStart + c1.originalLength;
        if (mode === 'subwordSmart' && cursorPosition && cursorPosition.lineNumber === inlineCompletion.range.startLineNumber && insertColumn < cursorPosition.column) // No ghost text before cursor
        return undefined;
        if (c1.originalLength > 0) return undefined;
        if (c1.modifiedLength === 0) continue;
        const modifiedEnd = c1.modifiedStart + c1.modifiedLength;
        const nonPreviewTextEnd = Math.max(c1.modifiedStart, Math.min(modifiedEnd, previewStartInCompletionText));
        const nonPreviewText = inlineCompletion.text.substring(c1.modifiedStart, nonPreviewTextEnd);
        const italicText = inlineCompletion.text.substring(nonPreviewTextEnd, Math.max(c1.modifiedStart, modifiedEnd));
        if (nonPreviewText.length > 0) {
            const lines = $jcr1R.splitLines(nonPreviewText);
            parts.push(new $1bc1d87513e0927e$export$cd17cedf46fe2f2(insertColumn, lines, false));
        }
        if (italicText.length > 0) {
            const lines = $jcr1R.splitLines(italicText);
            parts.push(new $1bc1d87513e0927e$export$cd17cedf46fe2f2(insertColumn, lines, true));
        }
    }
    return new $1bc1d87513e0927e$export$9415a6e27591b584(lineNumber, parts, 0);
}
let $0610dfc0502ff4de$var$lastRequest = undefined;
function $0610dfc0502ff4de$var$cachingDiff(originalValue, newValue) {
    if (($0610dfc0502ff4de$var$lastRequest === null || $0610dfc0502ff4de$var$lastRequest === void 0 ? void 0 : $0610dfc0502ff4de$var$lastRequest.originalValue) === originalValue && ($0610dfc0502ff4de$var$lastRequest === null || $0610dfc0502ff4de$var$lastRequest === void 0 ? void 0 : $0610dfc0502ff4de$var$lastRequest.newValue) === newValue) return $0610dfc0502ff4de$var$lastRequest === null || $0610dfc0502ff4de$var$lastRequest === void 0 ? void 0 : $0610dfc0502ff4de$var$lastRequest.changes;
    else {
        const changes = $0610dfc0502ff4de$var$smartDiff(originalValue, newValue);
        $0610dfc0502ff4de$var$lastRequest = {
            originalValue: originalValue,
            newValue: newValue,
            changes: changes
        };
        return changes;
    }
}
/**
 * When matching `if ()` with `if (f() = 1) { g(); }`,
 * align it like this:        `if (       )`
 * Not like this:			  `if (  )`
 * Also not like this:		  `if (             )`.
 *
 * The parenthesis are preprocessed to ensure that they match correctly.
 */ function $0610dfc0502ff4de$var$smartDiff(originalValue, newValue) {
    if (originalValue.length > 5000 || newValue.length > 5000) // We don't want to work on strings that are too big
    return undefined;
    function getMaxCharCode(val) {
        let maxCharCode = 0;
        for(let i = 0, len = val.length; i < len; i++){
            const charCode = val.charCodeAt(i);
            if (charCode > maxCharCode) maxCharCode = charCode;
        }
        return maxCharCode;
    }
    const maxCharCode1 = Math.max(getMaxCharCode(originalValue), getMaxCharCode(newValue));
    function getUniqueCharCode(id) {
        if (id < 0) throw new Error('unexpected');
        return maxCharCode1 + id + 1;
    }
    function getElements(source) {
        let level = 0;
        let group = 0;
        const characters = new Int32Array(source.length);
        for(let i = 0, len = source.length; i < len; i++){
            const id = group * 100 + level;
            // TODO support more brackets
            if (source[i] === '(') {
                characters[i] = getUniqueCharCode(2 * id);
                level++;
            } else if (source[i] === ')') {
                characters[i] = getUniqueCharCode(2 * id + 1);
                if (level === 1) group++;
                level = Math.max(level - 1, 0);
            } else characters[i] = source.charCodeAt(i);
        }
        return characters;
    }
    const elements1 = getElements(originalValue);
    const elements2 = getElements(newValue);
    return new $kiSz0.LcsDiff({
        getElements: ()=>elements1
    }, {
        getElements: ()=>elements2
    }).ComputeDiff(false).changes;
}


/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $5e15e07d10d57848$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var $5e15e07d10d57848$var$__param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
};
var $5e15e07d10d57848$var$__awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
let $5e15e07d10d57848$export$5323521c789f2485 = class $5e15e07d10d57848$export$5323521c789f2485 extends $9cWcn.Disposable {
    constructor(editor, cache, commandService){
        super();
        this.editor = editor;
        this.cache = cache;
        this.commandService = commandService;
        this.onDidChangeEmitter = new $5YaSO.Emitter();
        this.onDidChange = this.onDidChangeEmitter.event;
        this.completionSession = this._register(new $9cWcn.MutableDisposable());
        this.active = false;
        this.disposed = false;
        this._register(commandService.onDidExecuteCommand((e)=>{
            // These commands don't trigger onDidType.
            const commands = new Set([
                $ami5U.CoreEditingCommands.Tab.id,
                $ami5U.CoreEditingCommands.DeleteLeft.id,
                $ami5U.CoreEditingCommands.DeleteRight.id,
                $61a2bfdf10b08408$export$f1235a78c589a102,
                'acceptSelectedSuggestion'
            ]);
            if (commands.has(e.commandId) && editor.hasTextFocus()) this.handleUserInput();
        }));
        this._register(this.editor.onDidType((e)=>{
            this.handleUserInput();
        }));
        this._register(this.editor.onDidChangeCursorPosition((e)=>{
            if (this.session && !this.session.isValid) this.hide();
        }));
        this._register($9cWcn.toDisposable(()=>{
            this.disposed = true;
        }));
        this._register(this.editor.onDidBlurEditorWidget(()=>{
            this.hide();
        }));
    }
    handleUserInput() {
        if (this.session && !this.session.isValid) this.hide();
        setTimeout(()=>{
            if (this.disposed) return;
            // Wait for the cursor update that happens in the same iteration loop iteration
            this.startSessionIfTriggered();
        }, 0);
    }
    get session() {
        return this.completionSession.value;
    }
    get ghostText() {
        var _a;
        return (_a = this.session) === null || _a === void 0 ? void 0 : _a.ghostText;
    }
    get minReservedLineCount() {
        return this.session ? this.session.minReservedLineCount : 0;
    }
    setExpanded(expanded) {
        var _a;
        (_a = this.session) === null || _a === void 0 || _a.setExpanded(expanded);
    }
    setActive(active) {
        var _a;
        this.active = active;
        if (active) (_a = this.session) === null || _a === void 0 || _a.scheduleAutomaticUpdate();
    }
    startSessionIfTriggered() {
        const suggestOptions = this.editor.getOption(54 /* inlineSuggest */ );
        if (!suggestOptions.enabled) return;
        if (this.session && this.session.isValid) return;
        this.trigger($4PmRQ.InlineCompletionTriggerKind.Automatic);
    }
    trigger(triggerKind) {
        if (this.completionSession.value) {
            if (triggerKind === $4PmRQ.InlineCompletionTriggerKind.Explicit) this.completionSession.value.ensureUpdateWithExplicitContext();
            return;
        }
        this.completionSession.value = new $5e15e07d10d57848$export$c96bdfbf87b8494b(this.editor, this.editor.getPosition(), ()=>this.active
        , this.commandService, this.cache, triggerKind);
        this.completionSession.value.takeOwnership(this.completionSession.value.onDidChange(()=>{
            this.onDidChangeEmitter.fire();
        }));
    }
    hide() {
        this.completionSession.clear();
        this.onDidChangeEmitter.fire();
    }
    commitCurrentSuggestion() {
        var _a;
        // Don't dispose the session, so that after committing, more suggestions are shown.
        (_a = this.session) === null || _a === void 0 || _a.commitCurrentCompletion();
    }
    showNext() {
        var _a;
        (_a = this.session) === null || _a === void 0 || _a.showNextInlineCompletion();
    }
    showPrevious() {
        var _a;
        (_a = this.session) === null || _a === void 0 || _a.showPreviousInlineCompletion();
    }
    hasMultipleInlineCompletions() {
        var _a;
        return $5e15e07d10d57848$var$__awaiter(this, void 0, void 0, function*() {
            const result = yield (_a = this.session) === null || _a === void 0 ? void 0 : _a.hasMultipleInlineCompletions();
            return result !== undefined ? result : false;
        });
    }
};
$5e15e07d10d57848$export$5323521c789f2485 = $5e15e07d10d57848$var$__decorate([
    $5e15e07d10d57848$var$__param(2, $8tcMz.ICommandService)
], $5e15e07d10d57848$export$5323521c789f2485);
class $5e15e07d10d57848$export$c96bdfbf87b8494b extends $1bc1d87513e0927e$export$e69a41b67268cb2a {
    constructor(editor, triggerPosition, shouldUpdate, commandService, cache, initialTriggerKind){
        super(editor);
        this.triggerPosition = triggerPosition;
        this.shouldUpdate = shouldUpdate;
        this.commandService = commandService;
        this.cache = cache;
        this.initialTriggerKind = initialTriggerKind;
        this.minReservedLineCount = 0;
        this.updateOperation = this._register(new $9cWcn.MutableDisposable());
        this.updateSoon = this._register(new $6bXyA.RunOnceScheduler(()=>{
            let triggerKind = this.initialTriggerKind;
            // All subsequent triggers are automatic.
            this.initialTriggerKind = $4PmRQ.InlineCompletionTriggerKind.Automatic;
            return this.update(triggerKind);
        }, 50));
        //#region Selection
        // We use a semantic id to track the selection even if the cache changes.
        this.currentlySelectedCompletionId = undefined;
        let lastCompletionItem = undefined;
        this._register(this.onDidChange(()=>{
            const currentCompletion = this.currentCompletion;
            if (currentCompletion && currentCompletion.sourceInlineCompletion !== lastCompletionItem) {
                lastCompletionItem = currentCompletion.sourceInlineCompletion;
                const provider = currentCompletion.sourceProvider;
                if (provider.handleItemDidShow) provider.handleItemDidShow(currentCompletion.sourceInlineCompletions, lastCompletionItem);
            }
        }));
        this._register($9cWcn.toDisposable(()=>{
            this.cache.clear();
        }));
        this._register(this.editor.onDidChangeCursorPosition((e)=>{
            if (this.cache.value) this.onDidChangeEmitter.fire();
        }));
        this._register(this.editor.onDidChangeModelContent((e)=>{
            this.scheduleAutomaticUpdate();
        }));
        this._register($4PmRQ.InlineCompletionsProviderRegistry.onDidChange(()=>{
            this.updateSoon.schedule();
        }));
        this.scheduleAutomaticUpdate();
    }
    fixAndGetIndexOfCurrentSelection() {
        if (!this.currentlySelectedCompletionId || !this.cache.value) return 0;
        if (this.cache.value.completions.length === 0) // don't reset the selection in this case
        return 0;
        const idx = this.cache.value.completions.findIndex((v)=>v.semanticId === this.currentlySelectedCompletionId
        );
        if (idx === -1) {
            // Reset the selection so that the selection does not jump back when it appears again
            this.currentlySelectedCompletionId = undefined;
            return 0;
        }
        return idx;
    }
    get currentCachedCompletion() {
        if (!this.cache.value) return undefined;
        return this.cache.value.completions[this.fixAndGetIndexOfCurrentSelection()];
    }
    showNextInlineCompletion() {
        var _a;
        return $5e15e07d10d57848$var$__awaiter(this, void 0, void 0, function*() {
            yield this.ensureUpdateWithExplicitContext();
            const completions = ((_a = this.cache.value) === null || _a === void 0 ? void 0 : _a.completions) || [];
            if (completions.length > 0) {
                const newIdx = (this.fixAndGetIndexOfCurrentSelection() + 1) % completions.length;
                this.currentlySelectedCompletionId = completions[newIdx].semanticId;
            } else this.currentlySelectedCompletionId = undefined;
            this.onDidChangeEmitter.fire();
        });
    }
    showPreviousInlineCompletion() {
        var _a;
        return $5e15e07d10d57848$var$__awaiter(this, void 0, void 0, function*() {
            yield this.ensureUpdateWithExplicitContext();
            const completions = ((_a = this.cache.value) === null || _a === void 0 ? void 0 : _a.completions) || [];
            if (completions.length > 0) {
                const newIdx = (this.fixAndGetIndexOfCurrentSelection() + completions.length - 1) % completions.length;
                this.currentlySelectedCompletionId = completions[newIdx].semanticId;
            } else this.currentlySelectedCompletionId = undefined;
            this.onDidChangeEmitter.fire();
        });
    }
    ensureUpdateWithExplicitContext() {
        var _a;
        return $5e15e07d10d57848$var$__awaiter(this, void 0, void 0, function*() {
            if (this.updateOperation.value) {
                // Restart or wait for current update operation
                if (this.updateOperation.value.triggerKind === $4PmRQ.InlineCompletionTriggerKind.Explicit) yield this.updateOperation.value.promise;
                else yield this.update($4PmRQ.InlineCompletionTriggerKind.Explicit);
            } else if (((_a = this.cache.value) === null || _a === void 0 ? void 0 : _a.triggerKind) !== $4PmRQ.InlineCompletionTriggerKind.Explicit) // Refresh cache
            yield this.update($4PmRQ.InlineCompletionTriggerKind.Explicit);
        });
    }
    hasMultipleInlineCompletions() {
        var _a;
        return $5e15e07d10d57848$var$__awaiter(this, void 0, void 0, function*() {
            yield this.ensureUpdateWithExplicitContext();
            return (((_a = this.cache.value) === null || _a === void 0 ? void 0 : _a.completions.length) || 0) > 1;
        });
    }
    //#endregion
    get ghostText() {
        const currentCompletion = this.currentCompletion;
        const mode = this.editor.getOptions().get(54 /* inlineSuggest */ ).mode;
        return currentCompletion ? $0610dfc0502ff4de$export$31cc5495dc7f07c1(currentCompletion, this.editor.getModel(), mode, this.editor.getPosition()) : undefined;
    }
    get currentCompletion() {
        const completion = this.currentCachedCompletion;
        if (!completion) return undefined;
        return completion.toLiveInlineCompletion();
    }
    get isValid() {
        return this.editor.getPosition().lineNumber === this.triggerPosition.lineNumber;
    }
    scheduleAutomaticUpdate() {
        // Since updateSoon debounces, starvation can happen.
        // To prevent stale cache, we clear the current update operation.
        this.updateOperation.clear();
        this.updateSoon.schedule();
    }
    update(triggerKind) {
        return $5e15e07d10d57848$var$__awaiter(this, void 0, void 0, function*() {
            if (!this.shouldUpdate()) return;
            const position = this.editor.getPosition();
            const promise = $6bXyA.createCancelablePromise((token)=>$5e15e07d10d57848$var$__awaiter(this, void 0, void 0, function*() {
                    let result;
                    try {
                        result = yield $5e15e07d10d57848$export$eb35bd557f596021(position, this.editor.getModel(), {
                            triggerKind: triggerKind,
                            selectedSuggestionInfo: undefined
                        }, token);
                    } catch (e) {
                        $gPkHZ.onUnexpectedError(e);
                        return;
                    }
                    if (token.isCancellationRequested) return;
                    this.cache.setValue(this.editor, result, triggerKind);
                    this.onDidChangeEmitter.fire();
                })
            );
            const operation = new $5e15e07d10d57848$export$fcd951c1cbced25(promise, triggerKind);
            this.updateOperation.value = operation;
            yield promise;
            if (this.updateOperation.value === operation) this.updateOperation.clear();
        });
    }
    takeOwnership(disposable) {
        this._register(disposable);
    }
    commitCurrentCompletion() {
        if (!this.ghostText) // No ghost text was shown for this completion.
        // Thus, we don't want to commit anything.
        return;
        const completion = this.currentCompletion;
        if (completion) this.commit(completion);
    }
    commit(completion) {
        // Mark the cache as stale, but don't dispose it yet,
        // otherwise command args might get disposed.
        const cache = this.cache.clearAndLeak();
        this.editor.executeEdits('inlineSuggestion.accept', [
            $kHJv6.EditOperation.replaceMove(completion.range, completion.text)
        ]);
        if (completion.command) this.commandService.executeCommand(completion.command.id, ...completion.command.arguments || []).finally(()=>{
            cache === null || cache === void 0 || cache.dispose();
        }).then(undefined, $gPkHZ.onUnexpectedExternalError);
        else cache === null || cache === void 0 || cache.dispose();
        this.onDidChangeEmitter.fire();
    }
}
class $5e15e07d10d57848$export$fcd951c1cbced25 {
    constructor(promise, triggerKind){
        this.promise = promise;
        this.triggerKind = triggerKind;
    }
    dispose() {
        this.promise.cancel();
    }
}
class $5e15e07d10d57848$export$f1e185e738fbe6 extends $9cWcn.Disposable {
    constructor(editor, completionsSource, onChange, triggerKind){
        super();
        this.triggerKind = triggerKind;
        const decorationIds = editor.deltaDecorations([], completionsSource.items.map((i)=>({
                range: i.range,
                options: {
                    description: 'inline-completion-tracking-range'
                }
            })
        ));
        this._register($9cWcn.toDisposable(()=>{
            editor.deltaDecorations(decorationIds, []);
        }));
        this.completions = completionsSource.items.map((c, idx)=>new $5e15e07d10d57848$var$CachedInlineCompletion(c, decorationIds[idx])
        );
        this._register(editor.onDidChangeModelContent(()=>{
            let hasChanged = false;
            const model = editor.getModel();
            for (const c of this.completions){
                const newRange = model.getDecorationRange(c.decorationId);
                if (!newRange) {
                    $gPkHZ.onUnexpectedError(new Error('Decoration has no range'));
                    continue;
                }
                if (!c.synchronizedRange.equalsRange(newRange)) {
                    hasChanged = true;
                    c.synchronizedRange = newRange;
                }
            }
            if (hasChanged) onChange();
        }));
        this._register(completionsSource);
    }
}
class $5e15e07d10d57848$var$CachedInlineCompletion {
    constructor(inlineCompletion, decorationId){
        this.inlineCompletion = inlineCompletion;
        this.decorationId = decorationId;
        this.semanticId = JSON.stringify({
            text: this.inlineCompletion.text,
            startLine: this.inlineCompletion.range.startLineNumber,
            startColumn: this.inlineCompletion.range.startColumn,
            command: this.inlineCompletion.command
        });
        this.synchronizedRange = inlineCompletion.range;
    }
    toLiveInlineCompletion() {
        return {
            text: this.inlineCompletion.text,
            range: this.synchronizedRange,
            command: this.inlineCompletion.command,
            sourceProvider: this.inlineCompletion.sourceProvider,
            sourceInlineCompletions: this.inlineCompletion.sourceInlineCompletions,
            sourceInlineCompletion: this.inlineCompletion.sourceInlineCompletion
        };
    }
}
function $5e15e07d10d57848$var$getDefaultRange(position, model) {
    const word = model.getWordAtPosition(position);
    const maxColumn = model.getLineMaxColumn(position.lineNumber);
    // By default, always replace up until the end of the current line.
    // This default might be subject to change!
    return word ? new $d00il.Range(position.lineNumber, word.startColumn, position.lineNumber, maxColumn) : $d00il.Range.fromPositions(position, position.with(undefined, maxColumn));
}
function $5e15e07d10d57848$export$eb35bd557f596021(position, model, context, token = $giPcZ.CancellationToken.None) {
    return $5e15e07d10d57848$var$__awaiter(this, void 0, void 0, function*() {
        const defaultReplaceRange = $5e15e07d10d57848$var$getDefaultRange(position, model);
        const providers = $4PmRQ.InlineCompletionsProviderRegistry.all(model);
        const results = yield Promise.all(providers.map((provider)=>$5e15e07d10d57848$var$__awaiter(this, void 0, void 0, function*() {
                const completions = yield provider.provideInlineCompletions(model, position, context, token);
                return {
                    completions: completions,
                    provider: provider,
                    dispose: ()=>{
                        if (completions) provider.freeInlineCompletions(completions);
                    }
                };
            })
        ));
        const itemsByHash = new Map();
        for (const result1 of results){
            const completions = result1.completions;
            if (completions) for (const item1 of completions.items.map((item)=>({
                    text: item.text,
                    range: item.range ? $d00il.Range.lift(item.range) : defaultReplaceRange,
                    command: item.command,
                    sourceProvider: result1.provider,
                    sourceInlineCompletions: completions,
                    sourceInlineCompletion: item
                })
            )){
                if (item1.range.startLineNumber !== item1.range.endLineNumber) continue;
                itemsByHash.set(JSON.stringify({
                    text: item1.text,
                    range: item1.range
                }), item1);
            }
        }
        return {
            items: [
                ...itemsByHash.values()
            ],
            dispose: ()=>{
                for (const result of results)result.dispose();
            }
        };
    });
}
function $5e15e07d10d57848$export$5a88d2c8f5e7fefc(model, inlineCompletion) {
    if (!inlineCompletion) return inlineCompletion;
    const valueToReplace = model.getValueInRange(inlineCompletion.range);
    const commonPrefixLen = $jcr1R.commonPrefixLength(valueToReplace, inlineCompletion.text);
    const startOffset = model.getOffsetAt(inlineCompletion.range.getStartPosition()) + commonPrefixLen;
    const start = model.getPositionAt(startOffset);
    const remainingValueToReplace = valueToReplace.substr(commonPrefixLen);
    const commonSuffixLen = $jcr1R.commonSuffixLength(remainingValueToReplace, inlineCompletion.text);
    const end = model.getPositionAt(Math.max(startOffset, model.getOffsetAt(inlineCompletion.range.getEndPosition()) - commonSuffixLen));
    return {
        range: $d00il.Range.fromPositions(start, end),
        text: inlineCompletion.text.substr(commonPrefixLen, inlineCompletion.text.length - commonPrefixLen - commonSuffixLen)
    };
}


var $ef606840b16c3ad1$exports = {};

$parcel$export($ef606840b16c3ad1$exports, "SuggestWidgetPreviewModel", () => $ef606840b16c3ad1$export$ebdca630db4b64a2, (v) => $ef606840b16c3ad1$export$ebdca630db4b64a2 = v);

var $6bXyA = parcelRequire("6bXyA");

var $gPkHZ = parcelRequire("gPkHZ");

var $9cWcn = parcelRequire("9cWcn");

var $4PmRQ = parcelRequire("4PmRQ");




var $6bXyA = parcelRequire("6bXyA");

var $5YaSO = parcelRequire("5YaSO");

var $9cWcn = parcelRequire("9cWcn");

var $dcxQ7 = parcelRequire("dcxQ7");

var $d00il = parcelRequire("d00il");
class $ec67e86c75f97474$export$2da42535f3a161df {
    constructor(){
        this.value = '';
        this.pos = 0;
    }
    static isDigitCharacter(ch) {
        return ch >= 48 /* Digit0 */  && ch <= 57 /* Digit9 */ ;
    }
    static isVariableCharacter(ch) {
        return ch === 95 /* Underline */  || ch >= 97 /* a */  && ch <= 122 /* z */  || ch >= 65 /* A */  && ch <= 90 /* Z */ ;
    }
    text(value) {
        this.value = value;
        this.pos = 0;
    }
    tokenText(token) {
        return this.value.substr(token.pos, token.len);
    }
    next() {
        if (this.pos >= this.value.length) return {
            type: 14 /* EOF */ ,
            pos: this.pos,
            len: 0
        };
        let pos = this.pos;
        let len = 0;
        let ch = this.value.charCodeAt(pos);
        let type;
        // static types
        type = $ec67e86c75f97474$export$2da42535f3a161df._table[ch];
        if (typeof type === 'number') {
            this.pos += 1;
            return {
                type: type,
                pos: pos,
                len: 1
            };
        }
        // number
        if ($ec67e86c75f97474$export$2da42535f3a161df.isDigitCharacter(ch)) {
            type = 8 /* Int */ ;
            do {
                len += 1;
                ch = this.value.charCodeAt(pos + len);
            }while ($ec67e86c75f97474$export$2da42535f3a161df.isDigitCharacter(ch))
            this.pos += len;
            return {
                type: type,
                pos: pos,
                len: len
            };
        }
        // variable name
        if ($ec67e86c75f97474$export$2da42535f3a161df.isVariableCharacter(ch)) {
            type = 9 /* VariableName */ ;
            do ch = this.value.charCodeAt(pos + ++len);
            while ($ec67e86c75f97474$export$2da42535f3a161df.isVariableCharacter(ch) || $ec67e86c75f97474$export$2da42535f3a161df.isDigitCharacter(ch))
            this.pos += len;
            return {
                type: type,
                pos: pos,
                len: len
            };
        }
        // format
        type = 10 /* Format */ ;
        do {
            len += 1;
            ch = this.value.charCodeAt(pos + len);
        }while (!isNaN(ch) && typeof $ec67e86c75f97474$export$2da42535f3a161df._table[ch] === 'undefined' // not static token
         && !$ec67e86c75f97474$export$2da42535f3a161df.isDigitCharacter(ch) // not number
         && !$ec67e86c75f97474$export$2da42535f3a161df.isVariableCharacter(ch) // not variable
        )
        this.pos += len;
        return {
            type: type,
            pos: pos,
            len: len
        };
    }
}
$ec67e86c75f97474$export$2da42535f3a161df._table = {
    [36 /* DollarSign */ ]: 0 /* Dollar */ ,
    [58 /* Colon */ ]: 1 /* Colon */ ,
    [44 /* Comma */ ]: 2 /* Comma */ ,
    [123 /* OpenCurlyBrace */ ]: 3 /* CurlyOpen */ ,
    [125 /* CloseCurlyBrace */ ]: 4 /* CurlyClose */ ,
    [92 /* Backslash */ ]: 5 /* Backslash */ ,
    [47 /* Slash */ ]: 6 /* Forwardslash */ ,
    [124 /* Pipe */ ]: 7 /* Pipe */ ,
    [43 /* Plus */ ]: 11 /* Plus */ ,
    [45 /* Dash */ ]: 12 /* Dash */ ,
    [63 /* QuestionMark */ ]: 13 /* QuestionMark */ 
};
class $ec67e86c75f97474$export$e98856a975cab58e {
    constructor(){
        this._children = [];
    }
    appendChild(child) {
        if (child instanceof $ec67e86c75f97474$export$5f1af8db9871e1d6 && this._children[this._children.length - 1] instanceof $ec67e86c75f97474$export$5f1af8db9871e1d6) // this and previous child are text -> merge them
        this._children[this._children.length - 1].value += child.value;
        else {
            // normal adoption of child
            child.parent = this;
            this._children.push(child);
        }
        return this;
    }
    replace(child1, others) {
        const { parent: parent1  } = child1;
        const idx = parent1.children.indexOf(child1);
        const newChildren = parent1.children.slice(0);
        newChildren.splice(idx, 1, ...others);
        parent1._children = newChildren;
        (function _fixParent(children, parent) {
            for (const child of children){
                child.parent = parent;
                _fixParent(child.children, child);
            }
        })(others, parent1);
    }
    get children() {
        return this._children;
    }
    get snippet() {
        let candidate = this;
        while(true){
            if (!candidate) return undefined;
            if (candidate instanceof $ec67e86c75f97474$export$263a781ea79d9666) return candidate;
            candidate = candidate.parent;
        }
    }
    toString() {
        return this.children.reduce((prev, cur)=>prev + cur.toString()
        , '');
    }
    len() {
        return 0;
    }
}
class $ec67e86c75f97474$export$5f1af8db9871e1d6 extends $ec67e86c75f97474$export$e98856a975cab58e {
    constructor(value){
        super();
        this.value = value;
    }
    toString() {
        return this.value;
    }
    len() {
        return this.value.length;
    }
    clone() {
        return new $ec67e86c75f97474$export$5f1af8db9871e1d6(this.value);
    }
}
class $ec67e86c75f97474$export$bdd004e571fcb996 extends $ec67e86c75f97474$export$e98856a975cab58e {
}
class $ec67e86c75f97474$export$84712d0562a614b8 extends $ec67e86c75f97474$export$bdd004e571fcb996 {
    constructor(index){
        super();
        this.index = index;
    }
    static compareByIndex(a, b) {
        if (a.index === b.index) return 0;
        else if (a.isFinalTabstop) return 1;
        else if (b.isFinalTabstop) return -1;
        else if (a.index < b.index) return -1;
        else if (a.index > b.index) return 1;
        else return 0;
    }
    get isFinalTabstop() {
        return this.index === 0;
    }
    get choice() {
        return this._children.length === 1 && this._children[0] instanceof $ec67e86c75f97474$export$32a7462f6a06cbd5 ? this._children[0] : undefined;
    }
    clone() {
        let ret = new $ec67e86c75f97474$export$84712d0562a614b8(this.index);
        if (this.transform) ret.transform = this.transform.clone();
        ret._children = this.children.map((child)=>child.clone()
        );
        return ret;
    }
}
class $ec67e86c75f97474$export$32a7462f6a06cbd5 extends $ec67e86c75f97474$export$e98856a975cab58e {
    constructor(){
        super(...arguments);
        this.options = [];
    }
    appendChild(marker) {
        if (marker instanceof $ec67e86c75f97474$export$5f1af8db9871e1d6) {
            marker.parent = this;
            this.options.push(marker);
        }
        return this;
    }
    toString() {
        return this.options[0].value;
    }
    len() {
        return this.options[0].len();
    }
    clone() {
        let ret = new $ec67e86c75f97474$export$32a7462f6a06cbd5();
        this.options.forEach(ret.appendChild, ret);
        return ret;
    }
}
class $ec67e86c75f97474$export$563a914cafbdc389 extends $ec67e86c75f97474$export$e98856a975cab58e {
    constructor(){
        super(...arguments);
        this.regexp = new RegExp('');
    }
    resolve(value) {
        const _this = this;
        let didMatch = false;
        let ret = value.replace(this.regexp, function() {
            didMatch = true;
            return _this._replace(Array.prototype.slice.call(arguments, 0, -2));
        });
        // when the regex didn't match and when the transform has
        // else branches, then run those
        if (!didMatch && this._children.some((child)=>child instanceof $ec67e86c75f97474$export$917965fbd9eed82f && Boolean(child.elseValue)
        )) ret = this._replace([]);
        return ret;
    }
    _replace(groups) {
        let ret = '';
        for (const marker of this._children)if (marker instanceof $ec67e86c75f97474$export$917965fbd9eed82f) {
            let value = groups[marker.index] || '';
            value = marker.resolve(value);
            ret += value;
        } else ret += marker.toString();
        return ret;
    }
    toString() {
        return '';
    }
    clone() {
        let ret = new $ec67e86c75f97474$export$563a914cafbdc389();
        ret.regexp = new RegExp(this.regexp.source, '' + (this.regexp.ignoreCase ? 'i' : '') + (this.regexp.global ? 'g' : ''));
        ret._children = this.children.map((child)=>child.clone()
        );
        return ret;
    }
}
class $ec67e86c75f97474$export$917965fbd9eed82f extends $ec67e86c75f97474$export$e98856a975cab58e {
    constructor(index, shorthandName, ifValue, elseValue){
        super();
        this.index = index;
        this.shorthandName = shorthandName;
        this.ifValue = ifValue;
        this.elseValue = elseValue;
    }
    resolve(value) {
        if (this.shorthandName === 'upcase') return !value ? '' : value.toLocaleUpperCase();
        else if (this.shorthandName === 'downcase') return !value ? '' : value.toLocaleLowerCase();
        else if (this.shorthandName === 'capitalize') return !value ? '' : value[0].toLocaleUpperCase() + value.substr(1);
        else if (this.shorthandName === 'pascalcase') return !value ? '' : this._toPascalCase(value);
        else if (this.shorthandName === 'camelcase') return !value ? '' : this._toCamelCase(value);
        else if (Boolean(value) && typeof this.ifValue === 'string') return this.ifValue;
        else if (!Boolean(value) && typeof this.elseValue === 'string') return this.elseValue;
        else return value || '';
    }
    _toPascalCase(value) {
        const match = value.match(/[a-z0-9]+/gi);
        if (!match) return value;
        return match.map((word)=>{
            return word.charAt(0).toUpperCase() + word.substr(1).toLowerCase();
        }).join('');
    }
    _toCamelCase(value) {
        const match = value.match(/[a-z0-9]+/gi);
        if (!match) return value;
        return match.map((word, index)=>{
            if (index === 0) return word.toLowerCase();
            else return word.charAt(0).toUpperCase() + word.substr(1).toLowerCase();
        }).join('');
    }
    clone() {
        let ret = new $ec67e86c75f97474$export$917965fbd9eed82f(this.index, this.shorthandName, this.ifValue, this.elseValue);
        return ret;
    }
}
class $ec67e86c75f97474$export$c867a5c9595a1350 extends $ec67e86c75f97474$export$bdd004e571fcb996 {
    constructor(name){
        super();
        this.name = name;
    }
    resolve(resolver) {
        let value = resolver.resolve(this);
        if (this.transform) value = this.transform.resolve(value || '');
        if (value !== undefined) {
            this._children = [
                new $ec67e86c75f97474$export$5f1af8db9871e1d6(value)
            ];
            return true;
        }
        return false;
    }
    clone() {
        const ret = new $ec67e86c75f97474$export$c867a5c9595a1350(this.name);
        if (this.transform) ret.transform = this.transform.clone();
        ret._children = this.children.map((child)=>child.clone()
        );
        return ret;
    }
}
function $ec67e86c75f97474$var$walk(marker, visitor) {
    const stack = [
        ...marker
    ];
    while(stack.length > 0){
        const marker = stack.shift();
        const recurse = visitor(marker);
        if (!recurse) break;
        stack.unshift(...marker.children);
    }
}
class $ec67e86c75f97474$export$263a781ea79d9666 extends $ec67e86c75f97474$export$e98856a975cab58e {
    get placeholderInfo() {
        if (!this._placeholders) {
            // fill in placeholders
            let all = [];
            let last;
            this.walk(function(candidate) {
                if (candidate instanceof $ec67e86c75f97474$export$84712d0562a614b8) {
                    all.push(candidate);
                    last = !last || last.index < candidate.index ? candidate : last;
                }
                return true;
            });
            this._placeholders = {
                all: all,
                last: last
            };
        }
        return this._placeholders;
    }
    get placeholders() {
        const { all: all  } = this.placeholderInfo;
        return all;
    }
    offset(marker) {
        let pos = 0;
        let found = false;
        this.walk((candidate)=>{
            if (candidate === marker) {
                found = true;
                return false;
            }
            pos += candidate.len();
            return true;
        });
        if (!found) return -1;
        return pos;
    }
    fullLen(marker1) {
        let ret = 0;
        $ec67e86c75f97474$var$walk([
            marker1
        ], (marker)=>{
            ret += marker.len();
            return true;
        });
        return ret;
    }
    enclosingPlaceholders(placeholder) {
        let ret = [];
        let { parent: parent  } = placeholder;
        while(parent){
            if (parent instanceof $ec67e86c75f97474$export$84712d0562a614b8) ret.push(parent);
            parent = parent.parent;
        }
        return ret;
    }
    resolveVariables(resolver) {
        this.walk((candidate)=>{
            if (candidate instanceof $ec67e86c75f97474$export$c867a5c9595a1350) {
                if (candidate.resolve(resolver)) this._placeholders = undefined;
            }
            return true;
        });
        return this;
    }
    appendChild(child) {
        this._placeholders = undefined;
        return super.appendChild(child);
    }
    replace(child, others) {
        this._placeholders = undefined;
        return super.replace(child, others);
    }
    clone() {
        let ret = new $ec67e86c75f97474$export$263a781ea79d9666();
        this._children = this.children.map((child)=>child.clone()
        );
        return ret;
    }
    walk(visitor) {
        $ec67e86c75f97474$var$walk(this.children, visitor);
    }
}
class $ec67e86c75f97474$export$e073bfe8583e8fbf {
    constructor(){
        this._scanner = new $ec67e86c75f97474$export$2da42535f3a161df();
        this._token = {
            type: 14 /* EOF */ ,
            pos: 0,
            len: 0
        };
    }
    static escape(value) {
        return value.replace(/\$|}|\\/g, '\\$&');
    }
    static guessNeedsClipboard(template) {
        return /\${?CLIPBOARD/.test(template);
    }
    parse(value, insertFinalTabstop, enforceFinalTabstop) {
        this._scanner.text(value);
        this._token = this._scanner.next();
        const snippet = new $ec67e86c75f97474$export$263a781ea79d9666();
        while(this._parse(snippet));
        // fill in values for placeholders. the first placeholder of an index
        // that has a value defines the value for all placeholders with that index
        const placeholderDefaultValues = new Map();
        const incompletePlaceholders = [];
        let placeholderCount = 0;
        snippet.walk((marker)=>{
            if (marker instanceof $ec67e86c75f97474$export$84712d0562a614b8) {
                placeholderCount += 1;
                if (marker.isFinalTabstop) placeholderDefaultValues.set(0, undefined);
                else if (!placeholderDefaultValues.has(marker.index) && marker.children.length > 0) placeholderDefaultValues.set(marker.index, marker.children);
                else incompletePlaceholders.push(marker);
            }
            return true;
        });
        for (const placeholder of incompletePlaceholders){
            const defaultValues = placeholderDefaultValues.get(placeholder.index);
            if (defaultValues) {
                const clone = new $ec67e86c75f97474$export$84712d0562a614b8(placeholder.index);
                clone.transform = placeholder.transform;
                for (const child of defaultValues)clone.appendChild(child.clone());
                snippet.replace(placeholder, [
                    clone
                ]);
            }
        }
        if (!enforceFinalTabstop) enforceFinalTabstop = placeholderCount > 0 && insertFinalTabstop;
        if (!placeholderDefaultValues.has(0) && enforceFinalTabstop) // the snippet uses placeholders but has no
        // final tabstop defined -> insert at the end
        snippet.appendChild(new $ec67e86c75f97474$export$84712d0562a614b8(0));
        return snippet;
    }
    _accept(type, value) {
        if (type === undefined || this._token.type === type) {
            let ret = !value ? true : this._scanner.tokenText(this._token);
            this._token = this._scanner.next();
            return ret;
        }
        return false;
    }
    _backTo(token) {
        this._scanner.pos = token.pos + token.len;
        this._token = token;
        return false;
    }
    _until(type) {
        const start = this._token;
        while(this._token.type !== type){
            if (this._token.type === 14 /* EOF */ ) return false;
            else if (this._token.type === 5 /* Backslash */ ) {
                const nextToken = this._scanner.next();
                if (nextToken.type !== 0 /* Dollar */  && nextToken.type !== 4 /* CurlyClose */  && nextToken.type !== 5 /* Backslash */ ) return false;
            }
            this._token = this._scanner.next();
        }
        const value = this._scanner.value.substring(start.pos, this._token.pos).replace(/\\(\$|}|\\)/g, '$1');
        this._token = this._scanner.next();
        return value;
    }
    _parse(marker) {
        return this._parseEscaped(marker) || this._parseTabstopOrVariableName(marker) || this._parseComplexPlaceholder(marker) || this._parseComplexVariable(marker) || this._parseAnything(marker);
    }
    // \$, \\, \} -> just text
    _parseEscaped(marker) {
        let value;
        if (value = this._accept(5 /* Backslash */ , true)) {
            // saw a backslash, append escaped token or that backslash
            value = this._accept(0 /* Dollar */ , true) || this._accept(4 /* CurlyClose */ , true) || this._accept(5 /* Backslash */ , true) || value;
            marker.appendChild(new $ec67e86c75f97474$export$5f1af8db9871e1d6(value));
            return true;
        }
        return false;
    }
    // $foo -> variable, $1 -> tabstop
    _parseTabstopOrVariableName(parent) {
        let value;
        const token = this._token;
        const match = this._accept(0 /* Dollar */ ) && (value = this._accept(9 /* VariableName */ , true) || this._accept(8 /* Int */ , true));
        if (!match) return this._backTo(token);
        parent.appendChild(/^\d+$/.test(value) ? new $ec67e86c75f97474$export$84712d0562a614b8(Number(value)) : new $ec67e86c75f97474$export$c867a5c9595a1350(value));
        return true;
    }
    // ${1:<children>}, ${1} -> placeholder
    _parseComplexPlaceholder(parent) {
        let index;
        const token = this._token;
        const match = this._accept(0 /* Dollar */ ) && this._accept(3 /* CurlyOpen */ ) && (index = this._accept(8 /* Int */ , true));
        if (!match) return this._backTo(token);
        const placeholder = new $ec67e86c75f97474$export$84712d0562a614b8(Number(index));
        if (this._accept(1 /* Colon */ )) // ${1:<children>}
        while(true){
            // ...} -> done
            if (this._accept(4 /* CurlyClose */ )) {
                parent.appendChild(placeholder);
                return true;
            }
            if (this._parse(placeholder)) continue;
            // fallback
            parent.appendChild(new $ec67e86c75f97474$export$5f1af8db9871e1d6('${' + index + ':'));
            placeholder.children.forEach(parent.appendChild, parent);
            return true;
        }
        else if (placeholder.index > 0 && this._accept(7 /* Pipe */ )) {
            // ${1|one,two,three|}
            const choice = new $ec67e86c75f97474$export$32a7462f6a06cbd5();
            while(true){
                if (this._parseChoiceElement(choice)) {
                    if (this._accept(2 /* Comma */ )) continue;
                    if (this._accept(7 /* Pipe */ )) {
                        placeholder.appendChild(choice);
                        if (this._accept(4 /* CurlyClose */ )) {
                            // ..|} -> done
                            parent.appendChild(placeholder);
                            return true;
                        }
                    }
                }
                this._backTo(token);
                return false;
            }
        } else if (this._accept(6 /* Forwardslash */ )) {
            // ${1/<regex>/<format>/<options>}
            if (this._parseTransform(placeholder)) {
                parent.appendChild(placeholder);
                return true;
            }
            this._backTo(token);
            return false;
        } else if (this._accept(4 /* CurlyClose */ )) {
            // ${1}
            parent.appendChild(placeholder);
            return true;
        } else // ${1 <- missing curly or colon
        return this._backTo(token);
    }
    _parseChoiceElement(parent) {
        const token = this._token;
        const values = [];
        while(true){
            if (this._token.type === 2 /* Comma */  || this._token.type === 7 /* Pipe */ ) break;
            let value;
            if (value = this._accept(5 /* Backslash */ , true)) // \, \|, or \\
            value = this._accept(2 /* Comma */ , true) || this._accept(7 /* Pipe */ , true) || this._accept(5 /* Backslash */ , true) || value;
            else value = this._accept(undefined, true);
            if (!value) {
                // EOF
                this._backTo(token);
                return false;
            }
            values.push(value);
        }
        if (values.length === 0) {
            this._backTo(token);
            return false;
        }
        parent.appendChild(new $ec67e86c75f97474$export$5f1af8db9871e1d6(values.join('')));
        return true;
    }
    // ${foo:<children>}, ${foo} -> variable
    _parseComplexVariable(parent) {
        let name;
        const token = this._token;
        const match = this._accept(0 /* Dollar */ ) && this._accept(3 /* CurlyOpen */ ) && (name = this._accept(9 /* VariableName */ , true));
        if (!match) return this._backTo(token);
        const variable = new $ec67e86c75f97474$export$c867a5c9595a1350(name);
        if (this._accept(1 /* Colon */ )) // ${foo:<children>}
        while(true){
            // ...} -> done
            if (this._accept(4 /* CurlyClose */ )) {
                parent.appendChild(variable);
                return true;
            }
            if (this._parse(variable)) continue;
            // fallback
            parent.appendChild(new $ec67e86c75f97474$export$5f1af8db9871e1d6('${' + name + ':'));
            variable.children.forEach(parent.appendChild, parent);
            return true;
        }
        else if (this._accept(6 /* Forwardslash */ )) {
            // ${foo/<regex>/<format>/<options>}
            if (this._parseTransform(variable)) {
                parent.appendChild(variable);
                return true;
            }
            this._backTo(token);
            return false;
        } else if (this._accept(4 /* CurlyClose */ )) {
            // ${foo}
            parent.appendChild(variable);
            return true;
        } else // ${foo <- missing curly or colon
        return this._backTo(token);
    }
    _parseTransform(parent) {
        // ...<regex>/<format>/<options>}
        let transform = new $ec67e86c75f97474$export$563a914cafbdc389();
        let regexValue = '';
        let regexOptions = '';
        // (1) /regex
        while(true){
            if (this._accept(6 /* Forwardslash */ )) break;
            let escaped;
            if (escaped = this._accept(5 /* Backslash */ , true)) {
                escaped = this._accept(6 /* Forwardslash */ , true) || escaped;
                regexValue += escaped;
                continue;
            }
            if (this._token.type !== 14 /* EOF */ ) {
                regexValue += this._accept(undefined, true);
                continue;
            }
            return false;
        }
        // (2) /format
        while(true){
            if (this._accept(6 /* Forwardslash */ )) break;
            let escaped;
            if (escaped = this._accept(5 /* Backslash */ , true)) {
                escaped = this._accept(5 /* Backslash */ , true) || this._accept(6 /* Forwardslash */ , true) || escaped;
                transform.appendChild(new $ec67e86c75f97474$export$5f1af8db9871e1d6(escaped));
                continue;
            }
            if (this._parseFormatString(transform) || this._parseAnything(transform)) continue;
            return false;
        }
        // (3) /option
        while(true){
            if (this._accept(4 /* CurlyClose */ )) break;
            if (this._token.type !== 14 /* EOF */ ) {
                regexOptions += this._accept(undefined, true);
                continue;
            }
            return false;
        }
        try {
            transform.regexp = new RegExp(regexValue, regexOptions);
        } catch (e) {
            // invalid regexp
            return false;
        }
        parent.transform = transform;
        return true;
    }
    _parseFormatString(parent) {
        const token = this._token;
        if (!this._accept(0 /* Dollar */ )) return false;
        let complex = false;
        if (this._accept(3 /* CurlyOpen */ )) complex = true;
        let index = this._accept(8 /* Int */ , true);
        if (!index) {
            this._backTo(token);
            return false;
        } else if (!complex) {
            // $1
            parent.appendChild(new $ec67e86c75f97474$export$917965fbd9eed82f(Number(index)));
            return true;
        } else if (this._accept(4 /* CurlyClose */ )) {
            // ${1}
            parent.appendChild(new $ec67e86c75f97474$export$917965fbd9eed82f(Number(index)));
            return true;
        } else if (!this._accept(1 /* Colon */ )) {
            this._backTo(token);
            return false;
        }
        if (this._accept(6 /* Forwardslash */ )) {
            // ${1:/upcase}
            let shorthand = this._accept(9 /* VariableName */ , true);
            if (!shorthand || !this._accept(4 /* CurlyClose */ )) {
                this._backTo(token);
                return false;
            } else {
                parent.appendChild(new $ec67e86c75f97474$export$917965fbd9eed82f(Number(index), shorthand));
                return true;
            }
        } else if (this._accept(11 /* Plus */ )) {
            // ${1:+<if>}
            let ifValue = this._until(4 /* CurlyClose */ );
            if (ifValue) {
                parent.appendChild(new $ec67e86c75f97474$export$917965fbd9eed82f(Number(index), undefined, ifValue, undefined));
                return true;
            }
        } else if (this._accept(12 /* Dash */ )) {
            // ${2:-<else>}
            let elseValue = this._until(4 /* CurlyClose */ );
            if (elseValue) {
                parent.appendChild(new $ec67e86c75f97474$export$917965fbd9eed82f(Number(index), undefined, undefined, elseValue));
                return true;
            }
        } else if (this._accept(13 /* QuestionMark */ )) {
            // ${2:?<if>:<else>}
            let ifValue = this._until(1 /* Colon */ );
            if (ifValue) {
                let elseValue = this._until(4 /* CurlyClose */ );
                if (elseValue) {
                    parent.appendChild(new $ec67e86c75f97474$export$917965fbd9eed82f(Number(index), undefined, ifValue, elseValue));
                    return true;
                }
            }
        } else {
            // ${1:<else>}
            let elseValue = this._until(4 /* CurlyClose */ );
            if (elseValue) {
                parent.appendChild(new $ec67e86c75f97474$export$917965fbd9eed82f(Number(index), undefined, undefined, elseValue));
                return true;
            }
        }
        this._backTo(token);
        return false;
    }
    _parseAnything(marker) {
        if (this._token.type !== 14 /* EOF */ ) {
            marker.appendChild(new $ec67e86c75f97474$export$5f1af8db9871e1d6(this._scanner.tokenText(this._token)));
            this._accept(undefined);
            return true;
        }
        return false;
    }
}



var $kJ8UG = parcelRequire("kJ8UG");

var $9cWcn = parcelRequire("9cWcn");

var $jcr1R = parcelRequire("jcr1R");


var $kHJv6 = parcelRequire("kHJv6");

var $d00il = parcelRequire("d00il");

var $jzicX = parcelRequire("jzicX");

var $91ntV = parcelRequire("91ntV");

var $8GcbM = parcelRequire("8GcbM");

var $6c7bv = parcelRequire("6c7bv");



var $a4dH7 = parcelRequire("a4dH7");

var $5Aea5 = parcelRequire("5Aea5");

var $jcr1R = parcelRequire("jcr1R");
// prep-work
const $0805a875738ca87e$var$_data = new Uint8Array(16);
const $0805a875738ca87e$var$_hex = [];
for(let i = 0; i < 256; i++)$0805a875738ca87e$var$_hex.push(i.toString(16).padStart(2, '0'));
// todo@jrieken - with node@15 crypto#getRandomBytes is available everywhere, https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues#browser_compatibility
let $0805a875738ca87e$var$_fillRandomValues;
if (typeof crypto === 'object' && typeof crypto.getRandomValues === 'function') // browser
$0805a875738ca87e$var$_fillRandomValues = crypto.getRandomValues.bind(crypto);
else $0805a875738ca87e$var$_fillRandomValues = function(bucket) {
    for(let i1 = 0; i1 < bucket.length; i1++)bucket[i1] = Math.floor(Math.random() * 256);
    return bucket;
};
function $0805a875738ca87e$export$1c3aefb711c3a4cc() {
    // get data
    $0805a875738ca87e$var$_fillRandomValues($0805a875738ca87e$var$_data);
    // set version bits
    $0805a875738ca87e$var$_data[6] = $0805a875738ca87e$var$_data[6] & 15 | 64;
    $0805a875738ca87e$var$_data[8] = $0805a875738ca87e$var$_data[8] & 63 | 128;
    // print as string
    let i2 = 0;
    let result = '';
    result += $0805a875738ca87e$var$_hex[$0805a875738ca87e$var$_data[i2++]];
    result += $0805a875738ca87e$var$_hex[$0805a875738ca87e$var$_data[i2++]];
    result += $0805a875738ca87e$var$_hex[$0805a875738ca87e$var$_data[i2++]];
    result += $0805a875738ca87e$var$_hex[$0805a875738ca87e$var$_data[i2++]];
    result += '-';
    result += $0805a875738ca87e$var$_hex[$0805a875738ca87e$var$_data[i2++]];
    result += $0805a875738ca87e$var$_hex[$0805a875738ca87e$var$_data[i2++]];
    result += '-';
    result += $0805a875738ca87e$var$_hex[$0805a875738ca87e$var$_data[i2++]];
    result += $0805a875738ca87e$var$_hex[$0805a875738ca87e$var$_data[i2++]];
    result += '-';
    result += $0805a875738ca87e$var$_hex[$0805a875738ca87e$var$_data[i2++]];
    result += $0805a875738ca87e$var$_hex[$0805a875738ca87e$var$_data[i2++]];
    result += '-';
    result += $0805a875738ca87e$var$_hex[$0805a875738ca87e$var$_data[i2++]];
    result += $0805a875738ca87e$var$_hex[$0805a875738ca87e$var$_data[i2++]];
    result += $0805a875738ca87e$var$_hex[$0805a875738ca87e$var$_data[i2++]];
    result += $0805a875738ca87e$var$_hex[$0805a875738ca87e$var$_data[i2++]];
    result += $0805a875738ca87e$var$_hex[$0805a875738ca87e$var$_data[i2++]];
    result += $0805a875738ca87e$var$_hex[$0805a875738ca87e$var$_data[i2++]];
    return result;
}



var $aKdIg = parcelRequire("aKdIg");


var $4dEdH = parcelRequire("4dEdH");

var $5OJ54 = parcelRequire("5OJ54");
const $310f0fea7da46a96$export$3b0eb959891056fe = 'code-workspace';
function $310f0fea7da46a96$export$8ab0cbf30ebc0326(obj) {
    const singleFolderIdentifier = obj;
    return typeof (singleFolderIdentifier === null || singleFolderIdentifier === void 0 ? void 0 : singleFolderIdentifier.id) === 'string' && $5OJ54.URI.isUri(singleFolderIdentifier.uri);
}
function $310f0fea7da46a96$export$bb743eb0d71b555b(workspace) {
    // Multi root
    if (workspace.configuration) return {
        id: workspace.id,
        configPath: workspace.configuration
    };
    // Single folder
    if (workspace.folders.length === 1) return {
        id: workspace.id,
        uri: workspace.folders[0].uri
    };
    // Empty workspace
    return undefined;
} //#endregion


class $08b575e2cc6c6cf6$export$e3a7bd665cf54cee {
    constructor(_delegates){
        this._delegates = _delegates;
    //
    }
    resolve(variable) {
        for (const delegate of this._delegates){
            let value = delegate.resolve(variable);
            if (value !== undefined) return value;
        }
        return undefined;
    }
}
class $08b575e2cc6c6cf6$export$d2ecf5fbc0b88e32 {
    constructor(_model, _selection, _selectionIdx, _overtypingCapturer){
        this._model = _model;
        this._selection = _selection;
        this._selectionIdx = _selectionIdx;
        this._overtypingCapturer = _overtypingCapturer;
    //
    }
    resolve(variable) {
        const { name: name  } = variable;
        if (name === 'SELECTION' || name === 'TM_SELECTED_TEXT') {
            let value = this._model.getValueInRange(this._selection) || undefined;
            let isMultiline = this._selection.startLineNumber !== this._selection.endLineNumber;
            // If there was no selected text, try to get last overtyped text
            if (!value && this._overtypingCapturer) {
                const info = this._overtypingCapturer.getLastOvertypedInfo(this._selectionIdx);
                if (info) {
                    value = info.value;
                    isMultiline = info.multiline;
                }
            }
            if (value && isMultiline && variable.snippet) {
                // Selection is a multiline string which we indentation we now
                // need to adjust. We compare the indentation of this variable
                // with the indentation at the editor position and add potential
                // extra indentation to the value
                const line = this._model.getLineContent(this._selection.startLineNumber);
                const lineLeadingWhitespace = $jcr1R.getLeadingWhitespace(line, 0, this._selection.startColumn - 1);
                let varLeadingWhitespace = lineLeadingWhitespace;
                variable.snippet.walk((marker)=>{
                    if (marker === variable) return false;
                    if (marker instanceof $ec67e86c75f97474$export$5f1af8db9871e1d6) varLeadingWhitespace = $jcr1R.getLeadingWhitespace($jcr1R.splitLines(marker.value).pop());
                    return true;
                });
                const whitespaceCommonLength = $jcr1R.commonPrefixLength(varLeadingWhitespace, lineLeadingWhitespace);
                value = value.replace(/(\r\n|\r|\n)(.*)/g, (m, newline, rest)=>`${newline}${varLeadingWhitespace.substr(whitespaceCommonLength)}${rest}`
                );
            }
            return value;
        } else if (name === 'TM_CURRENT_LINE') return this._model.getLineContent(this._selection.positionLineNumber);
        else if (name === 'TM_CURRENT_WORD') {
            const info = this._model.getWordAtPosition({
                lineNumber: this._selection.positionLineNumber,
                column: this._selection.positionColumn
            });
            return info && info.word || undefined;
        } else if (name === 'TM_LINE_INDEX') return String(this._selection.positionLineNumber - 1);
        else if (name === 'TM_LINE_NUMBER') return String(this._selection.positionLineNumber);
        return undefined;
    }
}
class $08b575e2cc6c6cf6$export$23aa3af8f3bd9e57 {
    constructor(_labelService, _model){
        this._labelService = _labelService;
        this._model = _model;
    //
    }
    resolve(variable) {
        const { name: name  } = variable;
        if (name === 'TM_FILENAME') return $a4dH7.basename(this._model.uri.fsPath);
        else if (name === 'TM_FILENAME_BASE') {
            const name = $a4dH7.basename(this._model.uri.fsPath);
            const idx = name.lastIndexOf('.');
            if (idx <= 0) return name;
            else return name.slice(0, idx);
        } else if (name === 'TM_DIRECTORY') {
            if ($a4dH7.dirname(this._model.uri.fsPath) === '.') return '';
            return this._labelService.getUriLabel($5Aea5.dirname(this._model.uri));
        } else if (name === 'TM_FILEPATH') return this._labelService.getUriLabel(this._model.uri);
        else if (name === 'RELATIVE_FILEPATH') return this._labelService.getUriLabel(this._model.uri, {
            relative: true,
            noPrefix: true
        });
        return undefined;
    }
}
class $08b575e2cc6c6cf6$export$51fb631a281a1cb7 {
    constructor(_readClipboardText, _selectionIdx, _selectionCount, _spread){
        this._readClipboardText = _readClipboardText;
        this._selectionIdx = _selectionIdx;
        this._selectionCount = _selectionCount;
        this._spread = _spread;
    //
    }
    resolve(variable) {
        if (variable.name !== 'CLIPBOARD') return undefined;
        const clipboardText = this._readClipboardText();
        if (!clipboardText) return undefined;
        // `spread` is assigning each cursor a line of the clipboard
        // text whenever there the line count equals the cursor count
        // and when enabled
        if (this._spread) {
            const lines = clipboardText.split(/\r\n|\n|\r/).filter((s)=>!$jcr1R.isFalsyOrWhitespace(s)
            );
            if (lines.length === this._selectionCount) return lines[this._selectionIdx];
        }
        return clipboardText;
    }
}
class $08b575e2cc6c6cf6$export$93486f5d6db748c0 {
    constructor(_model, _selection){
        this._model = _model;
        this._selection = _selection;
    //
    }
    resolve(variable) {
        const { name: name  } = variable;
        const langId = this._model.getLanguageIdAtPosition(this._selection.selectionStartLineNumber, this._selection.selectionStartColumn);
        const config = $aKdIg.LanguageConfigurationRegistry.getComments(langId);
        if (!config) return undefined;
        if (name === 'LINE_COMMENT') return config.lineCommentToken || undefined;
        else if (name === 'BLOCK_COMMENT_START') return config.blockCommentStartToken || undefined;
        else if (name === 'BLOCK_COMMENT_END') return config.blockCommentEndToken || undefined;
        return undefined;
    }
}
class $08b575e2cc6c6cf6$export$3c8bf74f3a7220f9 {
    constructor(){
        this._date = new Date();
    }
    resolve(variable) {
        const { name: name  } = variable;
        if (name === 'CURRENT_YEAR') return String(this._date.getFullYear());
        else if (name === 'CURRENT_YEAR_SHORT') return String(this._date.getFullYear()).slice(-2);
        else if (name === 'CURRENT_MONTH') return String(this._date.getMonth().valueOf() + 1).padStart(2, '0');
        else if (name === 'CURRENT_DATE') return String(this._date.getDate().valueOf()).padStart(2, '0');
        else if (name === 'CURRENT_HOUR') return String(this._date.getHours().valueOf()).padStart(2, '0');
        else if (name === 'CURRENT_MINUTE') return String(this._date.getMinutes().valueOf()).padStart(2, '0');
        else if (name === 'CURRENT_SECOND') return String(this._date.getSeconds().valueOf()).padStart(2, '0');
        else if (name === 'CURRENT_DAY_NAME') return $08b575e2cc6c6cf6$export$3c8bf74f3a7220f9.dayNames[this._date.getDay()];
        else if (name === 'CURRENT_DAY_NAME_SHORT') return $08b575e2cc6c6cf6$export$3c8bf74f3a7220f9.dayNamesShort[this._date.getDay()];
        else if (name === 'CURRENT_MONTH_NAME') return $08b575e2cc6c6cf6$export$3c8bf74f3a7220f9.monthNames[this._date.getMonth()];
        else if (name === 'CURRENT_MONTH_NAME_SHORT') return $08b575e2cc6c6cf6$export$3c8bf74f3a7220f9.monthNamesShort[this._date.getMonth()];
        else if (name === 'CURRENT_SECONDS_UNIX') return String(Math.floor(this._date.getTime() / 1000));
        return undefined;
    }
}
$08b575e2cc6c6cf6$export$3c8bf74f3a7220f9.dayNames = [
    $4dEdH.localize('Sunday', "Sunday"),
    $4dEdH.localize('Monday', "Monday"),
    $4dEdH.localize('Tuesday', "Tuesday"),
    $4dEdH.localize('Wednesday', "Wednesday"),
    $4dEdH.localize('Thursday', "Thursday"),
    $4dEdH.localize('Friday', "Friday"),
    $4dEdH.localize('Saturday', "Saturday")
];
$08b575e2cc6c6cf6$export$3c8bf74f3a7220f9.dayNamesShort = [
    $4dEdH.localize('SundayShort', "Sun"),
    $4dEdH.localize('MondayShort', "Mon"),
    $4dEdH.localize('TuesdayShort', "Tue"),
    $4dEdH.localize('WednesdayShort', "Wed"),
    $4dEdH.localize('ThursdayShort', "Thu"),
    $4dEdH.localize('FridayShort', "Fri"),
    $4dEdH.localize('SaturdayShort', "Sat")
];
$08b575e2cc6c6cf6$export$3c8bf74f3a7220f9.monthNames = [
    $4dEdH.localize('January', "January"),
    $4dEdH.localize('February', "February"),
    $4dEdH.localize('March', "March"),
    $4dEdH.localize('April', "April"),
    $4dEdH.localize('May', "May"),
    $4dEdH.localize('June', "June"),
    $4dEdH.localize('July', "July"),
    $4dEdH.localize('August', "August"),
    $4dEdH.localize('September', "September"),
    $4dEdH.localize('October', "October"),
    $4dEdH.localize('November', "November"),
    $4dEdH.localize('December', "December")
];
$08b575e2cc6c6cf6$export$3c8bf74f3a7220f9.monthNamesShort = [
    $4dEdH.localize('JanuaryShort', "Jan"),
    $4dEdH.localize('FebruaryShort', "Feb"),
    $4dEdH.localize('MarchShort', "Mar"),
    $4dEdH.localize('AprilShort', "Apr"),
    $4dEdH.localize('MayShort', "May"),
    $4dEdH.localize('JuneShort', "Jun"),
    $4dEdH.localize('JulyShort', "Jul"),
    $4dEdH.localize('AugustShort', "Aug"),
    $4dEdH.localize('SeptemberShort', "Sep"),
    $4dEdH.localize('OctoberShort', "Oct"),
    $4dEdH.localize('NovemberShort', "Nov"),
    $4dEdH.localize('DecemberShort', "Dec")
];
class $08b575e2cc6c6cf6$export$f1d01458dc99b68c {
    constructor(_workspaceService){
        this._workspaceService = _workspaceService;
    //
    }
    resolve(variable) {
        if (!this._workspaceService) return undefined;
        const workspaceIdentifier = $310f0fea7da46a96$export$bb743eb0d71b555b(this._workspaceService.getWorkspace());
        if (!workspaceIdentifier) return undefined;
        if (variable.name === 'WORKSPACE_NAME') return this._resolveWorkspaceName(workspaceIdentifier);
        else if (variable.name === 'WORKSPACE_FOLDER') return this._resoveWorkspacePath(workspaceIdentifier);
        return undefined;
    }
    _resolveWorkspaceName(workspaceIdentifier) {
        if ($310f0fea7da46a96$export$8ab0cbf30ebc0326(workspaceIdentifier)) return $a4dH7.basename(workspaceIdentifier.uri.path);
        let filename = $a4dH7.basename(workspaceIdentifier.configPath.path);
        if (filename.endsWith($310f0fea7da46a96$export$3b0eb959891056fe)) filename = filename.substr(0, filename.length - $310f0fea7da46a96$export$3b0eb959891056fe.length - 1);
        return filename;
    }
    _resoveWorkspacePath(workspaceIdentifier) {
        if ($310f0fea7da46a96$export$8ab0cbf30ebc0326(workspaceIdentifier)) return $41077bc526ea28e1$export$86de3c9238cdb7b7(workspaceIdentifier.uri.fsPath);
        let filename = $a4dH7.basename(workspaceIdentifier.configPath.path);
        let folderpath = workspaceIdentifier.configPath.fsPath;
        if (folderpath.endsWith(filename)) folderpath = folderpath.substr(0, folderpath.length - filename.length - 1);
        return folderpath ? $41077bc526ea28e1$export$86de3c9238cdb7b7(folderpath) : '/';
    }
}
class $08b575e2cc6c6cf6$export$35234542a316122e {
    resolve(variable) {
        const { name: name  } = variable;
        if (name === 'RANDOM') return Math.random().toString().slice(-6);
        else if (name === 'RANDOM_HEX') return Math.random().toString(16).slice(-6);
        else if (name === 'UUID') return $0805a875738ca87e$export$1c3aefb711c3a4cc();
        return undefined;
    }
}


class $3531e4d34dfec17c$export$c14aba13900af0fa {
    constructor(_editor, _snippet, _offset, _snippetLineLeadingWhitespace){
        this._editor = _editor;
        this._snippet = _snippet;
        this._offset = _offset;
        this._snippetLineLeadingWhitespace = _snippetLineLeadingWhitespace;
        this._nestingLevel = 1;
        this._placeholderGroups = $kJ8UG.groupBy(_snippet.placeholders, $ec67e86c75f97474$export$84712d0562a614b8.compareByIndex);
        this._placeholderGroupsIdx = -1;
    }
    dispose() {
        if (this._placeholderDecorations) this._editor.deltaDecorations([
            ...this._placeholderDecorations.values()
        ], []);
        this._placeholderGroups.length = 0;
    }
    _initDecorations() {
        if (this._placeholderDecorations) // already initialized
        return;
        this._placeholderDecorations = new Map();
        const model = this._editor.getModel();
        this._editor.changeDecorations((accessor)=>{
            // create a decoration for each placeholder
            for (const placeholder of this._snippet.placeholders){
                const placeholderOffset = this._snippet.offset(placeholder);
                const placeholderLen = this._snippet.fullLen(placeholder);
                const range = $d00il.Range.fromPositions(model.getPositionAt(this._offset + placeholderOffset), model.getPositionAt(this._offset + placeholderOffset + placeholderLen));
                const options = placeholder.isFinalTabstop ? $3531e4d34dfec17c$export$c14aba13900af0fa._decor.inactiveFinal : $3531e4d34dfec17c$export$c14aba13900af0fa._decor.inactive;
                const handle = accessor.addDecoration(range, options);
                this._placeholderDecorations.set(placeholder, handle);
            }
        });
    }
    move(fwd) {
        if (!this._editor.hasModel()) return [];
        this._initDecorations();
        // Transform placeholder text if necessary
        if (this._placeholderGroupsIdx >= 0) {
            let operations = [];
            for (const placeholder of this._placeholderGroups[this._placeholderGroupsIdx])// Check if the placeholder has a transformation
            if (placeholder.transform) {
                const id = this._placeholderDecorations.get(placeholder);
                const range = this._editor.getModel().getDecorationRange(id);
                const currentValue = this._editor.getModel().getValueInRange(range);
                const transformedValueLines = placeholder.transform.resolve(currentValue).split(/\r\n|\r|\n/);
                // fix indentation for transformed lines
                for(let i = 1; i < transformedValueLines.length; i++)transformedValueLines[i] = this._editor.getModel().normalizeIndentation(this._snippetLineLeadingWhitespace + transformedValueLines[i]);
                operations.push($kHJv6.EditOperation.replace(range, transformedValueLines.join(this._editor.getModel().getEOL())));
            }
            if (operations.length > 0) this._editor.executeEdits('snippet.placeholderTransform', operations);
        }
        let couldSkipThisPlaceholder = false;
        if (fwd === true && this._placeholderGroupsIdx < this._placeholderGroups.length - 1) {
            this._placeholderGroupsIdx += 1;
            couldSkipThisPlaceholder = true;
        } else if (fwd === false && this._placeholderGroupsIdx > 0) {
            this._placeholderGroupsIdx -= 1;
            couldSkipThisPlaceholder = true;
        }
        const newSelections = this._editor.getModel().changeDecorations((accessor)=>{
            const activePlaceholders = new Set();
            // change stickiness to always grow when typing at its edges
            // because these decorations represent the currently active
            // tabstop.
            // Special case #1: reaching the final tabstop
            // Special case #2: placeholders enclosing active placeholders
            const selections = [];
            for (const placeholder of this._placeholderGroups[this._placeholderGroupsIdx]){
                const id = this._placeholderDecorations.get(placeholder);
                const range = this._editor.getModel().getDecorationRange(id);
                selections.push(new $jzicX.Selection(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn));
                // consider to skip this placeholder index when the decoration
                // range is empty but when the placeholder wasn't. that's a strong
                // hint that the placeholder has been deleted. (all placeholder must match this)
                couldSkipThisPlaceholder = couldSkipThisPlaceholder && this._hasPlaceholderBeenCollapsed(placeholder);
                accessor.changeDecorationOptions(id, placeholder.isFinalTabstop ? $3531e4d34dfec17c$export$c14aba13900af0fa._decor.activeFinal : $3531e4d34dfec17c$export$c14aba13900af0fa._decor.active);
                activePlaceholders.add(placeholder);
                for (const enclosingPlaceholder of this._snippet.enclosingPlaceholders(placeholder)){
                    const id = this._placeholderDecorations.get(enclosingPlaceholder);
                    accessor.changeDecorationOptions(id, enclosingPlaceholder.isFinalTabstop ? $3531e4d34dfec17c$export$c14aba13900af0fa._decor.activeFinal : $3531e4d34dfec17c$export$c14aba13900af0fa._decor.active);
                    activePlaceholders.add(enclosingPlaceholder);
                }
            }
            // change stickness to never grow when typing at its edges
            // so that in-active tabstops never grow
            for (const [placeholder1, id] of this._placeholderDecorations)if (!activePlaceholders.has(placeholder1)) accessor.changeDecorationOptions(id, placeholder1.isFinalTabstop ? $3531e4d34dfec17c$export$c14aba13900af0fa._decor.inactiveFinal : $3531e4d34dfec17c$export$c14aba13900af0fa._decor.inactive);
            return selections;
        });
        return !couldSkipThisPlaceholder ? newSelections !== null && newSelections !== void 0 ? newSelections : [] : this.move(fwd);
    }
    _hasPlaceholderBeenCollapsed(placeholder) {
        // A placeholder is empty when it wasn't empty when authored but
        // when its tracking decoration is empty. This also applies to all
        // potential parent placeholders
        let marker = placeholder;
        while(marker){
            if (marker instanceof $ec67e86c75f97474$export$84712d0562a614b8) {
                const id = this._placeholderDecorations.get(marker);
                const range = this._editor.getModel().getDecorationRange(id);
                if (range.isEmpty() && marker.toString().length > 0) return true;
            }
            marker = marker.parent;
        }
        return false;
    }
    get isAtFirstPlaceholder() {
        return this._placeholderGroupsIdx <= 0 || this._placeholderGroups.length === 0;
    }
    get isAtLastPlaceholder() {
        return this._placeholderGroupsIdx === this._placeholderGroups.length - 1;
    }
    get hasPlaceholder() {
        return this._snippet.placeholders.length > 0;
    }
    computePossibleSelections() {
        const result = new Map();
        for (const placeholdersWithEqualIndex of this._placeholderGroups){
            let ranges;
            for (const placeholder of placeholdersWithEqualIndex){
                if (placeholder.isFinalTabstop) break;
                if (!ranges) {
                    ranges = [];
                    result.set(placeholder.index, ranges);
                }
                const id = this._placeholderDecorations.get(placeholder);
                const range = this._editor.getModel().getDecorationRange(id);
                if (!range) {
                    // one of the placeholder lost its decoration and
                    // therefore we bail out and pretend the placeholder
                    // (with its mirrors) doesn't exist anymore.
                    result.delete(placeholder.index);
                    break;
                }
                ranges.push(range);
            }
        }
        return result;
    }
    get choice() {
        return this._placeholderGroups[this._placeholderGroupsIdx][0].choice;
    }
    merge(others) {
        const model = this._editor.getModel();
        this._nestingLevel *= 10;
        this._editor.changeDecorations((accessor)=>{
            // For each active placeholder take one snippet and merge it
            // in that the placeholder (can be many for `$1foo$1foo`). Because
            // everything is sorted by editor selection we can simply remove
            // elements from the beginning of the array
            for (const placeholder of this._placeholderGroups[this._placeholderGroupsIdx]){
                const nested = others.shift();
                console.assert(!nested._placeholderDecorations);
                // Massage placeholder-indicies of the nested snippet to be
                // sorted right after the insertion point. This ensures we move
                // through the placeholders in the correct order
                const indexLastPlaceholder = nested._snippet.placeholderInfo.last.index;
                for (const nestedPlaceholder of nested._snippet.placeholderInfo.all)if (nestedPlaceholder.isFinalTabstop) nestedPlaceholder.index = placeholder.index + (indexLastPlaceholder + 1) / this._nestingLevel;
                else nestedPlaceholder.index = placeholder.index + nestedPlaceholder.index / this._nestingLevel;
                this._snippet.replace(placeholder, nested._snippet.children);
                // Remove the placeholder at which position are inserting
                // the snippet and also remove its decoration.
                const id = this._placeholderDecorations.get(placeholder);
                accessor.removeDecoration(id);
                this._placeholderDecorations.delete(placeholder);
                // For each *new* placeholder we create decoration to monitor
                // how and if it grows/shrinks.
                for (const placeholder2 of nested._snippet.placeholders){
                    const placeholderOffset = nested._snippet.offset(placeholder2);
                    const placeholderLen = nested._snippet.fullLen(placeholder2);
                    const range = $d00il.Range.fromPositions(model.getPositionAt(nested._offset + placeholderOffset), model.getPositionAt(nested._offset + placeholderOffset + placeholderLen));
                    const handle = accessor.addDecoration(range, $3531e4d34dfec17c$export$c14aba13900af0fa._decor.inactive);
                    this._placeholderDecorations.set(placeholder2, handle);
                }
            }
            // Last, re-create the placeholder groups by sorting placeholders by their index.
            this._placeholderGroups = $kJ8UG.groupBy(this._snippet.placeholders, $ec67e86c75f97474$export$84712d0562a614b8.compareByIndex);
        });
    }
}
$3531e4d34dfec17c$export$c14aba13900af0fa._decor = {
    active: $91ntV.ModelDecorationOptions.register({
        description: 'snippet-placeholder-1',
        stickiness: 0 /* AlwaysGrowsWhenTypingAtEdges */ ,
        className: 'snippet-placeholder'
    }),
    inactive: $91ntV.ModelDecorationOptions.register({
        description: 'snippet-placeholder-2',
        stickiness: 1 /* NeverGrowsWhenTypingAtEdges */ ,
        className: 'snippet-placeholder'
    }),
    activeFinal: $91ntV.ModelDecorationOptions.register({
        description: 'snippet-placeholder-3',
        stickiness: 1 /* NeverGrowsWhenTypingAtEdges */ ,
        className: 'finish-snippet-placeholder'
    }),
    inactiveFinal: $91ntV.ModelDecorationOptions.register({
        description: 'snippet-placeholder-4',
        stickiness: 1 /* NeverGrowsWhenTypingAtEdges */ ,
        className: 'finish-snippet-placeholder'
    })
};
const $3531e4d34dfec17c$var$_defaultOptions = {
    overwriteBefore: 0,
    overwriteAfter: 0,
    adjustWhitespace: true,
    clipboardText: undefined,
    overtypingCapturer: undefined
};
class $3531e4d34dfec17c$export$d334bb6e0f563f7 {
    constructor(editor, template, options = $3531e4d34dfec17c$var$_defaultOptions){
        this._templateMerges = [];
        this._snippets = [];
        this._editor = editor;
        this._template = template;
        this._options = options;
    }
    static adjustWhitespace(model, position, snippet, adjustIndentation, adjustNewlines) {
        const line = model.getLineContent(position.lineNumber);
        const lineLeadingWhitespace = $jcr1R.getLeadingWhitespace(line, 0, position.column - 1);
        // the snippet as inserted
        let snippetTextString;
        snippet.walk((marker)=>{
            // all text elements that are not inside choice
            if (!(marker instanceof $ec67e86c75f97474$export$5f1af8db9871e1d6) || marker.parent instanceof $ec67e86c75f97474$export$32a7462f6a06cbd5) return true;
            const lines = marker.value.split(/\r\n|\r|\n/);
            if (adjustIndentation) {
                // adjust indentation of snippet test
                // -the snippet-start doesn't get extra-indented (lineLeadingWhitespace), only normalized
                // -all N+1 lines get extra-indented and normalized
                // -the text start get extra-indented and normalized when following a linebreak
                const offset = snippet.offset(marker);
                if (offset === 0) // snippet start
                lines[0] = model.normalizeIndentation(lines[0]);
                else {
                    // check if text start is after a linebreak
                    snippetTextString = snippetTextString !== null && snippetTextString !== void 0 ? snippetTextString : snippet.toString();
                    let prevChar = snippetTextString.charCodeAt(offset - 1);
                    if (prevChar === 10 /* LineFeed */  || prevChar === 13 /* CarriageReturn */ ) lines[0] = model.normalizeIndentation(lineLeadingWhitespace + lines[0]);
                }
                for(let i = 1; i < lines.length; i++)lines[i] = model.normalizeIndentation(lineLeadingWhitespace + lines[i]);
            }
            const newValue = lines.join(model.getEOL());
            if (newValue !== marker.value) {
                marker.parent.replace(marker, [
                    new $ec67e86c75f97474$export$5f1af8db9871e1d6(newValue)
                ]);
                snippetTextString = undefined;
            }
            return true;
        });
        return lineLeadingWhitespace;
    }
    static adjustSelection(model, selection, overwriteBefore, overwriteAfter) {
        if (overwriteBefore !== 0 || overwriteAfter !== 0) {
            // overwrite[Before|After] is compute using the position, not the whole
            // selection. therefore we adjust the selection around that position
            const { positionLineNumber: positionLineNumber , positionColumn: positionColumn  } = selection;
            const positionColumnBefore = positionColumn - overwriteBefore;
            const positionColumnAfter = positionColumn + overwriteAfter;
            const range = model.validateRange({
                startLineNumber: positionLineNumber,
                startColumn: positionColumnBefore,
                endLineNumber: positionLineNumber,
                endColumn: positionColumnAfter
            });
            selection = $jzicX.Selection.createWithDirection(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn, selection.getDirection());
        }
        return selection;
    }
    static createEditsAndSnippets(editor, template, overwriteBefore, overwriteAfter, enforceFinalTabstop, adjustWhitespace, clipboardText, overtypingCapturer) {
        const edits = [];
        const snippets = [];
        if (!editor.hasModel()) return {
            edits: edits,
            snippets: snippets
        };
        const model = editor.getModel();
        const workspaceService = editor.invokeWithinContext((accessor)=>accessor.get($6c7bv.IWorkspaceContextService)
        );
        const modelBasedVariableResolver = editor.invokeWithinContext((accessor)=>new $08b575e2cc6c6cf6$export$23aa3af8f3bd9e57(accessor.get($8GcbM.ILabelService), model)
        );
        const readClipboardText = ()=>clipboardText
        ;
        let delta = 0;
        // know what text the overwrite[Before|After] extensions
        // of the primary curser have selected because only when
        // secondary selections extend to the same text we can grow them
        let firstBeforeText = model.getValueInRange($3531e4d34dfec17c$export$d334bb6e0f563f7.adjustSelection(model, editor.getSelection(), overwriteBefore, 0));
        let firstAfterText = model.getValueInRange($3531e4d34dfec17c$export$d334bb6e0f563f7.adjustSelection(model, editor.getSelection(), 0, overwriteAfter));
        // remember the first non-whitespace column to decide if
        // `keepWhitespace` should be overruled for secondary selections
        let firstLineFirstNonWhitespace = model.getLineFirstNonWhitespaceColumn(editor.getSelection().positionLineNumber);
        // sort selections by their start position but remeber
        // the original index. that allows you to create correct
        // offset-based selection logic without changing the
        // primary selection
        const indexedSelections = editor.getSelections().map((selection, idx)=>({
                selection: selection,
                idx: idx
            })
        ).sort((a, b)=>$d00il.Range.compareRangesUsingStarts(a.selection, b.selection)
        );
        for (const { selection: selection1 , idx: idx1  } of indexedSelections){
            // extend selection with the `overwriteBefore` and `overwriteAfter` and then
            // compare if this matches the extensions of the primary selection
            let extensionBefore = $3531e4d34dfec17c$export$d334bb6e0f563f7.adjustSelection(model, selection1, overwriteBefore, 0);
            let extensionAfter = $3531e4d34dfec17c$export$d334bb6e0f563f7.adjustSelection(model, selection1, 0, overwriteAfter);
            if (firstBeforeText !== model.getValueInRange(extensionBefore)) extensionBefore = selection1;
            if (firstAfterText !== model.getValueInRange(extensionAfter)) extensionAfter = selection1;
            // merge the before and after selection into one
            const snippetSelection = selection1.setStartPosition(extensionBefore.startLineNumber, extensionBefore.startColumn).setEndPosition(extensionAfter.endLineNumber, extensionAfter.endColumn);
            const snippet = new $ec67e86c75f97474$export$e073bfe8583e8fbf().parse(template, true, enforceFinalTabstop);
            // adjust the template string to match the indentation and
            // whitespace rules of this insert location (can be different for each cursor)
            // happens when being asked for (default) or when this is a secondary
            // cursor and the leading whitespace is different
            const start = snippetSelection.getStartPosition();
            const snippetLineLeadingWhitespace = $3531e4d34dfec17c$export$d334bb6e0f563f7.adjustWhitespace(model, start, snippet, adjustWhitespace || idx1 > 0 && firstLineFirstNonWhitespace !== model.getLineFirstNonWhitespaceColumn(selection1.positionLineNumber), true);
            snippet.resolveVariables(new $08b575e2cc6c6cf6$export$e3a7bd665cf54cee([
                modelBasedVariableResolver,
                new $08b575e2cc6c6cf6$export$51fb631a281a1cb7(readClipboardText, idx1, indexedSelections.length, editor.getOption(70 /* multiCursorPaste */ ) === 'spread'),
                new $08b575e2cc6c6cf6$export$d2ecf5fbc0b88e32(model, selection1, idx1, overtypingCapturer),
                new $08b575e2cc6c6cf6$export$93486f5d6db748c0(model, selection1),
                new $08b575e2cc6c6cf6$export$3c8bf74f3a7220f9,
                new $08b575e2cc6c6cf6$export$f1d01458dc99b68c(workspaceService),
                new $08b575e2cc6c6cf6$export$35234542a316122e, 
            ]));
            const offset = model.getOffsetAt(start) + delta;
            delta += snippet.toString().length - model.getValueLengthInRange(snippetSelection);
            // store snippets with the index of their originating selection.
            // that ensures the primiary cursor stays primary despite not being
            // the one with lowest start position
            edits[idx1] = $kHJv6.EditOperation.replace(snippetSelection, snippet.toString());
            edits[idx1].identifier = {
                major: idx1,
                minor: 0
            }; // mark the edit so only our undo edits will be used to generate end cursors
            snippets[idx1] = new $3531e4d34dfec17c$export$c14aba13900af0fa(editor, snippet, offset, snippetLineLeadingWhitespace);
        }
        return {
            edits: edits,
            snippets: snippets
        };
    }
    dispose() {
        $9cWcn.dispose(this._snippets);
    }
    _logInfo() {
        return `template="${this._template}", merged_templates="${this._templateMerges.join(' -> ')}"`;
    }
    insert() {
        if (!this._editor.hasModel()) return;
        // make insert edit and start with first selections
        const { edits: edits , snippets: snippets  } = $3531e4d34dfec17c$export$d334bb6e0f563f7.createEditsAndSnippets(this._editor, this._template, this._options.overwriteBefore, this._options.overwriteAfter, false, this._options.adjustWhitespace, this._options.clipboardText, this._options.overtypingCapturer);
        this._snippets = snippets;
        this._editor.executeEdits('snippet', edits, (undoEdits)=>{
            if (this._snippets[0].hasPlaceholder) return this._move(true);
            else return undoEdits.filter((edit)=>!!edit.identifier
            ) // only use our undo edits
            .map((edit)=>$jzicX.Selection.fromPositions(edit.range.getEndPosition())
            );
        });
        this._editor.revealRange(this._editor.getSelections()[0]);
    }
    merge(template, options = $3531e4d34dfec17c$var$_defaultOptions) {
        if (!this._editor.hasModel()) return;
        this._templateMerges.push([
            this._snippets[0]._nestingLevel,
            this._snippets[0]._placeholderGroupsIdx,
            template
        ]);
        const { edits: edits , snippets: snippets  } = $3531e4d34dfec17c$export$d334bb6e0f563f7.createEditsAndSnippets(this._editor, template, options.overwriteBefore, options.overwriteAfter, true, options.adjustWhitespace, options.clipboardText, options.overtypingCapturer);
        this._editor.executeEdits('snippet', edits, (undoEdits)=>{
            for (const snippet of this._snippets)snippet.merge(snippets);
            console.assert(snippets.length === 0);
            if (this._snippets[0].hasPlaceholder) return this._move(undefined);
            else return undoEdits.filter((edit)=>!!edit.identifier
            ) // only use our undo edits
            .map((edit)=>$jzicX.Selection.fromPositions(edit.range.getEndPosition())
            );
        });
    }
    next() {
        const newSelections = this._move(true);
        this._editor.setSelections(newSelections);
        this._editor.revealPositionInCenterIfOutsideViewport(newSelections[0].getPosition());
    }
    prev() {
        const newSelections = this._move(false);
        this._editor.setSelections(newSelections);
        this._editor.revealPositionInCenterIfOutsideViewport(newSelections[0].getPosition());
    }
    _move(fwd) {
        const selections = [];
        for (const snippet of this._snippets){
            const oneSelection = snippet.move(fwd);
            selections.push(...oneSelection);
        }
        return selections;
    }
    get isAtFirstPlaceholder() {
        return this._snippets[0].isAtFirstPlaceholder;
    }
    get isAtLastPlaceholder() {
        return this._snippets[0].isAtLastPlaceholder;
    }
    get hasPlaceholder() {
        return this._snippets[0].hasPlaceholder;
    }
    get choice() {
        return this._snippets[0].choice;
    }
    isSelectionWithinPlaceholders() {
        if (!this.hasPlaceholder) return false;
        const selections = this._editor.getSelections();
        if (selections.length < this._snippets.length) // this means we started snippet mode with N
        // selections and have M (N > M) selections.
        // So one snippet is without selection -> cancel
        return false;
        let allPossibleSelections = new Map();
        for (const snippet of this._snippets){
            const possibleSelections = snippet.computePossibleSelections();
            // for the first snippet find the placeholder (and its ranges)
            // that contain at least one selection. for all remaining snippets
            // the same placeholder (and their ranges) must be used.
            if (allPossibleSelections.size === 0) for (const [index1, ranges] of possibleSelections){
                ranges.sort($d00il.Range.compareRangesUsingStarts);
                for (const selection of selections)if (ranges[0].containsRange(selection)) {
                    allPossibleSelections.set(index1, []);
                    break;
                }
            }
            if (allPossibleSelections.size === 0) // return false if we couldn't associate a selection to
            // this (the first) snippet
            return false;
            // add selections from 'this' snippet so that we know all
            // selections for this placeholder
            allPossibleSelections.forEach((array, index)=>{
                array.push(...possibleSelections.get(index));
            });
        }
        // sort selections (and later placeholder-ranges). then walk both
        // arrays and make sure the placeholder-ranges contain the corresponding
        // selection
        selections.sort($d00il.Range.compareRangesUsingStarts);
        for (let [index, ranges] of allPossibleSelections){
            if (ranges.length !== selections.length) {
                allPossibleSelections.delete(index);
                continue;
            }
            ranges.sort($d00il.Range.compareRangesUsingStarts);
            for(let i = 0; i < ranges.length; i++)if (!ranges[i].containsRange(selections[i])) {
                allPossibleSelections.delete(index);
                continue;
            }
        }
        // from all possible selections we have deleted those
        // that don't match with the current selection. if we don't
        // have any left, we don't have a selection anymore
        return allPossibleSelections.size > 0;
    }
}


var $116f6f5b5e48a18e$exports = {};

$parcel$export($116f6f5b5e48a18e$exports, "SuggestController", () => $116f6f5b5e48a18e$export$54e1189006f2eb3a, (v) => $116f6f5b5e48a18e$export$54e1189006f2eb3a = v);

var $aIbUW = parcelRequire("aIbUW");

var $kJ8UG = parcelRequire("kJ8UG");

var $6bXyA = parcelRequire("6bXyA");

var $giPcZ = parcelRequire("giPcZ");

var $gPkHZ = parcelRequire("gPkHZ");

var $5YaSO = parcelRequire("5YaSO");

var $cU88k = parcelRequire("cU88k");

var $9cWcn = parcelRequire("9cWcn");

var $lb0Ah = parcelRequire("lb0Ah");

var $eUQTM = parcelRequire("eUQTM");

var $bxBg7 = parcelRequire("bxBg7");

var $r7siU = parcelRequire("r7siU");

var $2iJTi = parcelRequire("2iJTi");

var $kHJv6 = parcelRequire("kHJv6");

var $dcxQ7 = parcelRequire("dcxQ7");

var $d00il = parcelRequire("d00il");

var $ibKGQ = parcelRequire("ibKGQ");
var $766cb4d8639df7d1$exports = {};

$parcel$export($766cb4d8639df7d1$exports, "SnippetController2", () => $766cb4d8639df7d1$export$d27b4f7e5ea418b0, (v) => $766cb4d8639df7d1$export$d27b4f7e5ea418b0 = v);

var $9cWcn = parcelRequire("9cWcn");

var $2iJTi = parcelRequire("2iJTi");

var $d00il = parcelRequire("d00il");

var $jzicX = parcelRequire("jzicX");

var $ibKGQ = parcelRequire("ibKGQ");
var $63d2440bdac663c3$exports = {};

$parcel$export($63d2440bdac663c3$exports, "Context", () => $63d2440bdac663c3$export$841858b892ce1f4c, (v) => $63d2440bdac663c3$export$841858b892ce1f4c = v);
$parcel$export($63d2440bdac663c3$exports, "suggestWidgetStatusbarMenu", () => $63d2440bdac663c3$export$c2ae6207654f3cab, (v) => $63d2440bdac663c3$export$c2ae6207654f3cab = v);
$parcel$export($63d2440bdac663c3$exports, "CompletionOptions", () => $63d2440bdac663c3$export$6e9613987176d8af, (v) => $63d2440bdac663c3$export$6e9613987176d8af = v);
$parcel$export($63d2440bdac663c3$exports, "getSnippetSuggestSupport", () => $63d2440bdac663c3$export$72a35c372a05fbe1, (v) => $63d2440bdac663c3$export$72a35c372a05fbe1 = v);
$parcel$export($63d2440bdac663c3$exports, "provideSuggestionItems", () => $63d2440bdac663c3$export$c34b3fef967c72b0, (v) => $63d2440bdac663c3$export$c34b3fef967c72b0 = v);
$parcel$export($63d2440bdac663c3$exports, "getSuggestionComparator", () => $63d2440bdac663c3$export$2537afb96e75f997, (v) => $63d2440bdac663c3$export$2537afb96e75f997 = v);
$parcel$export($63d2440bdac663c3$exports, "showSimpleSuggestions", () => $63d2440bdac663c3$export$88d43510c0fc4cc4, (v) => $63d2440bdac663c3$export$88d43510c0fc4cc4 = v);

var $giPcZ = parcelRequire("giPcZ");

var $gPkHZ = parcelRequire("gPkHZ");

var $lk06m = parcelRequire("lk06m");

var $9cWcn = parcelRequire("9cWcn");

var $eUQTM = parcelRequire("eUQTM");

var $bxBg7 = parcelRequire("bxBg7");

var $5OJ54 = parcelRequire("5OJ54");

var $dcxQ7 = parcelRequire("dcxQ7");

var $d00il = parcelRequire("d00il");

var $4PmRQ = parcelRequire("4PmRQ");

var $aTkrt = parcelRequire("aTkrt");


var $4dEdH = parcelRequire("4dEdH");

var $g4v7E = parcelRequire("g4v7E");

var $8tcMz = parcelRequire("8tcMz");

var $cxCeF = parcelRequire("cxCeF");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $63d2440bdac663c3$var$__awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
const $63d2440bdac663c3$export$841858b892ce1f4c = {
    Visible: new $cxCeF.RawContextKey('suggestWidgetVisible', false, $4dEdH.localize('suggestWidgetVisible', "Whether suggestion are visible")),
    DetailsVisible: new $cxCeF.RawContextKey('suggestWidgetDetailsVisible', false, $4dEdH.localize('suggestWidgetDetailsVisible', "Whether suggestion details are visible")),
    MultipleSuggestions: new $cxCeF.RawContextKey('suggestWidgetMultipleSuggestions', false, $4dEdH.localize('suggestWidgetMultipleSuggestions', "Whether there are multiple suggestions to pick from")),
    MakesTextEdit: new $cxCeF.RawContextKey('suggestionMakesTextEdit', true, $4dEdH.localize('suggestionMakesTextEdit', "Whether inserting the current suggestion yields in a change or has everything already been typed")),
    AcceptSuggestionsOnEnter: new $cxCeF.RawContextKey('acceptSuggestionOnEnter', true, $4dEdH.localize('acceptSuggestionOnEnter', "Whether suggestions are inserted when pressing Enter")),
    HasInsertAndReplaceRange: new $cxCeF.RawContextKey('suggestionHasInsertAndReplaceRange', false, $4dEdH.localize('suggestionHasInsertAndReplaceRange', "Whether the current suggestion has insert and replace behaviour")),
    InsertMode: new $cxCeF.RawContextKey('suggestionInsertMode', undefined, {
        type: 'string',
        description: $4dEdH.localize('suggestionInsertMode', "Whether the default behaviour is to insert or replace")
    }),
    CanResolve: new $cxCeF.RawContextKey('suggestionCanResolve', false, $4dEdH.localize('suggestionCanResolve', "Whether the current suggestion supports to resolve further details"))
};
const $63d2440bdac663c3$export$c2ae6207654f3cab = new $g4v7E.MenuId('suggestWidgetStatusBar');
class $63d2440bdac663c3$export$c290c60b00019a8b {
    constructor(position, completion, container, provider){
        this.position = position;
        this.completion = completion;
        this.container = container;
        this.provider = provider;
        // validation
        this.isInvalid = false;
        // sorting, filtering
        this.score = $lk06m.FuzzyScore.Default;
        this.distance = 0;
        this.textLabel = typeof completion.label === 'string' ? completion.label : completion.label.label;
        // ensure lower-variants (perf)
        this.labelLow = this.textLabel.toLowerCase();
        // validate label
        this.isInvalid = !this.textLabel;
        this.sortTextLow = completion.sortText && completion.sortText.toLowerCase();
        this.filterTextLow = completion.filterText && completion.filterText.toLowerCase();
        // normalize ranges
        if ($d00il.Range.isIRange(completion.range)) {
            this.editStart = new $dcxQ7.Position(completion.range.startLineNumber, completion.range.startColumn);
            this.editInsertEnd = new $dcxQ7.Position(completion.range.endLineNumber, completion.range.endColumn);
            this.editReplaceEnd = new $dcxQ7.Position(completion.range.endLineNumber, completion.range.endColumn);
            // validate range
            this.isInvalid = this.isInvalid || $d00il.Range.spansMultipleLines(completion.range) || completion.range.startLineNumber !== position.lineNumber;
        } else {
            this.editStart = new $dcxQ7.Position(completion.range.insert.startLineNumber, completion.range.insert.startColumn);
            this.editInsertEnd = new $dcxQ7.Position(completion.range.insert.endLineNumber, completion.range.insert.endColumn);
            this.editReplaceEnd = new $dcxQ7.Position(completion.range.replace.endLineNumber, completion.range.replace.endColumn);
            // validate ranges
            this.isInvalid = this.isInvalid || $d00il.Range.spansMultipleLines(completion.range.insert) || $d00il.Range.spansMultipleLines(completion.range.replace) || completion.range.insert.startLineNumber !== position.lineNumber || completion.range.replace.startLineNumber !== position.lineNumber || completion.range.insert.startColumn !== completion.range.replace.startColumn;
        }
        // create the suggestion resolver
        if (typeof provider.resolveCompletionItem !== 'function') {
            this._resolveCache = Promise.resolve();
            this._isResolved = true;
        }
    }
    // ---- resolving
    get isResolved() {
        return !!this._isResolved;
    }
    resolve(token) {
        return $63d2440bdac663c3$var$__awaiter(this, void 0, void 0, function*() {
            if (!this._resolveCache) {
                const sub = token.onCancellationRequested(()=>{
                    this._resolveCache = undefined;
                    this._isResolved = false;
                });
                this._resolveCache = Promise.resolve(this.provider.resolveCompletionItem(this.completion, token)).then((value)=>{
                    Object.assign(this.completion, value);
                    this._isResolved = true;
                    sub.dispose();
                }, (err)=>{
                    if ($gPkHZ.isPromiseCanceledError(err)) {
                        // the IPC queue will reject the request with the
                        // cancellation error -> reset cached
                        this._resolveCache = undefined;
                        this._isResolved = false;
                    }
                });
            }
            return this._resolveCache;
        });
    }
}
class $63d2440bdac663c3$export$6e9613987176d8af {
    constructor(snippetSortOrder = 2 /* Bottom */ , kindFilter = new Set(), providerFilter = new Set(), showDeprecated = true){
        this.snippetSortOrder = snippetSortOrder;
        this.kindFilter = kindFilter;
        this.providerFilter = providerFilter;
        this.showDeprecated = showDeprecated;
    }
}
$63d2440bdac663c3$export$6e9613987176d8af.default = new $63d2440bdac663c3$export$6e9613987176d8af();
let $63d2440bdac663c3$var$_snippetSuggestSupport;
function $63d2440bdac663c3$export$72a35c372a05fbe1() {
    return $63d2440bdac663c3$var$_snippetSuggestSupport;
}
class $63d2440bdac663c3$export$5bba491290954073 {
    constructor(items, needsClipboard, durations, disposable){
        this.items = items;
        this.needsClipboard = needsClipboard;
        this.durations = durations;
        this.disposable = disposable;
    }
}
function $63d2440bdac663c3$export$c34b3fef967c72b0(model, position, options = $63d2440bdac663c3$export$6e9613987176d8af.default, context = {
    triggerKind: 0 /* Invoke */ 
}, token = $giPcZ.CancellationToken.None) {
    return $63d2440bdac663c3$var$__awaiter(this, void 0, void 0, function*() {
        const sw1 = new $eUQTM.StopWatch(true);
        position = position.clone();
        const word = model.getWordAtPosition(position);
        const defaultReplaceRange = word ? new $d00il.Range(position.lineNumber, word.startColumn, position.lineNumber, word.endColumn) : $d00il.Range.fromPositions(position);
        const defaultRange = {
            replace: defaultReplaceRange,
            insert: defaultReplaceRange.setEndPosition(position.lineNumber, position.column)
        };
        const result = [];
        const disposables = new $9cWcn.DisposableStore();
        const durations = [];
        let needsClipboard = false;
        const onCompletionList = (provider, container, sw)=>{
            var _a, _b, _c;
            if (!container) return;
            for (let suggestion of container.suggestions)if (!options.kindFilter.has(suggestion.kind)) {
                // skip if not showing deprecated suggestions
                if (!options.showDeprecated && ((_a = suggestion === null || suggestion === void 0 ? void 0 : suggestion.tags) === null || _a === void 0 ? void 0 : _a.includes(1 /* Deprecated */ ))) continue;
                // fill in default range when missing
                if (!suggestion.range) suggestion.range = defaultRange;
                // fill in default sortText when missing
                if (!suggestion.sortText) suggestion.sortText = typeof suggestion.label === 'string' ? suggestion.label : suggestion.label.label;
                if (!needsClipboard && suggestion.insertTextRules && suggestion.insertTextRules & 4 /* InsertAsSnippet */ ) needsClipboard = $ec67e86c75f97474$export$e073bfe8583e8fbf.guessNeedsClipboard(suggestion.insertText);
                result.push(new $63d2440bdac663c3$export$c290c60b00019a8b(position, suggestion, container, provider));
            }
            if ($9cWcn.isDisposable(container)) disposables.add(container);
            durations.push({
                providerName: (_b = provider._debugDisplayName) !== null && _b !== void 0 ? _b : 'unkown_provider',
                elapsedProvider: (_c = container.duration) !== null && _c !== void 0 ? _c : -1,
                elapsedOverall: sw.elapsed()
            });
        };
        // ask for snippets in parallel to asking "real" providers. Only do something if configured to
        // do so - no snippet filter, no special-providers-only request
        const snippetCompletions = (()=>$63d2440bdac663c3$var$__awaiter(this, void 0, void 0, function*() {
                if (!$63d2440bdac663c3$var$_snippetSuggestSupport || options.kindFilter.has(27 /* Snippet */ )) return;
                if (options.providerFilter.size > 0 && !options.providerFilter.has($63d2440bdac663c3$var$_snippetSuggestSupport)) return;
                const sw = new $eUQTM.StopWatch(true);
                const list = yield $63d2440bdac663c3$var$_snippetSuggestSupport.provideCompletionItems(model, position, context, token);
                onCompletionList($63d2440bdac663c3$var$_snippetSuggestSupport, list, sw);
            })
        )();
        // add suggestions from contributed providers - providers are ordered in groups of
        // equal score and once a group produces a result the process stops
        // get provider groups, always add snippet suggestion provider
        for (let providerGroup of $4PmRQ.CompletionProviderRegistry.orderedGroups(model)){
            // for each support in the group ask for suggestions
            let lenBefore = result.length;
            yield Promise.all(providerGroup.map((provider)=>$63d2440bdac663c3$var$__awaiter(this, void 0, void 0, function*() {
                    if (options.providerFilter.size > 0 && !options.providerFilter.has(provider)) return;
                    try {
                        const sw = new $eUQTM.StopWatch(true);
                        const list = yield provider.provideCompletionItems(model, position, context, token);
                        onCompletionList(provider, list, sw);
                    } catch (err) {
                        $gPkHZ.onUnexpectedExternalError(err);
                    }
                })
            ));
            if (lenBefore !== result.length || token.isCancellationRequested) break;
        }
        yield snippetCompletions;
        if (token.isCancellationRequested) {
            disposables.dispose();
            return Promise.reject($gPkHZ.canceled());
        }
        return new $63d2440bdac663c3$export$5bba491290954073(result.sort($63d2440bdac663c3$export$2537afb96e75f997(options.snippetSortOrder)), needsClipboard, {
            entries: durations,
            elapsed: sw1.elapsed()
        }, disposables);
    });
}
function $63d2440bdac663c3$var$defaultComparator(a, b) {
    // check with 'sortText'
    if (a.sortTextLow && b.sortTextLow) {
        if (a.sortTextLow < b.sortTextLow) return -1;
        else if (a.sortTextLow > b.sortTextLow) return 1;
    }
    // check with 'label'
    if (a.completion.label < b.completion.label) return -1;
    else if (a.completion.label > b.completion.label) return 1;
    // check with 'type'
    return a.completion.kind - b.completion.kind;
}
function $63d2440bdac663c3$var$snippetUpComparator(a, b) {
    if (a.completion.kind !== b.completion.kind) {
        if (a.completion.kind === 27 /* Snippet */ ) return -1;
        else if (b.completion.kind === 27 /* Snippet */ ) return 1;
    }
    return $63d2440bdac663c3$var$defaultComparator(a, b);
}
function $63d2440bdac663c3$var$snippetDownComparator(a, b) {
    if (a.completion.kind !== b.completion.kind) {
        if (a.completion.kind === 27 /* Snippet */ ) return 1;
        else if (b.completion.kind === 27 /* Snippet */ ) return -1;
    }
    return $63d2440bdac663c3$var$defaultComparator(a, b);
}
const $63d2440bdac663c3$var$_snippetComparators = new Map();
$63d2440bdac663c3$var$_snippetComparators.set(0 /* Top */ , $63d2440bdac663c3$var$snippetUpComparator);
$63d2440bdac663c3$var$_snippetComparators.set(2 /* Bottom */ , $63d2440bdac663c3$var$snippetDownComparator);
$63d2440bdac663c3$var$_snippetComparators.set(1 /* Inline */ , $63d2440bdac663c3$var$defaultComparator);
function $63d2440bdac663c3$export$2537afb96e75f997(snippetConfig) {
    return $63d2440bdac663c3$var$_snippetComparators.get(snippetConfig);
}
$8tcMz.CommandsRegistry.registerCommand('_executeCompletionItemProvider', (accessor, ...args)=>$63d2440bdac663c3$var$__awaiter(void 0, void 0, void 0, function*() {
        const [uri, position, triggerCharacter, maxItemsToResolve] = args;
        $bxBg7.assertType($5OJ54.URI.isUri(uri));
        $bxBg7.assertType($dcxQ7.Position.isIPosition(position));
        $bxBg7.assertType(typeof triggerCharacter === 'string' || !triggerCharacter);
        $bxBg7.assertType(typeof maxItemsToResolve === 'number' || !maxItemsToResolve);
        const ref = yield accessor.get($aTkrt.ITextModelService).createModelReference(uri);
        try {
            const result = {
                incomplete: false,
                suggestions: []
            };
            const resolving = [];
            const completions = yield $63d2440bdac663c3$export$c34b3fef967c72b0(ref.object.textEditorModel, $dcxQ7.Position.lift(position), undefined, {
                triggerCharacter: triggerCharacter,
                triggerKind: triggerCharacter ? 1 /* TriggerCharacter */  : 0 /* Invoke */ 
            });
            for (const item of completions.items){
                if (resolving.length < (maxItemsToResolve !== null && maxItemsToResolve !== void 0 ? maxItemsToResolve : 0)) resolving.push(item.resolve($giPcZ.CancellationToken.None));
                result.incomplete = result.incomplete || item.container.incomplete;
                result.suggestions.push(item.completion);
            }
            try {
                yield Promise.all(resolving);
                return result;
            } finally{
                setTimeout(()=>completions.disposable.dispose()
                , 100);
            }
        } finally{
            ref.dispose();
        }
    })
);
const $63d2440bdac663c3$var$_provider = new class {
    constructor(){
        this.onlyOnceSuggestions = [];
    }
    provideCompletionItems() {
        let suggestions = this.onlyOnceSuggestions.slice(0);
        let result = {
            suggestions: suggestions
        };
        this.onlyOnceSuggestions.length = 0;
        return result;
    }
};
$4PmRQ.CompletionProviderRegistry.register('*', $63d2440bdac663c3$var$_provider);
function $63d2440bdac663c3$export$88d43510c0fc4cc4(editor, suggestions) {
    setTimeout(()=>{
        $63d2440bdac663c3$var$_provider.onlyOnceSuggestions.push(...suggestions);
        editor.getContribution('editor.contrib.suggestController').triggerSuggest(new Set().add($63d2440bdac663c3$var$_provider));
    }, 0);
}



var $4dEdH = parcelRequire("4dEdH");

var $cxCeF = parcelRequire("cxCeF");

var $dvEeB = parcelRequire("dvEeB");

/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $766cb4d8639df7d1$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var $766cb4d8639df7d1$var$__param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
};
const $766cb4d8639df7d1$var$_defaultOptions = {
    overwriteBefore: 0,
    overwriteAfter: 0,
    undoStopBefore: true,
    undoStopAfter: true,
    adjustWhitespace: true,
    clipboardText: undefined,
    overtypingCapturer: undefined
};
let $766cb4d8639df7d1$export$d27b4f7e5ea418b0 = class $766cb4d8639df7d1$export$d27b4f7e5ea418b0 {
    constructor(_editor, _logService, contextKeyService){
        this._editor = _editor;
        this._logService = _logService;
        this._snippetListener = new $9cWcn.DisposableStore();
        this._modelVersionId = -1;
        this._inSnippet = $766cb4d8639df7d1$export$d27b4f7e5ea418b0.InSnippetMode.bindTo(contextKeyService);
        this._hasNextTabstop = $766cb4d8639df7d1$export$d27b4f7e5ea418b0.HasNextTabstop.bindTo(contextKeyService);
        this._hasPrevTabstop = $766cb4d8639df7d1$export$d27b4f7e5ea418b0.HasPrevTabstop.bindTo(contextKeyService);
    }
    static get(editor) {
        return editor.getContribution($766cb4d8639df7d1$export$d27b4f7e5ea418b0.ID);
    }
    dispose() {
        var _a;
        this._inSnippet.reset();
        this._hasPrevTabstop.reset();
        this._hasNextTabstop.reset();
        (_a = this._session) === null || _a === void 0 || _a.dispose();
        this._snippetListener.dispose();
    }
    insert(template, opts) {
        // this is here to find out more about the yet-not-understood
        // error that sometimes happens when we fail to inserted a nested
        // snippet
        try {
            this._doInsert(template, typeof opts === 'undefined' ? $766cb4d8639df7d1$var$_defaultOptions : Object.assign(Object.assign({}, $766cb4d8639df7d1$var$_defaultOptions), opts));
        } catch (e) {
            this.cancel();
            this._logService.error(e);
            this._logService.error('snippet_error');
            this._logService.error('insert_template=', template);
            this._logService.error('existing_template=', this._session ? this._session._logInfo() : '<no_session>');
        }
    }
    _doInsert(template, opts) {
        if (!this._editor.hasModel()) return;
        // don't listen while inserting the snippet
        // as that is the inflight state causing cancelation
        this._snippetListener.clear();
        if (opts.undoStopBefore) this._editor.getModel().pushStackElement();
        if (!this._session) {
            this._modelVersionId = this._editor.getModel().getAlternativeVersionId();
            this._session = new $3531e4d34dfec17c$export$d334bb6e0f563f7(this._editor, template, opts);
            this._session.insert();
        } else this._session.merge(template, opts);
        if (opts.undoStopAfter) this._editor.getModel().pushStackElement();
        this._updateState();
        this._snippetListener.add(this._editor.onDidChangeModelContent((e)=>e.isFlush && this.cancel()
        ));
        this._snippetListener.add(this._editor.onDidChangeModel(()=>this.cancel()
        ));
        this._snippetListener.add(this._editor.onDidChangeCursorSelection(()=>this._updateState()
        ));
    }
    _updateState() {
        if (!this._session || !this._editor.hasModel()) // canceled in the meanwhile
        return;
        if (this._modelVersionId === this._editor.getModel().getAlternativeVersionId()) // undo until the 'before' state happened
        // and makes use cancel snippet mode
        return this.cancel();
        if (!this._session.hasPlaceholder) // don't listen for selection changes and don't
        // update context keys when the snippet is plain text
        return this.cancel();
        if (this._session.isAtLastPlaceholder || !this._session.isSelectionWithinPlaceholders()) return this.cancel();
        this._inSnippet.set(true);
        this._hasPrevTabstop.set(!this._session.isAtFirstPlaceholder);
        this._hasNextTabstop.set(!this._session.isAtLastPlaceholder);
        this._handleChoice();
    }
    _handleChoice() {
        if (!this._session || !this._editor.hasModel()) {
            this._currentChoice = undefined;
            return;
        }
        const { choice: choice  } = this._session;
        if (!choice) {
            this._currentChoice = undefined;
            return;
        }
        if (this._currentChoice !== choice) {
            this._currentChoice = choice;
            this._editor.setSelections(this._editor.getSelections().map((s)=>$jzicX.Selection.fromPositions(s.getStartPosition())
            ));
            const [first] = choice.options;
            $63d2440bdac663c3$exports.showSimpleSuggestions(this._editor, choice.options.map((option, i)=>{
                // let before = choice.options.slice(0, i);
                // let after = choice.options.slice(i);
                return {
                    kind: 13 /* Value */ ,
                    label: option.value,
                    insertText: option.value,
                    // insertText: `\${1|${after.concat(before).join(',')}|}$0`,
                    // snippetType: 'textmate',
                    sortText: 'a'.repeat(i + 1),
                    range: $d00il.Range.fromPositions(this._editor.getPosition(), this._editor.getPosition().delta(0, first.value.length))
                };
            }));
        }
    }
    finish() {
        while(this._inSnippet.get())this.next();
    }
    cancel(resetSelection = false) {
        var _a;
        this._inSnippet.reset();
        this._hasPrevTabstop.reset();
        this._hasNextTabstop.reset();
        this._snippetListener.clear();
        (_a = this._session) === null || _a === void 0 || _a.dispose();
        this._session = undefined;
        this._modelVersionId = -1;
        if (resetSelection) // reset selection to the primary cursor when being asked
        // for. this happens when explicitly cancelling snippet mode,
        // e.g. when pressing ESC
        this._editor.setSelections([
            this._editor.getSelection()
        ]);
    }
    prev() {
        if (this._session) this._session.prev();
        this._updateState();
    }
    next() {
        if (this._session) this._session.next();
        this._updateState();
    }
    isInSnippet() {
        return Boolean(this._inSnippet.get());
    }
};
$766cb4d8639df7d1$export$d27b4f7e5ea418b0.ID = 'snippetController2';
$766cb4d8639df7d1$export$d27b4f7e5ea418b0.InSnippetMode = new $cxCeF.RawContextKey('inSnippetMode', false, $4dEdH.localize('inSnippetMode', "Whether the editor in current in snippet mode"));
$766cb4d8639df7d1$export$d27b4f7e5ea418b0.HasNextTabstop = new $cxCeF.RawContextKey('hasNextTabstop', false, $4dEdH.localize('hasNextTabstop', "Whether there is a next tab stop when in snippet mode"));
$766cb4d8639df7d1$export$d27b4f7e5ea418b0.HasPrevTabstop = new $cxCeF.RawContextKey('hasPrevTabstop', false, $4dEdH.localize('hasPrevTabstop', "Whether there is a previous tab stop when in snippet mode"));
$766cb4d8639df7d1$export$d27b4f7e5ea418b0 = $766cb4d8639df7d1$var$__decorate([
    $766cb4d8639df7d1$var$__param(1, $dvEeB.ILogService),
    $766cb4d8639df7d1$var$__param(2, $cxCeF.IContextKeyService)
], $766cb4d8639df7d1$export$d27b4f7e5ea418b0);
$2iJTi.registerEditorContribution($766cb4d8639df7d1$export$d27b4f7e5ea418b0.ID, $766cb4d8639df7d1$export$d27b4f7e5ea418b0);
const $766cb4d8639df7d1$var$CommandCtor = $2iJTi.EditorCommand.bindToContribution($766cb4d8639df7d1$export$d27b4f7e5ea418b0.get);
$2iJTi.registerEditorCommand(new $766cb4d8639df7d1$var$CommandCtor({
    id: 'jumpToNextSnippetPlaceholder',
    precondition: $cxCeF.ContextKeyExpr.and($766cb4d8639df7d1$export$d27b4f7e5ea418b0.InSnippetMode, $766cb4d8639df7d1$export$d27b4f7e5ea418b0.HasNextTabstop),
    handler: (ctrl)=>ctrl.next()
    ,
    kbOpts: {
        weight: 130,
        kbExpr: $ibKGQ.EditorContextKeys.editorTextFocus,
        primary: 2 /* Tab */ 
    }
}));
$2iJTi.registerEditorCommand(new $766cb4d8639df7d1$var$CommandCtor({
    id: 'jumpToPrevSnippetPlaceholder',
    precondition: $cxCeF.ContextKeyExpr.and($766cb4d8639df7d1$export$d27b4f7e5ea418b0.InSnippetMode, $766cb4d8639df7d1$export$d27b4f7e5ea418b0.HasPrevTabstop),
    handler: (ctrl)=>ctrl.prev()
    ,
    kbOpts: {
        weight: 130,
        kbExpr: $ibKGQ.EditorContextKeys.editorTextFocus,
        primary: 1026 /* Tab */ 
    }
}));
$2iJTi.registerEditorCommand(new $766cb4d8639df7d1$var$CommandCtor({
    id: 'leaveSnippet',
    precondition: $766cb4d8639df7d1$export$d27b4f7e5ea418b0.InSnippetMode,
    handler: (ctrl)=>ctrl.cancel(true)
    ,
    kbOpts: {
        weight: 130,
        kbExpr: $ibKGQ.EditorContextKeys.editorTextFocus,
        primary: 9 /* Escape */ ,
        secondary: [
            1033 /* Escape */ 
        ]
    }
}));
$2iJTi.registerEditorCommand(new $766cb4d8639df7d1$var$CommandCtor({
    id: 'acceptSnippet',
    precondition: $766cb4d8639df7d1$export$d27b4f7e5ea418b0.InSnippetMode,
    handler: (ctrl)=>ctrl.finish()
}));



var $a16af02f54d4b37b$exports = {};

$parcel$export($a16af02f54d4b37b$exports, "ISuggestMemoryService", () => $a16af02f54d4b37b$export$d66aa79ce7d9c867, (v) => $a16af02f54d4b37b$export$d66aa79ce7d9c867 = v);

var $6bXyA = parcelRequire("6bXyA");

var $9cWcn = parcelRequire("9cWcn");

var $askDf = parcelRequire("askDf");

var $4PmRQ = parcelRequire("4PmRQ");

var $35IZ9 = parcelRequire("35IZ9");

var $lf2vF = parcelRequire("lf2vF");

var $fdGPu = parcelRequire("fdGPu");

var $2AUoS = parcelRequire("2AUoS");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $a16af02f54d4b37b$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var $a16af02f54d4b37b$var$__param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
};
class $a16af02f54d4b37b$export$29d4d7bc03c348a5 {
    constructor(name){
        this.name = name;
    }
    select(model, pos, items) {
        if (items.length === 0) return 0;
        let topScore = items[0].score[0];
        for(let i = 0; i < items.length; i++){
            const { score: score , completion: suggestion  } = items[i];
            if (score[0] !== topScore) break;
            if (suggestion.preselect) // stop when seeing an auto-select-item
            return i;
        }
        return 0;
    }
}
class $a16af02f54d4b37b$export$f425102ee8def711 extends $a16af02f54d4b37b$export$29d4d7bc03c348a5 {
    constructor(){
        super('first');
    }
    memorize(model, pos, item) {
    // no-op
    }
    toJSON() {
        return undefined;
    }
    fromJSON() {
    //
    }
}
class $a16af02f54d4b37b$export$ebb88911201cb1d1 extends $a16af02f54d4b37b$export$29d4d7bc03c348a5 {
    constructor(){
        super('recentlyUsed');
        this._cache = new $askDf.LRUCache(300, 0.66);
        this._seq = 0;
    }
    memorize(model, pos, item) {
        const key = `${model.getLanguageId()}/${item.textLabel}`;
        this._cache.set(key, {
            touch: this._seq++,
            type: item.completion.kind,
            insertText: item.completion.insertText
        });
    }
    select(model, pos, items) {
        if (items.length === 0) return 0;
        const lineSuffix = model.getLineContent(pos.lineNumber).substr(pos.column - 10, pos.column - 1);
        if (/\s$/.test(lineSuffix)) return super.select(model, pos, items);
        let topScore = items[0].score[0];
        let indexPreselect = -1;
        let indexRecency = -1;
        let seq = -1;
        for(let i = 0; i < items.length; i++){
            if (items[i].score[0] !== topScore) break;
            const key = `${model.getLanguageId()}/${items[i].textLabel}`;
            const item = this._cache.peek(key);
            if (item && item.touch > seq && item.type === items[i].completion.kind && item.insertText === items[i].completion.insertText) {
                seq = item.touch;
                indexRecency = i;
            }
            if (items[i].completion.preselect && indexPreselect === -1) // stop when seeing an auto-select-item
            return indexPreselect = i;
        }
        if (indexRecency !== -1) return indexRecency;
        else if (indexPreselect !== -1) return indexPreselect;
        else return 0;
    }
    toJSON() {
        return this._cache.toJSON();
    }
    fromJSON(data) {
        this._cache.clear();
        let seq = 0;
        for (const [key, value] of data){
            value.touch = seq;
            value.type = typeof value.type === 'number' ? value.type : $4PmRQ.completionKindFromString(value.type);
            this._cache.set(key, value);
        }
        this._seq = this._cache.size;
    }
}
class $a16af02f54d4b37b$export$9b0af8db2fb435e5 extends $a16af02f54d4b37b$export$29d4d7bc03c348a5 {
    constructor(){
        super('recentlyUsedByPrefix');
        this._trie = $askDf.TernarySearchTree.forStrings();
        this._seq = 0;
    }
    memorize(model, pos, item) {
        const { word: word  } = model.getWordUntilPosition(pos);
        const key = `${model.getLanguageId()}/${word}`;
        this._trie.set(key, {
            type: item.completion.kind,
            insertText: item.completion.insertText,
            touch: this._seq++
        });
    }
    select(model, pos, items) {
        let { word: word  } = model.getWordUntilPosition(pos);
        if (!word) return super.select(model, pos, items);
        let key = `${model.getLanguageId()}/${word}`;
        let item = this._trie.get(key);
        if (!item) item = this._trie.findSubstr(key);
        if (item) for(let i = 0; i < items.length; i++){
            let { kind: kind , insertText: insertText  } = items[i].completion;
            if (kind === item.type && insertText === item.insertText) return i;
        }
        return super.select(model, pos, items);
    }
    toJSON() {
        let entries = [];
        this._trie.forEach((value, key)=>entries.push([
                key,
                value
            ])
        );
        // sort by last recently used (touch), then
        // take the top 200 item and normalize their
        // touch
        entries.sort((a, b)=>-(a[1].touch - b[1].touch)
        ).forEach((value, i)=>value[1].touch = i
        );
        return entries.slice(0, 200);
    }
    fromJSON(data) {
        this._trie.clear();
        if (data.length > 0) {
            this._seq = data[0][1].touch + 1;
            for (const [key, value] of data){
                value.type = typeof value.type === 'number' ? value.type : $4PmRQ.completionKindFromString(value.type);
                this._trie.set(key, value);
            }
        }
    }
}
let $a16af02f54d4b37b$export$50aa987e170ccef7 = class $a16af02f54d4b37b$export$50aa987e170ccef7 {
    constructor(_storageService, _configService){
        this._storageService = _storageService;
        this._configService = _configService;
        this._disposables = new $9cWcn.DisposableStore();
        this._persistSoon = new $6bXyA.RunOnceScheduler(()=>this._saveState()
        , 500);
        this._disposables.add(_storageService.onWillSaveState((e)=>{
            if (e.reason === $2AUoS.WillSaveStateReason.SHUTDOWN) this._saveState();
        }));
    }
    dispose() {
        this._disposables.dispose();
        this._persistSoon.dispose();
    }
    memorize(model, pos, item) {
        this._withStrategy(model, pos).memorize(model, pos, item);
        this._persistSoon.schedule();
    }
    select(model, pos, items) {
        return this._withStrategy(model, pos).select(model, pos, items);
    }
    _withStrategy(model, pos) {
        var _a;
        const mode = this._configService.getValue('editor.suggestSelection', {
            overrideIdentifier: model.getLanguageIdAtPosition(pos.lineNumber, pos.column),
            resource: model.uri
        });
        if (((_a = this._strategy) === null || _a === void 0 ? void 0 : _a.name) !== mode) {
            this._saveState();
            const ctor = $a16af02f54d4b37b$export$50aa987e170ccef7._strategyCtors.get(mode) || $a16af02f54d4b37b$export$f425102ee8def711;
            this._strategy = new ctor();
            try {
                const share = this._configService.getValue('editor.suggest.shareSuggestSelections');
                const scope = share ? 0 /* GLOBAL */  : 1 /* WORKSPACE */ ;
                const raw = this._storageService.get(`${$a16af02f54d4b37b$export$50aa987e170ccef7._storagePrefix}/${mode}`, scope);
                if (raw) this._strategy.fromJSON(JSON.parse(raw));
            } catch (e) {
            // things can go wrong with JSON...
            }
        }
        return this._strategy;
    }
    _saveState() {
        if (this._strategy) {
            const share = this._configService.getValue('editor.suggest.shareSuggestSelections');
            const scope = share ? 0 /* GLOBAL */  : 1 /* WORKSPACE */ ;
            const raw = JSON.stringify(this._strategy);
            this._storageService.store(`${$a16af02f54d4b37b$export$50aa987e170ccef7._storagePrefix}/${this._strategy.name}`, raw, scope, 1 /* MACHINE */ );
        }
    }
};
$a16af02f54d4b37b$export$50aa987e170ccef7._strategyCtors = new Map([
    [
        'recentlyUsedByPrefix',
        $a16af02f54d4b37b$export$9b0af8db2fb435e5
    ],
    [
        'recentlyUsed',
        $a16af02f54d4b37b$export$ebb88911201cb1d1
    ],
    [
        'first',
        $a16af02f54d4b37b$export$f425102ee8def711
    ]
]);
$a16af02f54d4b37b$export$50aa987e170ccef7._storagePrefix = 'suggest/memories';
$a16af02f54d4b37b$export$50aa987e170ccef7 = $a16af02f54d4b37b$var$__decorate([
    $a16af02f54d4b37b$var$__param(0, $2AUoS.IStorageService),
    $a16af02f54d4b37b$var$__param(1, $35IZ9.IConfigurationService)
], $a16af02f54d4b37b$export$50aa987e170ccef7);
const $a16af02f54d4b37b$export$d66aa79ce7d9c867 = $fdGPu.createDecorator('ISuggestMemories');
$lf2vF.registerSingleton($a16af02f54d4b37b$export$d66aa79ce7d9c867, $a16af02f54d4b37b$export$50aa987e170ccef7, true);


var $e266c08347cc7ab6$exports = {};

$parcel$export($e266c08347cc7ab6$exports, "WordContextKey", () => $e266c08347cc7ab6$export$f4d1b9d63b237092, (v) => $e266c08347cc7ab6$export$f4d1b9d63b237092 = v);

var $cxCeF = parcelRequire("cxCeF");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $e266c08347cc7ab6$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var $e266c08347cc7ab6$var$__param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
};
let $e266c08347cc7ab6$export$f4d1b9d63b237092 = class $e266c08347cc7ab6$export$f4d1b9d63b237092 {
    constructor(_editor, contextKeyService){
        this._editor = _editor;
        this._enabled = false;
        this._ckAtEnd = $e266c08347cc7ab6$export$f4d1b9d63b237092.AtEnd.bindTo(contextKeyService);
        this._configListener = this._editor.onDidChangeConfiguration((e)=>e.hasChanged(110 /* tabCompletion */ ) && this._update()
        );
        this._update();
    }
    dispose() {
        var _a;
        this._configListener.dispose();
        (_a = this._selectionListener) === null || _a === void 0 || _a.dispose();
        this._ckAtEnd.reset();
    }
    _update() {
        // only update this when tab completions are enabled
        const enabled = this._editor.getOption(110 /* tabCompletion */ ) === 'on';
        if (this._enabled === enabled) return;
        this._enabled = enabled;
        if (this._enabled) {
            const checkForWordEnd = ()=>{
                if (!this._editor.hasModel()) {
                    this._ckAtEnd.set(false);
                    return;
                }
                const model = this._editor.getModel();
                const selection = this._editor.getSelection();
                const word = model.getWordAtPosition(selection.getStartPosition());
                if (!word) {
                    this._ckAtEnd.set(false);
                    return;
                }
                this._ckAtEnd.set(word.endColumn === selection.getStartPosition().column);
            };
            this._selectionListener = this._editor.onDidChangeCursorSelection(checkForWordEnd);
            checkForWordEnd();
        } else if (this._selectionListener) {
            this._ckAtEnd.reset();
            this._selectionListener.dispose();
            this._selectionListener = undefined;
        }
    }
};
$e266c08347cc7ab6$export$f4d1b9d63b237092.AtEnd = new $cxCeF.RawContextKey('atEndOfWord', false);
$e266c08347cc7ab6$export$f4d1b9d63b237092 = $e266c08347cc7ab6$var$__decorate([
    $e266c08347cc7ab6$var$__param(1, $cxCeF.IContextKeyService)
], $e266c08347cc7ab6$export$f4d1b9d63b237092);



var $4dEdH = parcelRequire("4dEdH");

var $g4v7E = parcelRequire("g4v7E");

var $8tcMz = parcelRequire("8tcMz");

var $cxCeF = parcelRequire("cxCeF");

var $fdGPu = parcelRequire("fdGPu");

var $6AWYG = parcelRequire("6AWYG");

var $dvEeB = parcelRequire("dvEeB");

var $06d28af192ee2bcf$exports = {};

$parcel$export($06d28af192ee2bcf$exports, "SuggestAlternatives", () => $06d28af192ee2bcf$export$26081dcda3428b4d, (v) => $06d28af192ee2bcf$export$26081dcda3428b4d = v);

var $cxCeF = parcelRequire("cxCeF");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $06d28af192ee2bcf$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var $06d28af192ee2bcf$var$__param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
};
let $06d28af192ee2bcf$export$26081dcda3428b4d = class $06d28af192ee2bcf$export$26081dcda3428b4d {
    constructor(_editor, contextKeyService){
        this._editor = _editor;
        this._index = 0;
        this._ckOtherSuggestions = $06d28af192ee2bcf$export$26081dcda3428b4d.OtherSuggestions.bindTo(contextKeyService);
    }
    dispose() {
        this.reset();
    }
    reset() {
        var _a;
        this._ckOtherSuggestions.reset();
        (_a = this._listener) === null || _a === void 0 || _a.dispose();
        this._model = undefined;
        this._acceptNext = undefined;
        this._ignore = false;
    }
    set({ model: model , index: index  }, acceptNext) {
        // no suggestions -> nothing to do
        if (model.items.length === 0) {
            this.reset();
            return;
        }
        // no alternative suggestions -> nothing to do
        let nextIndex = $06d28af192ee2bcf$export$26081dcda3428b4d._moveIndex(true, model, index);
        if (nextIndex === index) {
            this.reset();
            return;
        }
        this._acceptNext = acceptNext;
        this._model = model;
        this._index = index;
        this._listener = this._editor.onDidChangeCursorPosition(()=>{
            if (!this._ignore) this.reset();
        });
        this._ckOtherSuggestions.set(true);
    }
    static _moveIndex(fwd, model, index) {
        let newIndex = index;
        while(true){
            newIndex = (newIndex + model.items.length + (fwd ? 1 : -1)) % model.items.length;
            if (newIndex === index) break;
            if (!model.items[newIndex].completion.additionalTextEdits) break;
        }
        return newIndex;
    }
    next() {
        this._move(true);
    }
    prev() {
        this._move(false);
    }
    _move(fwd) {
        if (!this._model) // nothing to reason about
        return;
        try {
            this._ignore = true;
            this._index = $06d28af192ee2bcf$export$26081dcda3428b4d._moveIndex(fwd, this._model, this._index);
            this._acceptNext({
                index: this._index,
                item: this._model.items[this._index],
                model: this._model
            });
        } finally{
            this._ignore = false;
        }
    }
};
$06d28af192ee2bcf$export$26081dcda3428b4d.OtherSuggestions = new $cxCeF.RawContextKey('hasOtherSuggestions', false);
$06d28af192ee2bcf$export$26081dcda3428b4d = $06d28af192ee2bcf$var$__decorate([
    $06d28af192ee2bcf$var$__param(1, $cxCeF.IContextKeyService)
], $06d28af192ee2bcf$export$26081dcda3428b4d);



var $kJ8UG = parcelRequire("kJ8UG");

var $9cWcn = parcelRequire("9cWcn");

var $kNeNo = parcelRequire("kNeNo");
class $f65a77bae671f047$export$1c5a4637a8cc1b47 {
    constructor(editor, widget, accept){
        this._disposables = new $9cWcn.DisposableStore();
        this._disposables.add(widget.onDidShow(()=>this._onItem(widget.getFocusedItem())
        ));
        this._disposables.add(widget.onDidFocus(this._onItem, this));
        this._disposables.add(widget.onDidHide(this.reset, this));
        this._disposables.add(editor.onWillType((text)=>{
            if (this._active && !widget.isFrozen()) {
                const ch = text.charCodeAt(text.length - 1);
                if (this._active.acceptCharacters.has(ch) && editor.getOption(0 /* acceptSuggestionOnCommitCharacter */ )) accept(this._active.item);
            }
        }));
    }
    _onItem(selected) {
        if (!selected || !$kJ8UG.isNonEmptyArray(selected.item.completion.commitCharacters)) {
            // no item or no commit characters
            this.reset();
            return;
        }
        if (this._active && this._active.item.item === selected.item) // still the same item
        return;
        // keep item and its commit characters
        const acceptCharacters = new $kNeNo.CharacterSet();
        for (const ch of selected.item.completion.commitCharacters)if (ch.length > 0) acceptCharacters.add(ch.charCodeAt(0));
        this._active = {
            acceptCharacters: acceptCharacters,
            item: selected
        };
    }
    reset() {
        this._active = undefined;
    }
    dispose() {
        this._disposables.dispose();
    }
}


var $f6249e777a38f23e$exports = {};

$parcel$export($f6249e777a38f23e$exports, "SuggestModel", () => $f6249e777a38f23e$export$bd6d3a37695095d5, (v) => $f6249e777a38f23e$export$bd6d3a37695095d5 = v);

var $6bXyA = parcelRequire("6bXyA");

var $giPcZ = parcelRequire("giPcZ");

var $gPkHZ = parcelRequire("gPkHZ");

var $5YaSO = parcelRequire("5YaSO");

var $9cWcn = parcelRequire("9cWcn");

var $jcr1R = parcelRequire("jcr1R");

var $jzicX = parcelRequire("jzicX");

var $4PmRQ = parcelRequire("4PmRQ");

var $aPs2m = parcelRequire("aPs2m");

var $86aedc25706dd37f$exports = {};

$parcel$export($86aedc25706dd37f$exports, "WordDistance", () => $86aedc25706dd37f$export$620c7fa9f786bff6, (v) => $86aedc25706dd37f$export$620c7fa9f786bff6 = v);

var $kJ8UG = parcelRequire("kJ8UG");

var $d00il = parcelRequire("d00il");
var $c53404b201a26704$exports = {};

$parcel$export($c53404b201a26704$exports, "BracketSelectionRangeProvider", () => $c53404b201a26704$export$aa5c9041294ca4c8, (v) => $c53404b201a26704$export$aa5c9041294ca4c8 = v);

var $76Edp = parcelRequire("76Edp");

var $dcxQ7 = parcelRequire("dcxQ7");

var $d00il = parcelRequire("d00il");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $c53404b201a26704$var$__awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
class $c53404b201a26704$export$aa5c9041294ca4c8 {
    provideSelectionRanges(model, positions) {
        return $c53404b201a26704$var$__awaiter(this, void 0, void 0, function*() {
            const result = [];
            for (const position of positions){
                const bucket = [];
                result.push(bucket);
                const ranges = new Map();
                yield new Promise((resolve)=>$c53404b201a26704$export$aa5c9041294ca4c8._bracketsRightYield(resolve, 0, model, position, ranges)
                );
                yield new Promise((resolve)=>$c53404b201a26704$export$aa5c9041294ca4c8._bracketsLeftYield(resolve, 0, model, position, ranges, bucket)
                );
            }
            return result;
        });
    }
    static _bracketsRightYield(resolve, round, model, pos, ranges) {
        const counts = new Map();
        const t1 = Date.now();
        while(true){
            if (round >= $c53404b201a26704$export$aa5c9041294ca4c8._maxRounds) {
                resolve();
                break;
            }
            if (!pos) {
                resolve();
                break;
            }
            let bracket = model.bracketPairs.findNextBracket(pos);
            if (!bracket) {
                resolve();
                break;
            }
            let d = Date.now() - t1;
            if (d > $c53404b201a26704$export$aa5c9041294ca4c8._maxDuration) {
                setTimeout(()=>$c53404b201a26704$export$aa5c9041294ca4c8._bracketsRightYield(resolve, round + 1, model, pos, ranges)
                );
                break;
            }
            const key = bracket.close[0];
            if (bracket.isOpen) {
                // wait for closing
                let val = counts.has(key) ? counts.get(key) : 0;
                counts.set(key, val + 1);
            } else {
                // process closing
                let val = counts.has(key) ? counts.get(key) : 0;
                val -= 1;
                counts.set(key, Math.max(0, val));
                if (val < 0) {
                    let list = ranges.get(key);
                    if (!list) {
                        list = new $76Edp.LinkedList();
                        ranges.set(key, list);
                    }
                    list.push(bracket.range);
                }
            }
            pos = bracket.range.getEndPosition();
        }
    }
    static _bracketsLeftYield(resolve, round, model, pos, ranges, bucket) {
        const counts = new Map();
        const t1 = Date.now();
        while(true){
            if (round >= $c53404b201a26704$export$aa5c9041294ca4c8._maxRounds && ranges.size === 0) {
                resolve();
                break;
            }
            if (!pos) {
                resolve();
                break;
            }
            let bracket = model.bracketPairs.findPrevBracket(pos);
            if (!bracket) {
                resolve();
                break;
            }
            let d = Date.now() - t1;
            if (d > $c53404b201a26704$export$aa5c9041294ca4c8._maxDuration) {
                setTimeout(()=>$c53404b201a26704$export$aa5c9041294ca4c8._bracketsLeftYield(resolve, round + 1, model, pos, ranges, bucket)
                );
                break;
            }
            const key = bracket.close[0];
            if (!bracket.isOpen) {
                // wait for opening
                let val = counts.has(key) ? counts.get(key) : 0;
                counts.set(key, val + 1);
            } else {
                // opening
                let val = counts.has(key) ? counts.get(key) : 0;
                val -= 1;
                counts.set(key, Math.max(0, val));
                if (val < 0) {
                    let list = ranges.get(key);
                    if (list) {
                        let closing = list.shift();
                        if (list.size === 0) ranges.delete(key);
                        const innerBracket = $d00il.Range.fromPositions(bracket.range.getEndPosition(), closing.getStartPosition());
                        const outerBracket = $d00il.Range.fromPositions(bracket.range.getStartPosition(), closing.getEndPosition());
                        bucket.push({
                            range: innerBracket
                        });
                        bucket.push({
                            range: outerBracket
                        });
                        $c53404b201a26704$export$aa5c9041294ca4c8._addBracketLeading(model, outerBracket, bucket);
                    }
                }
            }
            pos = bracket.range.getStartPosition();
        }
    }
    static _addBracketLeading(model, bracket, bucket) {
        if (bracket.startLineNumber === bracket.endLineNumber) return;
        // xxxxxxxx {
        //
        // }
        const startLine = bracket.startLineNumber;
        const column = model.getLineFirstNonWhitespaceColumn(startLine);
        if (column !== 0 && column !== bracket.startColumn) {
            bucket.push({
                range: $d00il.Range.fromPositions(new $dcxQ7.Position(startLine, column), bracket.getEndPosition())
            });
            bucket.push({
                range: $d00il.Range.fromPositions(new $dcxQ7.Position(startLine, 1), bracket.getEndPosition())
            });
        }
        // xxxxxxxx
        // {
        //
        // }
        const aboveLine = startLine - 1;
        if (aboveLine > 0) {
            const column = model.getLineFirstNonWhitespaceColumn(aboveLine);
            if (column === bracket.startColumn && column !== model.getLineLastNonWhitespaceColumn(aboveLine)) {
                bucket.push({
                    range: $d00il.Range.fromPositions(new $dcxQ7.Position(aboveLine, column), bracket.getEndPosition())
                });
                bucket.push({
                    range: $d00il.Range.fromPositions(new $dcxQ7.Position(aboveLine, 1), bracket.getEndPosition())
                });
            }
        }
    }
}
$c53404b201a26704$export$aa5c9041294ca4c8._maxDuration = 30;
$c53404b201a26704$export$aa5c9041294ca4c8._maxRounds = 2;


/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $86aedc25706dd37f$var$__awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
class $86aedc25706dd37f$export$620c7fa9f786bff6 {
    static create(service, editor) {
        return $86aedc25706dd37f$var$__awaiter(this, void 0, void 0, function*() {
            if (!editor.getOption(105 /* suggest */ ).localityBonus) return $86aedc25706dd37f$export$620c7fa9f786bff6.None;
            if (!editor.hasModel()) return $86aedc25706dd37f$export$620c7fa9f786bff6.None;
            const model = editor.getModel();
            const position = editor.getPosition();
            if (!service.canComputeWordRanges(model.uri)) return $86aedc25706dd37f$export$620c7fa9f786bff6.None;
            const [ranges] = yield new $c53404b201a26704$exports.BracketSelectionRangeProvider().provideSelectionRanges(model, [
                position
            ]);
            if (ranges.length === 0) return $86aedc25706dd37f$export$620c7fa9f786bff6.None;
            const wordRanges = yield service.computeWordRanges(model.uri, ranges[0].range);
            if (!wordRanges) return $86aedc25706dd37f$export$620c7fa9f786bff6.None;
            // remove current word
            const wordUntilPos = model.getWordUntilPosition(position);
            delete wordRanges[wordUntilPos.word];
            return new class extends $86aedc25706dd37f$export$620c7fa9f786bff6 {
                distance(anchor, item) {
                    if (!position.equals(editor.getPosition())) return 0;
                    if (item.kind === 17 /* Keyword */ ) return 2097152;
                    let word = typeof item.label === 'string' ? item.label : item.label.label;
                    let wordLines = wordRanges[word];
                    if ($kJ8UG.isFalsyOrEmpty(wordLines)) return 2097152;
                    let idx = $kJ8UG.binarySearch(wordLines, $d00il.Range.fromPositions(anchor), $d00il.Range.compareRangesUsingStarts);
                    let bestWordRange = idx >= 0 ? wordLines[idx] : wordLines[Math.max(0, ~idx - 1)];
                    let blockDistance = ranges.length;
                    for (const range of ranges){
                        if (!$d00il.Range.containsRange(range.range, bestWordRange)) break;
                        blockDistance -= 1;
                    }
                    return blockDistance;
                }
            };
        });
    }
}
$86aedc25706dd37f$export$620c7fa9f786bff6.None = new class extends $86aedc25706dd37f$export$620c7fa9f786bff6 {
    distance() {
        return 0;
    }
};



var $8QSW4 = parcelRequire("8QSW4");

var $35IZ9 = parcelRequire("35IZ9");

var $cxCeF = parcelRequire("cxCeF");

var $dvEeB = parcelRequire("dvEeB");

var $lMGba = parcelRequire("lMGba");

var $kJ8UG = parcelRequire("kJ8UG");

var $lk06m = parcelRequire("lk06m");

var $jcr1R = parcelRequire("jcr1R");
class $a3e378de1924f763$export$894a84ea03928d60 {
    constructor(leadingLineContent, characterCountDelta){
        this.leadingLineContent = leadingLineContent;
        this.characterCountDelta = characterCountDelta;
    }
}
class $a3e378de1924f763$export$8420ec00c11e432f {
    constructor(items, column, lineContext, wordDistance, options, snippetSuggestions, clipboardText){
        this.clipboardText = clipboardText;
        this._snippetCompareFn = $a3e378de1924f763$export$8420ec00c11e432f._compareCompletionItems;
        this._items = items;
        this._column = column;
        this._wordDistance = wordDistance;
        this._options = options;
        this._refilterKind = 1 /* All */ ;
        this._lineContext = lineContext;
        if (snippetSuggestions === 'top') this._snippetCompareFn = $a3e378de1924f763$export$8420ec00c11e432f._compareCompletionItemsSnippetsUp;
        else if (snippetSuggestions === 'bottom') this._snippetCompareFn = $a3e378de1924f763$export$8420ec00c11e432f._compareCompletionItemsSnippetsDown;
    }
    get lineContext() {
        return this._lineContext;
    }
    set lineContext(value) {
        if (this._lineContext.leadingLineContent !== value.leadingLineContent || this._lineContext.characterCountDelta !== value.characterCountDelta) {
            this._refilterKind = this._lineContext.characterCountDelta < value.characterCountDelta && this._filteredItems ? 2 /* Incr */  : 1 /* All */ ;
            this._lineContext = value;
        }
    }
    get items() {
        this._ensureCachedState();
        return this._filteredItems;
    }
    get allProvider() {
        this._ensureCachedState();
        return this._providerInfo.keys();
    }
    get incomplete() {
        this._ensureCachedState();
        const result = new Set();
        for (let [provider, incomplete] of this._providerInfo)if (incomplete) result.add(provider);
        return result;
    }
    adopt(except) {
        let res = [];
        for(let i = 0; i < this._items.length;)if (!except.has(this._items[i].provider)) {
            res.push(this._items[i]);
            // unordered removed
            this._items[i] = this._items[this._items.length - 1];
            this._items.pop();
        } else // continue with next item
        i++;
        this._refilterKind = 1 /* All */ ;
        return res;
    }
    get stats() {
        this._ensureCachedState();
        return this._stats;
    }
    _ensureCachedState() {
        if (this._refilterKind !== 0 /* Nothing */ ) this._createCachedState();
    }
    _createCachedState() {
        this._providerInfo = new Map();
        const labelLengths = [];
        const { leadingLineContent: leadingLineContent , characterCountDelta: characterCountDelta  } = this._lineContext;
        let word = '';
        let wordLow = '';
        // incrementally filter less
        const source = this._refilterKind === 1 /* All */  ? this._items : this._filteredItems;
        const target = [];
        // picks a score function based on the number of
        // items that we have to score/filter and based on the
        // user-configuration
        const scoreFn = !this._options.filterGraceful || source.length > 2000 ? $lk06m.fuzzyScore : $lk06m.fuzzyScoreGracefulAggressive;
        for(let i = 0; i < source.length; i++){
            const item = source[i];
            if (item.isInvalid) continue; // SKIP invalid items
            // collect all support, know if their result is incomplete
            this._providerInfo.set(item.provider, Boolean(item.container.incomplete));
            // 'word' is that remainder of the current line that we
            // filter and score against. In theory each suggestion uses a
            // different word, but in practice not - that's why we cache
            const overwriteBefore = item.position.column - item.editStart.column;
            const wordLen = overwriteBefore + characterCountDelta - (item.position.column - this._column);
            if (word.length !== wordLen) {
                word = wordLen === 0 ? '' : leadingLineContent.slice(-wordLen);
                wordLow = word.toLowerCase();
            }
            // remember the word against which this item was
            // scored
            item.word = word;
            if (wordLen === 0) // when there is nothing to score against, don't
            // event try to do. Use a const rank and rely on
            // the fallback-sort using the initial sort order.
            // use a score of `-100` because that is out of the
            // bound of values `fuzzyScore` will return
            item.score = $lk06m.FuzzyScore.Default;
            else {
                // skip word characters that are whitespace until
                // we have hit the replace range (overwriteBefore)
                let wordPos = 0;
                while(wordPos < overwriteBefore){
                    const ch = word.charCodeAt(wordPos);
                    if (ch === 32 /* Space */  || ch === 9 /* Tab */ ) wordPos += 1;
                    else break;
                }
                if (wordPos >= wordLen) // the wordPos at which scoring starts is the whole word
                // and therefore the same rules as not having a word apply
                item.score = $lk06m.FuzzyScore.Default;
                else if (typeof item.completion.filterText === 'string') {
                    // when there is a `filterText` it must match the `word`.
                    // if it matches we check with the label to compute highlights
                    // and if that doesn't yield a result we have no highlights,
                    // despite having the match
                    let match = scoreFn(word, wordLow, wordPos, item.completion.filterText, item.filterTextLow, 0, false);
                    if (!match) continue; // NO match
                    if ($jcr1R.compareIgnoreCase(item.completion.filterText, item.textLabel) === 0) // filterText and label are actually the same -> use good highlights
                    item.score = match;
                    else {
                        // re-run the scorer on the label in the hope of a result BUT use the rank
                        // of the filterText-match
                        item.score = $lk06m.anyScore(word, wordLow, wordPos, item.textLabel, item.labelLow, 0);
                        item.score[0] = match[0]; // use score from filterText
                    }
                } else {
                    // by default match `word` against the `label`
                    let match = scoreFn(word, wordLow, wordPos, item.textLabel, item.labelLow, 0, false);
                    if (!match) continue; // NO match
                    item.score = match;
                }
            }
            item.idx = i;
            item.distance = this._wordDistance.distance(item.position, item.completion);
            target.push(item);
            // update stats
            labelLengths.push(item.textLabel.length);
        }
        this._filteredItems = target.sort(this._snippetCompareFn);
        this._refilterKind = 0 /* Nothing */ ;
        this._stats = {
            pLabelLen: labelLengths.length ? $kJ8UG.quickSelect(labelLengths.length - 0.85, labelLengths, (a, b)=>a - b
            ) : 0
        };
    }
    static _compareCompletionItems(a, b) {
        if (a.score[0] > b.score[0]) return -1;
        else if (a.score[0] < b.score[0]) return 1;
        else if (a.distance < b.distance) return -1;
        else if (a.distance > b.distance) return 1;
        else if (a.idx < b.idx) return -1;
        else if (a.idx > b.idx) return 1;
        else return 0;
    }
    static _compareCompletionItemsSnippetsDown(a, b) {
        if (a.completion.kind !== b.completion.kind) {
            if (a.completion.kind === 27 /* Snippet */ ) return 1;
            else if (b.completion.kind === 27 /* Snippet */ ) return -1;
        }
        return $a3e378de1924f763$export$8420ec00c11e432f._compareCompletionItems(a, b);
    }
    static _compareCompletionItemsSnippetsUp(a, b) {
        if (a.completion.kind !== b.completion.kind) {
            if (a.completion.kind === 27 /* Snippet */ ) return -1;
            else if (b.completion.kind === 27 /* Snippet */ ) return 1;
        }
        return $a3e378de1924f763$export$8420ec00c11e432f._compareCompletionItems(a, b);
    }
}



/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $f6249e777a38f23e$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var $f6249e777a38f23e$var$__param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
};
var $f6249e777a38f23e$var$__awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
class $f6249e777a38f23e$export$894a84ea03928d60 {
    constructor(model, position, auto, shy){
        this.leadingLineContent = model.getLineContent(position.lineNumber).substr(0, position.column - 1);
        this.leadingWord = model.getWordUntilPosition(position);
        this.lineNumber = position.lineNumber;
        this.column = position.column;
        this.auto = auto;
        this.shy = shy;
    }
    static shouldAutoTrigger(editor) {
        if (!editor.hasModel()) return false;
        const model = editor.getModel();
        const pos = editor.getPosition();
        model.tokenizeIfCheap(pos.lineNumber);
        const word = model.getWordAtPosition(pos);
        if (!word) return false;
        if (word.endColumn !== pos.column) return false;
        if (!isNaN(Number(word.word))) return false;
        return true;
    }
}
function $f6249e777a38f23e$var$isSuggestPreviewEnabled(editor) {
    return editor.getOption(105 /* suggest */ ).preview;
}
function $f6249e777a38f23e$var$canShowQuickSuggest(editor, contextKeyService, configurationService) {
    if (!Boolean(contextKeyService.getContextKeyValue('inlineSuggestionVisible'))) // Allow if there is no inline suggestion.
    return true;
    const allowQuickSuggestions = configurationService.getValue('editor.inlineSuggest.allowQuickSuggestions');
    if (allowQuickSuggestions !== undefined) // Use setting if available.
    return Boolean(allowQuickSuggestions);
    // Don't allow if inline suggestions are visible and no suggest preview is configured.
    // TODO disabled for copilot
    return false;
}
function $f6249e777a38f23e$var$canShowSuggestOnTriggerCharacters(editor, contextKeyService, configurationService) {
    if (!Boolean(contextKeyService.getContextKeyValue('inlineSuggestionVisible'))) // Allow if there is no inline suggestion.
    return true;
    const allowQuickSuggestions = configurationService.getValue('editor.inlineSuggest.allowSuggestOnTriggerCharacters');
    if (allowQuickSuggestions !== undefined) // Use setting if available.
    return Boolean(allowQuickSuggestions);
    // Don't allow if inline suggestions are visible and no suggest preview is configured.
    // TODO disabled for copilot
    return false;
}
let $f6249e777a38f23e$export$bd6d3a37695095d5 = class $f6249e777a38f23e$export$bd6d3a37695095d5 {
    constructor(_editor, _editorWorkerService, _clipboardService, _telemetryService, _logService, _contextKeyService, _configurationService){
        this._editor = _editor;
        this._editorWorkerService = _editorWorkerService;
        this._clipboardService = _clipboardService;
        this._telemetryService = _telemetryService;
        this._logService = _logService;
        this._contextKeyService = _contextKeyService;
        this._configurationService = _configurationService;
        this._toDispose = new $9cWcn.DisposableStore();
        this._quickSuggestDelay = 10;
        this._triggerCharacterListener = new $9cWcn.DisposableStore();
        this._triggerQuickSuggest = new $6bXyA.TimeoutTimer();
        this._state = 0 /* Idle */ ;
        this._completionDisposables = new $9cWcn.DisposableStore();
        this._onDidCancel = new $5YaSO.Emitter();
        this._onDidTrigger = new $5YaSO.Emitter();
        this._onDidSuggest = new $5YaSO.Emitter();
        this.onDidCancel = this._onDidCancel.event;
        this.onDidTrigger = this._onDidTrigger.event;
        this.onDidSuggest = this._onDidSuggest.event;
        this._telemetryGate = 0;
        this._currentSelection = this._editor.getSelection() || new $jzicX.Selection(1, 1, 1, 1);
        // wire up various listeners
        this._toDispose.add(this._editor.onDidChangeModel(()=>{
            this._updateTriggerCharacters();
            this.cancel();
        }));
        this._toDispose.add(this._editor.onDidChangeModelLanguage(()=>{
            this._updateTriggerCharacters();
            this.cancel();
        }));
        this._toDispose.add(this._editor.onDidChangeConfiguration(()=>{
            this._updateTriggerCharacters();
            this._updateQuickSuggest();
        }));
        this._toDispose.add($4PmRQ.CompletionProviderRegistry.onDidChange(()=>{
            this._updateTriggerCharacters();
            this._updateActiveSuggestSession();
        }));
        this._toDispose.add(this._editor.onDidChangeCursorSelection((e)=>{
            this._onCursorChange(e);
        }));
        let editorIsComposing = false;
        this._toDispose.add(this._editor.onDidCompositionStart(()=>{
            editorIsComposing = true;
        }));
        this._toDispose.add(this._editor.onDidCompositionEnd(()=>{
            editorIsComposing = false;
            this._onCompositionEnd();
        }));
        this._toDispose.add(this._editor.onDidChangeModelContent(()=>{
            // only filter completions when the editor isn't composing a character
            // allow-any-unicode-next-line
            // e.g. ¨ + u makes ü but just ¨ cannot be used for filtering
            if (!editorIsComposing) this._refilterCompletionItems();
        }));
        this._updateTriggerCharacters();
        this._updateQuickSuggest();
    }
    dispose() {
        $9cWcn.dispose(this._triggerCharacterListener);
        $9cWcn.dispose([
            this._onDidCancel,
            this._onDidSuggest,
            this._onDidTrigger,
            this._triggerQuickSuggest
        ]);
        this._toDispose.dispose();
        this._completionDisposables.dispose();
        this.cancel();
    }
    // --- handle configuration & precondition changes
    _updateQuickSuggest() {
        this._quickSuggestDelay = this._editor.getOption(79 /* quickSuggestionsDelay */ );
        if (isNaN(this._quickSuggestDelay) || !this._quickSuggestDelay && this._quickSuggestDelay !== 0 || this._quickSuggestDelay < 0) this._quickSuggestDelay = 10;
    }
    _updateTriggerCharacters() {
        this._triggerCharacterListener.clear();
        if (this._editor.getOption(80 /* readOnly */ ) || !this._editor.hasModel() || !this._editor.getOption(108 /* suggestOnTriggerCharacters */ )) return;
        const supportsByTriggerCharacter = new Map();
        for (const support of $4PmRQ.CompletionProviderRegistry.all(this._editor.getModel()))for (const ch of support.triggerCharacters || []){
            let set = supportsByTriggerCharacter.get(ch);
            if (!set) {
                set = new Set();
                set.add($63d2440bdac663c3$exports.getSnippetSuggestSupport());
                supportsByTriggerCharacter.set(ch, set);
            }
            set.add(support);
        }
        const checkTriggerCharacter = (text)=>{
            if (!$f6249e777a38f23e$var$canShowSuggestOnTriggerCharacters(this._editor, this._contextKeyService, this._configurationService)) return;
            if ($f6249e777a38f23e$export$894a84ea03928d60.shouldAutoTrigger(this._editor)) // don't trigger by trigger characters when this is a case for quick suggest
            return;
            if (!text) {
                // came here from the compositionEnd-event
                const position = this._editor.getPosition();
                const model = this._editor.getModel();
                text = model.getLineContent(position.lineNumber).substr(0, position.column - 1);
            }
            let lastChar = '';
            if ($jcr1R.isLowSurrogate(text.charCodeAt(text.length - 1))) {
                if ($jcr1R.isHighSurrogate(text.charCodeAt(text.length - 2))) lastChar = text.substr(text.length - 2);
            } else lastChar = text.charAt(text.length - 1);
            const supports = supportsByTriggerCharacter.get(lastChar);
            if (supports) {
                // keep existing items that where not computed by the
                // supports/providers that want to trigger now
                const existing = this._completionModel ? {
                    items: this._completionModel.adopt(supports),
                    clipboardText: this._completionModel.clipboardText
                } : undefined;
                this.trigger({
                    auto: true,
                    shy: false,
                    triggerCharacter: lastChar
                }, Boolean(this._completionModel), supports, existing);
            }
        };
        this._triggerCharacterListener.add(this._editor.onDidType(checkTriggerCharacter));
        this._triggerCharacterListener.add(this._editor.onDidCompositionEnd(checkTriggerCharacter));
    }
    // --- trigger/retrigger/cancel suggest
    get state() {
        return this._state;
    }
    cancel(retrigger = false) {
        var _a;
        if (this._state !== 0 /* Idle */ ) {
            this._triggerQuickSuggest.cancel();
            (_a = this._requestToken) === null || _a === void 0 || _a.cancel();
            this._requestToken = undefined;
            this._state = 0 /* Idle */ ;
            this._completionModel = undefined;
            this._context = undefined;
            this._onDidCancel.fire({
                retrigger: retrigger
            });
        }
    }
    clear() {
        this._completionDisposables.clear();
    }
    _updateActiveSuggestSession() {
        if (this._state !== 0 /* Idle */ ) {
            if (!this._editor.hasModel() || !$4PmRQ.CompletionProviderRegistry.has(this._editor.getModel())) this.cancel();
            else this.trigger({
                auto: this._state === 2 /* Auto */ ,
                shy: false
            }, true);
        }
    }
    _onCursorChange(e) {
        if (!this._editor.hasModel()) return;
        const prevSelection = this._currentSelection;
        this._currentSelection = this._editor.getSelection();
        if (!e.selection.isEmpty() || e.reason !== 0 /* NotSet */  && e.reason !== 3 /* Explicit */  || e.source !== 'keyboard' && e.source !== 'deleteLeft') {
            // Early exit if nothing needs to be done!
            // Leave some form of early exit check here if you wish to continue being a cursor position change listener ;)
            this.cancel();
            return;
        }
        if (this._state === 0 /* Idle */  && e.reason === 0 /* NotSet */ ) {
            if (prevSelection.containsRange(this._currentSelection) || prevSelection.getEndPosition().isBeforeOrEqual(this._currentSelection.getPosition())) // cursor did move RIGHT due to typing -> trigger quick suggest
            this._doTriggerQuickSuggest();
        } else if (this._state !== 0 /* Idle */  && e.reason === 3 /* Explicit */ ) // suggest is active and something like cursor keys are used to move
        // the cursor. this means we can refilter at the new position
        this._refilterCompletionItems();
    }
    _onCompositionEnd() {
        // trigger or refilter when composition ends
        if (this._state === 0 /* Idle */ ) this._doTriggerQuickSuggest();
        else this._refilterCompletionItems();
    }
    _doTriggerQuickSuggest() {
        if (this._editor.getOption(78 /* quickSuggestions */ ) === false) // not enabled
        return;
        if (this._editor.getOption(105 /* suggest */ ).snippetsPreventQuickSuggestions && $766cb4d8639df7d1$exports.SnippetController2.get(this._editor).isInSnippet()) // no quick suggestion when in snippet mode
        return;
        this.cancel();
        this._triggerQuickSuggest.cancelAndSet(()=>{
            if (this._state !== 0 /* Idle */ ) return;
            if (!$f6249e777a38f23e$export$894a84ea03928d60.shouldAutoTrigger(this._editor)) return;
            if (!this._editor.hasModel()) return;
            const model = this._editor.getModel();
            const pos = this._editor.getPosition();
            // validate enabled now
            const quickSuggestions = this._editor.getOption(78 /* quickSuggestions */ );
            if (quickSuggestions === false) return;
            else if (quickSuggestions === true) ;
            else {
                // Check the type of the token that triggered this
                model.tokenizeIfCheap(pos.lineNumber);
                const lineTokens = model.getLineTokens(pos.lineNumber);
                const tokenType = lineTokens.getStandardTokenType(lineTokens.findTokenIndexAtOffset(Math.max(pos.column - 1 - 1, 0)));
                const inValidScope = quickSuggestions.other && tokenType === 0 /* Other */  || quickSuggestions.comments && tokenType === 1 /* Comment */  || quickSuggestions.strings && tokenType === 2 /* String */ ;
                if (!inValidScope) return;
            }
            if (!$f6249e777a38f23e$var$canShowQuickSuggest(this._editor, this._contextKeyService, this._configurationService)) // do not trigger quick suggestions if inline suggestions are shown
            return;
            if (!$4PmRQ.CompletionProviderRegistry.has(model)) return;
            // we made it till here -> trigger now
            this.trigger({
                auto: true,
                shy: false
            });
        }, this._quickSuggestDelay);
    }
    _refilterCompletionItems() {
        // Re-filter suggestions. This MUST run async because filtering/scoring
        // uses the model content AND the cursor position. The latter is NOT
        // updated when the document has changed (the event which drives this method)
        // and therefore a little pause (next mirco task) is needed. See:
        // https://stackoverflow.com/questions/25915634/difference-between-microtask-and-macrotask-within-an-event-loop-context#25933985
        Promise.resolve().then(()=>{
            if (this._state === 0 /* Idle */ ) return;
            if (!this._editor.hasModel()) return;
            const model = this._editor.getModel();
            const position = this._editor.getPosition();
            const ctx = new $f6249e777a38f23e$export$894a84ea03928d60(model, position, this._state === 2 /* Auto */ , false);
            this._onNewContext(ctx);
        });
    }
    trigger(context, retrigger = false, onlyFrom, existing) {
        var _a;
        if (!this._editor.hasModel()) return;
        const model1 = this._editor.getModel();
        const auto = context.auto;
        const ctx1 = new $f6249e777a38f23e$export$894a84ea03928d60(model1, this._editor.getPosition(), auto, context.shy);
        // Cancel previous requests, change state & update UI
        this.cancel(retrigger);
        this._state = auto ? 2 /* Auto */  : 1 /* Manual */ ;
        this._onDidTrigger.fire({
            auto: auto,
            shy: context.shy,
            position: this._editor.getPosition()
        });
        // Capture context when request was sent
        this._context = ctx1;
        // Build context for request
        let suggestCtx = {
            triggerKind: (_a = context.triggerKind) !== null && _a !== void 0 ? _a : 0 /* Invoke */ 
        };
        if (context.triggerCharacter) suggestCtx = {
            triggerKind: 1 /* TriggerCharacter */ ,
            triggerCharacter: context.triggerCharacter
        };
        this._requestToken = new $giPcZ.CancellationTokenSource();
        // kind filter and snippet sort rules
        const snippetSuggestions = this._editor.getOption(100 /* snippetSuggestions */ );
        let snippetSortOrder = 1 /* Inline */ ;
        switch(snippetSuggestions){
            case 'top':
                snippetSortOrder = 0 /* Top */ ;
                break;
            // 	↓ that's the default anyways...
            // case 'inline':
            // 	snippetSortOrder = SnippetSortOrder.Inline;
            // 	break;
            case 'bottom':
                snippetSortOrder = 2 /* Bottom */ ;
                break;
        }
        const { itemKind: itemKindFilter , showDeprecated: showDeprecated  } = $f6249e777a38f23e$export$bd6d3a37695095d5._createSuggestFilter(this._editor);
        const wordDistance1 = $86aedc25706dd37f$exports.WordDistance.create(this._editorWorkerService, this._editor);
        const completions1 = $63d2440bdac663c3$exports.provideSuggestionItems(model1, this._editor.getPosition(), new $63d2440bdac663c3$exports.CompletionOptions(snippetSortOrder, itemKindFilter, onlyFrom, showDeprecated), suggestCtx, this._requestToken.token);
        Promise.all([
            completions1,
            wordDistance1
        ]).then(([completions, wordDistance])=>$f6249e777a38f23e$var$__awaiter(this, void 0, void 0, function*() {
                var _b;
                (_b = this._requestToken) === null || _b === void 0 || _b.dispose();
                if (!this._editor.hasModel()) return;
                let clipboardText = existing === null || existing === void 0 ? void 0 : existing.clipboardText;
                if (!clipboardText && completions.needsClipboard) clipboardText = yield this._clipboardService.readText();
                if (this._state === 0 /* Idle */ ) return;
                const model = this._editor.getModel();
                let items = completions.items;
                if (existing) {
                    const cmpFn = $63d2440bdac663c3$exports.getSuggestionComparator(snippetSortOrder);
                    items = items.concat(existing.items).sort(cmpFn);
                }
                const ctx = new $f6249e777a38f23e$export$894a84ea03928d60(model, this._editor.getPosition(), auto, context.shy);
                this._completionModel = new $a3e378de1924f763$export$8420ec00c11e432f(items, this._context.column, {
                    leadingLineContent: ctx.leadingLineContent,
                    characterCountDelta: ctx.column - this._context.column
                }, wordDistance, this._editor.getOption(105 /* suggest */ ), this._editor.getOption(100 /* snippetSuggestions */ ), clipboardText);
                // store containers so that they can be disposed later
                this._completionDisposables.add(completions.disposable);
                this._onNewContext(ctx);
                // finally report telemetry about durations
                this._reportDurationsTelemetry(completions.durations);
            })
        ).catch($gPkHZ.onUnexpectedError);
    }
    _reportDurationsTelemetry(durations) {
        if ((this._telemetryGate++) % 230 !== 0) return;
        setTimeout(()=>{
            this._telemetryService.publicLog2('suggest.durations.json', {
                data: JSON.stringify(durations)
            });
            this._logService.debug('suggest.durations.json', durations);
        });
    }
    static _createSuggestFilter(editor) {
        // kind filter and snippet sort rules
        const result = new Set();
        // snippet setting
        const snippetSuggestions = editor.getOption(100 /* snippetSuggestions */ );
        if (snippetSuggestions === 'none') result.add(27 /* Snippet */ );
        // type setting
        const suggestOptions = editor.getOption(105 /* suggest */ );
        if (!suggestOptions.showMethods) result.add(0 /* Method */ );
        if (!suggestOptions.showFunctions) result.add(1 /* Function */ );
        if (!suggestOptions.showConstructors) result.add(2 /* Constructor */ );
        if (!suggestOptions.showFields) result.add(3 /* Field */ );
        if (!suggestOptions.showVariables) result.add(4 /* Variable */ );
        if (!suggestOptions.showClasses) result.add(5 /* Class */ );
        if (!suggestOptions.showStructs) result.add(6 /* Struct */ );
        if (!suggestOptions.showInterfaces) result.add(7 /* Interface */ );
        if (!suggestOptions.showModules) result.add(8 /* Module */ );
        if (!suggestOptions.showProperties) result.add(9 /* Property */ );
        if (!suggestOptions.showEvents) result.add(10 /* Event */ );
        if (!suggestOptions.showOperators) result.add(11 /* Operator */ );
        if (!suggestOptions.showUnits) result.add(12 /* Unit */ );
        if (!suggestOptions.showValues) result.add(13 /* Value */ );
        if (!suggestOptions.showConstants) result.add(14 /* Constant */ );
        if (!suggestOptions.showEnums) result.add(15 /* Enum */ );
        if (!suggestOptions.showEnumMembers) result.add(16 /* EnumMember */ );
        if (!suggestOptions.showKeywords) result.add(17 /* Keyword */ );
        if (!suggestOptions.showWords) result.add(18 /* Text */ );
        if (!suggestOptions.showColors) result.add(19 /* Color */ );
        if (!suggestOptions.showFiles) result.add(20 /* File */ );
        if (!suggestOptions.showReferences) result.add(21 /* Reference */ );
        if (!suggestOptions.showColors) result.add(22 /* Customcolor */ );
        if (!suggestOptions.showFolders) result.add(23 /* Folder */ );
        if (!suggestOptions.showTypeParameters) result.add(24 /* TypeParameter */ );
        if (!suggestOptions.showSnippets) result.add(27 /* Snippet */ );
        if (!suggestOptions.showUsers) result.add(25 /* User */ );
        if (!suggestOptions.showIssues) result.add(26 /* Issue */ );
        return {
            itemKind: result,
            showDeprecated: suggestOptions.showDeprecated
        };
    }
    _onNewContext(ctx) {
        if (!this._context) // happens when 24x7 IntelliSense is enabled and still in its delay
        return;
        if (ctx.lineNumber !== this._context.lineNumber) {
            // e.g. happens when pressing Enter while IntelliSense is computed
            this.cancel();
            return;
        }
        if ($jcr1R.getLeadingWhitespace(ctx.leadingLineContent) !== $jcr1R.getLeadingWhitespace(this._context.leadingLineContent)) {
            // cancel IntelliSense when line start changes
            // happens when the current word gets outdented
            this.cancel();
            return;
        }
        if (ctx.column < this._context.column) {
            // typed -> moved cursor LEFT -> retrigger if still on a word
            if (ctx.leadingWord.word) this.trigger({
                auto: this._context.auto,
                shy: false
            }, true);
            else this.cancel();
            return;
        }
        if (!this._completionModel) // happens when IntelliSense is not yet computed
        return;
        if (ctx.leadingWord.word.length !== 0 && ctx.leadingWord.startColumn > this._context.leadingWord.startColumn) {
            // started a new word while IntelliSense shows -> retrigger
            // Select those providers have not contributed to this completion model and re-trigger completions for
            // them. Also adopt the existing items and merge them into the new completion model
            const inactiveProvider = new Set($4PmRQ.CompletionProviderRegistry.all(this._editor.getModel()));
            for (let provider of this._completionModel.allProvider)inactiveProvider.delete(provider);
            const items = this._completionModel.adopt(new Set());
            this.trigger({
                auto: this._context.auto,
                shy: false
            }, true, inactiveProvider, {
                items: items,
                clipboardText: this._completionModel.clipboardText
            });
            return;
        }
        if (ctx.column > this._context.column && this._completionModel.incomplete.size > 0 && ctx.leadingWord.word.length !== 0) {
            // typed -> moved cursor RIGHT & incomple model & still on a word -> retrigger
            const { incomplete: incomplete  } = this._completionModel;
            const items = this._completionModel.adopt(incomplete);
            this.trigger({
                auto: this._state === 2 /* Auto */ ,
                shy: false,
                triggerKind: 2 /* TriggerForIncompleteCompletions */ 
            }, true, incomplete, {
                items: items,
                clipboardText: this._completionModel.clipboardText
            });
        } else {
            // typed -> moved cursor RIGHT -> update UI
            let oldLineContext = this._completionModel.lineContext;
            let isFrozen = false;
            this._completionModel.lineContext = {
                leadingLineContent: ctx.leadingLineContent,
                characterCountDelta: ctx.column - this._context.column
            };
            if (this._completionModel.items.length === 0) {
                if ($f6249e777a38f23e$export$894a84ea03928d60.shouldAutoTrigger(this._editor) && this._context.leadingWord.endColumn < ctx.leadingWord.startColumn) {
                    // retrigger when heading into a new word
                    this.trigger({
                        auto: this._context.auto,
                        shy: false
                    }, true);
                    return;
                }
                if (!this._context.auto) {
                    // freeze when IntelliSense was manually requested
                    this._completionModel.lineContext = oldLineContext;
                    isFrozen = this._completionModel.items.length > 0;
                    if (isFrozen && ctx.leadingWord.word.length === 0) {
                        // there were results before but now there aren't
                        // and also we are not on a word anymore -> cancel
                        this.cancel();
                        return;
                    }
                } else {
                    // nothing left
                    this.cancel();
                    return;
                }
            }
            this._onDidSuggest.fire({
                completionModel: this._completionModel,
                auto: this._context.auto,
                shy: this._context.shy,
                isFrozen: isFrozen
            });
        }
    }
};
$f6249e777a38f23e$export$bd6d3a37695095d5 = $f6249e777a38f23e$var$__decorate([
    $f6249e777a38f23e$var$__param(1, $aPs2m.IEditorWorkerService),
    $f6249e777a38f23e$var$__param(2, $8QSW4.IClipboardService),
    $f6249e777a38f23e$var$__param(3, $lMGba.ITelemetryService),
    $f6249e777a38f23e$var$__param(4, $dvEeB.ILogService),
    $f6249e777a38f23e$var$__param(5, $cxCeF.IContextKeyService),
    $f6249e777a38f23e$var$__param(6, $35IZ9.IConfigurationService)
], $f6249e777a38f23e$export$bd6d3a37695095d5);



var $9cWcn = parcelRequire("9cWcn");
class $4b3de48eba7e25db$export$4f0a10c40326a303 {
    constructor(editor, suggestModel){
        this._disposables = new $9cWcn.DisposableStore();
        this._lastOvertyped = [];
        this._empty = true;
        this._disposables.add(editor.onWillType(()=>{
            if (!this._empty) return;
            if (!editor.hasModel()) return;
            const selections = editor.getSelections();
            const selectionsLength = selections.length;
            // Check if it will overtype any selections
            let willOvertype = false;
            for(let i = 0; i < selectionsLength; i++)if (!selections[i].isEmpty()) {
                willOvertype = true;
                break;
            }
            if (!willOvertype) return;
            this._lastOvertyped = [];
            const model = editor.getModel();
            for(let i1 = 0; i1 < selectionsLength; i1++){
                const selection = selections[i1];
                // Check for overtyping capturer restrictions
                if (model.getValueLengthInRange(selection) > $4b3de48eba7e25db$export$4f0a10c40326a303._maxSelectionLength) return;
                this._lastOvertyped[i1] = {
                    value: model.getValueInRange(selection),
                    multiline: selection.startLineNumber !== selection.endLineNumber
                };
            }
            this._empty = false;
        }));
        this._disposables.add(suggestModel.onDidCancel((e)=>{
            if (!this._empty && !e.retrigger) this._empty = true;
        }));
    }
    getLastOvertypedInfo(idx) {
        if (!this._empty && idx >= 0 && idx < this._lastOvertyped.length) return this._lastOvertyped[idx];
        return undefined;
    }
    dispose() {
        this._disposables.dispose();
    }
}
$4b3de48eba7e25db$export$4f0a10c40326a303._maxSelectionLength = 51200;


var $add88597166afbbb$exports = {};

$parcel$export($add88597166afbbb$exports, "SuggestWidget", () => $add88597166afbbb$export$ad1808d575fcd49b, (v) => $add88597166afbbb$export$ad1808d575fcd49b = v);

var $bDzmQ = parcelRequire("bDzmQ");
parcelRequire("oj9qX");

var $dD2OW = parcelRequire("dD2OW");

var $6bXyA = parcelRequire("6bXyA");

var $gPkHZ = parcelRequire("gPkHZ");

var $5YaSO = parcelRequire("5YaSO");

var $9cWcn = parcelRequire("9cWcn");

var $7mO4b = parcelRequire("7mO4b");

var $jcr1R = parcelRequire("jcr1R");


var $8f90c33f1492fa3c$exports = {};

$parcel$export($8f90c33f1492fa3c$exports, "SuggestWidgetStatus", () => $8f90c33f1492fa3c$export$59a11735faca49fe, (v) => $8f90c33f1492fa3c$export$59a11735faca49fe = v);

var $bDzmQ = parcelRequire("bDzmQ");

var $czr0Q = parcelRequire("czr0Q");

var $9cWcn = parcelRequire("9cWcn");


var $4dEdH = parcelRequire("4dEdH");


var $g4v7E = parcelRequire("g4v7E");

var $cxCeF = parcelRequire("cxCeF");

var $fdGPu = parcelRequire("fdGPu");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $8f90c33f1492fa3c$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var $8f90c33f1492fa3c$var$__param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
};
class $8f90c33f1492fa3c$var$StatusBarViewItem extends $c8327240e537732a$exports.MenuEntryActionViewItem {
    updateLabel() {
        const kb = this._keybindingService.lookupKeybinding(this._action.id, this._contextKeyService);
        if (!kb) return super.updateLabel();
        if (this.label) this.label.textContent = $4dEdH.localize('ddd', '{0} ({1})', this._action.label, $8f90c33f1492fa3c$var$StatusBarViewItem.symbolPrintEnter(kb));
    }
    static symbolPrintEnter(kb) {
        var _a;
        return (_a = kb.getLabel()) === null || _a === void 0 ? void 0 : _a.replace(/\benter\b/gi, '\u23CE');
    }
}
let $8f90c33f1492fa3c$export$59a11735faca49fe = class $8f90c33f1492fa3c$export$59a11735faca49fe {
    constructor(container, instantiationService, _menuService, _contextKeyService){
        this._menuService = _menuService;
        this._contextKeyService = _contextKeyService;
        this._menuDisposables = new $9cWcn.DisposableStore();
        this.element = $bDzmQ.append(container, $bDzmQ.$('.suggest-status-bar'));
        const actionViewItemProvider = (action)=>{
            return action instanceof $g4v7E.MenuItemAction ? instantiationService.createInstance($8f90c33f1492fa3c$var$StatusBarViewItem, action, undefined) : undefined;
        };
        this._leftActions = new $czr0Q.ActionBar(this.element, {
            actionViewItemProvider: actionViewItemProvider
        });
        this._rightActions = new $czr0Q.ActionBar(this.element, {
            actionViewItemProvider: actionViewItemProvider
        });
        this._leftActions.domNode.classList.add('left');
        this._rightActions.domNode.classList.add('right');
    }
    dispose() {
        this._menuDisposables.dispose();
        this.element.remove();
    }
    show() {
        const menu = this._menuService.createMenu($63d2440bdac663c3$exports.suggestWidgetStatusbarMenu, this._contextKeyService);
        const renderMenu = ()=>{
            const left = [];
            const right = [];
            for (let [group, actions] of menu.getActions())if (group === 'left') left.push(...actions);
            else right.push(...actions);
            this._leftActions.clear();
            this._leftActions.push(left);
            this._rightActions.clear();
            this._rightActions.push(right);
        };
        this._menuDisposables.add(menu.onDidChange(()=>renderMenu()
        ));
        this._menuDisposables.add(menu);
    }
    hide() {
        this._menuDisposables.clear();
    }
};
$8f90c33f1492fa3c$export$59a11735faca49fe = $8f90c33f1492fa3c$var$__decorate([
    $8f90c33f1492fa3c$var$__param(1, $fdGPu.IInstantiationService),
    $8f90c33f1492fa3c$var$__param(2, $g4v7E.IMenuService),
    $8f90c33f1492fa3c$var$__param(3, $cxCeF.IContextKeyService)
], $8f90c33f1492fa3c$export$59a11735faca49fe);



var $awgRE = parcelRequire("awgRE");

var $4dEdH = parcelRequire("4dEdH");

var $gaWeX = parcelRequire("gaWeX");

var $azIPz = parcelRequire("azIPz");
const $61f5bd18bc46e424$export$3fae9d11aa0b9bc4 = $gaWeX.registerColor('symbolIcon.arrayForeground', {
    dark: $gaWeX.foreground,
    light: $gaWeX.foreground,
    hc: $gaWeX.foreground
}, $4dEdH.localize('symbolIcon.arrayForeground', 'The foreground color for array symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));
const $61f5bd18bc46e424$export$8b518b8ab21e1b34 = $gaWeX.registerColor('symbolIcon.booleanForeground', {
    dark: $gaWeX.foreground,
    light: $gaWeX.foreground,
    hc: $gaWeX.foreground
}, $4dEdH.localize('symbolIcon.booleanForeground', 'The foreground color for boolean symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));
const $61f5bd18bc46e424$export$4e2906c73c1071f4 = $gaWeX.registerColor('symbolIcon.classForeground', {
    dark: '#EE9D28',
    light: '#D67E00',
    hc: '#EE9D28'
}, $4dEdH.localize('symbolIcon.classForeground', 'The foreground color for class symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));
const $61f5bd18bc46e424$export$b9dc349586d7399d = $gaWeX.registerColor('symbolIcon.colorForeground', {
    dark: $gaWeX.foreground,
    light: $gaWeX.foreground,
    hc: $gaWeX.foreground
}, $4dEdH.localize('symbolIcon.colorForeground', 'The foreground color for color symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));
const $61f5bd18bc46e424$export$aff0be1504894ea8 = $gaWeX.registerColor('symbolIcon.constantForeground', {
    dark: $gaWeX.foreground,
    light: $gaWeX.foreground,
    hc: $gaWeX.foreground
}, $4dEdH.localize('symbolIcon.constantForeground', 'The foreground color for constant symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));
const $61f5bd18bc46e424$export$63d89b6050035451 = $gaWeX.registerColor('symbolIcon.constructorForeground', {
    dark: '#B180D7',
    light: '#652D90',
    hc: '#B180D7'
}, $4dEdH.localize('symbolIcon.constructorForeground', 'The foreground color for constructor symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));
const $61f5bd18bc46e424$export$327509b94276884d = $gaWeX.registerColor('symbolIcon.enumeratorForeground', {
    dark: '#EE9D28',
    light: '#D67E00',
    hc: '#EE9D28'
}, $4dEdH.localize('symbolIcon.enumeratorForeground', 'The foreground color for enumerator symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));
const $61f5bd18bc46e424$export$82c014b2122e3732 = $gaWeX.registerColor('symbolIcon.enumeratorMemberForeground', {
    dark: '#75BEFF',
    light: '#007ACC',
    hc: '#75BEFF'
}, $4dEdH.localize('symbolIcon.enumeratorMemberForeground', 'The foreground color for enumerator member symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));
const $61f5bd18bc46e424$export$d1dd34511c01e5f7 = $gaWeX.registerColor('symbolIcon.eventForeground', {
    dark: '#EE9D28',
    light: '#D67E00',
    hc: '#EE9D28'
}, $4dEdH.localize('symbolIcon.eventForeground', 'The foreground color for event symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));
const $61f5bd18bc46e424$export$74e9aa28e30eaabc = $gaWeX.registerColor('symbolIcon.fieldForeground', {
    dark: '#75BEFF',
    light: '#007ACC',
    hc: '#75BEFF'
}, $4dEdH.localize('symbolIcon.fieldForeground', 'The foreground color for field symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));
const $61f5bd18bc46e424$export$a116c119dac29f5d = $gaWeX.registerColor('symbolIcon.fileForeground', {
    dark: $gaWeX.foreground,
    light: $gaWeX.foreground,
    hc: $gaWeX.foreground
}, $4dEdH.localize('symbolIcon.fileForeground', 'The foreground color for file symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));
const $61f5bd18bc46e424$export$2d73341161b73c6b = $gaWeX.registerColor('symbolIcon.folderForeground', {
    dark: $gaWeX.foreground,
    light: $gaWeX.foreground,
    hc: $gaWeX.foreground
}, $4dEdH.localize('symbolIcon.folderForeground', 'The foreground color for folder symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));
const $61f5bd18bc46e424$export$2ca6c19cc6b399f2 = $gaWeX.registerColor('symbolIcon.functionForeground', {
    dark: '#B180D7',
    light: '#652D90',
    hc: '#B180D7'
}, $4dEdH.localize('symbolIcon.functionForeground', 'The foreground color for function symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));
const $61f5bd18bc46e424$export$8a976e1cbce7093b = $gaWeX.registerColor('symbolIcon.interfaceForeground', {
    dark: '#75BEFF',
    light: '#007ACC',
    hc: '#75BEFF'
}, $4dEdH.localize('symbolIcon.interfaceForeground', 'The foreground color for interface symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));
const $61f5bd18bc46e424$export$73fcd76f3eaf95ca = $gaWeX.registerColor('symbolIcon.keyForeground', {
    dark: $gaWeX.foreground,
    light: $gaWeX.foreground,
    hc: $gaWeX.foreground
}, $4dEdH.localize('symbolIcon.keyForeground', 'The foreground color for key symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));
const $61f5bd18bc46e424$export$55c4a8243445e5c1 = $gaWeX.registerColor('symbolIcon.keywordForeground', {
    dark: $gaWeX.foreground,
    light: $gaWeX.foreground,
    hc: $gaWeX.foreground
}, $4dEdH.localize('symbolIcon.keywordForeground', 'The foreground color for keyword symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));
const $61f5bd18bc46e424$export$ffd6832099bc300 = $gaWeX.registerColor('symbolIcon.methodForeground', {
    dark: '#B180D7',
    light: '#652D90',
    hc: '#B180D7'
}, $4dEdH.localize('symbolIcon.methodForeground', 'The foreground color for method symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));
const $61f5bd18bc46e424$export$a28f8647a8c464f7 = $gaWeX.registerColor('symbolIcon.moduleForeground', {
    dark: $gaWeX.foreground,
    light: $gaWeX.foreground,
    hc: $gaWeX.foreground
}, $4dEdH.localize('symbolIcon.moduleForeground', 'The foreground color for module symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));
const $61f5bd18bc46e424$export$3f085360969ec869 = $gaWeX.registerColor('symbolIcon.namespaceForeground', {
    dark: $gaWeX.foreground,
    light: $gaWeX.foreground,
    hc: $gaWeX.foreground
}, $4dEdH.localize('symbolIcon.namespaceForeground', 'The foreground color for namespace symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));
const $61f5bd18bc46e424$export$faf07d36462572e = $gaWeX.registerColor('symbolIcon.nullForeground', {
    dark: $gaWeX.foreground,
    light: $gaWeX.foreground,
    hc: $gaWeX.foreground
}, $4dEdH.localize('symbolIcon.nullForeground', 'The foreground color for null symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));
const $61f5bd18bc46e424$export$98983ac5e98e402e = $gaWeX.registerColor('symbolIcon.numberForeground', {
    dark: $gaWeX.foreground,
    light: $gaWeX.foreground,
    hc: $gaWeX.foreground
}, $4dEdH.localize('symbolIcon.numberForeground', 'The foreground color for number symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));
const $61f5bd18bc46e424$export$1c6ae5c31c02eebe = $gaWeX.registerColor('symbolIcon.objectForeground', {
    dark: $gaWeX.foreground,
    light: $gaWeX.foreground,
    hc: $gaWeX.foreground
}, $4dEdH.localize('symbolIcon.objectForeground', 'The foreground color for object symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));
const $61f5bd18bc46e424$export$f7ded60d36d8c9df = $gaWeX.registerColor('symbolIcon.operatorForeground', {
    dark: $gaWeX.foreground,
    light: $gaWeX.foreground,
    hc: $gaWeX.foreground
}, $4dEdH.localize('symbolIcon.operatorForeground', 'The foreground color for operator symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));
const $61f5bd18bc46e424$export$201c5e1a4afacb86 = $gaWeX.registerColor('symbolIcon.packageForeground', {
    dark: $gaWeX.foreground,
    light: $gaWeX.foreground,
    hc: $gaWeX.foreground
}, $4dEdH.localize('symbolIcon.packageForeground', 'The foreground color for package symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));
const $61f5bd18bc46e424$export$ecc1bfda99ca719b = $gaWeX.registerColor('symbolIcon.propertyForeground', {
    dark: $gaWeX.foreground,
    light: $gaWeX.foreground,
    hc: $gaWeX.foreground
}, $4dEdH.localize('symbolIcon.propertyForeground', 'The foreground color for property symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));
const $61f5bd18bc46e424$export$b2b64d36d52e1648 = $gaWeX.registerColor('symbolIcon.referenceForeground', {
    dark: $gaWeX.foreground,
    light: $gaWeX.foreground,
    hc: $gaWeX.foreground
}, $4dEdH.localize('symbolIcon.referenceForeground', 'The foreground color for reference symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));
const $61f5bd18bc46e424$export$2a18d5e0c753d08f = $gaWeX.registerColor('symbolIcon.snippetForeground', {
    dark: $gaWeX.foreground,
    light: $gaWeX.foreground,
    hc: $gaWeX.foreground
}, $4dEdH.localize('symbolIcon.snippetForeground', 'The foreground color for snippet symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));
const $61f5bd18bc46e424$export$e5b1264624214988 = $gaWeX.registerColor('symbolIcon.stringForeground', {
    dark: $gaWeX.foreground,
    light: $gaWeX.foreground,
    hc: $gaWeX.foreground
}, $4dEdH.localize('symbolIcon.stringForeground', 'The foreground color for string symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));
const $61f5bd18bc46e424$export$a09716ab27e476aa = $gaWeX.registerColor('symbolIcon.structForeground', {
    dark: $gaWeX.foreground,
    light: $gaWeX.foreground,
    hc: $gaWeX.foreground
}, $4dEdH.localize('symbolIcon.structForeground', 'The foreground color for struct symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));
const $61f5bd18bc46e424$export$63bb8b0faacec0ee = $gaWeX.registerColor('symbolIcon.textForeground', {
    dark: $gaWeX.foreground,
    light: $gaWeX.foreground,
    hc: $gaWeX.foreground
}, $4dEdH.localize('symbolIcon.textForeground', 'The foreground color for text symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));
const $61f5bd18bc46e424$export$2832ad164df8dd4b = $gaWeX.registerColor('symbolIcon.typeParameterForeground', {
    dark: $gaWeX.foreground,
    light: $gaWeX.foreground,
    hc: $gaWeX.foreground
}, $4dEdH.localize('symbolIcon.typeParameterForeground', 'The foreground color for type parameter symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));
const $61f5bd18bc46e424$export$a88fbc3f8bc85cf8 = $gaWeX.registerColor('symbolIcon.unitForeground', {
    dark: $gaWeX.foreground,
    light: $gaWeX.foreground,
    hc: $gaWeX.foreground
}, $4dEdH.localize('symbolIcon.unitForeground', 'The foreground color for unit symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));
const $61f5bd18bc46e424$export$479057adc7371f16 = $gaWeX.registerColor('symbolIcon.variableForeground', {
    dark: '#75BEFF',
    light: '#007ACC',
    hc: '#75BEFF'
}, $4dEdH.localize('symbolIcon.variableForeground', 'The foreground color for variable symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));
$azIPz.registerThemingParticipant((theme, collector)=>{
    const symbolIconArrayColor = theme.getColor($61f5bd18bc46e424$export$3fae9d11aa0b9bc4);
    if (symbolIconArrayColor) collector.addRule(`${$awgRE.Codicon.symbolArray.cssSelector} { color: ${symbolIconArrayColor}; }`);
    const symbolIconBooleanColor = theme.getColor($61f5bd18bc46e424$export$8b518b8ab21e1b34);
    if (symbolIconBooleanColor) collector.addRule(`${$awgRE.Codicon.symbolBoolean.cssSelector} { color: ${symbolIconBooleanColor}; }`);
    const symbolIconClassColor = theme.getColor($61f5bd18bc46e424$export$4e2906c73c1071f4);
    if (symbolIconClassColor) collector.addRule(`${$awgRE.Codicon.symbolClass.cssSelector} { color: ${symbolIconClassColor}; }`);
    const symbolIconMethodColor = theme.getColor($61f5bd18bc46e424$export$ffd6832099bc300);
    if (symbolIconMethodColor) collector.addRule(`${$awgRE.Codicon.symbolMethod.cssSelector} { color: ${symbolIconMethodColor}; }`);
    const symbolIconColorColor = theme.getColor($61f5bd18bc46e424$export$b9dc349586d7399d);
    if (symbolIconColorColor) collector.addRule(`${$awgRE.Codicon.symbolColor.cssSelector} { color: ${symbolIconColorColor}; }`);
    const symbolIconConstantColor = theme.getColor($61f5bd18bc46e424$export$aff0be1504894ea8);
    if (symbolIconConstantColor) collector.addRule(`${$awgRE.Codicon.symbolConstant.cssSelector} { color: ${symbolIconConstantColor}; }`);
    const symbolIconConstructorColor = theme.getColor($61f5bd18bc46e424$export$63d89b6050035451);
    if (symbolIconConstructorColor) collector.addRule(`${$awgRE.Codicon.symbolConstructor.cssSelector} { color: ${symbolIconConstructorColor}; }`);
    const symbolIconEnumeratorColor = theme.getColor($61f5bd18bc46e424$export$327509b94276884d);
    if (symbolIconEnumeratorColor) collector.addRule(`
			${$awgRE.Codicon.symbolValue.cssSelector},${$awgRE.Codicon.symbolEnum.cssSelector} { color: ${symbolIconEnumeratorColor}; }`);
    const symbolIconEnumeratorMemberColor = theme.getColor($61f5bd18bc46e424$export$82c014b2122e3732);
    if (symbolIconEnumeratorMemberColor) collector.addRule(`${$awgRE.Codicon.symbolEnumMember.cssSelector} { color: ${symbolIconEnumeratorMemberColor}; }`);
    const symbolIconEventColor = theme.getColor($61f5bd18bc46e424$export$d1dd34511c01e5f7);
    if (symbolIconEventColor) collector.addRule(`${$awgRE.Codicon.symbolEvent.cssSelector} { color: ${symbolIconEventColor}; }`);
    const symbolIconFieldColor = theme.getColor($61f5bd18bc46e424$export$74e9aa28e30eaabc);
    if (symbolIconFieldColor) collector.addRule(`${$awgRE.Codicon.symbolField.cssSelector} { color: ${symbolIconFieldColor}; }`);
    const symbolIconFileColor = theme.getColor($61f5bd18bc46e424$export$a116c119dac29f5d);
    if (symbolIconFileColor) collector.addRule(`${$awgRE.Codicon.symbolFile.cssSelector} { color: ${symbolIconFileColor}; }`);
    const symbolIconFolderColor = theme.getColor($61f5bd18bc46e424$export$2d73341161b73c6b);
    if (symbolIconFolderColor) collector.addRule(`${$awgRE.Codicon.symbolFolder.cssSelector} { color: ${symbolIconFolderColor}; }`);
    const symbolIconFunctionColor = theme.getColor($61f5bd18bc46e424$export$2ca6c19cc6b399f2);
    if (symbolIconFunctionColor) collector.addRule(`${$awgRE.Codicon.symbolFunction.cssSelector} { color: ${symbolIconFunctionColor}; }`);
    const symbolIconInterfaceColor = theme.getColor($61f5bd18bc46e424$export$8a976e1cbce7093b);
    if (symbolIconInterfaceColor) collector.addRule(`${$awgRE.Codicon.symbolInterface.cssSelector} { color: ${symbolIconInterfaceColor}; }`);
    const symbolIconKeyColor = theme.getColor($61f5bd18bc46e424$export$73fcd76f3eaf95ca);
    if (symbolIconKeyColor) collector.addRule(`${$awgRE.Codicon.symbolKey.cssSelector} { color: ${symbolIconKeyColor}; }`);
    const symbolIconKeywordColor = theme.getColor($61f5bd18bc46e424$export$55c4a8243445e5c1);
    if (symbolIconKeywordColor) collector.addRule(`${$awgRE.Codicon.symbolKeyword.cssSelector} { color: ${symbolIconKeywordColor}; }`);
    const symbolIconModuleColor = theme.getColor($61f5bd18bc46e424$export$a28f8647a8c464f7);
    if (symbolIconModuleColor) collector.addRule(`${$awgRE.Codicon.symbolModule.cssSelector} { color: ${symbolIconModuleColor}; }`);
    const outlineNamespaceColor = theme.getColor($61f5bd18bc46e424$export$3f085360969ec869);
    if (outlineNamespaceColor) collector.addRule(`${$awgRE.Codicon.symbolNamespace.cssSelector} { color: ${outlineNamespaceColor}; }`);
    const symbolIconNullColor = theme.getColor($61f5bd18bc46e424$export$faf07d36462572e);
    if (symbolIconNullColor) collector.addRule(`${$awgRE.Codicon.symbolNull.cssSelector} { color: ${symbolIconNullColor}; }`);
    const symbolIconNumberColor = theme.getColor($61f5bd18bc46e424$export$98983ac5e98e402e);
    if (symbolIconNumberColor) collector.addRule(`${$awgRE.Codicon.symbolNumber.cssSelector} { color: ${symbolIconNumberColor}; }`);
    const symbolIconObjectColor = theme.getColor($61f5bd18bc46e424$export$1c6ae5c31c02eebe);
    if (symbolIconObjectColor) collector.addRule(`${$awgRE.Codicon.symbolObject.cssSelector} { color: ${symbolIconObjectColor}; }`);
    const symbolIconOperatorColor = theme.getColor($61f5bd18bc46e424$export$f7ded60d36d8c9df);
    if (symbolIconOperatorColor) collector.addRule(`${$awgRE.Codicon.symbolOperator.cssSelector} { color: ${symbolIconOperatorColor}; }`);
    const symbolIconPackageColor = theme.getColor($61f5bd18bc46e424$export$201c5e1a4afacb86);
    if (symbolIconPackageColor) collector.addRule(`${$awgRE.Codicon.symbolPackage.cssSelector} { color: ${symbolIconPackageColor}; }`);
    const symbolIconPropertyColor = theme.getColor($61f5bd18bc46e424$export$ecc1bfda99ca719b);
    if (symbolIconPropertyColor) collector.addRule(`${$awgRE.Codicon.symbolProperty.cssSelector} { color: ${symbolIconPropertyColor}; }`);
    const symbolIconReferenceColor = theme.getColor($61f5bd18bc46e424$export$b2b64d36d52e1648);
    if (symbolIconReferenceColor) collector.addRule(`${$awgRE.Codicon.symbolReference.cssSelector} { color: ${symbolIconReferenceColor}; }`);
    const symbolIconSnippetColor = theme.getColor($61f5bd18bc46e424$export$2a18d5e0c753d08f);
    if (symbolIconSnippetColor) collector.addRule(`${$awgRE.Codicon.symbolSnippet.cssSelector} { color: ${symbolIconSnippetColor}; }`);
    const symbolIconStringColor = theme.getColor($61f5bd18bc46e424$export$e5b1264624214988);
    if (symbolIconStringColor) collector.addRule(`${$awgRE.Codicon.symbolString.cssSelector} { color: ${symbolIconStringColor}; }`);
    const symbolIconStructColor = theme.getColor($61f5bd18bc46e424$export$a09716ab27e476aa);
    if (symbolIconStructColor) collector.addRule(`${$awgRE.Codicon.symbolStruct.cssSelector} { color: ${symbolIconStructColor}; }`);
    const symbolIconTextColor = theme.getColor($61f5bd18bc46e424$export$63bb8b0faacec0ee);
    if (symbolIconTextColor) collector.addRule(`${$awgRE.Codicon.symbolText.cssSelector} { color: ${symbolIconTextColor}; }`);
    const symbolIconTypeParameterColor = theme.getColor($61f5bd18bc46e424$export$2832ad164df8dd4b);
    if (symbolIconTypeParameterColor) collector.addRule(`${$awgRE.Codicon.symbolTypeParameter.cssSelector} { color: ${symbolIconTypeParameterColor}; }`);
    const symbolIconUnitColor = theme.getColor($61f5bd18bc46e424$export$a88fbc3f8bc85cf8);
    if (symbolIconUnitColor) collector.addRule(`${$awgRE.Codicon.symbolUnit.cssSelector} { color: ${symbolIconUnitColor}; }`);
    const symbolIconVariableColor = theme.getColor($61f5bd18bc46e424$export$479057adc7371f16);
    if (symbolIconVariableColor) collector.addRule(`${$awgRE.Codicon.symbolVariable.cssSelector} { color: ${symbolIconVariableColor}; }`);
});



var $4dEdH = parcelRequire("4dEdH");

var $cxCeF = parcelRequire("cxCeF");

var $fdGPu = parcelRequire("fdGPu");

var $2AUoS = parcelRequire("2AUoS");

var $gaWeX = parcelRequire("gaWeX");

var $8oQv6 = parcelRequire("8oQv6");

var $azIPz = parcelRequire("azIPz");

var $bDzmQ = parcelRequire("bDzmQ");

var $9lxpu = parcelRequire("9lxpu");

var $5YaSO = parcelRequire("5YaSO");

var $9cWcn = parcelRequire("9cWcn");
class $61aa28068d91586d$export$f049a29194943609 {
    constructor(){
        this._onDidWillResize = new $5YaSO.Emitter();
        this.onDidWillResize = this._onDidWillResize.event;
        this._onDidResize = new $5YaSO.Emitter();
        this.onDidResize = this._onDidResize.event;
        this._sashListener = new $9cWcn.DisposableStore();
        this._size = new $bDzmQ.Dimension(0, 0);
        this._minSize = new $bDzmQ.Dimension(0, 0);
        this._maxSize = new $bDzmQ.Dimension(Number.MAX_SAFE_INTEGER, Number.MAX_SAFE_INTEGER);
        this.domNode = document.createElement('div');
        this._eastSash = new $9lxpu.Sash(this.domNode, {
            getVerticalSashLeft: ()=>this._size.width
        }, {
            orientation: 0 /* VERTICAL */ 
        });
        this._westSash = new $9lxpu.Sash(this.domNode, {
            getVerticalSashLeft: ()=>0
        }, {
            orientation: 0 /* VERTICAL */ 
        });
        this._northSash = new $9lxpu.Sash(this.domNode, {
            getHorizontalSashTop: ()=>0
        }, {
            orientation: 1 /* HORIZONTAL */ ,
            orthogonalEdge: $9lxpu.OrthogonalEdge.North
        });
        this._southSash = new $9lxpu.Sash(this.domNode, {
            getHorizontalSashTop: ()=>this._size.height
        }, {
            orientation: 1 /* HORIZONTAL */ ,
            orthogonalEdge: $9lxpu.OrthogonalEdge.South
        });
        this._northSash.orthogonalStartSash = this._westSash;
        this._northSash.orthogonalEndSash = this._eastSash;
        this._southSash.orthogonalStartSash = this._westSash;
        this._southSash.orthogonalEndSash = this._eastSash;
        let currentSize;
        let deltaY = 0;
        let deltaX = 0;
        this._sashListener.add($5YaSO.Event.any(this._northSash.onDidStart, this._eastSash.onDidStart, this._southSash.onDidStart, this._westSash.onDidStart)(()=>{
            if (currentSize === undefined) {
                this._onDidWillResize.fire();
                currentSize = this._size;
                deltaY = 0;
                deltaX = 0;
            }
        }));
        this._sashListener.add($5YaSO.Event.any(this._northSash.onDidEnd, this._eastSash.onDidEnd, this._southSash.onDidEnd, this._westSash.onDidEnd)(()=>{
            if (currentSize !== undefined) {
                currentSize = undefined;
                deltaY = 0;
                deltaX = 0;
                this._onDidResize.fire({
                    dimension: this._size,
                    done: true
                });
            }
        }));
        this._sashListener.add(this._eastSash.onDidChange((e)=>{
            if (currentSize) {
                deltaX = e.currentX - e.startX;
                this.layout(currentSize.height + deltaY, currentSize.width + deltaX);
                this._onDidResize.fire({
                    dimension: this._size,
                    done: false,
                    east: true
                });
            }
        }));
        this._sashListener.add(this._westSash.onDidChange((e)=>{
            if (currentSize) {
                deltaX = -(e.currentX - e.startX);
                this.layout(currentSize.height + deltaY, currentSize.width + deltaX);
                this._onDidResize.fire({
                    dimension: this._size,
                    done: false,
                    west: true
                });
            }
        }));
        this._sashListener.add(this._northSash.onDidChange((e)=>{
            if (currentSize) {
                deltaY = -(e.currentY - e.startY);
                this.layout(currentSize.height + deltaY, currentSize.width + deltaX);
                this._onDidResize.fire({
                    dimension: this._size,
                    done: false,
                    north: true
                });
            }
        }));
        this._sashListener.add(this._southSash.onDidChange((e)=>{
            if (currentSize) {
                deltaY = e.currentY - e.startY;
                this.layout(currentSize.height + deltaY, currentSize.width + deltaX);
                this._onDidResize.fire({
                    dimension: this._size,
                    done: false,
                    south: true
                });
            }
        }));
        this._sashListener.add($5YaSO.Event.any(this._eastSash.onDidReset, this._westSash.onDidReset)((e)=>{
            if (this._preferredSize) {
                this.layout(this._size.height, this._preferredSize.width);
                this._onDidResize.fire({
                    dimension: this._size,
                    done: true
                });
            }
        }));
        this._sashListener.add($5YaSO.Event.any(this._northSash.onDidReset, this._southSash.onDidReset)((e)=>{
            if (this._preferredSize) {
                this.layout(this._preferredSize.height, this._size.width);
                this._onDidResize.fire({
                    dimension: this._size,
                    done: true
                });
            }
        }));
    }
    dispose() {
        this._northSash.dispose();
        this._southSash.dispose();
        this._eastSash.dispose();
        this._westSash.dispose();
        this._sashListener.dispose();
        this._onDidResize.dispose();
        this._onDidWillResize.dispose();
        this.domNode.remove();
    }
    enableSashes(north, east, south, west) {
        this._northSash.state = north ? 3 /* Enabled */  : 0 /* Disabled */ ;
        this._eastSash.state = east ? 3 /* Enabled */  : 0 /* Disabled */ ;
        this._southSash.state = south ? 3 /* Enabled */  : 0 /* Disabled */ ;
        this._westSash.state = west ? 3 /* Enabled */  : 0 /* Disabled */ ;
    }
    layout(height = this.size.height, width = this.size.width) {
        const { height: minHeight , width: minWidth  } = this._minSize;
        const { height: maxHeight , width: maxWidth  } = this._maxSize;
        height = Math.max(minHeight, Math.min(maxHeight, height));
        width = Math.max(minWidth, Math.min(maxWidth, width));
        const newSize = new $bDzmQ.Dimension(width, height);
        if (!$bDzmQ.Dimension.equals(newSize, this._size)) {
            this.domNode.style.height = height + 'px';
            this.domNode.style.width = width + 'px';
            this._size = newSize;
            this._northSash.layout();
            this._eastSash.layout();
            this._southSash.layout();
            this._westSash.layout();
        }
    }
    clearSashHoverState() {
        this._eastSash.clearSashHoverState();
        this._westSash.clearSashHoverState();
        this._northSash.clearSashHoverState();
        this._southSash.clearSashHoverState();
    }
    get size() {
        return this._size;
    }
    set maxSize(value) {
        this._maxSize = value;
    }
    get maxSize() {
        return this._maxSize;
    }
    set minSize(value) {
        this._minSize = value;
    }
    get minSize() {
        return this._minSize;
    }
    set preferredSize(value) {
        this._preferredSize = value;
    }
    get preferredSize() {
        return this._preferredSize;
    }
}



var $d151f9fba6e3a688$exports = {};

$parcel$export($d151f9fba6e3a688$exports, "canExpandCompletionItem", () => $d151f9fba6e3a688$export$f492f5f48ff8b22b, (v) => $d151f9fba6e3a688$export$f492f5f48ff8b22b = v);
$parcel$export($d151f9fba6e3a688$exports, "SuggestDetailsWidget", () => $d151f9fba6e3a688$export$61e0dc2df900a441, (v) => $d151f9fba6e3a688$export$61e0dc2df900a441 = v);
$parcel$export($d151f9fba6e3a688$exports, "SuggestDetailsOverlay", () => $d151f9fba6e3a688$export$d55abf796289b194, (v) => $d151f9fba6e3a688$export$d55abf796289b194 = v);

var $5yY14 = parcelRequire("5yY14");

var $bDzmQ = parcelRequire("bDzmQ");

var $2aRJR = parcelRequire("2aRJR");

var $awgRE = parcelRequire("awgRE");

var $5YaSO = parcelRequire("5YaSO");

var $iGmb0 = parcelRequire("iGmb0");

var $9cWcn = parcelRequire("9cWcn");


var $cd4KD = parcelRequire("cd4KD");


var $4dEdH = parcelRequire("4dEdH");

var $fdGPu = parcelRequire("fdGPu");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $d151f9fba6e3a688$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var $d151f9fba6e3a688$var$__param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
};
function $d151f9fba6e3a688$export$f492f5f48ff8b22b(item) {
    return !!item && Boolean(item.completion.documentation || item.completion.detail && item.completion.detail !== item.completion.label);
}
let $d151f9fba6e3a688$export$61e0dc2df900a441 = class $d151f9fba6e3a688$export$61e0dc2df900a441 {
    constructor(_editor, instaService){
        this._editor = _editor;
        this._onDidClose = new $5YaSO.Emitter();
        this.onDidClose = this._onDidClose.event;
        this._onDidChangeContents = new $5YaSO.Emitter();
        this.onDidChangeContents = this._onDidChangeContents.event;
        this._disposables = new $9cWcn.DisposableStore();
        this._renderDisposeable = new $9cWcn.DisposableStore();
        this._borderWidth = 1;
        this._size = new $bDzmQ.Dimension(330, 0);
        this.domNode = $bDzmQ.$('.suggest-details');
        this.domNode.classList.add('no-docs');
        this._markdownRenderer = instaService.createInstance($0f615ea767437954$exports.MarkdownRenderer, {
            editor: _editor
        });
        this._body = $bDzmQ.$('.body');
        this._scrollbar = new $2aRJR.DomScrollableElement(this._body, {});
        $bDzmQ.append(this.domNode, this._scrollbar.getDomNode());
        this._disposables.add(this._scrollbar);
        this._header = $bDzmQ.append(this._body, $bDzmQ.$('.header'));
        this._close = $bDzmQ.append(this._header, $bDzmQ.$('span' + $awgRE.Codicon.close.cssSelector));
        this._close.title = $4dEdH.localize('details.close', "Close");
        this._type = $bDzmQ.append(this._header, $bDzmQ.$('p.type'));
        this._docs = $bDzmQ.append(this._body, $bDzmQ.$('p.docs'));
        this._configureFont();
        this._disposables.add(this._editor.onDidChangeConfiguration((e)=>{
            if (e.hasChanged(43 /* fontInfo */ )) this._configureFont();
        }));
    }
    dispose() {
        this._disposables.dispose();
        this._renderDisposeable.dispose();
    }
    _configureFont() {
        const options = this._editor.getOptions();
        const fontInfo = options.get(43 /* fontInfo */ );
        const fontFamily = fontInfo.getMassagedFontFamily($5yY14.isSafari ? $cd4KD.EDITOR_FONT_DEFAULTS.fontFamily : null);
        const fontSize = options.get(106 /* suggestFontSize */ ) || fontInfo.fontSize;
        const lineHeight = options.get(107 /* suggestLineHeight */ ) || fontInfo.lineHeight;
        const fontWeight = fontInfo.fontWeight;
        const fontSizePx = `${fontSize}px`;
        const lineHeightPx = `${lineHeight}px`;
        this.domNode.style.fontSize = fontSizePx;
        this.domNode.style.lineHeight = `${lineHeight / fontSize}`;
        this.domNode.style.fontWeight = fontWeight;
        this.domNode.style.fontFeatureSettings = fontInfo.fontFeatureSettings;
        this._type.style.fontFamily = fontFamily;
        this._close.style.height = lineHeightPx;
        this._close.style.width = lineHeightPx;
    }
    getLayoutInfo() {
        const lineHeight = this._editor.getOption(107 /* suggestLineHeight */ ) || this._editor.getOption(43 /* fontInfo */ ).lineHeight;
        const borderWidth = this._borderWidth;
        const borderHeight = borderWidth * 2;
        return {
            lineHeight: lineHeight,
            borderWidth: borderWidth,
            borderHeight: borderHeight,
            verticalPadding: 22,
            horizontalPadding: 14
        };
    }
    renderLoading() {
        this._type.textContent = $4dEdH.localize('loading', "Loading...");
        this._docs.textContent = '';
        this.domNode.classList.remove('no-docs', 'no-type');
        this.layout(this.size.width, this.getLayoutInfo().lineHeight * 2);
        this._onDidChangeContents.fire(this);
    }
    renderItem(item, explainMode) {
        var _a, _b;
        this._renderDisposeable.clear();
        let { detail: detail , documentation: documentation  } = item.completion;
        if (explainMode) {
            let md = '';
            md += `score: ${item.score[0]}\n`;
            md += `prefix: ${(_a = item.word) !== null && _a !== void 0 ? _a : '(no prefix)'}\n`;
            md += `word: ${item.completion.filterText ? item.completion.filterText + ' (filterText)' : item.textLabel}\n`;
            md += `distance: ${item.distance} (localityBonus-setting)\n`;
            md += `index: ${item.idx}, based on ${item.completion.sortText && `sortText: "${item.completion.sortText}"` || 'label'}\n`;
            md += `commit_chars: ${(_b = item.completion.commitCharacters) === null || _b === void 0 ? void 0 : _b.join('')}\n`;
            documentation = new $iGmb0.MarkdownString().appendCodeblock('empty', md);
            detail = `Provider: ${item.provider._debugDisplayName}`;
        }
        if (!explainMode && !$d151f9fba6e3a688$export$f492f5f48ff8b22b(item)) {
            this.clearContents();
            return;
        }
        this.domNode.classList.remove('no-docs', 'no-type');
        // --- details
        if (detail) {
            const cappedDetail = detail.length > 100000 ? `${detail.substr(0, 100000)}…` : detail;
            this._type.textContent = cappedDetail;
            this._type.title = cappedDetail;
            $bDzmQ.show(this._type);
            this._type.classList.toggle('auto-wrap', !/\r?\n^\s+/gmi.test(cappedDetail));
        } else {
            $bDzmQ.clearNode(this._type);
            this._type.title = '';
            $bDzmQ.hide(this._type);
            this.domNode.classList.add('no-type');
        }
        // --- documentation
        $bDzmQ.clearNode(this._docs);
        if (typeof documentation === 'string') {
            this._docs.classList.remove('markdown-docs');
            this._docs.textContent = documentation;
        } else if (documentation) {
            this._docs.classList.add('markdown-docs');
            $bDzmQ.clearNode(this._docs);
            const renderedContents = this._markdownRenderer.render(documentation);
            this._docs.appendChild(renderedContents.element);
            this._renderDisposeable.add(renderedContents);
            this._renderDisposeable.add(this._markdownRenderer.onDidRenderAsync(()=>{
                this.layout(this._size.width, this._type.clientHeight + this._docs.clientHeight);
                this._onDidChangeContents.fire(this);
            }));
        }
        this.domNode.style.userSelect = 'text';
        this.domNode.tabIndex = -1;
        this._close.onmousedown = (e)=>{
            e.preventDefault();
            e.stopPropagation();
        };
        this._close.onclick = (e)=>{
            e.preventDefault();
            e.stopPropagation();
            this._onDidClose.fire();
        };
        this._body.scrollTop = 0;
        this.layout(this._size.width, this._type.clientHeight + this._docs.clientHeight);
        this._onDidChangeContents.fire(this);
    }
    clearContents() {
        this.domNode.classList.add('no-docs');
        this._type.textContent = '';
        this._docs.textContent = '';
    }
    get size() {
        return this._size;
    }
    layout(width, height) {
        const newSize = new $bDzmQ.Dimension(width, height);
        if (!$bDzmQ.Dimension.equals(newSize, this._size)) {
            this._size = newSize;
            $bDzmQ.size(this.domNode, width, height);
        }
        this._scrollbar.scanDomNode();
    }
    scrollDown(much = 8) {
        this._body.scrollTop += much;
    }
    scrollUp(much = 8) {
        this._body.scrollTop -= much;
    }
    scrollTop() {
        this._body.scrollTop = 0;
    }
    scrollBottom() {
        this._body.scrollTop = this._body.scrollHeight;
    }
    pageDown() {
        this.scrollDown(80);
    }
    pageUp() {
        this.scrollUp(80);
    }
    set borderWidth(width) {
        this._borderWidth = width;
    }
    get borderWidth() {
        return this._borderWidth;
    }
};
$d151f9fba6e3a688$export$61e0dc2df900a441 = $d151f9fba6e3a688$var$__decorate([
    $d151f9fba6e3a688$var$__param(1, $fdGPu.IInstantiationService)
], $d151f9fba6e3a688$export$61e0dc2df900a441);
class $d151f9fba6e3a688$export$d55abf796289b194 {
    constructor(widget, _editor){
        this.widget = widget;
        this._editor = _editor;
        this._disposables = new $9cWcn.DisposableStore();
        this._added = false;
        this._preferAlignAtTop = true;
        this._resizable = new $61aa28068d91586d$export$f049a29194943609();
        this._resizable.domNode.classList.add('suggest-details-container');
        this._resizable.domNode.appendChild(widget.domNode);
        this._resizable.enableSashes(false, true, true, false);
        let topLeftNow;
        let sizeNow;
        let deltaTop = 0;
        let deltaLeft = 0;
        this._disposables.add(this._resizable.onDidWillResize(()=>{
            topLeftNow = this._topLeft;
            sizeNow = this._resizable.size;
        }));
        this._disposables.add(this._resizable.onDidResize((e)=>{
            if (topLeftNow && sizeNow) {
                this.widget.layout(e.dimension.width, e.dimension.height);
                let updateTopLeft = false;
                if (e.west) {
                    deltaLeft = sizeNow.width - e.dimension.width;
                    updateTopLeft = true;
                }
                if (e.north) {
                    deltaTop = sizeNow.height - e.dimension.height;
                    updateTopLeft = true;
                }
                if (updateTopLeft) this._applyTopLeft({
                    top: topLeftNow.top + deltaTop,
                    left: topLeftNow.left + deltaLeft
                });
            }
            if (e.done) {
                topLeftNow = undefined;
                sizeNow = undefined;
                deltaTop = 0;
                deltaLeft = 0;
                this._userSize = e.dimension;
            }
        }));
        this._disposables.add(this.widget.onDidChangeContents(()=>{
            var _a;
            if (this._anchorBox) this._placeAtAnchor(this._anchorBox, (_a = this._userSize) !== null && _a !== void 0 ? _a : this.widget.size, this._preferAlignAtTop);
        }));
    }
    dispose() {
        this._resizable.dispose();
        this._disposables.dispose();
        this.hide();
    }
    getId() {
        return 'suggest.details';
    }
    getDomNode() {
        return this._resizable.domNode;
    }
    getPosition() {
        return null;
    }
    show() {
        if (!this._added) {
            this._editor.addOverlayWidget(this);
            this.getDomNode().style.position = 'fixed';
            this._added = true;
        }
    }
    hide(sessionEnded = false) {
        this._resizable.clearSashHoverState();
        if (this._added) {
            this._editor.removeOverlayWidget(this);
            this._added = false;
            this._anchorBox = undefined;
            this._topLeft = undefined;
        }
        if (sessionEnded) {
            this._userSize = undefined;
            this.widget.clearContents();
        }
    }
    placeAtAnchor(anchor, preferAlignAtTop) {
        var _a;
        const anchorBox = anchor.getBoundingClientRect();
        this._anchorBox = anchorBox;
        this._preferAlignAtTop = preferAlignAtTop;
        this._placeAtAnchor(this._anchorBox, (_a = this._userSize) !== null && _a !== void 0 ? _a : this.widget.size, preferAlignAtTop);
    }
    _placeAtAnchor(anchorBox, size, preferAlignAtTop) {
        var _a;
        const bodyBox = $bDzmQ.getClientArea(document.body);
        const info = this.widget.getLayoutInfo();
        const defaultMinSize = new $bDzmQ.Dimension(220, 2 * info.lineHeight);
        const defaultTop = anchorBox.top;
        // EAST
        const eastPlacement = function() {
            const width = bodyBox.width - (anchorBox.left + anchorBox.width + info.borderWidth + info.horizontalPadding);
            const left = -info.borderWidth + anchorBox.left + anchorBox.width;
            const maxSizeTop = new $bDzmQ.Dimension(width, bodyBox.height - anchorBox.top - info.borderHeight - info.verticalPadding);
            const maxSizeBottom = maxSizeTop.with(undefined, anchorBox.top + anchorBox.height - info.borderHeight - info.verticalPadding);
            return {
                top: defaultTop,
                left: left,
                fit: width - size.width,
                maxSizeTop: maxSizeTop,
                maxSizeBottom: maxSizeBottom,
                minSize: defaultMinSize.with(Math.min(width, defaultMinSize.width))
            };
        }();
        // WEST
        const westPlacement = function() {
            const width = anchorBox.left - info.borderWidth - info.horizontalPadding;
            const left = Math.max(info.horizontalPadding, anchorBox.left - size.width - info.borderWidth);
            const maxSizeTop = new $bDzmQ.Dimension(width, bodyBox.height - anchorBox.top - info.borderHeight - info.verticalPadding);
            const maxSizeBottom = maxSizeTop.with(undefined, anchorBox.top + anchorBox.height - info.borderHeight - info.verticalPadding);
            return {
                top: defaultTop,
                left: left,
                fit: width - size.width,
                maxSizeTop: maxSizeTop,
                maxSizeBottom: maxSizeBottom,
                minSize: defaultMinSize.with(Math.min(width, defaultMinSize.width))
            };
        }();
        // SOUTH
        const southPacement = function() {
            const left = anchorBox.left;
            const top = -info.borderWidth + anchorBox.top + anchorBox.height;
            const maxSizeBottom = new $bDzmQ.Dimension(anchorBox.width - info.borderHeight, bodyBox.height - anchorBox.top - anchorBox.height - info.verticalPadding);
            return {
                top: top,
                left: left,
                fit: maxSizeBottom.height - size.height,
                maxSizeBottom: maxSizeBottom,
                maxSizeTop: maxSizeBottom,
                minSize: defaultMinSize.with(maxSizeBottom.width)
            };
        }();
        // take first placement that fits or the first with "least bad" fit
        const placements = [
            eastPlacement,
            westPlacement,
            southPacement
        ];
        const placement = (_a = placements.find((p)=>p.fit >= 0
        )) !== null && _a !== void 0 ? _a : placements.sort((a, b)=>b.fit - a.fit
        )[0];
        // top/bottom placement
        const bottom = anchorBox.top + anchorBox.height - info.borderHeight;
        let alignAtTop;
        let height = size.height;
        const maxHeight = Math.max(placement.maxSizeTop.height, placement.maxSizeBottom.height);
        if (height > maxHeight) height = maxHeight;
        let maxSize;
        if (preferAlignAtTop) {
            if (height <= placement.maxSizeTop.height) {
                alignAtTop = true;
                maxSize = placement.maxSizeTop;
            } else {
                alignAtTop = false;
                maxSize = placement.maxSizeBottom;
            }
        } else if (height <= placement.maxSizeBottom.height) {
            alignAtTop = false;
            maxSize = placement.maxSizeBottom;
        } else {
            alignAtTop = true;
            maxSize = placement.maxSizeTop;
        }
        this._applyTopLeft({
            left: placement.left,
            top: alignAtTop ? placement.top : bottom - height
        });
        this.getDomNode().style.position = 'fixed';
        this._resizable.enableSashes(!alignAtTop, placement === eastPlacement, alignAtTop, placement !== eastPlacement);
        this._resizable.minSize = placement.minSize;
        this._resizable.maxSize = maxSize;
        this._resizable.layout(height, Math.min(maxSize.width, size.width));
        this.widget.layout(this._resizable.size.width, this._resizable.size.height);
    }
    _applyTopLeft(topLeft) {
        this._topLeft = topLeft;
        this.getDomNode().style.left = `${this._topLeft.left}px`;
        this.getDomNode().style.top = `${this._topLeft.top}px`;
    }
}


var $2f2dedd72e1fb09e$exports = {};

$parcel$export($2f2dedd72e1fb09e$exports, "getAriaId", () => $2f2dedd72e1fb09e$export$1b8419c18a1973d4, (v) => $2f2dedd72e1fb09e$export$1b8419c18a1973d4 = v);
$parcel$export($2f2dedd72e1fb09e$exports, "ItemRenderer", () => $2f2dedd72e1fb09e$export$72711cb3319e66a8, (v) => $2f2dedd72e1fb09e$export$72711cb3319e66a8 = v);

var $5yY14 = parcelRequire("5yY14");

var $bDzmQ = parcelRequire("bDzmQ");

var $7XjKn = parcelRequire("7XjKn");

var $kJ8UG = parcelRequire("kJ8UG");

var $awgRE = parcelRequire("awgRE");

var $5YaSO = parcelRequire("5YaSO");

var $lk06m = parcelRequire("lk06m");

var $9cWcn = parcelRequire("9cWcn");

var $5OJ54 = parcelRequire("5OJ54");

var $cd4KD = parcelRequire("cd4KD");

var $4PmRQ = parcelRequire("4PmRQ");

var $8GPp8 = parcelRequire("8GPp8");

var $5Aea5 = parcelRequire("5Aea5");

var $1g3uL = parcelRequire("1g3uL");
var $0e122e44ede0e86f$export$13c2b15ba9153568;
(function($0e122e44ede0e86f$export$13c2b15ba9153568) {
    $0e122e44ede0e86f$export$13c2b15ba9153568[$0e122e44ede0e86f$export$13c2b15ba9153568["FILE"] = 0] = "FILE";
    $0e122e44ede0e86f$export$13c2b15ba9153568[$0e122e44ede0e86f$export$13c2b15ba9153568["FOLDER"] = 1] = "FOLDER";
    $0e122e44ede0e86f$export$13c2b15ba9153568[$0e122e44ede0e86f$export$13c2b15ba9153568["ROOT_FOLDER"] = 2] = "ROOT_FOLDER";
})($0e122e44ede0e86f$export$13c2b15ba9153568 || ($0e122e44ede0e86f$export$13c2b15ba9153568 = {})); //#endregion


function $50d2342eab50311c$export$e27af96b7ae3b008(modelService, modeService, resource, fileKind) {
    // we always set these base classes even if we do not have a path
    const classes = fileKind === $0e122e44ede0e86f$export$13c2b15ba9153568.ROOT_FOLDER ? [
        'rootfolder-icon'
    ] : fileKind === $0e122e44ede0e86f$export$13c2b15ba9153568.FOLDER ? [
        'folder-icon'
    ] : [
        'file-icon'
    ];
    if (resource) {
        // Get the path and name of the resource. For data-URIs, we need to parse specially
        let name;
        if (resource.scheme === $8GPp8.Schemas.data) {
            const metadata = $5Aea5.DataUri.parseMetaData(resource);
            name = metadata.get($5Aea5.DataUri.META_DATA_LABEL);
        } else name = $50d2342eab50311c$export$a5d1f61e0bd5c403($5Aea5.basenameOrAuthority(resource).toLowerCase());
        // Folders
        if (fileKind === $0e122e44ede0e86f$export$13c2b15ba9153568.FOLDER) classes.push(`${name}-name-folder-icon`);
        else {
            // Name & Extension(s)
            if (name) {
                classes.push(`${name}-name-file-icon`);
                // Avoid doing an explosive combination of extensions for very long filenames
                // (most file systems do not allow files > 255 length) with lots of `.` characters
                // https://github.com/microsoft/vscode/issues/116199
                if (name.length <= 255) {
                    const dotSegments = name.split('.');
                    for(let i = 1; i < dotSegments.length; i++)classes.push(`${dotSegments.slice(i).join('.')}-ext-file-icon`); // add each combination of all found extensions if more than one
                }
                classes.push(`ext-file-icon`); // extra segment to increase file-ext score
            }
            // Detected Mode
            const detectedModeId = $50d2342eab50311c$var$detectModeId(modelService, modeService, resource);
            if (detectedModeId) classes.push(`${$50d2342eab50311c$export$a5d1f61e0bd5c403(detectedModeId)}-lang-file-icon`);
        }
    }
    return classes;
}
function $50d2342eab50311c$var$detectModeId(modelService, modeService, resource) {
    if (!resource) return null; // we need a resource at least
    let modeId = null;
    // Data URI: check for encoded metadata
    if (resource.scheme === $8GPp8.Schemas.data) {
        const metadata = $5Aea5.DataUri.parseMetaData(resource);
        const mime = metadata.get($5Aea5.DataUri.META_DATA_MIME);
        if (mime) modeId = modeService.getModeId(mime);
    } else {
        const model = modelService.getModel(resource);
        if (model) modeId = model.getLanguageId();
    }
    // only take if the mode is specific (aka no just plain text)
    if (modeId && modeId !== $1g3uL.PLAINTEXT_MODE_ID) return modeId;
    // otherwise fallback to path based detection
    return modeService.getModeIdByFilepathOrFirstLine(resource);
}
function $50d2342eab50311c$export$a5d1f61e0bd5c403(str) {
    return str.replace(/[\11\12\14\15\40]/g, '/'); // HTML class names can not contain certain whitespace characters, use / instead, which doesn't exist in file names.
}



var $15EOE = parcelRequire("15EOE");

var $is5YK = parcelRequire("is5YK");

var $4dEdH = parcelRequire("4dEdH");


var $hEsmQ = parcelRequire("hEsmQ");

var $azIPz = parcelRequire("azIPz");

/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $2f2dedd72e1fb09e$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var $2f2dedd72e1fb09e$var$__param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
};
var $2f2dedd72e1fb09e$var$_a;
function $2f2dedd72e1fb09e$export$1b8419c18a1973d4(index) {
    return `suggest-aria-id:${index}`;
}
const $2f2dedd72e1fb09e$export$3cc1a6a224e77f6d = $hEsmQ.registerIcon('suggest-more-info', $awgRE.Codicon.chevronRight, $4dEdH.localize('suggestMoreInfoIcon', 'Icon for more information in the suggest widget.'));
const $2f2dedd72e1fb09e$var$_completionItemColor = new ($2f2dedd72e1fb09e$var$_a = class ColorExtractor {
    extract(item, out) {
        if (item.textLabel.match(ColorExtractor._regexStrict)) {
            out[0] = item.textLabel;
            return true;
        }
        if (item.completion.detail && item.completion.detail.match(ColorExtractor._regexStrict)) {
            out[0] = item.completion.detail;
            return true;
        }
        if (typeof item.completion.documentation === 'string') {
            const match = ColorExtractor._regexRelaxed.exec(item.completion.documentation);
            if (match && (match.index === 0 || match.index + match[0].length === item.completion.documentation.length)) {
                out[0] = match[0];
                return true;
            }
        }
        return false;
    }
}, $2f2dedd72e1fb09e$var$_a._regexRelaxed = /(#([\da-fA-F]{3}){1,2}|(rgb|hsl)a\(\s*(\d{1,3}%?\s*,\s*){3}(1|0?\.\d+)\)|(rgb|hsl)\(\s*\d{1,3}%?(\s*,\s*\d{1,3}%?){2}\s*\))/, $2f2dedd72e1fb09e$var$_a._regexStrict = new RegExp(`^${$2f2dedd72e1fb09e$var$_a._regexRelaxed.source}$`, 'i'), $2f2dedd72e1fb09e$var$_a);
let $2f2dedd72e1fb09e$export$72711cb3319e66a8 = class $2f2dedd72e1fb09e$export$72711cb3319e66a8 {
    constructor(_editor, _modelService, _modeService, _themeService){
        this._editor = _editor;
        this._modelService = _modelService;
        this._modeService = _modeService;
        this._themeService = _themeService;
        this._onDidToggleDetails = new $5YaSO.Emitter();
        this.onDidToggleDetails = this._onDidToggleDetails.event;
        this.templateId = 'suggestion';
    }
    dispose() {
        this._onDidToggleDetails.dispose();
    }
    renderTemplate(container) {
        const data = Object.create(null);
        data.disposables = new $9cWcn.DisposableStore();
        data.root = container;
        data.root.classList.add('show-file-icons');
        data.icon = $bDzmQ.append(container, $bDzmQ.$('.icon'));
        data.colorspan = $bDzmQ.append(data.icon, $bDzmQ.$('span.colorspan'));
        const text = $bDzmQ.append(container, $bDzmQ.$('.contents'));
        const main = $bDzmQ.append(text, $bDzmQ.$('.main'));
        data.iconContainer = $bDzmQ.append(main, $bDzmQ.$('.icon-label.codicon'));
        data.left = $bDzmQ.append(main, $bDzmQ.$('span.left'));
        data.right = $bDzmQ.append(main, $bDzmQ.$('span.right'));
        data.iconLabel = new $7XjKn.IconLabel(data.left, {
            supportHighlights: true,
            supportIcons: true
        });
        data.disposables.add(data.iconLabel);
        data.parametersLabel = $bDzmQ.append(data.left, $bDzmQ.$('span.signature-label'));
        data.qualifierLabel = $bDzmQ.append(data.left, $bDzmQ.$('span.qualifier-label'));
        data.detailsLabel = $bDzmQ.append(data.right, $bDzmQ.$('span.details-label'));
        data.readMore = $bDzmQ.append(data.right, $bDzmQ.$('span.readMore' + $azIPz.ThemeIcon.asCSSSelector($2f2dedd72e1fb09e$export$3cc1a6a224e77f6d)));
        data.readMore.title = $4dEdH.localize('readMore', "Read More");
        const configureFont = ()=>{
            const options = this._editor.getOptions();
            const fontInfo = options.get(43 /* fontInfo */ );
            const fontFamily = fontInfo.getMassagedFontFamily($5yY14.isSafari ? $cd4KD.EDITOR_FONT_DEFAULTS.fontFamily : null);
            const fontFeatureSettings = fontInfo.fontFeatureSettings;
            const fontSize = options.get(106 /* suggestFontSize */ ) || fontInfo.fontSize;
            const lineHeight = options.get(107 /* suggestLineHeight */ ) || fontInfo.lineHeight;
            const fontWeight = fontInfo.fontWeight;
            const fontSizePx = `${fontSize}px`;
            const lineHeightPx = `${lineHeight}px`;
            data.root.style.fontSize = fontSizePx;
            data.root.style.fontWeight = fontWeight;
            main.style.fontFamily = fontFamily;
            main.style.fontFeatureSettings = fontFeatureSettings;
            main.style.lineHeight = lineHeightPx;
            data.icon.style.height = lineHeightPx;
            data.icon.style.width = lineHeightPx;
            data.readMore.style.height = lineHeightPx;
            data.readMore.style.width = lineHeightPx;
        };
        configureFont();
        data.disposables.add(this._editor.onDidChangeConfiguration((e)=>{
            if (e.hasChanged(43 /* fontInfo */ ) || e.hasChanged(106 /* suggestFontSize */ ) || e.hasChanged(107 /* suggestLineHeight */ )) configureFont();
        }));
        return data;
    }
    renderElement(element, index, data) {
        const { completion: completion  } = element;
        data.root.id = $2f2dedd72e1fb09e$export$1b8419c18a1973d4(index);
        data.colorspan.style.backgroundColor = '';
        const labelOptions = {
            labelEscapeNewLines: true,
            matches: $lk06m.createMatches(element.score)
        };
        let color = [];
        if (completion.kind === 19 /* Color */  && $2f2dedd72e1fb09e$var$_completionItemColor.extract(element, color)) {
            // special logic for 'color' completion items
            data.icon.className = 'icon customcolor';
            data.iconContainer.className = 'icon hide';
            data.colorspan.style.backgroundColor = color[0];
        } else if (completion.kind === 20 /* File */  && this._themeService.getFileIconTheme().hasFileIcons) {
            // special logic for 'file' completion items
            data.icon.className = 'icon hide';
            data.iconContainer.className = 'icon hide';
            const labelClasses = $50d2342eab50311c$export$e27af96b7ae3b008(this._modelService, this._modeService, $5OJ54.URI.from({
                scheme: 'fake',
                path: element.textLabel
            }), $0e122e44ede0e86f$export$13c2b15ba9153568.FILE);
            const detailClasses = $50d2342eab50311c$export$e27af96b7ae3b008(this._modelService, this._modeService, $5OJ54.URI.from({
                scheme: 'fake',
                path: completion.detail
            }), $0e122e44ede0e86f$export$13c2b15ba9153568.FILE);
            labelOptions.extraClasses = labelClasses.length > detailClasses.length ? labelClasses : detailClasses;
        } else if (completion.kind === 23 /* Folder */  && this._themeService.getFileIconTheme().hasFolderIcons) {
            // special logic for 'folder' completion items
            data.icon.className = 'icon hide';
            data.iconContainer.className = 'icon hide';
            labelOptions.extraClasses = $kJ8UG.flatten([
                $50d2342eab50311c$export$e27af96b7ae3b008(this._modelService, this._modeService, $5OJ54.URI.from({
                    scheme: 'fake',
                    path: element.textLabel
                }), $0e122e44ede0e86f$export$13c2b15ba9153568.FOLDER),
                $50d2342eab50311c$export$e27af96b7ae3b008(this._modelService, this._modeService, $5OJ54.URI.from({
                    scheme: 'fake',
                    path: completion.detail
                }), $0e122e44ede0e86f$export$13c2b15ba9153568.FOLDER)
            ]);
        } else {
            // normal icon
            data.icon.className = 'icon hide';
            data.iconContainer.className = '';
            data.iconContainer.classList.add('suggest-icon', ...$4PmRQ.completionKindToCssClass(completion.kind).split(' '));
        }
        if (completion.tags && completion.tags.indexOf(1 /* Deprecated */ ) >= 0) {
            labelOptions.extraClasses = (labelOptions.extraClasses || []).concat([
                'deprecated'
            ]);
            labelOptions.matches = [];
        }
        data.iconLabel.setLabel(element.textLabel, undefined, labelOptions);
        if (typeof completion.label === 'string') {
            data.parametersLabel.textContent = '';
            data.detailsLabel.textContent = $2f2dedd72e1fb09e$var$stripNewLines(completion.detail || '');
            data.root.classList.add('string-label');
        } else {
            data.parametersLabel.textContent = $2f2dedd72e1fb09e$var$stripNewLines(completion.label.detail || '');
            data.detailsLabel.textContent = $2f2dedd72e1fb09e$var$stripNewLines(completion.label.description || '');
            data.root.classList.remove('string-label');
        }
        if (this._editor.getOption(105 /* suggest */ ).showInlineDetails) $bDzmQ.show(data.detailsLabel);
        else $bDzmQ.hide(data.detailsLabel);
        if ($d151f9fba6e3a688$exports.canExpandCompletionItem(element)) {
            data.right.classList.add('can-expand-details');
            $bDzmQ.show(data.readMore);
            data.readMore.onmousedown = (e)=>{
                e.stopPropagation();
                e.preventDefault();
            };
            data.readMore.onclick = (e)=>{
                e.stopPropagation();
                e.preventDefault();
                this._onDidToggleDetails.fire();
            };
        } else {
            data.right.classList.remove('can-expand-details');
            $bDzmQ.hide(data.readMore);
            data.readMore.onmousedown = null;
            data.readMore.onclick = null;
        }
    }
    disposeTemplate(templateData) {
        templateData.disposables.dispose();
    }
};
$2f2dedd72e1fb09e$export$72711cb3319e66a8 = $2f2dedd72e1fb09e$var$__decorate([
    $2f2dedd72e1fb09e$var$__param(1, $15EOE.IModelService),
    $2f2dedd72e1fb09e$var$__param(2, $is5YK.IModeService),
    $2f2dedd72e1fb09e$var$__param(3, $azIPz.IThemeService)
], $2f2dedd72e1fb09e$export$72711cb3319e66a8);
function $2f2dedd72e1fb09e$var$stripNewLines(str) {
    return str.replace(/\r\n|\r|\n/g, '');
}


/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $add88597166afbbb$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var $add88597166afbbb$var$__param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
};
var $add88597166afbbb$var$__awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
const $add88597166afbbb$export$4e0daeab52f97af3 = $gaWeX.registerColor('editorSuggestWidget.selectedBackground', {
    dark: $gaWeX.quickInputListFocusBackground,
    light: $gaWeX.quickInputListFocusBackground,
    hc: $gaWeX.quickInputListFocusBackground
}, $4dEdH.localize('editorSuggestWidgetSelectedBackground', 'Background color of the selected entry in the suggest widget.'));
class $add88597166afbbb$var$PersistedWidgetSize {
    constructor(_service, editor){
        this._service = _service;
        this._key = `suggestWidget.size/${editor.getEditorType()}/${editor instanceof $998bf45916d8a6ec$exports.EmbeddedCodeEditorWidget}`;
    }
    restore() {
        var _a;
        const raw = (_a = this._service.get(this._key, 0 /* GLOBAL */ )) !== null && _a !== void 0 ? _a : '';
        try {
            const obj = JSON.parse(raw);
            if ($bDzmQ.Dimension.is(obj)) return $bDzmQ.Dimension.lift(obj);
        } catch (_b) {
        // ignore
        }
        return undefined;
    }
    store(size) {
        this._service.store(this._key, JSON.stringify(size), 0 /* GLOBAL */ , 1 /* MACHINE */ );
    }
    reset() {
        this._service.remove(this._key, 0 /* GLOBAL */ );
    }
}
let $add88597166afbbb$export$ad1808d575fcd49b = class $add88597166afbbb$export$ad1808d575fcd49b {
    constructor(editor, _storageService, _contextKeyService, _themeService, instantiationService){
        this.editor = editor;
        this._storageService = _storageService;
        this._state = 0 /* Hidden */ ;
        this._isAuto = false;
        this._ignoreFocusEvents = false;
        this._forceRenderingAbove = false;
        this._explainMode = false;
        this._showTimeout = new $6bXyA.TimeoutTimer();
        this._disposables = new $9cWcn.DisposableStore();
        this._onDidSelect = new $5YaSO.Emitter();
        this._onDidFocus = new $5YaSO.Emitter();
        this._onDidHide = new $5YaSO.Emitter();
        this._onDidShow = new $5YaSO.Emitter();
        this.onDidSelect = this._onDidSelect.event;
        this.onDidFocus = this._onDidFocus.event;
        this.onDidHide = this._onDidHide.event;
        this.onDidShow = this._onDidShow.event;
        this._onDetailsKeydown = new $5YaSO.Emitter();
        this.onDetailsKeyDown = this._onDetailsKeydown.event;
        this.element = new $61aa28068d91586d$export$f049a29194943609();
        this.element.domNode.classList.add('editor-widget', 'suggest-widget');
        this._contentWidget = new $add88597166afbbb$export$335c575f116d83ac(this, editor);
        this._persistedSize = new $add88597166afbbb$var$PersistedWidgetSize(_storageService, editor);
        class ResizeState {
            constructor(persistedSize, currentSize, persistHeight = false, persistWidth = false){
                this.persistedSize = persistedSize;
                this.currentSize = currentSize;
                this.persistHeight = persistHeight;
                this.persistWidth = persistWidth;
            }
        }
        let state;
        this._disposables.add(this.element.onDidWillResize(()=>{
            this._contentWidget.lockPreference();
            state = new ResizeState(this._persistedSize.restore(), this.element.size);
        }));
        this._disposables.add(this.element.onDidResize((e)=>{
            var _a, _b, _c, _d;
            this._resize(e.dimension.width, e.dimension.height);
            if (state) {
                state.persistHeight = state.persistHeight || !!e.north || !!e.south;
                state.persistWidth = state.persistWidth || !!e.east || !!e.west;
            }
            if (!e.done) return;
            if (state) {
                // only store width or height value that have changed and also
                // only store changes that are above a certain threshold
                const { itemHeight: itemHeight , defaultSize: defaultSize  } = this.getLayoutInfo();
                const threshold = Math.round(itemHeight / 2);
                let { width: width , height: height  } = this.element.size;
                if (!state.persistHeight || Math.abs(state.currentSize.height - height) <= threshold) height = (_b = (_a = state.persistedSize) === null || _a === void 0 ? void 0 : _a.height) !== null && _b !== void 0 ? _b : defaultSize.height;
                if (!state.persistWidth || Math.abs(state.currentSize.width - width) <= threshold) width = (_d = (_c = state.persistedSize) === null || _c === void 0 ? void 0 : _c.width) !== null && _d !== void 0 ? _d : defaultSize.width;
                this._persistedSize.store(new $bDzmQ.Dimension(width, height));
            }
            // reset working state
            this._contentWidget.unlockPreference();
            state = undefined;
        }));
        this._messageElement = $bDzmQ.append(this.element.domNode, $bDzmQ.$('.message'));
        this._listElement = $bDzmQ.append(this.element.domNode, $bDzmQ.$('.tree'));
        const details = instantiationService.createInstance($d151f9fba6e3a688$exports.SuggestDetailsWidget, this.editor);
        details.onDidClose(this.toggleDetails, this, this._disposables);
        this._details = new $d151f9fba6e3a688$exports.SuggestDetailsOverlay(details, this.editor);
        const applyIconStyle = ()=>this.element.domNode.classList.toggle('no-icons', !this.editor.getOption(105 /* suggest */ ).showIcons)
        ;
        applyIconStyle();
        const renderer = instantiationService.createInstance($2f2dedd72e1fb09e$exports.ItemRenderer, this.editor);
        this._disposables.add(renderer);
        this._disposables.add(renderer.onDidToggleDetails(()=>this.toggleDetails()
        ));
        this._list = new $dD2OW.List('SuggestWidget', this._listElement, {
            getHeight: (_element)=>this.getLayoutInfo().itemHeight
            ,
            getTemplateId: (_element)=>'suggestion'
        }, [
            renderer
        ], {
            alwaysConsumeMouseWheel: true,
            useShadows: false,
            mouseSupport: false,
            accessibilityProvider: {
                getRole: ()=>'option'
                ,
                getAriaLabel: (item)=>{
                    if (item.isResolved && this._isDetailsVisible()) {
                        const { documentation: documentation , detail: detail  } = item.completion;
                        const docs = $jcr1R.format('{0}{1}', detail || '', documentation ? typeof documentation === 'string' ? documentation : documentation.value : '');
                        return $4dEdH.localize('ariaCurrenttSuggestionReadDetails', "{0}, docs: {1}", item.textLabel, docs);
                    } else return item.textLabel;
                },
                getWidgetAriaLabel: ()=>$4dEdH.localize('suggest', "Suggest")
                ,
                getWidgetRole: ()=>'listbox'
            }
        });
        this._status = instantiationService.createInstance($8f90c33f1492fa3c$exports.SuggestWidgetStatus, this.element.domNode);
        const applyStatusBarStyle = ()=>this.element.domNode.classList.toggle('with-status-bar', this.editor.getOption(105 /* suggest */ ).showStatusBar)
        ;
        applyStatusBarStyle();
        this._disposables.add($8oQv6.attachListStyler(this._list, _themeService, {
            listInactiveFocusBackground: $add88597166afbbb$export$4e0daeab52f97af3,
            listInactiveFocusOutline: $gaWeX.activeContrastBorder
        }));
        this._disposables.add(_themeService.onDidColorThemeChange((t)=>this._onThemeChange(t)
        ));
        this._onThemeChange(_themeService.getColorTheme());
        this._disposables.add(this._list.onMouseDown((e)=>this._onListMouseDownOrTap(e)
        ));
        this._disposables.add(this._list.onTap((e)=>this._onListMouseDownOrTap(e)
        ));
        this._disposables.add(this._list.onDidChangeSelection((e)=>this._onListSelection(e)
        ));
        this._disposables.add(this._list.onDidChangeFocus((e)=>this._onListFocus(e)
        ));
        this._disposables.add(this.editor.onDidChangeCursorSelection(()=>this._onCursorSelectionChanged()
        ));
        this._disposables.add(this.editor.onDidChangeConfiguration((e)=>{
            if (e.hasChanged(105 /* suggest */ )) {
                applyStatusBarStyle();
                applyIconStyle();
            }
        }));
        this._ctxSuggestWidgetVisible = $63d2440bdac663c3$exports.Context.Visible.bindTo(_contextKeyService);
        this._ctxSuggestWidgetDetailsVisible = $63d2440bdac663c3$exports.Context.DetailsVisible.bindTo(_contextKeyService);
        this._ctxSuggestWidgetMultipleSuggestions = $63d2440bdac663c3$exports.Context.MultipleSuggestions.bindTo(_contextKeyService);
        this._disposables.add($bDzmQ.addStandardDisposableListener(this._details.widget.domNode, 'keydown', (e)=>{
            this._onDetailsKeydown.fire(e);
        }));
        this._disposables.add(this.editor.onMouseDown((e)=>this._onEditorMouseDown(e)
        ));
    }
    dispose() {
        var _a;
        this._details.widget.dispose();
        this._details.dispose();
        this._list.dispose();
        this._status.dispose();
        this._disposables.dispose();
        (_a = this._loadingTimeout) === null || _a === void 0 || _a.dispose();
        this._showTimeout.dispose();
        this._contentWidget.dispose();
        this.element.dispose();
    }
    _onEditorMouseDown(mouseEvent) {
        if (this._details.widget.domNode.contains(mouseEvent.target.element)) // Clicking inside details
        this._details.widget.domNode.focus();
        else // Clicking outside details and inside suggest
        if (this.element.domNode.contains(mouseEvent.target.element)) this.editor.focus();
    }
    _onCursorSelectionChanged() {
        if (this._state !== 0 /* Hidden */ ) this._contentWidget.layout();
    }
    _onListMouseDownOrTap(e) {
        if (typeof e.element === 'undefined' || typeof e.index === 'undefined') return;
        // prevent stealing browser focus from the editor
        e.browserEvent.preventDefault();
        e.browserEvent.stopPropagation();
        this._select(e.element, e.index);
    }
    _onListSelection(e) {
        if (e.elements.length) this._select(e.elements[0], e.indexes[0]);
    }
    _select(item, index) {
        const completionModel = this._completionModel;
        if (completionModel) {
            this._onDidSelect.fire({
                item: item,
                index: index,
                model: completionModel
            });
            this.editor.focus();
        }
    }
    _onThemeChange(theme) {
        this._details.widget.borderWidth = theme.type === 'hc' ? 2 : 1;
    }
    _onListFocus(e) {
        var _a;
        if (this._ignoreFocusEvents) return;
        if (!e.elements.length) {
            if (this._currentSuggestionDetails) {
                this._currentSuggestionDetails.cancel();
                this._currentSuggestionDetails = undefined;
                this._focusedItem = undefined;
            }
            this.editor.setAriaOptions({
                activeDescendant: undefined
            });
            return;
        }
        if (!this._completionModel) return;
        const item = e.elements[0];
        const index = e.indexes[0];
        if (item !== this._focusedItem) {
            (_a = this._currentSuggestionDetails) === null || _a === void 0 || _a.cancel();
            this._currentSuggestionDetails = undefined;
            this._focusedItem = item;
            this._list.reveal(index);
            this._currentSuggestionDetails = $6bXyA.createCancelablePromise((token)=>$add88597166afbbb$var$__awaiter(this, void 0, void 0, function*() {
                    const loading = $6bXyA.disposableTimeout(()=>{
                        if (this._isDetailsVisible()) this.showDetails(true);
                    }, 250);
                    token.onCancellationRequested(()=>loading.dispose()
                    );
                    const result = yield item.resolve(token);
                    loading.dispose();
                    return result;
                })
            );
            this._currentSuggestionDetails.then(()=>{
                if (index >= this._list.length || item !== this._list.element(index)) return;
                // item can have extra information, so re-render
                this._ignoreFocusEvents = true;
                this._list.splice(index, 1, [
                    item
                ]);
                this._list.setFocus([
                    index
                ]);
                this._ignoreFocusEvents = false;
                if (this._isDetailsVisible()) this.showDetails(false);
                else this.element.domNode.classList.remove('docs-side');
                this.editor.setAriaOptions({
                    activeDescendant: $2f2dedd72e1fb09e$exports.getAriaId(index)
                });
            }).catch($gPkHZ.onUnexpectedError);
        }
        // emit an event
        this._onDidFocus.fire({
            item: item,
            index: index,
            model: this._completionModel
        });
    }
    _setState(state) {
        if (this._state === state) return;
        this._state = state;
        this.element.domNode.classList.toggle('frozen', state === 4 /* Frozen */ );
        this.element.domNode.classList.remove('message');
        switch(state){
            case 0 /* Hidden */ :
                $bDzmQ.hide(this._messageElement, this._listElement, this._status.element);
                this._details.hide(true);
                this._status.hide();
                this._contentWidget.hide();
                this._ctxSuggestWidgetVisible.reset();
                this._ctxSuggestWidgetMultipleSuggestions.reset();
                this._showTimeout.cancel();
                this.element.domNode.classList.remove('visible');
                this._list.splice(0, this._list.length);
                this._focusedItem = undefined;
                this._cappedHeight = undefined;
                this._explainMode = false;
                break;
            case 1 /* Loading */ :
                this.element.domNode.classList.add('message');
                this._messageElement.textContent = $add88597166afbbb$export$ad1808d575fcd49b.LOADING_MESSAGE;
                $bDzmQ.hide(this._listElement, this._status.element);
                $bDzmQ.show(this._messageElement);
                this._details.hide();
                this._show();
                this._focusedItem = undefined;
                break;
            case 2 /* Empty */ :
                this.element.domNode.classList.add('message');
                this._messageElement.textContent = $add88597166afbbb$export$ad1808d575fcd49b.NO_SUGGESTIONS_MESSAGE;
                $bDzmQ.hide(this._listElement, this._status.element);
                $bDzmQ.show(this._messageElement);
                this._details.hide();
                this._show();
                this._focusedItem = undefined;
                break;
            case 3 /* Open */ :
                $bDzmQ.hide(this._messageElement);
                $bDzmQ.show(this._listElement, this._status.element);
                this._show();
                break;
            case 4 /* Frozen */ :
                $bDzmQ.hide(this._messageElement);
                $bDzmQ.show(this._listElement, this._status.element);
                this._show();
                break;
            case 5 /* Details */ :
                $bDzmQ.hide(this._messageElement);
                $bDzmQ.show(this._listElement, this._status.element);
                this._details.show();
                this._show();
                break;
        }
    }
    _show() {
        this._status.show();
        this._contentWidget.show();
        this._layout(this._persistedSize.restore());
        this._ctxSuggestWidgetVisible.set(true);
        this._showTimeout.cancelAndSet(()=>{
            this.element.domNode.classList.add('visible');
            this._onDidShow.fire(this);
        }, 100);
    }
    showTriggered(auto, delay) {
        if (this._state !== 0 /* Hidden */ ) return;
        this._contentWidget.setPosition(this.editor.getPosition());
        this._isAuto = !!auto;
        if (!this._isAuto) this._loadingTimeout = $6bXyA.disposableTimeout(()=>this._setState(1 /* Loading */ )
        , delay);
    }
    showSuggestions(completionModel, selectionIndex, isFrozen, isAuto) {
        var _a, _b;
        this._contentWidget.setPosition(this.editor.getPosition());
        (_a = this._loadingTimeout) === null || _a === void 0 || _a.dispose();
        (_b = this._currentSuggestionDetails) === null || _b === void 0 || _b.cancel();
        this._currentSuggestionDetails = undefined;
        if (this._completionModel !== completionModel) this._completionModel = completionModel;
        if (isFrozen && this._state !== 2 /* Empty */  && this._state !== 0 /* Hidden */ ) {
            this._setState(4 /* Frozen */ );
            return;
        }
        const visibleCount = this._completionModel.items.length;
        const isEmpty = visibleCount === 0;
        this._ctxSuggestWidgetMultipleSuggestions.set(visibleCount > 1);
        if (isEmpty) {
            this._setState(isAuto ? 0 /* Hidden */  : 2 /* Empty */ );
            this._completionModel = undefined;
            return;
        }
        this._focusedItem = undefined;
        this._list.splice(0, this._list.length, this._completionModel.items);
        this._setState(isFrozen ? 4 /* Frozen */  : 3 /* Open */ );
        this._list.reveal(selectionIndex, 0);
        this._list.setFocus([
            selectionIndex
        ]);
        this._layout(this.element.size);
        // Reset focus border
        this._details.widget.domNode.classList.remove('focused');
    }
    selectNextPage() {
        switch(this._state){
            case 0 /* Hidden */ :
                return false;
            case 5 /* Details */ :
                this._details.widget.pageDown();
                return true;
            case 1 /* Loading */ :
                return !this._isAuto;
            default:
                this._list.focusNextPage();
                return true;
        }
    }
    selectNext() {
        switch(this._state){
            case 0 /* Hidden */ :
                return false;
            case 1 /* Loading */ :
                return !this._isAuto;
            default:
                this._list.focusNext(1, true);
                return true;
        }
    }
    selectLast() {
        switch(this._state){
            case 0 /* Hidden */ :
                return false;
            case 5 /* Details */ :
                this._details.widget.scrollBottom();
                return true;
            case 1 /* Loading */ :
                return !this._isAuto;
            default:
                this._list.focusLast();
                return true;
        }
    }
    selectPreviousPage() {
        switch(this._state){
            case 0 /* Hidden */ :
                return false;
            case 5 /* Details */ :
                this._details.widget.pageUp();
                return true;
            case 1 /* Loading */ :
                return !this._isAuto;
            default:
                this._list.focusPreviousPage();
                return true;
        }
    }
    selectPrevious() {
        switch(this._state){
            case 0 /* Hidden */ :
                return false;
            case 1 /* Loading */ :
                return !this._isAuto;
            default:
                this._list.focusPrevious(1, true);
                return false;
        }
    }
    selectFirst() {
        switch(this._state){
            case 0 /* Hidden */ :
                return false;
            case 5 /* Details */ :
                this._details.widget.scrollTop();
                return true;
            case 1 /* Loading */ :
                return !this._isAuto;
            default:
                this._list.focusFirst();
                return true;
        }
    }
    getFocusedItem() {
        if (this._state !== 0 /* Hidden */  && this._state !== 2 /* Empty */  && this._state !== 1 /* Loading */  && this._completionModel) return {
            item: this._list.getFocusedElements()[0],
            index: this._list.getFocus()[0],
            model: this._completionModel
        };
        return undefined;
    }
    toggleDetailsFocus() {
        if (this._state === 5 /* Details */ ) {
            this._setState(3 /* Open */ );
            this._details.widget.domNode.classList.remove('focused');
        } else if (this._state === 3 /* Open */  && this._isDetailsVisible()) {
            this._setState(5 /* Details */ );
            this._details.widget.domNode.classList.add('focused');
        }
    }
    toggleDetails() {
        if (this._isDetailsVisible()) {
            // hide details widget
            this._ctxSuggestWidgetDetailsVisible.set(false);
            this._setDetailsVisible(false);
            this._details.hide();
            this.element.domNode.classList.remove('shows-details');
        } else if (($d151f9fba6e3a688$exports.canExpandCompletionItem(this._list.getFocusedElements()[0]) || this._explainMode) && (this._state === 3 /* Open */  || this._state === 5 /* Details */  || this._state === 4 /* Frozen */ )) {
            // show details widget (iff possible)
            this._ctxSuggestWidgetDetailsVisible.set(true);
            this._setDetailsVisible(true);
            this.showDetails(false);
        }
    }
    showDetails(loading) {
        this._details.show();
        if (loading) this._details.widget.renderLoading();
        else this._details.widget.renderItem(this._list.getFocusedElements()[0], this._explainMode);
        this._positionDetails();
        this.editor.focus();
        this.element.domNode.classList.add('shows-details');
    }
    toggleExplainMode() {
        if (this._list.getFocusedElements()[0]) {
            this._explainMode = !this._explainMode;
            if (!this._isDetailsVisible()) this.toggleDetails();
            else this.showDetails(false);
        }
    }
    resetPersistedSize() {
        this._persistedSize.reset();
    }
    hideWidget() {
        var _a;
        (_a = this._loadingTimeout) === null || _a === void 0 || _a.dispose();
        this._setState(0 /* Hidden */ );
        this._onDidHide.fire(this);
        this.element.clearSashHoverState();
        // ensure that a reasonable widget height is persisted so that
        // accidential "resize-to-single-items" cases aren't happening
        const dim = this._persistedSize.restore();
        const minPersistedHeight = Math.ceil(this.getLayoutInfo().itemHeight * 4.3);
        if (dim && dim.height < minPersistedHeight) this._persistedSize.store(dim.with(undefined, minPersistedHeight));
    }
    isFrozen() {
        return this._state === 4 /* Frozen */ ;
    }
    _afterRender(position) {
        if (position === null) {
            if (this._isDetailsVisible()) this._details.hide(); //todo@jrieken soft-hide
            return;
        }
        if (this._state === 2 /* Empty */  || this._state === 1 /* Loading */ ) // no special positioning when widget isn't showing list
        return;
        if (this._isDetailsVisible()) this._details.show();
        this._positionDetails();
    }
    _layout(size) {
        var _a, _b, _c;
        if (!this.editor.hasModel()) return;
        if (!this.editor.getDomNode()) // happens when running tests
        return;
        const bodyBox = $bDzmQ.getClientArea(document.body);
        const info = this.getLayoutInfo();
        if (!size) size = info.defaultSize;
        let height = size.height;
        let width = size.width;
        // status bar
        this._status.element.style.lineHeight = `${info.itemHeight}px`;
        if (this._state === 2 /* Empty */  || this._state === 1 /* Loading */ ) {
            // showing a message only
            height = info.itemHeight + info.borderHeight;
            width = info.defaultSize.width / 2;
            this.element.enableSashes(false, false, false, false);
            this.element.minSize = this.element.maxSize = new $bDzmQ.Dimension(width, height);
            this._contentWidget.setPreference(2 /* BELOW */ );
        } else {
            // showing items
            // width math
            const maxWidth = bodyBox.width - info.borderHeight - 2 * info.horizontalPadding;
            if (width > maxWidth) width = maxWidth;
            const preferredWidth = this._completionModel ? this._completionModel.stats.pLabelLen * info.typicalHalfwidthCharacterWidth : width;
            // height math
            const fullHeight = info.statusBarHeight + this._list.contentHeight + info.borderHeight;
            const minHeight = info.itemHeight + info.statusBarHeight;
            const editorBox = $bDzmQ.getDomNodePagePosition(this.editor.getDomNode());
            const cursorBox = this.editor.getScrolledVisiblePosition(this.editor.getPosition());
            const cursorBottom = editorBox.top + cursorBox.top + cursorBox.height;
            const maxHeightBelow = Math.min(bodyBox.height - cursorBottom - info.verticalPadding, fullHeight);
            const availableSpaceAbove = editorBox.top + cursorBox.top - info.verticalPadding;
            const maxHeightAbove = Math.min(availableSpaceAbove, fullHeight);
            let maxHeight = Math.min(Math.max(maxHeightAbove, maxHeightBelow) + info.borderHeight, fullHeight);
            if (height === ((_a = this._cappedHeight) === null || _a === void 0 ? void 0 : _a.capped)) // Restore the old (wanted) height when the current
            // height is capped to fit
            height = this._cappedHeight.wanted;
            if (height < minHeight) height = minHeight;
            if (height > maxHeight) height = maxHeight;
            const forceRenderingAboveRequiredSpace = 150;
            if (height > maxHeightBelow || this._forceRenderingAbove && availableSpaceAbove > forceRenderingAboveRequiredSpace) {
                this._contentWidget.setPreference(1 /* ABOVE */ );
                this.element.enableSashes(true, true, false, false);
                maxHeight = maxHeightAbove;
            } else {
                this._contentWidget.setPreference(2 /* BELOW */ );
                this.element.enableSashes(false, true, true, false);
                maxHeight = maxHeightBelow;
            }
            this.element.preferredSize = new $bDzmQ.Dimension(preferredWidth, info.defaultSize.height);
            this.element.maxSize = new $bDzmQ.Dimension(maxWidth, maxHeight);
            this.element.minSize = new $bDzmQ.Dimension(220, minHeight);
            // Know when the height was capped to fit and remember
            // the wanted height for later. This is required when going
            // left to widen suggestions.
            this._cappedHeight = height === fullHeight ? {
                wanted: (_c = (_b = this._cappedHeight) === null || _b === void 0 ? void 0 : _b.wanted) !== null && _c !== void 0 ? _c : size.height,
                capped: height
            } : undefined;
        }
        this._resize(width, height);
    }
    _resize(width, height) {
        const { width: maxWidth , height: maxHeight  } = this.element.maxSize;
        width = Math.min(maxWidth, width);
        height = Math.min(maxHeight, height);
        const { statusBarHeight: statusBarHeight  } = this.getLayoutInfo();
        this._list.layout(height - statusBarHeight, width);
        this._listElement.style.height = `${height - statusBarHeight}px`;
        this.element.layout(height, width);
        this._contentWidget.layout();
        this._positionDetails();
    }
    _positionDetails() {
        var _a;
        if (this._isDetailsVisible()) this._details.placeAtAnchor(this.element.domNode, ((_a = this._contentWidget.getPosition()) === null || _a === void 0 ? void 0 : _a.preference[0]) === 2 /* BELOW */ );
    }
    getLayoutInfo() {
        const fontInfo = this.editor.getOption(43 /* fontInfo */ );
        const itemHeight = $7mO4b.clamp(this.editor.getOption(107 /* suggestLineHeight */ ) || fontInfo.lineHeight, 8, 1000);
        const statusBarHeight = !this.editor.getOption(105 /* suggest */ ).showStatusBar || this._state === 2 /* Empty */  || this._state === 1 /* Loading */  ? 0 : itemHeight;
        const borderWidth = this._details.widget.borderWidth;
        const borderHeight = 2 * borderWidth;
        return {
            itemHeight: itemHeight,
            statusBarHeight: statusBarHeight,
            borderWidth: borderWidth,
            borderHeight: borderHeight,
            typicalHalfwidthCharacterWidth: fontInfo.typicalHalfwidthCharacterWidth,
            verticalPadding: 22,
            horizontalPadding: 14,
            defaultSize: new $bDzmQ.Dimension(430, statusBarHeight + 12 * itemHeight + borderHeight)
        };
    }
    _isDetailsVisible() {
        return this._storageService.getBoolean('expandSuggestionDocs', 0 /* GLOBAL */ , false);
    }
    _setDetailsVisible(value) {
        this._storageService.store('expandSuggestionDocs', value, 0 /* GLOBAL */ , 0 /* USER */ );
    }
    forceRenderingAbove() {
        if (!this._forceRenderingAbove) {
            this._forceRenderingAbove = true;
            this._layout(this._persistedSize.restore());
        }
    }
    stopForceRenderingAbove() {
        this._forceRenderingAbove = false;
    }
};
$add88597166afbbb$export$ad1808d575fcd49b.LOADING_MESSAGE = $4dEdH.localize('suggestWidget.loading', "Loading...");
$add88597166afbbb$export$ad1808d575fcd49b.NO_SUGGESTIONS_MESSAGE = $4dEdH.localize('suggestWidget.noSuggestions', "No suggestions.");
$add88597166afbbb$export$ad1808d575fcd49b = $add88597166afbbb$var$__decorate([
    $add88597166afbbb$var$__param(1, $2AUoS.IStorageService),
    $add88597166afbbb$var$__param(2, $cxCeF.IContextKeyService),
    $add88597166afbbb$var$__param(3, $azIPz.IThemeService),
    $add88597166afbbb$var$__param(4, $fdGPu.IInstantiationService)
], $add88597166afbbb$export$ad1808d575fcd49b);
class $add88597166afbbb$export$335c575f116d83ac {
    constructor(_widget, _editor){
        this._widget = _widget;
        this._editor = _editor;
        this.allowEditorOverflow = true;
        this.suppressMouseDown = false;
        this._preferenceLocked = false;
        this._added = false;
        this._hidden = false;
    }
    dispose() {
        if (this._added) {
            this._added = false;
            this._editor.removeContentWidget(this);
        }
    }
    getId() {
        return 'editor.widget.suggestWidget';
    }
    getDomNode() {
        return this._widget.element.domNode;
    }
    show() {
        this._hidden = false;
        if (!this._added) {
            this._added = true;
            this._editor.addContentWidget(this);
        }
    }
    hide() {
        if (!this._hidden) {
            this._hidden = true;
            this.layout();
        }
    }
    layout() {
        this._editor.layoutContentWidget(this);
    }
    getPosition() {
        if (this._hidden || !this._position || !this._preference) return null;
        return {
            position: this._position,
            preference: [
                this._preference
            ]
        };
    }
    beforeRender() {
        const { height: height , width: width  } = this._widget.element.size;
        const { borderWidth: borderWidth , horizontalPadding: horizontalPadding  } = this._widget.getLayoutInfo();
        return new $bDzmQ.Dimension(width + 2 * borderWidth + horizontalPadding, height + 2 * borderWidth);
    }
    afterRender(position) {
        this._widget._afterRender(position);
    }
    setPreference(preference) {
        if (!this._preferenceLocked) this._preference = preference;
    }
    lockPreference() {
        this._preferenceLocked = true;
    }
    unlockPreference() {
        this._preferenceLocked = false;
    }
    setPosition(position) {
        this._position = position;
    }
}



var $lMGba = parcelRequire("lMGba");

var $5Aea5 = parcelRequire("5Aea5");

var $n7820 = parcelRequire("n7820");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $116f6f5b5e48a18e$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var $116f6f5b5e48a18e$var$__param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
};
// sticky suggest widget which doesn't disappear on focus out and such
let $116f6f5b5e48a18e$var$_sticky = false;
// _sticky = Boolean("true"); // done "weirdly" so that a lint warning prevents you from pushing this
class $116f6f5b5e48a18e$var$LineSuffix {
    constructor(_model, _position){
        this._model = _model;
        this._position = _position;
        // spy on what's happening right of the cursor. two cases:
        // 1. end of line -> check that it's still end of line
        // 2. mid of line -> add a marker and compute the delta
        const maxColumn = _model.getLineMaxColumn(_position.lineNumber);
        if (maxColumn !== _position.column) {
            const offset = _model.getOffsetAt(_position);
            const end = _model.getPositionAt(offset + 1);
            this._marker = _model.deltaDecorations([], [
                {
                    range: $d00il.Range.fromPositions(_position, end),
                    options: {
                        description: 'suggest-line-suffix',
                        stickiness: 1 /* NeverGrowsWhenTypingAtEdges */ 
                    }
                }
            ]);
        }
    }
    dispose() {
        if (this._marker && !this._model.isDisposed()) this._model.deltaDecorations(this._marker, []);
    }
    delta(position) {
        if (this._model.isDisposed() || this._position.lineNumber !== position.lineNumber) // bail out early if things seems fishy
        return 0;
        // read the marker (in case suggest was triggered at line end) or compare
        // the cursor to the line end.
        if (this._marker) {
            const range = this._model.getDecorationRange(this._marker[0]);
            const end = this._model.getOffsetAt(range.getStartPosition());
            return end - this._model.getOffsetAt(position);
        } else return this._model.getLineMaxColumn(position.lineNumber) - position.column;
    }
}
let $116f6f5b5e48a18e$export$54e1189006f2eb3a = class $116f6f5b5e48a18e$export$54e1189006f2eb3a {
    constructor(editor, _memoryService, _commandService, _contextKeyService, _instantiationService, _logService, _telemetryService){
        this._memoryService = _memoryService;
        this._commandService = _commandService;
        this._contextKeyService = _contextKeyService;
        this._instantiationService = _instantiationService;
        this._logService = _logService;
        this._telemetryService = _telemetryService;
        this._lineSuffix = new $9cWcn.MutableDisposable();
        this._toDispose = new $9cWcn.DisposableStore();
        this._selectors = new $116f6f5b5e48a18e$var$PriorityRegistry((s)=>s.priority
        );
        this._telemetryGate = 0;
        this.editor = editor;
        this.model = _instantiationService.createInstance($f6249e777a38f23e$exports.SuggestModel, this.editor);
        // context key: update insert/replace mode
        const ctxInsertMode = $63d2440bdac663c3$exports.Context.InsertMode.bindTo(_contextKeyService);
        ctxInsertMode.set(editor.getOption(105 /* suggest */ ).insertMode);
        this.model.onDidTrigger(()=>ctxInsertMode.set(editor.getOption(105 /* suggest */ ).insertMode)
        );
        this.widget = this._toDispose.add(new $6bXyA.IdleValue(()=>{
            const widget = this._instantiationService.createInstance($add88597166afbbb$exports.SuggestWidget, this.editor);
            this._toDispose.add(widget);
            this._toDispose.add(widget.onDidSelect((item)=>this._insertSuggestion(item, 0)
            , this));
            // Wire up logic to accept a suggestion on certain characters
            const commitCharacterController = new $f65a77bae671f047$export$1c5a4637a8cc1b47(this.editor, widget, (item)=>this._insertSuggestion(item, 2 /* NoAfterUndoStop */ )
            );
            this._toDispose.add(commitCharacterController);
            this._toDispose.add(this.model.onDidSuggest((e)=>{
                if (e.completionModel.items.length === 0) commitCharacterController.reset();
            }));
            // Wire up makes text edit context key
            const ctxMakesTextEdit = $63d2440bdac663c3$exports.Context.MakesTextEdit.bindTo(this._contextKeyService);
            const ctxHasInsertAndReplace = $63d2440bdac663c3$exports.Context.HasInsertAndReplaceRange.bindTo(this._contextKeyService);
            const ctxCanResolve = $63d2440bdac663c3$exports.Context.CanResolve.bindTo(this._contextKeyService);
            this._toDispose.add($9cWcn.toDisposable(()=>{
                ctxMakesTextEdit.reset();
                ctxHasInsertAndReplace.reset();
                ctxCanResolve.reset();
            }));
            this._toDispose.add(widget.onDidFocus(({ item: item  })=>{
                // (ctx: makesTextEdit)
                const position = this.editor.getPosition();
                const startColumn = item.editStart.column;
                const endColumn = position.column;
                let value = true;
                if (this.editor.getOption(1 /* acceptSuggestionOnEnter */ ) === 'smart' && this.model.state === 2 /* Auto */  && !item.completion.additionalTextEdits && !(item.completion.insertTextRules & 4 /* InsertAsSnippet */ ) && endColumn - startColumn === item.completion.insertText.length) {
                    const oldText = this.editor.getModel().getValueInRange({
                        startLineNumber: position.lineNumber,
                        startColumn: startColumn,
                        endLineNumber: position.lineNumber,
                        endColumn: endColumn
                    });
                    value = oldText !== item.completion.insertText;
                }
                ctxMakesTextEdit.set(value);
                // (ctx: hasInsertAndReplaceRange)
                ctxHasInsertAndReplace.set(!$dcxQ7.Position.equals(item.editInsertEnd, item.editReplaceEnd));
                // (ctx: canResolve)
                ctxCanResolve.set(Boolean(item.provider.resolveCompletionItem) || Boolean(item.completion.documentation) || item.completion.detail !== item.completion.label);
            }));
            this._toDispose.add(widget.onDetailsKeyDown((e)=>{
                // cmd + c on macOS, ctrl + c on Win / Linux
                if (e.toKeybinding().equals(new $cU88k.SimpleKeybinding(true, false, false, false, 33 /* KeyC */ )) || $lb0Ah.isMacintosh && e.toKeybinding().equals(new $cU88k.SimpleKeybinding(false, false, false, true, 33 /* KeyC */ ))) {
                    e.stopPropagation();
                    return;
                }
                if (!e.toKeybinding().isModifierKey()) this.editor.focus();
            }));
            return widget;
        }));
        // Wire up text overtyping capture
        this._overtypingCapturer = this._toDispose.add(new $6bXyA.IdleValue(()=>{
            return this._toDispose.add(new $4b3de48eba7e25db$export$4f0a10c40326a303(this.editor, this.model));
        }));
        this._alternatives = this._toDispose.add(new $6bXyA.IdleValue(()=>{
            return this._toDispose.add(new $06d28af192ee2bcf$exports.SuggestAlternatives(this.editor, this._contextKeyService));
        }));
        this._toDispose.add(_instantiationService.createInstance($e266c08347cc7ab6$exports.WordContextKey, editor));
        this._toDispose.add(this.model.onDidTrigger((e)=>{
            this.widget.value.showTriggered(e.auto, e.shy ? 250 : 50);
            this._lineSuffix.value = new $116f6f5b5e48a18e$var$LineSuffix(this.editor.getModel(), e.position);
        }));
        this._toDispose.add(this.model.onDidSuggest((e)=>{
            if (!e.shy) {
                let index = -1;
                for (const selector of this._selectors.itemsOrderedByPriorityDesc){
                    index = selector.select(this.editor.getModel(), this.editor.getPosition(), e.completionModel.items);
                    if (index !== -1) break;
                }
                if (index === -1) index = this._memoryService.select(this.editor.getModel(), this.editor.getPosition(), e.completionModel.items);
                this.widget.value.showSuggestions(e.completionModel, index, e.isFrozen, e.auto);
            }
        }));
        this._toDispose.add(this.model.onDidCancel((e)=>{
            if (!e.retrigger) this.widget.value.hideWidget();
        }));
        this._toDispose.add(this.editor.onDidBlurEditorWidget(()=>{
            if (!$116f6f5b5e48a18e$var$_sticky) {
                this.model.cancel();
                this.model.clear();
            }
        }));
        // Manage the acceptSuggestionsOnEnter context key
        let acceptSuggestionsOnEnter = $63d2440bdac663c3$exports.Context.AcceptSuggestionsOnEnter.bindTo(_contextKeyService);
        let updateFromConfig = ()=>{
            const acceptSuggestionOnEnter = this.editor.getOption(1 /* acceptSuggestionOnEnter */ );
            acceptSuggestionsOnEnter.set(acceptSuggestionOnEnter === 'on' || acceptSuggestionOnEnter === 'smart');
        };
        this._toDispose.add(this.editor.onDidChangeConfiguration(()=>updateFromConfig()
        ));
        updateFromConfig();
    }
    static get(editor) {
        return editor.getContribution($116f6f5b5e48a18e$export$54e1189006f2eb3a.ID);
    }
    dispose() {
        this._alternatives.dispose();
        this._toDispose.dispose();
        this.widget.dispose();
        this.model.dispose();
        this._lineSuffix.dispose();
    }
    _insertSuggestion(event, flags) {
        if (!event || !event.item) {
            this._alternatives.value.reset();
            this.model.cancel();
            this.model.clear();
            return;
        }
        if (!this.editor.hasModel()) return;
        const model = this.editor.getModel();
        const modelVersionNow = model.getAlternativeVersionId();
        const { item: item  } = event;
        //
        const tasks = [];
        const cts = new $giPcZ.CancellationTokenSource();
        // pushing undo stops *before* additional text edits and
        // *after* the main edit
        if (!(flags & 1 /* NoBeforeUndoStop */ )) this.editor.pushUndoStop();
        // compute overwrite[Before|After] deltas BEFORE applying extra edits
        const info = this.getOverwriteInfo(item, Boolean(flags & 8 /* AlternativeOverwriteConfig */ ));
        // keep item in memory
        this._memoryService.memorize(model, this.editor.getPosition(), item);
        if (Array.isArray(item.completion.additionalTextEdits)) {
            // sync additional edits
            const scrollState = $r7siU.StableEditorScrollState.capture(this.editor);
            this.editor.executeEdits('suggestController.additionalTextEdits.sync', item.completion.additionalTextEdits.map((edit)=>$kHJv6.EditOperation.replace($d00il.Range.lift(edit.range), edit.text)
            ));
            scrollState.restoreRelativeVerticalPositionOfCursor(this.editor);
        } else if (!item.isResolved) {
            // async additional edits
            const sw = new $eUQTM.StopWatch(true);
            let position;
            const docListener = model.onDidChangeContent((e)=>{
                if (e.isFlush) {
                    cts.cancel();
                    docListener.dispose();
                    return;
                }
                for (let change of e.changes){
                    const thisPosition = $d00il.Range.getEndPosition(change.range);
                    if (!position || $dcxQ7.Position.isBefore(thisPosition, position)) position = thisPosition;
                }
            });
            let oldFlags = flags;
            flags |= 2 /* NoAfterUndoStop */ ;
            let didType = false;
            let typeListener = this.editor.onWillType(()=>{
                typeListener.dispose();
                didType = true;
                if (!(oldFlags & 2 /* NoAfterUndoStop */ )) this.editor.pushUndoStop();
            });
            tasks.push(item.resolve(cts.token).then(()=>{
                if (!item.completion.additionalTextEdits || cts.token.isCancellationRequested) return false;
                if (position && item.completion.additionalTextEdits.some((edit)=>$dcxQ7.Position.isBefore(position, $d00il.Range.getStartPosition(edit.range))
                )) return false;
                if (didType) this.editor.pushUndoStop();
                const scrollState = $r7siU.StableEditorScrollState.capture(this.editor);
                this.editor.executeEdits('suggestController.additionalTextEdits.async', item.completion.additionalTextEdits.map((edit)=>$kHJv6.EditOperation.replace($d00il.Range.lift(edit.range), edit.text)
                ));
                scrollState.restoreRelativeVerticalPositionOfCursor(this.editor);
                if (didType || !(oldFlags & 2 /* NoAfterUndoStop */ )) this.editor.pushUndoStop();
                return true;
            }).then((applied)=>{
                this._logService.trace('[suggest] async resolving of edits DONE (ms, applied?)', sw.elapsed(), applied);
                docListener.dispose();
                typeListener.dispose();
            }));
        }
        let { insertText: insertText  } = item.completion;
        if (!(item.completion.insertTextRules & 4 /* InsertAsSnippet */ )) insertText = $ec67e86c75f97474$export$e073bfe8583e8fbf.escape(insertText);
        $766cb4d8639df7d1$exports.SnippetController2.get(this.editor).insert(insertText, {
            overwriteBefore: info.overwriteBefore,
            overwriteAfter: info.overwriteAfter,
            undoStopBefore: false,
            undoStopAfter: false,
            adjustWhitespace: !(item.completion.insertTextRules & 1 /* KeepWhitespace */ ),
            clipboardText: event.model.clipboardText,
            overtypingCapturer: this._overtypingCapturer.value
        });
        if (!(flags & 2 /* NoAfterUndoStop */ )) this.editor.pushUndoStop();
        if (!item.completion.command) // done
        this.model.cancel();
        else if (item.completion.command.id === $116f6f5b5e48a18e$export$6adf569aad8e1b71.id) // retigger
        this.model.trigger({
            auto: true,
            shy: false
        }, true);
        else {
            // exec command, done
            tasks.push(this._commandService.executeCommand(item.completion.command.id, ...item.completion.command.arguments ? [
                ...item.completion.command.arguments
            ] : []).catch($gPkHZ.onUnexpectedError));
            this.model.cancel();
        }
        if (flags & 4 /* KeepAlternativeSuggestions */ ) this._alternatives.value.set(event, (next)=>{
            // cancel resolving of additional edits
            cts.cancel();
            // this is not so pretty. when inserting the 'next'
            // suggestion we undo until we are at the state at
            // which we were before inserting the previous suggestion...
            while(model.canUndo()){
                if (modelVersionNow !== model.getAlternativeVersionId()) model.undo();
                this._insertSuggestion(next, 3 /* NoAfterUndoStop */  | (flags & 8 /* AlternativeOverwriteConfig */  ? 8 /* AlternativeOverwriteConfig */  : 0));
                break;
            }
        });
        this._alertCompletionItem(item);
        // clear only now - after all tasks are done
        Promise.all(tasks).finally(()=>{
            this._reportSuggestionAcceptedTelemetry(model, event);
            this.model.clear();
            cts.dispose();
        });
    }
    _reportSuggestionAcceptedTelemetry(model, acceptedSuggestion) {
        var _a;
        if ((this._telemetryGate++) % 100 !== 0) return;
        // _debugDisplayName looks like `vscode.css-language-features(/-:)`, where the last bit is the trigger chars
        // normalize it to just the extension ID and lowercase
        const providerId = ((_a = acceptedSuggestion.item.provider._debugDisplayName) !== null && _a !== void 0 ? _a : 'unknown').split('(', 1)[0].toLowerCase();
        this._telemetryService.publicLog2('suggest.acceptedSuggestion', {
            providerId: providerId,
            basenameHash: $n7820.hash($5Aea5.basename(model.uri)).toString(16),
            languageId: model.getLanguageId(),
            fileExtension: $5Aea5.extname(model.uri)
        });
    }
    getOverwriteInfo(item, toggleMode) {
        $bxBg7.assertType(this.editor.hasModel());
        let replace = this.editor.getOption(105 /* suggest */ ).insertMode === 'replace';
        if (toggleMode) replace = !replace;
        const overwriteBefore = item.position.column - item.editStart.column;
        const overwriteAfter = (replace ? item.editReplaceEnd.column : item.editInsertEnd.column) - item.position.column;
        const columnDelta = this.editor.getPosition().column - item.position.column;
        const suffixDelta = this._lineSuffix.value ? this._lineSuffix.value.delta(this.editor.getPosition()) : 0;
        return {
            overwriteBefore: overwriteBefore + columnDelta,
            overwriteAfter: overwriteAfter + suffixDelta
        };
    }
    _alertCompletionItem(item) {
        if ($kJ8UG.isNonEmptyArray(item.completion.additionalTextEdits)) {
            let msg = $4dEdH.localize('aria.alert.snippet', "Accepting '{0}' made {1} additional edits", item.textLabel, item.completion.additionalTextEdits.length);
            $aIbUW.alert(msg);
        }
    }
    triggerSuggest(onlyFrom, auto) {
        if (this.editor.hasModel()) {
            this.model.trigger({
                auto: auto !== null && auto !== void 0 ? auto : false,
                shy: false
            }, false, onlyFrom);
            this.editor.revealPosition(this.editor.getPosition(), 0 /* Smooth */ );
            this.editor.focus();
        }
    }
    triggerSuggestAndAcceptBest(arg) {
        if (!this.editor.hasModel()) return;
        const positionNow = this.editor.getPosition();
        const fallback = ()=>{
            if (positionNow.equals(this.editor.getPosition())) this._commandService.executeCommand(arg.fallback);
        };
        const makesTextEdit = (item)=>{
            if (item.completion.insertTextRules & 4 /* InsertAsSnippet */  || item.completion.additionalTextEdits) // snippet, other editor -> makes edit
            return true;
            const position = this.editor.getPosition();
            const startColumn = item.editStart.column;
            const endColumn = position.column;
            if (endColumn - startColumn !== item.completion.insertText.length) // unequal lengths -> makes edit
            return true;
            const textNow = this.editor.getModel().getValueInRange({
                startLineNumber: position.lineNumber,
                startColumn: startColumn,
                endLineNumber: position.lineNumber,
                endColumn: endColumn
            });
            // unequal text -> makes edit
            return textNow !== item.completion.insertText;
        };
        $5YaSO.Event.once(this.model.onDidTrigger)((_)=>{
            // wait for trigger because only then the cancel-event is trustworthy
            let listener = [];
            $5YaSO.Event.any(this.model.onDidTrigger, this.model.onDidCancel)(()=>{
                // retrigger or cancel -> try to type default text
                $9cWcn.dispose(listener);
                fallback();
            }, undefined, listener);
            this.model.onDidSuggest(({ completionModel: completionModel  })=>{
                $9cWcn.dispose(listener);
                if (completionModel.items.length === 0) {
                    fallback();
                    return;
                }
                const index = this._memoryService.select(this.editor.getModel(), this.editor.getPosition(), completionModel.items);
                const item = completionModel.items[index];
                if (!makesTextEdit(item)) {
                    fallback();
                    return;
                }
                this.editor.pushUndoStop();
                this._insertSuggestion({
                    index: index,
                    item: item,
                    model: completionModel
                }, 7 /* NoAfterUndoStop */ );
            }, undefined, listener);
        });
        this.model.trigger({
            auto: false,
            shy: true
        });
        this.editor.revealPosition(positionNow, 0 /* Smooth */ );
        this.editor.focus();
    }
    acceptSelectedSuggestion(keepAlternativeSuggestions, alternativeOverwriteConfig) {
        const item = this.widget.value.getFocusedItem();
        let flags = 0;
        if (keepAlternativeSuggestions) flags |= 4 /* KeepAlternativeSuggestions */ ;
        if (alternativeOverwriteConfig) flags |= 8 /* AlternativeOverwriteConfig */ ;
        this._insertSuggestion(item, flags);
    }
    acceptNextSuggestion() {
        this._alternatives.value.next();
    }
    acceptPrevSuggestion() {
        this._alternatives.value.prev();
    }
    cancelSuggestWidget() {
        this.model.cancel();
        this.model.clear();
        this.widget.value.hideWidget();
    }
    selectNextSuggestion() {
        this.widget.value.selectNext();
    }
    selectNextPageSuggestion() {
        this.widget.value.selectNextPage();
    }
    selectLastSuggestion() {
        this.widget.value.selectLast();
    }
    selectPrevSuggestion() {
        this.widget.value.selectPrevious();
    }
    selectPrevPageSuggestion() {
        this.widget.value.selectPreviousPage();
    }
    selectFirstSuggestion() {
        this.widget.value.selectFirst();
    }
    toggleSuggestionDetails() {
        this.widget.value.toggleDetails();
    }
    toggleExplainMode() {
        this.widget.value.toggleExplainMode();
    }
    toggleSuggestionFocus() {
        this.widget.value.toggleDetailsFocus();
    }
    resetWidgetSize() {
        this.widget.value.resetPersistedSize();
    }
    forceRenderingAbove() {
        this.widget.value.forceRenderingAbove();
    }
    stopForceRenderingAbove() {
        if (!this.widget.isInitialized) // This method has no effect if the widget is not initialized yet.
        return;
        this.widget.value.stopForceRenderingAbove();
    }
    registerSelector(selector) {
        return this._selectors.register(selector);
    }
};
$116f6f5b5e48a18e$export$54e1189006f2eb3a.ID = 'editor.contrib.suggestController';
$116f6f5b5e48a18e$export$54e1189006f2eb3a = $116f6f5b5e48a18e$var$__decorate([
    $116f6f5b5e48a18e$var$__param(1, $a16af02f54d4b37b$exports.ISuggestMemoryService),
    $116f6f5b5e48a18e$var$__param(2, $8tcMz.ICommandService),
    $116f6f5b5e48a18e$var$__param(3, $cxCeF.IContextKeyService),
    $116f6f5b5e48a18e$var$__param(4, $fdGPu.IInstantiationService),
    $116f6f5b5e48a18e$var$__param(5, $dvEeB.ILogService),
    $116f6f5b5e48a18e$var$__param(6, $lMGba.ITelemetryService)
], $116f6f5b5e48a18e$export$54e1189006f2eb3a);
class $116f6f5b5e48a18e$var$PriorityRegistry {
    constructor(prioritySelector){
        this.prioritySelector = prioritySelector;
        this._items = new Array();
    }
    register(value) {
        if (this._items.indexOf(value) !== -1) throw new Error('Value is already registered');
        this._items.push(value);
        this._items.sort((s1, s2)=>this.prioritySelector(s2) - this.prioritySelector(s1)
        );
        return {
            dispose: ()=>{
                const idx = this._items.indexOf(value);
                if (idx >= 0) this._items.splice(idx, 1);
            }
        };
    }
    get itemsOrderedByPriorityDesc() {
        return this._items;
    }
}
class $116f6f5b5e48a18e$export$6adf569aad8e1b71 extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: $116f6f5b5e48a18e$export$6adf569aad8e1b71.id,
            label: $4dEdH.localize('suggest.trigger.label', "Trigger Suggest"),
            alias: 'Trigger Suggest',
            precondition: $cxCeF.ContextKeyExpr.and($ibKGQ.EditorContextKeys.writable, $ibKGQ.EditorContextKeys.hasCompletionItemProvider),
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.textInputFocus,
                primary: 2058 /* Space */ ,
                secondary: [
                    2087 /* KeyI */ 
                ],
                mac: {
                    primary: 266 /* Space */ ,
                    secondary: [
                        521 /* Escape */ ,
                        2087 /* KeyI */ 
                    ]
                },
                weight: 100 /* EditorContrib */ 
            }
        });
    }
    run(_accessor, editor, args) {
        const controller = $116f6f5b5e48a18e$export$54e1189006f2eb3a.get(editor);
        if (!controller) return;
        let auto;
        if (args && typeof args === 'object') {
            if (args.auto === true) auto = true;
        }
        controller.triggerSuggest(undefined, auto);
    }
}
$116f6f5b5e48a18e$export$6adf569aad8e1b71.id = 'editor.action.triggerSuggest';
$2iJTi.registerEditorContribution($116f6f5b5e48a18e$export$54e1189006f2eb3a.ID, $116f6f5b5e48a18e$export$54e1189006f2eb3a);
$2iJTi.registerEditorAction($116f6f5b5e48a18e$export$6adf569aad8e1b71);
const $116f6f5b5e48a18e$var$weight = 190;
const $116f6f5b5e48a18e$var$SuggestCommand = $2iJTi.EditorCommand.bindToContribution($116f6f5b5e48a18e$export$54e1189006f2eb3a.get);
$2iJTi.registerEditorCommand(new $116f6f5b5e48a18e$var$SuggestCommand({
    id: 'acceptSelectedSuggestion',
    precondition: $63d2440bdac663c3$exports.Context.Visible,
    handler (x) {
        x.acceptSelectedSuggestion(true, false);
    }
}));
// normal tab
$6AWYG.KeybindingsRegistry.registerKeybindingRule({
    id: 'acceptSelectedSuggestion',
    when: $cxCeF.ContextKeyExpr.and($63d2440bdac663c3$exports.Context.Visible, $ibKGQ.EditorContextKeys.textInputFocus),
    primary: 2 /* Tab */ ,
    weight: $116f6f5b5e48a18e$var$weight
});
// accept on enter has special rules
$6AWYG.KeybindingsRegistry.registerKeybindingRule({
    id: 'acceptSelectedSuggestion',
    when: $cxCeF.ContextKeyExpr.and($63d2440bdac663c3$exports.Context.Visible, $ibKGQ.EditorContextKeys.textInputFocus, $63d2440bdac663c3$exports.Context.AcceptSuggestionsOnEnter, $63d2440bdac663c3$exports.Context.MakesTextEdit),
    primary: 3 /* Enter */ ,
    weight: $116f6f5b5e48a18e$var$weight
});
$g4v7E.MenuRegistry.appendMenuItem($63d2440bdac663c3$exports.suggestWidgetStatusbarMenu, {
    command: {
        id: 'acceptSelectedSuggestion',
        title: $4dEdH.localize('accept.insert', "Insert")
    },
    group: 'left',
    order: 1,
    when: $63d2440bdac663c3$exports.Context.HasInsertAndReplaceRange.toNegated()
});
$g4v7E.MenuRegistry.appendMenuItem($63d2440bdac663c3$exports.suggestWidgetStatusbarMenu, {
    command: {
        id: 'acceptSelectedSuggestion',
        title: $4dEdH.localize('accept.insert', "Insert")
    },
    group: 'left',
    order: 1,
    when: $cxCeF.ContextKeyExpr.and($63d2440bdac663c3$exports.Context.HasInsertAndReplaceRange, $63d2440bdac663c3$exports.Context.InsertMode.isEqualTo('insert'))
});
$g4v7E.MenuRegistry.appendMenuItem($63d2440bdac663c3$exports.suggestWidgetStatusbarMenu, {
    command: {
        id: 'acceptSelectedSuggestion',
        title: $4dEdH.localize('accept.replace', "Replace")
    },
    group: 'left',
    order: 1,
    when: $cxCeF.ContextKeyExpr.and($63d2440bdac663c3$exports.Context.HasInsertAndReplaceRange, $63d2440bdac663c3$exports.Context.InsertMode.isEqualTo('replace'))
});
$2iJTi.registerEditorCommand(new $116f6f5b5e48a18e$var$SuggestCommand({
    id: 'acceptAlternativeSelectedSuggestion',
    precondition: $cxCeF.ContextKeyExpr.and($63d2440bdac663c3$exports.Context.Visible, $ibKGQ.EditorContextKeys.textInputFocus),
    kbOpts: {
        weight: $116f6f5b5e48a18e$var$weight,
        kbExpr: $ibKGQ.EditorContextKeys.textInputFocus,
        primary: 1027 /* Enter */ ,
        secondary: [
            1026 /* Tab */ 
        ]
    },
    handler (x) {
        x.acceptSelectedSuggestion(false, true);
    },
    menuOpts: [
        {
            menuId: $63d2440bdac663c3$exports.suggestWidgetStatusbarMenu,
            group: 'left',
            order: 2,
            when: $cxCeF.ContextKeyExpr.and($63d2440bdac663c3$exports.Context.HasInsertAndReplaceRange, $63d2440bdac663c3$exports.Context.InsertMode.isEqualTo('insert')),
            title: $4dEdH.localize('accept.replace', "Replace")
        },
        {
            menuId: $63d2440bdac663c3$exports.suggestWidgetStatusbarMenu,
            group: 'left',
            order: 2,
            when: $cxCeF.ContextKeyExpr.and($63d2440bdac663c3$exports.Context.HasInsertAndReplaceRange, $63d2440bdac663c3$exports.Context.InsertMode.isEqualTo('replace')),
            title: $4dEdH.localize('accept.insert', "Insert")
        }
    ]
}));
// continue to support the old command
$8tcMz.CommandsRegistry.registerCommandAlias('acceptSelectedSuggestionOnEnter', 'acceptSelectedSuggestion');
$2iJTi.registerEditorCommand(new $116f6f5b5e48a18e$var$SuggestCommand({
    id: 'hideSuggestWidget',
    precondition: $63d2440bdac663c3$exports.Context.Visible,
    handler: (x)=>x.cancelSuggestWidget()
    ,
    kbOpts: {
        weight: $116f6f5b5e48a18e$var$weight,
        kbExpr: $ibKGQ.EditorContextKeys.textInputFocus,
        primary: 9 /* Escape */ ,
        secondary: [
            1033 /* Escape */ 
        ]
    }
}));
$2iJTi.registerEditorCommand(new $116f6f5b5e48a18e$var$SuggestCommand({
    id: 'selectNextSuggestion',
    precondition: $cxCeF.ContextKeyExpr.and($63d2440bdac663c3$exports.Context.Visible, $63d2440bdac663c3$exports.Context.MultipleSuggestions),
    handler: (c)=>c.selectNextSuggestion()
    ,
    kbOpts: {
        weight: $116f6f5b5e48a18e$var$weight,
        kbExpr: $ibKGQ.EditorContextKeys.textInputFocus,
        primary: 18 /* DownArrow */ ,
        secondary: [
            2066 /* DownArrow */ 
        ],
        mac: {
            primary: 18 /* DownArrow */ ,
            secondary: [
                2066 /* DownArrow */ ,
                300 /* KeyN */ 
            ]
        }
    }
}));
$2iJTi.registerEditorCommand(new $116f6f5b5e48a18e$var$SuggestCommand({
    id: 'selectNextPageSuggestion',
    precondition: $cxCeF.ContextKeyExpr.and($63d2440bdac663c3$exports.Context.Visible, $63d2440bdac663c3$exports.Context.MultipleSuggestions),
    handler: (c)=>c.selectNextPageSuggestion()
    ,
    kbOpts: {
        weight: $116f6f5b5e48a18e$var$weight,
        kbExpr: $ibKGQ.EditorContextKeys.textInputFocus,
        primary: 12 /* PageDown */ ,
        secondary: [
            2060 /* PageDown */ 
        ]
    }
}));
$2iJTi.registerEditorCommand(new $116f6f5b5e48a18e$var$SuggestCommand({
    id: 'selectLastSuggestion',
    precondition: $cxCeF.ContextKeyExpr.and($63d2440bdac663c3$exports.Context.Visible, $63d2440bdac663c3$exports.Context.MultipleSuggestions),
    handler: (c)=>c.selectLastSuggestion()
}));
$2iJTi.registerEditorCommand(new $116f6f5b5e48a18e$var$SuggestCommand({
    id: 'selectPrevSuggestion',
    precondition: $cxCeF.ContextKeyExpr.and($63d2440bdac663c3$exports.Context.Visible, $63d2440bdac663c3$exports.Context.MultipleSuggestions),
    handler: (c)=>c.selectPrevSuggestion()
    ,
    kbOpts: {
        weight: $116f6f5b5e48a18e$var$weight,
        kbExpr: $ibKGQ.EditorContextKeys.textInputFocus,
        primary: 16 /* UpArrow */ ,
        secondary: [
            2064 /* UpArrow */ 
        ],
        mac: {
            primary: 16 /* UpArrow */ ,
            secondary: [
                2064 /* UpArrow */ ,
                302 /* KeyP */ 
            ]
        }
    }
}));
$2iJTi.registerEditorCommand(new $116f6f5b5e48a18e$var$SuggestCommand({
    id: 'selectPrevPageSuggestion',
    precondition: $cxCeF.ContextKeyExpr.and($63d2440bdac663c3$exports.Context.Visible, $63d2440bdac663c3$exports.Context.MultipleSuggestions),
    handler: (c)=>c.selectPrevPageSuggestion()
    ,
    kbOpts: {
        weight: $116f6f5b5e48a18e$var$weight,
        kbExpr: $ibKGQ.EditorContextKeys.textInputFocus,
        primary: 11 /* PageUp */ ,
        secondary: [
            2059 /* PageUp */ 
        ]
    }
}));
$2iJTi.registerEditorCommand(new $116f6f5b5e48a18e$var$SuggestCommand({
    id: 'selectFirstSuggestion',
    precondition: $cxCeF.ContextKeyExpr.and($63d2440bdac663c3$exports.Context.Visible, $63d2440bdac663c3$exports.Context.MultipleSuggestions),
    handler: (c)=>c.selectFirstSuggestion()
}));
$2iJTi.registerEditorCommand(new $116f6f5b5e48a18e$var$SuggestCommand({
    id: 'toggleSuggestionDetails',
    precondition: $63d2440bdac663c3$exports.Context.Visible,
    handler: (x)=>x.toggleSuggestionDetails()
    ,
    kbOpts: {
        weight: $116f6f5b5e48a18e$var$weight,
        kbExpr: $ibKGQ.EditorContextKeys.textInputFocus,
        primary: 2058 /* Space */ ,
        secondary: [
            2087 /* KeyI */ 
        ],
        mac: {
            primary: 266 /* Space */ ,
            secondary: [
                2087 /* KeyI */ 
            ]
        }
    },
    menuOpts: [
        {
            menuId: $63d2440bdac663c3$exports.suggestWidgetStatusbarMenu,
            group: 'right',
            order: 1,
            when: $cxCeF.ContextKeyExpr.and($63d2440bdac663c3$exports.Context.DetailsVisible, $63d2440bdac663c3$exports.Context.CanResolve),
            title: $4dEdH.localize('detail.more', "show less")
        },
        {
            menuId: $63d2440bdac663c3$exports.suggestWidgetStatusbarMenu,
            group: 'right',
            order: 1,
            when: $cxCeF.ContextKeyExpr.and($63d2440bdac663c3$exports.Context.DetailsVisible.toNegated(), $63d2440bdac663c3$exports.Context.CanResolve),
            title: $4dEdH.localize('detail.less', "show more")
        }
    ]
}));
$2iJTi.registerEditorCommand(new $116f6f5b5e48a18e$var$SuggestCommand({
    id: 'toggleExplainMode',
    precondition: $63d2440bdac663c3$exports.Context.Visible,
    handler: (x)=>x.toggleExplainMode()
    ,
    kbOpts: {
        weight: 100 /* EditorContrib */ ,
        primary: 2133 /* Slash */ 
    }
}));
$2iJTi.registerEditorCommand(new $116f6f5b5e48a18e$var$SuggestCommand({
    id: 'toggleSuggestionFocus',
    precondition: $63d2440bdac663c3$exports.Context.Visible,
    handler: (x)=>x.toggleSuggestionFocus()
    ,
    kbOpts: {
        weight: $116f6f5b5e48a18e$var$weight,
        kbExpr: $ibKGQ.EditorContextKeys.textInputFocus,
        primary: 2570 /* Space */ ,
        mac: {
            primary: 778 /* Space */ 
        }
    }
}));
//#region tab completions
$2iJTi.registerEditorCommand(new $116f6f5b5e48a18e$var$SuggestCommand({
    id: 'insertBestCompletion',
    precondition: $cxCeF.ContextKeyExpr.and($ibKGQ.EditorContextKeys.textInputFocus, $cxCeF.ContextKeyExpr.equals('config.editor.tabCompletion', 'on'), $e266c08347cc7ab6$exports.WordContextKey.AtEnd, $63d2440bdac663c3$exports.Context.Visible.toNegated(), $06d28af192ee2bcf$exports.SuggestAlternatives.OtherSuggestions.toNegated(), $766cb4d8639df7d1$exports.SnippetController2.InSnippetMode.toNegated()),
    handler: (x, arg)=>{
        x.triggerSuggestAndAcceptBest($bxBg7.isObject(arg) ? Object.assign({
            fallback: 'tab'
        }, arg) : {
            fallback: 'tab'
        });
    },
    kbOpts: {
        weight: $116f6f5b5e48a18e$var$weight,
        primary: 2 /* Tab */ 
    }
}));
$2iJTi.registerEditorCommand(new $116f6f5b5e48a18e$var$SuggestCommand({
    id: 'insertNextSuggestion',
    precondition: $cxCeF.ContextKeyExpr.and($ibKGQ.EditorContextKeys.textInputFocus, $cxCeF.ContextKeyExpr.equals('config.editor.tabCompletion', 'on'), $06d28af192ee2bcf$exports.SuggestAlternatives.OtherSuggestions, $63d2440bdac663c3$exports.Context.Visible.toNegated(), $766cb4d8639df7d1$exports.SnippetController2.InSnippetMode.toNegated()),
    handler: (x)=>x.acceptNextSuggestion()
    ,
    kbOpts: {
        weight: $116f6f5b5e48a18e$var$weight,
        kbExpr: $ibKGQ.EditorContextKeys.textInputFocus,
        primary: 2 /* Tab */ 
    }
}));
$2iJTi.registerEditorCommand(new $116f6f5b5e48a18e$var$SuggestCommand({
    id: 'insertPrevSuggestion',
    precondition: $cxCeF.ContextKeyExpr.and($ibKGQ.EditorContextKeys.textInputFocus, $cxCeF.ContextKeyExpr.equals('config.editor.tabCompletion', 'on'), $06d28af192ee2bcf$exports.SuggestAlternatives.OtherSuggestions, $63d2440bdac663c3$exports.Context.Visible.toNegated(), $766cb4d8639df7d1$exports.SnippetController2.InSnippetMode.toNegated()),
    handler: (x)=>x.acceptPrevSuggestion()
    ,
    kbOpts: {
        weight: $116f6f5b5e48a18e$var$weight,
        kbExpr: $ibKGQ.EditorContextKeys.textInputFocus,
        primary: 1026 /* Tab */ 
    }
}));
$2iJTi.registerEditorAction(class extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: 'editor.action.resetSuggestSize',
            label: $4dEdH.localize('suggest.reset.label', "Reset Suggest Widget Size"),
            alias: 'Reset Suggest Widget Size',
            precondition: undefined
        });
    }
    run(_accessor, editor) {
        $116f6f5b5e48a18e$export$54e1189006f2eb3a.get(editor).resetWidgetSize();
    }
});




function $c6092db34502e3d5$export$76e3015fedec517f(object, disposable) {
    return {
        object: object,
        dispose: ()=>disposable === null || disposable === void 0 ? void 0 : disposable.dispose()
    };
}
function $c6092db34502e3d5$export$53e1d82c551f6242(selector, comparator) {
    return (a, b)=>comparator(selector(a), selector(b))
    ;
}
function $c6092db34502e3d5$export$bc15bf6a97104dc9() {
    return (a, b)=>a - b
    ;
}
function $c6092db34502e3d5$export$7670cf76b4aa9e08(items, comparator) {
    let min = undefined;
    for (const item of items)if (min === undefined || comparator(item, min) > 0) min = item;
    return min;
}


class $5cb46f2d82dfeedd$export$25701ac5464bebfb extends $9cWcn.Disposable {
    constructor(editor, suggestControllerPreselector){
        super();
        this.editor = editor;
        this.suggestControllerPreselector = suggestControllerPreselector;
        this.isSuggestWidgetVisible = false;
        this.isShiftKeyPressed = false;
        this._isActive = false;
        this._currentSuggestItemInfo = undefined;
        this.onDidChangeEmitter = new $5YaSO.Emitter();
        this.onDidChange = this.onDidChangeEmitter.event;
        // This delay fixes a suggest widget issue when typing "." immediately restarts the suggestion session.
        this.setInactiveDelayed = this._register(new $6bXyA.RunOnceScheduler(()=>{
            if (!this.isSuggestWidgetVisible) {
                if (this._isActive) {
                    this._isActive = false;
                    this.onDidChangeEmitter.fire();
                }
            }
        }, 100));
        // See the command acceptAlternativeSelectedSuggestion that is bound to shift+tab
        this._register(editor.onKeyDown((e)=>{
            if (e.shiftKey && !this.isShiftKeyPressed) {
                this.isShiftKeyPressed = true;
                this.update(this._isActive);
            }
        }));
        this._register(editor.onKeyUp((e)=>{
            if (e.shiftKey && this.isShiftKeyPressed) {
                this.isShiftKeyPressed = false;
                this.update(this._isActive);
            }
        }));
        const suggestController = $116f6f5b5e48a18e$exports.SuggestController.get(this.editor);
        if (suggestController) {
            this._register(suggestController.registerSelector({
                priority: 100,
                select: (model, pos, suggestItems)=>{
                    const textModel = this.editor.getModel();
                    const normalizedItemToPreselect = $5e15e07d10d57848$exports.minimizeInlineCompletion(textModel, this.suggestControllerPreselector());
                    if (!normalizedItemToPreselect) return -1;
                    const position = $dcxQ7.Position.lift(pos);
                    const candidates = suggestItems.map((suggestItem, index)=>{
                        const inlineSuggestItem = $5cb46f2d82dfeedd$var$suggestionToSuggestItemInfo(suggestController, position, suggestItem, this.isShiftKeyPressed);
                        const normalizedSuggestItem = $5e15e07d10d57848$exports.minimizeInlineCompletion(textModel, inlineSuggestItem === null || inlineSuggestItem === void 0 ? void 0 : inlineSuggestItem.normalizedInlineCompletion);
                        if (!normalizedSuggestItem) return undefined;
                        const valid = $5cb46f2d82dfeedd$export$4f3d24302fd497b(normalizedItemToPreselect.range, normalizedSuggestItem.range) && normalizedItemToPreselect.text.startsWith(normalizedSuggestItem.text);
                        return {
                            index: index,
                            valid: valid,
                            prefixLength: normalizedSuggestItem.text.length,
                            suggestItem: suggestItem
                        };
                    }).filter((item)=>item && item.valid
                    );
                    const result = $c6092db34502e3d5$export$7670cf76b4aa9e08(candidates, $c6092db34502e3d5$export$53e1d82c551f6242((s)=>s.prefixLength
                    , $c6092db34502e3d5$export$bc15bf6a97104dc9()));
                    return result ? result.index : -1;
                }
            }));
            let isBoundToSuggestWidget = false;
            const bindToSuggestWidget = ()=>{
                if (isBoundToSuggestWidget) return;
                isBoundToSuggestWidget = true;
                this._register(suggestController.widget.value.onDidShow(()=>{
                    this.isSuggestWidgetVisible = true;
                    this.update(true);
                }));
                this._register(suggestController.widget.value.onDidHide(()=>{
                    this.isSuggestWidgetVisible = false;
                    this.setInactiveDelayed.schedule();
                    this.update(this._isActive);
                }));
                this._register(suggestController.widget.value.onDidFocus(()=>{
                    this.isSuggestWidgetVisible = true;
                    this.update(true);
                }));
            };
            this._register($5YaSO.Event.once(suggestController.model.onDidTrigger)((e)=>{
                bindToSuggestWidget();
            }));
        }
        this.update(this._isActive);
    }
    /**
     * Returns undefined if the suggest widget is not active.
    */ get state() {
        if (!this._isActive) return undefined;
        return {
            selectedItem: this._currentSuggestItemInfo
        };
    }
    update(newActive) {
        const newInlineCompletion = this.getSuggestItemInfo();
        let shouldFire = false;
        if (!$5cb46f2d82dfeedd$var$suggestItemInfoEquals(this._currentSuggestItemInfo, newInlineCompletion)) {
            this._currentSuggestItemInfo = newInlineCompletion;
            shouldFire = true;
        }
        if (this._isActive !== newActive) {
            this._isActive = newActive;
            shouldFire = true;
        }
        if (shouldFire) this.onDidChangeEmitter.fire();
    }
    getSuggestItemInfo() {
        const suggestController = $116f6f5b5e48a18e$exports.SuggestController.get(this.editor);
        if (!suggestController) return undefined;
        if (!this.isSuggestWidgetVisible) return undefined;
        const focusedItem = suggestController.widget.value.getFocusedItem();
        if (!focusedItem) return undefined;
        // TODO: item.isResolved
        return $5cb46f2d82dfeedd$var$suggestionToSuggestItemInfo(suggestController, this.editor.getPosition(), focusedItem.item, this.isShiftKeyPressed);
    }
    stopForceRenderingAbove() {
        const suggestController = $116f6f5b5e48a18e$exports.SuggestController.get(this.editor);
        if (suggestController) suggestController.stopForceRenderingAbove();
    }
    forceRenderingAbove() {
        const suggestController = $116f6f5b5e48a18e$exports.SuggestController.get(this.editor);
        if (suggestController) suggestController.forceRenderingAbove();
    }
}
function $5cb46f2d82dfeedd$export$4f3d24302fd497b(rangeToTest, prefix) {
    return prefix.startLineNumber === rangeToTest.startLineNumber && prefix.startColumn === rangeToTest.startColumn && (prefix.endLineNumber < rangeToTest.endLineNumber || prefix.endLineNumber === rangeToTest.endLineNumber && prefix.endColumn <= rangeToTest.endColumn);
}
function $5cb46f2d82dfeedd$var$suggestItemInfoEquals(a, b) {
    if (a === b) return true;
    if (!a || !b) return false;
    return a.completionItemKind === b.completionItemKind && a.isSnippetText === b.isSnippetText && $0610dfc0502ff4de$export$11e165236064256b(a.normalizedInlineCompletion, b.normalizedInlineCompletion);
}
function $5cb46f2d82dfeedd$var$suggestionToSuggestItemInfo(suggestController, position, item, toggleMode) {
    // additionalTextEdits might not be resolved here, this could be problematic.
    if (Array.isArray(item.completion.additionalTextEdits) && item.completion.additionalTextEdits.length > 0) // cannot represent additional text edits
    return {
        completionItemKind: item.completion.kind,
        isSnippetText: false,
        normalizedInlineCompletion: {
            // Dummy element, so that space is reserved, but no text is shown
            range: $d00il.Range.fromPositions(position, position),
            text: ''
        }
    };
    let { insertText: insertText  } = item.completion;
    let isSnippetText = false;
    if (item.completion.insertTextRules & 4 /* InsertAsSnippet */ ) {
        const snippet = new $ec67e86c75f97474$export$e073bfe8583e8fbf().parse(insertText);
        const model = suggestController.editor.getModel();
        // Ignore snippets that are too large.
        // Adjust whitespace is expensive for them.
        if (snippet.children.length > 100) return undefined;
        $3531e4d34dfec17c$export$d334bb6e0f563f7.adjustWhitespace(model, position, snippet, true, true);
        insertText = snippet.toString();
        isSnippetText = true;
    }
    const info = suggestController.getOverwriteInfo(item, toggleMode);
    return {
        isSnippetText: isSnippetText,
        completionItemKind: item.completion.kind,
        normalizedInlineCompletion: {
            text: insertText,
            range: $d00il.Range.fromPositions(position.delta(0, -info.overwriteBefore), position.delta(0, Math.max(info.overwriteAfter, 0)))
        }
    };
}


/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $ef606840b16c3ad1$var$__awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
class $ef606840b16c3ad1$export$ebdca630db4b64a2 extends $1bc1d87513e0927e$export$e69a41b67268cb2a {
    constructor(editor, cache){
        super(editor);
        this.cache = cache;
        this.suggestionInlineCompletionSource = this._register(new $5cb46f2d82dfeedd$export$25701ac5464bebfb(this.editor, // Use the first cache item (if any) as preselection.
        ()=>{
            var _a, _b;
            return (_b = (_a = this.cache.value) === null || _a === void 0 ? void 0 : _a.completions[0]) === null || _b === void 0 ? void 0 : _b.toLiveInlineCompletion();
        }));
        this.updateOperation = this._register(new $9cWcn.MutableDisposable());
        this.updateCacheSoon = this._register(new $6bXyA.RunOnceScheduler(()=>this.updateCache()
        , 50));
        this.minReservedLineCount = 0;
        this._register(this.suggestionInlineCompletionSource.onDidChange(()=>{
            this.updateCacheSoon.schedule();
            const suggestWidgetState = this.suggestionInlineCompletionSource.state;
            if (!suggestWidgetState) this.minReservedLineCount = 0;
            const newGhostText = this.ghostText;
            if (newGhostText) this.minReservedLineCount = Math.max(this.minReservedLineCount, $ef606840b16c3ad1$var$sum(newGhostText.parts.map((p)=>p.lines.length - 1
            )));
            if (this.minReservedLineCount >= 1) this.suggestionInlineCompletionSource.forceRenderingAbove();
            else this.suggestionInlineCompletionSource.stopForceRenderingAbove();
            this.onDidChangeEmitter.fire();
        }));
        this._register(this.cache.onDidChange(()=>{
            this.onDidChangeEmitter.fire();
        }));
        this._register(this.editor.onDidChangeCursorPosition((e)=>{
            this.minReservedLineCount = 0;
            this.updateCacheSoon.schedule();
            this.onDidChangeEmitter.fire();
        }));
        this._register($9cWcn.toDisposable(()=>this.suggestionInlineCompletionSource.stopForceRenderingAbove()
        ));
    }
    get isActive() {
        return this.suggestionInlineCompletionSource.state !== undefined;
    }
    isSuggestionPreviewEnabled() {
        const suggestOptions = this.editor.getOption(105 /* suggest */ );
        return suggestOptions.preview;
    }
    updateCache() {
        return $ef606840b16c3ad1$var$__awaiter(this, void 0, void 0, function*() {
            const state = this.suggestionInlineCompletionSource.state;
            if (!state || !state.selectedItem) return;
            const info = {
                text: state.selectedItem.normalizedInlineCompletion.text,
                range: state.selectedItem.normalizedInlineCompletion.range,
                isSnippetText: state.selectedItem.isSnippetText,
                completionKind: state.selectedItem.completionItemKind
            };
            const position = this.editor.getPosition();
            const promise = $6bXyA.createCancelablePromise((token)=>$ef606840b16c3ad1$var$__awaiter(this, void 0, void 0, function*() {
                    let result;
                    try {
                        result = yield $5e15e07d10d57848$exports.provideInlineCompletions(position, this.editor.getModel(), {
                            triggerKind: $4PmRQ.InlineCompletionTriggerKind.Automatic,
                            selectedSuggestionInfo: info
                        }, token);
                    } catch (e) {
                        $gPkHZ.onUnexpectedError(e);
                        return;
                    }
                    if (token.isCancellationRequested) return;
                    this.cache.setValue(this.editor, result, $4PmRQ.InlineCompletionTriggerKind.Automatic);
                    this.onDidChangeEmitter.fire();
                })
            );
            const operation = new $5e15e07d10d57848$exports.UpdateOperation(promise, $4PmRQ.InlineCompletionTriggerKind.Automatic);
            this.updateOperation.value = operation;
            yield promise;
            if (this.updateOperation.value === operation) this.updateOperation.clear();
        });
    }
    get ghostText() {
        var _a, _b, _c;
        const isSuggestionPreviewEnabled = this.isSuggestionPreviewEnabled();
        const augmentedCompletion = $5e15e07d10d57848$exports.minimizeInlineCompletion(this.editor.getModel(), (_b = (_a = this.cache.value) === null || _a === void 0 ? void 0 : _a.completions[0]) === null || _b === void 0 ? void 0 : _b.toLiveInlineCompletion());
        const suggestWidgetState = this.suggestionInlineCompletionSource.state;
        const suggestInlineCompletion = $5e15e07d10d57848$exports.minimizeInlineCompletion(this.editor.getModel(), (_c = suggestWidgetState === null || suggestWidgetState === void 0 ? void 0 : suggestWidgetState.selectedItem) === null || _c === void 0 ? void 0 : _c.normalizedInlineCompletion);
        const isAugmentedCompletionValid = augmentedCompletion && suggestInlineCompletion && augmentedCompletion.text.startsWith(suggestInlineCompletion.text) && augmentedCompletion.range.equalsRange(suggestInlineCompletion.range);
        if (!isSuggestionPreviewEnabled && !isAugmentedCompletionValid) return undefined;
        // If the augmented completion is not valid and there is no suggest inline completion, we still show the augmented completion.
        const finalCompletion = isAugmentedCompletionValid ? augmentedCompletion : suggestInlineCompletion || augmentedCompletion;
        const inlineCompletionPreviewLength = isAugmentedCompletionValid ? finalCompletion.text.length - suggestInlineCompletion.text.length : 0;
        const newGhostText = this.toGhostText(finalCompletion, inlineCompletionPreviewLength);
        return newGhostText;
    }
    toGhostText(completion, inlineCompletionPreviewLength) {
        const mode = this.editor.getOptions().get(105 /* suggest */ ).previewMode;
        return completion ? $0610dfc0502ff4de$export$31cc5495dc7f07c1(completion, this.editor.getModel(), mode, this.editor.getPosition(), inlineCompletionPreviewLength) || // Show an invisible ghost text to reserve space
        new $1bc1d87513e0927e$export$9415a6e27591b584(completion.range.endLineNumber, [], this.minReservedLineCount) : undefined;
    }
}
function $ef606840b16c3ad1$var$sum(arr) {
    return arr.reduce((a, b)=>a + b
    , 0);
}




var $8tcMz = parcelRequire("8tcMz");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $875a3147a301ee65$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var $875a3147a301ee65$var$__param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
};
var $875a3147a301ee65$var$__awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
class $875a3147a301ee65$export$e7955302052332d2 extends $9cWcn.Disposable {
    constructor(){
        super(...arguments);
        this.onDidChangeEmitter = new $5YaSO.Emitter();
        this.onDidChange = this.onDidChangeEmitter.event;
        this.hasCachedGhostText = false;
        this.currentModelRef = this._register(new $9cWcn.MutableDisposable());
    }
    get targetModel() {
        var _a;
        return (_a = this.currentModelRef.value) === null || _a === void 0 ? void 0 : _a.object;
    }
    setTargetModel(model) {
        var _a;
        if (((_a = this.currentModelRef.value) === null || _a === void 0 ? void 0 : _a.object) === model) return;
        this.currentModelRef.clear();
        this.currentModelRef.value = model ? $c6092db34502e3d5$export$76e3015fedec517f(model, model.onDidChange(()=>{
            this.hasCachedGhostText = false;
            this.onDidChangeEmitter.fire();
        })) : undefined;
        this.hasCachedGhostText = false;
        this.onDidChangeEmitter.fire();
    }
    get ghostText() {
        var _a, _b;
        if (!this.hasCachedGhostText) {
            this.cachedGhostText = (_b = (_a = this.currentModelRef.value) === null || _a === void 0 ? void 0 : _a.object) === null || _b === void 0 ? void 0 : _b.ghostText;
            this.hasCachedGhostText = true;
        }
        return this.cachedGhostText;
    }
    setExpanded(expanded) {
        var _a;
        (_a = this.targetModel) === null || _a === void 0 || _a.setExpanded(expanded);
    }
    get minReservedLineCount() {
        return this.targetModel ? this.targetModel.minReservedLineCount : 0;
    }
}
/**
 * A ghost text model that is both driven by inline completions and the suggest widget.
*/ let $875a3147a301ee65$export$c35e2fb758843dde = class $875a3147a301ee65$export$c35e2fb758843dde extends $875a3147a301ee65$export$e7955302052332d2 {
    constructor(editor, commandService){
        super();
        this.editor = editor;
        this.commandService = commandService;
        this.sharedCache = this._register(new $875a3147a301ee65$export$a0277e5cfbcb13a5());
        this.suggestWidgetAdapterModel = this._register(new $ef606840b16c3ad1$exports.SuggestWidgetPreviewModel(this.editor, this.sharedCache));
        this.inlineCompletionsModel = this._register(new $5e15e07d10d57848$exports.InlineCompletionsModel(this.editor, this.sharedCache, this.commandService));
        this._register(this.suggestWidgetAdapterModel.onDidChange(()=>{
            this.updateModel();
        }));
        this.updateModel();
    }
    get activeInlineCompletionsModel() {
        if (this.targetModel === this.inlineCompletionsModel) return this.inlineCompletionsModel;
        return undefined;
    }
    updateModel() {
        this.setTargetModel(this.suggestWidgetAdapterModel.isActive ? this.suggestWidgetAdapterModel : this.inlineCompletionsModel);
        this.inlineCompletionsModel.setActive(this.targetModel === this.inlineCompletionsModel);
    }
    shouldShowHoverAt(hoverRange) {
        var _a;
        const ghostText = (_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.ghostText;
        if (ghostText) return ghostText.parts.some((p)=>hoverRange.containsPosition(new $dcxQ7.Position(ghostText.lineNumber, p.column))
        );
        return false;
    }
    triggerInlineCompletion() {
        var _a;
        (_a = this.activeInlineCompletionsModel) === null || _a === void 0 || _a.trigger($4PmRQ.InlineCompletionTriggerKind.Explicit);
    }
    commitInlineCompletion() {
        var _a;
        (_a = this.activeInlineCompletionsModel) === null || _a === void 0 || _a.commitCurrentSuggestion();
    }
    hideInlineCompletion() {
        var _a;
        (_a = this.activeInlineCompletionsModel) === null || _a === void 0 || _a.hide();
    }
    showNextInlineCompletion() {
        var _a;
        (_a = this.activeInlineCompletionsModel) === null || _a === void 0 || _a.showNext();
    }
    showPreviousInlineCompletion() {
        var _a;
        (_a = this.activeInlineCompletionsModel) === null || _a === void 0 || _a.showPrevious();
    }
    hasMultipleInlineCompletions() {
        var _a;
        return $875a3147a301ee65$var$__awaiter(this, void 0, void 0, function*() {
            const result = yield (_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.hasMultipleInlineCompletions();
            return result !== undefined ? result : false;
        });
    }
};
$875a3147a301ee65$export$c35e2fb758843dde = $875a3147a301ee65$var$__decorate([
    $875a3147a301ee65$var$__param(1, $8tcMz.ICommandService)
], $875a3147a301ee65$export$c35e2fb758843dde);
class $875a3147a301ee65$export$a0277e5cfbcb13a5 extends $9cWcn.Disposable {
    constructor(){
        super(...arguments);
        this.onDidChangeEmitter = new $5YaSO.Emitter();
        this.onDidChange = this.onDidChangeEmitter.event;
        this.cache = this._register(new $9cWcn.MutableDisposable());
    }
    get value() {
        return this.cache.value;
    }
    setValue(editor, completionsSource, triggerKind) {
        this.cache.value = new $5e15e07d10d57848$exports.SynchronizedInlineCompletionsCache(editor, completionsSource, ()=>this.onDidChangeEmitter.fire()
        , triggerKind);
    }
    clearAndLeak() {
        return this.cache.clearAndLeak();
    }
    clear() {
        this.cache.clear();
    }
}


var $b6b495a1fd5cbb4c$exports = {};

$parcel$export($b6b495a1fd5cbb4c$exports, "GhostTextWidget", () => $b6b495a1fd5cbb4c$export$28b57199d8d32698, (v) => $b6b495a1fd5cbb4c$export$28b57199d8d32698 = v);

var $bDzmQ = parcelRequire("bDzmQ");

var $9cWcn = parcelRequire("9cWcn");

var $jcr1R = parcelRequire("jcr1R");


var $7rhPc = parcelRequire("7rhPc");

var $cd4KD = parcelRequire("cd4KD");

var $kFzUw = parcelRequire("kFzUw");

var $dcxQ7 = parcelRequire("dcxQ7");

var $d00il = parcelRequire("d00il");

var $deseY = parcelRequire("deseY");

var $is5YK = parcelRequire("is5YK");

var $50T4y = parcelRequire("50T4y");

var $k6oYA = parcelRequire("k6oYA");

var $edrMT = parcelRequire("edrMT");

var $fdGPu = parcelRequire("fdGPu");

var $azIPz = parcelRequire("azIPz");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $b6b495a1fd5cbb4c$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var $b6b495a1fd5cbb4c$var$__param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
};
var $b6b495a1fd5cbb4c$var$_a;
const $b6b495a1fd5cbb4c$var$ttPolicy = ($b6b495a1fd5cbb4c$var$_a = window.trustedTypes) === null || $b6b495a1fd5cbb4c$var$_a === void 0 ? void 0 : $b6b495a1fd5cbb4c$var$_a.createPolicy('editorGhostText', {
    createHTML: (value)=>value
});
let $b6b495a1fd5cbb4c$export$28b57199d8d32698 = class $b6b495a1fd5cbb4c$export$28b57199d8d32698 extends $9cWcn.Disposable {
    constructor(editor, model, instantiationService, modeService){
        super();
        this.editor = editor;
        this.model = model;
        this.instantiationService = instantiationService;
        this.modeService = modeService;
        this.disposed = false;
        this.partsWidget = this._register(this.instantiationService.createInstance($b6b495a1fd5cbb4c$var$DecorationsWidget, this.editor));
        this.additionalLinesWidget = this._register(new $b6b495a1fd5cbb4c$var$AdditionalLinesWidget(this.editor, this.modeService.languageIdCodec));
        this.viewMoreContentWidget = undefined;
        this._register(this.editor.onDidChangeConfiguration((e)=>{
            if (e.hasChanged(29 /* disableMonospaceOptimizations */ ) || e.hasChanged(104 /* stopRenderingLineAfter */ ) || e.hasChanged(87 /* renderWhitespace */ ) || e.hasChanged(82 /* renderControlCharacters */ ) || e.hasChanged(44 /* fontLigatures */ ) || e.hasChanged(43 /* fontInfo */ ) || e.hasChanged(58 /* lineHeight */ )) this.update();
        }));
        this._register($9cWcn.toDisposable(()=>{
            var _a;
            this.disposed = true;
            this.update();
            (_a = this.viewMoreContentWidget) === null || _a === void 0 || _a.dispose();
            this.viewMoreContentWidget = undefined;
        }));
        this._register(model.onDidChange(()=>{
            this.update();
        }));
        this.update();
    }
    shouldShowHoverAtViewZone(viewZoneId) {
        return this.additionalLinesWidget.viewZoneId === viewZoneId;
    }
    update() {
        var _a;
        const ghostText = this.model.ghostText;
        if (!this.editor.hasModel() || !ghostText || this.disposed) {
            this.partsWidget.clear();
            this.additionalLinesWidget.clear();
            return;
        }
        const inlineTexts = new Array();
        const additionalLines = new Array();
        function addToAdditionalLines(lines, className) {
            if (additionalLines.length > 0) {
                const lastLine = additionalLines[additionalLines.length - 1];
                if (className) lastLine.decorations.push(new $k6oYA.LineDecoration(lastLine.content.length + 1, lastLine.content.length + 1 + lines[0].length, className, 0 /* Regular */ ));
                lastLine.content += lines[0];
                lines = lines.slice(1);
            }
            for (const line of lines)additionalLines.push({
                content: line,
                decorations: className ? [
                    new $k6oYA.LineDecoration(1, line.length + 1, className, 0 /* Regular */ )
                ] : []
            });
        }
        const textBufferLine = this.editor.getModel().getLineContent(ghostText.lineNumber);
        this.editor.getModel().getLineTokens(ghostText.lineNumber);
        let hiddenTextStartColumn = undefined;
        let lastIdx = 0;
        for (const part of ghostText.parts){
            let lines = part.lines;
            if (hiddenTextStartColumn === undefined) {
                inlineTexts.push({
                    column: part.column,
                    text: lines[0],
                    preview: part.preview
                });
                lines = lines.slice(1);
            } else addToAdditionalLines([
                textBufferLine.substring(lastIdx, part.column - 1)
            ], undefined);
            if (lines.length > 0) {
                addToAdditionalLines(lines, 'ghost-text');
                if (hiddenTextStartColumn === undefined && part.column <= textBufferLine.length) hiddenTextStartColumn = part.column;
            }
            lastIdx = part.column - 1;
        }
        if (hiddenTextStartColumn !== undefined) addToAdditionalLines([
            textBufferLine.substring(lastIdx)
        ], undefined);
        this.partsWidget.setParts(ghostText.lineNumber, inlineTexts, hiddenTextStartColumn !== undefined ? {
            column: hiddenTextStartColumn,
            length: textBufferLine.length + 1 - hiddenTextStartColumn
        } : undefined);
        this.additionalLinesWidget.updateLines(ghostText.lineNumber, additionalLines, ghostText.additionalReservedLineCount);
        if (ghostText.parts.some((p)=>p.lines.length < 0
        )) // Not supported at the moment, condition is always false.
        this.viewMoreContentWidget = this.renderViewMoreLines(new $dcxQ7.Position(ghostText.lineNumber, this.editor.getModel().getLineMaxColumn(ghostText.lineNumber)), '', 0);
        else {
            (_a = this.viewMoreContentWidget) === null || _a === void 0 || _a.dispose();
            this.viewMoreContentWidget = undefined;
        }
    }
    renderViewMoreLines(position, firstLineText, remainingLinesLength) {
        const fontInfo = this.editor.getOption(43 /* fontInfo */ );
        const domNode = document.createElement('div');
        domNode.className = 'suggest-preview-additional-widget';
        $7rhPc.Configuration.applyFontInfoSlow(domNode, fontInfo);
        const spacer = document.createElement('span');
        spacer.className = 'content-spacer';
        spacer.append(firstLineText);
        domNode.append(spacer);
        const newline = document.createElement('span');
        newline.className = 'content-newline suggest-preview-text';
        newline.append('⏎  ');
        domNode.append(newline);
        const disposableStore = new $9cWcn.DisposableStore();
        const button = document.createElement('div');
        button.className = 'button suggest-preview-text';
        button.append(`+${remainingLinesLength} lines…`);
        disposableStore.add($bDzmQ.addStandardDisposableListener(button, 'mousedown', (e)=>{
            var _a;
            (_a = this.model) === null || _a === void 0 || _a.setExpanded(true);
            e.preventDefault();
            this.editor.focus();
        }));
        domNode.append(button);
        return new $b6b495a1fd5cbb4c$var$ViewMoreLinesContentWidget(this.editor, position, domNode, disposableStore);
    }
};
$b6b495a1fd5cbb4c$export$28b57199d8d32698 = $b6b495a1fd5cbb4c$var$__decorate([
    $b6b495a1fd5cbb4c$var$__param(2, $fdGPu.IInstantiationService),
    $b6b495a1fd5cbb4c$var$__param(3, $is5YK.IModeService)
], $b6b495a1fd5cbb4c$export$28b57199d8d32698);
class $b6b495a1fd5cbb4c$var$DecorationsWidget {
    constructor(editor){
        this.editor = editor;
        this.decorationIds = [];
        this.disposableStore = new $9cWcn.DisposableStore();
    }
    dispose() {
        this.clear();
        this.disposableStore.dispose();
    }
    clear() {
        this.editor.deltaDecorations(this.decorationIds, []);
        this.disposableStore.clear();
    }
    setParts(lineNumber, parts, hiddenText) {
        this.disposableStore.clear();
        const textModel = this.editor.getModel();
        if (!textModel) return;
        const hiddenTextDecorations = new Array();
        if (hiddenText) hiddenTextDecorations.push({
            range: $d00il.Range.fromPositions(new $dcxQ7.Position(lineNumber, hiddenText.column), new $dcxQ7.Position(lineNumber, hiddenText.column + hiddenText.length)),
            options: {
                inlineClassName: 'ghost-text-hidden',
                description: 'ghost-text-hidden'
            }
        });
        this.decorationIds = this.editor.deltaDecorations(this.decorationIds, parts.map((p)=>{
            return {
                range: $d00il.Range.fromPositions(new $dcxQ7.Position(lineNumber, p.column)),
                options: {
                    description: 'ghost-text',
                    after: {
                        content: p.text,
                        inlineClassName: p.preview ? 'ghost-text-decoration-preview' : 'ghost-text-decoration'
                    },
                    showIfCollapsed: true
                }
            };
        }).concat(hiddenTextDecorations));
    }
}
class $b6b495a1fd5cbb4c$var$AdditionalLinesWidget {
    constructor(editor, languageIdCodec){
        this.editor = editor;
        this.languageIdCodec = languageIdCodec;
        this._viewZoneId = undefined;
    }
    get viewZoneId() {
        return this._viewZoneId;
    }
    dispose() {
        this.clear();
    }
    clear() {
        this.editor.changeViewZones((changeAccessor)=>{
            if (this._viewZoneId) {
                changeAccessor.removeZone(this._viewZoneId);
                this._viewZoneId = undefined;
            }
        });
    }
    updateLines(lineNumber, additionalLines, minReservedLineCount) {
        const textModel = this.editor.getModel();
        if (!textModel) return;
        const { tabSize: tabSize  } = textModel.getOptions();
        this.editor.changeViewZones((changeAccessor)=>{
            if (this._viewZoneId) {
                changeAccessor.removeZone(this._viewZoneId);
                this._viewZoneId = undefined;
            }
            const heightInLines = Math.max(additionalLines.length, minReservedLineCount);
            if (heightInLines > 0) {
                const domNode = document.createElement('div');
                $b6b495a1fd5cbb4c$var$renderLines(domNode, tabSize, additionalLines, this.editor.getOptions(), this.languageIdCodec);
                this._viewZoneId = changeAccessor.addZone({
                    afterLineNumber: lineNumber,
                    heightInLines: heightInLines,
                    domNode: domNode
                });
            }
        });
    }
}
function $b6b495a1fd5cbb4c$var$renderLines(domNode, tabSize, lines, opts, languageIdCodec) {
    const disableMonospaceOptimizations = opts.get(29 /* disableMonospaceOptimizations */ );
    const stopRenderingLineAfter = opts.get(104 /* stopRenderingLineAfter */ );
    // To avoid visual confusion, we don't want to render visible whitespace
    const renderWhitespace = 'none';
    const renderControlCharacters = opts.get(82 /* renderControlCharacters */ );
    const fontLigatures = opts.get(44 /* fontLigatures */ );
    const fontInfo = opts.get(43 /* fontInfo */ );
    const lineHeight = opts.get(58 /* lineHeight */ );
    const sb = $deseY.createStringBuilder(10000);
    sb.appendASCIIString('<div class="suggest-preview-text">');
    for(let i = 0, len = lines.length; i < len; i++){
        const lineData = lines[i];
        const line = lineData.content;
        sb.appendASCIIString('<div class="view-line');
        sb.appendASCIIString('" style="top:');
        sb.appendASCIIString(String(i * lineHeight));
        sb.appendASCIIString('px;width:1000000px;">');
        const isBasicASCII = $jcr1R.isBasicASCII(line);
        const containsRTL = $jcr1R.containsRTL(line);
        const lineTokens = $kFzUw.LineTokens.createEmpty(line, languageIdCodec);
        $edrMT.renderViewLine(new $edrMT.RenderLineInput(fontInfo.isMonospace && !disableMonospaceOptimizations, fontInfo.canUseHalfwidthRightwardsArrow, line, false, isBasicASCII, containsRTL, 0, lineTokens, lineData.decorations, tabSize, 0, fontInfo.spaceWidth, fontInfo.middotWidth, fontInfo.wsmiddotWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures !== $cd4KD.EditorFontLigatures.OFF, null), sb);
        sb.appendASCIIString('</div>');
    }
    sb.appendASCIIString('</div>');
    $7rhPc.Configuration.applyFontInfoSlow(domNode, fontInfo);
    const html = sb.build();
    const trustedhtml = $b6b495a1fd5cbb4c$var$ttPolicy ? $b6b495a1fd5cbb4c$var$ttPolicy.createHTML(html) : html;
    domNode.innerHTML = trustedhtml;
}
class $b6b495a1fd5cbb4c$var$ViewMoreLinesContentWidget extends $9cWcn.Disposable {
    constructor(editor, position, domNode, disposableStore){
        super();
        this.editor = editor;
        this.position = position;
        this.domNode = domNode;
        this.allowEditorOverflow = false;
        this.suppressMouseDown = false;
        this._register(disposableStore);
        this._register($9cWcn.toDisposable(()=>{
            this.editor.removeContentWidget(this);
        }));
        this.editor.addContentWidget(this);
    }
    getId() {
        return 'editor.widget.viewMoreLinesWidget';
    }
    getDomNode() {
        return this.domNode;
    }
    getPosition() {
        return {
            position: this.position,
            preference: [
                0 /* EXACT */ 
            ]
        };
    }
}
$azIPz.registerThemingParticipant((theme, collector)=>{
    const foreground = theme.getColor($50T4y.ghostTextForeground);
    if (foreground) {
        // `!important` ensures that other decorations don't cause a style conflict (#132017).
        collector.addRule(`.monaco-editor .ghost-text-decoration { color: ${foreground.toString()} !important; }`);
        collector.addRule(`.monaco-editor .ghost-text-decoration-preview { color: ${foreground.toString()} !important; }`);
        collector.addRule(`.monaco-editor .suggest-preview-text .ghost-text { color: ${foreground.toString()} !important; }`);
    }
    const background = theme.getColor($50T4y.ghostTextBackground);
    if (background) {
        collector.addRule(`.monaco-editor .ghost-text-decoration { background-color: ${background.toString()}; }`);
        collector.addRule(`.monaco-editor .ghost-text-decoration-preview { background-color: ${background.toString()}; }`);
        collector.addRule(`.monaco-editor .suggest-preview-text .ghost-text { background-color: ${background.toString()}; }`);
    }
    const border = theme.getColor($50T4y.ghostTextBorder);
    if (border) {
        collector.addRule(`.monaco-editor .suggest-preview-text .ghost-text { border: 1px solid ${border}; }`);
        collector.addRule(`.monaco-editor .ghost-text-decoration { border: 1px solid ${border}; }`);
        collector.addRule(`.monaco-editor .ghost-text-decoration-preview { border: 1px solid ${border}; }`);
    }
});



var $4dEdH = parcelRequire("4dEdH");

var $cxCeF = parcelRequire("cxCeF");

var $fdGPu = parcelRequire("fdGPu");

var $6AWYG = parcelRequire("6AWYG");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $dadbf4ad7ee2ca71$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var $dadbf4ad7ee2ca71$var$__param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
};
var $dadbf4ad7ee2ca71$var$__awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
let $dadbf4ad7ee2ca71$export$ffa5b9ac8848b7ee = class $dadbf4ad7ee2ca71$export$ffa5b9ac8848b7ee extends $9cWcn.Disposable {
    constructor(editor, instantiationService){
        super();
        this.editor = editor;
        this.instantiationService = instantiationService;
        this.triggeredExplicitly = false;
        this.activeController = this._register(new $9cWcn.MutableDisposable());
        this._register(this.editor.onDidChangeModel(()=>{
            this.updateModelController();
        }));
        this._register(this.editor.onDidChangeConfiguration((e)=>{
            if (e.hasChanged(105 /* suggest */ )) this.updateModelController();
            if (e.hasChanged(54 /* inlineSuggest */ )) this.updateModelController();
        }));
        this.updateModelController();
    }
    static get(editor) {
        return editor.getContribution($dadbf4ad7ee2ca71$export$ffa5b9ac8848b7ee.ID);
    }
    get activeModel() {
        var _a;
        return (_a = this.activeController.value) === null || _a === void 0 ? void 0 : _a.model;
    }
    // Don't call this method when not neccessary. It will recreate the activeController.
    updateModelController() {
        const suggestOptions = this.editor.getOption(105 /* suggest */ );
        const inlineSuggestOptions = this.editor.getOption(54 /* inlineSuggest */ );
        this.activeController.value = undefined;
        // ActiveGhostTextController is only created if one of those settings is set or if the inline completions are triggered explicitly.
        this.activeController.value = this.editor.hasModel() && (suggestOptions.preview || inlineSuggestOptions.enabled || this.triggeredExplicitly) ? this.instantiationService.createInstance($dadbf4ad7ee2ca71$export$bcf17a7fc858c9df, this.editor) : undefined;
    }
    shouldShowHoverAt(hoverRange) {
        var _a;
        return ((_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.shouldShowHoverAt(hoverRange)) || false;
    }
    shouldShowHoverAtViewZone(viewZoneId) {
        var _a, _b;
        return ((_b = (_a = this.activeController.value) === null || _a === void 0 ? void 0 : _a.widget) === null || _b === void 0 ? void 0 : _b.shouldShowHoverAtViewZone(viewZoneId)) || false;
    }
    trigger() {
        var _a;
        this.triggeredExplicitly = true;
        if (!this.activeController.value) this.updateModelController();
        (_a = this.activeModel) === null || _a === void 0 || _a.triggerInlineCompletion();
    }
    commit() {
        var _a;
        (_a = this.activeModel) === null || _a === void 0 || _a.commitInlineCompletion();
    }
    hide() {
        var _a;
        (_a = this.activeModel) === null || _a === void 0 || _a.hideInlineCompletion();
    }
    showNextInlineCompletion() {
        var _a;
        (_a = this.activeModel) === null || _a === void 0 || _a.showNextInlineCompletion();
    }
    showPreviousInlineCompletion() {
        var _a;
        (_a = this.activeModel) === null || _a === void 0 || _a.showPreviousInlineCompletion();
    }
    hasMultipleInlineCompletions() {
        var _a;
        return $dadbf4ad7ee2ca71$var$__awaiter(this, void 0, void 0, function*() {
            const result = yield (_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.hasMultipleInlineCompletions();
            return result !== undefined ? result : false;
        });
    }
};
$dadbf4ad7ee2ca71$export$ffa5b9ac8848b7ee.inlineSuggestionVisible = new $cxCeF.RawContextKey('inlineSuggestionVisible', false, $4dEdH.localize('inlineSuggestionVisible', "Whether an inline suggestion is visible"));
$dadbf4ad7ee2ca71$export$ffa5b9ac8848b7ee.inlineSuggestionHasIndentation = new $cxCeF.RawContextKey('inlineSuggestionHasIndentation', false, $4dEdH.localize('inlineSuggestionHasIndentation', "Whether the inline suggestion starts with whitespace"));
$dadbf4ad7ee2ca71$export$ffa5b9ac8848b7ee.inlineSuggestionHasIndentationLessThanTabSize = new $cxCeF.RawContextKey('inlineSuggestionHasIndentationLessThanTabSize', true, $4dEdH.localize('inlineSuggestionHasIndentationLessThanTabSize', "Whether the inline suggestion starts with whitespace that is less than what would be inserted by tab"));
$dadbf4ad7ee2ca71$export$ffa5b9ac8848b7ee.ID = 'editor.contrib.ghostTextController';
$dadbf4ad7ee2ca71$export$ffa5b9ac8848b7ee = $dadbf4ad7ee2ca71$var$__decorate([
    $dadbf4ad7ee2ca71$var$__param(1, $fdGPu.IInstantiationService)
], $dadbf4ad7ee2ca71$export$ffa5b9ac8848b7ee);
class $dadbf4ad7ee2ca71$var$GhostTextContextKeys {
    constructor(contextKeyService){
        this.contextKeyService = contextKeyService;
        this.inlineCompletionVisible = $dadbf4ad7ee2ca71$export$ffa5b9ac8848b7ee.inlineSuggestionVisible.bindTo(this.contextKeyService);
        this.inlineCompletionSuggestsIndentation = $dadbf4ad7ee2ca71$export$ffa5b9ac8848b7ee.inlineSuggestionHasIndentation.bindTo(this.contextKeyService);
        this.inlineCompletionSuggestsIndentationLessThanTabSize = $dadbf4ad7ee2ca71$export$ffa5b9ac8848b7ee.inlineSuggestionHasIndentationLessThanTabSize.bindTo(this.contextKeyService);
    }
}
/**
 * The controller for a text editor with an initialized text model.
 * Must be disposed as soon as the model detaches from the editor.
*/ let $dadbf4ad7ee2ca71$export$bcf17a7fc858c9df = class $dadbf4ad7ee2ca71$export$bcf17a7fc858c9df extends $9cWcn.Disposable {
    constructor(editor, instantiationService, contextKeyService){
        super();
        this.editor = editor;
        this.instantiationService = instantiationService;
        this.contextKeyService = contextKeyService;
        this.contextKeys = new $dadbf4ad7ee2ca71$var$GhostTextContextKeys(this.contextKeyService);
        this.model = this._register(this.instantiationService.createInstance($875a3147a301ee65$exports.GhostTextModel, this.editor));
        this.widget = this._register(this.instantiationService.createInstance($b6b495a1fd5cbb4c$exports.GhostTextWidget, this.editor, this.model));
        this._register($9cWcn.toDisposable(()=>{
            this.contextKeys.inlineCompletionVisible.set(false);
            this.contextKeys.inlineCompletionSuggestsIndentation.set(false);
            this.contextKeys.inlineCompletionSuggestsIndentationLessThanTabSize.set(true);
        }));
        this._register(this.model.onDidChange(()=>{
            this.updateContextKeys();
        }));
        this.updateContextKeys();
    }
    updateContextKeys() {
        var _a;
        this.contextKeys.inlineCompletionVisible.set(((_a = this.model.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.ghostText) !== undefined);
        let startsWithIndentation = false;
        let startsWithIndentationLessThanTabSize = true;
        const ghostText = this.model.inlineCompletionsModel.ghostText;
        if (!!this.model.activeInlineCompletionsModel && ghostText && ghostText.parts.length > 0) {
            const { column: column , lines: lines  } = ghostText.parts[0];
            const firstLine = lines[0];
            const indentationEndColumn = this.editor.getModel().getLineIndentColumn(ghostText.lineNumber);
            const inIndentation = column <= indentationEndColumn;
            if (inIndentation) {
                let firstNonWsIdx = $jcr1R.firstNonWhitespaceIndex(firstLine);
                if (firstNonWsIdx === -1) firstNonWsIdx = firstLine.length - 1;
                startsWithIndentation = firstNonWsIdx > 0;
                const tabSize = this.editor.getModel().getOptions().tabSize;
                const visibleColumnIndentation = $gLGey.CursorColumns.visibleColumnFromColumn(firstLine, firstNonWsIdx + 1, tabSize);
                startsWithIndentationLessThanTabSize = visibleColumnIndentation < tabSize;
            }
        }
        this.contextKeys.inlineCompletionSuggestsIndentation.set(startsWithIndentation);
        this.contextKeys.inlineCompletionSuggestsIndentationLessThanTabSize.set(startsWithIndentationLessThanTabSize);
    }
};
$dadbf4ad7ee2ca71$export$bcf17a7fc858c9df = $dadbf4ad7ee2ca71$var$__decorate([
    $dadbf4ad7ee2ca71$var$__param(1, $fdGPu.IInstantiationService),
    $dadbf4ad7ee2ca71$var$__param(2, $cxCeF.IContextKeyService)
], $dadbf4ad7ee2ca71$export$bcf17a7fc858c9df);
const $dadbf4ad7ee2ca71$var$GhostTextCommand = $2iJTi.EditorCommand.bindToContribution($dadbf4ad7ee2ca71$export$ffa5b9ac8848b7ee.get);
const $dadbf4ad7ee2ca71$export$6bdad8075dfe5c6b = new $dadbf4ad7ee2ca71$var$GhostTextCommand({
    id: $61a2bfdf10b08408$export$f1235a78c589a102,
    precondition: $dadbf4ad7ee2ca71$export$ffa5b9ac8848b7ee.inlineSuggestionVisible,
    handler (x) {
        x.commit();
        x.editor.focus();
    }
});
$2iJTi.registerEditorCommand($dadbf4ad7ee2ca71$export$6bdad8075dfe5c6b);
$6AWYG.KeybindingsRegistry.registerKeybindingRule({
    primary: 2 /* Tab */ ,
    weight: 200,
    id: $dadbf4ad7ee2ca71$export$6bdad8075dfe5c6b.id,
    when: $cxCeF.ContextKeyExpr.and($dadbf4ad7ee2ca71$export$6bdad8075dfe5c6b.precondition, $ibKGQ.EditorContextKeys.tabMovesFocus.toNegated(), $dadbf4ad7ee2ca71$export$ffa5b9ac8848b7ee.inlineSuggestionHasIndentationLessThanTabSize)
});
$2iJTi.registerEditorCommand(new $dadbf4ad7ee2ca71$var$GhostTextCommand({
    id: 'editor.action.inlineSuggest.hide',
    precondition: $dadbf4ad7ee2ca71$export$ffa5b9ac8848b7ee.inlineSuggestionVisible,
    kbOpts: {
        weight: 100,
        primary: 9 /* Escape */ 
    },
    handler (x) {
        x.hide();
    }
}));
class $dadbf4ad7ee2ca71$export$57edbf9569cc9779 extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: $dadbf4ad7ee2ca71$export$57edbf9569cc9779.ID,
            label: $4dEdH.localize('action.inlineSuggest.showNext', "Show Next Inline Suggestion"),
            alias: 'Show Next Inline Suggestion',
            precondition: $cxCeF.ContextKeyExpr.and($ibKGQ.EditorContextKeys.writable, $dadbf4ad7ee2ca71$export$ffa5b9ac8848b7ee.inlineSuggestionVisible),
            kbOpts: {
                weight: 100,
                primary: 601 /* BracketRight */ 
            }
        });
    }
    run(accessor, editor) {
        return $dadbf4ad7ee2ca71$var$__awaiter(this, void 0, void 0, function*() {
            const controller = $dadbf4ad7ee2ca71$export$ffa5b9ac8848b7ee.get(editor);
            if (controller) {
                controller.showNextInlineCompletion();
                editor.focus();
            }
        });
    }
}
$dadbf4ad7ee2ca71$export$57edbf9569cc9779.ID = 'editor.action.inlineSuggest.showNext';
class $dadbf4ad7ee2ca71$export$deb45c643cbebb10 extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: $dadbf4ad7ee2ca71$export$deb45c643cbebb10.ID,
            label: $4dEdH.localize('action.inlineSuggest.showPrevious', "Show Previous Inline Suggestion"),
            alias: 'Show Previous Inline Suggestion',
            precondition: $cxCeF.ContextKeyExpr.and($ibKGQ.EditorContextKeys.writable, $dadbf4ad7ee2ca71$export$ffa5b9ac8848b7ee.inlineSuggestionVisible),
            kbOpts: {
                weight: 100,
                primary: 599 /* BracketLeft */ 
            }
        });
    }
    run(accessor, editor) {
        return $dadbf4ad7ee2ca71$var$__awaiter(this, void 0, void 0, function*() {
            const controller = $dadbf4ad7ee2ca71$export$ffa5b9ac8848b7ee.get(editor);
            if (controller) {
                controller.showPreviousInlineCompletion();
                editor.focus();
            }
        });
    }
}
$dadbf4ad7ee2ca71$export$deb45c643cbebb10.ID = 'editor.action.inlineSuggest.showPrevious';
class $dadbf4ad7ee2ca71$export$ba15d049566a3d99 extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: 'editor.action.inlineSuggest.trigger',
            label: $4dEdH.localize('action.inlineSuggest.trigger', "Trigger Inline Suggestion"),
            alias: 'Trigger Inline Suggestion',
            precondition: $ibKGQ.EditorContextKeys.writable
        });
    }
    run(accessor, editor) {
        return $dadbf4ad7ee2ca71$var$__awaiter(this, void 0, void 0, function*() {
            const controller = $dadbf4ad7ee2ca71$export$ffa5b9ac8848b7ee.get(editor);
            if (controller) controller.trigger();
        });
    }
}
$2iJTi.registerEditorContribution($dadbf4ad7ee2ca71$export$ffa5b9ac8848b7ee.ID, $dadbf4ad7ee2ca71$export$ffa5b9ac8848b7ee);
$2iJTi.registerEditorAction($dadbf4ad7ee2ca71$export$ba15d049566a3d99);
$2iJTi.registerEditorAction($dadbf4ad7ee2ca71$export$57edbf9569cc9779);
$2iJTi.registerEditorAction($dadbf4ad7ee2ca71$export$deb45c643cbebb10);



var $4dEdH = parcelRequire("4dEdH");

var $gjaQN = parcelRequire("gjaQN");

var $g4v7E = parcelRequire("g4v7E");

var $8tcMz = parcelRequire("8tcMz");

var $cxCeF = parcelRequire("cxCeF");

var $iAi3o = parcelRequire("iAi3o");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $a95621aefca04020$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var $a95621aefca04020$var$__param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
};
class $a95621aefca04020$export$d54b1f95b394dfe6 {
    constructor(owner, range, controller){
        this.owner = owner;
        this.range = range;
        this.controller = controller;
    }
    isValidForHoverAnchor(anchor) {
        return anchor.type === 1 /* Range */  && this.range.startColumn <= anchor.range.startColumn && this.range.endColumn >= anchor.range.endColumn;
    }
    hasMultipleSuggestions() {
        return this.controller.hasMultipleInlineCompletions();
    }
}
let $a95621aefca04020$export$85c63d130bb225cb = class $a95621aefca04020$export$85c63d130bb225cb {
    constructor(_editor, _hover, _commandService, _menuService, _contextKeyService, _modeService, _openerService, accessibilityService){
        this._editor = _editor;
        this._hover = _hover;
        this._commandService = _commandService;
        this._menuService = _menuService;
        this._contextKeyService = _contextKeyService;
        this._modeService = _modeService;
        this._openerService = _openerService;
        this.accessibilityService = accessibilityService;
    }
    suggestHoverAnchor(mouseEvent) {
        const controller = $dadbf4ad7ee2ca71$exports.GhostTextController.get(this._editor);
        if (!controller) return null;
        if (mouseEvent.target.type === 8 /* CONTENT_VIEW_ZONE */ ) {
            // handle the case where the mouse is over the view zone
            const viewZoneData = mouseEvent.target.detail;
            if (controller.shouldShowHoverAtViewZone(viewZoneData.viewZoneId)) return new $ba5b81fb43f4256d$export$cadc11e524c92809(1000, this, $d00il.Range.fromPositions(viewZoneData.positionBefore || viewZoneData.position, viewZoneData.positionBefore || viewZoneData.position));
        }
        if (mouseEvent.target.type === 7 /* CONTENT_EMPTY */  && mouseEvent.target.range) {
            // handle the case where the mouse is over the empty portion of a line following ghost text
            if (controller.shouldShowHoverAt(mouseEvent.target.range)) return new $ba5b81fb43f4256d$export$cadc11e524c92809(1000, this, mouseEvent.target.range);
        }
        if (mouseEvent.target.type === 6 /* CONTENT_TEXT */  && mouseEvent.target.range && mouseEvent.target.detail) {
            // handle the case where the mouse is directly over ghost text
            const mightBeForeignElement = mouseEvent.target.detail.mightBeForeignElement;
            if (mightBeForeignElement && controller.shouldShowHoverAt(mouseEvent.target.range)) return new $ba5b81fb43f4256d$export$cadc11e524c92809(1000, this, mouseEvent.target.range);
        }
        return null;
    }
    computeSync(anchor, lineDecorations) {
        const controller = $dadbf4ad7ee2ca71$exports.GhostTextController.get(this._editor);
        if (controller && controller.shouldShowHoverAt(anchor.range)) return [
            new $a95621aefca04020$export$d54b1f95b394dfe6(this, anchor.range, controller)
        ];
        return [];
    }
    renderHoverParts(hoverParts, fragment, statusBar) {
        const disposableStore = new $9cWcn.DisposableStore();
        const part = hoverParts[0];
        if (this.accessibilityService.isScreenReaderOptimized()) this.renderScreenReaderText(part, fragment, disposableStore);
        const menu = disposableStore.add(this._menuService.createMenu($g4v7E.MenuId.InlineCompletionsActions, this._contextKeyService));
        const previousAction = statusBar.addAction({
            label: $4dEdH.localize('showNextInlineSuggestion', "Next"),
            commandId: $dadbf4ad7ee2ca71$exports.ShowNextInlineSuggestionAction.ID,
            run: ()=>this._commandService.executeCommand($dadbf4ad7ee2ca71$exports.ShowNextInlineSuggestionAction.ID)
        });
        const nextAction = statusBar.addAction({
            label: $4dEdH.localize('showPreviousInlineSuggestion', "Previous"),
            commandId: $dadbf4ad7ee2ca71$exports.ShowPreviousInlineSuggestionAction.ID,
            run: ()=>this._commandService.executeCommand($dadbf4ad7ee2ca71$exports.ShowPreviousInlineSuggestionAction.ID)
        });
        statusBar.addAction({
            label: $4dEdH.localize('acceptInlineSuggestion', "Accept"),
            commandId: $dadbf4ad7ee2ca71$exports.commitInlineSuggestionAction.id,
            run: ()=>this._commandService.executeCommand($dadbf4ad7ee2ca71$exports.commitInlineSuggestionAction.id)
        });
        const actions = [
            previousAction,
            nextAction
        ];
        for (const action1 of actions)action1.setEnabled(false);
        part.hasMultipleSuggestions().then((hasMore)=>{
            for (const action of actions)action.setEnabled(hasMore);
        });
        for (const [_, group] of menu.getActions()){
            for (const action of group)if (action instanceof $g4v7E.MenuItemAction) statusBar.addAction({
                label: action.label,
                commandId: action.item.id,
                run: ()=>this._commandService.executeCommand(action.item.id)
            });
        }
        return disposableStore;
    }
    renderScreenReaderText(part, fragment, disposableStore) {
        var _a, _b;
        const $ = $bDzmQ.$;
        const markdownHoverElement = $('div.hover-row.markdown-hover');
        const hoverContentsElement = $bDzmQ.append(markdownHoverElement, $('div.hover-contents'));
        const renderer = disposableStore.add(new $0f615ea767437954$exports.MarkdownRenderer({
            editor: this._editor
        }, this._modeService, this._openerService));
        const render = (code)=>{
            disposableStore.add(renderer.onDidRenderAsync(()=>{
                hoverContentsElement.className = 'hover-contents code-hover-contents';
                this._hover.onContentsChanged();
            }));
            const inlineSuggestionAvailable = $4dEdH.localize('inlineSuggestionFollows', "Suggestion:");
            const renderedContents = disposableStore.add(renderer.render(new $iGmb0.MarkdownString().appendText(inlineSuggestionAvailable).appendCodeblock('text', code)));
            hoverContentsElement.replaceChildren(renderedContents.element);
        };
        const ghostText = (_b = (_a = part.controller.activeModel) === null || _a === void 0 ? void 0 : _a.inlineCompletionsModel) === null || _b === void 0 ? void 0 : _b.ghostText;
        if (ghostText) {
            const lineText = this._editor.getModel().getLineContent(ghostText.lineNumber);
            render(ghostText.renderForScreenReader(lineText));
        }
        fragment.appendChild(markdownHoverElement);
    }
};
$a95621aefca04020$export$85c63d130bb225cb = $a95621aefca04020$var$__decorate([
    $a95621aefca04020$var$__param(2, $8tcMz.ICommandService),
    $a95621aefca04020$var$__param(3, $g4v7E.IMenuService),
    $a95621aefca04020$var$__param(4, $cxCeF.IContextKeyService),
    $a95621aefca04020$var$__param(5, $is5YK.IModeService),
    $a95621aefca04020$var$__param(6, $iAi3o.IOpenerService),
    $a95621aefca04020$var$__param(7, $gjaQN.IAccessibilityService)
], $a95621aefca04020$export$85c63d130bb225cb);



var $cxCeF = parcelRequire("cxCeF");

var $fdGPu = parcelRequire("fdGPu");

var $7IxGd = parcelRequire("7IxGd");

var $0fd4dabd3767b082$exports = {};

$parcel$export($0fd4dabd3767b082$exports, "UnicodeHighlighterHoverParticipant", () => $0fd4dabd3767b082$export$abfb214dc8905583, (v) => $0fd4dabd3767b082$export$abfb214dc8905583 = v);

var $6bXyA = parcelRequire("6bXyA");

var $awgRE = parcelRequire("awgRE");

var $9cWcn = parcelRequire("9cWcn");

var $jcr1R = parcelRequire("jcr1R");


var $2iJTi = parcelRequire("2iJTi");

var $cd4KD = parcelRequire("cd4KD");

var $1Y4vr = parcelRequire("1Y4vr");

var $91ntV = parcelRequire("91ntV");

var $aGrvN = parcelRequire("aGrvN");

var $aPs2m = parcelRequire("aPs2m");

var $is5YK = parcelRequire("is5YK");

var $9mXLU = parcelRequire("9mXLU");

var $3b8c9d83dda09e4d$exports = {};

$parcel$export($3b8c9d83dda09e4d$exports, "BannerController", () => $3b8c9d83dda09e4d$export$1da7e17bff54d3c0, (v) => $3b8c9d83dda09e4d$export$1da7e17bff54d3c0 = v);


var $bDzmQ = parcelRequire("bDzmQ");

var $czr0Q = parcelRequire("czr0Q");

var $cVfMQ = parcelRequire("cVfMQ");

var $9cWcn = parcelRequire("9cWcn");


var $fdGPu = parcelRequire("fdGPu");
var $b504846d2d19c1a7$exports = {};

$parcel$export($b504846d2d19c1a7$exports, "Link", () => $b504846d2d19c1a7$export$a6c7ac8248d6e38a, (v) => $b504846d2d19c1a7$export$a6c7ac8248d6e38a = v);

var $bDzmQ = parcelRequire("bDzmQ");

var $3vJsA = parcelRequire("3vJsA");

var $gV002 = parcelRequire("gV002");

var $cnAUf = parcelRequire("cnAUf");

var $5YaSO = parcelRequire("5YaSO");

var $9cWcn = parcelRequire("9cWcn");

var $iAi3o = parcelRequire("iAi3o");

var $gaWeX = parcelRequire("gaWeX");

var $azIPz = parcelRequire("azIPz");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $b504846d2d19c1a7$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var $b504846d2d19c1a7$var$__param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
};
let $b504846d2d19c1a7$export$a6c7ac8248d6e38a = class $b504846d2d19c1a7$export$a6c7ac8248d6e38a extends $9cWcn.Disposable {
    constructor(container, _link, options = {}, openerService){
        var _a;
        super();
        this._link = _link;
        this._enabled = true;
        this.el = $bDzmQ.append(container, $bDzmQ.$('a.monaco-link', {
            tabIndex: (_a = _link.tabIndex) !== null && _a !== void 0 ? _a : 0,
            href: _link.href,
            title: _link.title
        }, _link.label));
        this.el.setAttribute('role', 'button');
        const onClickEmitter = this._register(new $3vJsA.DomEmitter(this.el, 'click'));
        const onKeyPress = this._register(new $3vJsA.DomEmitter(this.el, 'keypress'));
        const onEnterPress = $5YaSO.Event.chain(onKeyPress.event).map((e)=>new $gV002.StandardKeyboardEvent(e)
        ).filter((e)=>e.keyCode === 3 /* Enter */ 
        ).event;
        const onTap = this._register(new $3vJsA.DomEmitter(this.el, $cnAUf.EventType.Tap)).event;
        this._register($cnAUf.Gesture.addTarget(this.el));
        const onOpen = $5YaSO.Event.any(onClickEmitter.event, onEnterPress, onTap);
        this._register(onOpen((e)=>{
            if (!this.enabled) return;
            $bDzmQ.EventHelper.stop(e, true);
            if (options === null || options === void 0 ? void 0 : options.opener) options.opener(this._link.href);
            else openerService.open(this._link.href, {
                allowCommands: true
            });
        }));
        this.enabled = true;
    }
    get enabled() {
        return this._enabled;
    }
    set enabled(enabled) {
        if (enabled) {
            this.el.setAttribute('aria-disabled', 'false');
            this.el.tabIndex = 0;
            this.el.style.pointerEvents = 'auto';
            this.el.style.opacity = '1';
            this.el.style.cursor = 'pointer';
            this._enabled = false;
        } else {
            this.el.setAttribute('aria-disabled', 'true');
            this.el.tabIndex = -1;
            this.el.style.pointerEvents = 'none';
            this.el.style.opacity = '0.4';
            this.el.style.cursor = 'default';
            this._enabled = true;
        }
        this._enabled = enabled;
    }
};
$b504846d2d19c1a7$export$a6c7ac8248d6e38a = $b504846d2d19c1a7$var$__decorate([
    $b504846d2d19c1a7$var$__param(3, $iAi3o.IOpenerService)
], $b504846d2d19c1a7$export$a6c7ac8248d6e38a);
$azIPz.registerThemingParticipant((theme, collector)=>{
    const textLinkForegroundColor = theme.getColor($gaWeX.textLinkForeground);
    if (textLinkForegroundColor) collector.addRule(`.monaco-link { color: ${textLinkForegroundColor}; }`);
    const textLinkActiveForegroundColor = theme.getColor($gaWeX.textLinkActiveForeground);
    if (textLinkActiveForegroundColor) collector.addRule(`.monaco-link:hover { color: ${textLinkActiveForegroundColor}; }`);
});



var $hEsmQ = parcelRequire("hEsmQ");

var $azIPz = parcelRequire("azIPz");
var $3b8c9d83dda09e4d$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var $3b8c9d83dda09e4d$var$__param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
};
const $3b8c9d83dda09e4d$var$BANNER_ELEMENT_HEIGHT = 26;
let $3b8c9d83dda09e4d$export$1da7e17bff54d3c0 = class $3b8c9d83dda09e4d$export$1da7e17bff54d3c0 extends $9cWcn.Disposable {
    constructor(_editor, instantiationService){
        super();
        this._editor = _editor;
        this.instantiationService = instantiationService;
        this.banner = this._register(this.instantiationService.createInstance($3b8c9d83dda09e4d$var$Banner));
    }
    hide() {
        this._editor.setBanner(null, 0);
        this.banner.clear();
    }
    show(item) {
        this.banner.show(Object.assign(Object.assign({}, item), {
            onClose: ()=>{
                this.hide();
                if (item.onClose) item.onClose();
            }
        }));
        this._editor.setBanner(this.banner.element, $3b8c9d83dda09e4d$var$BANNER_ELEMENT_HEIGHT);
    }
};
$3b8c9d83dda09e4d$export$1da7e17bff54d3c0 = $3b8c9d83dda09e4d$var$__decorate([
    $3b8c9d83dda09e4d$var$__param(1, $fdGPu.IInstantiationService)
], $3b8c9d83dda09e4d$export$1da7e17bff54d3c0);
// TODO@hediet: Investigate if this can be reused by the workspace banner (bannerPart.ts).
let $3b8c9d83dda09e4d$var$Banner = class Banner extends $9cWcn.Disposable {
    constructor(instantiationService){
        super();
        this.instantiationService = instantiationService;
        this.markdownRenderer = this.instantiationService.createInstance($0f615ea767437954$exports.MarkdownRenderer, {});
        this.element = $bDzmQ.$('div.editor-banner');
        this.element.tabIndex = 0;
    }
    getAriaLabel(item) {
        if (item.ariaLabel) return item.ariaLabel;
        if (typeof item.message === 'string') return item.message;
        return undefined;
    }
    getBannerMessage(message) {
        if (typeof message === 'string') {
            const element = $bDzmQ.$('span');
            element.innerText = message;
            return element;
        }
        return this.markdownRenderer.render(message).element;
    }
    clear() {
        $bDzmQ.clearNode(this.element);
    }
    show(item) {
        // Clear previous item
        $bDzmQ.clearNode(this.element);
        // Banner aria label
        const ariaLabel = this.getAriaLabel(item);
        if (ariaLabel) this.element.setAttribute('aria-label', ariaLabel);
        // Icon
        const iconContainer = $bDzmQ.append(this.element, $bDzmQ.$('div.icon-container'));
        iconContainer.setAttribute('aria-hidden', 'true');
        if (item.icon) iconContainer.appendChild($bDzmQ.$(`div${$azIPz.ThemeIcon.asCSSSelector(item.icon)}`));
        // Message
        const messageContainer = $bDzmQ.append(this.element, $bDzmQ.$('div.message-container'));
        messageContainer.setAttribute('aria-hidden', 'true');
        messageContainer.appendChild(this.getBannerMessage(item.message));
        // Message Actions
        this.messageActionsContainer = $bDzmQ.append(this.element, $bDzmQ.$('div.message-actions-container'));
        if (item.actions) for (const action of item.actions)this._register(this.instantiationService.createInstance($b504846d2d19c1a7$exports.Link, this.messageActionsContainer, Object.assign(Object.assign({}, action), {
            tabIndex: -1
        }), {}));
        // Action
        const actionBarContainer = $bDzmQ.append(this.element, $bDzmQ.$('div.action-container'));
        this.actionBar = this._register(new $czr0Q.ActionBar(actionBarContainer));
        this.actionBar.push(this._register(new $cVfMQ.Action('banner.close', 'Close Banner', $azIPz.ThemeIcon.asClassName($hEsmQ.widgetClose), true, ()=>{
            if (typeof item.onClose === 'function') item.onClose();
        })), {
            icon: true,
            label: false
        });
        this.actionBar.setFocusable(false);
    }
};
$3b8c9d83dda09e4d$var$Banner = $3b8c9d83dda09e4d$var$__decorate([
    $3b8c9d83dda09e4d$var$__param(0, $fdGPu.IInstantiationService)
], $3b8c9d83dda09e4d$var$Banner);



var $4dEdH = parcelRequire("4dEdH");

var $35IZ9 = parcelRequire("35IZ9");

var $fdGPu = parcelRequire("fdGPu");

var $iAi3o = parcelRequire("iAi3o");

var $3XkzC = parcelRequire("3XkzC");

var $gaWeX = parcelRequire("gaWeX");

var $hEsmQ = parcelRequire("hEsmQ");

var $azIPz = parcelRequire("azIPz");

var $1iEDc = parcelRequire("1iEDc");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $0fd4dabd3767b082$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var $0fd4dabd3767b082$var$__param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
};
var $0fd4dabd3767b082$var$__awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
const $0fd4dabd3767b082$export$8929e07d808734d0 = $hEsmQ.registerIcon('extensions-warning-message', $awgRE.Codicon.warning, $4dEdH.localize('warningIcon', 'Icon shown with a warning message in the extensions editor.'));
let $0fd4dabd3767b082$export$db6ed2fe81e44dff = class $0fd4dabd3767b082$export$db6ed2fe81e44dff extends $9cWcn.Disposable {
    constructor(_editor, _editorWorkerService, _workspaceTrustService, instantiationService){
        super();
        this._editor = _editor;
        this._editorWorkerService = _editorWorkerService;
        this._workspaceTrustService = _workspaceTrustService;
        this._highlighter = null;
        this._bannerClosed = false;
        this._updateState = (state)=>{
            if (state && state.hasMore) {
                if (this._bannerClosed) return;
                // This document contains many non-basic ASCII characters.
                const max = Math.max(state.ambiguousCharacterCount, state.nonBasicAsciiCharacterCount, state.invisibleCharacterCount);
                let data;
                if (state.nonBasicAsciiCharacterCount >= max) data = {
                    message: $4dEdH.localize('unicodeHighlighting.thisDocumentHasManyNonBasicAsciiUnicodeCharacters', 'This document contains many non-basic ASCII unicode characters'),
                    command: new $0fd4dabd3767b082$export$bd2d98ee4f877b7c()
                };
                else if (state.ambiguousCharacterCount >= max) data = {
                    message: $4dEdH.localize('unicodeHighlighting.thisDocumentHasManyAmbiguousUnicodeCharacters', 'This document contains many ambiguous unicode characters'),
                    command: new $0fd4dabd3767b082$export$13974d2fac2cb715()
                };
                else if (state.invisibleCharacterCount >= max) data = {
                    message: $4dEdH.localize('unicodeHighlighting.thisDocumentHasManyInvisibleUnicodeCharacters', 'This document contains many invisible unicode characters'),
                    command: new $0fd4dabd3767b082$export$a9f1e8c395a54dc4()
                };
                else throw new Error('Unreachable');
                this._bannerController.show({
                    id: 'unicodeHighlightBanner',
                    message: data.message,
                    icon: $0fd4dabd3767b082$export$8929e07d808734d0,
                    actions: [
                        {
                            label: data.command.shortLabel,
                            href: `command:${data.command.id}`
                        }
                    ],
                    onClose: ()=>{
                        this._bannerClosed = true;
                    }
                });
            } else this._bannerController.hide();
        };
        this._bannerController = this._register(instantiationService.createInstance($3b8c9d83dda09e4d$exports.BannerController, _editor));
        this._register(this._editor.onDidChangeModel(()=>{
            this._bannerClosed = false;
            this._updateHighlighter();
        }));
        this._options = _editor.getOption(112 /* unicodeHighlighting */ );
        this._register(_workspaceTrustService.onDidChangeTrust((e)=>{
            this._updateHighlighter();
        }));
        this._register(_editor.onDidChangeConfiguration((e)=>{
            if (e.hasChanged(112 /* unicodeHighlighting */ )) {
                this._options = _editor.getOption(112 /* unicodeHighlighting */ );
                this._updateHighlighter();
            }
        }));
        this._updateHighlighter();
    }
    dispose() {
        if (this._highlighter) {
            this._highlighter.dispose();
            this._highlighter = null;
        }
        super.dispose();
    }
    _updateHighlighter() {
        this._updateState(null);
        if (this._highlighter) {
            this._highlighter.dispose();
            this._highlighter = null;
        }
        if (!this._editor.hasModel()) return;
        const options = $0fd4dabd3767b082$var$resolveOptions(this._workspaceTrustService.isWorkspaceTrusted(), this._options);
        if ([
            options.nonBasicASCII,
            options.ambiguousCharacters,
            options.invisibleCharacters, 
        ].every((option)=>option === false
        )) // Don't do anything if the feature is fully disabled
        return;
        const highlightOptions = {
            nonBasicASCII: options.nonBasicASCII,
            ambiguousCharacters: options.ambiguousCharacters,
            invisibleCharacters: options.invisibleCharacters,
            includeComments: options.includeComments,
            allowedCodePoints: Object.keys(options.allowedCharacters).map((c)=>c.codePointAt(0)
            )
        };
        if (this._editorWorkerService.canComputeUnicodeHighlights(this._editor.getModel().uri)) this._highlighter = new $0fd4dabd3767b082$var$DocumentUnicodeHighlighter(this._editor, highlightOptions, this._updateState, this._editorWorkerService);
        else this._highlighter = new $0fd4dabd3767b082$var$ViewportUnicodeHighlighter(this._editor, highlightOptions, this._updateState);
    }
    getDecorationInfo(decorationId) {
        if (this._highlighter) return this._highlighter.getDecorationInfo(decorationId);
        return null;
    }
};
$0fd4dabd3767b082$export$db6ed2fe81e44dff.ID = 'editor.contrib.unicodeHighlighter';
$0fd4dabd3767b082$export$db6ed2fe81e44dff = $0fd4dabd3767b082$var$__decorate([
    $0fd4dabd3767b082$var$__param(1, $aPs2m.IEditorWorkerService),
    $0fd4dabd3767b082$var$__param(2, $1iEDc.IWorkspaceTrustManagementService),
    $0fd4dabd3767b082$var$__param(3, $fdGPu.IInstantiationService)
], $0fd4dabd3767b082$export$db6ed2fe81e44dff);
function $0fd4dabd3767b082$var$resolveOptions(trusted, options) {
    var _a;
    return {
        nonBasicASCII: options.nonBasicASCII === $cd4KD.inUntrustedWorkspace ? !trusted : options.nonBasicASCII,
        ambiguousCharacters: options.ambiguousCharacters,
        invisibleCharacters: options.invisibleCharacters,
        includeComments: options.includeComments === $cd4KD.inUntrustedWorkspace ? !trusted : options.includeComments,
        allowedCharacters: (_a = options.allowedCharacters) !== null && _a !== void 0 ? _a : {}
    };
}
let $0fd4dabd3767b082$var$DocumentUnicodeHighlighter = class DocumentUnicodeHighlighter extends $9cWcn.Disposable {
    constructor(_editor, _options, _updateState, _editorWorkerService){
        super();
        this._editor = _editor;
        this._options = _options;
        this._updateState = _updateState;
        this._editorWorkerService = _editorWorkerService;
        this._model = this._editor.getModel();
        this._decorationIds = new Set();
        this._updateSoon = this._register(new $6bXyA.RunOnceScheduler(()=>this._update()
        , 250));
        this._register(this._editor.onDidChangeModelContent(()=>{
            this._updateSoon.schedule();
        }));
        this._updateSoon.schedule();
    }
    dispose() {
        this._decorationIds = new Set(this._model.deltaDecorations(Array.from(this._decorationIds), []));
        super.dispose();
    }
    _update() {
        if (!this._model.mightContainNonBasicASCII()) {
            this._decorationIds = new Set(this._editor.deltaDecorations(Array.from(this._decorationIds), []));
            return;
        }
        const modelVersionId = this._model.getVersionId();
        this._editorWorkerService.computedUnicodeHighlights(this._model.uri, this._options).then((info)=>{
            if (this._model.getVersionId() !== modelVersionId) // model changed in the meantime
            return;
            this._updateState(info);
            const decorations = [];
            if (!info.hasMore) // Don't show decoration if there are too many.
            // In this case, a banner is shown.
            for (const range of info.ranges)decorations.push({
                range: range,
                options: this._options.includeComments ? $0fd4dabd3767b082$var$DECORATION : $0fd4dabd3767b082$var$DECORATION_HIDE_IN_COMMENTS
            });
            this._decorationIds = new Set(this._editor.deltaDecorations(Array.from(this._decorationIds), decorations));
        });
    }
    getDecorationInfo(decorationId) {
        if (!this._decorationIds.has(decorationId)) return null;
        const model = this._editor.getModel();
        const range = model.getDecorationRange(decorationId);
        if (!$9mXLU.isModelDecorationVisible(model, {
            range: range,
            options: this._options.includeComments ? $0fd4dabd3767b082$var$DECORATION : $0fd4dabd3767b082$var$DECORATION_HIDE_IN_COMMENTS,
            id: decorationId,
            ownerId: 0
        })) return null;
        const text = model.getValueInRange(range);
        return {
            reason: $0fd4dabd3767b082$var$computeReason(text, this._options)
        };
    }
};
$0fd4dabd3767b082$var$DocumentUnicodeHighlighter = $0fd4dabd3767b082$var$__decorate([
    $0fd4dabd3767b082$var$__param(3, $aPs2m.IEditorWorkerService)
], $0fd4dabd3767b082$var$DocumentUnicodeHighlighter);
class $0fd4dabd3767b082$var$ViewportUnicodeHighlighter extends $9cWcn.Disposable {
    constructor(_editor, _options, _updateState){
        super();
        this._editor = _editor;
        this._options = _options;
        this._updateState = _updateState;
        this._model = this._editor.getModel();
        this._decorationIds = new Set();
        this._updateSoon = this._register(new $6bXyA.RunOnceScheduler(()=>this._update()
        , 250));
        this._register(this._editor.onDidLayoutChange(()=>{
            this._updateSoon.schedule();
        }));
        this._register(this._editor.onDidScrollChange(()=>{
            this._updateSoon.schedule();
        }));
        this._register(this._editor.onDidChangeHiddenAreas(()=>{
            this._updateSoon.schedule();
        }));
        this._register(this._editor.onDidChangeModelContent(()=>{
            this._updateSoon.schedule();
        }));
        this._updateSoon.schedule();
    }
    dispose() {
        this._decorationIds = new Set(this._model.deltaDecorations(Array.from(this._decorationIds), []));
        super.dispose();
    }
    _update() {
        if (!this._model.mightContainNonBasicASCII()) {
            this._decorationIds = new Set(this._editor.deltaDecorations(Array.from(this._decorationIds), []));
            return;
        }
        const ranges = this._editor.getVisibleRanges();
        const decorations = [];
        const totalResult = {
            ranges: [],
            ambiguousCharacterCount: 0,
            invisibleCharacterCount: 0,
            nonBasicAsciiCharacterCount: 0,
            hasMore: false
        };
        for (const range of ranges){
            const result = $aGrvN.UnicodeTextModelHighlighter.computeUnicodeHighlights(this._model, this._options, range);
            for (const r of result.ranges)totalResult.ranges.push(r);
            totalResult.ambiguousCharacterCount += totalResult.ambiguousCharacterCount;
            totalResult.invisibleCharacterCount += totalResult.invisibleCharacterCount;
            totalResult.nonBasicAsciiCharacterCount += totalResult.nonBasicAsciiCharacterCount;
            totalResult.hasMore = totalResult.hasMore || result.hasMore;
        }
        if (!totalResult.hasMore) // Don't show decorations if there are too many.
        // A banner will be shown instead.
        for (const range1 of totalResult.ranges)decorations.push({
            range: range1,
            options: this._options.includeComments ? $0fd4dabd3767b082$var$DECORATION : $0fd4dabd3767b082$var$DECORATION_HIDE_IN_COMMENTS
        });
        this._updateState(totalResult);
        this._decorationIds = new Set(this._editor.deltaDecorations(Array.from(this._decorationIds), decorations));
    }
    getDecorationInfo(decorationId) {
        if (!this._decorationIds.has(decorationId)) return null;
        const model = this._editor.getModel();
        const range = model.getDecorationRange(decorationId);
        const text = model.getValueInRange(range);
        if (!$9mXLU.isModelDecorationVisible(model, {
            range: range,
            options: this._options.includeComments ? $0fd4dabd3767b082$var$DECORATION : $0fd4dabd3767b082$var$DECORATION_HIDE_IN_COMMENTS,
            id: decorationId,
            ownerId: 0
        })) return null;
        return {
            reason: $0fd4dabd3767b082$var$computeReason(text, this._options)
        };
    }
}
let $0fd4dabd3767b082$export$abfb214dc8905583 = class $0fd4dabd3767b082$export$abfb214dc8905583 {
    constructor(_editor, _hover, _modeService, _openerService){
        this._editor = _editor;
        this._hover = _hover;
        this._modeService = _modeService;
        this._openerService = _openerService;
    }
    computeSync(anchor, lineDecorations) {
        if (!this._editor.hasModel() || anchor.type !== 1 /* Range */ ) return [];
        const model = this._editor.getModel();
        const unicodeHighlighter = this._editor.getContribution($0fd4dabd3767b082$export$db6ed2fe81e44dff.ID);
        const result = [];
        let index = 300;
        for (const d of lineDecorations){
            const highlightInfo = unicodeHighlighter.getDecorationInfo(d.id);
            if (!highlightInfo) continue;
            const char = model.getValueInRange(d.range);
            // text refers to a single character.
            const codePoint1 = char.codePointAt(0);
            function formatCodePoint(codePoint) {
                let value = `\`U+${codePoint.toString(16).padStart(4, '0')}\``;
                if (!$jcr1R.InvisibleCharacters.isInvisibleCharacter(codePoint)) // Don't render any control characters or any invisible characters, as they cannot be seen anyways.
                value += ` "${`${$0fd4dabd3767b082$var$renderCodePointAsInlineCode(codePoint)}`}"`;
                return value;
            }
            const codePointStr = formatCodePoint(codePoint1);
            let reason;
            switch(highlightInfo.reason.kind){
                case 0 /* Ambiguous */ :
                    reason = $4dEdH.localize('unicodeHighlight.characterIsAmbiguous', 'The character {0} could be confused with the character {1}, which is more common in source code.', codePointStr, formatCodePoint(highlightInfo.reason.confusableWith.codePointAt(0)));
                    break;
                case 1 /* Invisible */ :
                    reason = $4dEdH.localize('unicodeHighlight.characterIsInvisible', 'The character {0} is invisible.', codePointStr);
                    break;
                case 2 /* NonBasicAscii */ :
                    reason = $4dEdH.localize('unicodeHighlight.characterIsNonBasicAscii', 'The character {0} is not a basic ASCII character.', codePointStr);
                    break;
            }
            const adjustSettingsArgs = {
                codePoint: codePoint1,
                reason: highlightInfo.reason.kind
            };
            const adjustSettings = $4dEdH.localize('unicodeHighlight.adjustSettings', 'Adjust settings');
            const contents = [
                {
                    value: `${reason} [${adjustSettings}](command:${$0fd4dabd3767b082$export$cc3a119c1042a4c8.ID}?${encodeURIComponent(JSON.stringify(adjustSettingsArgs))})`,
                    isTrusted: true
                }
            ];
            result.push(new $8459e7f81eef09f2$exports.MarkdownHover(this, d.range, contents, index++));
        }
        return result;
    }
    renderHoverParts(hoverParts, fragment, statusBar) {
        return $8459e7f81eef09f2$exports.renderMarkdownHovers(hoverParts, fragment, this._editor, this._hover, this._modeService, this._openerService);
    }
};
$0fd4dabd3767b082$export$abfb214dc8905583 = $0fd4dabd3767b082$var$__decorate([
    $0fd4dabd3767b082$var$__param(2, $is5YK.IModeService),
    $0fd4dabd3767b082$var$__param(3, $iAi3o.IOpenerService)
], $0fd4dabd3767b082$export$abfb214dc8905583);
function $0fd4dabd3767b082$var$renderCodePointAsInlineCode(codePoint) {
    if (codePoint === 96 /* BackTick */ ) return '`` ` ``';
    return '`' + String.fromCodePoint(codePoint) + '`';
}
function $0fd4dabd3767b082$var$computeReason(char, options) {
    return $aGrvN.UnicodeTextModelHighlighter.computeUnicodeHighlightReason(char, options);
}
const $0fd4dabd3767b082$var$DECORATION_HIDE_IN_COMMENTS = $91ntV.ModelDecorationOptions.register({
    description: 'unicode-highlight',
    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */ ,
    className: 'unicode-highlight',
    showIfCollapsed: true,
    overviewRuler: {
        color: $azIPz.themeColorFromId($gaWeX.overviewRulerUnicodeHighlightForeground),
        position: $1Y4vr.OverviewRulerLane.Center
    },
    minimap: {
        color: $azIPz.themeColorFromId($gaWeX.minimapUnicodeHighlight),
        position: $1Y4vr.MinimapPosition.Inline
    },
    hideInCommentTokens: true
});
const $0fd4dabd3767b082$var$DECORATION = $91ntV.ModelDecorationOptions.register({
    description: 'unicode-highlight',
    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */ ,
    className: 'unicode-highlight',
    showIfCollapsed: true,
    overviewRuler: {
        color: $azIPz.themeColorFromId($gaWeX.overviewRulerFindMatchForeground),
        position: $1Y4vr.OverviewRulerLane.Center
    },
    minimap: {
        color: $azIPz.themeColorFromId($gaWeX.minimapFindMatch),
        position: $1Y4vr.MinimapPosition.Inline
    }
});
class $0fd4dabd3767b082$export$13974d2fac2cb715 extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: $0fd4dabd3767b082$export$13974d2fac2cb715.ID,
            label: $4dEdH.localize('action.unicodeHighlight.disableHighlightingOfAmbiguousCharacters', 'Disable highlighting of ambiguous characters'),
            alias: 'Disable highlighting of ambiguous characters',
            precondition: undefined
        });
        this.shortLabel = $4dEdH.localize('unicodeHighlight.disableHighlightingOfAmbiguousCharacters.shortLabel', 'Disable Ambiguous Highlight');
    }
    run(accessor, editor, args) {
        return $0fd4dabd3767b082$var$__awaiter(this, void 0, void 0, function*() {
            let configurationService = accessor === null || accessor === void 0 ? void 0 : accessor.get($35IZ9.IConfigurationService);
            if (configurationService) this.runAction(configurationService);
        });
    }
    runAction(configurationService) {
        return $0fd4dabd3767b082$var$__awaiter(this, void 0, void 0, function*() {
            yield configurationService.updateValue($cd4KD.unicodeHighlightConfigKeys.ambiguousCharacters, false, 1 /* USER */ );
        });
    }
}
$0fd4dabd3767b082$export$13974d2fac2cb715.ID = 'editor.action.unicodeHighlight.disableHighlightingOfAmbiguousCharacters';
class $0fd4dabd3767b082$export$a9f1e8c395a54dc4 extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: $0fd4dabd3767b082$export$a9f1e8c395a54dc4.ID,
            label: $4dEdH.localize('action.unicodeHighlight.disableHighlightingOfInvisibleCharacters', 'Disable highlighting of invisible characters'),
            alias: 'Disable highlighting of invisible characters',
            precondition: undefined
        });
        this.shortLabel = $4dEdH.localize('unicodeHighlight.disableHighlightingOfInvisibleCharacters.shortLabel', 'Disable Invisible Highlight');
    }
    run(accessor, editor, args) {
        return $0fd4dabd3767b082$var$__awaiter(this, void 0, void 0, function*() {
            let configurationService = accessor === null || accessor === void 0 ? void 0 : accessor.get($35IZ9.IConfigurationService);
            if (configurationService) this.runAction(configurationService);
        });
    }
    runAction(configurationService) {
        return $0fd4dabd3767b082$var$__awaiter(this, void 0, void 0, function*() {
            yield configurationService.updateValue($cd4KD.unicodeHighlightConfigKeys.invisibleCharacters, false, 1 /* USER */ );
        });
    }
}
$0fd4dabd3767b082$export$a9f1e8c395a54dc4.ID = 'editor.action.unicodeHighlight.disableHighlightingOfInvisibleCharacters';
class $0fd4dabd3767b082$export$bd2d98ee4f877b7c extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: $0fd4dabd3767b082$export$bd2d98ee4f877b7c.ID,
            label: $4dEdH.localize('action.unicodeHighlight.disableHighlightingOfNonBasicAsciiCharacters', 'Disable highlighting of non basic ASCII characters'),
            alias: 'Disable highlighting of non basic ASCII characters',
            precondition: undefined
        });
        this.shortLabel = $4dEdH.localize('unicodeHighlight.disableHighlightingOfNonBasicAsciiCharacters.shortLabel', 'Disable Non ASCII Highlight');
    }
    run(accessor, editor, args) {
        return $0fd4dabd3767b082$var$__awaiter(this, void 0, void 0, function*() {
            let configurationService = accessor === null || accessor === void 0 ? void 0 : accessor.get($35IZ9.IConfigurationService);
            if (configurationService) this.runAction(configurationService);
        });
    }
    runAction(configurationService) {
        return $0fd4dabd3767b082$var$__awaiter(this, void 0, void 0, function*() {
            yield configurationService.updateValue($cd4KD.unicodeHighlightConfigKeys.nonBasicASCII, false, 1 /* USER */ );
        });
    }
}
$0fd4dabd3767b082$export$bd2d98ee4f877b7c.ID = 'editor.action.unicodeHighlight.disableHighlightingOfNonBasicAsciiCharacters';
class $0fd4dabd3767b082$export$cc3a119c1042a4c8 extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: $0fd4dabd3767b082$export$cc3a119c1042a4c8.ID,
            label: $4dEdH.localize('action.unicodeHighlight.showExcludeOptions', "Show Exclude Options"),
            alias: 'Show Exclude Options',
            precondition: undefined
        });
    }
    run(accessor, editor, args) {
        return $0fd4dabd3767b082$var$__awaiter(this, void 0, void 0, function*() {
            const { codePoint: codePoint3 , reason: reason  } = args;
            const char = String.fromCodePoint(codePoint3);
            const quickPickService = accessor.get($3XkzC.IQuickInputService);
            const configurationService = accessor.get($35IZ9.IConfigurationService);
            function getExcludeCharFromBeingHighlightedLabel(codePoint) {
                if ($jcr1R.InvisibleCharacters.isInvisibleCharacter(codePoint)) return $4dEdH.localize('unicodeHighlight.excludeInvisibleCharFromBeingHighlighted', 'Exclude {0} (invisible character) from being highlighted', `U+${codePoint.toString(16)}`);
                return $4dEdH.localize('unicodeHighlight.excludeCharFromBeingHighlighted', 'Exclude {0} from being highlighted', `U+${codePoint.toString(16)} "${char}"`);
            }
            const options = [
                {
                    label: getExcludeCharFromBeingHighlightedLabel(codePoint3),
                    run: ()=>$0fd4dabd3767b082$var$excludeCharFromBeingHighlighted(configurationService, [
                            codePoint3
                        ])
                }, 
            ];
            if (reason === 0 /* Ambiguous */ ) {
                const action = new $0fd4dabd3767b082$export$13974d2fac2cb715();
                options.push({
                    label: action.label,
                    run: ()=>$0fd4dabd3767b082$var$__awaiter(this, void 0, void 0, function*() {
                            return action.runAction(configurationService);
                        })
                });
            } else if (reason === 1 /* Invisible */ ) {
                const action = new $0fd4dabd3767b082$export$a9f1e8c395a54dc4();
                options.push({
                    label: action.label,
                    run: ()=>$0fd4dabd3767b082$var$__awaiter(this, void 0, void 0, function*() {
                            return action.runAction(configurationService);
                        })
                });
            } else if (reason === 2 /* NonBasicAscii */ ) {
                const action = new $0fd4dabd3767b082$export$bd2d98ee4f877b7c();
                options.push({
                    label: action.label,
                    run: ()=>$0fd4dabd3767b082$var$__awaiter(this, void 0, void 0, function*() {
                            return action.runAction(configurationService);
                        })
                });
            } else $0fd4dabd3767b082$var$expectNever(reason);
            const result = yield quickPickService.pick(options, {
                title: $4dEdH.localize('unicodeHighlight.configureUnicodeHighlightOptions', 'Configure Unicode Highlight Options')
            });
            if (result) yield result.run();
        });
    }
}
$0fd4dabd3767b082$export$cc3a119c1042a4c8.ID = 'editor.action.unicodeHighlight.showExcludeOptions';
function $0fd4dabd3767b082$var$excludeCharFromBeingHighlighted(configurationService, charCodes) {
    return $0fd4dabd3767b082$var$__awaiter(this, void 0, void 0, function*() {
        const existingValue = configurationService.getValue($cd4KD.unicodeHighlightConfigKeys.allowedCharacters);
        let value;
        if (typeof existingValue === 'object' && existingValue) value = existingValue;
        else value = {};
        for (const charCode of charCodes)value[String.fromCodePoint(charCode)] = true;
        yield configurationService.updateValue($cd4KD.unicodeHighlightConfigKeys.allowedCharacters, value, 1 /* USER */ );
    });
}
function $0fd4dabd3767b082$var$expectNever(value) {
    throw new Error(`Unexpected value: ${value}`);
}
$2iJTi.registerEditorAction($0fd4dabd3767b082$export$13974d2fac2cb715);
$2iJTi.registerEditorAction($0fd4dabd3767b082$export$a9f1e8c395a54dc4);
$2iJTi.registerEditorAction($0fd4dabd3767b082$export$bd2d98ee4f877b7c);
$2iJTi.registerEditorAction($0fd4dabd3767b082$export$cc3a119c1042a4c8);
$2iJTi.registerEditorContribution($0fd4dabd3767b082$export$db6ed2fe81e44dff.ID, $0fd4dabd3767b082$export$db6ed2fe81e44dff);



var $6bXyA = parcelRequire("6bXyA");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $0ce1866a32ac636a$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var $0ce1866a32ac636a$var$__param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
};
const $0ce1866a32ac636a$var$$ = $bDzmQ.$;
let $0ce1866a32ac636a$var$EditorHoverStatusBar = class EditorHoverStatusBar extends $9cWcn.Disposable {
    constructor(_keybindingService){
        super();
        this._keybindingService = _keybindingService;
        this._hasContent = false;
        this.hoverElement = $0ce1866a32ac636a$var$$('div.hover-row.status-bar');
        this.actionsElement = $bDzmQ.append(this.hoverElement, $0ce1866a32ac636a$var$$('div.actions'));
    }
    get hasContent() {
        return this._hasContent;
    }
    addAction(actionOptions) {
        const keybinding = this._keybindingService.lookupKeybinding(actionOptions.commandId);
        const keybindingLabel = keybinding ? keybinding.getLabel() : null;
        this._hasContent = true;
        return this._register($e29efaa31939aae6$export$bc0ed2dd33dfd810.render(this.actionsElement, actionOptions, keybindingLabel));
    }
    append(element) {
        const result = $bDzmQ.append(this.actionsElement, element);
        this._hasContent = true;
        return result;
    }
};
$0ce1866a32ac636a$var$EditorHoverStatusBar = $0ce1866a32ac636a$var$__decorate([
    $0ce1866a32ac636a$var$__param(0, $7IxGd.IKeybindingService)
], $0ce1866a32ac636a$var$EditorHoverStatusBar);
class $0ce1866a32ac636a$var$ModesContentComputer {
    constructor(editor, _participants){
        this._participants = _participants;
        this._editor = editor;
        this._result = [];
        this._anchor = null;
    }
    setAnchor(anchor) {
        this._anchor = anchor;
        this._result = [];
    }
    clearResult() {
        this._result = [];
    }
    static _getLineDecorations(editor, anchor) {
        if (anchor.type !== 1 /* Range */ ) return [];
        const model = editor.getModel();
        const lineNumber = anchor.range.startLineNumber;
        const maxColumn = model.getLineMaxColumn(lineNumber);
        return editor.getLineDecorations(lineNumber).filter((d)=>{
            if (d.options.isWholeLine) return true;
            const startColumn = d.range.startLineNumber === lineNumber ? d.range.startColumn : 1;
            const endColumn = d.range.endLineNumber === lineNumber ? d.range.endColumn : maxColumn;
            if (d.options.showIfCollapsed) {
                // Relax check around `showIfCollapsed` decorations to also include +/- 1 character
                if (startColumn > anchor.range.startColumn + 1 || anchor.range.endColumn - 1 > endColumn) return false;
            } else {
                if (startColumn > anchor.range.startColumn || anchor.range.endColumn > endColumn) return false;
            }
            return true;
        });
    }
    computeAsync(token) {
        const anchor = this._anchor;
        if (!this._editor.hasModel() || !anchor) return $6bXyA.AsyncIterableObject.EMPTY;
        const lineDecorations = $0ce1866a32ac636a$var$ModesContentComputer._getLineDecorations(this._editor, anchor);
        return $6bXyA.AsyncIterableObject.merge(this._participants.map((participant)=>this._computeAsync(participant, lineDecorations, anchor, token)
        ));
    }
    _computeAsync(participant, lineDecorations, anchor, token) {
        if (!participant.computeAsync) return $6bXyA.AsyncIterableObject.EMPTY;
        return participant.computeAsync(anchor, lineDecorations, token);
    }
    computeSync() {
        if (!this._editor.hasModel() || !this._anchor) return [];
        const lineDecorations = $0ce1866a32ac636a$var$ModesContentComputer._getLineDecorations(this._editor, this._anchor);
        let result = [];
        for (const participant of this._participants)result = result.concat(participant.computeSync(this._anchor, lineDecorations));
        return $kJ8UG.coalesce(result);
    }
    onResult(result, isFromSynchronousComputation) {
        // Always put synchronous messages before asynchronous ones
        if (isFromSynchronousComputation) this._result = result.concat(this._result);
        else this._result = this._result.concat(result);
    }
    getResult() {
        return this._result.slice(0);
    }
    getResultWithLoadingMessage() {
        if (this._anchor) {
            for (const participant of this._participants)if (participant.createLoadingMessage) {
                const loadingMessage = participant.createLoadingMessage(this._anchor);
                if (loadingMessage) return this._result.slice(0).concat([
                    loadingMessage
                ]);
            }
        }
        return this._result.slice(0);
    }
}
let $0ce1866a32ac636a$export$27477712c6ad8b14 = class $0ce1866a32ac636a$export$27477712c6ad8b14 extends $fxJYg.Widget {
    constructor(editor, _hoverVisibleKey, instantiationService, _keybindingService, _contextKeyService){
        super();
        this._hoverVisibleKey = _hoverVisibleKey;
        this._keybindingService = _keybindingService;
        this._contextKeyService = _contextKeyService;
        // IContentWidget.allowEditorOverflow
        this.allowEditorOverflow = true;
        this._participants = [
            instantiationService.createInstance($7dc94ba1d30207cb$exports.ColorHoverParticipant, editor, this),
            instantiationService.createInstance($8459e7f81eef09f2$exports.MarkdownHoverParticipant, editor, this),
            instantiationService.createInstance($a95621aefca04020$exports.InlineCompletionsHoverParticipant, editor, this),
            instantiationService.createInstance($0fd4dabd3767b082$exports.UnicodeHighlighterHoverParticipant, editor, this),
            instantiationService.createInstance($f87cd0a2b877197d$exports.MarkerHoverParticipant, editor, this), 
        ];
        this._editor = editor;
        this._isVisible = false;
        this._stoleFocus = false;
        this._renderDisposable = null;
        this._hover = this._register(new $e29efaa31939aae6$export$bd9cbe052e594410());
        this._hover.containerDomNode.classList.toggle('hidden', !this._isVisible);
        this.onkeydown(this._hover.containerDomNode, (e)=>{
            if (e.equals(9 /* Escape */ )) this.hide();
        });
        this._register(this._editor.onDidChangeConfiguration((e)=>{
            if (e.hasChanged(43 /* fontInfo */ )) this._updateFont();
        }));
        this._editor.onDidLayoutChange(()=>this.layout()
        );
        this.layout();
        this._editor.addContentWidget(this);
        this._showAtPosition = null;
        this._showAtRange = null;
        this._stoleFocus = false;
        this._messages = [];
        this._messagesAreComplete = false;
        this._lastAnchor = null;
        this._computer = new $0ce1866a32ac636a$var$ModesContentComputer(this._editor, this._participants);
        this._highlightDecorations = [];
        this._isChangingDecorations = false;
        this._shouldFocus = false;
        this._colorPicker = null;
        this._preferAbove = this._editor.getOption(52 /* hover */ ).above;
        this._hoverOperation = new $07191fb782b2e743$exports.HoverOperation(this._computer, (result)=>this._withResult(result, true)
        , null, (result)=>this._withResult(result, false)
        , this._editor.getOption(52 /* hover */ ).delay);
        this._register($bDzmQ.addStandardDisposableListener(this.getDomNode(), $bDzmQ.EventType.FOCUS, ()=>{
            if (this._colorPicker) this.getDomNode().classList.add('colorpicker-hover');
        }));
        this._register($bDzmQ.addStandardDisposableListener(this.getDomNode(), $bDzmQ.EventType.BLUR, ()=>{
            this.getDomNode().classList.remove('colorpicker-hover');
        }));
        this._register(editor.onDidChangeConfiguration(()=>{
            this._hoverOperation.setHoverTime(this._editor.getOption(52 /* hover */ ).delay);
            this._preferAbove = this._editor.getOption(52 /* hover */ ).above;
        }));
        this._register($4PmRQ.TokenizationRegistry.onDidChange(()=>{
            if (this._isVisible && this._lastAnchor && this._messages.length > 0) {
                this._hover.contentsDomNode.textContent = '';
                this._renderMessages(this._lastAnchor, this._messages);
            }
        }));
    }
    dispose() {
        this._hoverOperation.cancel();
        this._editor.removeContentWidget(this);
        super.dispose();
    }
    getId() {
        return $0ce1866a32ac636a$export$27477712c6ad8b14.ID;
    }
    getDomNode() {
        return this._hover.containerDomNode;
    }
    _shouldShowAt(mouseEvent) {
        const targetType = mouseEvent.target.type;
        if (targetType === 6 /* CONTENT_TEXT */ ) return true;
        if (targetType === 7 /* CONTENT_EMPTY */ ) {
            const epsilon = this._editor.getOption(43 /* fontInfo */ ).typicalHalfwidthCharacterWidth / 2;
            const data = mouseEvent.target.detail;
            if (data && !data.isAfterLines && typeof data.horizontalDistanceToText === 'number' && data.horizontalDistanceToText < epsilon) // Let hover kick in even when the mouse is technically in the empty area after a line, given the distance is small enough
            return true;
        }
        return false;
    }
    maybeShowAt(mouseEvent) {
        var _a;
        const anchorCandidates = [];
        for (const participant of this._participants)if (typeof participant.suggestHoverAnchor === 'function') {
            const anchor = participant.suggestHoverAnchor(mouseEvent);
            if (anchor) anchorCandidates.push(anchor);
        }
        if (this._shouldShowAt(mouseEvent) && mouseEvent.target.range) {
            // TODO@rebornix. This should be removed if we move Color Picker out of Hover component.
            // Check if mouse is hovering on color decorator
            const hoverOnColorDecorator = [
                ...((_a = mouseEvent.target.element) === null || _a === void 0 ? void 0 : _a.classList.values()) || []
            ].find((className)=>className.startsWith('ced-colorBox')
            ) && mouseEvent.target.range.endColumn - mouseEvent.target.range.startColumn === 1;
            const showAtRange = hoverOnColorDecorator // shift the mouse focus by one as color decorator is a `before` decoration of next character.
             ? new $d00il.Range(mouseEvent.target.range.startLineNumber, mouseEvent.target.range.startColumn + 1, mouseEvent.target.range.endLineNumber, mouseEvent.target.range.endColumn + 1) : mouseEvent.target.range;
            anchorCandidates.push(new $ba5b81fb43f4256d$export$2a967524099ecc2c(0, showAtRange));
        }
        if (anchorCandidates.length === 0) return false;
        anchorCandidates.sort((a, b)=>b.priority - a.priority
        );
        this._startShowingAt(anchorCandidates[0], 0 /* Delayed */ , false);
        return true;
    }
    _showAt(position, range, focus) {
        // Position has changed
        this._showAtPosition = position;
        this._showAtRange = range;
        this._hoverVisibleKey.set(true);
        this._isVisible = true;
        this._hover.containerDomNode.classList.toggle('hidden', !this._isVisible);
        this._editor.layoutContentWidget(this);
        // Simply force a synchronous render on the editor
        // such that the widget does not really render with left = '0px'
        this._editor.render();
        this._stoleFocus = focus;
        if (focus) this._hover.containerDomNode.focus();
    }
    getPosition() {
        if (this._isVisible) {
            let preferAbove = this._preferAbove;
            if (!preferAbove && this._contextKeyService.getContextKeyValue($63d2440bdac663c3$exports.Context.Visible.key)) // Prefer rendering above if the suggest widget is visible
            preferAbove = true;
            return {
                position: this._showAtPosition,
                range: this._showAtRange,
                preference: preferAbove ? [
                    1 /* ABOVE */ ,
                    2 /* BELOW */ , 
                ] : [
                    2 /* BELOW */ ,
                    1 /* ABOVE */ , 
                ]
            };
        }
        return null;
    }
    _updateFont() {
        const codeClasses = Array.prototype.slice.call(this._hover.contentsDomNode.getElementsByClassName('code'));
        codeClasses.forEach((node)=>this._editor.applyFontInfo(node)
        );
    }
    _updateContents(node) {
        this._hover.contentsDomNode.textContent = '';
        this._hover.contentsDomNode.appendChild(node);
        this._updateFont();
        this._editor.layoutContentWidget(this);
        this._hover.onContentsChanged();
    }
    layout() {
        const height = Math.max(this._editor.getLayoutInfo().height / 4, 250);
        const { fontSize: fontSize , lineHeight: lineHeight  } = this._editor.getOption(43 /* fontInfo */ );
        this._hover.contentsDomNode.style.fontSize = `${fontSize}px`;
        this._hover.contentsDomNode.style.lineHeight = `${lineHeight / fontSize}`;
        this._hover.contentsDomNode.style.maxHeight = `${height}px`;
        this._hover.contentsDomNode.style.maxWidth = `${Math.max(this._editor.getLayoutInfo().width * 0.66, 500)}px`;
    }
    onModelDecorationsChanged() {
        if (this._isChangingDecorations) return;
        if (this._isVisible) {
            // The decorations have changed and the hover is visible,
            // we need to recompute the displayed text
            this._hoverOperation.cancel();
            this._computer.clearResult();
            if (!this._colorPicker) this._hoverOperation.start(0 /* Delayed */ );
        }
    }
    startShowingAtRange(range, mode, focus) {
        this._startShowingAt(new $ba5b81fb43f4256d$export$2a967524099ecc2c(0, range), mode, focus);
    }
    _startShowingAt(anchor, mode, focus) {
        if (this._lastAnchor && this._lastAnchor.equals(anchor)) // We have to show the widget at the exact same range as before, so no work is needed
        return;
        this._hoverOperation.cancel();
        if (this._isVisible) {
            // The range might have changed, but the hover is visible
            // Instead of hiding it completely, filter out messages that are still in the new range and
            // kick off a new computation
            if (!this._showAtPosition || !this._lastAnchor || !anchor.canAdoptVisibleHover(this._lastAnchor, this._showAtPosition)) this.hide();
            else {
                const filteredMessages = this._messages.filter((m)=>m.isValidForHoverAnchor(anchor)
                );
                if (filteredMessages.length === 0) this.hide();
                else if (filteredMessages.length === this._messages.length && this._messagesAreComplete) // no change
                return;
                else this._renderMessages(anchor, filteredMessages);
            }
        }
        this._lastAnchor = anchor;
        this._computer.setAnchor(anchor);
        this._shouldFocus = focus;
        this._hoverOperation.start(mode);
    }
    hide() {
        this._lastAnchor = null;
        this._hoverOperation.cancel();
        if (this._isVisible) {
            setTimeout(()=>{
                // Give commands a chance to see the key
                if (!this._isVisible) this._hoverVisibleKey.set(false);
            }, 0);
            this._isVisible = false;
            this._hover.containerDomNode.classList.toggle('hidden', !this._isVisible);
            this._editor.layoutContentWidget(this);
            if (this._stoleFocus) this._editor.focus();
        }
        this._isChangingDecorations = true;
        this._highlightDecorations = this._editor.deltaDecorations(this._highlightDecorations, []);
        this._isChangingDecorations = false;
        if (this._renderDisposable) {
            this._renderDisposable.dispose();
            this._renderDisposable = null;
        }
        this._colorPicker = null;
    }
    isColorPickerVisible() {
        return !!this._colorPicker;
    }
    setColorPicker(widget) {
        this._colorPicker = widget;
    }
    onContentsChanged() {
        this._hover.onContentsChanged();
    }
    _withResult(result, complete) {
        this._messages = result;
        this._messagesAreComplete = complete;
        if (this._lastAnchor && this._messages.length > 0) this._renderMessages(this._lastAnchor, this._messages);
        else if (complete) this.hide();
    }
    _renderMessages(anchor, messages) {
        if (this._renderDisposable) {
            this._renderDisposable.dispose();
            this._renderDisposable = null;
        }
        this._colorPicker = null; // TODO: TypeScript thinks this is always null
        // update column from which to show
        let renderColumn = 1073741824 /* MAX_SAFE_SMALL_INTEGER */ ;
        let highlightRange = messages[0].range;
        let forceShowAtRange = null;
        let fragment = document.createDocumentFragment();
        const disposables = new $9cWcn.DisposableStore();
        const hoverParts = new Map();
        for (const msg of messages){
            renderColumn = Math.min(renderColumn, msg.range.startColumn);
            highlightRange = $d00il.Range.plusRange(highlightRange, msg.range);
            if (msg.forceShowAtRange) forceShowAtRange = msg.range;
            if (!hoverParts.has(msg.owner)) hoverParts.set(msg.owner, []);
            const dest = hoverParts.get(msg.owner);
            dest.push(msg);
        }
        const statusBar = disposables.add(new $0ce1866a32ac636a$var$EditorHoverStatusBar(this._keybindingService));
        for (const participant of this._participants)if (hoverParts.has(participant)) {
            const participantHoverParts = hoverParts.get(participant);
            disposables.add(participant.renderHoverParts(participantHoverParts, fragment, statusBar));
        }
        if (statusBar.hasContent) fragment.appendChild(statusBar.hoverElement);
        this._renderDisposable = disposables;
        // show
        if (fragment.hasChildNodes()) {
            if (forceShowAtRange) this._showAt(forceShowAtRange.getStartPosition(), forceShowAtRange, this._shouldFocus);
            else this._showAt(new $dcxQ7.Position(anchor.range.startLineNumber, renderColumn), highlightRange, this._shouldFocus);
            this._updateContents(fragment);
        }
        if (this._colorPicker) this._colorPicker.layout();
        this._isChangingDecorations = true;
        this._highlightDecorations = this._editor.deltaDecorations(this._highlightDecorations, highlightRange ? [
            {
                range: highlightRange,
                options: $0ce1866a32ac636a$export$27477712c6ad8b14._DECORATION_OPTIONS
            }
        ] : []);
        this._isChangingDecorations = false;
    }
};
$0ce1866a32ac636a$export$27477712c6ad8b14.ID = 'editor.contrib.modesContentHoverWidget';
$0ce1866a32ac636a$export$27477712c6ad8b14._DECORATION_OPTIONS = $91ntV.ModelDecorationOptions.register({
    description: 'content-hover-highlight',
    className: 'hoverHighlight'
});
$0ce1866a32ac636a$export$27477712c6ad8b14 = $0ce1866a32ac636a$var$__decorate([
    $0ce1866a32ac636a$var$__param(2, $fdGPu.IInstantiationService),
    $0ce1866a32ac636a$var$__param(3, $7IxGd.IKeybindingService),
    $0ce1866a32ac636a$var$__param(4, $cxCeF.IContextKeyService)
], $0ce1866a32ac636a$export$27477712c6ad8b14);



var $bDzmQ = parcelRequire("bDzmQ");

var $kJ8UG = parcelRequire("kJ8UG");

var $iGmb0 = parcelRequire("iGmb0");

var $9cWcn = parcelRequire("9cWcn");



var $fxJYg = parcelRequire("fxJYg");

var $iAi3o = parcelRequire("iAi3o");

const $3b9472a1f6387b4b$var$$ = $bDzmQ.$;
class $3b9472a1f6387b4b$var$MarginComputer {
    constructor(editor){
        this._editor = editor;
        this._lineNumber = -1;
        this._result = [];
    }
    setLineNumber(lineNumber) {
        this._lineNumber = lineNumber;
        this._result = [];
    }
    clearResult() {
        this._result = [];
    }
    computeSync() {
        const toHoverMessage = (contents)=>{
            return {
                value: contents
            };
        };
        const lineDecorations = this._editor.getLineDecorations(this._lineNumber);
        const result = [];
        if (!lineDecorations) return result;
        for (const d of lineDecorations){
            if (!d.options.glyphMarginClassName) continue;
            const hoverMessage = d.options.glyphMarginHoverMessage;
            if (!hoverMessage || $iGmb0.isEmptyMarkdownString(hoverMessage)) continue;
            result.push(...$kJ8UG.asArray(hoverMessage).map(toHoverMessage));
        }
        return result;
    }
    onResult(result, isFromSynchronousComputation) {
        this._result = this._result.concat(result);
    }
    getResult() {
        return this._result;
    }
    getResultWithLoadingMessage() {
        return this.getResult();
    }
}
class $3b9472a1f6387b4b$export$5b5b89fc3da37c5f extends $fxJYg.Widget {
    constructor(editor, modeService, openerService = $iAi3o.NullOpenerService){
        super();
        this._renderDisposeables = this._register(new $9cWcn.DisposableStore());
        this._editor = editor;
        this._isVisible = false;
        this._messages = [];
        this._lastLineNumber = -1;
        this._hover = this._register(new $e29efaa31939aae6$export$bd9cbe052e594410());
        this._hover.containerDomNode.classList.toggle('hidden', !this._isVisible);
        this._markdownRenderer = this._register(new $0f615ea767437954$exports.MarkdownRenderer({
            editor: this._editor
        }, modeService, openerService));
        this._computer = new $3b9472a1f6387b4b$var$MarginComputer(this._editor);
        this._hoverOperation = new $07191fb782b2e743$exports.HoverOperation(this._computer, (result)=>this._withResult(result)
        , undefined, (result)=>this._withResult(result)
        , 300);
        this._register(this._editor.onDidChangeConfiguration((e)=>{
            if (e.hasChanged(43 /* fontInfo */ )) this._updateFont();
        }));
        this._editor.addOverlayWidget(this);
    }
    dispose() {
        this._hoverOperation.cancel();
        this._editor.removeOverlayWidget(this);
        super.dispose();
    }
    getId() {
        return $3b9472a1f6387b4b$export$5b5b89fc3da37c5f.ID;
    }
    getDomNode() {
        return this._hover.containerDomNode;
    }
    getPosition() {
        return null;
    }
    _showAt(lineNumber) {
        if (!this._isVisible) {
            this._isVisible = true;
            this._hover.containerDomNode.classList.toggle('hidden', !this._isVisible);
        }
        const editorLayout = this._editor.getLayoutInfo();
        const topForLineNumber = this._editor.getTopForLineNumber(lineNumber);
        const editorScrollTop = this._editor.getScrollTop();
        const lineHeight = this._editor.getOption(58 /* lineHeight */ );
        const nodeHeight = this._hover.containerDomNode.clientHeight;
        const top = topForLineNumber - editorScrollTop - (nodeHeight - lineHeight) / 2;
        this._hover.containerDomNode.style.left = `${editorLayout.glyphMarginLeft + editorLayout.glyphMarginWidth}px`;
        this._hover.containerDomNode.style.top = `${Math.max(Math.round(top), 0)}px`;
    }
    _updateFont() {
        const codeClasses = Array.prototype.slice.call(this._hover.contentsDomNode.getElementsByClassName('code'));
        codeClasses.forEach((node)=>this._editor.applyFontInfo(node)
        );
    }
    _updateContents(node) {
        this._hover.contentsDomNode.textContent = '';
        this._hover.contentsDomNode.appendChild(node);
        this._updateFont();
    }
    onModelDecorationsChanged() {
        if (this._isVisible) {
            // The decorations have changed and the hover is visible,
            // we need to recompute the displayed text
            this._hoverOperation.cancel();
            this._computer.clearResult();
            this._hoverOperation.start(0 /* Delayed */ );
        }
    }
    startShowingAt(lineNumber) {
        if (this._lastLineNumber === lineNumber) // We have to show the widget at the exact same line number as before, so no work is needed
        return;
        this._hoverOperation.cancel();
        this.hide();
        this._lastLineNumber = lineNumber;
        this._computer.setLineNumber(lineNumber);
        this._hoverOperation.start(0 /* Delayed */ );
    }
    hide() {
        this._lastLineNumber = -1;
        this._hoverOperation.cancel();
        if (!this._isVisible) return;
        this._isVisible = false;
        this._hover.containerDomNode.classList.toggle('hidden', !this._isVisible);
    }
    _withResult(result) {
        this._messages = result;
        if (this._messages.length > 0) this._renderMessages(this._lastLineNumber, this._messages);
        else this.hide();
    }
    _renderMessages(lineNumber, messages) {
        this._renderDisposeables.clear();
        const fragment = document.createDocumentFragment();
        for (const msg of messages){
            const markdownHoverElement = $3b9472a1f6387b4b$var$$('div.hover-row.markdown-hover');
            const hoverContentsElement = $bDzmQ.append(markdownHoverElement, $3b9472a1f6387b4b$var$$('div.hover-contents'));
            const renderedContents = this._renderDisposeables.add(this._markdownRenderer.render(msg.value));
            hoverContentsElement.appendChild(renderedContents.element);
            fragment.appendChild(markdownHoverElement);
        }
        this._updateContents(fragment);
        this._showAt(lineNumber);
    }
}
$3b9472a1f6387b4b$export$5b5b89fc3da37c5f.ID = 'editor.contrib.modesGlyphHoverWidget';



var $4dEdH = parcelRequire("4dEdH");

var $cxCeF = parcelRequire("cxCeF");

var $fdGPu = parcelRequire("fdGPu");

var $iAi3o = parcelRequire("iAi3o");

var $gaWeX = parcelRequire("gaWeX");

var $azIPz = parcelRequire("azIPz");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $2856eeccefbc7426$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var $2856eeccefbc7426$var$__param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
};
let $2856eeccefbc7426$export$5fb2eabf73ef0293 = class $2856eeccefbc7426$export$5fb2eabf73ef0293 {
    constructor(_editor, _instantiationService, _openerService, _modeService, _contextKeyService){
        this._editor = _editor;
        this._instantiationService = _instantiationService;
        this._openerService = _openerService;
        this._modeService = _modeService;
        this._toUnhook = new $9cWcn.DisposableStore();
        this._isMouseDown = false;
        this._hoverClicked = false;
        this._contentWidget = null;
        this._glyphWidget = null;
        this._hookEvents();
        this._didChangeConfigurationHandler = this._editor.onDidChangeConfiguration((e)=>{
            if (e.hasChanged(52 /* hover */ )) {
                this._unhookEvents();
                this._hookEvents();
            }
        });
        this._hoverVisibleKey = $ibKGQ.EditorContextKeys.hoverVisible.bindTo(_contextKeyService);
    }
    static get(editor) {
        return editor.getContribution($2856eeccefbc7426$export$5fb2eabf73ef0293.ID);
    }
    _hookEvents() {
        const hideWidgetsEventHandler = ()=>this._hideWidgets()
        ;
        const hoverOpts = this._editor.getOption(52 /* hover */ );
        this._isHoverEnabled = hoverOpts.enabled;
        this._isHoverSticky = hoverOpts.sticky;
        if (this._isHoverEnabled) {
            this._toUnhook.add(this._editor.onMouseDown((e)=>this._onEditorMouseDown(e)
            ));
            this._toUnhook.add(this._editor.onMouseUp((e)=>this._onEditorMouseUp(e)
            ));
            this._toUnhook.add(this._editor.onMouseMove((e)=>this._onEditorMouseMove(e)
            ));
            this._toUnhook.add(this._editor.onKeyDown((e)=>this._onKeyDown(e)
            ));
            this._toUnhook.add(this._editor.onDidChangeModelDecorations(()=>this._onModelDecorationsChanged()
            ));
        } else {
            this._toUnhook.add(this._editor.onMouseMove((e)=>this._onEditorMouseMove(e)
            ));
            this._toUnhook.add(this._editor.onKeyDown((e)=>this._onKeyDown(e)
            ));
        }
        this._toUnhook.add(this._editor.onMouseLeave(hideWidgetsEventHandler));
        this._toUnhook.add(this._editor.onDidChangeModel(hideWidgetsEventHandler));
        this._toUnhook.add(this._editor.onDidScrollChange((e)=>this._onEditorScrollChanged(e)
        ));
    }
    _unhookEvents() {
        this._toUnhook.clear();
    }
    _onModelDecorationsChanged() {
        var _a, _b;
        (_a = this._contentWidget) === null || _a === void 0 || _a.onModelDecorationsChanged();
        (_b = this._glyphWidget) === null || _b === void 0 || _b.onModelDecorationsChanged();
    }
    _onEditorScrollChanged(e) {
        if (e.scrollTopChanged || e.scrollLeftChanged) this._hideWidgets();
    }
    _onEditorMouseDown(mouseEvent) {
        this._isMouseDown = true;
        const targetType = mouseEvent.target.type;
        if (targetType === 9 /* CONTENT_WIDGET */  && mouseEvent.target.detail === $0ce1866a32ac636a$exports.ModesContentHoverWidget.ID) {
            this._hoverClicked = true;
            // mouse down on top of content hover widget
            return;
        }
        if (targetType === 12 /* OVERLAY_WIDGET */  && mouseEvent.target.detail === $3b9472a1f6387b4b$export$5b5b89fc3da37c5f.ID) // mouse down on top of overlay hover widget
        return;
        if (targetType !== 12 /* OVERLAY_WIDGET */  && mouseEvent.target.detail !== $3b9472a1f6387b4b$export$5b5b89fc3da37c5f.ID) this._hoverClicked = false;
        this._hideWidgets();
    }
    _onEditorMouseUp(mouseEvent) {
        this._isMouseDown = false;
    }
    _onEditorMouseMove(mouseEvent) {
        var _a, _b, _c, _d, _e;
        let targetType = mouseEvent.target.type;
        if (this._isMouseDown && this._hoverClicked) return;
        if (this._isHoverSticky && targetType === 9 /* CONTENT_WIDGET */  && mouseEvent.target.detail === $0ce1866a32ac636a$exports.ModesContentHoverWidget.ID) // mouse moved on top of content hover widget
        return;
        if (this._isHoverSticky && !((_b = (_a = mouseEvent.event.browserEvent.view) === null || _a === void 0 ? void 0 : _a.getSelection()) === null || _b === void 0 ? void 0 : _b.isCollapsed)) // selected text within content hover widget
        return;
        if (!this._isHoverSticky && targetType === 9 /* CONTENT_WIDGET */  && mouseEvent.target.detail === $0ce1866a32ac636a$exports.ModesContentHoverWidget.ID && ((_c = this._contentWidget) === null || _c === void 0 ? void 0 : _c.isColorPickerVisible())) // though the hover is not sticky, the color picker needs to.
        return;
        if (this._isHoverSticky && targetType === 12 /* OVERLAY_WIDGET */  && mouseEvent.target.detail === $3b9472a1f6387b4b$export$5b5b89fc3da37c5f.ID) // mouse moved on top of overlay hover widget
        return;
        if (!this._isHoverEnabled) {
            this._hideWidgets();
            return;
        }
        const contentWidget = this._getOrCreateContentWidget();
        if (contentWidget.maybeShowAt(mouseEvent)) {
            (_d = this._glyphWidget) === null || _d === void 0 || _d.hide();
            return;
        }
        if (targetType === 2 /* GUTTER_GLYPH_MARGIN */  && mouseEvent.target.position) {
            (_e = this._contentWidget) === null || _e === void 0 || _e.hide();
            if (!this._glyphWidget) this._glyphWidget = new $3b9472a1f6387b4b$export$5b5b89fc3da37c5f(this._editor, this._modeService, this._openerService);
            this._glyphWidget.startShowingAt(mouseEvent.target.position.lineNumber);
            return;
        }
        this._hideWidgets();
    }
    _onKeyDown(e) {
        if (e.keyCode !== 5 /* Ctrl */  && e.keyCode !== 6 /* Alt */  && e.keyCode !== 57 /* Meta */  && e.keyCode !== 4 /* Shift */ ) // Do not hide hover when a modifier key is pressed
        this._hideWidgets();
    }
    _hideWidgets() {
        var _a, _b, _c;
        if (this._isMouseDown && this._hoverClicked && ((_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.isColorPickerVisible())) return;
        this._hoverClicked = false;
        (_b = this._glyphWidget) === null || _b === void 0 || _b.hide();
        (_c = this._contentWidget) === null || _c === void 0 || _c.hide();
    }
    _getOrCreateContentWidget() {
        if (!this._contentWidget) this._contentWidget = this._instantiationService.createInstance($0ce1866a32ac636a$exports.ModesContentHoverWidget, this._editor, this._hoverVisibleKey);
        return this._contentWidget;
    }
    isColorPickerVisible() {
        var _a;
        return ((_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.isColorPickerVisible()) || false;
    }
    showContentHover(range, mode, focus) {
        this._getOrCreateContentWidget().startShowingAtRange(range, mode, focus);
    }
    dispose() {
        var _a, _b;
        this._unhookEvents();
        this._toUnhook.dispose();
        this._didChangeConfigurationHandler.dispose();
        (_a = this._glyphWidget) === null || _a === void 0 || _a.dispose();
        (_b = this._contentWidget) === null || _b === void 0 || _b.dispose();
    }
};
$2856eeccefbc7426$export$5fb2eabf73ef0293.ID = 'editor.contrib.hover';
$2856eeccefbc7426$export$5fb2eabf73ef0293 = $2856eeccefbc7426$var$__decorate([
    $2856eeccefbc7426$var$__param(1, $fdGPu.IInstantiationService),
    $2856eeccefbc7426$var$__param(2, $iAi3o.IOpenerService),
    $2856eeccefbc7426$var$__param(3, $is5YK.IModeService),
    $2856eeccefbc7426$var$__param(4, $cxCeF.IContextKeyService)
], $2856eeccefbc7426$export$5fb2eabf73ef0293);
class $2856eeccefbc7426$var$ShowHoverAction extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: 'editor.action.showHover',
            label: $4dEdH.localize({
                key: 'showHover',
                comment: [
                    'Label for action that will trigger the showing of a hover in the editor.',
                    'This allows for users to show the hover without using the mouse.'
                ]
            }, "Show Hover"),
            alias: 'Show Hover',
            precondition: undefined,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.editorTextFocus,
                primary: $fuc8X.KeyChord(2089 /* KeyK */ , 2087 /* KeyI */ ),
                weight: 100 /* EditorContrib */ 
            }
        });
    }
    run(accessor, editor) {
        if (!editor.hasModel()) return;
        let controller = $2856eeccefbc7426$export$5fb2eabf73ef0293.get(editor);
        if (!controller) return;
        const position = editor.getPosition();
        const range = new $d00il.Range(position.lineNumber, position.column, position.lineNumber, position.column);
        const focus = editor.getOption(2 /* accessibilitySupport */ ) === 2 /* Enabled */ ;
        controller.showContentHover(range, 1 /* Immediate */ , focus);
    }
}
class $2856eeccefbc7426$var$ShowDefinitionPreviewHoverAction extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: 'editor.action.showDefinitionPreviewHover',
            label: $4dEdH.localize({
                key: 'showDefinitionPreviewHover',
                comment: [
                    'Label for action that will trigger the showing of definition preview hover in the editor.',
                    'This allows for users to show the definition preview hover without using the mouse.'
                ]
            }, "Show Definition Preview Hover"),
            alias: 'Show Definition Preview Hover',
            precondition: undefined
        });
    }
    run(accessor, editor) {
        let controller = $2856eeccefbc7426$export$5fb2eabf73ef0293.get(editor);
        if (!controller) return;
        const position = editor.getPosition();
        if (!position) return;
        const range = new $d00il.Range(position.lineNumber, position.column, position.lineNumber, position.column);
        const goto = $226c3ac84291cb47$exports.GotoDefinitionAtPositionEditorContribution.get(editor);
        const promise = goto.startFindDefinitionFromCursor(position);
        promise.then(()=>{
            controller.showContentHover(range, 1 /* Immediate */ , true);
        });
    }
}
$2iJTi.registerEditorContribution($2856eeccefbc7426$export$5fb2eabf73ef0293.ID, $2856eeccefbc7426$export$5fb2eabf73ef0293);
$2iJTi.registerEditorAction($2856eeccefbc7426$var$ShowHoverAction);
$2iJTi.registerEditorAction($2856eeccefbc7426$var$ShowDefinitionPreviewHoverAction);
// theming
$azIPz.registerThemingParticipant((theme, collector)=>{
    const editorHoverHighlightColor = theme.getColor($gaWeX.editorHoverHighlight);
    if (editorHoverHighlightColor) collector.addRule(`.monaco-editor .hoverHighlight { background-color: ${editorHoverHighlightColor}; }`);
    const hoverBackground = theme.getColor($gaWeX.editorHoverBackground);
    if (hoverBackground) collector.addRule(`.monaco-editor .monaco-hover { background-color: ${hoverBackground}; }`);
    const hoverBorder = theme.getColor($gaWeX.editorHoverBorder);
    if (hoverBorder) {
        collector.addRule(`.monaco-editor .monaco-hover { border: 1px solid ${hoverBorder}; }`);
        collector.addRule(`.monaco-editor .monaco-hover .hover-row:not(:first-child):not(:empty) { border-top: 1px solid ${hoverBorder.transparent(0.5)}; }`);
        collector.addRule(`.monaco-editor .monaco-hover hr { border-top: 1px solid ${hoverBorder.transparent(0.5)}; }`);
        collector.addRule(`.monaco-editor .monaco-hover hr { border-bottom: 0px solid ${hoverBorder.transparent(0.5)}; }`);
    }
    const link = theme.getColor($gaWeX.textLinkForeground);
    if (link) collector.addRule(`.monaco-editor .monaco-hover a { color: ${link}; }`);
    const linkHover = theme.getColor($gaWeX.textLinkActiveForeground);
    if (linkHover) collector.addRule(`.monaco-editor .monaco-hover a:hover { color: ${linkHover}; }`);
    const hoverForeground = theme.getColor($gaWeX.editorHoverForeground);
    if (hoverForeground) collector.addRule(`.monaco-editor .monaco-hover { color: ${hoverForeground}; }`);
    const actionsBackground = theme.getColor($gaWeX.editorHoverStatusBarBackground);
    if (actionsBackground) collector.addRule(`.monaco-editor .monaco-hover .hover-row .actions { background-color: ${actionsBackground}; }`);
    const codeBackground = theme.getColor($gaWeX.textCodeBlockBackground);
    if (codeBackground) collector.addRule(`.monaco-editor .monaco-hover code { background-color: ${codeBackground}; }`);
});


class $5d88da9ba362c909$export$207d84fc3451c066 extends $9cWcn.Disposable {
    constructor(_editor){
        super();
        this._editor = _editor;
        this._register(_editor.onMouseDown((e)=>this.onMouseDown(e)
        ));
    }
    dispose() {
        super.dispose();
    }
    onMouseDown(mouseEvent) {
        var _a;
        const targetType = mouseEvent.target.type;
        if (targetType !== 6 /* CONTENT_TEXT */ ) return;
        const hoverOnColorDecorator = [
            ...((_a = mouseEvent.target.element) === null || _a === void 0 ? void 0 : _a.classList.values()) || []
        ].find((className)=>className.startsWith('ced-colorBox')
        );
        if (!hoverOnColorDecorator) return;
        if (!mouseEvent.target.range) return;
        const hoverController = this._editor.getContribution($2856eeccefbc7426$exports.ModesHoverController.ID);
        if (!hoverController.isColorPickerVisible()) {
            const range = new $d00il.Range(mouseEvent.target.range.startLineNumber, mouseEvent.target.range.startColumn + 1, mouseEvent.target.range.endLineNumber, mouseEvent.target.range.endColumn + 1);
            hoverController.showContentHover(range, 0 /* Delayed */ , false);
        }
    }
}
$5d88da9ba362c909$export$207d84fc3451c066.ID = 'editor.contrib.colorContribution'; // ms
$2iJTi.registerEditorContribution($5d88da9ba362c909$export$207d84fc3451c066.ID, $5d88da9ba362c909$export$207d84fc3451c066);



var $fuc8X = parcelRequire("fuc8X");

var $2iJTi = parcelRequire("2iJTi");

var $d00il = parcelRequire("d00il");

var $ibKGQ = parcelRequire("ibKGQ");

var $kHJv6 = parcelRequire("kHJv6");

var $dcxQ7 = parcelRequire("dcxQ7");

var $d00il = parcelRequire("d00il");

var $jzicX = parcelRequire("jzicX");

var $aKdIg = parcelRequire("aKdIg");
class $b82d6ec17cc57a15$export$889a1441dfb5fa88 {
    constructor(selection, insertSpace){
        this._selection = selection;
        this._insertSpace = insertSpace;
        this._usedEndToken = null;
    }
    static _haystackHasNeedleAtOffset(haystack, needle, offset) {
        if (offset < 0) return false;
        const needleLength = needle.length;
        const haystackLength = haystack.length;
        if (offset + needleLength > haystackLength) return false;
        for(let i = 0; i < needleLength; i++){
            const codeA = haystack.charCodeAt(offset + i);
            const codeB = needle.charCodeAt(i);
            if (codeA === codeB) continue;
            if (codeA >= 65 /* A */  && codeA <= 90 /* Z */  && codeA + 32 === codeB) continue;
            if (codeB >= 65 /* A */  && codeB <= 90 /* Z */  && codeB + 32 === codeA) continue;
            return false;
        }
        return true;
    }
    _createOperationsForBlockComment(selection, startToken, endToken, insertSpace, model, builder) {
        const startLineNumber = selection.startLineNumber;
        const startColumn = selection.startColumn;
        const endLineNumber = selection.endLineNumber;
        const endColumn = selection.endColumn;
        const startLineText = model.getLineContent(startLineNumber);
        const endLineText = model.getLineContent(endLineNumber);
        let startTokenIndex = startLineText.lastIndexOf(startToken, startColumn - 1 + startToken.length);
        let endTokenIndex = endLineText.indexOf(endToken, endColumn - 1 - endToken.length);
        if (startTokenIndex !== -1 && endTokenIndex !== -1) {
            if (startLineNumber === endLineNumber) {
                const lineBetweenTokens = startLineText.substring(startTokenIndex + startToken.length, endTokenIndex);
                if (lineBetweenTokens.indexOf(endToken) >= 0) {
                    // force to add a block comment
                    startTokenIndex = -1;
                    endTokenIndex = -1;
                }
            } else {
                const startLineAfterStartToken = startLineText.substring(startTokenIndex + startToken.length);
                const endLineBeforeEndToken = endLineText.substring(0, endTokenIndex);
                if (startLineAfterStartToken.indexOf(endToken) >= 0 || endLineBeforeEndToken.indexOf(endToken) >= 0) {
                    // force to add a block comment
                    startTokenIndex = -1;
                    endTokenIndex = -1;
                }
            }
        }
        let ops;
        if (startTokenIndex !== -1 && endTokenIndex !== -1) {
            // Consider spaces as part of the comment tokens
            if (insertSpace && startTokenIndex + startToken.length < startLineText.length && startLineText.charCodeAt(startTokenIndex + startToken.length) === 32 /* Space */ ) // Pretend the start token contains a trailing space
            startToken = startToken + ' ';
            if (insertSpace && endTokenIndex > 0 && endLineText.charCodeAt(endTokenIndex - 1) === 32 /* Space */ ) {
                // Pretend the end token contains a leading space
                endToken = ' ' + endToken;
                endTokenIndex -= 1;
            }
            ops = $b82d6ec17cc57a15$export$889a1441dfb5fa88._createRemoveBlockCommentOperations(new $d00il.Range(startLineNumber, startTokenIndex + startToken.length + 1, endLineNumber, endTokenIndex + 1), startToken, endToken);
        } else {
            ops = $b82d6ec17cc57a15$export$889a1441dfb5fa88._createAddBlockCommentOperations(selection, startToken, endToken, this._insertSpace);
            this._usedEndToken = ops.length === 1 ? endToken : null;
        }
        for (const op of ops)builder.addTrackedEditOperation(op.range, op.text);
    }
    static _createRemoveBlockCommentOperations(r, startToken, endToken) {
        let res = [];
        if (!$d00il.Range.isEmpty(r)) {
            // Remove block comment start
            res.push($kHJv6.EditOperation.delete(new $d00il.Range(r.startLineNumber, r.startColumn - startToken.length, r.startLineNumber, r.startColumn)));
            // Remove block comment end
            res.push($kHJv6.EditOperation.delete(new $d00il.Range(r.endLineNumber, r.endColumn, r.endLineNumber, r.endColumn + endToken.length)));
        } else // Remove both continuously
        res.push($kHJv6.EditOperation.delete(new $d00il.Range(r.startLineNumber, r.startColumn - startToken.length, r.endLineNumber, r.endColumn + endToken.length)));
        return res;
    }
    static _createAddBlockCommentOperations(r, startToken, endToken, insertSpace) {
        let res = [];
        if (!$d00il.Range.isEmpty(r)) {
            // Insert block comment start
            res.push($kHJv6.EditOperation.insert(new $dcxQ7.Position(r.startLineNumber, r.startColumn), startToken + (insertSpace ? ' ' : '')));
            // Insert block comment end
            res.push($kHJv6.EditOperation.insert(new $dcxQ7.Position(r.endLineNumber, r.endColumn), (insertSpace ? ' ' : '') + endToken));
        } else // Insert both continuously
        res.push($kHJv6.EditOperation.replace(new $d00il.Range(r.startLineNumber, r.startColumn, r.endLineNumber, r.endColumn), startToken + '  ' + endToken));
        return res;
    }
    getEditOperations(model, builder) {
        const startLineNumber = this._selection.startLineNumber;
        const startColumn = this._selection.startColumn;
        model.tokenizeIfCheap(startLineNumber);
        const languageId = model.getLanguageIdAtPosition(startLineNumber, startColumn);
        const config = $aKdIg.LanguageConfigurationRegistry.getComments(languageId);
        if (!config || !config.blockCommentStartToken || !config.blockCommentEndToken) // Mode does not support block comments
        return;
        this._createOperationsForBlockComment(this._selection, config.blockCommentStartToken, config.blockCommentEndToken, this._insertSpace, model, builder);
    }
    computeCursorState(model, helper) {
        const inverseEditOperations = helper.getInverseEditOperations();
        if (inverseEditOperations.length === 2) {
            const startTokenEditOperation = inverseEditOperations[0];
            const endTokenEditOperation = inverseEditOperations[1];
            return new $jzicX.Selection(startTokenEditOperation.range.endLineNumber, startTokenEditOperation.range.endColumn, endTokenEditOperation.range.startLineNumber, endTokenEditOperation.range.startColumn);
        } else {
            const srcRange = inverseEditOperations[0].range;
            const deltaColumn = this._usedEndToken ? -this._usedEndToken.length - 1 : 0; // minus 1 space before endToken
            return new $jzicX.Selection(srcRange.endLineNumber, srcRange.endColumn + deltaColumn, srcRange.endLineNumber, srcRange.endColumn + deltaColumn);
        }
    }
}



var $jcr1R = parcelRequire("jcr1R");

var $kHJv6 = parcelRequire("kHJv6");

var $dcxQ7 = parcelRequire("dcxQ7");

var $d00il = parcelRequire("d00il");

var $jzicX = parcelRequire("jzicX");

var $aKdIg = parcelRequire("aKdIg");

class $6a6bffb7bf3091c6$export$da3e0fab717c9ef9 {
    constructor(selection, tabSize, type, insertSpace, ignoreEmptyLines, ignoreFirstLine){
        this._selection = selection;
        this._tabSize = tabSize;
        this._type = type;
        this._insertSpace = insertSpace;
        this._selectionId = null;
        this._deltaColumn = 0;
        this._moveEndPositionDown = false;
        this._ignoreEmptyLines = ignoreEmptyLines;
        this._ignoreFirstLine = ignoreFirstLine || false;
    }
    /**
     * Do an initial pass over the lines and gather info about the line comment string.
     * Returns null if any of the lines doesn't support a line comment string.
     */ static _gatherPreflightCommentStrings(model, startLineNumber, endLineNumber) {
        model.tokenizeIfCheap(startLineNumber);
        const languageId = model.getLanguageIdAtPosition(startLineNumber, 1);
        const config = $aKdIg.LanguageConfigurationRegistry.getComments(languageId);
        const commentStr = config ? config.lineCommentToken : null;
        if (!commentStr) // Mode does not support line comments
        return null;
        let lines = [];
        for(let i = 0, lineCount = endLineNumber - startLineNumber + 1; i < lineCount; i++)lines[i] = {
            ignore: false,
            commentStr: commentStr,
            commentStrOffset: 0,
            commentStrLength: commentStr.length
        };
        return lines;
    }
    /**
     * Analyze lines and decide which lines are relevant and what the toggle should do.
     * Also, build up several offsets and lengths useful in the generation of editor operations.
     */ static _analyzeLines(type, insertSpace, model, lines, startLineNumber, ignoreEmptyLines, ignoreFirstLine) {
        let onlyWhitespaceLines = true;
        let shouldRemoveComments;
        if (type === 0 /* Toggle */ ) shouldRemoveComments = true;
        else if (type === 1 /* ForceAdd */ ) shouldRemoveComments = false;
        else shouldRemoveComments = true;
        for(let i = 0, lineCount = lines.length; i < lineCount; i++){
            const lineData = lines[i];
            const lineNumber = startLineNumber + i;
            if (lineNumber === startLineNumber && ignoreFirstLine) {
                // first line ignored
                lineData.ignore = true;
                continue;
            }
            const lineContent = model.getLineContent(lineNumber);
            const lineContentStartOffset = $jcr1R.firstNonWhitespaceIndex(lineContent);
            if (lineContentStartOffset === -1) {
                // Empty or whitespace only line
                lineData.ignore = ignoreEmptyLines;
                lineData.commentStrOffset = lineContent.length;
                continue;
            }
            onlyWhitespaceLines = false;
            lineData.ignore = false;
            lineData.commentStrOffset = lineContentStartOffset;
            if (shouldRemoveComments && !$b82d6ec17cc57a15$export$889a1441dfb5fa88._haystackHasNeedleAtOffset(lineContent, lineData.commentStr, lineContentStartOffset)) {
                if (type === 0 /* Toggle */ ) // Every line so far has been a line comment, but this one is not
                shouldRemoveComments = false;
                else if (type === 1 /* ForceAdd */ ) ;
                else lineData.ignore = true;
            }
            if (shouldRemoveComments && insertSpace) {
                // Remove a following space if present
                const commentStrEndOffset = lineContentStartOffset + lineData.commentStrLength;
                if (commentStrEndOffset < lineContent.length && lineContent.charCodeAt(commentStrEndOffset) === 32 /* Space */ ) lineData.commentStrLength += 1;
            }
        }
        if (type === 0 /* Toggle */  && onlyWhitespaceLines) {
            // For only whitespace lines, we insert comments
            shouldRemoveComments = false;
            // Also, no longer ignore them
            for(let i = 0, lineCount = lines.length; i < lineCount; i++)lines[i].ignore = false;
        }
        return {
            supported: true,
            shouldRemoveComments: shouldRemoveComments,
            lines: lines
        };
    }
    /**
     * Analyze all lines and decide exactly what to do => not supported | insert line comments | remove line comments
     */ static _gatherPreflightData(type, insertSpace, model, startLineNumber, endLineNumber, ignoreEmptyLines, ignoreFirstLine) {
        const lines = $6a6bffb7bf3091c6$export$da3e0fab717c9ef9._gatherPreflightCommentStrings(model, startLineNumber, endLineNumber);
        if (lines === null) return {
            supported: false
        };
        return $6a6bffb7bf3091c6$export$da3e0fab717c9ef9._analyzeLines(type, insertSpace, model, lines, startLineNumber, ignoreEmptyLines, ignoreFirstLine);
    }
    /**
     * Given a successful analysis, execute either insert line comments, either remove line comments
     */ _executeLineComments(model, builder, data, s) {
        let ops;
        if (data.shouldRemoveComments) ops = $6a6bffb7bf3091c6$export$da3e0fab717c9ef9._createRemoveLineCommentsOperations(data.lines, s.startLineNumber);
        else {
            $6a6bffb7bf3091c6$export$da3e0fab717c9ef9._normalizeInsertionPoint(model, data.lines, s.startLineNumber, this._tabSize);
            ops = this._createAddLineCommentsOperations(data.lines, s.startLineNumber);
        }
        const cursorPosition = new $dcxQ7.Position(s.positionLineNumber, s.positionColumn);
        for(let i = 0, len = ops.length; i < len; i++){
            builder.addEditOperation(ops[i].range, ops[i].text);
            if ($d00il.Range.isEmpty(ops[i].range) && $d00il.Range.getStartPosition(ops[i].range).equals(cursorPosition)) {
                const lineContent = model.getLineContent(cursorPosition.lineNumber);
                if (lineContent.length + 1 === cursorPosition.column) this._deltaColumn = (ops[i].text || '').length;
            }
        }
        this._selectionId = builder.trackSelection(s);
    }
    _attemptRemoveBlockComment(model, s, startToken, endToken) {
        let startLineNumber = s.startLineNumber;
        let endLineNumber = s.endLineNumber;
        let startTokenAllowedBeforeColumn = endToken.length + Math.max(model.getLineFirstNonWhitespaceColumn(s.startLineNumber), s.startColumn);
        let startTokenIndex = model.getLineContent(startLineNumber).lastIndexOf(startToken, startTokenAllowedBeforeColumn - 1);
        let endTokenIndex = model.getLineContent(endLineNumber).indexOf(endToken, s.endColumn - 1 - startToken.length);
        if (startTokenIndex !== -1 && endTokenIndex === -1) {
            endTokenIndex = model.getLineContent(startLineNumber).indexOf(endToken, startTokenIndex + startToken.length);
            endLineNumber = startLineNumber;
        }
        if (startTokenIndex === -1 && endTokenIndex !== -1) {
            startTokenIndex = model.getLineContent(endLineNumber).lastIndexOf(startToken, endTokenIndex);
            startLineNumber = endLineNumber;
        }
        if (s.isEmpty() && (startTokenIndex === -1 || endTokenIndex === -1)) {
            startTokenIndex = model.getLineContent(startLineNumber).indexOf(startToken);
            if (startTokenIndex !== -1) endTokenIndex = model.getLineContent(startLineNumber).indexOf(endToken, startTokenIndex + startToken.length);
        }
        // We have to adjust to possible inner white space.
        // For Space after startToken, add Space to startToken - range math will work out.
        if (startTokenIndex !== -1 && model.getLineContent(startLineNumber).charCodeAt(startTokenIndex + startToken.length) === 32 /* Space */ ) startToken += ' ';
        // For Space before endToken, add Space before endToken and shift index one left.
        if (endTokenIndex !== -1 && model.getLineContent(endLineNumber).charCodeAt(endTokenIndex - 1) === 32 /* Space */ ) {
            endToken = ' ' + endToken;
            endTokenIndex -= 1;
        }
        if (startTokenIndex !== -1 && endTokenIndex !== -1) return $b82d6ec17cc57a15$export$889a1441dfb5fa88._createRemoveBlockCommentOperations(new $d00il.Range(startLineNumber, startTokenIndex + startToken.length + 1, endLineNumber, endTokenIndex + 1), startToken, endToken);
        return null;
    }
    /**
     * Given an unsuccessful analysis, delegate to the block comment command
     */ _executeBlockComment(model, builder, s) {
        model.tokenizeIfCheap(s.startLineNumber);
        let languageId = model.getLanguageIdAtPosition(s.startLineNumber, 1);
        let config = $aKdIg.LanguageConfigurationRegistry.getComments(languageId);
        if (!config || !config.blockCommentStartToken || !config.blockCommentEndToken) // Mode does not support block comments
        return;
        const startToken = config.blockCommentStartToken;
        const endToken = config.blockCommentEndToken;
        let ops = this._attemptRemoveBlockComment(model, s, startToken, endToken);
        if (!ops) {
            if (s.isEmpty()) {
                const lineContent = model.getLineContent(s.startLineNumber);
                let firstNonWhitespaceIndex = $jcr1R.firstNonWhitespaceIndex(lineContent);
                if (firstNonWhitespaceIndex === -1) // Line is empty or contains only whitespace
                firstNonWhitespaceIndex = lineContent.length;
                ops = $b82d6ec17cc57a15$export$889a1441dfb5fa88._createAddBlockCommentOperations(new $d00il.Range(s.startLineNumber, firstNonWhitespaceIndex + 1, s.startLineNumber, lineContent.length + 1), startToken, endToken, this._insertSpace);
            } else ops = $b82d6ec17cc57a15$export$889a1441dfb5fa88._createAddBlockCommentOperations(new $d00il.Range(s.startLineNumber, model.getLineFirstNonWhitespaceColumn(s.startLineNumber), s.endLineNumber, model.getLineMaxColumn(s.endLineNumber)), startToken, endToken, this._insertSpace);
            if (ops.length === 1) // Leave cursor after token and Space
            this._deltaColumn = startToken.length + 1;
        }
        this._selectionId = builder.trackSelection(s);
        for (const op of ops)builder.addEditOperation(op.range, op.text);
    }
    getEditOperations(model, builder) {
        let s = this._selection;
        this._moveEndPositionDown = false;
        if (s.startLineNumber === s.endLineNumber && this._ignoreFirstLine) {
            builder.addEditOperation(new $d00il.Range(s.startLineNumber, model.getLineMaxColumn(s.startLineNumber), s.startLineNumber + 1, 1), s.startLineNumber === model.getLineCount() ? '' : '\n');
            this._selectionId = builder.trackSelection(s);
            return;
        }
        if (s.startLineNumber < s.endLineNumber && s.endColumn === 1) {
            this._moveEndPositionDown = true;
            s = s.setEndPosition(s.endLineNumber - 1, model.getLineMaxColumn(s.endLineNumber - 1));
        }
        const data = $6a6bffb7bf3091c6$export$da3e0fab717c9ef9._gatherPreflightData(this._type, this._insertSpace, model, s.startLineNumber, s.endLineNumber, this._ignoreEmptyLines, this._ignoreFirstLine);
        if (data.supported) return this._executeLineComments(model, builder, data, s);
        return this._executeBlockComment(model, builder, s);
    }
    computeCursorState(model, helper) {
        let result = helper.getTrackedSelection(this._selectionId);
        if (this._moveEndPositionDown) result = result.setEndPosition(result.endLineNumber + 1, 1);
        return new $jzicX.Selection(result.selectionStartLineNumber, result.selectionStartColumn + this._deltaColumn, result.positionLineNumber, result.positionColumn + this._deltaColumn);
    }
    /**
     * Generate edit operations in the remove line comment case
     */ static _createRemoveLineCommentsOperations(lines, startLineNumber) {
        let res = [];
        for(let i = 0, len = lines.length; i < len; i++){
            const lineData = lines[i];
            if (lineData.ignore) continue;
            res.push($kHJv6.EditOperation.delete(new $d00il.Range(startLineNumber + i, lineData.commentStrOffset + 1, startLineNumber + i, lineData.commentStrOffset + lineData.commentStrLength + 1)));
        }
        return res;
    }
    /**
     * Generate edit operations in the add line comment case
     */ _createAddLineCommentsOperations(lines, startLineNumber) {
        let res = [];
        const afterCommentStr = this._insertSpace ? ' ' : '';
        for(let i = 0, len = lines.length; i < len; i++){
            const lineData = lines[i];
            if (lineData.ignore) continue;
            res.push($kHJv6.EditOperation.insert(new $dcxQ7.Position(startLineNumber + i, lineData.commentStrOffset + 1), lineData.commentStr + afterCommentStr));
        }
        return res;
    }
    static nextVisibleColumn(currentVisibleColumn, tabSize, isTab, columnSize) {
        if (isTab) return currentVisibleColumn + (tabSize - currentVisibleColumn % tabSize);
        return currentVisibleColumn + columnSize;
    }
    /**
     * Adjust insertion points to have them vertically aligned in the add line comment case
     */ static _normalizeInsertionPoint(model, lines, startLineNumber, tabSize) {
        let minVisibleColumn = 1073741824 /* MAX_SAFE_SMALL_INTEGER */ ;
        let j;
        let lenJ;
        for(let i = 0, len = lines.length; i < len; i++){
            if (lines[i].ignore) continue;
            const lineContent = model.getLineContent(startLineNumber + i);
            let currentVisibleColumn = 0;
            for(let j = 0, lenJ = lines[i].commentStrOffset; currentVisibleColumn < minVisibleColumn && j < lenJ; j++)currentVisibleColumn = $6a6bffb7bf3091c6$export$da3e0fab717c9ef9.nextVisibleColumn(currentVisibleColumn, tabSize, lineContent.charCodeAt(j) === 9 /* Tab */ , 1);
            if (currentVisibleColumn < minVisibleColumn) minVisibleColumn = currentVisibleColumn;
        }
        minVisibleColumn = Math.floor(minVisibleColumn / tabSize) * tabSize;
        for(let i1 = 0, len1 = lines.length; i1 < len1; i1++){
            if (lines[i1].ignore) continue;
            const lineContent = model.getLineContent(startLineNumber + i1);
            let currentVisibleColumn = 0;
            for(j = 0, lenJ = lines[i1].commentStrOffset; currentVisibleColumn < minVisibleColumn && j < lenJ; j++)currentVisibleColumn = $6a6bffb7bf3091c6$export$da3e0fab717c9ef9.nextVisibleColumn(currentVisibleColumn, tabSize, lineContent.charCodeAt(j) === 9 /* Tab */ , 1);
            if (currentVisibleColumn > minVisibleColumn) lines[i1].commentStrOffset = j - 1;
            else lines[i1].commentStrOffset = j;
        }
    }
}



var $4dEdH = parcelRequire("4dEdH");

var $g4v7E = parcelRequire("g4v7E");
class $8def40536dd058dd$var$CommentLineAction extends $2iJTi.EditorAction {
    constructor(type, opts){
        super(opts);
        this._type = type;
    }
    run(accessor, editor) {
        if (!editor.hasModel()) return;
        const model = editor.getModel();
        const commands = [];
        const modelOptions = model.getOptions();
        const commentsOptions = editor.getOption(19 /* comments */ );
        const selections = editor.getSelections().map((selection, index)=>({
                selection: selection,
                index: index,
                ignoreFirstLine: false
            })
        );
        selections.sort((a, b)=>$d00il.Range.compareRangesUsingStarts(a.selection, b.selection)
        );
        // Remove selections that would result in copying the same line
        let prev = selections[0];
        for(let i = 1; i < selections.length; i++){
            const curr = selections[i];
            if (prev.selection.endLineNumber === curr.selection.startLineNumber) {
                // these two selections would copy the same line
                if (prev.index < curr.index) // prev wins
                curr.ignoreFirstLine = true;
                else {
                    // curr wins
                    prev.ignoreFirstLine = true;
                    prev = curr;
                }
            }
        }
        for (const selection1 of selections)commands.push(new $6a6bffb7bf3091c6$export$da3e0fab717c9ef9(selection1.selection, modelOptions.tabSize, this._type, commentsOptions.insertSpace, commentsOptions.ignoreEmptyLines, selection1.ignoreFirstLine));
        editor.pushUndoStop();
        editor.executeCommands(this.id, commands);
        editor.pushUndoStop();
    }
}
class $8def40536dd058dd$var$ToggleCommentLineAction extends $8def40536dd058dd$var$CommentLineAction {
    constructor(){
        super(0 /* Toggle */ , {
            id: 'editor.action.commentLine',
            label: $4dEdH.localize('comment.line', "Toggle Line Comment"),
            alias: 'Toggle Line Comment',
            precondition: $ibKGQ.EditorContextKeys.writable,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.editorTextFocus,
                primary: 2133 /* Slash */ ,
                weight: 100 /* EditorContrib */ 
            },
            menuOpts: {
                menuId: $g4v7E.MenuId.MenubarEditMenu,
                group: '5_insert',
                title: $4dEdH.localize({
                    key: 'miToggleLineComment',
                    comment: [
                        '&& denotes a mnemonic'
                    ]
                }, "&&Toggle Line Comment"),
                order: 1
            }
        });
    }
}
class $8def40536dd058dd$var$AddLineCommentAction extends $8def40536dd058dd$var$CommentLineAction {
    constructor(){
        super(1 /* ForceAdd */ , {
            id: 'editor.action.addCommentLine',
            label: $4dEdH.localize('comment.line.add', "Add Line Comment"),
            alias: 'Add Line Comment',
            precondition: $ibKGQ.EditorContextKeys.writable,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.editorTextFocus,
                primary: $fuc8X.KeyChord(2089 /* KeyK */ , 2081 /* KeyC */ ),
                weight: 100 /* EditorContrib */ 
            }
        });
    }
}
class $8def40536dd058dd$var$RemoveLineCommentAction extends $8def40536dd058dd$var$CommentLineAction {
    constructor(){
        super(2 /* ForceRemove */ , {
            id: 'editor.action.removeCommentLine',
            label: $4dEdH.localize('comment.line.remove', "Remove Line Comment"),
            alias: 'Remove Line Comment',
            precondition: $ibKGQ.EditorContextKeys.writable,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.editorTextFocus,
                primary: $fuc8X.KeyChord(2089 /* KeyK */ , 2099 /* KeyU */ ),
                weight: 100 /* EditorContrib */ 
            }
        });
    }
}
class $8def40536dd058dd$var$BlockCommentAction extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: 'editor.action.blockComment',
            label: $4dEdH.localize('comment.block', "Toggle Block Comment"),
            alias: 'Toggle Block Comment',
            precondition: $ibKGQ.EditorContextKeys.writable,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.editorTextFocus,
                primary: 1567 /* KeyA */ ,
                linux: {
                    primary: 3103 /* KeyA */ 
                },
                weight: 100 /* EditorContrib */ 
            },
            menuOpts: {
                menuId: $g4v7E.MenuId.MenubarEditMenu,
                group: '5_insert',
                title: $4dEdH.localize({
                    key: 'miToggleBlockComment',
                    comment: [
                        '&& denotes a mnemonic'
                    ]
                }, "Toggle &&Block Comment"),
                order: 2
            }
        });
    }
    run(accessor, editor) {
        if (!editor.hasModel()) return;
        const commentsOptions = editor.getOption(19 /* comments */ );
        const commands = [];
        const selections = editor.getSelections();
        for (const selection of selections)commands.push(new $b82d6ec17cc57a15$export$889a1441dfb5fa88(selection, commentsOptions.insertSpace));
        editor.pushUndoStop();
        editor.executeCommands(this.id, commands);
        editor.pushUndoStop();
    }
}
$2iJTi.registerEditorAction($8def40536dd058dd$var$ToggleCommentLineAction);
$2iJTi.registerEditorAction($8def40536dd058dd$var$AddLineCommentAction);
$2iJTi.registerEditorAction($8def40536dd058dd$var$RemoveLineCommentAction);
$2iJTi.registerEditorAction($8def40536dd058dd$var$BlockCommentAction);


var $d06cfc06a743717a$exports = {};

var $bDzmQ = parcelRequire("bDzmQ");

var $6nSvp = parcelRequire("6nSvp");

var $cVfMQ = parcelRequire("cVfMQ");

var $9cWcn = parcelRequire("9cWcn");

var $lb0Ah = parcelRequire("lb0Ah");

var $2iJTi = parcelRequire("2iJTi");

var $ibKGQ = parcelRequire("ibKGQ");

var $4dEdH = parcelRequire("4dEdH");

var $g4v7E = parcelRequire("g4v7E");

var $cxCeF = parcelRequire("cxCeF");

var $d6K7e = parcelRequire("d6K7e");

var $7IxGd = parcelRequire("7IxGd");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $d06cfc06a743717a$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var $d06cfc06a743717a$var$__param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
};
let $d06cfc06a743717a$export$4b3a61d923941f77 = class $d06cfc06a743717a$export$4b3a61d923941f77 {
    constructor(editor, _contextMenuService, _contextViewService, _contextKeyService, _keybindingService, _menuService){
        this._contextMenuService = _contextMenuService;
        this._contextViewService = _contextViewService;
        this._contextKeyService = _contextKeyService;
        this._keybindingService = _keybindingService;
        this._menuService = _menuService;
        this._toDispose = new $9cWcn.DisposableStore();
        this._contextMenuIsBeingShownCount = 0;
        this._editor = editor;
        this._toDispose.add(this._editor.onContextMenu((e)=>this._onContextMenu(e)
        ));
        this._toDispose.add(this._editor.onMouseWheel((e)=>{
            if (this._contextMenuIsBeingShownCount > 0) {
                const view = this._contextViewService.getContextViewElement();
                const target = e.srcElement;
                // Event triggers on shadow root host first
                // Check if the context view is under this host before hiding it #103169
                if (!(target.shadowRoot && $bDzmQ.getShadowRoot(view) === target.shadowRoot)) this._contextViewService.hideContextView();
            }
        }));
        this._toDispose.add(this._editor.onKeyDown((e)=>{
            if (e.keyCode === 58 /* ContextMenu */ ) {
                // Chrome is funny like that
                e.preventDefault();
                e.stopPropagation();
                this.showContextMenu();
            }
        }));
    }
    static get(editor) {
        return editor.getContribution($d06cfc06a743717a$export$4b3a61d923941f77.ID);
    }
    _onContextMenu(e) {
        if (!this._editor.hasModel()) return;
        if (!this._editor.getOption(20 /* contextmenu */ )) {
            this._editor.focus();
            // Ensure the cursor is at the position of the mouse click
            if (e.target.position && !this._editor.getSelection().containsPosition(e.target.position)) this._editor.setPosition(e.target.position);
            return; // Context menu is turned off through configuration
        }
        if (e.target.type === 12 /* OVERLAY_WIDGET */ ) return; // allow native menu on widgets to support right click on input field for example in find
        e.event.preventDefault();
        e.event.stopPropagation();
        if (e.target.type !== 6 /* CONTENT_TEXT */  && e.target.type !== 7 /* CONTENT_EMPTY */  && e.target.type !== 1 /* TEXTAREA */ ) return; // only support mouse click into text or native context menu key for now
        // Ensure the editor gets focus if it hasn't, so the right events are being sent to other contributions
        this._editor.focus();
        // Ensure the cursor is at the position of the mouse click
        if (e.target.position) {
            let hasSelectionAtPosition = false;
            for (const selection of this._editor.getSelections())if (selection.containsPosition(e.target.position)) {
                hasSelectionAtPosition = true;
                break;
            }
            if (!hasSelectionAtPosition) this._editor.setPosition(e.target.position);
        }
        // Unless the user triggerd the context menu through Shift+F10, use the mouse position as menu position
        let anchor = null;
        if (e.target.type !== 1 /* TEXTAREA */ ) anchor = {
            x: e.event.posx - 1,
            width: 2,
            y: e.event.posy - 1,
            height: 2
        };
        // Show the context menu
        this.showContextMenu(anchor);
    }
    showContextMenu(anchor) {
        if (!this._editor.getOption(20 /* contextmenu */ )) return; // Context menu is turned off through configuration
        if (!this._editor.hasModel()) return;
        if (!this._contextMenuService) {
            this._editor.focus();
            return; // We need the context menu service to function
        }
        // Find actions available for menu
        const menuActions = this._getMenuActions(this._editor.getModel(), this._editor.isSimpleWidget ? $g4v7E.MenuId.SimpleEditorContext : $g4v7E.MenuId.EditorContext);
        // Show menu if we have actions to show
        if (menuActions.length > 0) this._doShowContextMenu(menuActions, anchor);
    }
    _getMenuActions(model, menuId) {
        const result = [];
        // get menu groups
        const menu = this._menuService.createMenu(menuId, this._contextKeyService);
        const groups = menu.getActions({
            arg: model.uri
        });
        menu.dispose();
        // translate them into other actions
        for (let group of groups){
            const [, actions] = group;
            let addedItems = 0;
            for (const action of actions)if (action instanceof $g4v7E.SubmenuItemAction) {
                const subActions = this._getMenuActions(model, action.item.submenu);
                if (subActions.length > 0) {
                    result.push(new $cVfMQ.SubmenuAction(action.id, action.label, subActions));
                    addedItems++;
                }
            } else {
                result.push(action);
                addedItems++;
            }
            if (addedItems) result.push(new $cVfMQ.Separator());
        }
        if (result.length) result.pop(); // remove last separator
        return result;
    }
    _doShowContextMenu(actions, anchor = null) {
        if (!this._editor.hasModel()) return;
        // Disable hover
        const oldHoverSetting = this._editor.getOption(52 /* hover */ );
        this._editor.updateOptions({
            hover: {
                enabled: false
            }
        });
        if (!anchor) {
            // Ensure selection is visible
            this._editor.revealPosition(this._editor.getPosition(), 1 /* Immediate */ );
            this._editor.render();
            const cursorCoords = this._editor.getScrolledVisiblePosition(this._editor.getPosition());
            // Translate to absolute editor position
            const editorCoords = $bDzmQ.getDomNodePagePosition(this._editor.getDomNode());
            const posx = editorCoords.left + cursorCoords.left;
            const posy = editorCoords.top + cursorCoords.top + cursorCoords.height;
            anchor = {
                x: posx,
                y: posy
            };
        }
        const useShadowDOM = this._editor.getOption(114 /* useShadowDOM */ ) && !$lb0Ah.isIOS; // Do not use shadow dom on IOS #122035
        // Show menu
        this._contextMenuIsBeingShownCount++;
        this._contextMenuService.showContextMenu({
            domForShadowRoot: useShadowDOM ? this._editor.getDomNode() : undefined,
            getAnchor: ()=>anchor
            ,
            getActions: ()=>actions
            ,
            getActionViewItem: (action)=>{
                const keybinding = this._keybindingFor(action);
                if (keybinding) return new $6nSvp.ActionViewItem(action, action, {
                    label: true,
                    keybinding: keybinding.getLabel(),
                    isMenu: true
                });
                const customActionViewItem = action;
                if (typeof customActionViewItem.getActionViewItem === 'function') return customActionViewItem.getActionViewItem();
                return new $6nSvp.ActionViewItem(action, action, {
                    icon: true,
                    label: true,
                    isMenu: true
                });
            },
            getKeyBinding: (action)=>{
                return this._keybindingFor(action);
            },
            onHide: (wasCancelled)=>{
                this._contextMenuIsBeingShownCount--;
                this._editor.focus();
                this._editor.updateOptions({
                    hover: oldHoverSetting
                });
            }
        });
    }
    _keybindingFor(action) {
        return this._keybindingService.lookupKeybinding(action.id);
    }
    dispose() {
        if (this._contextMenuIsBeingShownCount > 0) this._contextViewService.hideContextView();
        this._toDispose.dispose();
    }
};
$d06cfc06a743717a$export$4b3a61d923941f77.ID = 'editor.contrib.contextmenu';
$d06cfc06a743717a$export$4b3a61d923941f77 = $d06cfc06a743717a$var$__decorate([
    $d06cfc06a743717a$var$__param(1, $d6K7e.IContextMenuService),
    $d06cfc06a743717a$var$__param(2, $d6K7e.IContextViewService),
    $d06cfc06a743717a$var$__param(3, $cxCeF.IContextKeyService),
    $d06cfc06a743717a$var$__param(4, $7IxGd.IKeybindingService),
    $d06cfc06a743717a$var$__param(5, $g4v7E.IMenuService)
], $d06cfc06a743717a$export$4b3a61d923941f77);
class $d06cfc06a743717a$var$ShowContextMenu extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: 'editor.action.showContextMenu',
            label: $4dEdH.localize('action.showContextMenu.label', "Show Editor Context Menu"),
            alias: 'Show Editor Context Menu',
            precondition: undefined,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.textInputFocus,
                primary: 1092 /* F10 */ ,
                weight: 100 /* EditorContrib */ 
            }
        });
    }
    run(accessor, editor) {
        let contribution = $d06cfc06a743717a$export$4b3a61d923941f77.get(editor);
        contribution.showContextMenu();
    }
}
$2iJTi.registerEditorContribution($d06cfc06a743717a$export$4b3a61d923941f77.ID, $d06cfc06a743717a$export$4b3a61d923941f77);
$2iJTi.registerEditorAction($d06cfc06a743717a$var$ShowContextMenu);



var $9cWcn = parcelRequire("9cWcn");

var $2iJTi = parcelRequire("2iJTi");

var $ibKGQ = parcelRequire("ibKGQ");

var $4dEdH = parcelRequire("4dEdH");
class $cae3f4d0325e1e85$var$CursorState {
    constructor(selections){
        this.selections = selections;
    }
    equals(other) {
        const thisLen = this.selections.length;
        const otherLen = other.selections.length;
        if (thisLen !== otherLen) return false;
        for(let i = 0; i < thisLen; i++){
            if (!this.selections[i].equalsSelection(other.selections[i])) return false;
        }
        return true;
    }
}
class $cae3f4d0325e1e85$var$StackElement {
    constructor(cursorState, scrollTop, scrollLeft){
        this.cursorState = cursorState;
        this.scrollTop = scrollTop;
        this.scrollLeft = scrollLeft;
    }
}
class $cae3f4d0325e1e85$export$74eff563205978ea extends $9cWcn.Disposable {
    constructor(editor){
        super();
        this._editor = editor;
        this._isCursorUndoRedo = false;
        this._undoStack = [];
        this._redoStack = [];
        this._register(editor.onDidChangeModel((e)=>{
            this._undoStack = [];
            this._redoStack = [];
        }));
        this._register(editor.onDidChangeModelContent((e)=>{
            this._undoStack = [];
            this._redoStack = [];
        }));
        this._register(editor.onDidChangeCursorSelection((e)=>{
            if (this._isCursorUndoRedo) return;
            if (!e.oldSelections) return;
            if (e.oldModelVersionId !== e.modelVersionId) return;
            const prevState = new $cae3f4d0325e1e85$var$CursorState(e.oldSelections);
            const isEqualToLastUndoStack = this._undoStack.length > 0 && this._undoStack[this._undoStack.length - 1].cursorState.equals(prevState);
            if (!isEqualToLastUndoStack) {
                this._undoStack.push(new $cae3f4d0325e1e85$var$StackElement(prevState, editor.getScrollTop(), editor.getScrollLeft()));
                this._redoStack = [];
                if (this._undoStack.length > 50) // keep the cursor undo stack bounded
                this._undoStack.shift();
            }
        }));
    }
    static get(editor) {
        return editor.getContribution($cae3f4d0325e1e85$export$74eff563205978ea.ID);
    }
    cursorUndo() {
        if (!this._editor.hasModel() || this._undoStack.length === 0) return;
        this._redoStack.push(new $cae3f4d0325e1e85$var$StackElement(new $cae3f4d0325e1e85$var$CursorState(this._editor.getSelections()), this._editor.getScrollTop(), this._editor.getScrollLeft()));
        this._applyState(this._undoStack.pop());
    }
    cursorRedo() {
        if (!this._editor.hasModel() || this._redoStack.length === 0) return;
        this._undoStack.push(new $cae3f4d0325e1e85$var$StackElement(new $cae3f4d0325e1e85$var$CursorState(this._editor.getSelections()), this._editor.getScrollTop(), this._editor.getScrollLeft()));
        this._applyState(this._redoStack.pop());
    }
    _applyState(stackElement) {
        this._isCursorUndoRedo = true;
        this._editor.setSelections(stackElement.cursorState.selections);
        this._editor.setScrollPosition({
            scrollTop: stackElement.scrollTop,
            scrollLeft: stackElement.scrollLeft
        });
        this._isCursorUndoRedo = false;
    }
}
$cae3f4d0325e1e85$export$74eff563205978ea.ID = 'editor.contrib.cursorUndoRedoController';
class $cae3f4d0325e1e85$export$3118bf0ed8b65899 extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: 'cursorUndo',
            label: $4dEdH.localize('cursor.undo', "Cursor Undo"),
            alias: 'Cursor Undo',
            precondition: undefined,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.textInputFocus,
                primary: 2099 /* KeyU */ ,
                weight: 100 /* EditorContrib */ 
            }
        });
    }
    run(accessor, editor, args) {
        $cae3f4d0325e1e85$export$74eff563205978ea.get(editor).cursorUndo();
    }
}
class $cae3f4d0325e1e85$export$d501f63aca5a7669 extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: 'cursorRedo',
            label: $4dEdH.localize('cursor.redo', "Cursor Redo"),
            alias: 'Cursor Redo',
            precondition: undefined
        });
    }
    run(accessor, editor, args) {
        $cae3f4d0325e1e85$export$74eff563205978ea.get(editor).cursorRedo();
    }
}
$2iJTi.registerEditorContribution($cae3f4d0325e1e85$export$74eff563205978ea.ID, $cae3f4d0325e1e85$export$74eff563205978ea);
$2iJTi.registerEditorAction($cae3f4d0325e1e85$export$3118bf0ed8b65899);
$2iJTi.registerEditorAction($cae3f4d0325e1e85$export$d501f63aca5a7669);



var $9cWcn = parcelRequire("9cWcn");

var $lb0Ah = parcelRequire("lb0Ah");


var $2iJTi = parcelRequire("2iJTi");

var $dcxQ7 = parcelRequire("dcxQ7");

var $d00il = parcelRequire("d00il");

var $jzicX = parcelRequire("jzicX");

var $91ntV = parcelRequire("91ntV");

var $d00il = parcelRequire("d00il");

var $jzicX = parcelRequire("jzicX");
class $5ee6abd32fb82724$export$eb6766de171f86ab {
    constructor(selection, targetPosition, copy){
        this.selection = selection;
        this.targetPosition = targetPosition;
        this.copy = copy;
        this.targetSelection = null;
    }
    getEditOperations(model, builder) {
        let text = model.getValueInRange(this.selection);
        if (!this.copy) builder.addEditOperation(this.selection, null);
        builder.addEditOperation(new $d00il.Range(this.targetPosition.lineNumber, this.targetPosition.column, this.targetPosition.lineNumber, this.targetPosition.column), text);
        if (this.selection.containsPosition(this.targetPosition) && !(this.copy && (this.selection.getEndPosition().equals(this.targetPosition) || this.selection.getStartPosition().equals(this.targetPosition) // we allow users to paste content beside the selection
        ))) {
            this.targetSelection = this.selection;
            return;
        }
        if (this.copy) {
            this.targetSelection = new $jzicX.Selection(this.targetPosition.lineNumber, this.targetPosition.column, this.selection.endLineNumber - this.selection.startLineNumber + this.targetPosition.lineNumber, this.selection.startLineNumber === this.selection.endLineNumber ? this.targetPosition.column + this.selection.endColumn - this.selection.startColumn : this.selection.endColumn);
            return;
        }
        if (this.targetPosition.lineNumber > this.selection.endLineNumber) {
            // Drag the selection downwards
            this.targetSelection = new $jzicX.Selection(this.targetPosition.lineNumber - this.selection.endLineNumber + this.selection.startLineNumber, this.targetPosition.column, this.targetPosition.lineNumber, this.selection.startLineNumber === this.selection.endLineNumber ? this.targetPosition.column + this.selection.endColumn - this.selection.startColumn : this.selection.endColumn);
            return;
        }
        if (this.targetPosition.lineNumber < this.selection.endLineNumber) {
            // Drag the selection upwards
            this.targetSelection = new $jzicX.Selection(this.targetPosition.lineNumber, this.targetPosition.column, this.targetPosition.lineNumber + this.selection.endLineNumber - this.selection.startLineNumber, this.selection.startLineNumber === this.selection.endLineNumber ? this.targetPosition.column + this.selection.endColumn - this.selection.startColumn : this.selection.endColumn);
            return;
        }
        // The target position is at the same line as the selection's end position.
        if (this.selection.endColumn <= this.targetPosition.column) // The target position is after the selection's end position
        this.targetSelection = new $jzicX.Selection(this.targetPosition.lineNumber - this.selection.endLineNumber + this.selection.startLineNumber, this.selection.startLineNumber === this.selection.endLineNumber ? this.targetPosition.column - this.selection.endColumn + this.selection.startColumn : this.targetPosition.column - this.selection.endColumn + this.selection.startColumn, this.targetPosition.lineNumber, this.selection.startLineNumber === this.selection.endLineNumber ? this.targetPosition.column : this.selection.endColumn);
        else // The target position is before the selection's end position. Since the selection doesn't contain the target position, the selection is one-line and target position is before this selection.
        this.targetSelection = new $jzicX.Selection(this.targetPosition.lineNumber - this.selection.endLineNumber + this.selection.startLineNumber, this.targetPosition.column, this.targetPosition.lineNumber, this.targetPosition.column + this.selection.endColumn - this.selection.startColumn);
    }
    computeCursorState(model, helper) {
        return this.targetSelection;
    }
}


function $ea16914fc7a5b09e$var$hasTriggerModifier(e) {
    if ($lb0Ah.isMacintosh) return e.altKey;
    else return e.ctrlKey;
}
class $ea16914fc7a5b09e$export$809c28265265f08e extends $9cWcn.Disposable {
    constructor(editor){
        super();
        this._editor = editor;
        this._register(this._editor.onMouseDown((e)=>this._onEditorMouseDown(e)
        ));
        this._register(this._editor.onMouseUp((e)=>this._onEditorMouseUp(e)
        ));
        this._register(this._editor.onMouseDrag((e)=>this._onEditorMouseDrag(e)
        ));
        this._register(this._editor.onMouseDrop((e)=>this._onEditorMouseDrop(e)
        ));
        this._register(this._editor.onMouseDropCanceled(()=>this._onEditorMouseDropCanceled()
        ));
        this._register(this._editor.onKeyDown((e)=>this.onEditorKeyDown(e)
        ));
        this._register(this._editor.onKeyUp((e)=>this.onEditorKeyUp(e)
        ));
        this._register(this._editor.onDidBlurEditorWidget(()=>this.onEditorBlur()
        ));
        this._register(this._editor.onDidBlurEditorText(()=>this.onEditorBlur()
        ));
        this._dndDecorationIds = [];
        this._mouseDown = false;
        this._modifierPressed = false;
        this._dragSelection = null;
    }
    onEditorBlur() {
        this._removeDecoration();
        this._dragSelection = null;
        this._mouseDown = false;
        this._modifierPressed = false;
    }
    onEditorKeyDown(e) {
        if (!this._editor.getOption(31 /* dragAndDrop */ ) || this._editor.getOption(18 /* columnSelection */ )) return;
        if ($ea16914fc7a5b09e$var$hasTriggerModifier(e)) this._modifierPressed = true;
        if (this._mouseDown && $ea16914fc7a5b09e$var$hasTriggerModifier(e)) this._editor.updateOptions({
            mouseStyle: 'copy'
        });
    }
    onEditorKeyUp(e) {
        if (!this._editor.getOption(31 /* dragAndDrop */ ) || this._editor.getOption(18 /* columnSelection */ )) return;
        if ($ea16914fc7a5b09e$var$hasTriggerModifier(e)) this._modifierPressed = false;
        if (this._mouseDown && e.keyCode === $ea16914fc7a5b09e$export$809c28265265f08e.TRIGGER_KEY_VALUE) this._editor.updateOptions({
            mouseStyle: 'default'
        });
    }
    _onEditorMouseDown(mouseEvent) {
        this._mouseDown = true;
    }
    _onEditorMouseUp(mouseEvent) {
        this._mouseDown = false;
        // Whenever users release the mouse, the drag and drop operation should finish and the cursor should revert to text.
        this._editor.updateOptions({
            mouseStyle: 'text'
        });
    }
    _onEditorMouseDrag(mouseEvent) {
        let target = mouseEvent.target;
        if (this._dragSelection === null) {
            const selections = this._editor.getSelections() || [];
            let possibleSelections = selections.filter((selection)=>target.position && selection.containsPosition(target.position)
            );
            if (possibleSelections.length === 1) this._dragSelection = possibleSelections[0];
            else return;
        }
        if ($ea16914fc7a5b09e$var$hasTriggerModifier(mouseEvent.event)) this._editor.updateOptions({
            mouseStyle: 'copy'
        });
        else this._editor.updateOptions({
            mouseStyle: 'default'
        });
        if (target.position) {
            if (this._dragSelection.containsPosition(target.position)) this._removeDecoration();
            else this.showAt(target.position);
        }
    }
    _onEditorMouseDropCanceled() {
        this._editor.updateOptions({
            mouseStyle: 'text'
        });
        this._removeDecoration();
        this._dragSelection = null;
        this._mouseDown = false;
    }
    _onEditorMouseDrop(mouseEvent) {
        if (mouseEvent.target && (this._hitContent(mouseEvent.target) || this._hitMargin(mouseEvent.target)) && mouseEvent.target.position) {
            let newCursorPosition = new $dcxQ7.Position(mouseEvent.target.position.lineNumber, mouseEvent.target.position.column);
            if (this._dragSelection === null) {
                let newSelections = null;
                if (mouseEvent.event.shiftKey) {
                    let primarySelection = this._editor.getSelection();
                    if (primarySelection) {
                        const { selectionStartLineNumber: selectionStartLineNumber , selectionStartColumn: selectionStartColumn  } = primarySelection;
                        newSelections = [
                            new $jzicX.Selection(selectionStartLineNumber, selectionStartColumn, newCursorPosition.lineNumber, newCursorPosition.column)
                        ];
                    }
                } else newSelections = (this._editor.getSelections() || []).map((selection)=>{
                    if (selection.containsPosition(newCursorPosition)) return new $jzicX.Selection(newCursorPosition.lineNumber, newCursorPosition.column, newCursorPosition.lineNumber, newCursorPosition.column);
                    else return selection;
                });
                // Use `mouse` as the source instead of `api` and setting the reason to explicit (to behave like any other mouse operation).
                this._editor.setSelections(newSelections || [], 'mouse', 3 /* Explicit */ );
            } else if (!this._dragSelection.containsPosition(newCursorPosition) || ($ea16914fc7a5b09e$var$hasTriggerModifier(mouseEvent.event) || this._modifierPressed) && (this._dragSelection.getEndPosition().equals(newCursorPosition) || this._dragSelection.getStartPosition().equals(newCursorPosition) // we allow users to paste content beside the selection
            )) {
                this._editor.pushUndoStop();
                this._editor.executeCommand($ea16914fc7a5b09e$export$809c28265265f08e.ID, new $5ee6abd32fb82724$export$eb6766de171f86ab(this._dragSelection, newCursorPosition, $ea16914fc7a5b09e$var$hasTriggerModifier(mouseEvent.event) || this._modifierPressed));
                this._editor.pushUndoStop();
            }
        }
        this._editor.updateOptions({
            mouseStyle: 'text'
        });
        this._removeDecoration();
        this._dragSelection = null;
        this._mouseDown = false;
    }
    showAt(position) {
        let newDecorations = [
            {
                range: new $d00il.Range(position.lineNumber, position.column, position.lineNumber, position.column),
                options: $ea16914fc7a5b09e$export$809c28265265f08e._DECORATION_OPTIONS
            }
        ];
        this._dndDecorationIds = this._editor.deltaDecorations(this._dndDecorationIds, newDecorations);
        this._editor.revealPosition(position, 1 /* Immediate */ );
    }
    _removeDecoration() {
        this._dndDecorationIds = this._editor.deltaDecorations(this._dndDecorationIds, []);
    }
    _hitContent(target) {
        return target.type === 6 /* CONTENT_TEXT */  || target.type === 7 /* CONTENT_EMPTY */ ;
    }
    _hitMargin(target) {
        return target.type === 2 /* GUTTER_GLYPH_MARGIN */  || target.type === 3 /* GUTTER_LINE_NUMBERS */  || target.type === 4 /* GUTTER_LINE_DECORATIONS */ ;
    }
    dispose() {
        this._removeDecoration();
        this._dragSelection = null;
        this._mouseDown = false;
        this._modifierPressed = false;
        super.dispose();
    }
}
$ea16914fc7a5b09e$export$809c28265265f08e.ID = 'editor.contrib.dragAndDrop';
$ea16914fc7a5b09e$export$809c28265265f08e.TRIGGER_KEY_VALUE = $lb0Ah.isMacintosh ? 6 /* Alt */  : 5 /* Ctrl */ ;
$ea16914fc7a5b09e$export$809c28265265f08e._DECORATION_OPTIONS = $91ntV.ModelDecorationOptions.register({
    description: 'dnd-target',
    className: 'dnd-target'
});
$2iJTi.registerEditorContribution($ea16914fc7a5b09e$export$809c28265265f08e.ID, $ea16914fc7a5b09e$export$809c28265265f08e);


var $20012b82c35145bb$exports = {};

$parcel$export($20012b82c35145bb$exports, "CommonFindController", () => $20012b82c35145bb$export$3190f9a23ad62166, (v) => $20012b82c35145bb$export$3190f9a23ad62166 = v);

var $6bXyA = parcelRequire("6bXyA");

var $9cWcn = parcelRequire("9cWcn");

var $jcr1R = parcelRequire("jcr1R");

var $2iJTi = parcelRequire("2iJTi");

var $ibKGQ = parcelRequire("ibKGQ");

var $kJ8UG = parcelRequire("kJ8UG");

var $6bXyA = parcelRequire("6bXyA");

var $9cWcn = parcelRequire("9cWcn");

var $5TVJR = parcelRequire("5TVJR");

var $dcxQ7 = parcelRequire("dcxQ7");

var $d00il = parcelRequire("d00il");

var $jzicX = parcelRequire("jzicX");

var $35NkE = parcelRequire("35NkE");

var $d00il = parcelRequire("d00il");

var $1Y4vr = parcelRequire("1Y4vr");

var $91ntV = parcelRequire("91ntV");

var $gaWeX = parcelRequire("gaWeX");

var $azIPz = parcelRequire("azIPz");
class $37c494f0001d7e79$export$bd754614700a28d5 {
    constructor(editor){
        this._editor = editor;
        this._decorations = [];
        this._overviewRulerApproximateDecorations = [];
        this._findScopeDecorationIds = [];
        this._rangeHighlightDecorationId = null;
        this._highlightedDecorationId = null;
        this._startPosition = this._editor.getPosition();
    }
    dispose() {
        this._editor.deltaDecorations(this._allDecorations(), []);
        this._decorations = [];
        this._overviewRulerApproximateDecorations = [];
        this._findScopeDecorationIds = [];
        this._rangeHighlightDecorationId = null;
        this._highlightedDecorationId = null;
    }
    reset() {
        this._decorations = [];
        this._overviewRulerApproximateDecorations = [];
        this._findScopeDecorationIds = [];
        this._rangeHighlightDecorationId = null;
        this._highlightedDecorationId = null;
    }
    getCount() {
        return this._decorations.length;
    }
    /** @deprecated use getFindScopes to support multiple selections */ getFindScope() {
        if (this._findScopeDecorationIds[0]) return this._editor.getModel().getDecorationRange(this._findScopeDecorationIds[0]);
        return null;
    }
    getFindScopes() {
        if (this._findScopeDecorationIds.length) {
            const scopes = this._findScopeDecorationIds.map((findScopeDecorationId)=>this._editor.getModel().getDecorationRange(findScopeDecorationId)
            ).filter((element)=>!!element
            );
            if (scopes.length) return scopes;
        }
        return null;
    }
    getStartPosition() {
        return this._startPosition;
    }
    setStartPosition(newStartPosition) {
        this._startPosition = newStartPosition;
        this.setCurrentFindMatch(null);
    }
    _getDecorationIndex(decorationId) {
        const index = this._decorations.indexOf(decorationId);
        if (index >= 0) return index + 1;
        return 1;
    }
    getCurrentMatchesPosition(desiredRange) {
        let candidates = this._editor.getModel().getDecorationsInRange(desiredRange);
        for (const candidate of candidates){
            const candidateOpts = candidate.options;
            if (candidateOpts === $37c494f0001d7e79$export$bd754614700a28d5._FIND_MATCH_DECORATION || candidateOpts === $37c494f0001d7e79$export$bd754614700a28d5._CURRENT_FIND_MATCH_DECORATION) return this._getDecorationIndex(candidate.id);
        }
        // We don't know the current match position, so returns zero to show '?' in find widget
        return 0;
    }
    setCurrentFindMatch(nextMatch) {
        let newCurrentDecorationId = null;
        let matchPosition = 0;
        if (nextMatch) for(let i = 0, len = this._decorations.length; i < len; i++){
            let range = this._editor.getModel().getDecorationRange(this._decorations[i]);
            if (nextMatch.equalsRange(range)) {
                newCurrentDecorationId = this._decorations[i];
                matchPosition = i + 1;
                break;
            }
        }
        if (this._highlightedDecorationId !== null || newCurrentDecorationId !== null) this._editor.changeDecorations((changeAccessor)=>{
            if (this._highlightedDecorationId !== null) {
                changeAccessor.changeDecorationOptions(this._highlightedDecorationId, $37c494f0001d7e79$export$bd754614700a28d5._FIND_MATCH_DECORATION);
                this._highlightedDecorationId = null;
            }
            if (newCurrentDecorationId !== null) {
                this._highlightedDecorationId = newCurrentDecorationId;
                changeAccessor.changeDecorationOptions(this._highlightedDecorationId, $37c494f0001d7e79$export$bd754614700a28d5._CURRENT_FIND_MATCH_DECORATION);
            }
            if (this._rangeHighlightDecorationId !== null) {
                changeAccessor.removeDecoration(this._rangeHighlightDecorationId);
                this._rangeHighlightDecorationId = null;
            }
            if (newCurrentDecorationId !== null) {
                let rng = this._editor.getModel().getDecorationRange(newCurrentDecorationId);
                if (rng.startLineNumber !== rng.endLineNumber && rng.endColumn === 1) {
                    let lineBeforeEnd = rng.endLineNumber - 1;
                    let lineBeforeEndMaxColumn = this._editor.getModel().getLineMaxColumn(lineBeforeEnd);
                    rng = new $d00il.Range(rng.startLineNumber, rng.startColumn, lineBeforeEnd, lineBeforeEndMaxColumn);
                }
                this._rangeHighlightDecorationId = changeAccessor.addDecoration(rng, $37c494f0001d7e79$export$bd754614700a28d5._RANGE_HIGHLIGHT_DECORATION);
            }
        });
        return matchPosition;
    }
    set(findMatches, findScopes) {
        this._editor.changeDecorations((accessor)=>{
            let findMatchesOptions = $37c494f0001d7e79$export$bd754614700a28d5._FIND_MATCH_DECORATION;
            let newOverviewRulerApproximateDecorations = [];
            if (findMatches.length > 1000) {
                // we go into a mode where the overview ruler gets "approximate" decorations
                // the reason is that the overview ruler paints all the decorations in the file and we don't want to cause freezes
                findMatchesOptions = $37c494f0001d7e79$export$bd754614700a28d5._FIND_MATCH_NO_OVERVIEW_DECORATION;
                // approximate a distance in lines where matches should be merged
                const lineCount = this._editor.getModel().getLineCount();
                const height = this._editor.getLayoutInfo().height;
                const approxPixelsPerLine = height / lineCount;
                const mergeLinesDelta = Math.max(2, Math.ceil(3 / approxPixelsPerLine));
                // merge decorations as much as possible
                let prevStartLineNumber = findMatches[0].range.startLineNumber;
                let prevEndLineNumber = findMatches[0].range.endLineNumber;
                for(let i = 1, len = findMatches.length; i < len; i++){
                    const range = findMatches[i].range;
                    if (prevEndLineNumber + mergeLinesDelta >= range.startLineNumber) {
                        if (range.endLineNumber > prevEndLineNumber) prevEndLineNumber = range.endLineNumber;
                    } else {
                        newOverviewRulerApproximateDecorations.push({
                            range: new $d00il.Range(prevStartLineNumber, 1, prevEndLineNumber, 1),
                            options: $37c494f0001d7e79$export$bd754614700a28d5._FIND_MATCH_ONLY_OVERVIEW_DECORATION
                        });
                        prevStartLineNumber = range.startLineNumber;
                        prevEndLineNumber = range.endLineNumber;
                    }
                }
                newOverviewRulerApproximateDecorations.push({
                    range: new $d00il.Range(prevStartLineNumber, 1, prevEndLineNumber, 1),
                    options: $37c494f0001d7e79$export$bd754614700a28d5._FIND_MATCH_ONLY_OVERVIEW_DECORATION
                });
            }
            // Find matches
            let newFindMatchesDecorations = new Array(findMatches.length);
            for(let i = 0, len = findMatches.length; i < len; i++)newFindMatchesDecorations[i] = {
                range: findMatches[i].range,
                options: findMatchesOptions
            };
            this._decorations = accessor.deltaDecorations(this._decorations, newFindMatchesDecorations);
            // Overview ruler approximate decorations
            this._overviewRulerApproximateDecorations = accessor.deltaDecorations(this._overviewRulerApproximateDecorations, newOverviewRulerApproximateDecorations);
            // Range highlight
            if (this._rangeHighlightDecorationId) {
                accessor.removeDecoration(this._rangeHighlightDecorationId);
                this._rangeHighlightDecorationId = null;
            }
            // Find scope
            if (this._findScopeDecorationIds.length) {
                this._findScopeDecorationIds.forEach((findScopeDecorationId)=>accessor.removeDecoration(findScopeDecorationId)
                );
                this._findScopeDecorationIds = [];
            }
            if (findScopes === null || findScopes === void 0 ? void 0 : findScopes.length) this._findScopeDecorationIds = findScopes.map((findScope)=>accessor.addDecoration(findScope, $37c494f0001d7e79$export$bd754614700a28d5._FIND_SCOPE_DECORATION)
            );
        });
    }
    matchBeforePosition(position) {
        if (this._decorations.length === 0) return null;
        for(let i = this._decorations.length - 1; i >= 0; i--){
            let decorationId = this._decorations[i];
            let r = this._editor.getModel().getDecorationRange(decorationId);
            if (!r || r.endLineNumber > position.lineNumber) continue;
            if (r.endLineNumber < position.lineNumber) return r;
            if (r.endColumn > position.column) continue;
            return r;
        }
        return this._editor.getModel().getDecorationRange(this._decorations[this._decorations.length - 1]);
    }
    matchAfterPosition(position) {
        if (this._decorations.length === 0) return null;
        for(let i = 0, len = this._decorations.length; i < len; i++){
            let decorationId = this._decorations[i];
            let r = this._editor.getModel().getDecorationRange(decorationId);
            if (!r || r.startLineNumber < position.lineNumber) continue;
            if (r.startLineNumber > position.lineNumber) return r;
            if (r.startColumn < position.column) continue;
            return r;
        }
        return this._editor.getModel().getDecorationRange(this._decorations[0]);
    }
    _allDecorations() {
        let result = [];
        result = result.concat(this._decorations);
        result = result.concat(this._overviewRulerApproximateDecorations);
        if (this._findScopeDecorationIds.length) result.push(...this._findScopeDecorationIds);
        if (this._rangeHighlightDecorationId) result.push(this._rangeHighlightDecorationId);
        return result;
    }
}
$37c494f0001d7e79$export$bd754614700a28d5._CURRENT_FIND_MATCH_DECORATION = $91ntV.ModelDecorationOptions.register({
    description: 'current-find-match',
    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */ ,
    zIndex: 13,
    className: 'currentFindMatch',
    showIfCollapsed: true,
    overviewRuler: {
        color: $azIPz.themeColorFromId($gaWeX.overviewRulerFindMatchForeground),
        position: $1Y4vr.OverviewRulerLane.Center
    },
    minimap: {
        color: $azIPz.themeColorFromId($gaWeX.minimapFindMatch),
        position: $1Y4vr.MinimapPosition.Inline
    }
});
$37c494f0001d7e79$export$bd754614700a28d5._FIND_MATCH_DECORATION = $91ntV.ModelDecorationOptions.register({
    description: 'find-match',
    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */ ,
    zIndex: 10,
    className: 'findMatch',
    showIfCollapsed: true,
    overviewRuler: {
        color: $azIPz.themeColorFromId($gaWeX.overviewRulerFindMatchForeground),
        position: $1Y4vr.OverviewRulerLane.Center
    },
    minimap: {
        color: $azIPz.themeColorFromId($gaWeX.minimapFindMatch),
        position: $1Y4vr.MinimapPosition.Inline
    }
});
$37c494f0001d7e79$export$bd754614700a28d5._FIND_MATCH_NO_OVERVIEW_DECORATION = $91ntV.ModelDecorationOptions.register({
    description: 'find-match-no-overview',
    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */ ,
    className: 'findMatch',
    showIfCollapsed: true
});
$37c494f0001d7e79$export$bd754614700a28d5._FIND_MATCH_ONLY_OVERVIEW_DECORATION = $91ntV.ModelDecorationOptions.register({
    description: 'find-match-only-overview',
    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */ ,
    overviewRuler: {
        color: $azIPz.themeColorFromId($gaWeX.overviewRulerFindMatchForeground),
        position: $1Y4vr.OverviewRulerLane.Center
    }
});
$37c494f0001d7e79$export$bd754614700a28d5._RANGE_HIGHLIGHT_DECORATION = $91ntV.ModelDecorationOptions.register({
    description: 'find-range-highlight',
    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */ ,
    className: 'rangeHighlight',
    isWholeLine: true
});
$37c494f0001d7e79$export$bd754614700a28d5._FIND_SCOPE_DECORATION = $91ntV.ModelDecorationOptions.register({
    description: 'find-scope',
    className: 'findScope',
    isWholeLine: true
});



var $d00il = parcelRequire("d00il");
class $a6dc34dfa6b42381$export$3f7edd8e0e87094f {
    constructor(editorSelection, ranges, replaceStrings){
        this._editorSelection = editorSelection;
        this._ranges = ranges;
        this._replaceStrings = replaceStrings;
        this._trackedEditorSelectionId = null;
    }
    getEditOperations(model, builder) {
        if (this._ranges.length > 0) {
            // Collect all edit operations
            let ops = [];
            for(let i = 0; i < this._ranges.length; i++)ops.push({
                range: this._ranges[i],
                text: this._replaceStrings[i]
            });
            // Sort them in ascending order by range starts
            ops.sort((o1, o2)=>{
                return $d00il.Range.compareRangesUsingStarts(o1.range, o2.range);
            });
            // Merge operations that touch each other
            let resultOps = [];
            let previousOp = ops[0];
            for(let i1 = 1; i1 < ops.length; i1++)if (previousOp.range.endLineNumber === ops[i1].range.startLineNumber && previousOp.range.endColumn === ops[i1].range.startColumn) {
                // These operations are one after another and can be merged
                previousOp.range = previousOp.range.plusRange(ops[i1].range);
                previousOp.text = previousOp.text + ops[i1].text;
            } else {
                resultOps.push(previousOp);
                previousOp = ops[i1];
            }
            resultOps.push(previousOp);
            for (const op of resultOps)builder.addEditOperation(op.range, op.text);
        }
        this._trackedEditorSelectionId = builder.trackSelection(this._editorSelection);
    }
    computeCursorState(model, helper) {
        return helper.getTrackedSelection(this._trackedEditorSelectionId);
    }
}



var $jcr1R = parcelRequire("jcr1R");
function $151e1e15dfdcb73e$export$f007c37acc80e042(matches, pattern) {
    if (matches && matches[0] !== '') {
        const containsHyphens = $151e1e15dfdcb73e$var$validateSpecificSpecialCharacter(matches, pattern, '-');
        const containsUnderscores = $151e1e15dfdcb73e$var$validateSpecificSpecialCharacter(matches, pattern, '_');
        if (containsHyphens && !containsUnderscores) return $151e1e15dfdcb73e$var$buildReplaceStringForSpecificSpecialCharacter(matches, pattern, '-');
        else if (!containsHyphens && containsUnderscores) return $151e1e15dfdcb73e$var$buildReplaceStringForSpecificSpecialCharacter(matches, pattern, '_');
        if (matches[0].toUpperCase() === matches[0]) return pattern.toUpperCase();
        else if (matches[0].toLowerCase() === matches[0]) return pattern.toLowerCase();
        else if ($jcr1R.containsUppercaseCharacter(matches[0][0]) && pattern.length > 0) return pattern[0].toUpperCase() + pattern.substr(1);
        else if (matches[0][0].toUpperCase() !== matches[0][0] && pattern.length > 0) return pattern[0].toLowerCase() + pattern.substr(1);
        else // we don't understand its pattern yet.
        return pattern;
    } else return pattern;
}
function $151e1e15dfdcb73e$var$validateSpecificSpecialCharacter(matches, pattern, specialCharacter) {
    const doesContainSpecialCharacter = matches[0].indexOf(specialCharacter) !== -1 && pattern.indexOf(specialCharacter) !== -1;
    return doesContainSpecialCharacter && matches[0].split(specialCharacter).length === pattern.split(specialCharacter).length;
}
function $151e1e15dfdcb73e$var$buildReplaceStringForSpecificSpecialCharacter(matches, pattern, specialCharacter) {
    const splitPatternAtSpecialCharacter = pattern.split(specialCharacter);
    const splitMatchAtSpecialCharacter = matches[0].split(specialCharacter);
    let replaceString = '';
    splitPatternAtSpecialCharacter.forEach((splitValue, index)=>{
        replaceString += $151e1e15dfdcb73e$export$f007c37acc80e042([
            splitMatchAtSpecialCharacter[index]
        ], splitValue) + specialCharacter;
    });
    return replaceString.slice(0, -1);
}


/**
 * Assigned when the replace pattern is entirely static.
 */ class $4309e33f57936c73$var$StaticValueReplacePattern {
    constructor(staticValue){
        this.staticValue = staticValue;
        this.kind = 0 /* StaticValue */ ;
    }
}
/**
 * Assigned when the replace pattern has replacement patterns.
 */ class $4309e33f57936c73$var$DynamicPiecesReplacePattern {
    constructor(pieces){
        this.pieces = pieces;
        this.kind = 1 /* DynamicPieces */ ;
    }
}
class $4309e33f57936c73$export$512648940a758bce {
    constructor(pieces){
        if (!pieces || pieces.length === 0) this._state = new $4309e33f57936c73$var$StaticValueReplacePattern('');
        else if (pieces.length === 1 && pieces[0].staticValue !== null) this._state = new $4309e33f57936c73$var$StaticValueReplacePattern(pieces[0].staticValue);
        else this._state = new $4309e33f57936c73$var$DynamicPiecesReplacePattern(pieces);
    }
    static fromStaticValue(value) {
        return new $4309e33f57936c73$export$512648940a758bce([
            $4309e33f57936c73$export$1454288cb32b9472.staticValue(value)
        ]);
    }
    get hasReplacementPatterns() {
        return this._state.kind === 1 /* DynamicPieces */ ;
    }
    buildReplaceString(matches, preserveCase) {
        if (this._state.kind === 0 /* StaticValue */ ) {
            if (preserveCase) return $151e1e15dfdcb73e$export$f007c37acc80e042(matches, this._state.staticValue);
            else return this._state.staticValue;
        }
        let result = '';
        for(let i = 0, len = this._state.pieces.length; i < len; i++){
            let piece = this._state.pieces[i];
            if (piece.staticValue !== null) {
                // static value ReplacePiece
                result += piece.staticValue;
                continue;
            }
            // match index ReplacePiece
            let match = $4309e33f57936c73$export$512648940a758bce._substitute(piece.matchIndex, matches);
            if (piece.caseOps !== null && piece.caseOps.length > 0) {
                let repl = [];
                let lenOps = piece.caseOps.length;
                let opIdx = 0;
                for(let idx = 0, len = match.length; idx < len; idx++){
                    if (opIdx >= lenOps) {
                        repl.push(match.slice(idx));
                        break;
                    }
                    switch(piece.caseOps[opIdx]){
                        case 'U':
                            repl.push(match[idx].toUpperCase());
                            break;
                        case 'u':
                            repl.push(match[idx].toUpperCase());
                            opIdx++;
                            break;
                        case 'L':
                            repl.push(match[idx].toLowerCase());
                            break;
                        case 'l':
                            repl.push(match[idx].toLowerCase());
                            opIdx++;
                            break;
                        default:
                            repl.push(match[idx]);
                    }
                }
                match = repl.join('');
            }
            result += match;
        }
        return result;
    }
    static _substitute(matchIndex, matches) {
        if (matches === null) return '';
        if (matchIndex === 0) return matches[0];
        let remainder = '';
        while(matchIndex > 0){
            if (matchIndex < matches.length) {
                // A match can be undefined
                let match = matches[matchIndex] || '';
                return match + remainder;
            }
            remainder = String(matchIndex % 10) + remainder;
            matchIndex = Math.floor(matchIndex / 10);
        }
        return '$' + remainder;
    }
}
class $4309e33f57936c73$export$1454288cb32b9472 {
    constructor(staticValue, matchIndex, caseOps){
        this.staticValue = staticValue;
        this.matchIndex = matchIndex;
        if (!caseOps || caseOps.length === 0) this.caseOps = null;
        else this.caseOps = caseOps.slice(0);
    }
    static staticValue(value) {
        return new $4309e33f57936c73$export$1454288cb32b9472(value, -1, null);
    }
    static caseOps(index, caseOps) {
        return new $4309e33f57936c73$export$1454288cb32b9472(null, index, caseOps);
    }
}
class $4309e33f57936c73$var$ReplacePieceBuilder {
    constructor(source){
        this._source = source;
        this._lastCharIndex = 0;
        this._result = [];
        this._resultLen = 0;
        this._currentStaticPiece = '';
    }
    emitUnchanged(toCharIndex) {
        this._emitStatic(this._source.substring(this._lastCharIndex, toCharIndex));
        this._lastCharIndex = toCharIndex;
    }
    emitStatic(value, toCharIndex) {
        this._emitStatic(value);
        this._lastCharIndex = toCharIndex;
    }
    _emitStatic(value) {
        if (value.length === 0) return;
        this._currentStaticPiece += value;
    }
    emitMatchIndex(index, toCharIndex, caseOps) {
        if (this._currentStaticPiece.length !== 0) {
            this._result[this._resultLen++] = $4309e33f57936c73$export$1454288cb32b9472.staticValue(this._currentStaticPiece);
            this._currentStaticPiece = '';
        }
        this._result[this._resultLen++] = $4309e33f57936c73$export$1454288cb32b9472.caseOps(index, caseOps);
        this._lastCharIndex = toCharIndex;
    }
    finalize() {
        this.emitUnchanged(this._source.length);
        if (this._currentStaticPiece.length !== 0) {
            this._result[this._resultLen++] = $4309e33f57936c73$export$1454288cb32b9472.staticValue(this._currentStaticPiece);
            this._currentStaticPiece = '';
        }
        return new $4309e33f57936c73$export$512648940a758bce(this._result);
    }
}
function $4309e33f57936c73$export$ca668b7a7924cbca(replaceString) {
    if (!replaceString || replaceString.length === 0) return new $4309e33f57936c73$export$512648940a758bce(null);
    let caseOps = [];
    let result = new $4309e33f57936c73$var$ReplacePieceBuilder(replaceString);
    for(let i = 0, len = replaceString.length; i < len; i++){
        let chCode = replaceString.charCodeAt(i);
        if (chCode === 92 /* Backslash */ ) {
            // move to next char
            i++;
            if (i >= len) break;
            let nextChCode = replaceString.charCodeAt(i);
            // let replaceWithCharacter: string | null = null;
            switch(nextChCode){
                case 92 /* Backslash */ :
                    // \\ => inserts a "\"
                    result.emitUnchanged(i - 1);
                    result.emitStatic('\\', i + 1);
                    break;
                case 110 /* n */ :
                    // \n => inserts a LF
                    result.emitUnchanged(i - 1);
                    result.emitStatic('\n', i + 1);
                    break;
                case 116 /* t */ :
                    // \t => inserts a TAB
                    result.emitUnchanged(i - 1);
                    result.emitStatic('\t', i + 1);
                    break;
                // Case modification of string replacements, patterned after Boost, but only applied
                // to the replacement text, not subsequent content.
                case 117 /* u */ :
                // \u => upper-cases one character.
                case 85 /* U */ :
                // \U => upper-cases ALL following characters.
                case 108 /* l */ :
                // \l => lower-cases one character.
                case 76 /* L */ :
                    // \L => lower-cases ALL following characters.
                    result.emitUnchanged(i - 1);
                    result.emitStatic('', i + 1);
                    caseOps.push(String.fromCharCode(nextChCode));
                    break;
            }
            continue;
        }
        if (chCode === 36 /* DollarSign */ ) {
            // move to next char
            i++;
            if (i >= len) break;
            let nextChCode = replaceString.charCodeAt(i);
            if (nextChCode === 36 /* DollarSign */ ) {
                // $$ => inserts a "$"
                result.emitUnchanged(i - 1);
                result.emitStatic('$', i + 1);
                continue;
            }
            if (nextChCode === 48 /* Digit0 */  || nextChCode === 38 /* Ampersand */ ) {
                // $& and $0 => inserts the matched substring.
                result.emitUnchanged(i - 1);
                result.emitMatchIndex(0, i + 1, caseOps);
                caseOps.length = 0;
                continue;
            }
            if (49 /* Digit1 */  <= nextChCode && nextChCode <= 57 /* Digit9 */ ) {
                // $n
                let matchIndex = nextChCode - 48 /* Digit0 */ ;
                // peek next char to probe for $nn
                if (i + 1 < len) {
                    let nextNextChCode = replaceString.charCodeAt(i + 1);
                    if (48 /* Digit0 */  <= nextNextChCode && nextNextChCode <= 57 /* Digit9 */ ) {
                        // $nn
                        // move to next char
                        i++;
                        matchIndex = matchIndex * 10 + (nextNextChCode - 48 /* Digit0 */ );
                        result.emitUnchanged(i - 2);
                        result.emitMatchIndex(matchIndex, i + 1, caseOps);
                        caseOps.length = 0;
                        continue;
                    }
                }
                result.emitUnchanged(i - 1);
                result.emitMatchIndex(matchIndex, i + 1, caseOps);
                caseOps.length = 0;
                continue;
            }
        }
    }
    return result.finalize();
}



var $cxCeF = parcelRequire("cxCeF");
const $9bb245d49668b670$export$bc27e4192c4ca2b8 = new $cxCeF.RawContextKey('findWidgetVisible', false);
const $9bb245d49668b670$export$1bcc3ed82148a8b9 = new $cxCeF.RawContextKey('findInputFocussed', false);
const $9bb245d49668b670$export$1b9f123cc9b71d78 = new $cxCeF.RawContextKey('replaceInputFocussed', false);
const $9bb245d49668b670$export$2fe068521df792d6 = {
    primary: 545 /* KeyC */ ,
    mac: {
        primary: 2593 /* KeyC */ 
    }
};
const $9bb245d49668b670$export$cc2b8eb9ab15ca30 = {
    primary: 565 /* KeyW */ ,
    mac: {
        primary: 2613 /* KeyW */ 
    }
};
const $9bb245d49668b670$export$7c479f7cdbb6d55e = {
    primary: 560 /* KeyR */ ,
    mac: {
        primary: 2608 /* KeyR */ 
    }
};
const $9bb245d49668b670$export$a02b1f674b6f16d3 = {
    primary: 554 /* KeyL */ ,
    mac: {
        primary: 2602 /* KeyL */ 
    }
};
const $9bb245d49668b670$export$68ae9fdc5844d61a = {
    primary: 558 /* KeyP */ ,
    mac: {
        primary: 2606 /* KeyP */ 
    }
};
const $9bb245d49668b670$export$a4fc1be778636938 = {
    StartFindAction: 'actions.find',
    StartFindWithSelection: 'actions.findWithSelection',
    StartFindWithArgs: 'editor.actions.findWithArgs',
    NextMatchFindAction: 'editor.action.nextMatchFindAction',
    PreviousMatchFindAction: 'editor.action.previousMatchFindAction',
    NextSelectionMatchFindAction: 'editor.action.nextSelectionMatchFindAction',
    PreviousSelectionMatchFindAction: 'editor.action.previousSelectionMatchFindAction',
    StartFindReplaceAction: 'editor.action.startFindReplaceAction',
    CloseFindWidgetCommand: 'closeFindWidget',
    ToggleCaseSensitiveCommand: 'toggleFindCaseSensitive',
    ToggleWholeWordCommand: 'toggleFindWholeWord',
    ToggleRegexCommand: 'toggleFindRegex',
    ToggleSearchScopeCommand: 'toggleFindInSelection',
    TogglePreserveCaseCommand: 'togglePreserveCase',
    ReplaceOneAction: 'editor.action.replaceOne',
    ReplaceAllAction: 'editor.action.replaceAll',
    SelectAllMatchesAction: 'editor.action.selectAllMatches'
};
const $9bb245d49668b670$export$79640dbfb07f50a4 = 19999;
const $9bb245d49668b670$var$RESEARCH_DELAY = 240;
class $9bb245d49668b670$export$2aaa4f42000d804d {
    constructor(editor, state){
        this._toDispose = new $9cWcn.DisposableStore();
        this._editor = editor;
        this._state = state;
        this._isDisposed = false;
        this._startSearchingTimer = new $6bXyA.TimeoutTimer();
        this._decorations = new $37c494f0001d7e79$export$bd754614700a28d5(editor);
        this._toDispose.add(this._decorations);
        this._updateDecorationsScheduler = new $6bXyA.RunOnceScheduler(()=>this.research(false)
        , 100);
        this._toDispose.add(this._updateDecorationsScheduler);
        this._toDispose.add(this._editor.onDidChangeCursorPosition((e)=>{
            if (e.reason === 3 /* Explicit */  || e.reason === 5 /* Undo */  || e.reason === 6 /* Redo */ ) this._decorations.setStartPosition(this._editor.getPosition());
        }));
        this._ignoreModelContentChanged = false;
        this._toDispose.add(this._editor.onDidChangeModelContent((e)=>{
            if (this._ignoreModelContentChanged) return;
            if (e.isFlush) // a model.setValue() was called
            this._decorations.reset();
            this._decorations.setStartPosition(this._editor.getPosition());
            this._updateDecorationsScheduler.schedule();
        }));
        this._toDispose.add(this._state.onFindReplaceStateChange((e)=>this._onStateChanged(e)
        ));
        this.research(false, this._state.searchScope);
    }
    dispose() {
        this._isDisposed = true;
        $9cWcn.dispose(this._startSearchingTimer);
        this._toDispose.dispose();
    }
    _onStateChanged(e) {
        if (this._isDisposed) // The find model is disposed during a find state changed event
        return;
        if (!this._editor.hasModel()) // The find model will be disposed momentarily
        return;
        if (e.searchString || e.isReplaceRevealed || e.isRegex || e.wholeWord || e.matchCase || e.searchScope) {
            let model = this._editor.getModel();
            if (model.isTooLargeForSyncing()) {
                this._startSearchingTimer.cancel();
                this._startSearchingTimer.setIfNotSet(()=>{
                    if (e.searchScope) this.research(e.moveCursor, this._state.searchScope);
                    else this.research(e.moveCursor);
                }, $9bb245d49668b670$var$RESEARCH_DELAY);
            } else if (e.searchScope) this.research(e.moveCursor, this._state.searchScope);
            else this.research(e.moveCursor);
        }
    }
    static _getSearchRange(model, findScope) {
        // If we have set now or before a find scope, use it for computing the search range
        if (findScope) return findScope;
        return model.getFullModelRange();
    }
    research(moveCursor, newFindScope) {
        let findScopes = null;
        if (typeof newFindScope !== 'undefined') {
            if (newFindScope !== null) {
                if (!Array.isArray(newFindScope)) findScopes = [
                    newFindScope
                ];
                else findScopes = newFindScope;
            }
        } else findScopes = this._decorations.getFindScopes();
        if (findScopes !== null) findScopes = findScopes.map((findScope)=>{
            if (findScope.startLineNumber !== findScope.endLineNumber) {
                let endLineNumber = findScope.endLineNumber;
                if (findScope.endColumn === 1) endLineNumber = endLineNumber - 1;
                return new $d00il.Range(findScope.startLineNumber, 1, endLineNumber, this._editor.getModel().getLineMaxColumn(endLineNumber));
            }
            return findScope;
        });
        let findMatches = this._findMatches(findScopes, false, $9bb245d49668b670$export$79640dbfb07f50a4);
        this._decorations.set(findMatches, findScopes);
        const editorSelection = this._editor.getSelection();
        let currentMatchesPosition = this._decorations.getCurrentMatchesPosition(editorSelection);
        if (currentMatchesPosition === 0 && findMatches.length > 0) {
            // current selection is not on top of a match
            // try to find its nearest result from the top of the document
            const matchAfterSelection = $kJ8UG.findFirstInSorted(findMatches.map((match)=>match.range
            ), (range)=>$d00il.Range.compareRangesUsingStarts(range, editorSelection) >= 0
            );
            currentMatchesPosition = matchAfterSelection > 0 ? matchAfterSelection - 1 + 1 /** match position is one based */  : currentMatchesPosition;
        }
        this._state.changeMatchInfo(currentMatchesPosition, this._decorations.getCount(), undefined);
        if (moveCursor && this._editor.getOption(35 /* find */ ).cursorMoveOnType) this._moveToNextMatch(this._decorations.getStartPosition());
    }
    _hasMatches() {
        return this._state.matchesCount > 0;
    }
    _cannotFind() {
        if (!this._hasMatches()) {
            let findScope = this._decorations.getFindScope();
            if (findScope) // Reveal the selection so user is reminded that 'selection find' is on.
            this._editor.revealRangeInCenterIfOutsideViewport(findScope, 0 /* Smooth */ );
            return true;
        }
        return false;
    }
    _setCurrentFindMatch(match) {
        let matchesPosition = this._decorations.setCurrentFindMatch(match);
        this._state.changeMatchInfo(matchesPosition, this._decorations.getCount(), match);
        this._editor.setSelection(match);
        this._editor.revealRangeInCenterIfOutsideViewport(match, 0 /* Smooth */ );
    }
    _prevSearchPosition(before) {
        let isUsingLineStops = this._state.isRegex && (this._state.searchString.indexOf('^') >= 0 || this._state.searchString.indexOf('$') >= 0);
        let { lineNumber: lineNumber , column: column  } = before;
        let model = this._editor.getModel();
        if (isUsingLineStops || column === 1) {
            if (lineNumber === 1) lineNumber = model.getLineCount();
            else lineNumber--;
            column = model.getLineMaxColumn(lineNumber);
        } else column--;
        return new $dcxQ7.Position(lineNumber, column);
    }
    _moveToPrevMatch(before, isRecursed = false) {
        if (!this._state.canNavigateBack()) {
            // we are beyond the first matched find result
            // instead of doing nothing, we should refocus the first item
            const nextMatchRange = this._decorations.matchAfterPosition(before);
            if (nextMatchRange) this._setCurrentFindMatch(nextMatchRange);
            return;
        }
        if (this._decorations.getCount() < $9bb245d49668b670$export$79640dbfb07f50a4) {
            let prevMatchRange = this._decorations.matchBeforePosition(before);
            if (prevMatchRange && prevMatchRange.isEmpty() && prevMatchRange.getStartPosition().equals(before)) {
                before = this._prevSearchPosition(before);
                prevMatchRange = this._decorations.matchBeforePosition(before);
            }
            if (prevMatchRange) this._setCurrentFindMatch(prevMatchRange);
            return;
        }
        if (this._cannotFind()) return;
        let findScope = this._decorations.getFindScope();
        let searchRange = $9bb245d49668b670$export$2aaa4f42000d804d._getSearchRange(this._editor.getModel(), findScope);
        // ...(----)...|...
        if (searchRange.getEndPosition().isBefore(before)) before = searchRange.getEndPosition();
        // ...|...(----)...
        if (before.isBefore(searchRange.getStartPosition())) before = searchRange.getEndPosition();
        let { lineNumber: lineNumber , column: column  } = before;
        let model = this._editor.getModel();
        let position = new $dcxQ7.Position(lineNumber, column);
        let prevMatch = model.findPreviousMatch(this._state.searchString, position, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(116 /* wordSeparators */ ) : null, false);
        if (prevMatch && prevMatch.range.isEmpty() && prevMatch.range.getStartPosition().equals(position)) {
            // Looks like we're stuck at this position, unacceptable!
            position = this._prevSearchPosition(position);
            prevMatch = model.findPreviousMatch(this._state.searchString, position, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(116 /* wordSeparators */ ) : null, false);
        }
        if (!prevMatch) // there is precisely one match and selection is on top of it
        return;
        if (!isRecursed && !searchRange.containsRange(prevMatch.range)) return this._moveToPrevMatch(prevMatch.range.getStartPosition(), true);
        this._setCurrentFindMatch(prevMatch.range);
    }
    moveToPrevMatch() {
        this._moveToPrevMatch(this._editor.getSelection().getStartPosition());
    }
    _nextSearchPosition(after) {
        let isUsingLineStops = this._state.isRegex && (this._state.searchString.indexOf('^') >= 0 || this._state.searchString.indexOf('$') >= 0);
        let { lineNumber: lineNumber , column: column  } = after;
        let model = this._editor.getModel();
        if (isUsingLineStops || column === model.getLineMaxColumn(lineNumber)) {
            if (lineNumber === model.getLineCount()) lineNumber = 1;
            else lineNumber++;
            column = 1;
        } else column++;
        return new $dcxQ7.Position(lineNumber, column);
    }
    _moveToNextMatch(after) {
        if (!this._state.canNavigateForward()) {
            // we are beyond the last matched find result
            // instead of doing nothing, we should refocus the last item
            const prevMatchRange = this._decorations.matchBeforePosition(after);
            if (prevMatchRange) this._setCurrentFindMatch(prevMatchRange);
            return;
        }
        if (this._decorations.getCount() < $9bb245d49668b670$export$79640dbfb07f50a4) {
            let nextMatchRange = this._decorations.matchAfterPosition(after);
            if (nextMatchRange && nextMatchRange.isEmpty() && nextMatchRange.getStartPosition().equals(after)) {
                // Looks like we're stuck at this position, unacceptable!
                after = this._nextSearchPosition(after);
                nextMatchRange = this._decorations.matchAfterPosition(after);
            }
            if (nextMatchRange) this._setCurrentFindMatch(nextMatchRange);
            return;
        }
        let nextMatch = this._getNextMatch(after, false, true);
        if (nextMatch) this._setCurrentFindMatch(nextMatch.range);
    }
    _getNextMatch(after, captureMatches, forceMove, isRecursed = false) {
        if (this._cannotFind()) return null;
        let findScope = this._decorations.getFindScope();
        let searchRange = $9bb245d49668b670$export$2aaa4f42000d804d._getSearchRange(this._editor.getModel(), findScope);
        // ...(----)...|...
        if (searchRange.getEndPosition().isBefore(after)) after = searchRange.getStartPosition();
        // ...|...(----)...
        if (after.isBefore(searchRange.getStartPosition())) after = searchRange.getStartPosition();
        let { lineNumber: lineNumber , column: column  } = after;
        let model = this._editor.getModel();
        let position = new $dcxQ7.Position(lineNumber, column);
        let nextMatch = model.findNextMatch(this._state.searchString, position, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(116 /* wordSeparators */ ) : null, captureMatches);
        if (forceMove && nextMatch && nextMatch.range.isEmpty() && nextMatch.range.getStartPosition().equals(position)) {
            // Looks like we're stuck at this position, unacceptable!
            position = this._nextSearchPosition(position);
            nextMatch = model.findNextMatch(this._state.searchString, position, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(116 /* wordSeparators */ ) : null, captureMatches);
        }
        if (!nextMatch) // there is precisely one match and selection is on top of it
        return null;
        if (!isRecursed && !searchRange.containsRange(nextMatch.range)) return this._getNextMatch(nextMatch.range.getEndPosition(), captureMatches, forceMove, true);
        return nextMatch;
    }
    moveToNextMatch() {
        this._moveToNextMatch(this._editor.getSelection().getEndPosition());
    }
    _getReplacePattern() {
        if (this._state.isRegex) return $4309e33f57936c73$export$ca668b7a7924cbca(this._state.replaceString);
        return $4309e33f57936c73$export$512648940a758bce.fromStaticValue(this._state.replaceString);
    }
    replace() {
        if (!this._hasMatches()) return;
        let replacePattern = this._getReplacePattern();
        let selection = this._editor.getSelection();
        let nextMatch = this._getNextMatch(selection.getStartPosition(), true, false);
        if (nextMatch) {
            if (selection.equalsRange(nextMatch.range)) {
                // selection sits on a find match => replace it!
                let replaceString = replacePattern.buildReplaceString(nextMatch.matches, this._state.preserveCase);
                let command = new $5TVJR.ReplaceCommand(selection, replaceString);
                this._executeEditorCommand('replace', command);
                this._decorations.setStartPosition(new $dcxQ7.Position(selection.startLineNumber, selection.startColumn + replaceString.length));
                this.research(true);
            } else {
                this._decorations.setStartPosition(this._editor.getPosition());
                this._setCurrentFindMatch(nextMatch.range);
            }
        }
    }
    _findMatches(findScopes, captureMatches, limitResultCount) {
        const searchRanges = (findScopes || [
            null
        ]).map((scope)=>$9bb245d49668b670$export$2aaa4f42000d804d._getSearchRange(this._editor.getModel(), scope)
        );
        return this._editor.getModel().findMatches(this._state.searchString, searchRanges, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(116 /* wordSeparators */ ) : null, captureMatches, limitResultCount);
    }
    replaceAll() {
        if (!this._hasMatches()) return;
        const findScopes = this._decorations.getFindScopes();
        if (findScopes === null && this._state.matchesCount >= $9bb245d49668b670$export$79640dbfb07f50a4) // Doing a replace on the entire file that is over ${MATCHES_LIMIT} matches
        this._largeReplaceAll();
        else this._regularReplaceAll(findScopes);
        this.research(false);
    }
    _largeReplaceAll() {
        const searchParams = new $35NkE.SearchParams(this._state.searchString, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(116 /* wordSeparators */ ) : null);
        const searchData = searchParams.parseSearchRequest();
        if (!searchData) return;
        let searchRegex = searchData.regex;
        if (!searchRegex.multiline) {
            let mod = 'mu';
            if (searchRegex.ignoreCase) mod += 'i';
            if (searchRegex.global) mod += 'g';
            searchRegex = new RegExp(searchRegex.source, mod);
        }
        const model = this._editor.getModel();
        const modelText = model.getValue(1 /* LF */ );
        const fullModelRange = model.getFullModelRange();
        const replacePattern = this._getReplacePattern();
        let resultText;
        const preserveCase = this._state.preserveCase;
        if (replacePattern.hasReplacementPatterns || preserveCase) resultText = modelText.replace(searchRegex, function() {
            return replacePattern.buildReplaceString(arguments, preserveCase);
        });
        else resultText = modelText.replace(searchRegex, replacePattern.buildReplaceString(null, preserveCase));
        let command = new $5TVJR.ReplaceCommandThatPreservesSelection(fullModelRange, resultText, this._editor.getSelection());
        this._executeEditorCommand('replaceAll', command);
    }
    _regularReplaceAll(findScopes) {
        const replacePattern = this._getReplacePattern();
        // Get all the ranges (even more than the highlighted ones)
        let matches = this._findMatches(findScopes, replacePattern.hasReplacementPatterns || this._state.preserveCase, 1073741824 /* MAX_SAFE_SMALL_INTEGER */ );
        let replaceStrings = [];
        for(let i = 0, len = matches.length; i < len; i++)replaceStrings[i] = replacePattern.buildReplaceString(matches[i].matches, this._state.preserveCase);
        let command = new $a6dc34dfa6b42381$export$3f7edd8e0e87094f(this._editor.getSelection(), matches.map((m)=>m.range
        ), replaceStrings);
        this._executeEditorCommand('replaceAll', command);
    }
    selectAllMatches() {
        if (!this._hasMatches()) return;
        let findScopes = this._decorations.getFindScopes();
        // Get all the ranges (even more than the highlighted ones)
        let matches = this._findMatches(findScopes, false, 1073741824 /* MAX_SAFE_SMALL_INTEGER */ );
        let selections = matches.map((m)=>new $jzicX.Selection(m.range.startLineNumber, m.range.startColumn, m.range.endLineNumber, m.range.endColumn)
        );
        // If one of the ranges is the editor selection, then maintain it as primary
        let editorSelection = this._editor.getSelection();
        for(let i = 0, len = selections.length; i < len; i++){
            let sel = selections[i];
            if (sel.equalsRange(editorSelection)) {
                selections = [
                    editorSelection
                ].concat(selections.slice(0, i)).concat(selections.slice(i + 1));
                break;
            }
        }
        this._editor.setSelections(selections);
    }
    _executeEditorCommand(source, command) {
        try {
            this._ignoreModelContentChanged = true;
            this._editor.pushUndoStop();
            this._editor.executeCommand(source, command);
            this._editor.pushUndoStop();
        } finally{
            this._ignoreModelContentChanged = false;
        }
    }
}



var $bDzmQ = parcelRequire("bDzmQ");

var $fxJYg = parcelRequire("fxJYg");

var $awgRE = parcelRequire("awgRE");

var $bjjQO = parcelRequire("bjjQO");

var $5YaSO = parcelRequire("5YaSO");

const $22c4e80b3baaa8f9$var$defaultOpts = {
    inputActiveOptionBorder: $bjjQO.Color.fromHex('#007ACC00'),
    inputActiveOptionForeground: $bjjQO.Color.fromHex('#FFFFFF'),
    inputActiveOptionBackground: $bjjQO.Color.fromHex('#0E639C50')
};
class $22c4e80b3baaa8f9$export$48513f6b9f8ce62d extends $fxJYg.Widget {
    constructor(opts){
        super();
        this._onChange = this._register(new $5YaSO.Emitter());
        this.onChange = this._onChange.event;
        this._onKeyDown = this._register(new $5YaSO.Emitter());
        this.onKeyDown = this._onKeyDown.event;
        this._opts = Object.assign(Object.assign({}, $22c4e80b3baaa8f9$var$defaultOpts), opts);
        this._checked = this._opts.isChecked;
        const classes = [
            'monaco-custom-checkbox'
        ];
        if (this._opts.icon) classes.push(...$awgRE.CSSIcon.asClassNameArray(this._opts.icon));
        if (this._opts.actionClassName) classes.push(...this._opts.actionClassName.split(' '));
        if (this._checked) classes.push('checked');
        this.domNode = document.createElement('div');
        this.domNode.title = this._opts.title;
        this.domNode.classList.add(...classes);
        if (!this._opts.notFocusable) this.domNode.tabIndex = 0;
        this.domNode.setAttribute('role', 'checkbox');
        this.domNode.setAttribute('aria-checked', String(this._checked));
        this.domNode.setAttribute('aria-label', this._opts.title);
        this.applyStyles();
        this.onclick(this.domNode, (ev)=>{
            this.checked = !this._checked;
            this._onChange.fire(false);
            ev.preventDefault();
        });
        this.ignoreGesture(this.domNode);
        this.onkeydown(this.domNode, (keyboardEvent)=>{
            if (keyboardEvent.keyCode === 10 /* Space */  || keyboardEvent.keyCode === 3 /* Enter */ ) {
                this.checked = !this._checked;
                this._onChange.fire(true);
                keyboardEvent.preventDefault();
                return;
            }
            this._onKeyDown.fire(keyboardEvent);
        });
    }
    get enabled() {
        return this.domNode.getAttribute('aria-disabled') !== 'true';
    }
    focus() {
        this.domNode.focus();
    }
    get checked() {
        return this._checked;
    }
    set checked(newIsChecked) {
        this._checked = newIsChecked;
        this.domNode.setAttribute('aria-checked', String(this._checked));
        this.domNode.classList.toggle('checked', this._checked);
        this.applyStyles();
    }
    width() {
        return 22 /* icon width */ ;
    }
    style(styles) {
        if (styles.inputActiveOptionBorder) this._opts.inputActiveOptionBorder = styles.inputActiveOptionBorder;
        if (styles.inputActiveOptionForeground) this._opts.inputActiveOptionForeground = styles.inputActiveOptionForeground;
        if (styles.inputActiveOptionBackground) this._opts.inputActiveOptionBackground = styles.inputActiveOptionBackground;
        this.applyStyles();
    }
    applyStyles() {
        if (this.domNode) {
            this.domNode.style.borderColor = this._checked && this._opts.inputActiveOptionBorder ? this._opts.inputActiveOptionBorder.toString() : '';
            this.domNode.style.color = this._checked && this._opts.inputActiveOptionForeground ? this._opts.inputActiveOptionForeground.toString() : 'inherit';
            this.domNode.style.backgroundColor = this._checked && this._opts.inputActiveOptionBackground ? this._opts.inputActiveOptionBackground.toString() : '';
        }
    }
    enable() {
        this.domNode.setAttribute('aria-disabled', String(false));
    }
    disable() {
        this.domNode.setAttribute('aria-disabled', String(true));
    }
}



var $awgRE = parcelRequire("awgRE");

var $4dEdH = parcelRequire("4dEdH");
const $abab33e083f88ab8$var$NLS_CASE_SENSITIVE_CHECKBOX_LABEL = $4dEdH.localize('caseDescription', "Match Case");
const $abab33e083f88ab8$var$NLS_WHOLE_WORD_CHECKBOX_LABEL = $4dEdH.localize('wordsDescription', "Match Whole Word");
const $abab33e083f88ab8$var$NLS_REGEX_CHECKBOX_LABEL = $4dEdH.localize('regexDescription', "Use Regular Expression");
class $abab33e083f88ab8$export$35c8b2120be2442f extends $22c4e80b3baaa8f9$export$48513f6b9f8ce62d {
    constructor(opts){
        super({
            icon: $awgRE.Codicon.caseSensitive,
            title: $abab33e083f88ab8$var$NLS_CASE_SENSITIVE_CHECKBOX_LABEL + opts.appendTitle,
            isChecked: opts.isChecked,
            inputActiveOptionBorder: opts.inputActiveOptionBorder,
            inputActiveOptionForeground: opts.inputActiveOptionForeground,
            inputActiveOptionBackground: opts.inputActiveOptionBackground
        });
    }
}
class $abab33e083f88ab8$export$ac12d23e9f4ae591 extends $22c4e80b3baaa8f9$export$48513f6b9f8ce62d {
    constructor(opts){
        super({
            icon: $awgRE.Codicon.wholeWord,
            title: $abab33e083f88ab8$var$NLS_WHOLE_WORD_CHECKBOX_LABEL + opts.appendTitle,
            isChecked: opts.isChecked,
            inputActiveOptionBorder: opts.inputActiveOptionBorder,
            inputActiveOptionForeground: opts.inputActiveOptionForeground,
            inputActiveOptionBackground: opts.inputActiveOptionBackground
        });
    }
}
class $abab33e083f88ab8$export$4e97f692e737273e extends $22c4e80b3baaa8f9$export$48513f6b9f8ce62d {
    constructor(opts){
        super({
            icon: $awgRE.Codicon.regex,
            title: $abab33e083f88ab8$var$NLS_REGEX_CHECKBOX_LABEL + opts.appendTitle,
            isChecked: opts.isChecked,
            inputActiveOptionBorder: opts.inputActiveOptionBorder,
            inputActiveOptionForeground: opts.inputActiveOptionForeground,
            inputActiveOptionBackground: opts.inputActiveOptionBackground
        });
    }
}



var $fxJYg = parcelRequire("fxJYg");

var $6bXyA = parcelRequire("6bXyA");


var $gaWeX = parcelRequire("gaWeX");

var $azIPz = parcelRequire("azIPz");
class $c3141e87727595ac$export$2ff720b27319038e extends $fxJYg.Widget {
    constructor(editor, state, keybindingService, themeService){
        super();
        this._hideSoon = this._register(new $6bXyA.RunOnceScheduler(()=>this._hide()
        , 2000));
        this._isVisible = false;
        this._editor = editor;
        this._state = state;
        this._keybindingService = keybindingService;
        this._domNode = document.createElement('div');
        this._domNode.className = 'findOptionsWidget';
        this._domNode.style.display = 'none';
        this._domNode.style.top = '10px';
        this._domNode.setAttribute('role', 'presentation');
        this._domNode.setAttribute('aria-hidden', 'true');
        const inputActiveOptionBorderColor = themeService.getColorTheme().getColor($gaWeX.inputActiveOptionBorder);
        const inputActiveOptionForegroundColor = themeService.getColorTheme().getColor($gaWeX.inputActiveOptionForeground);
        const inputActiveOptionBackgroundColor = themeService.getColorTheme().getColor($gaWeX.inputActiveOptionBackground);
        this.caseSensitive = this._register(new $abab33e083f88ab8$export$35c8b2120be2442f({
            appendTitle: this._keybindingLabelFor($9bb245d49668b670$export$a4fc1be778636938.ToggleCaseSensitiveCommand),
            isChecked: this._state.matchCase,
            inputActiveOptionBorder: inputActiveOptionBorderColor,
            inputActiveOptionForeground: inputActiveOptionForegroundColor,
            inputActiveOptionBackground: inputActiveOptionBackgroundColor
        }));
        this._domNode.appendChild(this.caseSensitive.domNode);
        this._register(this.caseSensitive.onChange(()=>{
            this._state.change({
                matchCase: this.caseSensitive.checked
            }, false);
        }));
        this.wholeWords = this._register(new $abab33e083f88ab8$export$ac12d23e9f4ae591({
            appendTitle: this._keybindingLabelFor($9bb245d49668b670$export$a4fc1be778636938.ToggleWholeWordCommand),
            isChecked: this._state.wholeWord,
            inputActiveOptionBorder: inputActiveOptionBorderColor,
            inputActiveOptionForeground: inputActiveOptionForegroundColor,
            inputActiveOptionBackground: inputActiveOptionBackgroundColor
        }));
        this._domNode.appendChild(this.wholeWords.domNode);
        this._register(this.wholeWords.onChange(()=>{
            this._state.change({
                wholeWord: this.wholeWords.checked
            }, false);
        }));
        this.regex = this._register(new $abab33e083f88ab8$export$4e97f692e737273e({
            appendTitle: this._keybindingLabelFor($9bb245d49668b670$export$a4fc1be778636938.ToggleRegexCommand),
            isChecked: this._state.isRegex,
            inputActiveOptionBorder: inputActiveOptionBorderColor,
            inputActiveOptionForeground: inputActiveOptionForegroundColor,
            inputActiveOptionBackground: inputActiveOptionBackgroundColor
        }));
        this._domNode.appendChild(this.regex.domNode);
        this._register(this.regex.onChange(()=>{
            this._state.change({
                isRegex: this.regex.checked
            }, false);
        }));
        this._editor.addOverlayWidget(this);
        this._register(this._state.onFindReplaceStateChange((e)=>{
            let somethingChanged = false;
            if (e.isRegex) {
                this.regex.checked = this._state.isRegex;
                somethingChanged = true;
            }
            if (e.wholeWord) {
                this.wholeWords.checked = this._state.wholeWord;
                somethingChanged = true;
            }
            if (e.matchCase) {
                this.caseSensitive.checked = this._state.matchCase;
                somethingChanged = true;
            }
            if (!this._state.isRevealed && somethingChanged) this._revealTemporarily();
        }));
        this._register($bDzmQ.addDisposableNonBubblingMouseOutListener(this._domNode, (e)=>this._onMouseOut()
        ));
        this._register($bDzmQ.addDisposableListener(this._domNode, 'mouseover', (e)=>this._onMouseOver()
        ));
        this._applyTheme(themeService.getColorTheme());
        this._register(themeService.onDidColorThemeChange(this._applyTheme.bind(this)));
    }
    _keybindingLabelFor(actionId) {
        let kb = this._keybindingService.lookupKeybinding(actionId);
        if (!kb) return '';
        return ` (${kb.getLabel()})`;
    }
    dispose() {
        this._editor.removeOverlayWidget(this);
        super.dispose();
    }
    // ----- IOverlayWidget API
    getId() {
        return $c3141e87727595ac$export$2ff720b27319038e.ID;
    }
    getDomNode() {
        return this._domNode;
    }
    getPosition() {
        return {
            preference: 0 /* TOP_RIGHT_CORNER */ 
        };
    }
    highlightFindOptions() {
        this._revealTemporarily();
    }
    _revealTemporarily() {
        this._show();
        this._hideSoon.schedule();
    }
    _onMouseOut() {
        this._hideSoon.schedule();
    }
    _onMouseOver() {
        this._hideSoon.cancel();
    }
    _show() {
        if (this._isVisible) return;
        this._isVisible = true;
        this._domNode.style.display = 'block';
    }
    _hide() {
        if (!this._isVisible) return;
        this._isVisible = false;
        this._domNode.style.display = 'none';
    }
    _applyTheme(theme) {
        let inputStyles = {
            inputActiveOptionBorder: theme.getColor($gaWeX.inputActiveOptionBorder),
            inputActiveOptionForeground: theme.getColor($gaWeX.inputActiveOptionForeground),
            inputActiveOptionBackground: theme.getColor($gaWeX.inputActiveOptionBackground)
        };
        this.caseSensitive.style(inputStyles);
        this.wholeWords.style(inputStyles);
        this.regex.style(inputStyles);
    }
}
$c3141e87727595ac$export$2ff720b27319038e.ID = 'editor.contrib.findOptionsWidget';
$azIPz.registerThemingParticipant((theme, collector)=>{
    const widgetBackground = theme.getColor($gaWeX.editorWidgetBackground);
    if (widgetBackground) collector.addRule(`.monaco-editor .findOptionsWidget { background-color: ${widgetBackground}; }`);
    const widgetForeground = theme.getColor($gaWeX.editorWidgetForeground);
    if (widgetForeground) collector.addRule(`.monaco-editor .findOptionsWidget { color: ${widgetForeground}; }`);
    const widgetShadowColor = theme.getColor($gaWeX.widgetShadow);
    if (widgetShadowColor) collector.addRule(`.monaco-editor .findOptionsWidget { box-shadow: 0 0 8px 2px ${widgetShadowColor}; }`);
    const hcBorder = theme.getColor($gaWeX.contrastBorder);
    if (hcBorder) collector.addRule(`.monaco-editor .findOptionsWidget { border: 2px solid ${hcBorder}; }`);
});



var $5YaSO = parcelRequire("5YaSO");

var $9cWcn = parcelRequire("9cWcn");

var $d00il = parcelRequire("d00il");

function $0e363b7e1c4921eb$var$effectiveOptionValue(override, value) {
    if (override === 1 /* True */ ) return true;
    if (override === 2 /* False */ ) return false;
    return value;
}
class $0e363b7e1c4921eb$export$134b1d8b9bc10076 extends $9cWcn.Disposable {
    constructor(){
        super();
        this._onFindReplaceStateChange = this._register(new $5YaSO.Emitter());
        this.onFindReplaceStateChange = this._onFindReplaceStateChange.event;
        this._searchString = '';
        this._replaceString = '';
        this._isRevealed = false;
        this._isReplaceRevealed = false;
        this._isRegex = false;
        this._isRegexOverride = 0 /* NotSet */ ;
        this._wholeWord = false;
        this._wholeWordOverride = 0 /* NotSet */ ;
        this._matchCase = false;
        this._matchCaseOverride = 0 /* NotSet */ ;
        this._preserveCase = false;
        this._preserveCaseOverride = 0 /* NotSet */ ;
        this._searchScope = null;
        this._matchesPosition = 0;
        this._matchesCount = 0;
        this._currentMatch = null;
        this._loop = true;
    }
    get searchString() {
        return this._searchString;
    }
    get replaceString() {
        return this._replaceString;
    }
    get isRevealed() {
        return this._isRevealed;
    }
    get isReplaceRevealed() {
        return this._isReplaceRevealed;
    }
    get isRegex() {
        return $0e363b7e1c4921eb$var$effectiveOptionValue(this._isRegexOverride, this._isRegex);
    }
    get wholeWord() {
        return $0e363b7e1c4921eb$var$effectiveOptionValue(this._wholeWordOverride, this._wholeWord);
    }
    get matchCase() {
        return $0e363b7e1c4921eb$var$effectiveOptionValue(this._matchCaseOverride, this._matchCase);
    }
    get preserveCase() {
        return $0e363b7e1c4921eb$var$effectiveOptionValue(this._preserveCaseOverride, this._preserveCase);
    }
    get actualIsRegex() {
        return this._isRegex;
    }
    get actualWholeWord() {
        return this._wholeWord;
    }
    get actualMatchCase() {
        return this._matchCase;
    }
    get actualPreserveCase() {
        return this._preserveCase;
    }
    get searchScope() {
        return this._searchScope;
    }
    get matchesPosition() {
        return this._matchesPosition;
    }
    get matchesCount() {
        return this._matchesCount;
    }
    get currentMatch() {
        return this._currentMatch;
    }
    changeMatchInfo(matchesPosition, matchesCount, currentMatch) {
        let changeEvent = {
            moveCursor: false,
            updateHistory: false,
            searchString: false,
            replaceString: false,
            isRevealed: false,
            isReplaceRevealed: false,
            isRegex: false,
            wholeWord: false,
            matchCase: false,
            preserveCase: false,
            searchScope: false,
            matchesPosition: false,
            matchesCount: false,
            currentMatch: false,
            loop: false
        };
        let somethingChanged = false;
        if (matchesCount === 0) matchesPosition = 0;
        if (matchesPosition > matchesCount) matchesPosition = matchesCount;
        if (this._matchesPosition !== matchesPosition) {
            this._matchesPosition = matchesPosition;
            changeEvent.matchesPosition = true;
            somethingChanged = true;
        }
        if (this._matchesCount !== matchesCount) {
            this._matchesCount = matchesCount;
            changeEvent.matchesCount = true;
            somethingChanged = true;
        }
        if (typeof currentMatch !== 'undefined') {
            if (!$d00il.Range.equalsRange(this._currentMatch, currentMatch)) {
                this._currentMatch = currentMatch;
                changeEvent.currentMatch = true;
                somethingChanged = true;
            }
        }
        if (somethingChanged) this._onFindReplaceStateChange.fire(changeEvent);
    }
    change(newState, moveCursor, updateHistory = true) {
        var _a1;
        let changeEvent = {
            moveCursor: moveCursor,
            updateHistory: updateHistory,
            searchString: false,
            replaceString: false,
            isRevealed: false,
            isReplaceRevealed: false,
            isRegex: false,
            wholeWord: false,
            matchCase: false,
            preserveCase: false,
            searchScope: false,
            matchesPosition: false,
            matchesCount: false,
            currentMatch: false,
            loop: false
        };
        let somethingChanged = false;
        const oldEffectiveIsRegex = this.isRegex;
        const oldEffectiveWholeWords = this.wholeWord;
        const oldEffectiveMatchCase = this.matchCase;
        const oldEffectivePreserveCase = this.preserveCase;
        if (typeof newState.searchString !== 'undefined') {
            if (this._searchString !== newState.searchString) {
                this._searchString = newState.searchString;
                changeEvent.searchString = true;
                somethingChanged = true;
            }
        }
        if (typeof newState.replaceString !== 'undefined') {
            if (this._replaceString !== newState.replaceString) {
                this._replaceString = newState.replaceString;
                changeEvent.replaceString = true;
                somethingChanged = true;
            }
        }
        if (typeof newState.isRevealed !== 'undefined') {
            if (this._isRevealed !== newState.isRevealed) {
                this._isRevealed = newState.isRevealed;
                changeEvent.isRevealed = true;
                somethingChanged = true;
            }
        }
        if (typeof newState.isReplaceRevealed !== 'undefined') {
            if (this._isReplaceRevealed !== newState.isReplaceRevealed) {
                this._isReplaceRevealed = newState.isReplaceRevealed;
                changeEvent.isReplaceRevealed = true;
                somethingChanged = true;
            }
        }
        if (typeof newState.isRegex !== 'undefined') this._isRegex = newState.isRegex;
        if (typeof newState.wholeWord !== 'undefined') this._wholeWord = newState.wholeWord;
        if (typeof newState.matchCase !== 'undefined') this._matchCase = newState.matchCase;
        if (typeof newState.preserveCase !== 'undefined') this._preserveCase = newState.preserveCase;
        if (typeof newState.searchScope !== 'undefined') {
            if (!((_a1 = newState.searchScope) === null || _a1 === void 0 ? void 0 : _a1.every((newSearchScope)=>{
                var _a;
                return (_a = this._searchScope) === null || _a === void 0 ? void 0 : _a.some((existingSearchScope)=>{
                    return !$d00il.Range.equalsRange(existingSearchScope, newSearchScope);
                });
            }))) {
                this._searchScope = newState.searchScope;
                changeEvent.searchScope = true;
                somethingChanged = true;
            }
        }
        if (typeof newState.loop !== 'undefined') {
            if (this._loop !== newState.loop) {
                this._loop = newState.loop;
                changeEvent.loop = true;
                somethingChanged = true;
            }
        }
        // Overrides get set when they explicitly come in and get reset anytime something else changes
        this._isRegexOverride = typeof newState.isRegexOverride !== 'undefined' ? newState.isRegexOverride : 0 /* NotSet */ ;
        this._wholeWordOverride = typeof newState.wholeWordOverride !== 'undefined' ? newState.wholeWordOverride : 0 /* NotSet */ ;
        this._matchCaseOverride = typeof newState.matchCaseOverride !== 'undefined' ? newState.matchCaseOverride : 0 /* NotSet */ ;
        this._preserveCaseOverride = typeof newState.preserveCaseOverride !== 'undefined' ? newState.preserveCaseOverride : 0 /* NotSet */ ;
        if (oldEffectiveIsRegex !== this.isRegex) {
            somethingChanged = true;
            changeEvent.isRegex = true;
        }
        if (oldEffectiveWholeWords !== this.wholeWord) {
            somethingChanged = true;
            changeEvent.wholeWord = true;
        }
        if (oldEffectiveMatchCase !== this.matchCase) {
            somethingChanged = true;
            changeEvent.matchCase = true;
        }
        if (oldEffectivePreserveCase !== this.preserveCase) {
            somethingChanged = true;
            changeEvent.preserveCase = true;
        }
        if (somethingChanged) this._onFindReplaceStateChange.fire(changeEvent);
    }
    canNavigateBack() {
        return this.canNavigateInLoop() || this.matchesPosition !== 1;
    }
    canNavigateForward() {
        return this.canNavigateInLoop() || this.matchesPosition < this.matchesCount;
    }
    canNavigateInLoop() {
        return this._loop || this.matchesCount >= $9bb245d49668b670$export$79640dbfb07f50a4;
    }
}


var $de6146753f310471$exports = {};

$parcel$export($de6146753f310471$exports, "FindWidget", () => $de6146753f310471$export$94cf213bcf83d48e, (v) => $de6146753f310471$export$94cf213bcf83d48e = v);

var $bDzmQ = parcelRequire("bDzmQ");

var $aIbUW = parcelRequire("aIbUW");


var $9lxpu = parcelRequire("9lxpu");

var $fxJYg = parcelRequire("fxJYg");

var $6bXyA = parcelRequire("6bXyA");

var $awgRE = parcelRequire("awgRE");

var $gPkHZ = parcelRequire("gPkHZ");

var $9cWcn = parcelRequire("9cWcn");

var $lb0Ah = parcelRequire("lb0Ah");

var $jcr1R = parcelRequire("jcr1R");


var $d00il = parcelRequire("d00il");


var $4dEdH = parcelRequire("4dEdH");
var $bca39a69129e9220$exports = {};

$parcel$export($bca39a69129e9220$exports, "ContextScopedFindInput", () => $bca39a69129e9220$export$8b5d5813b2156e74, (v) => $bca39a69129e9220$export$8b5d5813b2156e74 = v);
$parcel$export($bca39a69129e9220$exports, "ContextScopedReplaceInput", () => $bca39a69129e9220$export$da3bae0145835d60, (v) => $bca39a69129e9220$export$da3bae0145835d60 = v);

var $bDzmQ = parcelRequire("bDzmQ");


var $3AI9u = parcelRequire("3AI9u");

var $fxJYg = parcelRequire("fxJYg");

var $5YaSO = parcelRequire("5YaSO");


var $4dEdH = parcelRequire("4dEdH");
const $410999165ee229cc$var$NLS_DEFAULT_LABEL = $4dEdH.localize('defaultLabel', "input");
class $410999165ee229cc$export$5f83bd776c0a7f6f extends $fxJYg.Widget {
    constructor(parent, contextViewProvider, _showOptionButtons, options){
        super();
        this._showOptionButtons = _showOptionButtons;
        this.fixFocusOnOptionClickEnabled = true;
        this.imeSessionInProgress = false;
        this._onDidOptionChange = this._register(new $5YaSO.Emitter());
        this.onDidOptionChange = this._onDidOptionChange.event;
        this._onKeyDown = this._register(new $5YaSO.Emitter());
        this.onKeyDown = this._onKeyDown.event;
        this._onMouseDown = this._register(new $5YaSO.Emitter());
        this.onMouseDown = this._onMouseDown.event;
        this._onInput = this._register(new $5YaSO.Emitter());
        this._onKeyUp = this._register(new $5YaSO.Emitter());
        this._onCaseSensitiveKeyDown = this._register(new $5YaSO.Emitter());
        this.onCaseSensitiveKeyDown = this._onCaseSensitiveKeyDown.event;
        this._onRegexKeyDown = this._register(new $5YaSO.Emitter());
        this.onRegexKeyDown = this._onRegexKeyDown.event;
        this._lastHighlightFindOptions = 0;
        this.contextViewProvider = contextViewProvider;
        this.placeholder = options.placeholder || '';
        this.validation = options.validation;
        this.label = options.label || $410999165ee229cc$var$NLS_DEFAULT_LABEL;
        this.inputActiveOptionBorder = options.inputActiveOptionBorder;
        this.inputActiveOptionForeground = options.inputActiveOptionForeground;
        this.inputActiveOptionBackground = options.inputActiveOptionBackground;
        this.inputBackground = options.inputBackground;
        this.inputForeground = options.inputForeground;
        this.inputBorder = options.inputBorder;
        this.inputValidationInfoBorder = options.inputValidationInfoBorder;
        this.inputValidationInfoBackground = options.inputValidationInfoBackground;
        this.inputValidationInfoForeground = options.inputValidationInfoForeground;
        this.inputValidationWarningBorder = options.inputValidationWarningBorder;
        this.inputValidationWarningBackground = options.inputValidationWarningBackground;
        this.inputValidationWarningForeground = options.inputValidationWarningForeground;
        this.inputValidationErrorBorder = options.inputValidationErrorBorder;
        this.inputValidationErrorBackground = options.inputValidationErrorBackground;
        this.inputValidationErrorForeground = options.inputValidationErrorForeground;
        const appendCaseSensitiveLabel = options.appendCaseSensitiveLabel || '';
        const appendWholeWordsLabel = options.appendWholeWordsLabel || '';
        const appendRegexLabel = options.appendRegexLabel || '';
        const history = options.history || [];
        const flexibleHeight = !!options.flexibleHeight;
        const flexibleWidth = !!options.flexibleWidth;
        const flexibleMaxHeight = options.flexibleMaxHeight;
        this.domNode = document.createElement('div');
        this.domNode.classList.add('monaco-findInput');
        this.inputBox = this._register(new $3AI9u.HistoryInputBox(this.domNode, this.contextViewProvider, {
            placeholder: this.placeholder || '',
            ariaLabel: this.label || '',
            validationOptions: {
                validation: this.validation
            },
            inputBackground: this.inputBackground,
            inputForeground: this.inputForeground,
            inputBorder: this.inputBorder,
            inputValidationInfoBackground: this.inputValidationInfoBackground,
            inputValidationInfoForeground: this.inputValidationInfoForeground,
            inputValidationInfoBorder: this.inputValidationInfoBorder,
            inputValidationWarningBackground: this.inputValidationWarningBackground,
            inputValidationWarningForeground: this.inputValidationWarningForeground,
            inputValidationWarningBorder: this.inputValidationWarningBorder,
            inputValidationErrorBackground: this.inputValidationErrorBackground,
            inputValidationErrorForeground: this.inputValidationErrorForeground,
            inputValidationErrorBorder: this.inputValidationErrorBorder,
            history: history,
            showHistoryHint: options.showHistoryHint,
            flexibleHeight: flexibleHeight,
            flexibleWidth: flexibleWidth,
            flexibleMaxHeight: flexibleMaxHeight
        }));
        this.regex = this._register(new $abab33e083f88ab8$export$4e97f692e737273e({
            appendTitle: appendRegexLabel,
            isChecked: false,
            inputActiveOptionBorder: this.inputActiveOptionBorder,
            inputActiveOptionForeground: this.inputActiveOptionForeground,
            inputActiveOptionBackground: this.inputActiveOptionBackground
        }));
        this._register(this.regex.onChange((viaKeyboard)=>{
            this._onDidOptionChange.fire(viaKeyboard);
            if (!viaKeyboard && this.fixFocusOnOptionClickEnabled) this.inputBox.focus();
            this.validate();
        }));
        this._register(this.regex.onKeyDown((e)=>{
            this._onRegexKeyDown.fire(e);
        }));
        this.wholeWords = this._register(new $abab33e083f88ab8$export$ac12d23e9f4ae591({
            appendTitle: appendWholeWordsLabel,
            isChecked: false,
            inputActiveOptionBorder: this.inputActiveOptionBorder,
            inputActiveOptionForeground: this.inputActiveOptionForeground,
            inputActiveOptionBackground: this.inputActiveOptionBackground
        }));
        this._register(this.wholeWords.onChange((viaKeyboard)=>{
            this._onDidOptionChange.fire(viaKeyboard);
            if (!viaKeyboard && this.fixFocusOnOptionClickEnabled) this.inputBox.focus();
            this.validate();
        }));
        this.caseSensitive = this._register(new $abab33e083f88ab8$export$35c8b2120be2442f({
            appendTitle: appendCaseSensitiveLabel,
            isChecked: false,
            inputActiveOptionBorder: this.inputActiveOptionBorder,
            inputActiveOptionForeground: this.inputActiveOptionForeground,
            inputActiveOptionBackground: this.inputActiveOptionBackground
        }));
        this._register(this.caseSensitive.onChange((viaKeyboard)=>{
            this._onDidOptionChange.fire(viaKeyboard);
            if (!viaKeyboard && this.fixFocusOnOptionClickEnabled) this.inputBox.focus();
            this.validate();
        }));
        this._register(this.caseSensitive.onKeyDown((e)=>{
            this._onCaseSensitiveKeyDown.fire(e);
        }));
        if (this._showOptionButtons) this.inputBox.paddingRight = this.caseSensitive.width() + this.wholeWords.width() + this.regex.width();
        // Arrow-Key support to navigate between options
        let indexes = [
            this.caseSensitive.domNode,
            this.wholeWords.domNode,
            this.regex.domNode
        ];
        this.onkeydown(this.domNode, (event)=>{
            if (event.equals(15 /* LeftArrow */ ) || event.equals(17 /* RightArrow */ ) || event.equals(9 /* Escape */ )) {
                let index = indexes.indexOf(document.activeElement);
                if (index >= 0) {
                    let newIndex = -1;
                    if (event.equals(17 /* RightArrow */ )) newIndex = (index + 1) % indexes.length;
                    else if (event.equals(15 /* LeftArrow */ )) {
                        if (index === 0) newIndex = indexes.length - 1;
                        else newIndex = index - 1;
                    }
                    if (event.equals(9 /* Escape */ )) {
                        indexes[index].blur();
                        this.inputBox.focus();
                    } else if (newIndex >= 0) indexes[newIndex].focus();
                    $bDzmQ.EventHelper.stop(event, true);
                }
            }
        });
        let controls = document.createElement('div');
        controls.className = 'controls';
        controls.style.display = this._showOptionButtons ? 'block' : 'none';
        controls.appendChild(this.caseSensitive.domNode);
        controls.appendChild(this.wholeWords.domNode);
        controls.appendChild(this.regex.domNode);
        this.domNode.appendChild(controls);
        if (parent) parent.appendChild(this.domNode);
        this._register($bDzmQ.addDisposableListener(this.inputBox.inputElement, 'compositionstart', (e)=>{
            this.imeSessionInProgress = true;
        }));
        this._register($bDzmQ.addDisposableListener(this.inputBox.inputElement, 'compositionend', (e)=>{
            this.imeSessionInProgress = false;
            this._onInput.fire();
        }));
        this.onkeydown(this.inputBox.inputElement, (e)=>this._onKeyDown.fire(e)
        );
        this.onkeyup(this.inputBox.inputElement, (e)=>this._onKeyUp.fire(e)
        );
        this.oninput(this.inputBox.inputElement, (e)=>this._onInput.fire()
        );
        this.onmousedown(this.inputBox.inputElement, (e)=>this._onMouseDown.fire(e)
        );
    }
    enable() {
        this.domNode.classList.remove('disabled');
        this.inputBox.enable();
        this.regex.enable();
        this.wholeWords.enable();
        this.caseSensitive.enable();
    }
    disable() {
        this.domNode.classList.add('disabled');
        this.inputBox.disable();
        this.regex.disable();
        this.wholeWords.disable();
        this.caseSensitive.disable();
    }
    setFocusInputOnOptionClick(value) {
        this.fixFocusOnOptionClickEnabled = value;
    }
    setEnabled(enabled) {
        if (enabled) this.enable();
        else this.disable();
    }
    getValue() {
        return this.inputBox.value;
    }
    setValue(value) {
        if (this.inputBox.value !== value) this.inputBox.value = value;
    }
    style(styles) {
        this.inputActiveOptionBorder = styles.inputActiveOptionBorder;
        this.inputActiveOptionForeground = styles.inputActiveOptionForeground;
        this.inputActiveOptionBackground = styles.inputActiveOptionBackground;
        this.inputBackground = styles.inputBackground;
        this.inputForeground = styles.inputForeground;
        this.inputBorder = styles.inputBorder;
        this.inputValidationInfoBackground = styles.inputValidationInfoBackground;
        this.inputValidationInfoForeground = styles.inputValidationInfoForeground;
        this.inputValidationInfoBorder = styles.inputValidationInfoBorder;
        this.inputValidationWarningBackground = styles.inputValidationWarningBackground;
        this.inputValidationWarningForeground = styles.inputValidationWarningForeground;
        this.inputValidationWarningBorder = styles.inputValidationWarningBorder;
        this.inputValidationErrorBackground = styles.inputValidationErrorBackground;
        this.inputValidationErrorForeground = styles.inputValidationErrorForeground;
        this.inputValidationErrorBorder = styles.inputValidationErrorBorder;
        this.applyStyles();
    }
    applyStyles() {
        if (this.domNode) {
            const checkBoxStyles = {
                inputActiveOptionBorder: this.inputActiveOptionBorder,
                inputActiveOptionForeground: this.inputActiveOptionForeground,
                inputActiveOptionBackground: this.inputActiveOptionBackground
            };
            this.regex.style(checkBoxStyles);
            this.wholeWords.style(checkBoxStyles);
            this.caseSensitive.style(checkBoxStyles);
            const inputBoxStyles = {
                inputBackground: this.inputBackground,
                inputForeground: this.inputForeground,
                inputBorder: this.inputBorder,
                inputValidationInfoBackground: this.inputValidationInfoBackground,
                inputValidationInfoForeground: this.inputValidationInfoForeground,
                inputValidationInfoBorder: this.inputValidationInfoBorder,
                inputValidationWarningBackground: this.inputValidationWarningBackground,
                inputValidationWarningForeground: this.inputValidationWarningForeground,
                inputValidationWarningBorder: this.inputValidationWarningBorder,
                inputValidationErrorBackground: this.inputValidationErrorBackground,
                inputValidationErrorForeground: this.inputValidationErrorForeground,
                inputValidationErrorBorder: this.inputValidationErrorBorder
            };
            this.inputBox.style(inputBoxStyles);
        }
    }
    select() {
        this.inputBox.select();
    }
    focus() {
        this.inputBox.focus();
    }
    getCaseSensitive() {
        return this.caseSensitive.checked;
    }
    setCaseSensitive(value) {
        this.caseSensitive.checked = value;
    }
    getWholeWords() {
        return this.wholeWords.checked;
    }
    setWholeWords(value) {
        this.wholeWords.checked = value;
    }
    getRegex() {
        return this.regex.checked;
    }
    setRegex(value) {
        this.regex.checked = value;
        this.validate();
    }
    focusOnCaseSensitive() {
        this.caseSensitive.focus();
    }
    highlightFindOptions() {
        this.domNode.classList.remove('highlight-' + this._lastHighlightFindOptions);
        this._lastHighlightFindOptions = 1 - this._lastHighlightFindOptions;
        this.domNode.classList.add('highlight-' + this._lastHighlightFindOptions);
    }
    validate() {
        this.inputBox.validate();
    }
    clearMessage() {
        this.inputBox.hideMessage();
    }
}



var $bDzmQ = parcelRequire("bDzmQ");


var $3AI9u = parcelRequire("3AI9u");

var $fxJYg = parcelRequire("fxJYg");

var $awgRE = parcelRequire("awgRE");

var $5YaSO = parcelRequire("5YaSO");


var $4dEdH = parcelRequire("4dEdH");
const $364838f2693d9d76$var$NLS_DEFAULT_LABEL = $4dEdH.localize('defaultLabel', "input");
const $364838f2693d9d76$var$NLS_PRESERVE_CASE_LABEL = $4dEdH.localize('label.preserveCaseCheckbox', "Preserve Case");
class $364838f2693d9d76$export$f90d5d340cad4785 extends $22c4e80b3baaa8f9$export$48513f6b9f8ce62d {
    constructor(opts){
        super({
            // TODO: does this need its own icon?
            icon: $awgRE.Codicon.preserveCase,
            title: $364838f2693d9d76$var$NLS_PRESERVE_CASE_LABEL + opts.appendTitle,
            isChecked: opts.isChecked,
            inputActiveOptionBorder: opts.inputActiveOptionBorder,
            inputActiveOptionForeground: opts.inputActiveOptionForeground,
            inputActiveOptionBackground: opts.inputActiveOptionBackground
        });
    }
}
class $364838f2693d9d76$export$3bdc90548a25210c extends $fxJYg.Widget {
    constructor(parent, contextViewProvider, _showOptionButtons, options){
        super();
        this._showOptionButtons = _showOptionButtons;
        this.fixFocusOnOptionClickEnabled = true;
        this.cachedOptionsWidth = 0;
        this._onDidOptionChange = this._register(new $5YaSO.Emitter());
        this.onDidOptionChange = this._onDidOptionChange.event;
        this._onKeyDown = this._register(new $5YaSO.Emitter());
        this.onKeyDown = this._onKeyDown.event;
        this._onMouseDown = this._register(new $5YaSO.Emitter());
        this._onInput = this._register(new $5YaSO.Emitter());
        this._onKeyUp = this._register(new $5YaSO.Emitter());
        this._onPreserveCaseKeyDown = this._register(new $5YaSO.Emitter());
        this.onPreserveCaseKeyDown = this._onPreserveCaseKeyDown.event;
        this.contextViewProvider = contextViewProvider;
        this.placeholder = options.placeholder || '';
        this.validation = options.validation;
        this.label = options.label || $364838f2693d9d76$var$NLS_DEFAULT_LABEL;
        this.inputActiveOptionBorder = options.inputActiveOptionBorder;
        this.inputActiveOptionForeground = options.inputActiveOptionForeground;
        this.inputActiveOptionBackground = options.inputActiveOptionBackground;
        this.inputBackground = options.inputBackground;
        this.inputForeground = options.inputForeground;
        this.inputBorder = options.inputBorder;
        this.inputValidationInfoBorder = options.inputValidationInfoBorder;
        this.inputValidationInfoBackground = options.inputValidationInfoBackground;
        this.inputValidationInfoForeground = options.inputValidationInfoForeground;
        this.inputValidationWarningBorder = options.inputValidationWarningBorder;
        this.inputValidationWarningBackground = options.inputValidationWarningBackground;
        this.inputValidationWarningForeground = options.inputValidationWarningForeground;
        this.inputValidationErrorBorder = options.inputValidationErrorBorder;
        this.inputValidationErrorBackground = options.inputValidationErrorBackground;
        this.inputValidationErrorForeground = options.inputValidationErrorForeground;
        const appendPreserveCaseLabel = options.appendPreserveCaseLabel || '';
        const history = options.history || [];
        const flexibleHeight = !!options.flexibleHeight;
        const flexibleWidth = !!options.flexibleWidth;
        const flexibleMaxHeight = options.flexibleMaxHeight;
        this.domNode = document.createElement('div');
        this.domNode.classList.add('monaco-findInput');
        this.inputBox = this._register(new $3AI9u.HistoryInputBox(this.domNode, this.contextViewProvider, {
            ariaLabel: this.label || '',
            placeholder: this.placeholder || '',
            validationOptions: {
                validation: this.validation
            },
            inputBackground: this.inputBackground,
            inputForeground: this.inputForeground,
            inputBorder: this.inputBorder,
            inputValidationInfoBackground: this.inputValidationInfoBackground,
            inputValidationInfoForeground: this.inputValidationInfoForeground,
            inputValidationInfoBorder: this.inputValidationInfoBorder,
            inputValidationWarningBackground: this.inputValidationWarningBackground,
            inputValidationWarningForeground: this.inputValidationWarningForeground,
            inputValidationWarningBorder: this.inputValidationWarningBorder,
            inputValidationErrorBackground: this.inputValidationErrorBackground,
            inputValidationErrorForeground: this.inputValidationErrorForeground,
            inputValidationErrorBorder: this.inputValidationErrorBorder,
            history: history,
            showHistoryHint: options.showHistoryHint,
            flexibleHeight: flexibleHeight,
            flexibleWidth: flexibleWidth,
            flexibleMaxHeight: flexibleMaxHeight
        }));
        this.preserveCase = this._register(new $364838f2693d9d76$export$f90d5d340cad4785({
            appendTitle: appendPreserveCaseLabel,
            isChecked: false,
            inputActiveOptionBorder: this.inputActiveOptionBorder,
            inputActiveOptionForeground: this.inputActiveOptionForeground,
            inputActiveOptionBackground: this.inputActiveOptionBackground
        }));
        this._register(this.preserveCase.onChange((viaKeyboard)=>{
            this._onDidOptionChange.fire(viaKeyboard);
            if (!viaKeyboard && this.fixFocusOnOptionClickEnabled) this.inputBox.focus();
            this.validate();
        }));
        this._register(this.preserveCase.onKeyDown((e)=>{
            this._onPreserveCaseKeyDown.fire(e);
        }));
        if (this._showOptionButtons) this.cachedOptionsWidth = this.preserveCase.width();
        else this.cachedOptionsWidth = 0;
        // Arrow-Key support to navigate between options
        let indexes = [
            this.preserveCase.domNode
        ];
        this.onkeydown(this.domNode, (event)=>{
            if (event.equals(15 /* LeftArrow */ ) || event.equals(17 /* RightArrow */ ) || event.equals(9 /* Escape */ )) {
                let index = indexes.indexOf(document.activeElement);
                if (index >= 0) {
                    let newIndex = -1;
                    if (event.equals(17 /* RightArrow */ )) newIndex = (index + 1) % indexes.length;
                    else if (event.equals(15 /* LeftArrow */ )) {
                        if (index === 0) newIndex = indexes.length - 1;
                        else newIndex = index - 1;
                    }
                    if (event.equals(9 /* Escape */ )) {
                        indexes[index].blur();
                        this.inputBox.focus();
                    } else if (newIndex >= 0) indexes[newIndex].focus();
                    $bDzmQ.EventHelper.stop(event, true);
                }
            }
        });
        let controls = document.createElement('div');
        controls.className = 'controls';
        controls.style.display = this._showOptionButtons ? 'block' : 'none';
        controls.appendChild(this.preserveCase.domNode);
        this.domNode.appendChild(controls);
        if (parent) parent.appendChild(this.domNode);
        this.onkeydown(this.inputBox.inputElement, (e)=>this._onKeyDown.fire(e)
        );
        this.onkeyup(this.inputBox.inputElement, (e)=>this._onKeyUp.fire(e)
        );
        this.oninput(this.inputBox.inputElement, (e)=>this._onInput.fire()
        );
        this.onmousedown(this.inputBox.inputElement, (e)=>this._onMouseDown.fire(e)
        );
    }
    enable() {
        this.domNode.classList.remove('disabled');
        this.inputBox.enable();
        this.preserveCase.enable();
    }
    disable() {
        this.domNode.classList.add('disabled');
        this.inputBox.disable();
        this.preserveCase.disable();
    }
    setEnabled(enabled) {
        if (enabled) this.enable();
        else this.disable();
    }
    style(styles) {
        this.inputActiveOptionBorder = styles.inputActiveOptionBorder;
        this.inputActiveOptionForeground = styles.inputActiveOptionForeground;
        this.inputActiveOptionBackground = styles.inputActiveOptionBackground;
        this.inputBackground = styles.inputBackground;
        this.inputForeground = styles.inputForeground;
        this.inputBorder = styles.inputBorder;
        this.inputValidationInfoBackground = styles.inputValidationInfoBackground;
        this.inputValidationInfoForeground = styles.inputValidationInfoForeground;
        this.inputValidationInfoBorder = styles.inputValidationInfoBorder;
        this.inputValidationWarningBackground = styles.inputValidationWarningBackground;
        this.inputValidationWarningForeground = styles.inputValidationWarningForeground;
        this.inputValidationWarningBorder = styles.inputValidationWarningBorder;
        this.inputValidationErrorBackground = styles.inputValidationErrorBackground;
        this.inputValidationErrorForeground = styles.inputValidationErrorForeground;
        this.inputValidationErrorBorder = styles.inputValidationErrorBorder;
        this.applyStyles();
    }
    applyStyles() {
        if (this.domNode) {
            const checkBoxStyles = {
                inputActiveOptionBorder: this.inputActiveOptionBorder,
                inputActiveOptionForeground: this.inputActiveOptionForeground,
                inputActiveOptionBackground: this.inputActiveOptionBackground
            };
            this.preserveCase.style(checkBoxStyles);
            const inputBoxStyles = {
                inputBackground: this.inputBackground,
                inputForeground: this.inputForeground,
                inputBorder: this.inputBorder,
                inputValidationInfoBackground: this.inputValidationInfoBackground,
                inputValidationInfoForeground: this.inputValidationInfoForeground,
                inputValidationInfoBorder: this.inputValidationInfoBorder,
                inputValidationWarningBackground: this.inputValidationWarningBackground,
                inputValidationWarningForeground: this.inputValidationWarningForeground,
                inputValidationWarningBorder: this.inputValidationWarningBorder,
                inputValidationErrorBackground: this.inputValidationErrorBackground,
                inputValidationErrorForeground: this.inputValidationErrorForeground,
                inputValidationErrorBorder: this.inputValidationErrorBorder
            };
            this.inputBox.style(inputBoxStyles);
        }
    }
    select() {
        this.inputBox.select();
    }
    focus() {
        this.inputBox.focus();
    }
    getPreserveCase() {
        return this.preserveCase.checked;
    }
    setPreserveCase(value) {
        this.preserveCase.checked = value;
    }
    focusOnPreserve() {
        this.preserveCase.focus();
    }
    validate() {
        if (this.inputBox) this.inputBox.validate();
    }
    set width(newWidth) {
        this.inputBox.paddingRight = this.cachedOptionsWidth;
        this.inputBox.width = newWidth;
        this.domNode.style.width = newWidth + 'px';
    }
    dispose() {
        super.dispose();
    }
}



var $cxCeF = parcelRequire("cxCeF");

var $6AWYG = parcelRequire("6AWYG");

/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $bca39a69129e9220$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var $bca39a69129e9220$var$__param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
};
const $bca39a69129e9220$export$c267ff7f08858c20 = 'historyNavigationWidget';
const $bca39a69129e9220$var$HistoryNavigationForwardsEnablementContext = 'historyNavigationForwardsEnabled';
const $bca39a69129e9220$var$HistoryNavigationBackwardsEnablementContext = 'historyNavigationBackwardsEnabled';
function $bca39a69129e9220$var$bindContextScopedWidget(contextKeyService, widget, contextKey) {
    new $cxCeF.RawContextKey(contextKey, widget).bindTo(contextKeyService);
}
function $bca39a69129e9220$var$createWidgetScopedContextKeyService(contextKeyService, widget) {
    return contextKeyService.createScoped(widget.target);
}
function $bca39a69129e9220$var$getContextScopedWidget(contextKeyService, contextKey) {
    return contextKeyService.getContext(document.activeElement).getValue(contextKey);
}
function $bca39a69129e9220$export$9e7f879f78a6e9b2(contextKeyService, widget) {
    const scopedContextKeyService = $bca39a69129e9220$var$createWidgetScopedContextKeyService(contextKeyService, widget);
    $bca39a69129e9220$var$bindContextScopedWidget(scopedContextKeyService, widget, $bca39a69129e9220$export$c267ff7f08858c20);
    const historyNavigationForwardsEnablement = new $cxCeF.RawContextKey($bca39a69129e9220$var$HistoryNavigationForwardsEnablementContext, true).bindTo(scopedContextKeyService);
    const historyNavigationBackwardsEnablement = new $cxCeF.RawContextKey($bca39a69129e9220$var$HistoryNavigationBackwardsEnablementContext, true).bindTo(scopedContextKeyService);
    return {
        scopedContextKeyService: scopedContextKeyService,
        historyNavigationForwardsEnablement: historyNavigationForwardsEnablement,
        historyNavigationBackwardsEnablement: historyNavigationBackwardsEnablement
    };
}
let $bca39a69129e9220$export$8b5d5813b2156e74 = class $bca39a69129e9220$export$8b5d5813b2156e74 extends $410999165ee229cc$export$5f83bd776c0a7f6f {
    constructor(container, contextViewProvider, options, contextKeyService, showFindOptions = false){
        super(container, contextViewProvider, showFindOptions, options);
        this._register($bca39a69129e9220$export$9e7f879f78a6e9b2(contextKeyService, {
            target: this.inputBox.element,
            historyNavigator: this.inputBox
        }).scopedContextKeyService);
    }
};
$bca39a69129e9220$export$8b5d5813b2156e74 = $bca39a69129e9220$var$__decorate([
    $bca39a69129e9220$var$__param(3, $cxCeF.IContextKeyService)
], $bca39a69129e9220$export$8b5d5813b2156e74);
let $bca39a69129e9220$export$da3bae0145835d60 = class $bca39a69129e9220$export$da3bae0145835d60 extends $364838f2693d9d76$export$3bdc90548a25210c {
    constructor(container, contextViewProvider, options, contextKeyService, showReplaceOptions = false){
        super(container, contextViewProvider, showReplaceOptions, options);
        this._register($bca39a69129e9220$export$9e7f879f78a6e9b2(contextKeyService, {
            target: this.inputBox.element,
            historyNavigator: this.inputBox
        }).scopedContextKeyService);
    }
};
$bca39a69129e9220$export$da3bae0145835d60 = $bca39a69129e9220$var$__decorate([
    $bca39a69129e9220$var$__param(3, $cxCeF.IContextKeyService)
], $bca39a69129e9220$export$da3bae0145835d60);
$6AWYG.KeybindingsRegistry.registerCommandAndKeybindingRule({
    id: 'history.showPrevious',
    weight: 200 /* WorkbenchContrib */ ,
    when: $cxCeF.ContextKeyExpr.and($cxCeF.ContextKeyExpr.has($bca39a69129e9220$export$c267ff7f08858c20), $cxCeF.ContextKeyExpr.equals($bca39a69129e9220$var$HistoryNavigationBackwardsEnablementContext, true), $63d2440bdac663c3$exports.Context.Visible.isEqualTo(false)),
    primary: 16 /* UpArrow */ ,
    secondary: [
        528 /* UpArrow */ 
    ],
    handler: (accessor)=>{
        const widget = $bca39a69129e9220$var$getContextScopedWidget(accessor.get($cxCeF.IContextKeyService), $bca39a69129e9220$export$c267ff7f08858c20);
        if (widget) {
            const historyInputBox = widget.historyNavigator;
            historyInputBox.showPreviousValue();
        }
    }
});
$6AWYG.KeybindingsRegistry.registerCommandAndKeybindingRule({
    id: 'history.showNext',
    weight: 200 /* WorkbenchContrib */ ,
    when: $cxCeF.ContextKeyExpr.and($cxCeF.ContextKeyExpr.has($bca39a69129e9220$export$c267ff7f08858c20), $cxCeF.ContextKeyExpr.equals($bca39a69129e9220$var$HistoryNavigationForwardsEnablementContext, true), $63d2440bdac663c3$exports.Context.Visible.isEqualTo(false)),
    primary: 18 /* DownArrow */ ,
    secondary: [
        530 /* DownArrow */ 
    ],
    handler: (accessor)=>{
        const widget = $bca39a69129e9220$var$getContextScopedWidget(accessor.get($cxCeF.IContextKeyService), $bca39a69129e9220$export$c267ff7f08858c20);
        if (widget) {
            const historyInputBox = widget.historyNavigator;
            historyInputBox.showNextValue();
        }
    }
});


function $bb7728b598b7e0fe$export$94614604caa08aab(keybindingService) {
    var _a, _b;
    return ((_a = keybindingService.lookupKeybinding('history.showPrevious')) === null || _a === void 0 ? void 0 : _a.getElectronAccelerator()) === 'Up' && ((_b = keybindingService.lookupKeybinding('history.showNext')) === null || _b === void 0 ? void 0 : _b.getElectronAccelerator()) === 'Down';
}



var $gaWeX = parcelRequire("gaWeX");

var $hEsmQ = parcelRequire("hEsmQ");

var $azIPz = parcelRequire("azIPz");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $de6146753f310471$var$__awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
const $de6146753f310471$var$findSelectionIcon = $hEsmQ.registerIcon('find-selection', $awgRE.Codicon.selection, $4dEdH.localize('findSelectionIcon', 'Icon for \'Find in Selection\' in the editor find widget.'));
const $de6146753f310471$var$findCollapsedIcon = $hEsmQ.registerIcon('find-collapsed', $awgRE.Codicon.chevronRight, $4dEdH.localize('findCollapsedIcon', 'Icon to indicate that the editor find widget is collapsed.'));
const $de6146753f310471$var$findExpandedIcon = $hEsmQ.registerIcon('find-expanded', $awgRE.Codicon.chevronDown, $4dEdH.localize('findExpandedIcon', 'Icon to indicate that the editor find widget is expanded.'));
const $de6146753f310471$export$83ee554109a27042 = $hEsmQ.registerIcon('find-replace', $awgRE.Codicon.replace, $4dEdH.localize('findReplaceIcon', 'Icon for \'Replace\' in the editor find widget.'));
const $de6146753f310471$export$9c63c939bdf63145 = $hEsmQ.registerIcon('find-replace-all', $awgRE.Codicon.replaceAll, $4dEdH.localize('findReplaceAllIcon', 'Icon for \'Replace All\' in the editor find widget.'));
const $de6146753f310471$export$cd8ded1ad8462604 = $hEsmQ.registerIcon('find-previous-match', $awgRE.Codicon.arrowUp, $4dEdH.localize('findPreviousMatchIcon', 'Icon for \'Find Previous\' in the editor find widget.'));
const $de6146753f310471$export$3b49e6223142e6cb = $hEsmQ.registerIcon('find-next-match', $awgRE.Codicon.arrowDown, $4dEdH.localize('findNextMatchIcon', 'Icon for \'Find Next\' in the editor find widget.'));
const $de6146753f310471$var$NLS_FIND_INPUT_LABEL = $4dEdH.localize('label.find', "Find");
const $de6146753f310471$var$NLS_FIND_INPUT_PLACEHOLDER = $4dEdH.localize('placeholder.find', "Find");
const $de6146753f310471$var$NLS_PREVIOUS_MATCH_BTN_LABEL = $4dEdH.localize('label.previousMatchButton', "Previous Match");
const $de6146753f310471$var$NLS_NEXT_MATCH_BTN_LABEL = $4dEdH.localize('label.nextMatchButton', "Next Match");
const $de6146753f310471$var$NLS_TOGGLE_SELECTION_FIND_TITLE = $4dEdH.localize('label.toggleSelectionFind', "Find in Selection");
const $de6146753f310471$var$NLS_CLOSE_BTN_LABEL = $4dEdH.localize('label.closeButton', "Close");
const $de6146753f310471$var$NLS_REPLACE_INPUT_LABEL = $4dEdH.localize('label.replace', "Replace");
const $de6146753f310471$var$NLS_REPLACE_INPUT_PLACEHOLDER = $4dEdH.localize('placeholder.replace', "Replace");
const $de6146753f310471$var$NLS_REPLACE_BTN_LABEL = $4dEdH.localize('label.replaceButton', "Replace");
const $de6146753f310471$var$NLS_REPLACE_ALL_BTN_LABEL = $4dEdH.localize('label.replaceAllButton', "Replace All");
const $de6146753f310471$var$NLS_TOGGLE_REPLACE_MODE_BTN_LABEL = $4dEdH.localize('label.toggleReplaceButton', "Toggle Replace");
const $de6146753f310471$var$NLS_MATCHES_COUNT_LIMIT_TITLE = $4dEdH.localize('title.matchesCountLimit', "Only the first {0} results are highlighted, but all find operations work on the entire text.", $9bb245d49668b670$export$79640dbfb07f50a4);
const $de6146753f310471$export$db048e36c0077c43 = $4dEdH.localize('label.matchesLocation', "{0} of {1}");
const $de6146753f310471$export$5e23834a190f34c5 = $4dEdH.localize('label.noResults', "No results");
const $de6146753f310471$var$FIND_WIDGET_INITIAL_WIDTH = 419;
const $de6146753f310471$var$PART_WIDTH = 275;
const $de6146753f310471$var$FIND_INPUT_AREA_WIDTH = $de6146753f310471$var$PART_WIDTH - 54;
let $de6146753f310471$var$MAX_MATCHES_COUNT_WIDTH = 69;
// let FIND_ALL_CONTROLS_WIDTH = 17/** Find Input margin-left */ + (MAX_MATCHES_COUNT_WIDTH + 3 + 1) /** Match Results */ + 23 /** Button */ * 4 + 2/** sash */;
const $de6146753f310471$var$FIND_INPUT_AREA_HEIGHT = 33; // The height of Find Widget when Replace Input is not visible.
const $de6146753f310471$var$ctrlEnterReplaceAllWarningPromptedKey = 'ctrlEnterReplaceAll.windows.donotask';
const $de6146753f310471$var$ctrlKeyMod = $lb0Ah.isMacintosh ? 256 /* WinCtrl */  : 2048 /* CtrlCmd */ ;
class $de6146753f310471$export$70830c157adafe3e {
    constructor(afterLineNumber){
        this.afterLineNumber = afterLineNumber;
        this.heightInPx = $de6146753f310471$var$FIND_INPUT_AREA_HEIGHT;
        this.suppressMouseDown = false;
        this.domNode = document.createElement('div');
        this.domNode.className = 'dock-find-viewzone';
    }
}
function $de6146753f310471$var$stopPropagationForMultiLineUpwards(event, value, textarea) {
    const isMultiline = !!value.match(/\n/);
    if (textarea && isMultiline && textarea.selectionStart > 0) {
        event.stopPropagation();
        return;
    }
}
function $de6146753f310471$var$stopPropagationForMultiLineDownwards(event, value, textarea) {
    const isMultiline = !!value.match(/\n/);
    if (textarea && isMultiline && textarea.selectionEnd < textarea.value.length) {
        event.stopPropagation();
        return;
    }
}
class $de6146753f310471$export$94cf213bcf83d48e extends $fxJYg.Widget {
    constructor(codeEditor, controller, state, contextViewProvider, keybindingService, contextKeyService, themeService, storageService, notificationService){
        super();
        this._cachedHeight = null;
        this._revealTimeouts = [];
        this._codeEditor = codeEditor;
        this._controller = controller;
        this._state = state;
        this._contextViewProvider = contextViewProvider;
        this._keybindingService = keybindingService;
        this._contextKeyService = contextKeyService;
        this._storageService = storageService;
        this._notificationService = notificationService;
        this._ctrlEnterReplaceAllWarningPrompted = !!storageService.getBoolean($de6146753f310471$var$ctrlEnterReplaceAllWarningPromptedKey, 0 /* GLOBAL */ );
        this._isVisible = false;
        this._isReplaceVisible = false;
        this._ignoreChangeEvent = false;
        this._updateHistoryDelayer = new $6bXyA.Delayer(500);
        this._register($9cWcn.toDisposable(()=>this._updateHistoryDelayer.cancel()
        ));
        this._register(this._state.onFindReplaceStateChange((e)=>this._onStateChanged(e)
        ));
        this._buildDomNode();
        this._updateButtons();
        this._tryUpdateWidgetWidth();
        this._findInput.inputBox.layout();
        this._register(this._codeEditor.onDidChangeConfiguration((e)=>{
            if (e.hasChanged(80 /* readOnly */ )) {
                if (this._codeEditor.getOption(80 /* readOnly */ )) // Hide replace part if editor becomes read only
                this._state.change({
                    isReplaceRevealed: false
                }, false);
                this._updateButtons();
            }
            if (e.hasChanged(130 /* layoutInfo */ )) this._tryUpdateWidgetWidth();
            if (e.hasChanged(2 /* accessibilitySupport */ )) this.updateAccessibilitySupport();
            if (e.hasChanged(35 /* find */ )) {
                const addExtraSpaceOnTop = this._codeEditor.getOption(35 /* find */ ).addExtraSpaceOnTop;
                if (addExtraSpaceOnTop && !this._viewZone) {
                    this._viewZone = new $de6146753f310471$export$70830c157adafe3e(0);
                    this._showViewZone();
                }
                if (!addExtraSpaceOnTop && this._viewZone) this._removeViewZone();
            }
        }));
        this.updateAccessibilitySupport();
        this._register(this._codeEditor.onDidChangeCursorSelection(()=>{
            if (this._isVisible) this._updateToggleSelectionFindButton();
        }));
        this._register(this._codeEditor.onDidFocusEditorWidget(()=>$de6146753f310471$var$__awaiter(this, void 0, void 0, function*() {
                if (this._isVisible) {
                    let globalBufferTerm = yield this._controller.getGlobalBufferTerm();
                    if (globalBufferTerm && globalBufferTerm !== this._state.searchString) {
                        this._state.change({
                            searchString: globalBufferTerm
                        }, false);
                        this._findInput.select();
                    }
                }
            })
        ));
        this._findInputFocused = $9bb245d49668b670$export$1bcc3ed82148a8b9.bindTo(contextKeyService);
        this._findFocusTracker = this._register($bDzmQ.trackFocus(this._findInput.inputBox.inputElement));
        this._register(this._findFocusTracker.onDidFocus(()=>{
            this._findInputFocused.set(true);
            this._updateSearchScope();
        }));
        this._register(this._findFocusTracker.onDidBlur(()=>{
            this._findInputFocused.set(false);
        }));
        this._replaceInputFocused = $9bb245d49668b670$export$1b9f123cc9b71d78.bindTo(contextKeyService);
        this._replaceFocusTracker = this._register($bDzmQ.trackFocus(this._replaceInput.inputBox.inputElement));
        this._register(this._replaceFocusTracker.onDidFocus(()=>{
            this._replaceInputFocused.set(true);
            this._updateSearchScope();
        }));
        this._register(this._replaceFocusTracker.onDidBlur(()=>{
            this._replaceInputFocused.set(false);
        }));
        this._codeEditor.addOverlayWidget(this);
        if (this._codeEditor.getOption(35 /* find */ ).addExtraSpaceOnTop) this._viewZone = new $de6146753f310471$export$70830c157adafe3e(0); // Put it before the first line then users can scroll beyond the first line.
        this._applyTheme(themeService.getColorTheme());
        this._register(themeService.onDidColorThemeChange(this._applyTheme.bind(this)));
        this._register(this._codeEditor.onDidChangeModel(()=>{
            if (!this._isVisible) return;
            this._viewZoneId = undefined;
        }));
        this._register(this._codeEditor.onDidScrollChange((e)=>{
            if (e.scrollTopChanged) {
                this._layoutViewZone();
                return;
            }
            // for other scroll changes, layout the viewzone in next tick to avoid ruining current rendering.
            setTimeout(()=>{
                this._layoutViewZone();
            }, 0);
        }));
    }
    // ----- IOverlayWidget API
    getId() {
        return $de6146753f310471$export$94cf213bcf83d48e.ID;
    }
    getDomNode() {
        return this._domNode;
    }
    getPosition() {
        if (this._isVisible) return {
            preference: 0 /* TOP_RIGHT_CORNER */ 
        };
        return null;
    }
    // ----- React to state changes
    _onStateChanged(e) {
        if (e.searchString) {
            try {
                this._ignoreChangeEvent = true;
                this._findInput.setValue(this._state.searchString);
            } finally{
                this._ignoreChangeEvent = false;
            }
            this._updateButtons();
        }
        if (e.replaceString) this._replaceInput.inputBox.value = this._state.replaceString;
        if (e.isRevealed) {
            if (this._state.isRevealed) this._reveal();
            else this._hide(true);
        }
        if (e.isReplaceRevealed) {
            if (this._state.isReplaceRevealed) {
                if (!this._codeEditor.getOption(80 /* readOnly */ ) && !this._isReplaceVisible) {
                    this._isReplaceVisible = true;
                    this._replaceInput.width = $bDzmQ.getTotalWidth(this._findInput.domNode);
                    this._updateButtons();
                    this._replaceInput.inputBox.layout();
                }
            } else if (this._isReplaceVisible) {
                this._isReplaceVisible = false;
                this._updateButtons();
            }
        }
        if ((e.isRevealed || e.isReplaceRevealed) && (this._state.isRevealed || this._state.isReplaceRevealed)) {
            if (this._tryUpdateHeight()) this._showViewZone();
        }
        if (e.isRegex) this._findInput.setRegex(this._state.isRegex);
        if (e.wholeWord) this._findInput.setWholeWords(this._state.wholeWord);
        if (e.matchCase) this._findInput.setCaseSensitive(this._state.matchCase);
        if (e.preserveCase) this._replaceInput.setPreserveCase(this._state.preserveCase);
        if (e.searchScope) {
            if (this._state.searchScope) this._toggleSelectionFind.checked = true;
            else this._toggleSelectionFind.checked = false;
            this._updateToggleSelectionFindButton();
        }
        if (e.searchString || e.matchesCount || e.matchesPosition) {
            let showRedOutline = this._state.searchString.length > 0 && this._state.matchesCount === 0;
            this._domNode.classList.toggle('no-results', showRedOutline);
            this._updateMatchesCount();
            this._updateButtons();
        }
        if (e.searchString || e.currentMatch) this._layoutViewZone();
        if (e.updateHistory) this._delayedUpdateHistory();
        if (e.loop) this._updateButtons();
    }
    _delayedUpdateHistory() {
        this._updateHistoryDelayer.trigger(this._updateHistory.bind(this)).then(undefined, $gPkHZ.onUnexpectedError);
    }
    _updateHistory() {
        if (this._state.searchString) this._findInput.inputBox.addToHistory();
        if (this._state.replaceString) this._replaceInput.inputBox.addToHistory();
    }
    _updateMatchesCount() {
        this._matchesCount.style.minWidth = $de6146753f310471$var$MAX_MATCHES_COUNT_WIDTH + 'px';
        if (this._state.matchesCount >= $9bb245d49668b670$export$79640dbfb07f50a4) this._matchesCount.title = $de6146753f310471$var$NLS_MATCHES_COUNT_LIMIT_TITLE;
        else this._matchesCount.title = '';
        // remove previous content
        if (this._matchesCount.firstChild) this._matchesCount.removeChild(this._matchesCount.firstChild);
        let label;
        if (this._state.matchesCount > 0) {
            let matchesCount = String(this._state.matchesCount);
            if (this._state.matchesCount >= $9bb245d49668b670$export$79640dbfb07f50a4) matchesCount += '+';
            let matchesPosition = String(this._state.matchesPosition);
            if (matchesPosition === '0') matchesPosition = '?';
            label = $jcr1R.format($de6146753f310471$export$db048e36c0077c43, matchesPosition, matchesCount);
        } else label = $de6146753f310471$export$5e23834a190f34c5;
        this._matchesCount.appendChild(document.createTextNode(label));
        $aIbUW.alert(this._getAriaLabel(label, this._state.currentMatch, this._state.searchString));
        $de6146753f310471$var$MAX_MATCHES_COUNT_WIDTH = Math.max($de6146753f310471$var$MAX_MATCHES_COUNT_WIDTH, this._matchesCount.clientWidth);
    }
    // ----- actions
    _getAriaLabel(label, currentMatch, searchString) {
        if (label === $de6146753f310471$export$5e23834a190f34c5) return searchString === '' ? $4dEdH.localize('ariaSearchNoResultEmpty', "{0} found", label) : $4dEdH.localize('ariaSearchNoResult', "{0} found for '{1}'", label, searchString);
        if (currentMatch) {
            const ariaLabel = $4dEdH.localize('ariaSearchNoResultWithLineNum', "{0} found for '{1}', at {2}", label, searchString, currentMatch.startLineNumber + ':' + currentMatch.startColumn);
            const model = this._codeEditor.getModel();
            if (model && currentMatch.startLineNumber <= model.getLineCount() && currentMatch.startLineNumber >= 1) {
                const lineContent = model.getLineContent(currentMatch.startLineNumber);
                return `${lineContent}, ${ariaLabel}`;
            }
            return ariaLabel;
        }
        return $4dEdH.localize('ariaSearchNoResultWithLineNumNoCurrentMatch', "{0} found for '{1}'", label, searchString);
    }
    /**
     * If 'selection find' is ON we should not disable the button (its function is to cancel 'selection find').
     * If 'selection find' is OFF we enable the button only if there is a selection.
     */ _updateToggleSelectionFindButton() {
        let selection = this._codeEditor.getSelection();
        let isSelection = selection ? selection.startLineNumber !== selection.endLineNumber || selection.startColumn !== selection.endColumn : false;
        let isChecked = this._toggleSelectionFind.checked;
        if (this._isVisible && (isChecked || isSelection)) this._toggleSelectionFind.enable();
        else this._toggleSelectionFind.disable();
    }
    _updateButtons() {
        this._findInput.setEnabled(this._isVisible);
        this._replaceInput.setEnabled(this._isVisible && this._isReplaceVisible);
        this._updateToggleSelectionFindButton();
        this._closeBtn.setEnabled(this._isVisible);
        let findInputIsNonEmpty = this._state.searchString.length > 0;
        let matchesCount = this._state.matchesCount ? true : false;
        this._prevBtn.setEnabled(this._isVisible && findInputIsNonEmpty && matchesCount && this._state.canNavigateBack());
        this._nextBtn.setEnabled(this._isVisible && findInputIsNonEmpty && matchesCount && this._state.canNavigateForward());
        this._replaceBtn.setEnabled(this._isVisible && this._isReplaceVisible && findInputIsNonEmpty);
        this._replaceAllBtn.setEnabled(this._isVisible && this._isReplaceVisible && findInputIsNonEmpty);
        this._domNode.classList.toggle('replaceToggled', this._isReplaceVisible);
        this._toggleReplaceBtn.setExpanded(this._isReplaceVisible);
        let canReplace = !this._codeEditor.getOption(80 /* readOnly */ );
        this._toggleReplaceBtn.setEnabled(this._isVisible && canReplace);
    }
    _reveal() {
        this._revealTimeouts.forEach((e)=>{
            clearTimeout(e);
        });
        this._revealTimeouts = [];
        if (!this._isVisible) {
            this._isVisible = true;
            const selection = this._codeEditor.getSelection();
            switch(this._codeEditor.getOption(35 /* find */ ).autoFindInSelection){
                case 'always':
                    this._toggleSelectionFind.checked = true;
                    break;
                case 'never':
                    this._toggleSelectionFind.checked = false;
                    break;
                case 'multiline':
                    const isSelectionMultipleLine = !!selection && selection.startLineNumber !== selection.endLineNumber;
                    this._toggleSelectionFind.checked = isSelectionMultipleLine;
                    break;
                default:
                    break;
            }
            this._tryUpdateWidgetWidth();
            this._updateButtons();
            this._revealTimeouts.push(setTimeout(()=>{
                this._domNode.classList.add('visible');
                this._domNode.setAttribute('aria-hidden', 'false');
            }, 0));
            // validate query again as it's being dismissed when we hide the find widget.
            this._revealTimeouts.push(setTimeout(()=>{
                this._findInput.validate();
            }, 200));
            this._codeEditor.layoutOverlayWidget(this);
            let adjustEditorScrollTop = true;
            if (this._codeEditor.getOption(35 /* find */ ).seedSearchStringFromSelection && selection) {
                const domNode = this._codeEditor.getDomNode();
                if (domNode) {
                    const editorCoords = $bDzmQ.getDomNodePagePosition(domNode);
                    const startCoords = this._codeEditor.getScrolledVisiblePosition(selection.getStartPosition());
                    const startLeft = editorCoords.left + (startCoords ? startCoords.left : 0);
                    const startTop = startCoords ? startCoords.top : 0;
                    if (this._viewZone && startTop < this._viewZone.heightInPx) {
                        if (selection.endLineNumber > selection.startLineNumber) adjustEditorScrollTop = false;
                        const leftOfFindWidget = $bDzmQ.getTopLeftOffset(this._domNode).left;
                        if (startLeft > leftOfFindWidget) adjustEditorScrollTop = false;
                        const endCoords = this._codeEditor.getScrolledVisiblePosition(selection.getEndPosition());
                        const endLeft = editorCoords.left + (endCoords ? endCoords.left : 0);
                        if (endLeft > leftOfFindWidget) adjustEditorScrollTop = false;
                    }
                }
            }
            this._showViewZone(adjustEditorScrollTop);
        }
    }
    _hide(focusTheEditor) {
        this._revealTimeouts.forEach((e)=>{
            clearTimeout(e);
        });
        this._revealTimeouts = [];
        if (this._isVisible) {
            this._isVisible = false;
            this._updateButtons();
            this._domNode.classList.remove('visible');
            this._domNode.setAttribute('aria-hidden', 'true');
            this._findInput.clearMessage();
            if (focusTheEditor) this._codeEditor.focus();
            this._codeEditor.layoutOverlayWidget(this);
            this._removeViewZone();
        }
    }
    _layoutViewZone(targetScrollTop) {
        const addExtraSpaceOnTop = this._codeEditor.getOption(35 /* find */ ).addExtraSpaceOnTop;
        if (!addExtraSpaceOnTop) {
            this._removeViewZone();
            return;
        }
        if (!this._isVisible) return;
        const viewZone = this._viewZone;
        if (this._viewZoneId !== undefined || !viewZone) return;
        this._codeEditor.changeViewZones((accessor)=>{
            viewZone.heightInPx = this._getHeight();
            this._viewZoneId = accessor.addZone(viewZone);
            // scroll top adjust to make sure the editor doesn't scroll when adding viewzone at the beginning.
            this._codeEditor.setScrollTop(targetScrollTop || this._codeEditor.getScrollTop() + viewZone.heightInPx);
        });
    }
    _showViewZone(adjustScroll = true) {
        if (!this._isVisible) return;
        const addExtraSpaceOnTop = this._codeEditor.getOption(35 /* find */ ).addExtraSpaceOnTop;
        if (!addExtraSpaceOnTop) return;
        if (this._viewZone === undefined) this._viewZone = new $de6146753f310471$export$70830c157adafe3e(0);
        const viewZone = this._viewZone;
        this._codeEditor.changeViewZones((accessor)=>{
            if (this._viewZoneId !== undefined) {
                // the view zone already exists, we need to update the height
                const newHeight = this._getHeight();
                if (newHeight === viewZone.heightInPx) return;
                let scrollAdjustment = newHeight - viewZone.heightInPx;
                viewZone.heightInPx = newHeight;
                accessor.layoutZone(this._viewZoneId);
                if (adjustScroll) this._codeEditor.setScrollTop(this._codeEditor.getScrollTop() + scrollAdjustment);
                return;
            } else {
                let scrollAdjustment = this._getHeight();
                // if the editor has top padding, factor that into the zone height
                scrollAdjustment -= this._codeEditor.getOption(74 /* padding */ ).top;
                if (scrollAdjustment <= 0) return;
                viewZone.heightInPx = scrollAdjustment;
                this._viewZoneId = accessor.addZone(viewZone);
                if (adjustScroll) this._codeEditor.setScrollTop(this._codeEditor.getScrollTop() + scrollAdjustment);
            }
        });
    }
    _removeViewZone() {
        this._codeEditor.changeViewZones((accessor)=>{
            if (this._viewZoneId !== undefined) {
                accessor.removeZone(this._viewZoneId);
                this._viewZoneId = undefined;
                if (this._viewZone) {
                    this._codeEditor.setScrollTop(this._codeEditor.getScrollTop() - this._viewZone.heightInPx);
                    this._viewZone = undefined;
                }
            }
        });
    }
    _applyTheme(theme) {
        let inputStyles = {
            inputActiveOptionBorder: theme.getColor($gaWeX.inputActiveOptionBorder),
            inputActiveOptionBackground: theme.getColor($gaWeX.inputActiveOptionBackground),
            inputActiveOptionForeground: theme.getColor($gaWeX.inputActiveOptionForeground),
            inputBackground: theme.getColor($gaWeX.inputBackground),
            inputForeground: theme.getColor($gaWeX.inputForeground),
            inputBorder: theme.getColor($gaWeX.inputBorder),
            inputValidationInfoBackground: theme.getColor($gaWeX.inputValidationInfoBackground),
            inputValidationInfoForeground: theme.getColor($gaWeX.inputValidationInfoForeground),
            inputValidationInfoBorder: theme.getColor($gaWeX.inputValidationInfoBorder),
            inputValidationWarningBackground: theme.getColor($gaWeX.inputValidationWarningBackground),
            inputValidationWarningForeground: theme.getColor($gaWeX.inputValidationWarningForeground),
            inputValidationWarningBorder: theme.getColor($gaWeX.inputValidationWarningBorder),
            inputValidationErrorBackground: theme.getColor($gaWeX.inputValidationErrorBackground),
            inputValidationErrorForeground: theme.getColor($gaWeX.inputValidationErrorForeground),
            inputValidationErrorBorder: theme.getColor($gaWeX.inputValidationErrorBorder)
        };
        this._findInput.style(inputStyles);
        this._replaceInput.style(inputStyles);
        this._toggleSelectionFind.style(inputStyles);
    }
    _tryUpdateWidgetWidth() {
        if (!this._isVisible) return;
        if (!$bDzmQ.isInDOM(this._domNode)) // the widget is not in the DOM
        return;
        const layoutInfo = this._codeEditor.getLayoutInfo();
        const editorContentWidth = layoutInfo.contentWidth;
        if (editorContentWidth <= 0) {
            // for example, diff view original editor
            this._domNode.classList.add('hiddenEditor');
            return;
        } else if (this._domNode.classList.contains('hiddenEditor')) this._domNode.classList.remove('hiddenEditor');
        const editorWidth = layoutInfo.width;
        const minimapWidth = layoutInfo.minimap.minimapWidth;
        let collapsedFindWidget = false;
        let reducedFindWidget = false;
        let narrowFindWidget = false;
        if (this._resized) {
            let widgetWidth = $bDzmQ.getTotalWidth(this._domNode);
            if (widgetWidth > $de6146753f310471$var$FIND_WIDGET_INITIAL_WIDTH) {
                // as the widget is resized by users, we may need to change the max width of the widget as the editor width changes.
                this._domNode.style.maxWidth = `${editorWidth - 28 - minimapWidth - 15}px`;
                this._replaceInput.width = $bDzmQ.getTotalWidth(this._findInput.domNode);
                return;
            }
        }
        if ($de6146753f310471$var$FIND_WIDGET_INITIAL_WIDTH + 28 + minimapWidth >= editorWidth) reducedFindWidget = true;
        if ($de6146753f310471$var$FIND_WIDGET_INITIAL_WIDTH + 28 + minimapWidth - $de6146753f310471$var$MAX_MATCHES_COUNT_WIDTH >= editorWidth) narrowFindWidget = true;
        if ($de6146753f310471$var$FIND_WIDGET_INITIAL_WIDTH + 28 + minimapWidth - $de6146753f310471$var$MAX_MATCHES_COUNT_WIDTH >= editorWidth + 50) collapsedFindWidget = true;
        this._domNode.classList.toggle('collapsed-find-widget', collapsedFindWidget);
        this._domNode.classList.toggle('narrow-find-widget', narrowFindWidget);
        this._domNode.classList.toggle('reduced-find-widget', reducedFindWidget);
        if (!narrowFindWidget && !collapsedFindWidget) // the minimal left offset of findwidget is 15px.
        this._domNode.style.maxWidth = `${editorWidth - 28 - minimapWidth - 15}px`;
        if (this._resized) {
            this._findInput.inputBox.layout();
            let findInputWidth = this._findInput.inputBox.element.clientWidth;
            if (findInputWidth > 0) this._replaceInput.width = findInputWidth;
        } else if (this._isReplaceVisible) this._replaceInput.width = $bDzmQ.getTotalWidth(this._findInput.domNode);
    }
    _getHeight() {
        let totalheight = 0;
        // find input margin top
        totalheight += 4;
        // find input height
        totalheight += this._findInput.inputBox.height + 2 /** input box border */ ;
        if (this._isReplaceVisible) {
            // replace input margin
            totalheight += 4;
            totalheight += this._replaceInput.inputBox.height + 2 /** input box border */ ;
        }
        // margin bottom
        totalheight += 4;
        return totalheight;
    }
    _tryUpdateHeight() {
        const totalHeight = this._getHeight();
        if (this._cachedHeight !== null && this._cachedHeight === totalHeight) return false;
        this._cachedHeight = totalHeight;
        this._domNode.style.height = `${totalHeight}px`;
        return true;
    }
    // ----- Public
    focusFindInput() {
        this._findInput.select();
        // Edge browser requires focus() in addition to select()
        this._findInput.focus();
    }
    focusReplaceInput() {
        this._replaceInput.select();
        // Edge browser requires focus() in addition to select()
        this._replaceInput.focus();
    }
    highlightFindOptions() {
        this._findInput.highlightFindOptions();
    }
    _updateSearchScope() {
        if (!this._codeEditor.hasModel()) return;
        if (this._toggleSelectionFind.checked) {
            let selections = this._codeEditor.getSelections();
            selections.map((selection)=>{
                if (selection.endColumn === 1 && selection.endLineNumber > selection.startLineNumber) selection = selection.setEndPosition(selection.endLineNumber - 1, this._codeEditor.getModel().getLineMaxColumn(selection.endLineNumber - 1));
                const currentMatch = this._state.currentMatch;
                if (selection.startLineNumber !== selection.endLineNumber) {
                    if (!$d00il.Range.equalsRange(selection, currentMatch)) return selection;
                }
                return null;
            }).filter((element)=>!!element
            );
            if (selections.length) this._state.change({
                searchScope: selections
            }, true);
        }
    }
    _onFindInputMouseDown(e) {
        // on linux, middle key does pasting.
        if (e.middleButton) e.stopPropagation();
    }
    _onFindInputKeyDown(e) {
        if (e.equals($de6146753f310471$var$ctrlKeyMod | 3 /* Enter */ )) {
            if (this._keybindingService.dispatchEvent(e, e.target)) {
                e.preventDefault();
                return;
            } else {
                this._findInput.inputBox.insertAtCursor('\n');
                e.preventDefault();
                return;
            }
        }
        if (e.equals(2 /* Tab */ )) {
            if (this._isReplaceVisible) this._replaceInput.focus();
            else this._findInput.focusOnCaseSensitive();
            e.preventDefault();
            return;
        }
        if (e.equals(2066 /* DownArrow */ )) {
            this._codeEditor.focus();
            e.preventDefault();
            return;
        }
        if (e.equals(16 /* UpArrow */ )) return $de6146753f310471$var$stopPropagationForMultiLineUpwards(e, this._findInput.getValue(), this._findInput.domNode.querySelector('textarea'));
        if (e.equals(18 /* DownArrow */ )) return $de6146753f310471$var$stopPropagationForMultiLineDownwards(e, this._findInput.getValue(), this._findInput.domNode.querySelector('textarea'));
    }
    _onReplaceInputKeyDown(e) {
        if (e.equals($de6146753f310471$var$ctrlKeyMod | 3 /* Enter */ )) {
            if (this._keybindingService.dispatchEvent(e, e.target)) {
                e.preventDefault();
                return;
            } else {
                if ($lb0Ah.isWindows && $lb0Ah.isNative && !this._ctrlEnterReplaceAllWarningPrompted) {
                    // this is the first time when users press Ctrl + Enter to replace all
                    this._notificationService.info($4dEdH.localize('ctrlEnter.keybindingChanged', 'Ctrl+Enter now inserts line break instead of replacing all. You can modify the keybinding for editor.action.replaceAll to override this behavior.'));
                    this._ctrlEnterReplaceAllWarningPrompted = true;
                    this._storageService.store($de6146753f310471$var$ctrlEnterReplaceAllWarningPromptedKey, true, 0 /* GLOBAL */ , 0 /* USER */ );
                }
                this._replaceInput.inputBox.insertAtCursor('\n');
                e.preventDefault();
                return;
            }
        }
        if (e.equals(2 /* Tab */ )) {
            this._findInput.focusOnCaseSensitive();
            e.preventDefault();
            return;
        }
        if (e.equals(1026 /* Tab */ )) {
            this._findInput.focus();
            e.preventDefault();
            return;
        }
        if (e.equals(2066 /* DownArrow */ )) {
            this._codeEditor.focus();
            e.preventDefault();
            return;
        }
        if (e.equals(16 /* UpArrow */ )) return $de6146753f310471$var$stopPropagationForMultiLineUpwards(e, this._replaceInput.inputBox.value, this._replaceInput.inputBox.element.querySelector('textarea'));
        if (e.equals(18 /* DownArrow */ )) return $de6146753f310471$var$stopPropagationForMultiLineDownwards(e, this._replaceInput.inputBox.value, this._replaceInput.inputBox.element.querySelector('textarea'));
    }
    // ----- sash
    getVerticalSashLeft(_sash) {
        return 0;
    }
    // ----- initialization
    _keybindingLabelFor(actionId) {
        let kb = this._keybindingService.lookupKeybinding(actionId);
        if (!kb) return '';
        return ` (${kb.getLabel()})`;
    }
    _buildDomNode() {
        const flexibleHeight = true;
        const flexibleWidth = true;
        // Find input
        this._findInput = this._register(new $bca39a69129e9220$exports.ContextScopedFindInput(null, this._contextViewProvider, {
            width: $de6146753f310471$var$FIND_INPUT_AREA_WIDTH,
            label: $de6146753f310471$var$NLS_FIND_INPUT_LABEL,
            placeholder: $de6146753f310471$var$NLS_FIND_INPUT_PLACEHOLDER,
            appendCaseSensitiveLabel: this._keybindingLabelFor($9bb245d49668b670$export$a4fc1be778636938.ToggleCaseSensitiveCommand),
            appendWholeWordsLabel: this._keybindingLabelFor($9bb245d49668b670$export$a4fc1be778636938.ToggleWholeWordCommand),
            appendRegexLabel: this._keybindingLabelFor($9bb245d49668b670$export$a4fc1be778636938.ToggleRegexCommand),
            validation: (value)=>{
                if (value.length === 0 || !this._findInput.getRegex()) return null;
                try {
                    // use `g` and `u` which are also used by the TextModel search
                    new RegExp(value, 'gu');
                    return null;
                } catch (e) {
                    return {
                        content: e.message
                    };
                }
            },
            flexibleHeight: flexibleHeight,
            flexibleWidth: flexibleWidth,
            flexibleMaxHeight: 118,
            showHistoryHint: ()=>$bb7728b598b7e0fe$export$94614604caa08aab(this._keybindingService)
        }, this._contextKeyService, true));
        this._findInput.setRegex(!!this._state.isRegex);
        this._findInput.setCaseSensitive(!!this._state.matchCase);
        this._findInput.setWholeWords(!!this._state.wholeWord);
        this._register(this._findInput.onKeyDown((e)=>this._onFindInputKeyDown(e)
        ));
        this._register(this._findInput.inputBox.onDidChange(()=>{
            if (this._ignoreChangeEvent) return;
            this._state.change({
                searchString: this._findInput.getValue()
            }, true);
        }));
        this._register(this._findInput.onDidOptionChange(()=>{
            this._state.change({
                isRegex: this._findInput.getRegex(),
                wholeWord: this._findInput.getWholeWords(),
                matchCase: this._findInput.getCaseSensitive()
            }, true);
        }));
        this._register(this._findInput.onCaseSensitiveKeyDown((e)=>{
            if (e.equals(1026 /* Tab */ )) {
                if (this._isReplaceVisible) {
                    this._replaceInput.focus();
                    e.preventDefault();
                }
            }
        }));
        this._register(this._findInput.onRegexKeyDown((e)=>{
            if (e.equals(2 /* Tab */ )) {
                if (this._isReplaceVisible) {
                    this._replaceInput.focusOnPreserve();
                    e.preventDefault();
                }
            }
        }));
        this._register(this._findInput.inputBox.onDidHeightChange((e)=>{
            if (this._tryUpdateHeight()) this._showViewZone();
        }));
        if ($lb0Ah.isLinux) this._register(this._findInput.onMouseDown((e)=>this._onFindInputMouseDown(e)
        ));
        this._matchesCount = document.createElement('div');
        this._matchesCount.className = 'matchesCount';
        this._updateMatchesCount();
        // Previous button
        this._prevBtn = this._register(new $de6146753f310471$export$627052cf4bde93a4({
            label: $de6146753f310471$var$NLS_PREVIOUS_MATCH_BTN_LABEL + this._keybindingLabelFor($9bb245d49668b670$export$a4fc1be778636938.PreviousMatchFindAction),
            icon: $de6146753f310471$export$cd8ded1ad8462604,
            onTrigger: ()=>{
                this._codeEditor.getAction($9bb245d49668b670$export$a4fc1be778636938.PreviousMatchFindAction).run().then(undefined, $gPkHZ.onUnexpectedError);
            }
        }));
        // Next button
        this._nextBtn = this._register(new $de6146753f310471$export$627052cf4bde93a4({
            label: $de6146753f310471$var$NLS_NEXT_MATCH_BTN_LABEL + this._keybindingLabelFor($9bb245d49668b670$export$a4fc1be778636938.NextMatchFindAction),
            icon: $de6146753f310471$export$3b49e6223142e6cb,
            onTrigger: ()=>{
                this._codeEditor.getAction($9bb245d49668b670$export$a4fc1be778636938.NextMatchFindAction).run().then(undefined, $gPkHZ.onUnexpectedError);
            }
        }));
        let findPart = document.createElement('div');
        findPart.className = 'find-part';
        findPart.appendChild(this._findInput.domNode);
        const actionsContainer = document.createElement('div');
        actionsContainer.className = 'find-actions';
        findPart.appendChild(actionsContainer);
        actionsContainer.appendChild(this._matchesCount);
        actionsContainer.appendChild(this._prevBtn.domNode);
        actionsContainer.appendChild(this._nextBtn.domNode);
        // Toggle selection button
        this._toggleSelectionFind = this._register(new $22c4e80b3baaa8f9$export$48513f6b9f8ce62d({
            icon: $de6146753f310471$var$findSelectionIcon,
            title: $de6146753f310471$var$NLS_TOGGLE_SELECTION_FIND_TITLE + this._keybindingLabelFor($9bb245d49668b670$export$a4fc1be778636938.ToggleSearchScopeCommand),
            isChecked: false
        }));
        this._register(this._toggleSelectionFind.onChange(()=>{
            if (this._toggleSelectionFind.checked) {
                if (this._codeEditor.hasModel()) {
                    let selections = this._codeEditor.getSelections();
                    selections.map((selection)=>{
                        if (selection.endColumn === 1 && selection.endLineNumber > selection.startLineNumber) selection = selection.setEndPosition(selection.endLineNumber - 1, this._codeEditor.getModel().getLineMaxColumn(selection.endLineNumber - 1));
                        if (!selection.isEmpty()) return selection;
                        return null;
                    }).filter((element)=>!!element
                    );
                    if (selections.length) this._state.change({
                        searchScope: selections
                    }, true);
                }
            } else this._state.change({
                searchScope: null
            }, true);
        }));
        actionsContainer.appendChild(this._toggleSelectionFind.domNode);
        // Close button
        this._closeBtn = this._register(new $de6146753f310471$export$627052cf4bde93a4({
            label: $de6146753f310471$var$NLS_CLOSE_BTN_LABEL + this._keybindingLabelFor($9bb245d49668b670$export$a4fc1be778636938.CloseFindWidgetCommand),
            icon: $hEsmQ.widgetClose,
            onTrigger: ()=>{
                this._state.change({
                    isRevealed: false,
                    searchScope: null
                }, false);
            },
            onKeyDown: (e)=>{
                if (e.equals(2 /* Tab */ )) {
                    if (this._isReplaceVisible) {
                        if (this._replaceBtn.isEnabled()) this._replaceBtn.focus();
                        else this._codeEditor.focus();
                        e.preventDefault();
                    }
                }
            }
        }));
        actionsContainer.appendChild(this._closeBtn.domNode);
        // Replace input
        this._replaceInput = this._register(new $bca39a69129e9220$exports.ContextScopedReplaceInput(null, undefined, {
            label: $de6146753f310471$var$NLS_REPLACE_INPUT_LABEL,
            placeholder: $de6146753f310471$var$NLS_REPLACE_INPUT_PLACEHOLDER,
            appendPreserveCaseLabel: this._keybindingLabelFor($9bb245d49668b670$export$a4fc1be778636938.TogglePreserveCaseCommand),
            history: [],
            flexibleHeight: flexibleHeight,
            flexibleWidth: flexibleWidth,
            flexibleMaxHeight: 118,
            showHistoryHint: ()=>$bb7728b598b7e0fe$export$94614604caa08aab(this._keybindingService)
        }, this._contextKeyService, true));
        this._replaceInput.setPreserveCase(!!this._state.preserveCase);
        this._register(this._replaceInput.onKeyDown((e)=>this._onReplaceInputKeyDown(e)
        ));
        this._register(this._replaceInput.inputBox.onDidChange(()=>{
            this._state.change({
                replaceString: this._replaceInput.inputBox.value
            }, false);
        }));
        this._register(this._replaceInput.inputBox.onDidHeightChange((e)=>{
            if (this._isReplaceVisible && this._tryUpdateHeight()) this._showViewZone();
        }));
        this._register(this._replaceInput.onDidOptionChange(()=>{
            this._state.change({
                preserveCase: this._replaceInput.getPreserveCase()
            }, true);
        }));
        this._register(this._replaceInput.onPreserveCaseKeyDown((e)=>{
            if (e.equals(2 /* Tab */ )) {
                if (this._prevBtn.isEnabled()) this._prevBtn.focus();
                else if (this._nextBtn.isEnabled()) this._nextBtn.focus();
                else if (this._toggleSelectionFind.enabled) this._toggleSelectionFind.focus();
                else if (this._closeBtn.isEnabled()) this._closeBtn.focus();
                e.preventDefault();
            }
        }));
        // Replace one button
        this._replaceBtn = this._register(new $de6146753f310471$export$627052cf4bde93a4({
            label: $de6146753f310471$var$NLS_REPLACE_BTN_LABEL + this._keybindingLabelFor($9bb245d49668b670$export$a4fc1be778636938.ReplaceOneAction),
            icon: $de6146753f310471$export$83ee554109a27042,
            onTrigger: ()=>{
                this._controller.replace();
            },
            onKeyDown: (e)=>{
                if (e.equals(1026 /* Tab */ )) {
                    this._closeBtn.focus();
                    e.preventDefault();
                }
            }
        }));
        // Replace all button
        this._replaceAllBtn = this._register(new $de6146753f310471$export$627052cf4bde93a4({
            label: $de6146753f310471$var$NLS_REPLACE_ALL_BTN_LABEL + this._keybindingLabelFor($9bb245d49668b670$export$a4fc1be778636938.ReplaceAllAction),
            icon: $de6146753f310471$export$9c63c939bdf63145,
            onTrigger: ()=>{
                this._controller.replaceAll();
            }
        }));
        let replacePart = document.createElement('div');
        replacePart.className = 'replace-part';
        replacePart.appendChild(this._replaceInput.domNode);
        const replaceActionsContainer = document.createElement('div');
        replaceActionsContainer.className = 'replace-actions';
        replacePart.appendChild(replaceActionsContainer);
        replaceActionsContainer.appendChild(this._replaceBtn.domNode);
        replaceActionsContainer.appendChild(this._replaceAllBtn.domNode);
        // Toggle replace button
        this._toggleReplaceBtn = this._register(new $de6146753f310471$export$627052cf4bde93a4({
            label: $de6146753f310471$var$NLS_TOGGLE_REPLACE_MODE_BTN_LABEL,
            className: 'codicon toggle left',
            onTrigger: ()=>{
                this._state.change({
                    isReplaceRevealed: !this._isReplaceVisible
                }, false);
                if (this._isReplaceVisible) {
                    this._replaceInput.width = $bDzmQ.getTotalWidth(this._findInput.domNode);
                    this._replaceInput.inputBox.layout();
                }
                this._showViewZone();
            }
        }));
        this._toggleReplaceBtn.setExpanded(this._isReplaceVisible);
        // Widget
        this._domNode = document.createElement('div');
        this._domNode.className = 'editor-widget find-widget';
        this._domNode.setAttribute('aria-hidden', 'true');
        // We need to set this explicitly, otherwise on IE11, the width inheritence of flex doesn't work.
        this._domNode.style.width = `${$de6146753f310471$var$FIND_WIDGET_INITIAL_WIDTH}px`;
        this._domNode.appendChild(this._toggleReplaceBtn.domNode);
        this._domNode.appendChild(findPart);
        this._domNode.appendChild(replacePart);
        this._resizeSash = new $9lxpu.Sash(this._domNode, this, {
            orientation: 0 /* VERTICAL */ ,
            size: 2
        });
        this._resized = false;
        let originalWidth = $de6146753f310471$var$FIND_WIDGET_INITIAL_WIDTH;
        this._register(this._resizeSash.onDidStart(()=>{
            originalWidth = $bDzmQ.getTotalWidth(this._domNode);
        }));
        this._register(this._resizeSash.onDidChange((evt)=>{
            this._resized = true;
            let width = originalWidth + evt.startX - evt.currentX;
            if (width < $de6146753f310471$var$FIND_WIDGET_INITIAL_WIDTH) // narrow down the find widget should be handled by CSS.
            return;
            const maxWidth = parseFloat($bDzmQ.getComputedStyle(this._domNode).maxWidth) || 0;
            if (width > maxWidth) return;
            this._domNode.style.width = `${width}px`;
            if (this._isReplaceVisible) this._replaceInput.width = $bDzmQ.getTotalWidth(this._findInput.domNode);
            this._findInput.inputBox.layout();
            this._tryUpdateHeight();
        }));
        this._register(this._resizeSash.onDidReset(()=>{
            // users double click on the sash
            const currentWidth = $bDzmQ.getTotalWidth(this._domNode);
            if (currentWidth < $de6146753f310471$var$FIND_WIDGET_INITIAL_WIDTH) // The editor is narrow and the width of the find widget is controlled fully by CSS.
            return;
            let width = $de6146753f310471$var$FIND_WIDGET_INITIAL_WIDTH;
            if (!this._resized || currentWidth === $de6146753f310471$var$FIND_WIDGET_INITIAL_WIDTH) {
                // 1. never resized before, double click should maximizes it
                // 2. users resized it already but its width is the same as default
                const layoutInfo = this._codeEditor.getLayoutInfo();
                width = layoutInfo.width - 28 - layoutInfo.minimap.minimapWidth - 15;
                this._resized = true;
            }
            this._domNode.style.width = `${width}px`;
            if (this._isReplaceVisible) this._replaceInput.width = $bDzmQ.getTotalWidth(this._findInput.domNode);
            this._findInput.inputBox.layout();
        }));
    }
    updateAccessibilitySupport() {
        const value = this._codeEditor.getOption(2 /* accessibilitySupport */ );
        this._findInput.setFocusInputOnOptionClick(value !== 2 /* Enabled */ );
    }
}
$de6146753f310471$export$94cf213bcf83d48e.ID = 'editor.contrib.findWidget';
class $de6146753f310471$export$627052cf4bde93a4 extends $fxJYg.Widget {
    constructor(opts){
        super();
        this._opts = opts;
        let className = 'button';
        if (this._opts.className) className = className + ' ' + this._opts.className;
        if (this._opts.icon) className = className + ' ' + $azIPz.ThemeIcon.asClassName(this._opts.icon);
        this._domNode = document.createElement('div');
        this._domNode.title = this._opts.label;
        this._domNode.tabIndex = 0;
        this._domNode.className = className;
        this._domNode.setAttribute('role', 'button');
        this._domNode.setAttribute('aria-label', this._opts.label);
        this.onclick(this._domNode, (e)=>{
            this._opts.onTrigger();
            e.preventDefault();
        });
        this.onkeydown(this._domNode, (e)=>{
            if (e.equals(10 /* Space */ ) || e.equals(3 /* Enter */ )) {
                this._opts.onTrigger();
                e.preventDefault();
                return;
            }
            if (this._opts.onKeyDown) this._opts.onKeyDown(e);
        });
    }
    get domNode() {
        return this._domNode;
    }
    isEnabled() {
        return this._domNode.tabIndex >= 0;
    }
    focus() {
        this._domNode.focus();
    }
    setEnabled(enabled) {
        this._domNode.classList.toggle('disabled', !enabled);
        this._domNode.setAttribute('aria-disabled', String(!enabled));
        this._domNode.tabIndex = enabled ? 0 : -1;
    }
    setExpanded(expanded) {
        this._domNode.setAttribute('aria-expanded', String(!!expanded));
        if (expanded) {
            this._domNode.classList.remove(...$azIPz.ThemeIcon.asClassNameArray($de6146753f310471$var$findCollapsedIcon));
            this._domNode.classList.add(...$azIPz.ThemeIcon.asClassNameArray($de6146753f310471$var$findExpandedIcon));
        } else {
            this._domNode.classList.remove(...$azIPz.ThemeIcon.asClassNameArray($de6146753f310471$var$findExpandedIcon));
            this._domNode.classList.add(...$azIPz.ThemeIcon.asClassNameArray($de6146753f310471$var$findCollapsedIcon));
        }
    }
}
// theming
$azIPz.registerThemingParticipant((theme, collector)=>{
    const addBackgroundColorRule = (selector, color)=>{
        if (color) collector.addRule(`.monaco-editor ${selector} { background-color: ${color}; }`);
    };
    addBackgroundColorRule('.findMatch', theme.getColor($gaWeX.editorFindMatchHighlight));
    addBackgroundColorRule('.currentFindMatch', theme.getColor($gaWeX.editorFindMatch));
    addBackgroundColorRule('.findScope', theme.getColor($gaWeX.editorFindRangeHighlight));
    const widgetBackground = theme.getColor($gaWeX.editorWidgetBackground);
    addBackgroundColorRule('.find-widget', widgetBackground);
    const widgetShadowColor = theme.getColor($gaWeX.widgetShadow);
    if (widgetShadowColor) collector.addRule(`.monaco-editor .find-widget { box-shadow: 0 0 8px 2px ${widgetShadowColor}; }`);
    const findMatchHighlightBorder = theme.getColor($gaWeX.editorFindMatchHighlightBorder);
    if (findMatchHighlightBorder) collector.addRule(`.monaco-editor .findMatch { border: 1px ${theme.type === 'hc' ? 'dotted' : 'solid'} ${findMatchHighlightBorder}; box-sizing: border-box; }`);
    const findMatchBorder = theme.getColor($gaWeX.editorFindMatchBorder);
    if (findMatchBorder) collector.addRule(`.monaco-editor .currentFindMatch { border: 2px solid ${findMatchBorder}; padding: 1px; box-sizing: border-box; }`);
    const findRangeHighlightBorder = theme.getColor($gaWeX.editorFindRangeHighlightBorder);
    if (findRangeHighlightBorder) collector.addRule(`.monaco-editor .findScope { border: 1px ${theme.type === 'hc' ? 'dashed' : 'solid'} ${findRangeHighlightBorder}; }`);
    const hcBorder = theme.getColor($gaWeX.contrastBorder);
    if (hcBorder) collector.addRule(`.monaco-editor .find-widget { border: 1px solid ${hcBorder}; }`);
    const foreground = theme.getColor($gaWeX.editorWidgetForeground);
    if (foreground) collector.addRule(`.monaco-editor .find-widget { color: ${foreground}; }`);
    const error = theme.getColor($gaWeX.errorForeground);
    if (error) collector.addRule(`.monaco-editor .find-widget.no-results .matchesCount { color: ${error}; }`);
    const resizeBorderBackground = theme.getColor($gaWeX.editorWidgetResizeBorder);
    if (resizeBorderBackground) collector.addRule(`.monaco-editor .find-widget .monaco-sash { background-color: ${resizeBorderBackground}; }`);
    else {
        const border = theme.getColor($gaWeX.editorWidgetBorder);
        if (border) collector.addRule(`.monaco-editor .find-widget .monaco-sash { background-color: ${border}; }`);
    }
    // Action bars
    const toolbarHoverBackgroundColor = theme.getColor($gaWeX.toolbarHoverBackground);
    if (toolbarHoverBackgroundColor) collector.addRule(`
		.monaco-editor .find-widget .button:not(.disabled):hover,
		.monaco-editor .find-widget .codicon-find-selection:hover {
			background-color: ${toolbarHoverBackgroundColor} !important;
		}
	`);
    // This rule is used to override the outline color for synthetic-focus find input.
    const focusOutline = theme.getColor($gaWeX.focusBorder);
    if (focusOutline) collector.addRule(`.monaco-editor .find-widget .monaco-inputbox.synthetic-focus { outline-color: ${focusOutline}; }`);
});



var $4dEdH = parcelRequire("4dEdH");

var $g4v7E = parcelRequire("g4v7E");

var $8QSW4 = parcelRequire("8QSW4");

var $cxCeF = parcelRequire("cxCeF");

var $d6K7e = parcelRequire("d6K7e");

var $7IxGd = parcelRequire("7IxGd");

var $kCOKl = parcelRequire("kCOKl");

var $2AUoS = parcelRequire("2AUoS");

var $azIPz = parcelRequire("azIPz");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $20012b82c35145bb$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var $20012b82c35145bb$var$__param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
};
var $20012b82c35145bb$var$__awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
const $20012b82c35145bb$var$SEARCH_STRING_MAX_LENGTH = 524288;
function $20012b82c35145bb$export$422517c0cd4e3d9f(editor, seedSearchStringFromSelection = 'single', seedSearchStringFromNonEmptySelection = false) {
    if (!editor.hasModel()) return null;
    const selection = editor.getSelection();
    // if selection spans multiple lines, default search string to empty
    if (seedSearchStringFromSelection === 'single' && selection.startLineNumber === selection.endLineNumber || seedSearchStringFromSelection === 'multiple') {
        if (selection.isEmpty()) {
            const wordAtPosition = editor.getConfiguredWordAtPosition(selection.getStartPosition());
            if (wordAtPosition && false === seedSearchStringFromNonEmptySelection) return wordAtPosition.word;
        } else {
            if (editor.getModel().getValueLengthInRange(selection) < $20012b82c35145bb$var$SEARCH_STRING_MAX_LENGTH) return editor.getModel().getValueInRange(selection);
        }
    }
    return null;
}
let $20012b82c35145bb$export$3190f9a23ad62166 = class $20012b82c35145bb$export$3190f9a23ad62166 extends $9cWcn.Disposable {
    constructor(editor, contextKeyService, storageService, clipboardService){
        super();
        this._editor = editor;
        this._findWidgetVisible = $9bb245d49668b670$export$bc27e4192c4ca2b8.bindTo(contextKeyService);
        this._contextKeyService = contextKeyService;
        this._storageService = storageService;
        this._clipboardService = clipboardService;
        this._updateHistoryDelayer = new $6bXyA.Delayer(500);
        this._state = this._register(new $0e363b7e1c4921eb$export$134b1d8b9bc10076());
        this.loadQueryState();
        this._register(this._state.onFindReplaceStateChange((e)=>this._onStateChanged(e)
        ));
        this._model = null;
        this._register(this._editor.onDidChangeModel(()=>{
            let shouldRestartFind = this._editor.getModel() && this._state.isRevealed;
            this.disposeModel();
            this._state.change({
                searchScope: null,
                matchCase: this._storageService.getBoolean('editor.matchCase', 1 /* WORKSPACE */ , false),
                wholeWord: this._storageService.getBoolean('editor.wholeWord', 1 /* WORKSPACE */ , false),
                isRegex: this._storageService.getBoolean('editor.isRegex', 1 /* WORKSPACE */ , false),
                preserveCase: this._storageService.getBoolean('editor.preserveCase', 1 /* WORKSPACE */ , false)
            }, false);
            if (shouldRestartFind) this._start({
                forceRevealReplace: false,
                seedSearchStringFromSelection: 'none',
                seedSearchStringFromNonEmptySelection: false,
                seedSearchStringFromGlobalClipboard: false,
                shouldFocus: 0 /* NoFocusChange */ ,
                shouldAnimate: false,
                updateSearchScope: false,
                loop: this._editor.getOption(35 /* find */ ).loop
            });
        }));
    }
    get editor() {
        return this._editor;
    }
    static get(editor) {
        return editor.getContribution($20012b82c35145bb$export$3190f9a23ad62166.ID);
    }
    dispose() {
        this.disposeModel();
        super.dispose();
    }
    disposeModel() {
        if (this._model) {
            this._model.dispose();
            this._model = null;
        }
    }
    _onStateChanged(e) {
        this.saveQueryState(e);
        if (e.isRevealed) {
            if (this._state.isRevealed) this._findWidgetVisible.set(true);
            else {
                this._findWidgetVisible.reset();
                this.disposeModel();
            }
        }
        if (e.searchString) this.setGlobalBufferTerm(this._state.searchString);
    }
    saveQueryState(e) {
        if (e.isRegex) this._storageService.store('editor.isRegex', this._state.actualIsRegex, 1 /* WORKSPACE */ , 0 /* USER */ );
        if (e.wholeWord) this._storageService.store('editor.wholeWord', this._state.actualWholeWord, 1 /* WORKSPACE */ , 0 /* USER */ );
        if (e.matchCase) this._storageService.store('editor.matchCase', this._state.actualMatchCase, 1 /* WORKSPACE */ , 0 /* USER */ );
        if (e.preserveCase) this._storageService.store('editor.preserveCase', this._state.actualPreserveCase, 1 /* WORKSPACE */ , 0 /* USER */ );
    }
    loadQueryState() {
        this._state.change({
            matchCase: this._storageService.getBoolean('editor.matchCase', 1 /* WORKSPACE */ , this._state.matchCase),
            wholeWord: this._storageService.getBoolean('editor.wholeWord', 1 /* WORKSPACE */ , this._state.wholeWord),
            isRegex: this._storageService.getBoolean('editor.isRegex', 1 /* WORKSPACE */ , this._state.isRegex),
            preserveCase: this._storageService.getBoolean('editor.preserveCase', 1 /* WORKSPACE */ , this._state.preserveCase)
        }, false);
    }
    isFindInputFocused() {
        return !!$9bb245d49668b670$export$1bcc3ed82148a8b9.getValue(this._contextKeyService);
    }
    getState() {
        return this._state;
    }
    closeFindWidget() {
        this._state.change({
            isRevealed: false,
            searchScope: null
        }, false);
        this._editor.focus();
    }
    toggleCaseSensitive() {
        this._state.change({
            matchCase: !this._state.matchCase
        }, false);
        if (!this._state.isRevealed) this.highlightFindOptions();
    }
    toggleWholeWords() {
        this._state.change({
            wholeWord: !this._state.wholeWord
        }, false);
        if (!this._state.isRevealed) this.highlightFindOptions();
    }
    toggleRegex() {
        this._state.change({
            isRegex: !this._state.isRegex
        }, false);
        if (!this._state.isRevealed) this.highlightFindOptions();
    }
    togglePreserveCase() {
        this._state.change({
            preserveCase: !this._state.preserveCase
        }, false);
        if (!this._state.isRevealed) this.highlightFindOptions();
    }
    toggleSearchScope() {
        if (this._state.searchScope) this._state.change({
            searchScope: null
        }, true);
        else if (this._editor.hasModel()) {
            let selections = this._editor.getSelections();
            selections.map((selection)=>{
                if (selection.endColumn === 1 && selection.endLineNumber > selection.startLineNumber) selection = selection.setEndPosition(selection.endLineNumber - 1, this._editor.getModel().getLineMaxColumn(selection.endLineNumber - 1));
                if (!selection.isEmpty()) return selection;
                return null;
            }).filter((element)=>!!element
            );
            if (selections.length) this._state.change({
                searchScope: selections
            }, true);
        }
    }
    setSearchString(searchString) {
        if (this._state.isRegex) searchString = $jcr1R.escapeRegExpCharacters(searchString);
        this._state.change({
            searchString: searchString
        }, false);
    }
    highlightFindOptions(ignoreWhenVisible = false) {
    // overwritten in subclass
    }
    _start(opts, newState) {
        return $20012b82c35145bb$var$__awaiter(this, void 0, void 0, function*() {
            this.disposeModel();
            if (!this._editor.hasModel()) // cannot do anything with an editor that doesn't have a model...
            return;
            let stateChanges = Object.assign(Object.assign({}, newState), {
                isRevealed: true
            });
            if (opts.seedSearchStringFromSelection === 'single') {
                let selectionSearchString = $20012b82c35145bb$export$422517c0cd4e3d9f(this._editor, opts.seedSearchStringFromSelection, opts.seedSearchStringFromNonEmptySelection);
                if (selectionSearchString) {
                    if (this._state.isRegex) stateChanges.searchString = $jcr1R.escapeRegExpCharacters(selectionSearchString);
                    else stateChanges.searchString = selectionSearchString;
                }
            } else if (opts.seedSearchStringFromSelection === 'multiple' && !opts.updateSearchScope) {
                let selectionSearchString = $20012b82c35145bb$export$422517c0cd4e3d9f(this._editor, opts.seedSearchStringFromSelection);
                if (selectionSearchString) stateChanges.searchString = selectionSearchString;
            }
            if (!stateChanges.searchString && opts.seedSearchStringFromGlobalClipboard) {
                let selectionSearchString = yield this.getGlobalBufferTerm();
                if (!this._editor.hasModel()) // the editor has lost its model in the meantime
                return;
                if (selectionSearchString) stateChanges.searchString = selectionSearchString;
            }
            // Overwrite isReplaceRevealed
            if (opts.forceRevealReplace || stateChanges.isReplaceRevealed) stateChanges.isReplaceRevealed = true;
            else if (!this._findWidgetVisible.get()) stateChanges.isReplaceRevealed = false;
            if (opts.updateSearchScope) {
                let currentSelections = this._editor.getSelections();
                if (currentSelections.some((selection)=>!selection.isEmpty()
                )) stateChanges.searchScope = currentSelections;
            }
            stateChanges.loop = opts.loop;
            this._state.change(stateChanges, false);
            if (!this._model) this._model = new $9bb245d49668b670$export$2aaa4f42000d804d(this._editor, this._state);
        });
    }
    start(opts, newState) {
        return this._start(opts, newState);
    }
    moveToNextMatch() {
        if (this._model) {
            this._model.moveToNextMatch();
            return true;
        }
        return false;
    }
    moveToPrevMatch() {
        if (this._model) {
            this._model.moveToPrevMatch();
            return true;
        }
        return false;
    }
    replace() {
        if (this._model) {
            this._model.replace();
            return true;
        }
        return false;
    }
    replaceAll() {
        if (this._model) {
            this._model.replaceAll();
            return true;
        }
        return false;
    }
    selectAllMatches() {
        if (this._model) {
            this._model.selectAllMatches();
            this._editor.focus();
            return true;
        }
        return false;
    }
    getGlobalBufferTerm() {
        return $20012b82c35145bb$var$__awaiter(this, void 0, void 0, function*() {
            if (this._editor.getOption(35 /* find */ ).globalFindClipboard && this._editor.hasModel() && !this._editor.getModel().isTooLargeForSyncing()) return this._clipboardService.readFindText();
            return '';
        });
    }
    setGlobalBufferTerm(text) {
        if (this._editor.getOption(35 /* find */ ).globalFindClipboard && this._editor.hasModel() && !this._editor.getModel().isTooLargeForSyncing()) // intentionally not awaited
        this._clipboardService.writeFindText(text);
    }
};
$20012b82c35145bb$export$3190f9a23ad62166.ID = 'editor.contrib.findController';
$20012b82c35145bb$export$3190f9a23ad62166 = $20012b82c35145bb$var$__decorate([
    $20012b82c35145bb$var$__param(1, $cxCeF.IContextKeyService),
    $20012b82c35145bb$var$__param(2, $2AUoS.IStorageService),
    $20012b82c35145bb$var$__param(3, $8QSW4.IClipboardService)
], $20012b82c35145bb$export$3190f9a23ad62166);
let $20012b82c35145bb$export$dbc27728234951c5 = class $20012b82c35145bb$export$dbc27728234951c5 extends $20012b82c35145bb$export$3190f9a23ad62166 {
    constructor(editor, _contextViewService, _contextKeyService, _keybindingService, _themeService, _notificationService, _storageService, clipboardService){
        super(editor, _contextKeyService, _storageService, clipboardService);
        this._contextViewService = _contextViewService;
        this._keybindingService = _keybindingService;
        this._themeService = _themeService;
        this._notificationService = _notificationService;
        this._widget = null;
        this._findOptionsWidget = null;
    }
    _start(opts, newState) {
        const _super = Object.create(null, {
            _start: {
                get: ()=>super._start
            }
        });
        return $20012b82c35145bb$var$__awaiter(this, void 0, void 0, function*() {
            if (!this._widget) this._createFindWidget();
            const selection = this._editor.getSelection();
            let updateSearchScope = false;
            switch(this._editor.getOption(35 /* find */ ).autoFindInSelection){
                case 'always':
                    updateSearchScope = true;
                    break;
                case 'never':
                    updateSearchScope = false;
                    break;
                case 'multiline':
                    const isSelectionMultipleLine = !!selection && selection.startLineNumber !== selection.endLineNumber;
                    updateSearchScope = isSelectionMultipleLine;
                    break;
                default:
                    break;
            }
            opts.updateSearchScope = opts.updateSearchScope || updateSearchScope;
            yield _super._start.call(this, opts, newState);
            if (this._widget) {
                if (opts.shouldFocus === 2 /* FocusReplaceInput */ ) this._widget.focusReplaceInput();
                else if (opts.shouldFocus === 1 /* FocusFindInput */ ) this._widget.focusFindInput();
            }
        });
    }
    highlightFindOptions(ignoreWhenVisible = false) {
        if (!this._widget) this._createFindWidget();
        if (this._state.isRevealed && !ignoreWhenVisible) this._widget.highlightFindOptions();
        else this._findOptionsWidget.highlightFindOptions();
    }
    _createFindWidget() {
        this._widget = this._register(new $de6146753f310471$exports.FindWidget(this._editor, this, this._state, this._contextViewService, this._keybindingService, this._contextKeyService, this._themeService, this._storageService, this._notificationService));
        this._findOptionsWidget = this._register(new $c3141e87727595ac$export$2ff720b27319038e(this._editor, this._state, this._keybindingService, this._themeService));
    }
};
$20012b82c35145bb$export$dbc27728234951c5 = $20012b82c35145bb$var$__decorate([
    $20012b82c35145bb$var$__param(1, $d6K7e.IContextViewService),
    $20012b82c35145bb$var$__param(2, $cxCeF.IContextKeyService),
    $20012b82c35145bb$var$__param(3, $7IxGd.IKeybindingService),
    $20012b82c35145bb$var$__param(4, $azIPz.IThemeService),
    $20012b82c35145bb$var$__param(5, $kCOKl.INotificationService),
    $20012b82c35145bb$var$__param(6, $2AUoS.IStorageService),
    $20012b82c35145bb$var$__param(7, $8QSW4.IClipboardService)
], $20012b82c35145bb$export$dbc27728234951c5);
const $20012b82c35145bb$export$ad7d9d55cc8c7ec4 = $2iJTi.registerMultiEditorAction(new $2iJTi.MultiEditorAction({
    id: $9bb245d49668b670$export$a4fc1be778636938.StartFindAction,
    label: $4dEdH.localize('startFindAction', "Find"),
    alias: 'Find',
    precondition: $cxCeF.ContextKeyExpr.or($ibKGQ.EditorContextKeys.focus, $cxCeF.ContextKeyExpr.has('editorIsOpen')),
    kbOpts: {
        kbExpr: null,
        primary: 2084 /* KeyF */ ,
        weight: 100 /* EditorContrib */ 
    },
    menuOpts: {
        menuId: $g4v7E.MenuId.MenubarEditMenu,
        group: '3_find',
        title: $4dEdH.localize({
            key: 'miFind',
            comment: [
                '&& denotes a mnemonic'
            ]
        }, "&&Find"),
        order: 1
    }
}));
$20012b82c35145bb$export$ad7d9d55cc8c7ec4.addImplementation(0, (accessor, editor, args)=>{
    const controller = $20012b82c35145bb$export$3190f9a23ad62166.get(editor);
    if (!controller) return false;
    return controller.start({
        forceRevealReplace: false,
        seedSearchStringFromSelection: editor.getOption(35 /* find */ ).seedSearchStringFromSelection !== 'never' ? 'single' : 'none',
        seedSearchStringFromNonEmptySelection: editor.getOption(35 /* find */ ).seedSearchStringFromSelection === 'selection',
        seedSearchStringFromGlobalClipboard: editor.getOption(35 /* find */ ).globalFindClipboard,
        shouldFocus: 1 /* FocusFindInput */ ,
        shouldAnimate: true,
        updateSearchScope: false,
        loop: editor.getOption(35 /* find */ ).loop
    });
});
const $20012b82c35145bb$var$findArgDescription = {
    description: 'Open a new In-Editor Find Widget.',
    args: [
        {
            name: 'Open a new In-Editor Find Widget args',
            schema: {
                properties: {
                    searchString: {
                        type: 'string'
                    },
                    replaceString: {
                        type: 'string'
                    },
                    regex: {
                        type: 'boolean'
                    },
                    regexOverride: {
                        type: 'number',
                        description: $4dEdH.localize('actions.find.isRegexOverride', 'Overrides "Use Regular Expression" flag.\nThe flag will not be saved for the future.\n0: Do Nothing\n1: True\n2: False')
                    },
                    wholeWord: {
                        type: 'boolean'
                    },
                    wholeWordOverride: {
                        type: 'number',
                        description: $4dEdH.localize('actions.find.wholeWordOverride', 'Overrides "Match Whole Word" flag.\nThe flag will not be saved for the future.\n0: Do Nothing\n1: True\n2: False')
                    },
                    matchCase: {
                        type: 'boolean'
                    },
                    matchCaseOverride: {
                        type: 'number',
                        description: $4dEdH.localize('actions.find.matchCaseOverride', 'Overrides "Math Case" flag.\nThe flag will not be saved for the future.\n0: Do Nothing\n1: True\n2: False')
                    },
                    preserveCase: {
                        type: 'boolean'
                    },
                    preserveCaseOverride: {
                        type: 'number',
                        description: $4dEdH.localize('actions.find.preserveCaseOverride', 'Overrides "Preserve Case" flag.\nThe flag will not be saved for the future.\n0: Do Nothing\n1: True\n2: False')
                    },
                    findInSelection: {
                        type: 'boolean'
                    }
                }
            }
        }
    ]
};
class $20012b82c35145bb$export$50897d92f96d7044 extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: $9bb245d49668b670$export$a4fc1be778636938.StartFindWithArgs,
            label: $4dEdH.localize('startFindWithArgsAction', "Find With Arguments"),
            alias: 'Find With Arguments',
            precondition: undefined,
            kbOpts: {
                kbExpr: null,
                primary: 0,
                weight: 100 /* EditorContrib */ 
            },
            description: $20012b82c35145bb$var$findArgDescription
        });
    }
    run(accessor, editor, args) {
        return $20012b82c35145bb$var$__awaiter(this, void 0, void 0, function*() {
            let controller = $20012b82c35145bb$export$3190f9a23ad62166.get(editor);
            if (controller) {
                const newState = args ? {
                    searchString: args.searchString,
                    replaceString: args.replaceString,
                    isReplaceRevealed: args.replaceString !== undefined,
                    isRegex: args.isRegex,
                    // isRegexOverride: args.regexOverride,
                    wholeWord: args.matchWholeWord,
                    // wholeWordOverride: args.wholeWordOverride,
                    matchCase: args.isCaseSensitive,
                    // matchCaseOverride: args.matchCaseOverride,
                    preserveCase: args.preserveCase
                } : {};
                yield controller.start({
                    forceRevealReplace: false,
                    seedSearchStringFromSelection: controller.getState().searchString.length === 0 && editor.getOption(35 /* find */ ).seedSearchStringFromSelection !== 'never' ? 'single' : 'none',
                    seedSearchStringFromNonEmptySelection: editor.getOption(35 /* find */ ).seedSearchStringFromSelection === 'selection',
                    seedSearchStringFromGlobalClipboard: true,
                    shouldFocus: 1 /* FocusFindInput */ ,
                    shouldAnimate: true,
                    updateSearchScope: (args === null || args === void 0 ? void 0 : args.findInSelection) || false,
                    loop: editor.getOption(35 /* find */ ).loop
                }, newState);
                controller.setGlobalBufferTerm(controller.getState().searchString);
            }
        });
    }
}
class $20012b82c35145bb$export$10b87301fa70db4b extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: $9bb245d49668b670$export$a4fc1be778636938.StartFindWithSelection,
            label: $4dEdH.localize('startFindWithSelectionAction', "Find With Selection"),
            alias: 'Find With Selection',
            precondition: undefined,
            kbOpts: {
                kbExpr: null,
                primary: 0,
                mac: {
                    primary: 2083 /* KeyE */ 
                },
                weight: 100 /* EditorContrib */ 
            }
        });
    }
    run(accessor, editor) {
        return $20012b82c35145bb$var$__awaiter(this, void 0, void 0, function*() {
            let controller = $20012b82c35145bb$export$3190f9a23ad62166.get(editor);
            if (controller) {
                yield controller.start({
                    forceRevealReplace: false,
                    seedSearchStringFromSelection: 'multiple',
                    seedSearchStringFromNonEmptySelection: false,
                    seedSearchStringFromGlobalClipboard: false,
                    shouldFocus: 0 /* NoFocusChange */ ,
                    shouldAnimate: true,
                    updateSearchScope: false,
                    loop: editor.getOption(35 /* find */ ).loop
                });
                controller.setGlobalBufferTerm(controller.getState().searchString);
            }
        });
    }
}
class $20012b82c35145bb$export$c8e1d3a731dd2486 extends $2iJTi.EditorAction {
    run(accessor, editor) {
        return $20012b82c35145bb$var$__awaiter(this, void 0, void 0, function*() {
            let controller = $20012b82c35145bb$export$3190f9a23ad62166.get(editor);
            if (controller && !this._run(controller)) {
                yield controller.start({
                    forceRevealReplace: false,
                    seedSearchStringFromSelection: controller.getState().searchString.length === 0 && editor.getOption(35 /* find */ ).seedSearchStringFromSelection !== 'never' ? 'single' : 'none',
                    seedSearchStringFromNonEmptySelection: editor.getOption(35 /* find */ ).seedSearchStringFromSelection === 'selection',
                    seedSearchStringFromGlobalClipboard: true,
                    shouldFocus: 0 /* NoFocusChange */ ,
                    shouldAnimate: true,
                    updateSearchScope: false,
                    loop: editor.getOption(35 /* find */ ).loop
                });
                this._run(controller);
            }
        });
    }
}
class $20012b82c35145bb$export$bb259a3f5c713849 extends $20012b82c35145bb$export$c8e1d3a731dd2486 {
    constructor(){
        super({
            id: $9bb245d49668b670$export$a4fc1be778636938.NextMatchFindAction,
            label: $4dEdH.localize('findNextMatchAction', "Find Next"),
            alias: 'Find Next',
            precondition: undefined,
            kbOpts: [
                {
                    kbExpr: $ibKGQ.EditorContextKeys.focus,
                    primary: 61 /* F3 */ ,
                    mac: {
                        primary: 2085 /* KeyG */ ,
                        secondary: [
                            61 /* F3 */ 
                        ]
                    },
                    weight: 100 /* EditorContrib */ 
                },
                {
                    kbExpr: $cxCeF.ContextKeyExpr.and($ibKGQ.EditorContextKeys.focus, $9bb245d49668b670$export$1bcc3ed82148a8b9),
                    primary: 3 /* Enter */ ,
                    weight: 100 /* EditorContrib */ 
                }
            ]
        });
    }
    _run(controller) {
        const result = controller.moveToNextMatch();
        if (result) {
            controller.editor.pushUndoStop();
            return true;
        }
        return false;
    }
}
class $20012b82c35145bb$export$8a68aa4082c051b6 extends $20012b82c35145bb$export$c8e1d3a731dd2486 {
    constructor(){
        super({
            id: $9bb245d49668b670$export$a4fc1be778636938.PreviousMatchFindAction,
            label: $4dEdH.localize('findPreviousMatchAction', "Find Previous"),
            alias: 'Find Previous',
            precondition: undefined,
            kbOpts: [
                {
                    kbExpr: $ibKGQ.EditorContextKeys.focus,
                    primary: 1085 /* F3 */ ,
                    mac: {
                        primary: 3109 /* KeyG */ ,
                        secondary: [
                            1085 /* F3 */ 
                        ]
                    },
                    weight: 100 /* EditorContrib */ 
                },
                {
                    kbExpr: $cxCeF.ContextKeyExpr.and($ibKGQ.EditorContextKeys.focus, $9bb245d49668b670$export$1bcc3ed82148a8b9),
                    primary: 1027 /* Enter */ ,
                    weight: 100 /* EditorContrib */ 
                }
            ]
        });
    }
    _run(controller) {
        return controller.moveToPrevMatch();
    }
}
class $20012b82c35145bb$export$f33491a7c7af78c3 extends $2iJTi.EditorAction {
    run(accessor, editor) {
        return $20012b82c35145bb$var$__awaiter(this, void 0, void 0, function*() {
            let controller = $20012b82c35145bb$export$3190f9a23ad62166.get(editor);
            if (!controller) return;
            const seedSearchStringFromNonEmptySelection = editor.getOption(35 /* find */ ).seedSearchStringFromSelection === 'selection';
            let selectionSearchString = null;
            if (editor.getOption(35 /* find */ ).seedSearchStringFromSelection !== 'never') selectionSearchString = $20012b82c35145bb$export$422517c0cd4e3d9f(editor, 'single', seedSearchStringFromNonEmptySelection);
            if (selectionSearchString) controller.setSearchString(selectionSearchString);
            if (!this._run(controller)) {
                yield controller.start({
                    forceRevealReplace: false,
                    seedSearchStringFromSelection: editor.getOption(35 /* find */ ).seedSearchStringFromSelection !== 'never' ? 'single' : 'none',
                    seedSearchStringFromNonEmptySelection: seedSearchStringFromNonEmptySelection,
                    seedSearchStringFromGlobalClipboard: false,
                    shouldFocus: 0 /* NoFocusChange */ ,
                    shouldAnimate: true,
                    updateSearchScope: false,
                    loop: editor.getOption(35 /* find */ ).loop
                });
                this._run(controller);
            }
        });
    }
}
class $20012b82c35145bb$export$8d1cf515c2a7b450 extends $20012b82c35145bb$export$f33491a7c7af78c3 {
    constructor(){
        super({
            id: $9bb245d49668b670$export$a4fc1be778636938.NextSelectionMatchFindAction,
            label: $4dEdH.localize('nextSelectionMatchFindAction', "Find Next Selection"),
            alias: 'Find Next Selection',
            precondition: undefined,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.focus,
                primary: 2109 /* F3 */ ,
                weight: 100 /* EditorContrib */ 
            }
        });
    }
    _run(controller) {
        return controller.moveToNextMatch();
    }
}
class $20012b82c35145bb$export$d9df193ecc80bb53 extends $20012b82c35145bb$export$f33491a7c7af78c3 {
    constructor(){
        super({
            id: $9bb245d49668b670$export$a4fc1be778636938.PreviousSelectionMatchFindAction,
            label: $4dEdH.localize('previousSelectionMatchFindAction', "Find Previous Selection"),
            alias: 'Find Previous Selection',
            precondition: undefined,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.focus,
                primary: 3133 /* F3 */ ,
                weight: 100 /* EditorContrib */ 
            }
        });
    }
    _run(controller) {
        return controller.moveToPrevMatch();
    }
}
const $20012b82c35145bb$export$134326ec389b328d = $2iJTi.registerMultiEditorAction(new $2iJTi.MultiEditorAction({
    id: $9bb245d49668b670$export$a4fc1be778636938.StartFindReplaceAction,
    label: $4dEdH.localize('startReplace', "Replace"),
    alias: 'Replace',
    precondition: $cxCeF.ContextKeyExpr.or($ibKGQ.EditorContextKeys.focus, $cxCeF.ContextKeyExpr.has('editorIsOpen')),
    kbOpts: {
        kbExpr: null,
        primary: 2086 /* KeyH */ ,
        mac: {
            primary: 2596 /* KeyF */ 
        },
        weight: 100 /* EditorContrib */ 
    },
    menuOpts: {
        menuId: $g4v7E.MenuId.MenubarEditMenu,
        group: '3_find',
        title: $4dEdH.localize({
            key: 'miReplace',
            comment: [
                '&& denotes a mnemonic'
            ]
        }, "&&Replace"),
        order: 2
    }
}));
$20012b82c35145bb$export$134326ec389b328d.addImplementation(0, (accessor, editor, args)=>{
    if (!editor.hasModel() || editor.getOption(80 /* readOnly */ )) return false;
    const controller = $20012b82c35145bb$export$3190f9a23ad62166.get(editor);
    if (!controller) return false;
    const currentSelection = editor.getSelection();
    const findInputFocused = controller.isFindInputFocused();
    // we only seed search string from selection when the current selection is single line and not empty,
    // + the find input is not focused
    const seedSearchStringFromSelection = !currentSelection.isEmpty() && currentSelection.startLineNumber === currentSelection.endLineNumber && editor.getOption(35 /* find */ ).seedSearchStringFromSelection !== 'never' && !findInputFocused;
    /*
    * if the existing search string in find widget is empty and we don't seed search string from selection, it means the Find Input is still empty, so we should focus the Find Input instead of Replace Input.

    * findInputFocused true -> seedSearchStringFromSelection false, FocusReplaceInput
    * findInputFocused false, seedSearchStringFromSelection true FocusReplaceInput
    * findInputFocused false seedSearchStringFromSelection false FocusFindInput
    */ const shouldFocus = findInputFocused || seedSearchStringFromSelection ? 2 /* FocusReplaceInput */  : 1 /* FocusFindInput */ ;
    return controller.start({
        forceRevealReplace: true,
        seedSearchStringFromSelection: seedSearchStringFromSelection ? 'single' : 'none',
        seedSearchStringFromNonEmptySelection: editor.getOption(35 /* find */ ).seedSearchStringFromSelection === 'selection',
        seedSearchStringFromGlobalClipboard: editor.getOption(35 /* find */ ).seedSearchStringFromSelection !== 'never',
        shouldFocus: shouldFocus,
        shouldAnimate: true,
        updateSearchScope: false,
        loop: editor.getOption(35 /* find */ ).loop
    });
});
$2iJTi.registerEditorContribution($20012b82c35145bb$export$3190f9a23ad62166.ID, $20012b82c35145bb$export$dbc27728234951c5);
$2iJTi.registerEditorAction($20012b82c35145bb$export$50897d92f96d7044);
$2iJTi.registerEditorAction($20012b82c35145bb$export$10b87301fa70db4b);
$2iJTi.registerEditorAction($20012b82c35145bb$export$bb259a3f5c713849);
$2iJTi.registerEditorAction($20012b82c35145bb$export$8a68aa4082c051b6);
$2iJTi.registerEditorAction($20012b82c35145bb$export$8d1cf515c2a7b450);
$2iJTi.registerEditorAction($20012b82c35145bb$export$d9df193ecc80bb53);
const $20012b82c35145bb$var$FindCommand = $2iJTi.EditorCommand.bindToContribution($20012b82c35145bb$export$3190f9a23ad62166.get);
$2iJTi.registerEditorCommand(new $20012b82c35145bb$var$FindCommand({
    id: $9bb245d49668b670$export$a4fc1be778636938.CloseFindWidgetCommand,
    precondition: $9bb245d49668b670$export$bc27e4192c4ca2b8,
    handler: (x)=>x.closeFindWidget()
    ,
    kbOpts: {
        weight: 105,
        kbExpr: $cxCeF.ContextKeyExpr.and($ibKGQ.EditorContextKeys.focus, $cxCeF.ContextKeyExpr.not('isComposing')),
        primary: 9 /* Escape */ ,
        secondary: [
            1033 /* Escape */ 
        ]
    }
}));
$2iJTi.registerEditorCommand(new $20012b82c35145bb$var$FindCommand({
    id: $9bb245d49668b670$export$a4fc1be778636938.ToggleCaseSensitiveCommand,
    precondition: undefined,
    handler: (x)=>x.toggleCaseSensitive()
    ,
    kbOpts: {
        weight: 105,
        kbExpr: $ibKGQ.EditorContextKeys.focus,
        primary: $9bb245d49668b670$export$2fe068521df792d6.primary,
        mac: $9bb245d49668b670$export$2fe068521df792d6.mac,
        win: $9bb245d49668b670$export$2fe068521df792d6.win,
        linux: $9bb245d49668b670$export$2fe068521df792d6.linux
    }
}));
$2iJTi.registerEditorCommand(new $20012b82c35145bb$var$FindCommand({
    id: $9bb245d49668b670$export$a4fc1be778636938.ToggleWholeWordCommand,
    precondition: undefined,
    handler: (x)=>x.toggleWholeWords()
    ,
    kbOpts: {
        weight: 105,
        kbExpr: $ibKGQ.EditorContextKeys.focus,
        primary: $9bb245d49668b670$export$cc2b8eb9ab15ca30.primary,
        mac: $9bb245d49668b670$export$cc2b8eb9ab15ca30.mac,
        win: $9bb245d49668b670$export$cc2b8eb9ab15ca30.win,
        linux: $9bb245d49668b670$export$cc2b8eb9ab15ca30.linux
    }
}));
$2iJTi.registerEditorCommand(new $20012b82c35145bb$var$FindCommand({
    id: $9bb245d49668b670$export$a4fc1be778636938.ToggleRegexCommand,
    precondition: undefined,
    handler: (x)=>x.toggleRegex()
    ,
    kbOpts: {
        weight: 105,
        kbExpr: $ibKGQ.EditorContextKeys.focus,
        primary: $9bb245d49668b670$export$7c479f7cdbb6d55e.primary,
        mac: $9bb245d49668b670$export$7c479f7cdbb6d55e.mac,
        win: $9bb245d49668b670$export$7c479f7cdbb6d55e.win,
        linux: $9bb245d49668b670$export$7c479f7cdbb6d55e.linux
    }
}));
$2iJTi.registerEditorCommand(new $20012b82c35145bb$var$FindCommand({
    id: $9bb245d49668b670$export$a4fc1be778636938.ToggleSearchScopeCommand,
    precondition: undefined,
    handler: (x)=>x.toggleSearchScope()
    ,
    kbOpts: {
        weight: 105,
        kbExpr: $ibKGQ.EditorContextKeys.focus,
        primary: $9bb245d49668b670$export$a02b1f674b6f16d3.primary,
        mac: $9bb245d49668b670$export$a02b1f674b6f16d3.mac,
        win: $9bb245d49668b670$export$a02b1f674b6f16d3.win,
        linux: $9bb245d49668b670$export$a02b1f674b6f16d3.linux
    }
}));
$2iJTi.registerEditorCommand(new $20012b82c35145bb$var$FindCommand({
    id: $9bb245d49668b670$export$a4fc1be778636938.TogglePreserveCaseCommand,
    precondition: undefined,
    handler: (x)=>x.togglePreserveCase()
    ,
    kbOpts: {
        weight: 105,
        kbExpr: $ibKGQ.EditorContextKeys.focus,
        primary: $9bb245d49668b670$export$68ae9fdc5844d61a.primary,
        mac: $9bb245d49668b670$export$68ae9fdc5844d61a.mac,
        win: $9bb245d49668b670$export$68ae9fdc5844d61a.win,
        linux: $9bb245d49668b670$export$68ae9fdc5844d61a.linux
    }
}));
$2iJTi.registerEditorCommand(new $20012b82c35145bb$var$FindCommand({
    id: $9bb245d49668b670$export$a4fc1be778636938.ReplaceOneAction,
    precondition: $9bb245d49668b670$export$bc27e4192c4ca2b8,
    handler: (x)=>x.replace()
    ,
    kbOpts: {
        weight: 105,
        kbExpr: $ibKGQ.EditorContextKeys.focus,
        primary: 3094 /* Digit1 */ 
    }
}));
$2iJTi.registerEditorCommand(new $20012b82c35145bb$var$FindCommand({
    id: $9bb245d49668b670$export$a4fc1be778636938.ReplaceOneAction,
    precondition: $9bb245d49668b670$export$bc27e4192c4ca2b8,
    handler: (x)=>x.replace()
    ,
    kbOpts: {
        weight: 105,
        kbExpr: $cxCeF.ContextKeyExpr.and($ibKGQ.EditorContextKeys.focus, $9bb245d49668b670$export$1b9f123cc9b71d78),
        primary: 3 /* Enter */ 
    }
}));
$2iJTi.registerEditorCommand(new $20012b82c35145bb$var$FindCommand({
    id: $9bb245d49668b670$export$a4fc1be778636938.ReplaceAllAction,
    precondition: $9bb245d49668b670$export$bc27e4192c4ca2b8,
    handler: (x)=>x.replaceAll()
    ,
    kbOpts: {
        weight: 105,
        kbExpr: $ibKGQ.EditorContextKeys.focus,
        primary: 2563 /* Enter */ 
    }
}));
$2iJTi.registerEditorCommand(new $20012b82c35145bb$var$FindCommand({
    id: $9bb245d49668b670$export$a4fc1be778636938.ReplaceAllAction,
    precondition: $9bb245d49668b670$export$bc27e4192c4ca2b8,
    handler: (x)=>x.replaceAll()
    ,
    kbOpts: {
        weight: 105,
        kbExpr: $cxCeF.ContextKeyExpr.and($ibKGQ.EditorContextKeys.focus, $9bb245d49668b670$export$1b9f123cc9b71d78),
        primary: undefined,
        mac: {
            primary: 2051 /* Enter */ 
        }
    }
}));
$2iJTi.registerEditorCommand(new $20012b82c35145bb$var$FindCommand({
    id: $9bb245d49668b670$export$a4fc1be778636938.SelectAllMatchesAction,
    precondition: $9bb245d49668b670$export$bc27e4192c4ca2b8,
    handler: (x)=>x.selectAllMatches()
    ,
    kbOpts: {
        weight: 105,
        kbExpr: $ibKGQ.EditorContextKeys.focus,
        primary: 515 /* Enter */ 
    }
}));


var $eed6cbac84f7e475$exports = {};

var $6bXyA = parcelRequire("6bXyA");

var $gPkHZ = parcelRequire("gPkHZ");

var $fuc8X = parcelRequire("fuc8X");

var $9cWcn = parcelRequire("9cWcn");

var $jcr1R = parcelRequire("jcr1R");

var $bxBg7 = parcelRequire("bxBg7");


var $r7siU = parcelRequire("r7siU");

var $2iJTi = parcelRequire("2iJTi");

var $ibKGQ = parcelRequire("ibKGQ");

var $4PmRQ = parcelRequire("4PmRQ");

var $aKdIg = parcelRequire("aKdIg");

var $5YaSO = parcelRequire("5YaSO");
const $6d223f3679ea12e0$export$4dac98cf97cec411 = 65535;
const $6d223f3679ea12e0$export$ccaa8b63109dc601 = 16777215;
const $6d223f3679ea12e0$var$MASK_INDENT = 4278190080;
class $6d223f3679ea12e0$export$79a27591b52924cb {
    constructor(startIndexes, endIndexes, types){
        if (startIndexes.length !== endIndexes.length || startIndexes.length > $6d223f3679ea12e0$export$4dac98cf97cec411) throw new Error('invalid startIndexes or endIndexes size');
        this._startIndexes = startIndexes;
        this._endIndexes = endIndexes;
        this._collapseStates = new Uint32Array(Math.ceil(startIndexes.length / 32));
        this._types = types;
        this._parentsComputed = false;
    }
    ensureParentIndices() {
        if (!this._parentsComputed) {
            this._parentsComputed = true;
            let parentIndexes = [];
            let isInsideLast = (startLineNumber, endLineNumber)=>{
                let index = parentIndexes[parentIndexes.length - 1];
                return this.getStartLineNumber(index) <= startLineNumber && this.getEndLineNumber(index) >= endLineNumber;
            };
            for(let i = 0, len = this._startIndexes.length; i < len; i++){
                let startLineNumber = this._startIndexes[i];
                let endLineNumber = this._endIndexes[i];
                if (startLineNumber > $6d223f3679ea12e0$export$ccaa8b63109dc601 || endLineNumber > $6d223f3679ea12e0$export$ccaa8b63109dc601) throw new Error('startLineNumber or endLineNumber must not exceed ' + $6d223f3679ea12e0$export$ccaa8b63109dc601);
                while(parentIndexes.length > 0 && !isInsideLast(startLineNumber, endLineNumber))parentIndexes.pop();
                let parentIndex = parentIndexes.length > 0 ? parentIndexes[parentIndexes.length - 1] : -1;
                parentIndexes.push(i);
                this._startIndexes[i] = startLineNumber + ((parentIndex & 255) << 24);
                this._endIndexes[i] = endLineNumber + ((parentIndex & 65280) << 16);
            }
        }
    }
    get length() {
        return this._startIndexes.length;
    }
    getStartLineNumber(index) {
        return this._startIndexes[index] & $6d223f3679ea12e0$export$ccaa8b63109dc601;
    }
    getEndLineNumber(index) {
        return this._endIndexes[index] & $6d223f3679ea12e0$export$ccaa8b63109dc601;
    }
    getType(index) {
        return this._types ? this._types[index] : undefined;
    }
    hasTypes() {
        return !!this._types;
    }
    isCollapsed(index) {
        let arrayIndex = index / 32 | 0;
        let bit = index % 32;
        return (this._collapseStates[arrayIndex] & 1 << bit) !== 0;
    }
    setCollapsed(index, newState) {
        let arrayIndex = index / 32 | 0;
        let bit = index % 32;
        let value = this._collapseStates[arrayIndex];
        if (newState) this._collapseStates[arrayIndex] = value | 1 << bit;
        else this._collapseStates[arrayIndex] = value & ~(1 << bit);
    }
    setCollapsedAllOfType(type, newState) {
        let hasChanged = false;
        if (this._types) {
            for(let i = 0; i < this._types.length; i++)if (this._types[i] === type) {
                this.setCollapsed(i, newState);
                hasChanged = true;
            }
        }
        return hasChanged;
    }
    toRegion(index) {
        return new $6d223f3679ea12e0$export$6b90bd4afbaa93a9(this, index);
    }
    getParentIndex(index) {
        this.ensureParentIndices();
        let parent = ((this._startIndexes[index] & $6d223f3679ea12e0$var$MASK_INDENT) >>> 24) + ((this._endIndexes[index] & $6d223f3679ea12e0$var$MASK_INDENT) >>> 16);
        if (parent === $6d223f3679ea12e0$export$4dac98cf97cec411) return -1;
        return parent;
    }
    contains(index, line) {
        return this.getStartLineNumber(index) <= line && this.getEndLineNumber(index) >= line;
    }
    findIndex(line) {
        let low = 0, high = this._startIndexes.length;
        if (high === 0) return -1; // no children
        while(low < high){
            let mid = Math.floor((low + high) / 2);
            if (line < this.getStartLineNumber(mid)) high = mid;
            else low = mid + 1;
        }
        return low - 1;
    }
    findRange(line) {
        let index = this.findIndex(line);
        if (index >= 0) {
            let endLineNumber = this.getEndLineNumber(index);
            if (endLineNumber >= line) return index;
            index = this.getParentIndex(index);
            while(index !== -1){
                if (this.contains(index, line)) return index;
                index = this.getParentIndex(index);
            }
        }
        return -1;
    }
    toString() {
        let res = [];
        for(let i = 0; i < this.length; i++)res[i] = `[${this.isCollapsed(i) ? '+' : '-'}] ${this.getStartLineNumber(i)}/${this.getEndLineNumber(i)}`;
        return res.join(', ');
    }
}
class $6d223f3679ea12e0$export$6b90bd4afbaa93a9 {
    constructor(ranges, index){
        this.ranges = ranges;
        this.index = index;
    }
    get startLineNumber() {
        return this.ranges.getStartLineNumber(this.index);
    }
    get endLineNumber() {
        return this.ranges.getEndLineNumber(this.index);
    }
    get regionIndex() {
        return this.index;
    }
    get parentIndex() {
        return this.ranges.getParentIndex(this.index);
    }
    get isCollapsed() {
        return this.ranges.isCollapsed(this.index);
    }
    containedBy(range) {
        return range.startLineNumber <= this.startLineNumber && range.endLineNumber >= this.endLineNumber;
    }
    containsLine(lineNumber) {
        return this.startLineNumber <= lineNumber && lineNumber <= this.endLineNumber;
    }
}


class $a8d07776c5f8ffe3$export$342aae847b5a9075 {
    constructor(textModel, decorationProvider){
        this._updateEventEmitter = new $5YaSO.Emitter();
        this.onDidChange = this._updateEventEmitter.event;
        this._textModel = textModel;
        this._decorationProvider = decorationProvider;
        this._regions = new $6d223f3679ea12e0$export$79a27591b52924cb(new Uint32Array(0), new Uint32Array(0));
        this._editorDecorationIds = [];
        this._isInitialized = false;
    }
    get regions() {
        return this._regions;
    }
    get textModel() {
        return this._textModel;
    }
    get isInitialized() {
        return this._isInitialized;
    }
    toggleCollapseState(toggledRegions) {
        if (!toggledRegions.length) return;
        toggledRegions = toggledRegions.sort((r1, r2)=>r1.regionIndex - r2.regionIndex
        );
        const processed = {};
        this._decorationProvider.changeDecorations((accessor)=>{
            let k = 0; // index from [0 ... this.regions.length]
            let dirtyRegionEndLine = -1; // end of the range where decorations need to be updated
            let lastHiddenLine = -1; // the end of the last hidden lines
            const updateDecorationsUntil = (index)=>{
                while(k < index){
                    const endLineNumber = this._regions.getEndLineNumber(k);
                    const isCollapsed = this._regions.isCollapsed(k);
                    if (endLineNumber <= dirtyRegionEndLine) accessor.changeDecorationOptions(this._editorDecorationIds[k], this._decorationProvider.getDecorationOption(isCollapsed, endLineNumber <= lastHiddenLine));
                    if (isCollapsed && endLineNumber > lastHiddenLine) lastHiddenLine = endLineNumber;
                    k++;
                }
            };
            for (let region of toggledRegions){
                let index = region.regionIndex;
                let editorDecorationId = this._editorDecorationIds[index];
                if (editorDecorationId && !processed[editorDecorationId]) {
                    processed[editorDecorationId] = true;
                    updateDecorationsUntil(index); // update all decorations up to current index using the old dirtyRegionEndLine
                    let newCollapseState = !this._regions.isCollapsed(index);
                    this._regions.setCollapsed(index, newCollapseState);
                    dirtyRegionEndLine = Math.max(dirtyRegionEndLine, this._regions.getEndLineNumber(index));
                }
            }
            updateDecorationsUntil(this._regions.length);
        });
        this._updateEventEmitter.fire({
            model: this,
            collapseStateChanged: toggledRegions
        });
    }
    update(newRegions, blockedLineNumers = []) {
        let newEditorDecorations = [];
        let isBlocked = (startLineNumber, endLineNumber)=>{
            for (let blockedLineNumber of blockedLineNumers){
                if (startLineNumber < blockedLineNumber && blockedLineNumber <= endLineNumber) return true;
            }
            return false;
        };
        let lastHiddenLine = -1;
        let initRange = (index, isCollapsed)=>{
            const startLineNumber = newRegions.getStartLineNumber(index);
            const endLineNumber = newRegions.getEndLineNumber(index);
            if (!isCollapsed) isCollapsed = newRegions.isCollapsed(index);
            if (isCollapsed && isBlocked(startLineNumber, endLineNumber)) isCollapsed = false;
            newRegions.setCollapsed(index, isCollapsed);
            const maxColumn = this._textModel.getLineMaxColumn(startLineNumber);
            const decorationRange = {
                startLineNumber: startLineNumber,
                startColumn: Math.max(maxColumn - 1, 1),
                endLineNumber: startLineNumber,
                endColumn: maxColumn
            };
            newEditorDecorations.push({
                range: decorationRange,
                options: this._decorationProvider.getDecorationOption(isCollapsed, endLineNumber <= lastHiddenLine)
            });
            if (isCollapsed && endLineNumber > lastHiddenLine) lastHiddenLine = endLineNumber;
        };
        let i = 0;
        let nextCollapsed = ()=>{
            while(i < this._regions.length){
                let isCollapsed = this._regions.isCollapsed(i);
                i++;
                if (isCollapsed) return i - 1;
            }
            return -1;
        };
        let k = 0;
        let collapsedIndex = nextCollapsed();
        while(collapsedIndex !== -1 && k < newRegions.length){
            // get the latest range
            let decRange = this._textModel.getDecorationRange(this._editorDecorationIds[collapsedIndex]);
            if (decRange) {
                let collapsedStartLineNumber = decRange.startLineNumber;
                if (decRange.startColumn === Math.max(decRange.endColumn - 1, 1) && this._textModel.getLineMaxColumn(collapsedStartLineNumber) === decRange.endColumn) while(k < newRegions.length){
                    let startLineNumber = newRegions.getStartLineNumber(k);
                    if (collapsedStartLineNumber >= startLineNumber) {
                        initRange(k, collapsedStartLineNumber === startLineNumber);
                        k++;
                    } else break;
                }
            }
            collapsedIndex = nextCollapsed();
        }
        while(k < newRegions.length){
            initRange(k, false);
            k++;
        }
        this._editorDecorationIds = this._decorationProvider.deltaDecorations(this._editorDecorationIds, newEditorDecorations);
        this._regions = newRegions;
        this._isInitialized = true;
        this._updateEventEmitter.fire({
            model: this
        });
    }
    /**
     * Collapse state memento, for persistence only
     */ getMemento() {
        let collapsedRanges = [];
        for(let i = 0; i < this._regions.length; i++)if (this._regions.isCollapsed(i)) {
            let range = this._textModel.getDecorationRange(this._editorDecorationIds[i]);
            if (range) {
                let startLineNumber = range.startLineNumber;
                let endLineNumber = range.endLineNumber + this._regions.getEndLineNumber(i) - this._regions.getStartLineNumber(i);
                collapsedRanges.push({
                    startLineNumber: startLineNumber,
                    endLineNumber: endLineNumber
                });
            }
        }
        if (collapsedRanges.length > 0) return collapsedRanges;
        return undefined;
    }
    /**
     * Apply persisted state, for persistence only
     */ applyMemento(state) {
        if (!Array.isArray(state)) return;
        let toToogle = [];
        for (let range of state){
            let region = this.getRegionAtLine(range.startLineNumber);
            if (region && !region.isCollapsed) toToogle.push(region);
        }
        this.toggleCollapseState(toToogle);
    }
    dispose() {
        this._decorationProvider.deltaDecorations(this._editorDecorationIds, []);
    }
    getAllRegionsAtLine(lineNumber, filter) {
        let result = [];
        if (this._regions) {
            let index = this._regions.findRange(lineNumber);
            let level = 1;
            while(index >= 0){
                let current = this._regions.toRegion(index);
                if (!filter || filter(current, level)) result.push(current);
                level++;
                index = current.parentIndex;
            }
        }
        return result;
    }
    getRegionAtLine(lineNumber) {
        if (this._regions) {
            let index = this._regions.findRange(lineNumber);
            if (index >= 0) return this._regions.toRegion(index);
        }
        return null;
    }
    getRegionsInside(region, filter) {
        let result = [];
        let index = region ? region.regionIndex + 1 : 0;
        let endLineNumber = region ? region.endLineNumber : Number.MAX_VALUE;
        if (filter && filter.length === 2) {
            const levelStack = [];
            for(let i = index, len = this._regions.length; i < len; i++){
                let current = this._regions.toRegion(i);
                if (this._regions.getStartLineNumber(i) < endLineNumber) {
                    while(levelStack.length > 0 && !current.containedBy(levelStack[levelStack.length - 1]))levelStack.pop();
                    levelStack.push(current);
                    if (filter(current, levelStack.length)) result.push(current);
                } else break;
            }
        } else for(let i = index, len = this._regions.length; i < len; i++){
            let current = this._regions.toRegion(i);
            if (this._regions.getStartLineNumber(i) < endLineNumber) {
                if (!filter || filter(current)) result.push(current);
            } else break;
        }
        return result;
    }
}
function $a8d07776c5f8ffe3$export$6008f8f734d0336a(foldingModel, levels, lineNumbers) {
    let toToggle = [];
    for (let lineNumber of lineNumbers){
        let region = foldingModel.getRegionAtLine(lineNumber);
        if (region) {
            const doCollapse = !region.isCollapsed;
            toToggle.push(region);
            if (levels > 1) {
                let regionsInside = foldingModel.getRegionsInside(region, (r, level)=>r.isCollapsed !== doCollapse && level < levels
                );
                toToggle.push(...regionsInside);
            }
        }
    }
    foldingModel.toggleCollapseState(toToggle);
}
function $a8d07776c5f8ffe3$export$1ef41fe66cd8530(foldingModel, doCollapse, levels = Number.MAX_VALUE, lineNumbers) {
    let toToggle = [];
    if (lineNumbers && lineNumbers.length > 0) for (let lineNumber of lineNumbers){
        let region = foldingModel.getRegionAtLine(lineNumber);
        if (region) {
            if (region.isCollapsed !== doCollapse) toToggle.push(region);
            if (levels > 1) {
                let regionsInside = foldingModel.getRegionsInside(region, (r, level)=>r.isCollapsed !== doCollapse && level < levels
                );
                toToggle.push(...regionsInside);
            }
        }
    }
    else {
        let regionsInside = foldingModel.getRegionsInside(null, (r, level)=>r.isCollapsed !== doCollapse && level < levels
        );
        toToggle.push(...regionsInside);
    }
    foldingModel.toggleCollapseState(toToggle);
}
function $a8d07776c5f8ffe3$export$50a013aaf999fe15(foldingModel, doCollapse, levels, lineNumbers) {
    let toToggle = [];
    for (let lineNumber of lineNumbers){
        let regions = foldingModel.getAllRegionsAtLine(lineNumber, (region, level)=>region.isCollapsed !== doCollapse && level <= levels
        );
        toToggle.push(...regions);
    }
    foldingModel.toggleCollapseState(toToggle);
}
function $a8d07776c5f8ffe3$export$e1cae19974cbbf8b(foldingModel, doCollapse, lineNumbers) {
    let toToggle = [];
    for (let lineNumber of lineNumbers){
        let regions = foldingModel.getAllRegionsAtLine(lineNumber, (region)=>region.isCollapsed !== doCollapse
        );
        if (regions.length > 0) toToggle.push(regions[0]);
    }
    foldingModel.toggleCollapseState(toToggle);
}
function $a8d07776c5f8ffe3$export$3f9d91c844738bc6(foldingModel, foldLevel, doCollapse, blockedLineNumbers) {
    let filter = (region, level)=>level === foldLevel && region.isCollapsed !== doCollapse && !blockedLineNumbers.some((line)=>region.containsLine(line)
        )
    ;
    let toToggle = foldingModel.getRegionsInside(null, filter);
    foldingModel.toggleCollapseState(toToggle);
}
function $a8d07776c5f8ffe3$export$13292d9dd11d6b4f(foldingModel, doCollapse, blockedLineNumbers) {
    let filteredRegions = [];
    for (let lineNumber of blockedLineNumbers)filteredRegions.push(foldingModel.getAllRegionsAtLine(lineNumber, undefined)[0]);
    let filter = (region)=>filteredRegions.every((filteredRegion)=>!filteredRegion.containedBy(region) && !region.containedBy(filteredRegion)
        ) && region.isCollapsed !== doCollapse
    ;
    let toToggle = foldingModel.getRegionsInside(null, filter);
    foldingModel.toggleCollapseState(toToggle);
}
function $a8d07776c5f8ffe3$export$acbcc757d0e877b(foldingModel, regExp, doCollapse) {
    let editorModel = foldingModel.textModel;
    let regions = foldingModel.regions;
    let toToggle = [];
    for(let i = regions.length - 1; i >= 0; i--)if (doCollapse !== regions.isCollapsed(i)) {
        let startLineNumber = regions.getStartLineNumber(i);
        if (regExp.test(editorModel.getLineContent(startLineNumber))) toToggle.push(regions.toRegion(i));
    }
    foldingModel.toggleCollapseState(toToggle);
}
function $a8d07776c5f8ffe3$export$ce3950edac996729(foldingModel, type, doCollapse) {
    let regions = foldingModel.regions;
    let toToggle = [];
    for(let i = regions.length - 1; i >= 0; i--)if (doCollapse !== regions.isCollapsed(i) && type === regions.getType(i)) toToggle.push(regions.toRegion(i));
    foldingModel.toggleCollapseState(toToggle);
}
function $a8d07776c5f8ffe3$export$19eab21a9895dbc4(lineNumber, foldingModel) {
    let startLineNumber = null;
    let foldingRegion = foldingModel.getRegionAtLine(lineNumber);
    if (foldingRegion !== null) {
        startLineNumber = foldingRegion.startLineNumber;
        // If current line is not the start of the current fold, go to top line of current fold. If not, go to parent fold
        if (lineNumber === startLineNumber) {
            let parentFoldingIdx = foldingRegion.parentIndex;
            if (parentFoldingIdx !== -1) startLineNumber = foldingModel.regions.getStartLineNumber(parentFoldingIdx);
            else startLineNumber = null;
        }
    }
    return startLineNumber;
}
function $a8d07776c5f8ffe3$export$9e804e9f47adba4e(lineNumber, foldingModel) {
    let foldingRegion = foldingModel.getRegionAtLine(lineNumber);
    // If on the folding range start line, go to previous sibling.
    if (foldingRegion !== null && foldingRegion.startLineNumber === lineNumber) {
        // If current line is not the start of the current fold, go to top line of current fold. If not, go to previous fold.
        if (lineNumber !== foldingRegion.startLineNumber) return foldingRegion.startLineNumber;
        else {
            // Find min line number to stay within parent.
            let expectedParentIndex = foldingRegion.parentIndex;
            let minLineNumber = 0;
            if (expectedParentIndex !== -1) minLineNumber = foldingModel.regions.getStartLineNumber(foldingRegion.parentIndex);
            // Find fold at same level.
            while(foldingRegion !== null){
                if (foldingRegion.regionIndex > 0) {
                    foldingRegion = foldingModel.regions.toRegion(foldingRegion.regionIndex - 1);
                    // Keep at same level.
                    if (foldingRegion.startLineNumber <= minLineNumber) return null;
                    else if (foldingRegion.parentIndex === expectedParentIndex) return foldingRegion.startLineNumber;
                } else return null;
            }
        }
    } else // Go to last fold that's before the current line.
    if (foldingModel.regions.length > 0) {
        foldingRegion = foldingModel.regions.toRegion(foldingModel.regions.length - 1);
        while(foldingRegion !== null){
            // Found fold before current line.
            if (foldingRegion.startLineNumber < lineNumber) return foldingRegion.startLineNumber;
            if (foldingRegion.regionIndex > 0) foldingRegion = foldingModel.regions.toRegion(foldingRegion.regionIndex - 1);
            else foldingRegion = null;
        }
    }
    return null;
}
function $a8d07776c5f8ffe3$export$3164a73fda220264(lineNumber, foldingModel) {
    let foldingRegion = foldingModel.getRegionAtLine(lineNumber);
    // If on the folding range start line, go to next sibling.
    if (foldingRegion !== null && foldingRegion.startLineNumber === lineNumber) {
        // Find max line number to stay within parent.
        let expectedParentIndex = foldingRegion.parentIndex;
        let maxLineNumber = 0;
        if (expectedParentIndex !== -1) maxLineNumber = foldingModel.regions.getEndLineNumber(foldingRegion.parentIndex);
        else if (foldingModel.regions.length === 0) return null;
        else maxLineNumber = foldingModel.regions.getEndLineNumber(foldingModel.regions.length - 1);
        // Find fold at same level.
        while(foldingRegion !== null){
            if (foldingRegion.regionIndex < foldingModel.regions.length) {
                foldingRegion = foldingModel.regions.toRegion(foldingRegion.regionIndex + 1);
                // Keep at same level.
                if (foldingRegion.startLineNumber >= maxLineNumber) return null;
                else if (foldingRegion.parentIndex === expectedParentIndex) return foldingRegion.startLineNumber;
            } else return null;
        }
    } else // Go to first fold that's after the current line.
    if (foldingModel.regions.length > 0) {
        foldingRegion = foldingModel.regions.toRegion(0);
        while(foldingRegion !== null){
            // Found fold after current line.
            if (foldingRegion.startLineNumber > lineNumber) return foldingRegion.startLineNumber;
            if (foldingRegion.regionIndex < foldingModel.regions.length) foldingRegion = foldingModel.regions.toRegion(foldingRegion.regionIndex + 1);
            else foldingRegion = null;
        }
    }
    return null;
}



var $kJ8UG = parcelRequire("kJ8UG");

var $5YaSO = parcelRequire("5YaSO");

var $d00il = parcelRequire("d00il");

var $5kZCN = parcelRequire("5kZCN");
class $332b66ddd66052bc$export$87e89ef1cf49f2d {
    constructor(model){
        this._updateEventEmitter = new $5YaSO.Emitter();
        this._hasLineChanges = false;
        this._foldingModel = model;
        this._foldingModelListener = model.onDidChange((_)=>this.updateHiddenRanges()
        );
        this._hiddenRanges = [];
        if (model.regions.length) this.updateHiddenRanges();
    }
    get onDidChange() {
        return this._updateEventEmitter.event;
    }
    get hiddenRanges() {
        return this._hiddenRanges;
    }
    notifyChangeModelContent(e) {
        if (this._hiddenRanges.length && !this._hasLineChanges) this._hasLineChanges = e.changes.some((change)=>{
            return change.range.endLineNumber !== change.range.startLineNumber || $5kZCN.countEOL(change.text)[0] !== 0;
        });
    }
    updateHiddenRanges() {
        let updateHiddenAreas = false;
        let newHiddenAreas = [];
        let i = 0; // index into hidden
        let k = 0;
        let lastCollapsedStart = Number.MAX_VALUE;
        let lastCollapsedEnd = -1;
        let ranges = this._foldingModel.regions;
        for(; i < ranges.length; i++){
            if (!ranges.isCollapsed(i)) continue;
            let startLineNumber = ranges.getStartLineNumber(i) + 1; // the first line is not hidden
            let endLineNumber = ranges.getEndLineNumber(i);
            if (lastCollapsedStart <= startLineNumber && endLineNumber <= lastCollapsedEnd) continue;
            if (!updateHiddenAreas && k < this._hiddenRanges.length && this._hiddenRanges[k].startLineNumber === startLineNumber && this._hiddenRanges[k].endLineNumber === endLineNumber) {
                // reuse the old ranges
                newHiddenAreas.push(this._hiddenRanges[k]);
                k++;
            } else {
                updateHiddenAreas = true;
                newHiddenAreas.push(new $d00il.Range(startLineNumber, 1, endLineNumber, 1));
            }
            lastCollapsedStart = startLineNumber;
            lastCollapsedEnd = endLineNumber;
        }
        if (this._hasLineChanges || updateHiddenAreas || k < this._hiddenRanges.length) this.applyHiddenRanges(newHiddenAreas);
    }
    applyMemento(state) {
        if (!Array.isArray(state) || state.length === 0) return false;
        let hiddenRanges = [];
        for (let r of state){
            if (!r.startLineNumber || !r.endLineNumber) return false;
            hiddenRanges.push(new $d00il.Range(r.startLineNumber + 1, 1, r.endLineNumber, 1));
        }
        this.applyHiddenRanges(hiddenRanges);
        return true;
    }
    /**
     * Collapse state memento, for persistence only, only used if folding model is not yet initialized
     */ getMemento() {
        return this._hiddenRanges.map((r)=>({
                startLineNumber: r.startLineNumber - 1,
                endLineNumber: r.endLineNumber
            })
        );
    }
    applyHiddenRanges(newHiddenAreas) {
        this._hiddenRanges = newHiddenAreas;
        this._hasLineChanges = false;
        this._updateEventEmitter.fire(newHiddenAreas);
    }
    hasRanges() {
        return this._hiddenRanges.length > 0;
    }
    isHidden(line) {
        return $332b66ddd66052bc$var$findRange(this._hiddenRanges, line) !== null;
    }
    adjustSelections(selections) {
        let hasChanges = false;
        let editorModel = this._foldingModel.textModel;
        let lastRange = null;
        let adjustLine = (line)=>{
            if (!lastRange || !$332b66ddd66052bc$var$isInside(line, lastRange)) lastRange = $332b66ddd66052bc$var$findRange(this._hiddenRanges, line);
            if (lastRange) return lastRange.startLineNumber - 1;
            return null;
        };
        for(let i = 0, len = selections.length; i < len; i++){
            let selection = selections[i];
            let adjustedStartLine = adjustLine(selection.startLineNumber);
            if (adjustedStartLine) {
                selection = selection.setStartPosition(adjustedStartLine, editorModel.getLineMaxColumn(adjustedStartLine));
                hasChanges = true;
            }
            let adjustedEndLine = adjustLine(selection.endLineNumber);
            if (adjustedEndLine) {
                selection = selection.setEndPosition(adjustedEndLine, editorModel.getLineMaxColumn(adjustedEndLine));
                hasChanges = true;
            }
            selections[i] = selection;
        }
        return hasChanges;
    }
    dispose() {
        if (this.hiddenRanges.length > 0) {
            this._hiddenRanges = [];
            this._updateEventEmitter.fire(this._hiddenRanges);
        }
        if (this._foldingModelListener) {
            this._foldingModelListener.dispose();
            this._foldingModelListener = null;
        }
    }
}
function $332b66ddd66052bc$var$isInside(line, range) {
    return line >= range.startLineNumber && line <= range.endLineNumber;
}
function $332b66ddd66052bc$var$findRange(ranges, line) {
    let i = $kJ8UG.findFirstInSorted(ranges, (r)=>line < r.startLineNumber
    ) - 1;
    if (i >= 0 && ranges[i].endLineNumber >= line) return ranges[i];
    return null;
}



var $91ntV = parcelRequire("91ntV");

var $aKdIg = parcelRequire("aKdIg");

const $fd3627e4c7080c93$var$MAX_FOLDING_REGIONS_FOR_INDENT_LIMIT = 5000;
const $fd3627e4c7080c93$export$c733f741c9154923 = 'indent';
class $fd3627e4c7080c93$export$c6761242dbde8f79 {
    constructor(editorModel){
        this.editorModel = editorModel;
        this.id = $fd3627e4c7080c93$export$c733f741c9154923;
    }
    dispose() {}
    compute(cancelationToken) {
        let foldingRules = $aKdIg.LanguageConfigurationRegistry.getFoldingRules(this.editorModel.getLanguageId());
        let offSide = foldingRules && !!foldingRules.offSide;
        let markers = foldingRules && foldingRules.markers;
        return Promise.resolve($fd3627e4c7080c93$export$a7fcbe01d14a5fd9(this.editorModel, offSide, markers));
    }
}
class $fd3627e4c7080c93$export$eb0bed8ad121fa0e {
    constructor(foldingRangesLimit){
        this._startIndexes = [];
        this._endIndexes = [];
        this._indentOccurrences = [];
        this._length = 0;
        this._foldingRangesLimit = foldingRangesLimit;
    }
    insertFirst(startLineNumber, endLineNumber, indent) {
        if (startLineNumber > $6d223f3679ea12e0$export$ccaa8b63109dc601 || endLineNumber > $6d223f3679ea12e0$export$ccaa8b63109dc601) return;
        let index = this._length;
        this._startIndexes[index] = startLineNumber;
        this._endIndexes[index] = endLineNumber;
        this._length++;
        if (indent < 1000) this._indentOccurrences[indent] = (this._indentOccurrences[indent] || 0) + 1;
    }
    toIndentRanges(model) {
        if (this._length <= this._foldingRangesLimit) {
            // reverse and create arrays of the exact length
            let startIndexes = new Uint32Array(this._length);
            let endIndexes = new Uint32Array(this._length);
            for(let i = this._length - 1, k = 0; i >= 0; i--, k++){
                startIndexes[k] = this._startIndexes[i];
                endIndexes[k] = this._endIndexes[i];
            }
            return new $6d223f3679ea12e0$export$79a27591b52924cb(startIndexes, endIndexes);
        } else {
            let entries = 0;
            let maxIndent = this._indentOccurrences.length;
            for(let i = 0; i < this._indentOccurrences.length; i++){
                let n = this._indentOccurrences[i];
                if (n) {
                    if (n + entries > this._foldingRangesLimit) {
                        maxIndent = i;
                        break;
                    }
                    entries += n;
                }
            }
            const tabSize = model.getOptions().tabSize;
            // reverse and create arrays of the exact length
            let startIndexes = new Uint32Array(this._foldingRangesLimit);
            let endIndexes = new Uint32Array(this._foldingRangesLimit);
            for(let i1 = this._length - 1, k = 0; i1 >= 0; i1--){
                let startIndex = this._startIndexes[i1];
                let lineContent = model.getLineContent(startIndex);
                let indent = $91ntV.TextModel.computeIndentLevel(lineContent, tabSize);
                if (indent < maxIndent || indent === maxIndent && (entries++) < this._foldingRangesLimit) {
                    startIndexes[k] = startIndex;
                    endIndexes[k] = this._endIndexes[i1];
                    k++;
                }
            }
            return new $6d223f3679ea12e0$export$79a27591b52924cb(startIndexes, endIndexes);
        }
    }
}
function $fd3627e4c7080c93$export$a7fcbe01d14a5fd9(model, offSide, markers, foldingRangesLimit = $fd3627e4c7080c93$var$MAX_FOLDING_REGIONS_FOR_INDENT_LIMIT) {
    const tabSize = model.getOptions().tabSize;
    let result = new $fd3627e4c7080c93$export$eb0bed8ad121fa0e(foldingRangesLimit);
    let pattern = undefined;
    if (markers) pattern = new RegExp(`(${markers.start.source})|(?:${markers.end.source})`);
    let previousRegions = [];
    let line = model.getLineCount() + 1;
    previousRegions.push({
        indent: -1,
        endAbove: line,
        line: line
    }); // sentinel, to make sure there's at least one entry
    for(let line1 = model.getLineCount(); line1 > 0; line1--){
        let lineContent = model.getLineContent(line1);
        let indent = $91ntV.TextModel.computeIndentLevel(lineContent, tabSize);
        let previous = previousRegions[previousRegions.length - 1];
        if (indent === -1) {
            if (offSide) // for offSide languages, empty lines are associated to the previous block
            // note: the next block is already written to the results, so this only
            // impacts the end position of the block before
            previous.endAbove = line1;
            continue; // only whitespace
        }
        let m;
        if (pattern && (m = lineContent.match(pattern))) {
            // folding pattern match
            if (m[1]) {
                // discard all regions until the folding pattern
                let i = previousRegions.length - 1;
                while(i > 0 && previousRegions[i].indent !== -2)i--;
                if (i > 0) {
                    previousRegions.length = i + 1;
                    previous = previousRegions[i];
                    // new folding range from pattern, includes the end line
                    result.insertFirst(line1, previous.line, indent);
                    previous.line = line1;
                    previous.indent = indent;
                    previous.endAbove = line1;
                    continue;
                }
            } else {
                previousRegions.push({
                    indent: -2,
                    endAbove: line1,
                    line: line1
                });
                continue;
            }
        }
        if (previous.indent > indent) {
            // discard all regions with larger indent
            do {
                previousRegions.pop();
                previous = previousRegions[previousRegions.length - 1];
            }while (previous.indent > indent)
            // new folding range
            let endLineNumber = previous.endAbove - 1;
            if (endLineNumber - line1 >= 1) result.insertFirst(line1, endLineNumber, indent);
        }
        if (previous.indent === indent) previous.endAbove = line1;
        else // new region with a bigger indent
        previousRegions.push({
            indent: indent,
            endAbove: line1,
            line: line1
        });
    }
    return result.toIndentRanges(model);
}



var $gPkHZ = parcelRequire("gPkHZ");

var $9cWcn = parcelRequire("9cWcn");

const $3d0bb523031e3352$var$MAX_FOLDING_REGIONS = 5000;
const $3d0bb523031e3352$var$foldingContext = {};
const $3d0bb523031e3352$export$643d29553f216197 = 'syntax';
class $3d0bb523031e3352$export$409cdd7e50053250 {
    constructor(editorModel, providers, handleFoldingRangesChange, limit = $3d0bb523031e3352$var$MAX_FOLDING_REGIONS){
        this.editorModel = editorModel;
        this.providers = providers;
        this.limit = limit;
        this.id = $3d0bb523031e3352$export$643d29553f216197;
        for (const provider of providers)if (typeof provider.onDidChange === 'function') {
            if (!this.disposables) this.disposables = new $9cWcn.DisposableStore();
            this.disposables.add(provider.onDidChange(handleFoldingRangesChange));
        }
    }
    compute(cancellationToken) {
        return $3d0bb523031e3352$var$collectSyntaxRanges(this.providers, this.editorModel, cancellationToken).then((ranges)=>{
            if (ranges) {
                let res = $3d0bb523031e3352$export$468fc32e82949676(ranges, this.limit);
                return res;
            }
            return null;
        });
    }
    dispose() {
        var _a;
        (_a = this.disposables) === null || _a === void 0 || _a.dispose();
    }
}
function $3d0bb523031e3352$var$collectSyntaxRanges(providers, model, cancellationToken) {
    let rangeData = null;
    let promises = providers.map((provider, i)=>{
        return Promise.resolve(provider.provideFoldingRanges(model, $3d0bb523031e3352$var$foldingContext, cancellationToken)).then((ranges)=>{
            if (cancellationToken.isCancellationRequested) return;
            if (Array.isArray(ranges)) {
                if (!Array.isArray(rangeData)) rangeData = [];
                let nLines = model.getLineCount();
                for (let r of ranges)if (r.start > 0 && r.end > r.start && r.end <= nLines) rangeData.push({
                    start: r.start,
                    end: r.end,
                    rank: i,
                    kind: r.kind
                });
            }
        }, $gPkHZ.onUnexpectedExternalError);
    });
    return Promise.all(promises).then((_)=>{
        return rangeData;
    });
}
class $3d0bb523031e3352$export$eb0bed8ad121fa0e {
    constructor(foldingRangesLimit){
        this._startIndexes = [];
        this._endIndexes = [];
        this._nestingLevels = [];
        this._nestingLevelCounts = [];
        this._types = [];
        this._length = 0;
        this._foldingRangesLimit = foldingRangesLimit;
    }
    add(startLineNumber, endLineNumber, type, nestingLevel) {
        if (startLineNumber > $6d223f3679ea12e0$export$ccaa8b63109dc601 || endLineNumber > $6d223f3679ea12e0$export$ccaa8b63109dc601) return;
        let index = this._length;
        this._startIndexes[index] = startLineNumber;
        this._endIndexes[index] = endLineNumber;
        this._nestingLevels[index] = nestingLevel;
        this._types[index] = type;
        this._length++;
        if (nestingLevel < 30) this._nestingLevelCounts[nestingLevel] = (this._nestingLevelCounts[nestingLevel] || 0) + 1;
    }
    toIndentRanges() {
        if (this._length <= this._foldingRangesLimit) {
            let startIndexes = new Uint32Array(this._length);
            let endIndexes = new Uint32Array(this._length);
            for(let i = 0; i < this._length; i++){
                startIndexes[i] = this._startIndexes[i];
                endIndexes[i] = this._endIndexes[i];
            }
            return new $6d223f3679ea12e0$export$79a27591b52924cb(startIndexes, endIndexes, this._types);
        } else {
            let entries = 0;
            let maxLevel = this._nestingLevelCounts.length;
            for(let i = 0; i < this._nestingLevelCounts.length; i++){
                let n = this._nestingLevelCounts[i];
                if (n) {
                    if (n + entries > this._foldingRangesLimit) {
                        maxLevel = i;
                        break;
                    }
                    entries += n;
                }
            }
            let startIndexes = new Uint32Array(this._foldingRangesLimit);
            let endIndexes = new Uint32Array(this._foldingRangesLimit);
            let types = [];
            for(let i1 = 0, k = 0; i1 < this._length; i1++){
                let level = this._nestingLevels[i1];
                if (level < maxLevel || level === maxLevel && (entries++) < this._foldingRangesLimit) {
                    startIndexes[k] = this._startIndexes[i1];
                    endIndexes[k] = this._endIndexes[i1];
                    types[k] = this._types[i1];
                    k++;
                }
            }
            return new $6d223f3679ea12e0$export$79a27591b52924cb(startIndexes, endIndexes, types);
        }
    }
}
function $3d0bb523031e3352$export$468fc32e82949676(rangeData, limit) {
    let sorted = rangeData.sort((d1, d2)=>{
        let diff = d1.start - d2.start;
        if (diff === 0) diff = d1.rank - d2.rank;
        return diff;
    });
    let collector = new $3d0bb523031e3352$export$eb0bed8ad121fa0e(limit);
    let top = undefined;
    let previous = [];
    for (let entry of sorted){
        if (!top) {
            top = entry;
            collector.add(entry.start, entry.end, entry.kind && entry.kind.value, previous.length);
        } else if (entry.start > top.start) {
            if (entry.end <= top.end) {
                previous.push(top);
                top = entry;
                collector.add(entry.start, entry.end, entry.kind && entry.kind.value, previous.length);
            } else {
                if (entry.start > top.end) {
                    do top = previous.pop();
                    while (top && entry.start > top.end)
                    if (top) previous.push(top);
                    top = entry;
                }
                collector.add(entry.start, entry.end, entry.kind && entry.kind.value, previous.length);
            }
        }
    }
    return collector.toIndentRanges();
}


const $bdc791abbb7e6e3f$export$d107d20bbf4762c = 'init';
class $bdc791abbb7e6e3f$export$3f2af55879f1f5cb {
    constructor(editorModel, initialRanges, onTimeout, timeoutTime){
        this.editorModel = editorModel;
        this.id = $bdc791abbb7e6e3f$export$d107d20bbf4762c;
        if (initialRanges.length) {
            let toDecorationRange = (range)=>{
                return {
                    range: {
                        startLineNumber: range.startLineNumber,
                        startColumn: 0,
                        endLineNumber: range.endLineNumber,
                        endColumn: editorModel.getLineLength(range.endLineNumber)
                    },
                    options: {
                        description: 'folding-initializing-range-provider',
                        stickiness: 1 /* NeverGrowsWhenTypingAtEdges */ 
                    }
                };
            };
            this.decorationIds = editorModel.deltaDecorations([], initialRanges.map(toDecorationRange));
            this.timeout = setTimeout(onTimeout, timeoutTime);
        }
    }
    dispose() {
        if (this.decorationIds) {
            this.editorModel.deltaDecorations(this.decorationIds, []);
            this.decorationIds = undefined;
        }
        if (typeof this.timeout === 'number') {
            clearTimeout(this.timeout);
            this.timeout = undefined;
        }
    }
    compute(cancelationToken) {
        let foldingRangeData = [];
        if (this.decorationIds) for (let id of this.decorationIds){
            let range = this.editorModel.getDecorationRange(id);
            if (range) foldingRangeData.push({
                start: range.startLineNumber,
                end: range.endLineNumber,
                rank: 1
            });
        }
        return Promise.resolve($3d0bb523031e3352$export$468fc32e82949676(foldingRangeData, Number.MAX_VALUE));
    }
}



var $4dEdH = parcelRequire("4dEdH");

var $cxCeF = parcelRequire("cxCeF");

var $gaWeX = parcelRequire("gaWeX");

var $azIPz = parcelRequire("azIPz");

var $awgRE = parcelRequire("awgRE");

var $91ntV = parcelRequire("91ntV");

var $4dEdH = parcelRequire("4dEdH");

var $hEsmQ = parcelRequire("hEsmQ");

var $azIPz = parcelRequire("azIPz");
const $c6dc42b26c3761b3$export$885051cbe6b7e954 = $hEsmQ.registerIcon('folding-expanded', $awgRE.Codicon.chevronDown, $4dEdH.localize('foldingExpandedIcon', 'Icon for expanded ranges in the editor glyph margin.'));
const $c6dc42b26c3761b3$export$91aea75f1008558b = $hEsmQ.registerIcon('folding-collapsed', $awgRE.Codicon.chevronRight, $4dEdH.localize('foldingCollapsedIcon', 'Icon for collapsed ranges in the editor glyph margin.'));
class $c6dc42b26c3761b3$export$efeea4b4f3021f6b {
    constructor(editor){
        this.editor = editor;
        this.autoHideFoldingControls = true;
        this.showFoldingHighlights = true;
    }
    getDecorationOption(isCollapsed, isHidden) {
        if (isHidden) return $c6dc42b26c3761b3$export$efeea4b4f3021f6b.HIDDEN_RANGE_DECORATION;
        if (isCollapsed) return this.showFoldingHighlights ? $c6dc42b26c3761b3$export$efeea4b4f3021f6b.COLLAPSED_HIGHLIGHTED_VISUAL_DECORATION : $c6dc42b26c3761b3$export$efeea4b4f3021f6b.COLLAPSED_VISUAL_DECORATION;
        else if (this.autoHideFoldingControls) return $c6dc42b26c3761b3$export$efeea4b4f3021f6b.EXPANDED_AUTO_HIDE_VISUAL_DECORATION;
        else return $c6dc42b26c3761b3$export$efeea4b4f3021f6b.EXPANDED_VISUAL_DECORATION;
    }
    deltaDecorations(oldDecorations, newDecorations) {
        return this.editor.deltaDecorations(oldDecorations, newDecorations);
    }
    changeDecorations(callback) {
        return this.editor.changeDecorations(callback);
    }
}
$c6dc42b26c3761b3$export$efeea4b4f3021f6b.COLLAPSED_VISUAL_DECORATION = $91ntV.ModelDecorationOptions.register({
    description: 'folding-collapsed-visual-decoration',
    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */ ,
    afterContentClassName: 'inline-folded',
    isWholeLine: true,
    firstLineDecorationClassName: $azIPz.ThemeIcon.asClassName($c6dc42b26c3761b3$export$91aea75f1008558b)
});
$c6dc42b26c3761b3$export$efeea4b4f3021f6b.COLLAPSED_HIGHLIGHTED_VISUAL_DECORATION = $91ntV.ModelDecorationOptions.register({
    description: 'folding-collapsed-highlighted-visual-decoration',
    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */ ,
    afterContentClassName: 'inline-folded',
    className: 'folded-background',
    isWholeLine: true,
    firstLineDecorationClassName: $azIPz.ThemeIcon.asClassName($c6dc42b26c3761b3$export$91aea75f1008558b)
});
$c6dc42b26c3761b3$export$efeea4b4f3021f6b.EXPANDED_AUTO_HIDE_VISUAL_DECORATION = $91ntV.ModelDecorationOptions.register({
    description: 'folding-expanded-auto-hide-visual-decoration',
    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */ ,
    isWholeLine: true,
    firstLineDecorationClassName: $azIPz.ThemeIcon.asClassName($c6dc42b26c3761b3$export$885051cbe6b7e954)
});
$c6dc42b26c3761b3$export$efeea4b4f3021f6b.EXPANDED_VISUAL_DECORATION = $91ntV.ModelDecorationOptions.register({
    description: 'folding-expanded-visual-decoration',
    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */ ,
    isWholeLine: true,
    firstLineDecorationClassName: 'alwaysShowFoldIcons ' + $azIPz.ThemeIcon.asClassName($c6dc42b26c3761b3$export$885051cbe6b7e954)
});
$c6dc42b26c3761b3$export$efeea4b4f3021f6b.HIDDEN_RANGE_DECORATION = $91ntV.ModelDecorationOptions.register({
    description: 'folding-hidden-range-decoration',
    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */ 
});



/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $eed6cbac84f7e475$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i1 = decorators.length - 1; i1 >= 0; i1--)if (d = decorators[i1]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var $eed6cbac84f7e475$var$__param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
};
const $eed6cbac84f7e475$var$CONTEXT_FOLDING_ENABLED = new $cxCeF.RawContextKey('foldingEnabled', false);
let $eed6cbac84f7e475$export$5d4a7ec5ea2624d8 = class $eed6cbac84f7e475$export$5d4a7ec5ea2624d8 extends $9cWcn.Disposable {
    constructor(editor, contextKeyService){
        super();
        this.contextKeyService = contextKeyService;
        this.localToDispose = this._register(new $9cWcn.DisposableStore());
        this.editor = editor;
        const options1 = this.editor.getOptions();
        this._isEnabled = options1.get(37 /* folding */ );
        this._useFoldingProviders = options1.get(38 /* foldingStrategy */ ) !== 'indentation';
        this._unfoldOnClickAfterEndOfLine = options1.get(41 /* unfoldOnClickAfterEndOfLine */ );
        this._restoringViewState = false;
        this._currentModelHasFoldedImports = false;
        this._foldingImportsByDefault = options1.get(40 /* foldingImportsByDefault */ );
        this.foldingModel = null;
        this.hiddenRangeModel = null;
        this.rangeProvider = null;
        this.foldingRegionPromise = null;
        this.foldingStateMemento = null;
        this.foldingModelPromise = null;
        this.updateScheduler = null;
        this.cursorChangedScheduler = null;
        this.mouseDownInfo = null;
        this.foldingDecorationProvider = new $c6dc42b26c3761b3$export$efeea4b4f3021f6b(editor);
        this.foldingDecorationProvider.autoHideFoldingControls = options1.get(98 /* showFoldingControls */ ) === 'mouseover';
        this.foldingDecorationProvider.showFoldingHighlights = options1.get(39 /* foldingHighlight */ );
        this.foldingEnabled = $eed6cbac84f7e475$var$CONTEXT_FOLDING_ENABLED.bindTo(this.contextKeyService);
        this.foldingEnabled.set(this._isEnabled);
        this._register(this.editor.onDidChangeModel(()=>this.onModelChanged()
        ));
        this._register(this.editor.onDidChangeConfiguration((e)=>{
            if (e.hasChanged(37 /* folding */ )) {
                this._isEnabled = this.editor.getOptions().get(37 /* folding */ );
                this.foldingEnabled.set(this._isEnabled);
                this.onModelChanged();
            }
            if (e.hasChanged(98 /* showFoldingControls */ ) || e.hasChanged(39 /* foldingHighlight */ )) {
                const options = this.editor.getOptions();
                this.foldingDecorationProvider.autoHideFoldingControls = options.get(98 /* showFoldingControls */ ) === 'mouseover';
                this.foldingDecorationProvider.showFoldingHighlights = options.get(39 /* foldingHighlight */ );
                this.triggerFoldingModelChanged();
            }
            if (e.hasChanged(38 /* foldingStrategy */ )) {
                this._useFoldingProviders = this.editor.getOptions().get(38 /* foldingStrategy */ ) !== 'indentation';
                this.onFoldingStrategyChanged();
            }
            if (e.hasChanged(41 /* unfoldOnClickAfterEndOfLine */ )) this._unfoldOnClickAfterEndOfLine = this.editor.getOptions().get(41 /* unfoldOnClickAfterEndOfLine */ );
            if (e.hasChanged(40 /* foldingImportsByDefault */ )) this._foldingImportsByDefault = this.editor.getOptions().get(40 /* foldingImportsByDefault */ );
        }));
        this.onModelChanged();
    }
    static get(editor) {
        return editor.getContribution($eed6cbac84f7e475$export$5d4a7ec5ea2624d8.ID);
    }
    /**
     * Store view state.
     */ saveViewState() {
        let model = this.editor.getModel();
        if (!model || !this._isEnabled || model.isTooLargeForTokenization()) return {};
        if (this.foldingModel) {
            let collapsedRegions = this.foldingModel.isInitialized ? this.foldingModel.getMemento() : this.hiddenRangeModel.getMemento();
            let provider = this.rangeProvider ? this.rangeProvider.id : undefined;
            return {
                collapsedRegions: collapsedRegions,
                lineCount: model.getLineCount(),
                provider: provider,
                foldedImports: this._currentModelHasFoldedImports
            };
        }
        return undefined;
    }
    /**
     * Restore view state.
     */ restoreViewState(state) {
        let model = this.editor.getModel();
        if (!model || !this._isEnabled || model.isTooLargeForTokenization() || !this.hiddenRangeModel) return;
        if (!state || state.lineCount !== model.getLineCount()) return;
        this._currentModelHasFoldedImports = !!state.foldedImports;
        if (!state.collapsedRegions) return;
        if (state.provider === $3d0bb523031e3352$export$643d29553f216197 || state.provider === $bdc791abbb7e6e3f$export$d107d20bbf4762c) this.foldingStateMemento = state;
        const collapsedRegions = state.collapsedRegions;
        // set the hidden ranges right away, before waiting for the folding model.
        if (this.hiddenRangeModel.applyMemento(collapsedRegions)) {
            const foldingModel1 = this.getFoldingModel();
            if (foldingModel1) foldingModel1.then((foldingModel)=>{
                if (foldingModel) {
                    this._restoringViewState = true;
                    try {
                        foldingModel.applyMemento(collapsedRegions);
                    } finally{
                        this._restoringViewState = false;
                    }
                }
            }).then(undefined, $gPkHZ.onUnexpectedError);
        }
    }
    onModelChanged() {
        this.localToDispose.clear();
        let model = this.editor.getModel();
        if (!this._isEnabled || !model || model.isTooLargeForTokenization()) // huge files get no view model, so they cannot support hidden areas
        return;
        this._currentModelHasFoldedImports = false;
        this.foldingModel = new $a8d07776c5f8ffe3$export$342aae847b5a9075(model, this.foldingDecorationProvider);
        this.localToDispose.add(this.foldingModel);
        this.hiddenRangeModel = new $332b66ddd66052bc$export$87e89ef1cf49f2d(this.foldingModel);
        this.localToDispose.add(this.hiddenRangeModel);
        this.localToDispose.add(this.hiddenRangeModel.onDidChange((hr)=>this.onHiddenRangesChanges(hr)
        ));
        this.updateScheduler = new $6bXyA.Delayer(200);
        this.cursorChangedScheduler = new $6bXyA.RunOnceScheduler(()=>this.revealCursor()
        , 200);
        this.localToDispose.add(this.cursorChangedScheduler);
        this.localToDispose.add($4PmRQ.FoldingRangeProviderRegistry.onDidChange(()=>this.onFoldingStrategyChanged()
        ));
        this.localToDispose.add(this.editor.onDidChangeModelLanguageConfiguration(()=>this.onFoldingStrategyChanged()
        )); // covers model language changes as well
        this.localToDispose.add(this.editor.onDidChangeModelContent((e)=>this.onDidChangeModelContent(e)
        ));
        this.localToDispose.add(this.editor.onDidChangeCursorPosition(()=>this.onCursorPositionChanged()
        ));
        this.localToDispose.add(this.editor.onMouseDown((e)=>this.onEditorMouseDown(e)
        ));
        this.localToDispose.add(this.editor.onMouseUp((e)=>this.onEditorMouseUp(e)
        ));
        this.localToDispose.add({
            dispose: ()=>{
                if (this.foldingRegionPromise) {
                    this.foldingRegionPromise.cancel();
                    this.foldingRegionPromise = null;
                }
                if (this.updateScheduler) this.updateScheduler.cancel();
                this.updateScheduler = null;
                this.foldingModel = null;
                this.foldingModelPromise = null;
                this.hiddenRangeModel = null;
                this.cursorChangedScheduler = null;
                this.foldingStateMemento = null;
                if (this.rangeProvider) this.rangeProvider.dispose();
                this.rangeProvider = null;
            }
        });
        this.triggerFoldingModelChanged();
    }
    onFoldingStrategyChanged() {
        if (this.rangeProvider) this.rangeProvider.dispose();
        this.rangeProvider = null;
        this.triggerFoldingModelChanged();
    }
    getRangeProvider(editorModel) {
        if (this.rangeProvider) return this.rangeProvider;
        this.rangeProvider = new $fd3627e4c7080c93$export$c6761242dbde8f79(editorModel); // fallback
        if (this._useFoldingProviders && this.foldingModel) {
            let foldingProviders = $4PmRQ.FoldingRangeProviderRegistry.ordered(this.foldingModel.textModel);
            if (foldingProviders.length === 0 && this.foldingStateMemento && this.foldingStateMemento.collapsedRegions) {
                const rangeProvider = this.rangeProvider = new $bdc791abbb7e6e3f$export$3f2af55879f1f5cb(editorModel, this.foldingStateMemento.collapsedRegions, ()=>{
                    // if after 30 the InitializingRangeProvider is still not replaced, force a refresh
                    this.foldingStateMemento = null;
                    this.onFoldingStrategyChanged();
                }, 30000);
                return rangeProvider; // keep memento in case there are still no foldingProviders on the next request.
            } else if (foldingProviders.length > 0) this.rangeProvider = new $3d0bb523031e3352$export$409cdd7e50053250(editorModel, foldingProviders, ()=>this.triggerFoldingModelChanged()
            );
        }
        this.foldingStateMemento = null;
        return this.rangeProvider;
    }
    getFoldingModel() {
        return this.foldingModelPromise;
    }
    onDidChangeModelContent(e) {
        var _a;
        (_a = this.hiddenRangeModel) === null || _a === void 0 || _a.notifyChangeModelContent(e);
        this.triggerFoldingModelChanged();
    }
    triggerFoldingModelChanged() {
        if (this.updateScheduler) {
            if (this.foldingRegionPromise) {
                this.foldingRegionPromise.cancel();
                this.foldingRegionPromise = null;
            }
            this.foldingModelPromise = this.updateScheduler.trigger(()=>{
                const foldingModel = this.foldingModel;
                if (!foldingModel) return null;
                const provider = this.getRangeProvider(foldingModel.textModel);
                let foldingRegionPromise = this.foldingRegionPromise = $6bXyA.createCancelablePromise((token)=>provider.compute(token)
                );
                return foldingRegionPromise.then((foldingRanges)=>{
                    if (foldingRanges && foldingRegionPromise === this.foldingRegionPromise) {
                        let scrollState;
                        if (this._foldingImportsByDefault && !this._currentModelHasFoldedImports) {
                            const hasChanges = foldingRanges.setCollapsedAllOfType($4PmRQ.FoldingRangeKind.Imports.value, true);
                            if (hasChanges) {
                                scrollState = $r7siU.StableEditorScrollState.capture(this.editor);
                                this._currentModelHasFoldedImports = hasChanges;
                            }
                        }
                        // some cursors might have moved into hidden regions, make sure they are in expanded regions
                        let selections = this.editor.getSelections();
                        let selectionLineNumbers = selections ? selections.map((s)=>s.startLineNumber
                        ) : [];
                        foldingModel.update(foldingRanges, selectionLineNumbers);
                        if (scrollState) scrollState.restore(this.editor);
                    }
                    return foldingModel;
                });
            }).then(undefined, (err)=>{
                $gPkHZ.onUnexpectedError(err);
                return null;
            });
        }
    }
    onHiddenRangesChanges(hiddenRanges) {
        if (this.hiddenRangeModel && hiddenRanges.length && !this._restoringViewState) {
            let selections = this.editor.getSelections();
            if (selections) {
                if (this.hiddenRangeModel.adjustSelections(selections)) this.editor.setSelections(selections);
            }
        }
        this.editor.setHiddenAreas(hiddenRanges);
    }
    onCursorPositionChanged() {
        if (this.hiddenRangeModel && this.hiddenRangeModel.hasRanges()) this.cursorChangedScheduler.schedule();
    }
    revealCursor() {
        const foldingModel3 = this.getFoldingModel();
        if (!foldingModel3) return;
        foldingModel3.then((foldingModel)=>{
            if (foldingModel) {
                let selections = this.editor.getSelections();
                if (selections && selections.length > 0) {
                    let toToggle = [];
                    for (let selection of selections){
                        let lineNumber = selection.selectionStartLineNumber;
                        if (this.hiddenRangeModel && this.hiddenRangeModel.isHidden(lineNumber)) toToggle.push(...foldingModel.getAllRegionsAtLine(lineNumber, (r)=>r.isCollapsed && lineNumber > r.startLineNumber
                        ));
                    }
                    if (toToggle.length) {
                        foldingModel.toggleCollapseState(toToggle);
                        this.reveal(selections[0].getPosition());
                    }
                }
            }
        }).then(undefined, $gPkHZ.onUnexpectedError);
    }
    onEditorMouseDown(e) {
        this.mouseDownInfo = null;
        if (!this.hiddenRangeModel || !e.target || !e.target.range) return;
        if (!e.event.leftButton && !e.event.middleButton) return;
        const range = e.target.range;
        let iconClicked = false;
        switch(e.target.type){
            case 4 /* GUTTER_LINE_DECORATIONS */ :
                const data = e.target.detail;
                const offsetLeftInGutter = e.target.element.offsetLeft;
                const gutterOffsetX = data.offsetX - offsetLeftInGutter;
                // const gutterOffsetX = data.offsetX - data.glyphMarginWidth - data.lineNumbersWidth - data.glyphMarginLeft;
                // TODO@joao TODO@alex TODO@martin this is such that we don't collide with dirty diff
                if (gutterOffsetX < 5) return;
                iconClicked = true;
                break;
            case 7 /* CONTENT_EMPTY */ :
                if (this._unfoldOnClickAfterEndOfLine && this.hiddenRangeModel.hasRanges()) {
                    const data = e.target.detail;
                    if (!data.isAfterLines) break;
                }
                return;
            case 6 /* CONTENT_TEXT */ :
                if (this.hiddenRangeModel.hasRanges()) {
                    let model = this.editor.getModel();
                    if (model && range.startColumn === model.getLineMaxColumn(range.startLineNumber)) break;
                }
                return;
            default:
                return;
        }
        this.mouseDownInfo = {
            lineNumber: range.startLineNumber,
            iconClicked: iconClicked
        };
    }
    onEditorMouseUp(e) {
        const foldingModel4 = this.getFoldingModel();
        if (!foldingModel4 || !this.mouseDownInfo || !e.target) return;
        let lineNumber = this.mouseDownInfo.lineNumber;
        let iconClicked = this.mouseDownInfo.iconClicked;
        let range = e.target.range;
        if (!range || range.startLineNumber !== lineNumber) return;
        if (iconClicked) {
            if (e.target.type !== 4 /* GUTTER_LINE_DECORATIONS */ ) return;
        } else {
            let model = this.editor.getModel();
            if (!model || range.startColumn !== model.getLineMaxColumn(lineNumber)) return;
        }
        foldingModel4.then((foldingModel)=>{
            if (foldingModel) {
                let region = foldingModel.getRegionAtLine(lineNumber);
                if (region && region.startLineNumber === lineNumber) {
                    let isCollapsed = region.isCollapsed;
                    if (iconClicked || isCollapsed) {
                        let surrounding = e.event.altKey;
                        let toToggle = [];
                        if (surrounding) {
                            let filter = (otherRegion)=>!otherRegion.containedBy(region) && !region.containedBy(otherRegion)
                            ;
                            let toMaybeToggle = foldingModel.getRegionsInside(null, filter);
                            for (const r of toMaybeToggle)if (r.isCollapsed) toToggle.push(r);
                            // if any surrounding regions are folded, unfold those. Otherwise, fold all surrounding
                            if (toToggle.length === 0) toToggle = toMaybeToggle;
                        } else {
                            let recursive = e.event.middleButton || e.event.shiftKey;
                            if (recursive) {
                                for (const r of foldingModel.getRegionsInside(region))if (r.isCollapsed === isCollapsed) toToggle.push(r);
                            }
                            // when recursive, first only collapse all children. If all are already folded or there are no children, also fold parent.
                            if (isCollapsed || !recursive || toToggle.length === 0) toToggle.push(region);
                        }
                        foldingModel.toggleCollapseState(toToggle);
                        this.reveal({
                            lineNumber: lineNumber,
                            column: 1
                        });
                    }
                }
            }
        }).then(undefined, $gPkHZ.onUnexpectedError);
    }
    reveal(position) {
        this.editor.revealPositionInCenterIfOutsideViewport(position, 0 /* Smooth */ );
    }
};
$eed6cbac84f7e475$export$5d4a7ec5ea2624d8.ID = 'editor.contrib.folding';
$eed6cbac84f7e475$export$5d4a7ec5ea2624d8 = $eed6cbac84f7e475$var$__decorate([
    $eed6cbac84f7e475$var$__param(1, $cxCeF.IContextKeyService)
], $eed6cbac84f7e475$export$5d4a7ec5ea2624d8);
class $eed6cbac84f7e475$var$FoldingAction extends $2iJTi.EditorAction {
    runEditorCommand(accessor, editor, args) {
        let foldingController = $eed6cbac84f7e475$export$5d4a7ec5ea2624d8.get(editor);
        if (!foldingController) return;
        let foldingModelPromise = foldingController.getFoldingModel();
        if (foldingModelPromise) {
            this.reportTelemetry(accessor, editor);
            return foldingModelPromise.then((foldingModel)=>{
                if (foldingModel) {
                    this.invoke(foldingController, foldingModel, editor, args);
                    const selection = editor.getSelection();
                    if (selection) foldingController.reveal(selection.getStartPosition());
                }
            });
        }
    }
    getSelectedLines(editor) {
        let selections = editor.getSelections();
        return selections ? selections.map((s)=>s.startLineNumber
        ) : [];
    }
    getLineNumbers(args, editor) {
        if (args && args.selectionLines) return args.selectionLines.map((l)=>l + 1
        ); // to 0-bases line numbers
        return this.getSelectedLines(editor);
    }
    run(_accessor, _editor) {}
}
function $eed6cbac84f7e475$var$foldingArgumentsConstraint(args) {
    if (!$bxBg7.isUndefined(args)) {
        if (!$bxBg7.isObject(args)) return false;
        const foldingArgs = args;
        if (!$bxBg7.isUndefined(foldingArgs.levels) && !$bxBg7.isNumber(foldingArgs.levels)) return false;
        if (!$bxBg7.isUndefined(foldingArgs.direction) && !$bxBg7.isString(foldingArgs.direction)) return false;
        if (!$bxBg7.isUndefined(foldingArgs.selectionLines) && (!$bxBg7.isArray(foldingArgs.selectionLines) || !foldingArgs.selectionLines.every($bxBg7.isNumber))) return false;
    }
    return true;
}
class $eed6cbac84f7e475$var$UnfoldAction extends $eed6cbac84f7e475$var$FoldingAction {
    constructor(){
        super({
            id: 'editor.unfold',
            label: $4dEdH.localize('unfoldAction.label', "Unfold"),
            alias: 'Unfold',
            precondition: $eed6cbac84f7e475$var$CONTEXT_FOLDING_ENABLED,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.editorTextFocus,
                primary: 3161 /* BracketRight */ ,
                mac: {
                    primary: 2649 /* BracketRight */ 
                },
                weight: 100 /* EditorContrib */ 
            },
            description: {
                description: 'Unfold the content in the editor',
                args: [
                    {
                        name: 'Unfold editor argument',
                        description: `Property-value pairs that can be passed through this argument:
						* 'levels': Number of levels to unfold. If not set, defaults to 1.
						* 'direction': If 'up', unfold given number of levels up otherwise unfolds down.
						* 'selectionLines': The start lines (0-based) of the editor selections to apply the unfold action to. If not set, the active selection(s) will be used.
						`,
                        constraint: $eed6cbac84f7e475$var$foldingArgumentsConstraint,
                        schema: {
                            'type': 'object',
                            'properties': {
                                'levels': {
                                    'type': 'number',
                                    'default': 1
                                },
                                'direction': {
                                    'type': 'string',
                                    'enum': [
                                        'up',
                                        'down'
                                    ],
                                    'default': 'down'
                                },
                                'selectionLines': {
                                    'type': 'array',
                                    'items': {
                                        'type': 'number'
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        });
    }
    invoke(_foldingController, foldingModel, editor, args) {
        let levels = args && args.levels || 1;
        let lineNumbers = this.getLineNumbers(args, editor);
        if (args && args.direction === 'up') $a8d07776c5f8ffe3$export$50a013aaf999fe15(foldingModel, false, levels, lineNumbers);
        else $a8d07776c5f8ffe3$export$1ef41fe66cd8530(foldingModel, false, levels, lineNumbers);
    }
}
class $eed6cbac84f7e475$var$UnFoldRecursivelyAction extends $eed6cbac84f7e475$var$FoldingAction {
    constructor(){
        super({
            id: 'editor.unfoldRecursively',
            label: $4dEdH.localize('unFoldRecursivelyAction.label', "Unfold Recursively"),
            alias: 'Unfold Recursively',
            precondition: $eed6cbac84f7e475$var$CONTEXT_FOLDING_ENABLED,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.editorTextFocus,
                primary: $fuc8X.KeyChord(2089 /* KeyK */ , 2137 /* BracketRight */ ),
                weight: 100 /* EditorContrib */ 
            }
        });
    }
    invoke(_foldingController, foldingModel, editor, _args) {
        $a8d07776c5f8ffe3$export$1ef41fe66cd8530(foldingModel, false, Number.MAX_VALUE, this.getSelectedLines(editor));
    }
}
class $eed6cbac84f7e475$var$FoldAction extends $eed6cbac84f7e475$var$FoldingAction {
    constructor(){
        super({
            id: 'editor.fold',
            label: $4dEdH.localize('foldAction.label', "Fold"),
            alias: 'Fold',
            precondition: $eed6cbac84f7e475$var$CONTEXT_FOLDING_ENABLED,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.editorTextFocus,
                primary: 3159 /* BracketLeft */ ,
                mac: {
                    primary: 2647 /* BracketLeft */ 
                },
                weight: 100 /* EditorContrib */ 
            },
            description: {
                description: 'Fold the content in the editor',
                args: [
                    {
                        name: 'Fold editor argument',
                        description: `Property-value pairs that can be passed through this argument:
							* 'levels': Number of levels to fold.
							* 'direction': If 'up', folds given number of levels up otherwise folds down.
							* 'selectionLines': The start lines (0-based) of the editor selections to apply the fold action to. If not set, the active selection(s) will be used.
							If no levels or direction is set, folds the region at the locations or if already collapsed, the first uncollapsed parent instead.
						`,
                        constraint: $eed6cbac84f7e475$var$foldingArgumentsConstraint,
                        schema: {
                            'type': 'object',
                            'properties': {
                                'levels': {
                                    'type': 'number'
                                },
                                'direction': {
                                    'type': 'string',
                                    'enum': [
                                        'up',
                                        'down'
                                    ]
                                },
                                'selectionLines': {
                                    'type': 'array',
                                    'items': {
                                        'type': 'number'
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        });
    }
    invoke(_foldingController, foldingModel, editor, args) {
        let lineNumbers = this.getLineNumbers(args, editor);
        const levels = args && args.levels;
        const direction = args && args.direction;
        if (typeof levels !== 'number' && typeof direction !== 'string') // fold the region at the location or if already collapsed, the first uncollapsed parent instead.
        $a8d07776c5f8ffe3$export$e1cae19974cbbf8b(foldingModel, true, lineNumbers);
        else if (direction === 'up') $a8d07776c5f8ffe3$export$50a013aaf999fe15(foldingModel, true, levels || 1, lineNumbers);
        else $a8d07776c5f8ffe3$export$1ef41fe66cd8530(foldingModel, true, levels || 1, lineNumbers);
    }
}
class $eed6cbac84f7e475$var$ToggleFoldAction extends $eed6cbac84f7e475$var$FoldingAction {
    constructor(){
        super({
            id: 'editor.toggleFold',
            label: $4dEdH.localize('toggleFoldAction.label', "Toggle Fold"),
            alias: 'Toggle Fold',
            precondition: $eed6cbac84f7e475$var$CONTEXT_FOLDING_ENABLED,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.editorTextFocus,
                primary: $fuc8X.KeyChord(2089 /* KeyK */ , 2090 /* KeyL */ ),
                weight: 100 /* EditorContrib */ 
            }
        });
    }
    invoke(_foldingController, foldingModel, editor) {
        let selectedLines = this.getSelectedLines(editor);
        $a8d07776c5f8ffe3$export$6008f8f734d0336a(foldingModel, 1, selectedLines);
    }
}
class $eed6cbac84f7e475$var$FoldRecursivelyAction extends $eed6cbac84f7e475$var$FoldingAction {
    constructor(){
        super({
            id: 'editor.foldRecursively',
            label: $4dEdH.localize('foldRecursivelyAction.label', "Fold Recursively"),
            alias: 'Fold Recursively',
            precondition: $eed6cbac84f7e475$var$CONTEXT_FOLDING_ENABLED,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.editorTextFocus,
                primary: $fuc8X.KeyChord(2089 /* KeyK */ , 2135 /* BracketLeft */ ),
                weight: 100 /* EditorContrib */ 
            }
        });
    }
    invoke(_foldingController, foldingModel, editor) {
        let selectedLines = this.getSelectedLines(editor);
        $a8d07776c5f8ffe3$export$1ef41fe66cd8530(foldingModel, true, Number.MAX_VALUE, selectedLines);
    }
}
class $eed6cbac84f7e475$var$FoldAllBlockCommentsAction extends $eed6cbac84f7e475$var$FoldingAction {
    constructor(){
        super({
            id: 'editor.foldAllBlockComments',
            label: $4dEdH.localize('foldAllBlockComments.label', "Fold All Block Comments"),
            alias: 'Fold All Block Comments',
            precondition: $eed6cbac84f7e475$var$CONTEXT_FOLDING_ENABLED,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.editorTextFocus,
                primary: $fuc8X.KeyChord(2089 /* KeyK */ , 2133 /* Slash */ ),
                weight: 100 /* EditorContrib */ 
            }
        });
    }
    invoke(_foldingController, foldingModel, editor) {
        if (foldingModel.regions.hasTypes()) $a8d07776c5f8ffe3$export$ce3950edac996729(foldingModel, $4PmRQ.FoldingRangeKind.Comment.value, true);
        else {
            const editorModel = editor.getModel();
            if (!editorModel) return;
            const comments = $aKdIg.LanguageConfigurationRegistry.getComments(editorModel.getLanguageId());
            if (comments && comments.blockCommentStartToken) {
                let regExp = new RegExp('^\\s*' + $jcr1R.escapeRegExpCharacters(comments.blockCommentStartToken));
                $a8d07776c5f8ffe3$export$acbcc757d0e877b(foldingModel, regExp, true);
            }
        }
    }
}
class $eed6cbac84f7e475$var$FoldAllRegionsAction extends $eed6cbac84f7e475$var$FoldingAction {
    constructor(){
        super({
            id: 'editor.foldAllMarkerRegions',
            label: $4dEdH.localize('foldAllMarkerRegions.label', "Fold All Regions"),
            alias: 'Fold All Regions',
            precondition: $eed6cbac84f7e475$var$CONTEXT_FOLDING_ENABLED,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.editorTextFocus,
                primary: $fuc8X.KeyChord(2089 /* KeyK */ , 2077 /* Digit8 */ ),
                weight: 100 /* EditorContrib */ 
            }
        });
    }
    invoke(_foldingController, foldingModel, editor) {
        if (foldingModel.regions.hasTypes()) $a8d07776c5f8ffe3$export$ce3950edac996729(foldingModel, $4PmRQ.FoldingRangeKind.Region.value, true);
        else {
            const editorModel = editor.getModel();
            if (!editorModel) return;
            const foldingRules = $aKdIg.LanguageConfigurationRegistry.getFoldingRules(editorModel.getLanguageId());
            if (foldingRules && foldingRules.markers && foldingRules.markers.start) {
                let regExp = new RegExp(foldingRules.markers.start);
                $a8d07776c5f8ffe3$export$acbcc757d0e877b(foldingModel, regExp, true);
            }
        }
    }
}
class $eed6cbac84f7e475$var$UnfoldAllRegionsAction extends $eed6cbac84f7e475$var$FoldingAction {
    constructor(){
        super({
            id: 'editor.unfoldAllMarkerRegions',
            label: $4dEdH.localize('unfoldAllMarkerRegions.label', "Unfold All Regions"),
            alias: 'Unfold All Regions',
            precondition: $eed6cbac84f7e475$var$CONTEXT_FOLDING_ENABLED,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.editorTextFocus,
                primary: $fuc8X.KeyChord(2089 /* KeyK */ , 2078 /* Digit9 */ ),
                weight: 100 /* EditorContrib */ 
            }
        });
    }
    invoke(_foldingController, foldingModel, editor) {
        if (foldingModel.regions.hasTypes()) $a8d07776c5f8ffe3$export$ce3950edac996729(foldingModel, $4PmRQ.FoldingRangeKind.Region.value, false);
        else {
            const editorModel = editor.getModel();
            if (!editorModel) return;
            const foldingRules = $aKdIg.LanguageConfigurationRegistry.getFoldingRules(editorModel.getLanguageId());
            if (foldingRules && foldingRules.markers && foldingRules.markers.start) {
                let regExp = new RegExp(foldingRules.markers.start);
                $a8d07776c5f8ffe3$export$acbcc757d0e877b(foldingModel, regExp, false);
            }
        }
    }
}
class $eed6cbac84f7e475$var$FoldAllRegionsExceptAction extends $eed6cbac84f7e475$var$FoldingAction {
    constructor(){
        super({
            id: 'editor.foldAllExcept',
            label: $4dEdH.localize('foldAllExcept.label', "Fold All Regions Except Selected"),
            alias: 'Fold All Regions Except Selected',
            precondition: $eed6cbac84f7e475$var$CONTEXT_FOLDING_ENABLED,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.editorTextFocus,
                primary: $fuc8X.KeyChord(2089 /* KeyK */ , 2131 /* Minus */ ),
                weight: 100 /* EditorContrib */ 
            }
        });
    }
    invoke(_foldingController, foldingModel, editor) {
        let selectedLines = this.getSelectedLines(editor);
        $a8d07776c5f8ffe3$export$13292d9dd11d6b4f(foldingModel, true, selectedLines);
    }
}
class $eed6cbac84f7e475$var$UnfoldAllRegionsExceptAction extends $eed6cbac84f7e475$var$FoldingAction {
    constructor(){
        super({
            id: 'editor.unfoldAllExcept',
            label: $4dEdH.localize('unfoldAllExcept.label', "Unfold All Regions Except Selected"),
            alias: 'Unfold All Regions Except Selected',
            precondition: $eed6cbac84f7e475$var$CONTEXT_FOLDING_ENABLED,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.editorTextFocus,
                primary: $fuc8X.KeyChord(2089 /* KeyK */ , 2129 /* Equal */ ),
                weight: 100 /* EditorContrib */ 
            }
        });
    }
    invoke(_foldingController, foldingModel, editor) {
        let selectedLines = this.getSelectedLines(editor);
        $a8d07776c5f8ffe3$export$13292d9dd11d6b4f(foldingModel, false, selectedLines);
    }
}
class $eed6cbac84f7e475$var$FoldAllAction extends $eed6cbac84f7e475$var$FoldingAction {
    constructor(){
        super({
            id: 'editor.foldAll',
            label: $4dEdH.localize('foldAllAction.label', "Fold All"),
            alias: 'Fold All',
            precondition: $eed6cbac84f7e475$var$CONTEXT_FOLDING_ENABLED,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.editorTextFocus,
                primary: $fuc8X.KeyChord(2089 /* KeyK */ , 2069 /* Digit0 */ ),
                weight: 100 /* EditorContrib */ 
            }
        });
    }
    invoke(_foldingController, foldingModel, _editor) {
        $a8d07776c5f8ffe3$export$1ef41fe66cd8530(foldingModel, true);
    }
}
class $eed6cbac84f7e475$var$UnfoldAllAction extends $eed6cbac84f7e475$var$FoldingAction {
    constructor(){
        super({
            id: 'editor.unfoldAll',
            label: $4dEdH.localize('unfoldAllAction.label', "Unfold All"),
            alias: 'Unfold All',
            precondition: $eed6cbac84f7e475$var$CONTEXT_FOLDING_ENABLED,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.editorTextFocus,
                primary: $fuc8X.KeyChord(2089 /* KeyK */ , 2088 /* KeyJ */ ),
                weight: 100 /* EditorContrib */ 
            }
        });
    }
    invoke(_foldingController, foldingModel, _editor) {
        $a8d07776c5f8ffe3$export$1ef41fe66cd8530(foldingModel, false);
    }
}
class $eed6cbac84f7e475$var$FoldLevelAction extends $eed6cbac84f7e475$var$FoldingAction {
    getFoldingLevel() {
        return parseInt(this.id.substr($eed6cbac84f7e475$var$FoldLevelAction.ID_PREFIX.length));
    }
    invoke(_foldingController, foldingModel, editor) {
        $a8d07776c5f8ffe3$export$3f9d91c844738bc6(foldingModel, this.getFoldingLevel(), true, this.getSelectedLines(editor));
    }
}
$eed6cbac84f7e475$var$FoldLevelAction.ID_PREFIX = 'editor.foldLevel';
$eed6cbac84f7e475$var$FoldLevelAction.ID = (level)=>$eed6cbac84f7e475$var$FoldLevelAction.ID_PREFIX + level
;
/** Action to go to the parent fold of current line */ class $eed6cbac84f7e475$var$GotoParentFoldAction extends $eed6cbac84f7e475$var$FoldingAction {
    constructor(){
        super({
            id: 'editor.gotoParentFold',
            label: $4dEdH.localize('gotoParentFold.label', "Go to Parent Fold"),
            alias: 'Go to Parent Fold',
            precondition: $eed6cbac84f7e475$var$CONTEXT_FOLDING_ENABLED,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.editorTextFocus,
                weight: 100 /* EditorContrib */ 
            }
        });
    }
    invoke(_foldingController, foldingModel, editor) {
        let selectedLines = this.getSelectedLines(editor);
        if (selectedLines.length > 0) {
            let startLineNumber = $a8d07776c5f8ffe3$export$19eab21a9895dbc4(selectedLines[0], foldingModel);
            if (startLineNumber !== null) editor.setSelection({
                startLineNumber: startLineNumber,
                startColumn: 1,
                endLineNumber: startLineNumber,
                endColumn: 1
            });
        }
    }
}
/** Action to go to the previous fold of current line */ class $eed6cbac84f7e475$var$GotoPreviousFoldAction extends $eed6cbac84f7e475$var$FoldingAction {
    constructor(){
        super({
            id: 'editor.gotoPreviousFold',
            label: $4dEdH.localize('gotoPreviousFold.label', "Go to Previous Folding Range"),
            alias: 'Go to Previous Folding Range',
            precondition: $eed6cbac84f7e475$var$CONTEXT_FOLDING_ENABLED,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.editorTextFocus,
                weight: 100 /* EditorContrib */ 
            }
        });
    }
    invoke(_foldingController, foldingModel, editor) {
        let selectedLines = this.getSelectedLines(editor);
        if (selectedLines.length > 0) {
            let startLineNumber = $a8d07776c5f8ffe3$export$9e804e9f47adba4e(selectedLines[0], foldingModel);
            if (startLineNumber !== null) editor.setSelection({
                startLineNumber: startLineNumber,
                startColumn: 1,
                endLineNumber: startLineNumber,
                endColumn: 1
            });
        }
    }
}
/** Action to go to the next fold of current line */ class $eed6cbac84f7e475$var$GotoNextFoldAction extends $eed6cbac84f7e475$var$FoldingAction {
    constructor(){
        super({
            id: 'editor.gotoNextFold',
            label: $4dEdH.localize('gotoNextFold.label', "Go to Next Folding Range"),
            alias: 'Go to Next Folding Range',
            precondition: $eed6cbac84f7e475$var$CONTEXT_FOLDING_ENABLED,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.editorTextFocus,
                weight: 100 /* EditorContrib */ 
            }
        });
    }
    invoke(_foldingController, foldingModel, editor) {
        let selectedLines = this.getSelectedLines(editor);
        if (selectedLines.length > 0) {
            let startLineNumber = $a8d07776c5f8ffe3$export$3164a73fda220264(selectedLines[0], foldingModel);
            if (startLineNumber !== null) editor.setSelection({
                startLineNumber: startLineNumber,
                startColumn: 1,
                endLineNumber: startLineNumber,
                endColumn: 1
            });
        }
    }
}
$2iJTi.registerEditorContribution($eed6cbac84f7e475$export$5d4a7ec5ea2624d8.ID, $eed6cbac84f7e475$export$5d4a7ec5ea2624d8);
$2iJTi.registerEditorAction($eed6cbac84f7e475$var$UnfoldAction);
$2iJTi.registerEditorAction($eed6cbac84f7e475$var$UnFoldRecursivelyAction);
$2iJTi.registerEditorAction($eed6cbac84f7e475$var$FoldAction);
$2iJTi.registerEditorAction($eed6cbac84f7e475$var$FoldRecursivelyAction);
$2iJTi.registerEditorAction($eed6cbac84f7e475$var$FoldAllAction);
$2iJTi.registerEditorAction($eed6cbac84f7e475$var$UnfoldAllAction);
$2iJTi.registerEditorAction($eed6cbac84f7e475$var$FoldAllBlockCommentsAction);
$2iJTi.registerEditorAction($eed6cbac84f7e475$var$FoldAllRegionsAction);
$2iJTi.registerEditorAction($eed6cbac84f7e475$var$UnfoldAllRegionsAction);
$2iJTi.registerEditorAction($eed6cbac84f7e475$var$FoldAllRegionsExceptAction);
$2iJTi.registerEditorAction($eed6cbac84f7e475$var$UnfoldAllRegionsExceptAction);
$2iJTi.registerEditorAction($eed6cbac84f7e475$var$ToggleFoldAction);
$2iJTi.registerEditorAction($eed6cbac84f7e475$var$GotoParentFoldAction);
$2iJTi.registerEditorAction($eed6cbac84f7e475$var$GotoPreviousFoldAction);
$2iJTi.registerEditorAction($eed6cbac84f7e475$var$GotoNextFoldAction);
for(let i = 1; i <= 7; i++)$2iJTi.registerInstantiatedEditorAction(new $eed6cbac84f7e475$var$FoldLevelAction({
    id: $eed6cbac84f7e475$var$FoldLevelAction.ID(i),
    label: $4dEdH.localize('foldLevelAction.label', "Fold Level {0}", i),
    alias: `Fold Level ${i}`,
    precondition: $eed6cbac84f7e475$var$CONTEXT_FOLDING_ENABLED,
    kbOpts: {
        kbExpr: $ibKGQ.EditorContextKeys.editorTextFocus,
        primary: $fuc8X.KeyChord(2089 /* KeyK */ , 2048 /* CtrlCmd */  | 21 /* Digit0 */  + i),
        weight: 100 /* EditorContrib */ 
    }
}));
const $eed6cbac84f7e475$export$ed7a24ff104b487d = $gaWeX.registerColor('editor.foldBackground', {
    light: $gaWeX.transparent($gaWeX.editorSelectionBackground, 0.3),
    dark: $gaWeX.transparent($gaWeX.editorSelectionBackground, 0.3),
    hc: null
}, $4dEdH.localize('foldBackgroundBackground', "Background color behind folded ranges. The color must not be opaque so as not to hide underlying decorations."), true);
const $eed6cbac84f7e475$export$6151789bef279b02 = $gaWeX.registerColor('editorGutter.foldingControlForeground', {
    dark: $gaWeX.iconForeground,
    light: $gaWeX.iconForeground,
    hc: $gaWeX.iconForeground
}, $4dEdH.localize('editorGutter.foldingControlForeground', 'Color of the folding control in the editor gutter.'));
$azIPz.registerThemingParticipant((theme, collector)=>{
    const foldBackground = theme.getColor($eed6cbac84f7e475$export$ed7a24ff104b487d);
    if (foldBackground) collector.addRule(`.monaco-editor .folded-background { background-color: ${foldBackground}; }`);
    const editorFoldColor = theme.getColor($eed6cbac84f7e475$export$6151789bef279b02);
    if (editorFoldColor) collector.addRule(`
		.monaco-editor .cldr${$azIPz.ThemeIcon.asCSSSelector($c6dc42b26c3761b3$export$885051cbe6b7e954)},
		.monaco-editor .cldr${$azIPz.ThemeIcon.asCSSSelector($c6dc42b26c3761b3$export$91aea75f1008558b)} {
			color: ${editorFoldColor} !important;
		}
		`);
});



var $2iJTi = parcelRequire("2iJTi");

var $kNF1e = parcelRequire("kNF1e");

var $4dEdH = parcelRequire("4dEdH");
class $439371f70fedd082$var$EditorFontZoomIn extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: 'editor.action.fontZoomIn',
            label: $4dEdH.localize('EditorFontZoomIn.label', "Editor Font Zoom In"),
            alias: 'Editor Font Zoom In',
            precondition: undefined
        });
    }
    run(accessor, editor) {
        $kNF1e.EditorZoom.setZoomLevel($kNF1e.EditorZoom.getZoomLevel() + 1);
    }
}
class $439371f70fedd082$var$EditorFontZoomOut extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: 'editor.action.fontZoomOut',
            label: $4dEdH.localize('EditorFontZoomOut.label', "Editor Font Zoom Out"),
            alias: 'Editor Font Zoom Out',
            precondition: undefined
        });
    }
    run(accessor, editor) {
        $kNF1e.EditorZoom.setZoomLevel($kNF1e.EditorZoom.getZoomLevel() - 1);
    }
}
class $439371f70fedd082$var$EditorFontZoomReset extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: 'editor.action.fontZoomReset',
            label: $4dEdH.localize('EditorFontZoomReset.label', "Editor Font Zoom Reset"),
            alias: 'Editor Font Zoom Reset',
            precondition: undefined
        });
    }
    run(accessor, editor) {
        $kNF1e.EditorZoom.setZoomLevel(0);
    }
}
$2iJTi.registerEditorAction($439371f70fedd082$var$EditorFontZoomIn);
$2iJTi.registerEditorAction($439371f70fedd082$var$EditorFontZoomOut);
$2iJTi.registerEditorAction($439371f70fedd082$var$EditorFontZoomReset);


var $bd3df09480182516$exports = {};

var $kJ8UG = parcelRequire("kJ8UG");

var $giPcZ = parcelRequire("giPcZ");

var $gPkHZ = parcelRequire("gPkHZ");

var $fuc8X = parcelRequire("fuc8X");

var $9cWcn = parcelRequire("9cWcn");

var $2iJTi = parcelRequire("2iJTi");

var $2Qfl0 = parcelRequire("2Qfl0");

var $kNeNo = parcelRequire("kNeNo");

var $d00il = parcelRequire("d00il");

var $ibKGQ = parcelRequire("ibKGQ");

var $4PmRQ = parcelRequire("4PmRQ");

var $aPs2m = parcelRequire("aPs2m");

var $8lG9H = parcelRequire("8lG9H");

var $1q1ai = parcelRequire("1q1ai");

var $4dEdH = parcelRequire("4dEdH");

var $8tcMz = parcelRequire("8tcMz");

var $cxCeF = parcelRequire("cxCeF");

var $fdGPu = parcelRequire("fdGPu");

var $4E7vx = parcelRequire("4E7vx");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $bd3df09480182516$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var $bd3df09480182516$var$__param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
};
var $bd3df09480182516$var$__awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
let $bd3df09480182516$var$FormatOnType = class FormatOnType {
    constructor(editor, _workerService){
        this._workerService = _workerService;
        this._callOnDispose = new $9cWcn.DisposableStore();
        this._callOnModel = new $9cWcn.DisposableStore();
        this._editor = editor;
        this._callOnDispose.add(editor.onDidChangeConfiguration(()=>this._update()
        ));
        this._callOnDispose.add(editor.onDidChangeModel(()=>this._update()
        ));
        this._callOnDispose.add(editor.onDidChangeModelLanguage(()=>this._update()
        ));
        this._callOnDispose.add($4PmRQ.OnTypeFormattingEditProviderRegistry.onDidChange(this._update, this));
    }
    dispose() {
        this._callOnDispose.dispose();
        this._callOnModel.dispose();
    }
    _update() {
        // clean up
        this._callOnModel.clear();
        // we are disabled
        if (!this._editor.getOption(48 /* formatOnType */ )) return;
        // no model
        if (!this._editor.hasModel()) return;
        const model = this._editor.getModel();
        // no support
        const [support] = $4PmRQ.OnTypeFormattingEditProviderRegistry.ordered(model);
        if (!support || !support.autoFormatTriggerCharacters) return;
        // register typing listeners that will trigger the format
        let triggerChars = new $kNeNo.CharacterSet();
        for (let ch of support.autoFormatTriggerCharacters)triggerChars.add(ch.charCodeAt(0));
        this._callOnModel.add(this._editor.onDidType((text)=>{
            let lastCharCode = text.charCodeAt(text.length - 1);
            if (triggerChars.has(lastCharCode)) this._trigger(String.fromCharCode(lastCharCode));
        }));
    }
    _trigger(ch) {
        if (!this._editor.hasModel()) return;
        if (this._editor.getSelections().length > 1 || !this._editor.getSelection().isEmpty()) return;
        const model = this._editor.getModel();
        const position = this._editor.getPosition();
        let canceled = false;
        // install a listener that checks if edits happens before the
        // position on which we format right now. If so, we won't
        // apply the format edits
        const unbind = this._editor.onDidChangeModelContent((e)=>{
            if (e.isFlush) {
                // a model.setValue() was called
                // cancel only once
                canceled = true;
                unbind.dispose();
                return;
            }
            for(let i = 0, len = e.changes.length; i < len; i++){
                const change = e.changes[i];
                if (change.range.endLineNumber <= position.lineNumber) {
                    // cancel only once
                    canceled = true;
                    unbind.dispose();
                    return;
                }
            }
        });
        $8lG9H.getOnTypeFormattingEdits(this._workerService, model, position, ch, model.getFormattingOptions()).then((edits)=>{
            unbind.dispose();
            if (canceled) return;
            if ($kJ8UG.isNonEmptyArray(edits)) {
                $1q1ai.FormattingEdit.execute(this._editor, edits, true);
                $8lG9H.alertFormattingEdits(edits);
            }
        }, (err)=>{
            unbind.dispose();
            throw err;
        });
    }
};
$bd3df09480182516$var$FormatOnType.ID = 'editor.contrib.autoFormat';
$bd3df09480182516$var$FormatOnType = $bd3df09480182516$var$__decorate([
    $bd3df09480182516$var$__param(1, $aPs2m.IEditorWorkerService)
], $bd3df09480182516$var$FormatOnType);
let $bd3df09480182516$var$FormatOnPaste = class FormatOnPaste {
    constructor(editor, _instantiationService){
        this.editor = editor;
        this._instantiationService = _instantiationService;
        this._callOnDispose = new $9cWcn.DisposableStore();
        this._callOnModel = new $9cWcn.DisposableStore();
        this._callOnDispose.add(editor.onDidChangeConfiguration(()=>this._update()
        ));
        this._callOnDispose.add(editor.onDidChangeModel(()=>this._update()
        ));
        this._callOnDispose.add(editor.onDidChangeModelLanguage(()=>this._update()
        ));
        this._callOnDispose.add($4PmRQ.DocumentRangeFormattingEditProviderRegistry.onDidChange(this._update, this));
    }
    dispose() {
        this._callOnDispose.dispose();
        this._callOnModel.dispose();
    }
    _update() {
        // clean up
        this._callOnModel.clear();
        // we are disabled
        if (!this.editor.getOption(47 /* formatOnPaste */ )) return;
        // no model
        if (!this.editor.hasModel()) return;
        // no formatter
        if (!$4PmRQ.DocumentRangeFormattingEditProviderRegistry.has(this.editor.getModel())) return;
        this._callOnModel.add(this.editor.onDidPaste(({ range: range  })=>this._trigger(range)
        ));
    }
    _trigger(range) {
        if (!this.editor.hasModel()) return;
        if (this.editor.getSelections().length > 1) return;
        this._instantiationService.invokeFunction($8lG9H.formatDocumentRangesWithSelectedProvider, this.editor, range, 2 /* Silent */ , $4E7vx.Progress.None, $giPcZ.CancellationToken.None).catch($gPkHZ.onUnexpectedError);
    }
};
$bd3df09480182516$var$FormatOnPaste.ID = 'editor.contrib.formatOnPaste';
$bd3df09480182516$var$FormatOnPaste = $bd3df09480182516$var$__decorate([
    $bd3df09480182516$var$__param(1, $fdGPu.IInstantiationService)
], $bd3df09480182516$var$FormatOnPaste);
class $bd3df09480182516$var$FormatDocumentAction extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: 'editor.action.formatDocument',
            label: $4dEdH.localize('formatDocument.label', "Format Document"),
            alias: 'Format Document',
            precondition: $cxCeF.ContextKeyExpr.and($ibKGQ.EditorContextKeys.notInCompositeEditor, $ibKGQ.EditorContextKeys.writable, $ibKGQ.EditorContextKeys.hasDocumentFormattingProvider),
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.editorTextFocus,
                primary: 1572 /* KeyF */ ,
                linux: {
                    primary: 3111 /* KeyI */ 
                },
                weight: 100 /* EditorContrib */ 
            },
            contextMenuOpts: {
                group: '1_modification',
                order: 1.3
            }
        });
    }
    run(accessor, editor) {
        return $bd3df09480182516$var$__awaiter(this, void 0, void 0, function*() {
            if (editor.hasModel()) {
                const instaService = accessor.get($fdGPu.IInstantiationService);
                const progressService = accessor.get($4E7vx.IEditorProgressService);
                yield progressService.showWhile(instaService.invokeFunction($8lG9H.formatDocumentWithSelectedProvider, editor, 1 /* Explicit */ , $4E7vx.Progress.None, $giPcZ.CancellationToken.None), 250);
            }
        });
    }
}
class $bd3df09480182516$var$FormatSelectionAction extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: 'editor.action.formatSelection',
            label: $4dEdH.localize('formatSelection.label', "Format Selection"),
            alias: 'Format Selection',
            precondition: $cxCeF.ContextKeyExpr.and($ibKGQ.EditorContextKeys.writable, $ibKGQ.EditorContextKeys.hasDocumentSelectionFormattingProvider),
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.editorTextFocus,
                primary: $fuc8X.KeyChord(2089 /* KeyK */ , 2084 /* KeyF */ ),
                weight: 100 /* EditorContrib */ 
            },
            contextMenuOpts: {
                when: $ibKGQ.EditorContextKeys.hasNonEmptySelection,
                group: '1_modification',
                order: 1.31
            }
        });
    }
    run(accessor, editor) {
        return $bd3df09480182516$var$__awaiter(this, void 0, void 0, function*() {
            if (!editor.hasModel()) return;
            const instaService = accessor.get($fdGPu.IInstantiationService);
            const model = editor.getModel();
            const ranges = editor.getSelections().map((range)=>{
                return range.isEmpty() ? new $d00il.Range(range.startLineNumber, 1, range.startLineNumber, model.getLineMaxColumn(range.startLineNumber)) : range;
            });
            const progressService = accessor.get($4E7vx.IEditorProgressService);
            yield progressService.showWhile(instaService.invokeFunction($8lG9H.formatDocumentRangesWithSelectedProvider, editor, ranges, 1 /* Explicit */ , $4E7vx.Progress.None, $giPcZ.CancellationToken.None), 250);
        });
    }
}
$2iJTi.registerEditorContribution($bd3df09480182516$var$FormatOnType.ID, $bd3df09480182516$var$FormatOnType);
$2iJTi.registerEditorContribution($bd3df09480182516$var$FormatOnPaste.ID, $bd3df09480182516$var$FormatOnPaste);
$2iJTi.registerEditorAction($bd3df09480182516$var$FormatDocumentAction);
$2iJTi.registerEditorAction($bd3df09480182516$var$FormatSelectionAction);
// this is the old format action that does both (format document OR format selection)
// and we keep it here such that existing keybinding configurations etc will still work
$8tcMz.CommandsRegistry.registerCommand('editor.action.format', (accessor)=>$bd3df09480182516$var$__awaiter(void 0, void 0, void 0, function*() {
        const editor = accessor.get($2Qfl0.ICodeEditorService).getFocusedCodeEditor();
        if (!editor || !editor.hasModel()) return;
        const commandService = accessor.get($8tcMz.ICommandService);
        if (editor.getSelection().isEmpty()) yield commandService.executeCommand('editor.action.formatDocument');
        else yield commandService.executeCommand('editor.action.formatSelection');
    })
);


var $367b282e34e61e21$exports = {};

var $giPcZ = parcelRequire("giPcZ");

var $bxBg7 = parcelRequire("bxBg7");

var $5OJ54 = parcelRequire("5OJ54");

var $15EOE = parcelRequire("15EOE");

var $aTkrt = parcelRequire("aTkrt");

var $kJ8UG = parcelRequire("kJ8UG");

var $giPcZ = parcelRequire("giPcZ");

var $gPkHZ = parcelRequire("gPkHZ");

var $6CAkM = parcelRequire("6CAkM");

var $askDf = parcelRequire("askDf");

var $d00il = parcelRequire("d00il");

var $4PmRQ = parcelRequire("4PmRQ");

var $6HKlt = parcelRequire("6HKlt");
class $2c061186b8e59add$export$3d0d7bb22e2f1e43 {
    remove() {
        if (this.parent) this.parent.children.delete(this.id);
    }
    static findId(candidate, container) {
        // complex id-computation which contains the origin/extension,
        // the parent path, and some dedupe logic when names collide
        let candidateId;
        if (typeof candidate === 'string') candidateId = `${container.id}/${candidate}`;
        else {
            candidateId = `${container.id}/${candidate.name}`;
            if (container.children.get(candidateId) !== undefined) candidateId = `${container.id}/${candidate.name}_${candidate.range.startLineNumber}_${candidate.range.startColumn}`;
        }
        let id = candidateId;
        for(let i = 0; container.children.get(id) !== undefined; i++)id = `${candidateId}_${i}`;
        return id;
    }
    static empty(element) {
        return element.children.size === 0;
    }
}
class $2c061186b8e59add$export$116fbcc3cc8d593 extends $2c061186b8e59add$export$3d0d7bb22e2f1e43 {
    constructor(id, parent, symbol){
        super();
        this.id = id;
        this.parent = parent;
        this.symbol = symbol;
        this.children = new Map();
    }
}
class $2c061186b8e59add$export$7979c5ef85019928 extends $2c061186b8e59add$export$3d0d7bb22e2f1e43 {
    constructor(id, parent, label, order){
        super();
        this.id = id;
        this.parent = parent;
        this.label = label;
        this.order = order;
        this.children = new Map();
    }
}
class $2c061186b8e59add$export$23911836525ed42c extends $2c061186b8e59add$export$3d0d7bb22e2f1e43 {
    constructor(uri){
        super();
        this.uri = uri;
        this.id = 'root';
        this.parent = undefined;
        this._groups = new Map();
        this.children = new Map();
        this.id = 'root';
        this.parent = undefined;
    }
    static create(textModel, token) {
        let key = this._keys.for(textModel, true);
        let data = $2c061186b8e59add$export$23911836525ed42c._requests.get(key);
        if (!data) {
            let source = new $giPcZ.CancellationTokenSource();
            data = {
                promiseCnt: 0,
                source: source,
                promise: $2c061186b8e59add$export$23911836525ed42c._create(textModel, source.token),
                model: undefined
            };
            $2c061186b8e59add$export$23911836525ed42c._requests.set(key, data);
            // keep moving average of request durations
            const now = Date.now();
            data.promise.then(()=>{
                this._requestDurations.update(textModel, Date.now() - now);
            });
        }
        if (data.model) // resolved -> return data
        return Promise.resolve(data.model);
        // increase usage counter
        data.promiseCnt += 1;
        token.onCancellationRequested(()=>{
            // last -> cancel provider request, remove cached promise
            if (--data.promiseCnt === 0) {
                data.source.cancel();
                $2c061186b8e59add$export$23911836525ed42c._requests.delete(key);
            }
        });
        return new Promise((resolve, reject)=>{
            data.promise.then((model)=>{
                data.model = model;
                resolve(model);
            }, (err)=>{
                $2c061186b8e59add$export$23911836525ed42c._requests.delete(key);
                reject(err);
            });
        });
    }
    static _create(textModel, token) {
        const cts = new $giPcZ.CancellationTokenSource(token);
        const result1 = new $2c061186b8e59add$export$23911836525ed42c(textModel.uri);
        const provider1 = $4PmRQ.DocumentSymbolProviderRegistry.ordered(textModel);
        const promises = provider1.map((provider, index)=>{
            var _a;
            let id = $2c061186b8e59add$export$3d0d7bb22e2f1e43.findId(`provider_${index}`, result1);
            let group1 = new $2c061186b8e59add$export$7979c5ef85019928(id, result1, (_a = provider.displayName) !== null && _a !== void 0 ? _a : 'Unknown Outline Provider', index);
            return Promise.resolve(provider.provideDocumentSymbols(textModel, cts.token)).then((result)=>{
                for (const info of result || [])$2c061186b8e59add$export$23911836525ed42c._makeOutlineElement(info, group1);
                return group1;
            }, (err)=>{
                $gPkHZ.onUnexpectedExternalError(err);
                return group1;
            }).then((group)=>{
                if (!$2c061186b8e59add$export$3d0d7bb22e2f1e43.empty(group)) result1._groups.set(id, group);
                else group.remove();
            });
        });
        const listener = $4PmRQ.DocumentSymbolProviderRegistry.onDidChange(()=>{
            const newProvider = $4PmRQ.DocumentSymbolProviderRegistry.ordered(textModel);
            if (!$kJ8UG.equals(newProvider, provider1)) cts.cancel();
        });
        return Promise.all(promises).then(()=>{
            if (cts.token.isCancellationRequested && !token.isCancellationRequested) return $2c061186b8e59add$export$23911836525ed42c._create(textModel, token);
            else return result1._compact();
        }).finally(()=>{
            listener.dispose();
        });
    }
    static _makeOutlineElement(info, container) {
        let id = $2c061186b8e59add$export$3d0d7bb22e2f1e43.findId(info, container);
        let res = new $2c061186b8e59add$export$116fbcc3cc8d593(id, container, info);
        if (info.children) for (const childInfo of info.children)$2c061186b8e59add$export$23911836525ed42c._makeOutlineElement(childInfo, res);
        container.children.set(res.id, res);
    }
    _compact() {
        let count = 0;
        for (const [key, group] of this._groups)if (group.children.size === 0) this._groups.delete(key);
        else count += 1;
        if (count !== 1) //
        this.children = this._groups;
        else {
            // adopt all elements of the first group
            let group = $6CAkM.Iterable.first(this._groups.values());
            for (let [, child] of group.children){
                child.parent = this;
                this.children.set(child.id, child);
            }
        }
        return this;
    }
    getTopLevelSymbols() {
        const roots = [];
        for (const child1 of this.children.values())if (child1 instanceof $2c061186b8e59add$export$116fbcc3cc8d593) roots.push(child1.symbol);
        else roots.push(...$6CAkM.Iterable.map(child1.children.values(), (child)=>child.symbol
        ));
        return roots.sort((a, b)=>$d00il.Range.compareRangesUsingStarts(a.range, b.range)
        );
    }
    asListOfDocumentSymbols() {
        const roots = this.getTopLevelSymbols();
        const bucket = [];
        $2c061186b8e59add$export$23911836525ed42c._flattenDocumentSymbols(bucket, roots, '');
        return bucket.sort((a, b)=>$d00il.Range.compareRangesUsingStarts(a.range, b.range)
        );
    }
    static _flattenDocumentSymbols(bucket, entries, overrideContainerLabel) {
        for (const entry of entries){
            bucket.push({
                kind: entry.kind,
                tags: entry.tags,
                name: entry.name,
                detail: entry.detail,
                containerName: entry.containerName || overrideContainerLabel,
                range: entry.range,
                selectionRange: entry.selectionRange,
                children: undefined
            });
            // Recurse over children
            if (entry.children) $2c061186b8e59add$export$23911836525ed42c._flattenDocumentSymbols(bucket, entry.children, entry.name);
        }
    }
}
$2c061186b8e59add$export$23911836525ed42c._requestDurations = new $6HKlt.LanguageFeatureRequestDelays($4PmRQ.DocumentSymbolProviderRegistry, 350);
$2c061186b8e59add$export$23911836525ed42c._requests = new $askDf.LRUCache(9, 0.75);
$2c061186b8e59add$export$23911836525ed42c._keys = new class {
    constructor(){
        this._counter = 1;
        this._data = new WeakMap();
    }
    for(textModel, version) {
        return `${textModel.id}/${version ? textModel.getVersionId() : ''}/${this._hash($4PmRQ.DocumentSymbolProviderRegistry.all(textModel))}`;
    }
    _hash(providers) {
        let result = '';
        for (const provider of providers){
            let n = this._data.get(provider);
            if (typeof n === 'undefined') {
                n = this._counter++;
                this._data.set(provider, n);
            }
            result += n;
        }
        return result;
    }
};



var $8tcMz = parcelRequire("8tcMz");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $367b282e34e61e21$var$__awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
function $367b282e34e61e21$export$3f84b717c20d8445(document, flat, token) {
    return $367b282e34e61e21$var$__awaiter(this, void 0, void 0, function*() {
        const model = yield $2c061186b8e59add$export$23911836525ed42c.create(document, token);
        return flat ? model.asListOfDocumentSymbols() : model.getTopLevelSymbols();
    });
}
$8tcMz.CommandsRegistry.registerCommand('_executeDocumentSymbolProvider', function(accessor, ...args) {
    return $367b282e34e61e21$var$__awaiter(this, void 0, void 0, function*() {
        const [resource] = args;
        $bxBg7.assertType($5OJ54.URI.isUri(resource));
        const model = accessor.get($15EOE.IModelService).getModel(resource);
        if (model) return $367b282e34e61e21$export$3f84b717c20d8445(model, false, $giPcZ.CancellationToken.None);
        const reference = yield accessor.get($aTkrt.ITextModelService).createModelReference(resource);
        try {
            return yield $367b282e34e61e21$export$3f84b717c20d8445(reference.object.textEditorModel, false, $giPcZ.CancellationToken.None);
        } finally{
            reference.dispose();
        }
    });
});








var $9cWcn = parcelRequire("9cWcn");

var $jcr1R = parcelRequire("jcr1R");

var $2iJTi = parcelRequire("2iJTi");

var $9S8HY = parcelRequire("9S8HY");

var $kHJv6 = parcelRequire("kHJv6");

var $d00il = parcelRequire("d00il");

var $jzicX = parcelRequire("jzicX");

var $ibKGQ = parcelRequire("ibKGQ");

var $91ntV = parcelRequire("91ntV");

var $aKdIg = parcelRequire("aKdIg");

var $15EOE = parcelRequire("15EOE");
function $8ae880360e3f914c$export$e83f2438bfbc9f9b(str, tabSize) {
    let spacesCnt = 0;
    for(let i = 0; i < str.length; i++)if (str.charAt(i) === '\t') spacesCnt += tabSize;
    else spacesCnt++;
    return spacesCnt;
}
function $8ae880360e3f914c$export$f2011d4fc9157d6f(spacesCnt, tabSize, insertSpaces) {
    spacesCnt = spacesCnt < 0 ? 0 : spacesCnt;
    let result = '';
    if (!insertSpaces) {
        let tabsCnt = Math.floor(spacesCnt / tabSize);
        spacesCnt = spacesCnt % tabSize;
        for(let i = 0; i < tabsCnt; i++)result += '\t';
    }
    for(let i = 0; i < spacesCnt; i++)result += ' ';
    return result;
}



var $4dEdH = parcelRequire("4dEdH");

var $3XkzC = parcelRequire("3XkzC");
function $a4bec03633533726$export$b3e439d1bd7f9479(model, startLineNumber, endLineNumber, inheritedIndent) {
    if (model.getLineCount() === 1 && model.getLineMaxColumn(1) === 1) // Model is empty
    return [];
    const indentationRules = $aKdIg.LanguageConfigurationRegistry.getIndentationRules(model.getLanguageId());
    if (!indentationRules) return [];
    endLineNumber = Math.min(endLineNumber, model.getLineCount());
    // Skip `unIndentedLinePattern` lines
    while(startLineNumber <= endLineNumber){
        if (!indentationRules.unIndentedLinePattern) break;
        let text = model.getLineContent(startLineNumber);
        if (!indentationRules.unIndentedLinePattern.test(text)) break;
        startLineNumber++;
    }
    if (startLineNumber > endLineNumber - 1) return [];
    const { tabSize: tabSize , indentSize: indentSize , insertSpaces: insertSpaces  } = model.getOptions();
    const shiftIndent = (indentation, count)=>{
        count = count || 1;
        return $9S8HY.ShiftCommand.shiftIndent(indentation, indentation.length + count, tabSize, indentSize, insertSpaces);
    };
    const unshiftIndent = (indentation, count)=>{
        count = count || 1;
        return $9S8HY.ShiftCommand.unshiftIndent(indentation, indentation.length + count, tabSize, indentSize, insertSpaces);
    };
    let indentEdits = [];
    // indentation being passed to lines below
    let globalIndent;
    // Calculate indentation for the first line
    // If there is no passed-in indentation, we use the indentation of the first line as base.
    let currentLineText = model.getLineContent(startLineNumber);
    let adjustedLineContent = currentLineText;
    if (inheritedIndent !== undefined && inheritedIndent !== null) {
        globalIndent = inheritedIndent;
        let oldIndentation = $jcr1R.getLeadingWhitespace(currentLineText);
        adjustedLineContent = globalIndent + currentLineText.substring(oldIndentation.length);
        if (indentationRules.decreaseIndentPattern && indentationRules.decreaseIndentPattern.test(adjustedLineContent)) {
            globalIndent = unshiftIndent(globalIndent);
            adjustedLineContent = globalIndent + currentLineText.substring(oldIndentation.length);
        }
        if (currentLineText !== adjustedLineContent) indentEdits.push($kHJv6.EditOperation.replaceMove(new $jzicX.Selection(startLineNumber, 1, startLineNumber, oldIndentation.length + 1), $91ntV.TextModel.normalizeIndentation(globalIndent, indentSize, insertSpaces)));
    } else globalIndent = $jcr1R.getLeadingWhitespace(currentLineText);
    // idealIndentForNextLine doesn't equal globalIndent when there is a line matching `indentNextLinePattern`.
    let idealIndentForNextLine = globalIndent;
    if (indentationRules.increaseIndentPattern && indentationRules.increaseIndentPattern.test(adjustedLineContent)) {
        idealIndentForNextLine = shiftIndent(idealIndentForNextLine);
        globalIndent = shiftIndent(globalIndent);
    } else if (indentationRules.indentNextLinePattern && indentationRules.indentNextLinePattern.test(adjustedLineContent)) idealIndentForNextLine = shiftIndent(idealIndentForNextLine);
    startLineNumber++;
    // Calculate indentation adjustment for all following lines
    for(let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++){
        let text = model.getLineContent(lineNumber);
        let oldIndentation = $jcr1R.getLeadingWhitespace(text);
        let adjustedLineContent = idealIndentForNextLine + text.substring(oldIndentation.length);
        if (indentationRules.decreaseIndentPattern && indentationRules.decreaseIndentPattern.test(adjustedLineContent)) {
            idealIndentForNextLine = unshiftIndent(idealIndentForNextLine);
            globalIndent = unshiftIndent(globalIndent);
        }
        if (oldIndentation !== idealIndentForNextLine) indentEdits.push($kHJv6.EditOperation.replaceMove(new $jzicX.Selection(lineNumber, 1, lineNumber, oldIndentation.length + 1), $91ntV.TextModel.normalizeIndentation(idealIndentForNextLine, indentSize, insertSpaces)));
        // calculate idealIndentForNextLine
        if (indentationRules.unIndentedLinePattern && indentationRules.unIndentedLinePattern.test(text)) continue;
        else if (indentationRules.increaseIndentPattern && indentationRules.increaseIndentPattern.test(adjustedLineContent)) {
            globalIndent = shiftIndent(globalIndent);
            idealIndentForNextLine = globalIndent;
        } else if (indentationRules.indentNextLinePattern && indentationRules.indentNextLinePattern.test(adjustedLineContent)) idealIndentForNextLine = shiftIndent(idealIndentForNextLine);
        else idealIndentForNextLine = globalIndent;
    }
    return indentEdits;
}
class $a4bec03633533726$export$23df39ff30c2cbb4 extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: $a4bec03633533726$export$23df39ff30c2cbb4.ID,
            label: $4dEdH.localize('indentationToSpaces', "Convert Indentation to Spaces"),
            alias: 'Convert Indentation to Spaces',
            precondition: $ibKGQ.EditorContextKeys.writable
        });
    }
    run(accessor, editor) {
        let model = editor.getModel();
        if (!model) return;
        let modelOpts = model.getOptions();
        let selection = editor.getSelection();
        if (!selection) return;
        const command = new $a4bec03633533726$export$3085c18d982e32ff(selection, modelOpts.tabSize);
        editor.pushUndoStop();
        editor.executeCommands(this.id, [
            command
        ]);
        editor.pushUndoStop();
        model.updateOptions({
            insertSpaces: true
        });
    }
}
$a4bec03633533726$export$23df39ff30c2cbb4.ID = 'editor.action.indentationToSpaces';
class $a4bec03633533726$export$2bccca385c69c5fb extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: $a4bec03633533726$export$2bccca385c69c5fb.ID,
            label: $4dEdH.localize('indentationToTabs', "Convert Indentation to Tabs"),
            alias: 'Convert Indentation to Tabs',
            precondition: $ibKGQ.EditorContextKeys.writable
        });
    }
    run(accessor, editor) {
        let model = editor.getModel();
        if (!model) return;
        let modelOpts = model.getOptions();
        let selection = editor.getSelection();
        if (!selection) return;
        const command = new $a4bec03633533726$export$2a6e9e59679d870(selection, modelOpts.tabSize);
        editor.pushUndoStop();
        editor.executeCommands(this.id, [
            command
        ]);
        editor.pushUndoStop();
        model.updateOptions({
            insertSpaces: false
        });
    }
}
$a4bec03633533726$export$2bccca385c69c5fb.ID = 'editor.action.indentationToTabs';
class $a4bec03633533726$export$80abaa81d6d4fae0 extends $2iJTi.EditorAction {
    constructor(insertSpaces, opts){
        super(opts);
        this.insertSpaces = insertSpaces;
    }
    run(accessor, editor) {
        const quickInputService = accessor.get($3XkzC.IQuickInputService);
        const modelService = accessor.get($15EOE.IModelService);
        let model = editor.getModel();
        if (!model) return;
        const creationOpts = modelService.getCreationOptions(model.getLanguageId(), model.uri, model.isForSimpleWidget);
        const picks = [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8
        ].map((n)=>({
                id: n.toString(),
                label: n.toString(),
                // add description for tabSize value set in the configuration
                description: n === creationOpts.tabSize ? $4dEdH.localize('configuredTabSize', "Configured Tab Size") : undefined
            })
        );
        // auto focus the tabSize set for the current editor
        const autoFocusIndex = Math.min(model.getOptions().tabSize - 1, 7);
        setTimeout(()=>{
            quickInputService.pick(picks, {
                placeHolder: $4dEdH.localize({
                    key: 'selectTabWidth',
                    comment: [
                        'Tab corresponds to the tab key'
                    ]
                }, "Select Tab Size for Current File"),
                activeItem: picks[autoFocusIndex]
            }).then((pick)=>{
                if (pick) {
                    if (model && !model.isDisposed()) model.updateOptions({
                        tabSize: parseInt(pick.label, 10),
                        insertSpaces: this.insertSpaces
                    });
                }
            });
        }, 50 /* quick input is sensitive to being opened so soon after another */ );
    }
}
class $a4bec03633533726$export$838aef8de6435fda extends $a4bec03633533726$export$80abaa81d6d4fae0 {
    constructor(){
        super(false, {
            id: $a4bec03633533726$export$838aef8de6435fda.ID,
            label: $4dEdH.localize('indentUsingTabs', "Indent Using Tabs"),
            alias: 'Indent Using Tabs',
            precondition: undefined
        });
    }
}
$a4bec03633533726$export$838aef8de6435fda.ID = 'editor.action.indentUsingTabs';
class $a4bec03633533726$export$63083e2212f94950 extends $a4bec03633533726$export$80abaa81d6d4fae0 {
    constructor(){
        super(true, {
            id: $a4bec03633533726$export$63083e2212f94950.ID,
            label: $4dEdH.localize('indentUsingSpaces', "Indent Using Spaces"),
            alias: 'Indent Using Spaces',
            precondition: undefined
        });
    }
}
$a4bec03633533726$export$63083e2212f94950.ID = 'editor.action.indentUsingSpaces';
class $a4bec03633533726$export$2352183caa01d2b1 extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: $a4bec03633533726$export$2352183caa01d2b1.ID,
            label: $4dEdH.localize('detectIndentation', "Detect Indentation from Content"),
            alias: 'Detect Indentation from Content',
            precondition: undefined
        });
    }
    run(accessor, editor) {
        const modelService = accessor.get($15EOE.IModelService);
        let model = editor.getModel();
        if (!model) return;
        const creationOpts = modelService.getCreationOptions(model.getLanguageId(), model.uri, model.isForSimpleWidget);
        model.detectIndentation(creationOpts.insertSpaces, creationOpts.tabSize);
    }
}
$a4bec03633533726$export$2352183caa01d2b1.ID = 'editor.action.detectIndentation';
class $a4bec03633533726$export$c4e59949ff243a9f extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: 'editor.action.reindentlines',
            label: $4dEdH.localize('editor.reindentlines', "Reindent Lines"),
            alias: 'Reindent Lines',
            precondition: $ibKGQ.EditorContextKeys.writable
        });
    }
    run(accessor, editor) {
        let model = editor.getModel();
        if (!model) return;
        let edits = $a4bec03633533726$export$b3e439d1bd7f9479(model, 1, model.getLineCount());
        if (edits.length > 0) {
            editor.pushUndoStop();
            editor.executeEdits(this.id, edits);
            editor.pushUndoStop();
        }
    }
}
class $a4bec03633533726$export$3ebdbd7c48e4ea25 extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: 'editor.action.reindentselectedlines',
            label: $4dEdH.localize('editor.reindentselectedlines', "Reindent Selected Lines"),
            alias: 'Reindent Selected Lines',
            precondition: $ibKGQ.EditorContextKeys.writable
        });
    }
    run(accessor, editor) {
        let model = editor.getModel();
        if (!model) return;
        let selections = editor.getSelections();
        if (selections === null) return;
        let edits = [];
        for (let selection of selections){
            let startLineNumber = selection.startLineNumber;
            let endLineNumber = selection.endLineNumber;
            if (startLineNumber !== endLineNumber && selection.endColumn === 1) endLineNumber--;
            if (startLineNumber === 1) {
                if (startLineNumber === endLineNumber) continue;
            } else startLineNumber--;
            let editOperations = $a4bec03633533726$export$b3e439d1bd7f9479(model, startLineNumber, endLineNumber);
            edits.push(...editOperations);
        }
        if (edits.length > 0) {
            editor.pushUndoStop();
            editor.executeEdits(this.id, edits);
            editor.pushUndoStop();
        }
    }
}
class $a4bec03633533726$export$64afcb2e2db7c353 {
    constructor(edits, initialSelection){
        this._initialSelection = initialSelection;
        this._edits = [];
        this._selectionId = null;
        for (let edit of edits)if (edit.range && typeof edit.text === 'string') this._edits.push(edit);
    }
    getEditOperations(model, builder) {
        for (let edit of this._edits)builder.addEditOperation($d00il.Range.lift(edit.range), edit.text);
        let selectionIsSet = false;
        if (Array.isArray(this._edits) && this._edits.length === 1 && this._initialSelection.isEmpty()) {
            if (this._edits[0].range.startColumn === this._initialSelection.endColumn && this._edits[0].range.startLineNumber === this._initialSelection.endLineNumber) {
                selectionIsSet = true;
                this._selectionId = builder.trackSelection(this._initialSelection, true);
            } else if (this._edits[0].range.endColumn === this._initialSelection.startColumn && this._edits[0].range.endLineNumber === this._initialSelection.startLineNumber) {
                selectionIsSet = true;
                this._selectionId = builder.trackSelection(this._initialSelection, false);
            }
        }
        if (!selectionIsSet) this._selectionId = builder.trackSelection(this._initialSelection);
    }
    computeCursorState(model, helper) {
        return helper.getTrackedSelection(this._selectionId);
    }
}
class $a4bec03633533726$export$6fc01df139454e78 {
    constructor(editor){
        this.callOnDispose = new $9cWcn.DisposableStore();
        this.callOnModel = new $9cWcn.DisposableStore();
        this.editor = editor;
        this.callOnDispose.add(editor.onDidChangeConfiguration(()=>this.update()
        ));
        this.callOnDispose.add(editor.onDidChangeModel(()=>this.update()
        ));
        this.callOnDispose.add(editor.onDidChangeModelLanguage(()=>this.update()
        ));
    }
    update() {
        // clean up
        this.callOnModel.clear();
        // we are disabled
        if (this.editor.getOption(9 /* autoIndent */ ) < 4 /* Full */  || this.editor.getOption(47 /* formatOnPaste */ )) return;
        // no model
        if (!this.editor.hasModel()) return;
        this.callOnModel.add(this.editor.onDidPaste(({ range: range  })=>{
            this.trigger(range);
        }));
    }
    trigger(range) {
        let selections = this.editor.getSelections();
        if (selections === null || selections.length > 1) return;
        const model = this.editor.getModel();
        if (!model) return;
        if (!model.isCheapToTokenize(range.getStartPosition().lineNumber)) return;
        const autoIndent = this.editor.getOption(9 /* autoIndent */ );
        const { tabSize: tabSize , indentSize: indentSize , insertSpaces: insertSpaces  } = model.getOptions();
        let textEdits = [];
        let indentConverter = {
            shiftIndent: (indentation)=>{
                return $9S8HY.ShiftCommand.shiftIndent(indentation, indentation.length + 1, tabSize, indentSize, insertSpaces);
            },
            unshiftIndent: (indentation)=>{
                return $9S8HY.ShiftCommand.unshiftIndent(indentation, indentation.length + 1, tabSize, indentSize, insertSpaces);
            }
        };
        let startLineNumber = range.startLineNumber;
        while(startLineNumber <= range.endLineNumber){
            if (this.shouldIgnoreLine(model, startLineNumber)) {
                startLineNumber++;
                continue;
            }
            break;
        }
        if (startLineNumber > range.endLineNumber) return;
        let firstLineText = model.getLineContent(startLineNumber);
        if (!/\S/.test(firstLineText.substring(0, range.startColumn - 1))) {
            const indentOfFirstLine = $aKdIg.LanguageConfigurationRegistry.getGoodIndentForLine(autoIndent, model, model.getLanguageId(), startLineNumber, indentConverter);
            if (indentOfFirstLine !== null) {
                let oldIndentation = $jcr1R.getLeadingWhitespace(firstLineText);
                let newSpaceCnt = $8ae880360e3f914c$export$e83f2438bfbc9f9b(indentOfFirstLine, tabSize);
                let oldSpaceCnt = $8ae880360e3f914c$export$e83f2438bfbc9f9b(oldIndentation, tabSize);
                if (newSpaceCnt !== oldSpaceCnt) {
                    let newIndent = $8ae880360e3f914c$export$f2011d4fc9157d6f(newSpaceCnt, tabSize, insertSpaces);
                    textEdits.push({
                        range: new $d00il.Range(startLineNumber, 1, startLineNumber, oldIndentation.length + 1),
                        text: newIndent
                    });
                    firstLineText = newIndent + firstLineText.substr(oldIndentation.length);
                } else {
                    let indentMetadata = $aKdIg.LanguageConfigurationRegistry.getIndentMetadata(model, startLineNumber);
                    if (indentMetadata === 0 || indentMetadata === 8 /* UNINDENT_MASK */ ) // we paste content into a line where only contains whitespaces
                    // after pasting, the indentation of the first line is already correct
                    // the first line doesn't match any indentation rule
                    // then no-op.
                    return;
                }
            }
        }
        const firstLineNumber = startLineNumber;
        // ignore empty or ignored lines
        while(startLineNumber < range.endLineNumber){
            if (!/\S/.test(model.getLineContent(startLineNumber + 1))) {
                startLineNumber++;
                continue;
            }
            break;
        }
        if (startLineNumber !== range.endLineNumber) {
            let virtualModel = {
                getLineTokens: (lineNumber)=>{
                    return model.getLineTokens(lineNumber);
                },
                getLanguageId: ()=>{
                    return model.getLanguageId();
                },
                getLanguageIdAtPosition: (lineNumber, column)=>{
                    return model.getLanguageIdAtPosition(lineNumber, column);
                },
                getLineContent: (lineNumber)=>{
                    if (lineNumber === firstLineNumber) return firstLineText;
                    else return model.getLineContent(lineNumber);
                }
            };
            let indentOfSecondLine = $aKdIg.LanguageConfigurationRegistry.getGoodIndentForLine(autoIndent, virtualModel, model.getLanguageId(), startLineNumber + 1, indentConverter);
            if (indentOfSecondLine !== null) {
                let newSpaceCntOfSecondLine = $8ae880360e3f914c$export$e83f2438bfbc9f9b(indentOfSecondLine, tabSize);
                let oldSpaceCntOfSecondLine = $8ae880360e3f914c$export$e83f2438bfbc9f9b($jcr1R.getLeadingWhitespace(model.getLineContent(startLineNumber + 1)), tabSize);
                if (newSpaceCntOfSecondLine !== oldSpaceCntOfSecondLine) {
                    let spaceCntOffset = newSpaceCntOfSecondLine - oldSpaceCntOfSecondLine;
                    for(let i = startLineNumber + 1; i <= range.endLineNumber; i++){
                        let lineContent = model.getLineContent(i);
                        let originalIndent = $jcr1R.getLeadingWhitespace(lineContent);
                        let originalSpacesCnt = $8ae880360e3f914c$export$e83f2438bfbc9f9b(originalIndent, tabSize);
                        let newSpacesCnt = originalSpacesCnt + spaceCntOffset;
                        let newIndent = $8ae880360e3f914c$export$f2011d4fc9157d6f(newSpacesCnt, tabSize, insertSpaces);
                        if (newIndent !== originalIndent) textEdits.push({
                            range: new $d00il.Range(i, 1, i, originalIndent.length + 1),
                            text: newIndent
                        });
                    }
                }
            }
        }
        if (textEdits.length > 0) {
            this.editor.pushUndoStop();
            let cmd = new $a4bec03633533726$export$64afcb2e2db7c353(textEdits, this.editor.getSelection());
            this.editor.executeCommand('autoIndentOnPaste', cmd);
            this.editor.pushUndoStop();
        }
    }
    shouldIgnoreLine(model, lineNumber) {
        model.forceTokenization(lineNumber);
        let nonWhitespaceColumn = model.getLineFirstNonWhitespaceColumn(lineNumber);
        if (nonWhitespaceColumn === 0) return true;
        let tokens = model.getLineTokens(lineNumber);
        if (tokens.getCount() > 0) {
            let firstNonWhitespaceTokenIndex = tokens.findTokenIndexAtOffset(nonWhitespaceColumn);
            if (firstNonWhitespaceTokenIndex >= 0 && tokens.getStandardTokenType(firstNonWhitespaceTokenIndex) === 1 /* Comment */ ) return true;
        }
        return false;
    }
    dispose() {
        this.callOnDispose.dispose();
        this.callOnModel.dispose();
    }
}
$a4bec03633533726$export$6fc01df139454e78.ID = 'editor.contrib.autoIndentOnPaste';
function $a4bec03633533726$var$getIndentationEditOperations(model, builder, tabSize, tabsToSpaces) {
    if (model.getLineCount() === 1 && model.getLineMaxColumn(1) === 1) // Model is empty
    return;
    let spaces = '';
    for(let i = 0; i < tabSize; i++)spaces += ' ';
    let spacesRegExp = new RegExp(spaces, 'gi');
    for(let lineNumber = 1, lineCount = model.getLineCount(); lineNumber <= lineCount; lineNumber++){
        let lastIndentationColumn = model.getLineFirstNonWhitespaceColumn(lineNumber);
        if (lastIndentationColumn === 0) lastIndentationColumn = model.getLineMaxColumn(lineNumber);
        if (lastIndentationColumn === 1) continue;
        const originalIndentationRange = new $d00il.Range(lineNumber, 1, lineNumber, lastIndentationColumn);
        const originalIndentation = model.getValueInRange(originalIndentationRange);
        const newIndentation = tabsToSpaces ? originalIndentation.replace(/\t/ig, spaces) : originalIndentation.replace(spacesRegExp, '\t');
        builder.addEditOperation(originalIndentationRange, newIndentation);
    }
}
class $a4bec03633533726$export$3085c18d982e32ff {
    constructor(selection, tabSize){
        this.selection = selection;
        this.tabSize = tabSize;
        this.selectionId = null;
    }
    getEditOperations(model, builder) {
        this.selectionId = builder.trackSelection(this.selection);
        $a4bec03633533726$var$getIndentationEditOperations(model, builder, this.tabSize, true);
    }
    computeCursorState(model, helper) {
        return helper.getTrackedSelection(this.selectionId);
    }
}
class $a4bec03633533726$export$2a6e9e59679d870 {
    constructor(selection, tabSize){
        this.selection = selection;
        this.tabSize = tabSize;
        this.selectionId = null;
    }
    getEditOperations(model, builder) {
        this.selectionId = builder.trackSelection(this.selection);
        $a4bec03633533726$var$getIndentationEditOperations(model, builder, this.tabSize, false);
    }
    computeCursorState(model, helper) {
        return helper.getTrackedSelection(this.selectionId);
    }
}
$2iJTi.registerEditorContribution($a4bec03633533726$export$6fc01df139454e78.ID, $a4bec03633533726$export$6fc01df139454e78);
$2iJTi.registerEditorAction($a4bec03633533726$export$23df39ff30c2cbb4);
$2iJTi.registerEditorAction($a4bec03633533726$export$2bccca385c69c5fb);
$2iJTi.registerEditorAction($a4bec03633533726$export$838aef8de6435fda);
$2iJTi.registerEditorAction($a4bec03633533726$export$63083e2212f94950);
$2iJTi.registerEditorAction($a4bec03633533726$export$2352183caa01d2b1);
$2iJTi.registerEditorAction($a4bec03633533726$export$c4e59949ff243a9f);
$2iJTi.registerEditorAction($a4bec03633533726$export$3ebdbd7c48e4ea25);


var $14d28a24bdcef1bf$exports = {};

var $6bXyA = parcelRequire("6bXyA");

var $giPcZ = parcelRequire("giPcZ");

var $gPkHZ = parcelRequire("gPkHZ");

var $9cWcn = parcelRequire("9cWcn");

var $askDf = parcelRequire("askDf");

var $bxBg7 = parcelRequire("bxBg7");

var $5OJ54 = parcelRequire("5OJ54");

var $loznH = parcelRequire("loznH");

var $2iJTi = parcelRequire("2iJTi");

var $cd4KD = parcelRequire("cd4KD");

var $dcxQ7 = parcelRequire("dcxQ7");

var $d00il = parcelRequire("d00il");

var $4PmRQ = parcelRequire("4PmRQ");

var $6HKlt = parcelRequire("6HKlt");

var $aTkrt = parcelRequire("aTkrt");

var $8tcMz = parcelRequire("8tcMz");

var $gaWeX = parcelRequire("gaWeX");

var $azIPz = parcelRequire("azIPz");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $14d28a24bdcef1bf$var$__awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
const $14d28a24bdcef1bf$var$MAX_DECORATORS = 1500;
class $14d28a24bdcef1bf$var$RequestMap {
    constructor(){
        this._data = new $askDf.ResourceMap();
    }
    push(model, provider) {
        const value = this._data.get(model.uri);
        if (value === undefined) this._data.set(model.uri, new Set([
            provider
        ]));
        else value.add(provider);
    }
    pop(model, provider) {
        const value = this._data.get(model.uri);
        if (value) {
            value.delete(provider);
            if (value.size === 0) this._data.delete(model.uri);
        }
    }
    has(model, provider) {
        var _a;
        return Boolean((_a = this._data.get(model.uri)) === null || _a === void 0 ? void 0 : _a.has(provider));
    }
}
function $14d28a24bdcef1bf$export$50bf42d7deea549c(model, ranges, requests, token) {
    return $14d28a24bdcef1bf$var$__awaiter(this, void 0, void 0, function*() {
        const all = [];
        const providers = $4PmRQ.InlayHintsProviderRegistry.ordered(model).reverse();
        const promises = providers.map((provider)=>ranges.map((range)=>$14d28a24bdcef1bf$var$__awaiter(this, void 0, void 0, function*() {
                    try {
                        requests.push(model, provider);
                        const result = yield provider.provideInlayHints(model, range, token);
                        if (result === null || result === void 0 ? void 0 : result.length) all.push(result.filter((hint)=>range.containsPosition(hint.position)
                        ));
                    } catch (err) {
                        $gPkHZ.onUnexpectedExternalError(err);
                    } finally{
                        requests.pop(model, provider);
                    }
                })
            )
        );
        yield Promise.all(promises.flat());
        return all.flat().sort((a, b)=>$dcxQ7.Position.compare(a.position, b.position)
        );
    });
}
class $14d28a24bdcef1bf$var$InlayHintsCache {
    constructor(){
        this._entries = new $askDf.LRUCache(50);
    }
    get(model) {
        const key = $14d28a24bdcef1bf$var$InlayHintsCache._key(model);
        return this._entries.get(key);
    }
    set(model, value) {
        const key = $14d28a24bdcef1bf$var$InlayHintsCache._key(model);
        this._entries.set(key, value);
    }
    static _key(model) {
        return `${model.uri.toString()}/${model.getVersionId()}`;
    }
}
class $14d28a24bdcef1bf$export$c42ac128db3942ca {
    constructor(_editor){
        this._editor = _editor;
        this._decorationOwnerId = ++$14d28a24bdcef1bf$export$c42ac128db3942ca._decorationOwnerIdPool;
        this._disposables = new $9cWcn.DisposableStore();
        this._sessionDisposables = new $9cWcn.DisposableStore();
        this._getInlayHintsDelays = new $6HKlt.LanguageFeatureRequestDelays($4PmRQ.InlayHintsProviderRegistry, 25, 500);
        this._cache = new $14d28a24bdcef1bf$var$InlayHintsCache();
        this._decorationsMetadata = new Map();
        this._ruleFactory = new $loznH.DynamicCssRules(this._editor);
        this._disposables.add($4PmRQ.InlayHintsProviderRegistry.onDidChange(()=>this._update()
        ));
        this._disposables.add(_editor.onDidChangeModel(()=>this._update()
        ));
        this._disposables.add(_editor.onDidChangeModelLanguage(()=>this._update()
        ));
        this._disposables.add(_editor.onDidChangeConfiguration((e)=>{
            if (e.hasChanged(126 /* inlayHints */ )) this._update();
        }));
        this._update();
    }
    dispose() {
        this._sessionDisposables.dispose();
        this._removeAllDecorations();
        this._disposables.dispose();
    }
    _update() {
        this._sessionDisposables.clear();
        this._removeAllDecorations();
        if (!this._editor.getOption(126 /* inlayHints */ ).enabled) return;
        const model = this._editor.getModel();
        if (!model || !$4PmRQ.InlayHintsProviderRegistry.has(model)) return;
        // iff possible, quickly update from cache
        const cached = this._cache.get(model);
        if (cached) this._updateHintsDecorators([
            model.getFullModelRange()
        ], cached);
        const requests = new $14d28a24bdcef1bf$var$RequestMap();
        const scheduler = new $6bXyA.RunOnceScheduler(()=>$14d28a24bdcef1bf$var$__awaiter(this, void 0, void 0, function*() {
                const t1 = Date.now();
                const cts = new $giPcZ.CancellationTokenSource();
                this._sessionDisposables.add($9cWcn.toDisposable(()=>cts.dispose(true)
                ));
                const ranges = this._getHintsRanges();
                const result = yield $14d28a24bdcef1bf$export$50bf42d7deea549c(model, ranges, requests, cts.token);
                scheduler.delay = this._getInlayHintsDelays.update(model, Date.now() - t1);
                if (cts.token.isCancellationRequested) return;
                this._updateHintsDecorators(ranges, result);
                this._cache.set(model, Array.from(this._decorationsMetadata.values()).map((obj)=>obj.hint
                ));
            })
        , this._getInlayHintsDelays.get(model));
        this._sessionDisposables.add(scheduler);
        // update inline hints when content or scroll position changes
        this._sessionDisposables.add(this._editor.onDidChangeModelContent(()=>scheduler.schedule()
        ));
        this._sessionDisposables.add(this._editor.onDidScrollChange(()=>scheduler.schedule()
        ));
        scheduler.schedule();
        // update inline hints when any any provider fires an event
        const providerListener = new $9cWcn.DisposableStore();
        this._sessionDisposables.add(providerListener);
        for (const provider of $4PmRQ.InlayHintsProviderRegistry.all(model))if (typeof provider.onDidChangeInlayHints === 'function') providerListener.add(provider.onDidChangeInlayHints(()=>{
            if (!requests.has(model, provider)) scheduler.schedule();
        }));
    }
    _getHintsRanges() {
        const extra = 30;
        const model = this._editor.getModel();
        const visibleRanges = this._editor.getVisibleRangesPlusViewportAboveBelow();
        const result = [];
        for (const range of visibleRanges.sort($d00il.Range.compareRangesUsingStarts)){
            const extendedRange = model.validateRange(new $d00il.Range(range.startLineNumber - extra, range.startColumn, range.endLineNumber + extra, range.endColumn));
            if (result.length === 0 || !$d00il.Range.areIntersectingOrTouching(result[result.length - 1], extendedRange)) result.push(extendedRange);
            else result[result.length - 1] = $d00il.Range.plusRange(result[result.length - 1], extendedRange);
        }
        return result;
    }
    _updateHintsDecorators(ranges, hints) {
        const { fontSize: fontSize , fontFamily: fontFamily  } = this._getLayoutInfo();
        const model = this._editor.getModel();
        const newDecorationsData = [];
        const fontFamilyVar = '--code-editorInlayHintsFontFamily';
        this._editor.getContainerDomNode().style.setProperty(fontFamilyVar, fontFamily);
        for (const hint of hints){
            const { text: text , position: position , whitespaceBefore: whitespaceBefore , whitespaceAfter: whitespaceAfter  } = hint;
            const marginBefore = whitespaceBefore ? fontSize / 3 | 0 : 0;
            const marginAfter = whitespaceAfter ? fontSize / 3 | 0 : 0;
            let backgroundColor;
            let color;
            if (hint.kind === $4PmRQ.InlayHintKind.Parameter) {
                backgroundColor = $azIPz.themeColorFromId($gaWeX.editorInlayHintParameterBackground);
                color = $azIPz.themeColorFromId($gaWeX.editorInlayHintParameterForeground);
            } else if (hint.kind === $4PmRQ.InlayHintKind.Type) {
                backgroundColor = $azIPz.themeColorFromId($gaWeX.editorInlayHintTypeBackground);
                color = $azIPz.themeColorFromId($gaWeX.editorInlayHintTypeForeground);
            } else {
                backgroundColor = $azIPz.themeColorFromId($gaWeX.editorInlayHintBackground);
                color = $azIPz.themeColorFromId($gaWeX.editorInlayHintForeground);
            }
            const classNameRef = this._ruleFactory.createClassNameRef({
                fontSize: `${fontSize}px`,
                margin: `0px ${marginAfter}px 0px ${marginBefore}px`,
                fontFamily: `var(${fontFamilyVar}), ${$cd4KD.EDITOR_FONT_DEFAULTS.fontFamily}`,
                padding: `1px ${Math.max(1, fontSize / 4) | 0}px`,
                borderRadius: `${fontSize / 4 | 0}px`,
                verticalAlign: 'middle',
                backgroundColor: backgroundColor,
                color: color
            });
            let direction = 'before';
            let range = $d00il.Range.fromPositions(position);
            let word = model.getWordAtPosition(position);
            let usesWordRange = false;
            if (word) {
                if (word.endColumn === position.column) {
                    direction = 'after';
                    usesWordRange = true;
                    range = $14d28a24bdcef1bf$var$wordToRange(word, position.lineNumber);
                } else if (word.startColumn === position.column) {
                    usesWordRange = true;
                    range = $14d28a24bdcef1bf$var$wordToRange(word, position.lineNumber);
                }
            }
            newDecorationsData.push({
                decoration: {
                    range: range,
                    options: {
                        [direction]: {
                            content: $14d28a24bdcef1bf$var$fixSpace(text),
                            inlineClassNameAffectsLetterSpacing: true,
                            inlineClassName: classNameRef.className
                        },
                        description: 'InlayHint',
                        showIfCollapsed: !usesWordRange,
                        stickiness: 0 /* AlwaysGrowsWhenTypingAtEdges */ 
                    }
                },
                classNameRef: classNameRef
            });
            if (newDecorationsData.length > $14d28a24bdcef1bf$var$MAX_DECORATORS) break;
        }
        // collect all decoration ids that are affected by the ranges
        // and only update those decorations
        const decorationIdsToReplace = [];
        for (const range of ranges)for (const { id: id  } of model.getDecorationsInRange(range, this._decorationOwnerId, true)){
            const metadata = this._decorationsMetadata.get(id);
            if (metadata) {
                decorationIdsToReplace.push(id);
                metadata.classNameRef.dispose();
                this._decorationsMetadata.delete(id);
            }
        }
        const newDecorationIds = model.deltaDecorations(decorationIdsToReplace, newDecorationsData.map((d)=>d.decoration
        ), this._decorationOwnerId);
        for(let i = 0; i < newDecorationIds.length; i++)this._decorationsMetadata.set(newDecorationIds[i], {
            hint: hints[i],
            classNameRef: newDecorationsData[i].classNameRef
        });
    }
    _getLayoutInfo() {
        const options = this._editor.getOption(126 /* inlayHints */ );
        const editorFontSize = this._editor.getOption(45 /* fontSize */ );
        let fontSize = options.fontSize;
        if (!fontSize || fontSize < 5 || fontSize > editorFontSize) fontSize = editorFontSize * 0.9 | 0;
        const fontFamily = options.fontFamily || this._editor.getOption(42 /* fontFamily */ );
        return {
            fontSize: fontSize,
            fontFamily: fontFamily
        };
    }
    _removeAllDecorations() {
        this._editor.deltaDecorations(Array.from(this._decorationsMetadata.keys()), []);
        for (let obj of this._decorationsMetadata.values())obj.classNameRef.dispose();
        this._decorationsMetadata.clear();
    }
}
$14d28a24bdcef1bf$export$c42ac128db3942ca.ID = 'editor.contrib.InlayHints';
$14d28a24bdcef1bf$export$c42ac128db3942ca._decorationOwnerIdPool = 0;
function $14d28a24bdcef1bf$var$wordToRange(word, lineNumber) {
    return new $d00il.Range(lineNumber, word.startColumn, lineNumber, word.endColumn);
}
// Prevents the view from potentially visible whitespace
function $14d28a24bdcef1bf$var$fixSpace(str) {
    const noBreakWhitespace = '\xa0';
    return str.replace(/[ \t]/g, noBreakWhitespace);
}
$2iJTi.registerEditorContribution($14d28a24bdcef1bf$export$c42ac128db3942ca.ID, $14d28a24bdcef1bf$export$c42ac128db3942ca);
$8tcMz.CommandsRegistry.registerCommand('_executeInlayHintProvider', (accessor, ...args)=>$14d28a24bdcef1bf$var$__awaiter(void 0, void 0, void 0, function*() {
        const [uri, range] = args;
        $bxBg7.assertType($5OJ54.URI.isUri(uri));
        $bxBg7.assertType($d00il.Range.isIRange(range));
        const ref = yield accessor.get($aTkrt.ITextModelService).createModelReference(uri);
        try {
            const data = yield $14d28a24bdcef1bf$export$50bf42d7deea549c(ref.object.textEditorModel, [
                $d00il.Range.lift(range)
            ], new $14d28a24bdcef1bf$var$RequestMap(), $giPcZ.CancellationToken.None);
            return data;
        } finally{
            ref.dispose();
        }
    })
);


var $baa7e1bda5c1264c$exports = {};

var $6bXyA = parcelRequire("6bXyA");

var $gPkHZ = parcelRequire("gPkHZ");

var $r7siU = parcelRequire("r7siU");

var $2iJTi = parcelRequire("2iJTi");

var $d00il = parcelRequire("d00il");

var $jzicX = parcelRequire("jzicX");

var $ibKGQ = parcelRequire("ibKGQ");

var $91ntV = parcelRequire("91ntV");

var $aPs2m = parcelRequire("aPs2m");

var $50T4y = parcelRequire("50T4y");

var $4dEdH = parcelRequire("4dEdH");

var $azIPz = parcelRequire("azIPz");

var $jzicX = parcelRequire("jzicX");
class $04b421db24508c34$export$9bc9910c55aab12 {
    constructor(editRange, originalSelection, text){
        this._editRange = editRange;
        this._originalSelection = originalSelection;
        this._text = text;
    }
    getEditOperations(model, builder) {
        builder.addTrackedEditOperation(this._editRange, this._text);
    }
    computeCursorState(model, helper) {
        const inverseEditOperations = helper.getInverseEditOperations();
        const srcRange = inverseEditOperations[0].range;
        if (!this._originalSelection.isEmpty()) // Preserve selection and extends to typed text
        return new $jzicX.Selection(srcRange.endLineNumber, srcRange.endColumn - this._text.length, srcRange.endLineNumber, srcRange.endColumn);
        return new $jzicX.Selection(srcRange.endLineNumber, Math.min(this._originalSelection.positionColumn, srcRange.endColumn), srcRange.endLineNumber, Math.min(this._originalSelection.positionColumn, srcRange.endColumn));
    }
}


/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $baa7e1bda5c1264c$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var $baa7e1bda5c1264c$var$__param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
};
let $baa7e1bda5c1264c$var$InPlaceReplaceController = class InPlaceReplaceController {
    constructor(editor, editorWorkerService){
        this.decorationIds = [];
        this.editor = editor;
        this.editorWorkerService = editorWorkerService;
    }
    static get(editor) {
        return editor.getContribution(InPlaceReplaceController.ID);
    }
    dispose() {}
    run(source, up) {
        // cancel any pending request
        if (this.currentRequest) this.currentRequest.cancel();
        const editorSelection = this.editor.getSelection();
        const model = this.editor.getModel();
        if (!model || !editorSelection) return undefined;
        let selection = editorSelection;
        if (selection.startLineNumber !== selection.endLineNumber) // Can't accept multiline selection
        return undefined;
        const state = new $r7siU.EditorState(this.editor, 5 /* Position */ );
        const modelURI = model.uri;
        if (!this.editorWorkerService.canNavigateValueSet(modelURI)) return Promise.resolve(undefined);
        this.currentRequest = $6bXyA.createCancelablePromise((token)=>this.editorWorkerService.navigateValueSet(modelURI, selection, up)
        );
        return this.currentRequest.then((result)=>{
            if (!result || !result.range || !result.value) // No proper result
            return;
            if (!state.validate(this.editor)) // state has changed
            return;
            // Selection
            let editRange = $d00il.Range.lift(result.range);
            let highlightRange = result.range;
            let diff = result.value.length - (selection.endColumn - selection.startColumn);
            // highlight
            highlightRange = {
                startLineNumber: highlightRange.startLineNumber,
                startColumn: highlightRange.startColumn,
                endLineNumber: highlightRange.endLineNumber,
                endColumn: highlightRange.startColumn + result.value.length
            };
            if (diff > 1) selection = new $jzicX.Selection(selection.startLineNumber, selection.startColumn, selection.endLineNumber, selection.endColumn + diff - 1);
            // Insert new text
            const command = new $04b421db24508c34$export$9bc9910c55aab12(editRange, selection, result.value);
            this.editor.pushUndoStop();
            this.editor.executeCommand(source, command);
            this.editor.pushUndoStop();
            // add decoration
            this.decorationIds = this.editor.deltaDecorations(this.decorationIds, [
                {
                    range: highlightRange,
                    options: InPlaceReplaceController.DECORATION
                }
            ]);
            // remove decoration after delay
            if (this.decorationRemover) this.decorationRemover.cancel();
            this.decorationRemover = $6bXyA.timeout(350);
            this.decorationRemover.then(()=>this.decorationIds = this.editor.deltaDecorations(this.decorationIds, [])
            ).catch($gPkHZ.onUnexpectedError);
        }).catch($gPkHZ.onUnexpectedError);
    }
};
$baa7e1bda5c1264c$var$InPlaceReplaceController.ID = 'editor.contrib.inPlaceReplaceController';
$baa7e1bda5c1264c$var$InPlaceReplaceController.DECORATION = $91ntV.ModelDecorationOptions.register({
    description: 'in-place-replace',
    className: 'valueSetReplacement'
});
$baa7e1bda5c1264c$var$InPlaceReplaceController = $baa7e1bda5c1264c$var$__decorate([
    $baa7e1bda5c1264c$var$__param(1, $aPs2m.IEditorWorkerService)
], $baa7e1bda5c1264c$var$InPlaceReplaceController);
class $baa7e1bda5c1264c$var$InPlaceReplaceUp extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: 'editor.action.inPlaceReplace.up',
            label: $4dEdH.localize('InPlaceReplaceAction.previous.label', "Replace with Previous Value"),
            alias: 'Replace with Previous Value',
            precondition: $ibKGQ.EditorContextKeys.writable,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.editorTextFocus,
                primary: 3154 /* Comma */ ,
                weight: 100 /* EditorContrib */ 
            }
        });
    }
    run(accessor, editor) {
        const controller = $baa7e1bda5c1264c$var$InPlaceReplaceController.get(editor);
        if (!controller) return Promise.resolve(undefined);
        return controller.run(this.id, true);
    }
}
class $baa7e1bda5c1264c$var$InPlaceReplaceDown extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: 'editor.action.inPlaceReplace.down',
            label: $4dEdH.localize('InPlaceReplaceAction.next.label', "Replace with Next Value"),
            alias: 'Replace with Next Value',
            precondition: $ibKGQ.EditorContextKeys.writable,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.editorTextFocus,
                primary: 3156 /* Period */ ,
                weight: 100 /* EditorContrib */ 
            }
        });
    }
    run(accessor, editor) {
        const controller = $baa7e1bda5c1264c$var$InPlaceReplaceController.get(editor);
        if (!controller) return Promise.resolve(undefined);
        return controller.run(this.id, false);
    }
}
$2iJTi.registerEditorContribution($baa7e1bda5c1264c$var$InPlaceReplaceController.ID, $baa7e1bda5c1264c$var$InPlaceReplaceController);
$2iJTi.registerEditorAction($baa7e1bda5c1264c$var$InPlaceReplaceUp);
$2iJTi.registerEditorAction($baa7e1bda5c1264c$var$InPlaceReplaceDown);
$azIPz.registerThemingParticipant((theme, collector)=>{
    const border = theme.getColor($50T4y.editorBracketMatchBorder);
    if (border) collector.addRule(`.monaco-editor.vs .valueSetReplacement { outline: solid 2px ${border}; }`);
});



var $2iJTi = parcelRequire("2iJTi");

var $2Arjg = parcelRequire("2Arjg");

var $ibKGQ = parcelRequire("ibKGQ");

var $4dEdH = parcelRequire("4dEdH");
class $a4afd3e1a36e36f2$export$b138959c3fb78d73 extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: 'expandLineSelection',
            label: $4dEdH.localize('expandLineSelection', "Expand Line Selection"),
            alias: 'Expand Line Selection',
            precondition: undefined,
            kbOpts: {
                weight: 0 /* EditorCore */ ,
                kbExpr: $ibKGQ.EditorContextKeys.textInputFocus,
                primary: 2090 /* KeyL */ 
            }
        });
    }
    run(_accessor, editor, args) {
        args = args || {};
        if (!editor.hasModel()) return;
        const viewModel = editor._getViewModel();
        viewModel.model.pushStackElement();
        viewModel.setCursorStates(args.source, 3 /* Explicit */ , $2Arjg.CursorMoveCommands.expandLineSelection(viewModel, viewModel.getCursorStates()));
        viewModel.revealPrimaryCursor(args.source, true);
    }
}
$2iJTi.registerEditorAction($a4afd3e1a36e36f2$export$b138959c3fb78d73);



var $fuc8X = parcelRequire("fuc8X");

var $ami5U = parcelRequire("ami5U");

var $2iJTi = parcelRequire("2iJTi");

var $5TVJR = parcelRequire("5TVJR");

var $jcr1R = parcelRequire("jcr1R");

var $kHJv6 = parcelRequire("kHJv6");

var $d00il = parcelRequire("d00il");
class $fb94e4eefdfa3332$export$d5a264e582fa038c {
    constructor(selection, cursors){
        this._selection = selection;
        this._cursors = cursors;
        this._selectionId = null;
    }
    getEditOperations(model, builder) {
        let ops = $fb94e4eefdfa3332$export$a5e50b06a093aab9(model, this._cursors);
        for(let i = 0, len = ops.length; i < len; i++){
            let op = ops[i];
            builder.addEditOperation(op.range, op.text);
        }
        this._selectionId = builder.trackSelection(this._selection);
    }
    computeCursorState(model, helper) {
        return helper.getTrackedSelection(this._selectionId);
    }
}
function $fb94e4eefdfa3332$export$a5e50b06a093aab9(model, cursors) {
    // Sort cursors ascending
    cursors.sort((a, b)=>{
        if (a.lineNumber === b.lineNumber) return a.column - b.column;
        return a.lineNumber - b.lineNumber;
    });
    // Reduce multiple cursors on the same line and only keep the last one on the line
    for(let i = cursors.length - 2; i >= 0; i--)if (cursors[i].lineNumber === cursors[i + 1].lineNumber) // Remove cursor at `i`
    cursors.splice(i, 1);
    let r = [];
    let rLen = 0;
    let cursorIndex = 0;
    let cursorLen = cursors.length;
    for(let lineNumber = 1, lineCount = model.getLineCount(); lineNumber <= lineCount; lineNumber++){
        let lineContent = model.getLineContent(lineNumber);
        let maxLineColumn = lineContent.length + 1;
        let minEditColumn = 0;
        if (cursorIndex < cursorLen && cursors[cursorIndex].lineNumber === lineNumber) {
            minEditColumn = cursors[cursorIndex].column;
            cursorIndex++;
            if (minEditColumn === maxLineColumn) continue;
        }
        if (lineContent.length === 0) continue;
        let lastNonWhitespaceIndex = $jcr1R.lastNonWhitespaceIndex(lineContent);
        let fromColumn = 0;
        if (lastNonWhitespaceIndex === -1) // Entire line is whitespace
        fromColumn = 1;
        else if (lastNonWhitespaceIndex !== lineContent.length - 1) // There is trailing whitespace
        fromColumn = lastNonWhitespaceIndex + 2;
        else continue;
        fromColumn = Math.max(minEditColumn, fromColumn);
        r[rLen++] = $kHJv6.EditOperation.delete(new $d00il.Range(lineNumber, fromColumn, lineNumber, maxLineColumn));
    }
    return r;
}



var $e3Xwg = parcelRequire("e3Xwg");

var $kHJv6 = parcelRequire("kHJv6");

var $dcxQ7 = parcelRequire("dcxQ7");

var $d00il = parcelRequire("d00il");

var $jzicX = parcelRequire("jzicX");

var $ibKGQ = parcelRequire("ibKGQ");

var $d00il = parcelRequire("d00il");

var $jzicX = parcelRequire("jzicX");
class $7f981bdacaf58406$export$b709865215a86879 {
    constructor(selection, isCopyingDown, noop){
        this._selection = selection;
        this._isCopyingDown = isCopyingDown;
        this._noop = noop || false;
        this._selectionDirection = 0 /* LTR */ ;
        this._selectionId = null;
        this._startLineNumberDelta = 0;
        this._endLineNumberDelta = 0;
    }
    getEditOperations(model, builder) {
        let s = this._selection;
        this._startLineNumberDelta = 0;
        this._endLineNumberDelta = 0;
        if (s.startLineNumber < s.endLineNumber && s.endColumn === 1) {
            this._endLineNumberDelta = 1;
            s = s.setEndPosition(s.endLineNumber - 1, model.getLineMaxColumn(s.endLineNumber - 1));
        }
        let sourceLines = [];
        for(let i = s.startLineNumber; i <= s.endLineNumber; i++)sourceLines.push(model.getLineContent(i));
        const sourceText = sourceLines.join('\n');
        if (sourceText === '') // Duplicating empty line
        {
            if (this._isCopyingDown) {
                this._startLineNumberDelta++;
                this._endLineNumberDelta++;
            }
        }
        if (this._noop) builder.addEditOperation(new $d00il.Range(s.endLineNumber, model.getLineMaxColumn(s.endLineNumber), s.endLineNumber + 1, 1), s.endLineNumber === model.getLineCount() ? '' : '\n');
        else if (!this._isCopyingDown) builder.addEditOperation(new $d00il.Range(s.endLineNumber, model.getLineMaxColumn(s.endLineNumber), s.endLineNumber, model.getLineMaxColumn(s.endLineNumber)), '\n' + sourceText);
        else builder.addEditOperation(new $d00il.Range(s.startLineNumber, 1, s.startLineNumber, 1), sourceText + '\n');
        this._selectionId = builder.trackSelection(s);
        this._selectionDirection = this._selection.getDirection();
    }
    computeCursorState(model, helper) {
        let result = helper.getTrackedSelection(this._selectionId);
        if (this._startLineNumberDelta !== 0 || this._endLineNumberDelta !== 0) {
            let startLineNumber = result.startLineNumber;
            let startColumn = result.startColumn;
            let endLineNumber = result.endLineNumber;
            let endColumn = result.endColumn;
            if (this._startLineNumberDelta !== 0) {
                startLineNumber = startLineNumber + this._startLineNumberDelta;
                startColumn = 1;
            }
            if (this._endLineNumberDelta !== 0) {
                endLineNumber = endLineNumber + this._endLineNumberDelta;
                endColumn = 1;
            }
            result = $jzicX.Selection.createWithDirection(startLineNumber, startColumn, endLineNumber, endColumn, this._selectionDirection);
        }
        return result;
    }
}



var $jcr1R = parcelRequire("jcr1R");

var $9S8HY = parcelRequire("9S8HY");

var $d00il = parcelRequire("d00il");

var $jzicX = parcelRequire("jzicX");

var $15oYm = parcelRequire("15oYm");

var $aKdIg = parcelRequire("aKdIg");

class $103bb4b9fe04e7bc$export$14a8ecb8bc929c31 {
    constructor(selection, isMovingDown, autoIndent){
        this._selection = selection;
        this._isMovingDown = isMovingDown;
        this._autoIndent = autoIndent;
        this._selectionId = null;
        this._moveEndLineSelectionShrink = false;
    }
    getEditOperations(model, builder) {
        let modelLineCount = model.getLineCount();
        if (this._isMovingDown && this._selection.endLineNumber === modelLineCount) {
            this._selectionId = builder.trackSelection(this._selection);
            return;
        }
        if (!this._isMovingDown && this._selection.startLineNumber === 1) {
            this._selectionId = builder.trackSelection(this._selection);
            return;
        }
        this._moveEndPositionDown = false;
        let s = this._selection;
        if (s.startLineNumber < s.endLineNumber && s.endColumn === 1) {
            this._moveEndPositionDown = true;
            s = s.setEndPosition(s.endLineNumber - 1, model.getLineMaxColumn(s.endLineNumber - 1));
        }
        const { tabSize: tabSize , indentSize: indentSize , insertSpaces: insertSpaces  } = model.getOptions();
        let indentConverter = this.buildIndentConverter(tabSize, indentSize, insertSpaces);
        let virtualModel = {
            getLineTokens: (lineNumber)=>{
                return model.getLineTokens(lineNumber);
            },
            getLanguageId: ()=>{
                return model.getLanguageId();
            },
            getLanguageIdAtPosition: (lineNumber, column)=>{
                return model.getLanguageIdAtPosition(lineNumber, column);
            },
            getLineContent: null
        };
        if (s.startLineNumber === s.endLineNumber && model.getLineMaxColumn(s.startLineNumber) === 1) {
            // Current line is empty
            let lineNumber = s.startLineNumber;
            let otherLineNumber = this._isMovingDown ? lineNumber + 1 : lineNumber - 1;
            if (model.getLineMaxColumn(otherLineNumber) === 1) // Other line number is empty too, so no editing is needed
            // Add a no-op to force running by the model
            builder.addEditOperation(new $d00il.Range(1, 1, 1, 1), null);
            else {
                // Type content from other line number on line number
                builder.addEditOperation(new $d00il.Range(lineNumber, 1, lineNumber, 1), model.getLineContent(otherLineNumber));
                // Remove content from other line number
                builder.addEditOperation(new $d00il.Range(otherLineNumber, 1, otherLineNumber, model.getLineMaxColumn(otherLineNumber)), null);
            }
            // Track selection at the other line number
            s = new $jzicX.Selection(otherLineNumber, 1, otherLineNumber, 1);
        } else {
            let movingLineNumber;
            let movingLineText;
            if (this._isMovingDown) {
                movingLineNumber = s.endLineNumber + 1;
                movingLineText = model.getLineContent(movingLineNumber);
                // Delete line that needs to be moved
                builder.addEditOperation(new $d00il.Range(movingLineNumber - 1, model.getLineMaxColumn(movingLineNumber - 1), movingLineNumber, model.getLineMaxColumn(movingLineNumber)), null);
                let insertingText = movingLineText;
                if (this.shouldAutoIndent(model, s)) {
                    let movingLineMatchResult = this.matchEnterRule(model, indentConverter, tabSize, movingLineNumber, s.startLineNumber - 1);
                    // if s.startLineNumber - 1 matches onEnter rule, we still honor that.
                    if (movingLineMatchResult !== null) {
                        let oldIndentation = $jcr1R.getLeadingWhitespace(model.getLineContent(movingLineNumber));
                        let newSpaceCnt = movingLineMatchResult + $8ae880360e3f914c$export$e83f2438bfbc9f9b(oldIndentation, tabSize);
                        let newIndentation = $8ae880360e3f914c$export$f2011d4fc9157d6f(newSpaceCnt, tabSize, insertSpaces);
                        insertingText = newIndentation + this.trimLeft(movingLineText);
                    } else {
                        // no enter rule matches, let's check indentatin rules then.
                        virtualModel.getLineContent = (lineNumber)=>{
                            if (lineNumber === s.startLineNumber) return model.getLineContent(movingLineNumber);
                            else return model.getLineContent(lineNumber);
                        };
                        let indentOfMovingLine = $aKdIg.LanguageConfigurationRegistry.getGoodIndentForLine(this._autoIndent, virtualModel, model.getLanguageIdAtPosition(movingLineNumber, 1), s.startLineNumber, indentConverter);
                        if (indentOfMovingLine !== null) {
                            let oldIndentation = $jcr1R.getLeadingWhitespace(model.getLineContent(movingLineNumber));
                            let newSpaceCnt = $8ae880360e3f914c$export$e83f2438bfbc9f9b(indentOfMovingLine, tabSize);
                            let oldSpaceCnt = $8ae880360e3f914c$export$e83f2438bfbc9f9b(oldIndentation, tabSize);
                            if (newSpaceCnt !== oldSpaceCnt) {
                                let newIndentation = $8ae880360e3f914c$export$f2011d4fc9157d6f(newSpaceCnt, tabSize, insertSpaces);
                                insertingText = newIndentation + this.trimLeft(movingLineText);
                            }
                        }
                    }
                    // add edit operations for moving line first to make sure it's executed after we make indentation change
                    // to s.startLineNumber
                    builder.addEditOperation(new $d00il.Range(s.startLineNumber, 1, s.startLineNumber, 1), insertingText + '\n');
                    let ret = this.matchEnterRuleMovingDown(model, indentConverter, tabSize, s.startLineNumber, movingLineNumber, insertingText);
                    // check if the line being moved before matches onEnter rules, if so let's adjust the indentation by onEnter rules.
                    if (ret !== null) {
                        if (ret !== 0) this.getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, ret);
                    } else {
                        // it doesn't match onEnter rules, let's check indentation rules then.
                        virtualModel.getLineContent = (lineNumber)=>{
                            if (lineNumber === s.startLineNumber) return insertingText;
                            else if (lineNumber >= s.startLineNumber + 1 && lineNumber <= s.endLineNumber + 1) return model.getLineContent(lineNumber - 1);
                            else return model.getLineContent(lineNumber);
                        };
                        let newIndentatOfMovingBlock = $aKdIg.LanguageConfigurationRegistry.getGoodIndentForLine(this._autoIndent, virtualModel, model.getLanguageIdAtPosition(movingLineNumber, 1), s.startLineNumber + 1, indentConverter);
                        if (newIndentatOfMovingBlock !== null) {
                            const oldIndentation = $jcr1R.getLeadingWhitespace(model.getLineContent(s.startLineNumber));
                            const newSpaceCnt = $8ae880360e3f914c$export$e83f2438bfbc9f9b(newIndentatOfMovingBlock, tabSize);
                            const oldSpaceCnt = $8ae880360e3f914c$export$e83f2438bfbc9f9b(oldIndentation, tabSize);
                            if (newSpaceCnt !== oldSpaceCnt) {
                                const spaceCntOffset = newSpaceCnt - oldSpaceCnt;
                                this.getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, spaceCntOffset);
                            }
                        }
                    }
                } else // Insert line that needs to be moved before
                builder.addEditOperation(new $d00il.Range(s.startLineNumber, 1, s.startLineNumber, 1), insertingText + '\n');
            } else {
                movingLineNumber = s.startLineNumber - 1;
                movingLineText = model.getLineContent(movingLineNumber);
                // Delete line that needs to be moved
                builder.addEditOperation(new $d00il.Range(movingLineNumber, 1, movingLineNumber + 1, 1), null);
                // Insert line that needs to be moved after
                builder.addEditOperation(new $d00il.Range(s.endLineNumber, model.getLineMaxColumn(s.endLineNumber), s.endLineNumber, model.getLineMaxColumn(s.endLineNumber)), '\n' + movingLineText);
                if (this.shouldAutoIndent(model, s)) {
                    virtualModel.getLineContent = (lineNumber)=>{
                        if (lineNumber === movingLineNumber) return model.getLineContent(s.startLineNumber);
                        else return model.getLineContent(lineNumber);
                    };
                    let ret = this.matchEnterRule(model, indentConverter, tabSize, s.startLineNumber, s.startLineNumber - 2);
                    // check if s.startLineNumber - 2 matches onEnter rules, if so adjust the moving block by onEnter rules.
                    if (ret !== null) {
                        if (ret !== 0) this.getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, ret);
                    } else {
                        // it doesn't match any onEnter rule, let's check indentation rules then.
                        let indentOfFirstLine = $aKdIg.LanguageConfigurationRegistry.getGoodIndentForLine(this._autoIndent, virtualModel, model.getLanguageIdAtPosition(s.startLineNumber, 1), movingLineNumber, indentConverter);
                        if (indentOfFirstLine !== null) {
                            // adjust the indentation of the moving block
                            let oldIndent = $jcr1R.getLeadingWhitespace(model.getLineContent(s.startLineNumber));
                            let newSpaceCnt = $8ae880360e3f914c$export$e83f2438bfbc9f9b(indentOfFirstLine, tabSize);
                            let oldSpaceCnt = $8ae880360e3f914c$export$e83f2438bfbc9f9b(oldIndent, tabSize);
                            if (newSpaceCnt !== oldSpaceCnt) {
                                let spaceCntOffset = newSpaceCnt - oldSpaceCnt;
                                this.getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, spaceCntOffset);
                            }
                        }
                    }
                }
            }
        }
        this._selectionId = builder.trackSelection(s);
    }
    buildIndentConverter(tabSize, indentSize, insertSpaces) {
        return {
            shiftIndent: (indentation)=>{
                return $9S8HY.ShiftCommand.shiftIndent(indentation, indentation.length + 1, tabSize, indentSize, insertSpaces);
            },
            unshiftIndent: (indentation)=>{
                return $9S8HY.ShiftCommand.unshiftIndent(indentation, indentation.length + 1, tabSize, indentSize, insertSpaces);
            }
        };
    }
    parseEnterResult(model, indentConverter, tabSize, line, enter) {
        if (enter) {
            let enterPrefix = enter.indentation;
            if (enter.indentAction === $15oYm.IndentAction.None) enterPrefix = enter.indentation + enter.appendText;
            else if (enter.indentAction === $15oYm.IndentAction.Indent) enterPrefix = enter.indentation + enter.appendText;
            else if (enter.indentAction === $15oYm.IndentAction.IndentOutdent) enterPrefix = enter.indentation;
            else if (enter.indentAction === $15oYm.IndentAction.Outdent) enterPrefix = indentConverter.unshiftIndent(enter.indentation) + enter.appendText;
            let movingLineText = model.getLineContent(line);
            if (this.trimLeft(movingLineText).indexOf(this.trimLeft(enterPrefix)) >= 0) {
                let oldIndentation = $jcr1R.getLeadingWhitespace(model.getLineContent(line));
                let newIndentation = $jcr1R.getLeadingWhitespace(enterPrefix);
                let indentMetadataOfMovelingLine = $aKdIg.LanguageConfigurationRegistry.getIndentMetadata(model, line);
                if (indentMetadataOfMovelingLine !== null && indentMetadataOfMovelingLine & 2 /* DECREASE_MASK */ ) newIndentation = indentConverter.unshiftIndent(newIndentation);
                let newSpaceCnt = $8ae880360e3f914c$export$e83f2438bfbc9f9b(newIndentation, tabSize);
                let oldSpaceCnt = $8ae880360e3f914c$export$e83f2438bfbc9f9b(oldIndentation, tabSize);
                return newSpaceCnt - oldSpaceCnt;
            }
        }
        return null;
    }
    /**
     *
     * @param model
     * @param indentConverter
     * @param tabSize
     * @param line the line moving down
     * @param futureAboveLineNumber the line which will be at the `line` position
     * @param futureAboveLineText
     */ matchEnterRuleMovingDown(model, indentConverter, tabSize, line, futureAboveLineNumber, futureAboveLineText) {
        if ($jcr1R.lastNonWhitespaceIndex(futureAboveLineText) >= 0) {
            // break
            let maxColumn = model.getLineMaxColumn(futureAboveLineNumber);
            let enter = $aKdIg.LanguageConfigurationRegistry.getEnterAction(this._autoIndent, model, new $d00il.Range(futureAboveLineNumber, maxColumn, futureAboveLineNumber, maxColumn));
            return this.parseEnterResult(model, indentConverter, tabSize, line, enter);
        } else {
            // go upwards, starting from `line - 1`
            let validPrecedingLine = line - 1;
            while(validPrecedingLine >= 1){
                let lineContent = model.getLineContent(validPrecedingLine);
                let nonWhitespaceIdx = $jcr1R.lastNonWhitespaceIndex(lineContent);
                if (nonWhitespaceIdx >= 0) break;
                validPrecedingLine--;
            }
            if (validPrecedingLine < 1 || line > model.getLineCount()) return null;
            let maxColumn = model.getLineMaxColumn(validPrecedingLine);
            let enter = $aKdIg.LanguageConfigurationRegistry.getEnterAction(this._autoIndent, model, new $d00il.Range(validPrecedingLine, maxColumn, validPrecedingLine, maxColumn));
            return this.parseEnterResult(model, indentConverter, tabSize, line, enter);
        }
    }
    matchEnterRule(model, indentConverter, tabSize, line, oneLineAbove, previousLineText) {
        let validPrecedingLine = oneLineAbove;
        while(validPrecedingLine >= 1){
            // ship empty lines as empty lines just inherit indentation
            let lineContent;
            if (validPrecedingLine === oneLineAbove && previousLineText !== undefined) lineContent = previousLineText;
            else lineContent = model.getLineContent(validPrecedingLine);
            let nonWhitespaceIdx = $jcr1R.lastNonWhitespaceIndex(lineContent);
            if (nonWhitespaceIdx >= 0) break;
            validPrecedingLine--;
        }
        if (validPrecedingLine < 1 || line > model.getLineCount()) return null;
        let maxColumn = model.getLineMaxColumn(validPrecedingLine);
        let enter = $aKdIg.LanguageConfigurationRegistry.getEnterAction(this._autoIndent, model, new $d00il.Range(validPrecedingLine, maxColumn, validPrecedingLine, maxColumn));
        return this.parseEnterResult(model, indentConverter, tabSize, line, enter);
    }
    trimLeft(str) {
        return str.replace(/^\s+/, '');
    }
    shouldAutoIndent(model, selection) {
        if (this._autoIndent < 4 /* Full */ ) return false;
        // if it's not easy to tokenize, we stop auto indent.
        if (!model.isCheapToTokenize(selection.startLineNumber)) return false;
        let languageAtSelectionStart = model.getLanguageIdAtPosition(selection.startLineNumber, 1);
        let languageAtSelectionEnd = model.getLanguageIdAtPosition(selection.endLineNumber, 1);
        if (languageAtSelectionStart !== languageAtSelectionEnd) return false;
        if ($aKdIg.LanguageConfigurationRegistry.getIndentRulesSupport(languageAtSelectionStart) === null) return false;
        return true;
    }
    getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, offset) {
        for(let i = s.startLineNumber; i <= s.endLineNumber; i++){
            let lineContent = model.getLineContent(i);
            let originalIndent = $jcr1R.getLeadingWhitespace(lineContent);
            let originalSpacesCnt = $8ae880360e3f914c$export$e83f2438bfbc9f9b(originalIndent, tabSize);
            let newSpacesCnt = originalSpacesCnt + offset;
            let newIndent = $8ae880360e3f914c$export$f2011d4fc9157d6f(newSpacesCnt, tabSize, insertSpaces);
            if (newIndent !== originalIndent) {
                builder.addEditOperation(new $d00il.Range(i, 1, i, originalIndent.length + 1), newIndent);
                if (i === s.endLineNumber && s.endColumn <= originalIndent.length + 1 && newIndent === '') // as users select part of the original indent white spaces
                // when we adjust the indentation of endLine, we should adjust the cursor position as well.
                this._moveEndLineSelectionShrink = true;
            }
        }
    }
    computeCursorState(model, helper) {
        let result = helper.getTrackedSelection(this._selectionId);
        if (this._moveEndPositionDown) result = result.setEndPosition(result.endLineNumber + 1, 1);
        if (this._moveEndLineSelectionShrink && result.startLineNumber < result.endLineNumber) result = result.setEndPosition(result.endLineNumber, 2);
        return result;
    }
}



var $kHJv6 = parcelRequire("kHJv6");

var $d00il = parcelRequire("d00il");
class $3fbdcfa71b9c424e$export$ba55b4b15d1da26c {
    constructor(selection, descending){
        this.selection = selection;
        this.descending = descending;
        this.selectionId = null;
    }
    static getCollator() {
        if (!$3fbdcfa71b9c424e$export$ba55b4b15d1da26c._COLLATOR) $3fbdcfa71b9c424e$export$ba55b4b15d1da26c._COLLATOR = new Intl.Collator();
        return $3fbdcfa71b9c424e$export$ba55b4b15d1da26c._COLLATOR;
    }
    getEditOperations(model, builder) {
        let op = $3fbdcfa71b9c424e$var$sortLines(model, this.selection, this.descending);
        if (op) builder.addEditOperation(op.range, op.text);
        this.selectionId = builder.trackSelection(this.selection);
    }
    computeCursorState(model, helper) {
        return helper.getTrackedSelection(this.selectionId);
    }
    static canRun(model, selection, descending) {
        if (model === null) return false;
        let data = $3fbdcfa71b9c424e$var$getSortData(model, selection, descending);
        if (!data) return false;
        for(let i = 0, len = data.before.length; i < len; i++){
            if (data.before[i] !== data.after[i]) return true;
        }
        return false;
    }
}
$3fbdcfa71b9c424e$export$ba55b4b15d1da26c._COLLATOR = null;
function $3fbdcfa71b9c424e$var$getSortData(model, selection, descending) {
    let startLineNumber = selection.startLineNumber;
    let endLineNumber = selection.endLineNumber;
    if (selection.endColumn === 1) endLineNumber--;
    // Nothing to sort if user didn't select anything.
    if (startLineNumber >= endLineNumber) return null;
    let linesToSort = [];
    // Get the contents of the selection to be sorted.
    for(let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++)linesToSort.push(model.getLineContent(lineNumber));
    let sorted = linesToSort.slice(0);
    sorted.sort($3fbdcfa71b9c424e$export$ba55b4b15d1da26c.getCollator().compare);
    // If descending, reverse the order.
    if (descending === true) sorted = sorted.reverse();
    return {
        startLineNumber: startLineNumber,
        endLineNumber: endLineNumber,
        before: linesToSort,
        after: sorted
    };
}
/**
 * Generate commands for sorting lines on a model.
 */ function $3fbdcfa71b9c424e$var$sortLines(model, selection, descending) {
    let data = $3fbdcfa71b9c424e$var$getSortData(model, selection, descending);
    if (!data) return null;
    return $kHJv6.EditOperation.replace(new $d00il.Range(data.startLineNumber, 1, data.endLineNumber, model.getLineMaxColumn(data.endLineNumber)), data.after.join('\n'));
}



var $4dEdH = parcelRequire("4dEdH");

var $g4v7E = parcelRequire("g4v7E");
// copy lines
class $60fd8996f7db37cf$var$AbstractCopyLinesAction extends $2iJTi.EditorAction {
    constructor(down, opts){
        super(opts);
        this.down = down;
    }
    run(_accessor, editor) {
        if (!editor.hasModel()) return;
        const selections = editor.getSelections().map((selection, index)=>({
                selection: selection,
                index: index,
                ignore: false
            })
        );
        selections.sort((a, b)=>$d00il.Range.compareRangesUsingStarts(a.selection, b.selection)
        );
        // Remove selections that would result in copying the same line
        let prev = selections[0];
        for(let i = 1; i < selections.length; i++){
            const curr = selections[i];
            if (prev.selection.endLineNumber === curr.selection.startLineNumber) {
                // these two selections would copy the same line
                if (prev.index < curr.index) // prev wins
                curr.ignore = true;
                else {
                    // curr wins
                    prev.ignore = true;
                    prev = curr;
                }
            }
        }
        const commands = [];
        for (const selection1 of selections)commands.push(new $7f981bdacaf58406$export$b709865215a86879(selection1.selection, this.down, selection1.ignore));
        editor.pushUndoStop();
        editor.executeCommands(this.id, commands);
        editor.pushUndoStop();
    }
}
class $60fd8996f7db37cf$var$CopyLinesUpAction extends $60fd8996f7db37cf$var$AbstractCopyLinesAction {
    constructor(){
        super(false, {
            id: 'editor.action.copyLinesUpAction',
            label: $4dEdH.localize('lines.copyUp', "Copy Line Up"),
            alias: 'Copy Line Up',
            precondition: $ibKGQ.EditorContextKeys.writable,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.editorTextFocus,
                primary: 1552 /* UpArrow */ ,
                linux: {
                    primary: 3600 /* UpArrow */ 
                },
                weight: 100 /* EditorContrib */ 
            },
            menuOpts: {
                menuId: $g4v7E.MenuId.MenubarSelectionMenu,
                group: '2_line',
                title: $4dEdH.localize({
                    key: 'miCopyLinesUp',
                    comment: [
                        '&& denotes a mnemonic'
                    ]
                }, "&&Copy Line Up"),
                order: 1
            }
        });
    }
}
class $60fd8996f7db37cf$var$CopyLinesDownAction extends $60fd8996f7db37cf$var$AbstractCopyLinesAction {
    constructor(){
        super(true, {
            id: 'editor.action.copyLinesDownAction',
            label: $4dEdH.localize('lines.copyDown', "Copy Line Down"),
            alias: 'Copy Line Down',
            precondition: $ibKGQ.EditorContextKeys.writable,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.editorTextFocus,
                primary: 1554 /* DownArrow */ ,
                linux: {
                    primary: 3602 /* DownArrow */ 
                },
                weight: 100 /* EditorContrib */ 
            },
            menuOpts: {
                menuId: $g4v7E.MenuId.MenubarSelectionMenu,
                group: '2_line',
                title: $4dEdH.localize({
                    key: 'miCopyLinesDown',
                    comment: [
                        '&& denotes a mnemonic'
                    ]
                }, "Co&&py Line Down"),
                order: 2
            }
        });
    }
}
class $60fd8996f7db37cf$export$3cbca8715f2928a3 extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: 'editor.action.duplicateSelection',
            label: $4dEdH.localize('duplicateSelection', "Duplicate Selection"),
            alias: 'Duplicate Selection',
            precondition: $ibKGQ.EditorContextKeys.writable,
            menuOpts: {
                menuId: $g4v7E.MenuId.MenubarSelectionMenu,
                group: '2_line',
                title: $4dEdH.localize({
                    key: 'miDuplicateSelection',
                    comment: [
                        '&& denotes a mnemonic'
                    ]
                }, "&&Duplicate Selection"),
                order: 5
            }
        });
    }
    run(accessor, editor, args) {
        if (!editor.hasModel()) return;
        const commands = [];
        const selections = editor.getSelections();
        const model = editor.getModel();
        for (const selection of selections)if (selection.isEmpty()) commands.push(new $7f981bdacaf58406$export$b709865215a86879(selection, true));
        else {
            const insertSelection = new $jzicX.Selection(selection.endLineNumber, selection.endColumn, selection.endLineNumber, selection.endColumn);
            commands.push(new $5TVJR.ReplaceCommandThatSelectsText(insertSelection, model.getValueInRange(selection)));
        }
        editor.pushUndoStop();
        editor.executeCommands(this.id, commands);
        editor.pushUndoStop();
    }
}
// move lines
class $60fd8996f7db37cf$var$AbstractMoveLinesAction extends $2iJTi.EditorAction {
    constructor(down, opts){
        super(opts);
        this.down = down;
    }
    run(_accessor, editor) {
        let commands = [];
        let selections = editor.getSelections() || [];
        const autoIndent = editor.getOption(9 /* autoIndent */ );
        for (const selection of selections)commands.push(new $103bb4b9fe04e7bc$export$14a8ecb8bc929c31(selection, this.down, autoIndent));
        editor.pushUndoStop();
        editor.executeCommands(this.id, commands);
        editor.pushUndoStop();
    }
}
class $60fd8996f7db37cf$var$MoveLinesUpAction extends $60fd8996f7db37cf$var$AbstractMoveLinesAction {
    constructor(){
        super(false, {
            id: 'editor.action.moveLinesUpAction',
            label: $4dEdH.localize('lines.moveUp', "Move Line Up"),
            alias: 'Move Line Up',
            precondition: $ibKGQ.EditorContextKeys.writable,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.editorTextFocus,
                primary: 528 /* UpArrow */ ,
                linux: {
                    primary: 528 /* UpArrow */ 
                },
                weight: 100 /* EditorContrib */ 
            },
            menuOpts: {
                menuId: $g4v7E.MenuId.MenubarSelectionMenu,
                group: '2_line',
                title: $4dEdH.localize({
                    key: 'miMoveLinesUp',
                    comment: [
                        '&& denotes a mnemonic'
                    ]
                }, "Mo&&ve Line Up"),
                order: 3
            }
        });
    }
}
class $60fd8996f7db37cf$var$MoveLinesDownAction extends $60fd8996f7db37cf$var$AbstractMoveLinesAction {
    constructor(){
        super(true, {
            id: 'editor.action.moveLinesDownAction',
            label: $4dEdH.localize('lines.moveDown', "Move Line Down"),
            alias: 'Move Line Down',
            precondition: $ibKGQ.EditorContextKeys.writable,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.editorTextFocus,
                primary: 530 /* DownArrow */ ,
                linux: {
                    primary: 530 /* DownArrow */ 
                },
                weight: 100 /* EditorContrib */ 
            },
            menuOpts: {
                menuId: $g4v7E.MenuId.MenubarSelectionMenu,
                group: '2_line',
                title: $4dEdH.localize({
                    key: 'miMoveLinesDown',
                    comment: [
                        '&& denotes a mnemonic'
                    ]
                }, "Move &&Line Down"),
                order: 4
            }
        });
    }
}
class $60fd8996f7db37cf$export$e314e63e71893b5f extends $2iJTi.EditorAction {
    constructor(descending, opts){
        super(opts);
        this.descending = descending;
    }
    run(_accessor, editor) {
        const selections = editor.getSelections() || [];
        for (const selection of selections){
            if (!$3fbdcfa71b9c424e$export$ba55b4b15d1da26c.canRun(editor.getModel(), selection, this.descending)) return;
        }
        let commands = [];
        for(let i = 0, len = selections.length; i < len; i++)commands[i] = new $3fbdcfa71b9c424e$export$ba55b4b15d1da26c(selections[i], this.descending);
        editor.pushUndoStop();
        editor.executeCommands(this.id, commands);
        editor.pushUndoStop();
    }
}
class $60fd8996f7db37cf$export$ca6d6f27cd0b1546 extends $60fd8996f7db37cf$export$e314e63e71893b5f {
    constructor(){
        super(false, {
            id: 'editor.action.sortLinesAscending',
            label: $4dEdH.localize('lines.sortAscending', "Sort Lines Ascending"),
            alias: 'Sort Lines Ascending',
            precondition: $ibKGQ.EditorContextKeys.writable
        });
    }
}
class $60fd8996f7db37cf$export$f51f7f4d11319ba2 extends $60fd8996f7db37cf$export$e314e63e71893b5f {
    constructor(){
        super(true, {
            id: 'editor.action.sortLinesDescending',
            label: $4dEdH.localize('lines.sortDescending', "Sort Lines Descending"),
            alias: 'Sort Lines Descending',
            precondition: $ibKGQ.EditorContextKeys.writable
        });
    }
}
class $60fd8996f7db37cf$export$16d0def50a9fdfd0 extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: 'editor.action.removeDuplicateLines',
            label: $4dEdH.localize('lines.deleteDuplicates', "Delete Duplicate Lines"),
            alias: 'Delete Duplicate Lines',
            precondition: $ibKGQ.EditorContextKeys.writable
        });
    }
    run(_accessor, editor) {
        if (!editor.hasModel()) return;
        let model = editor.getModel();
        if (model.getLineCount() === 1 && model.getLineMaxColumn(1) === 1) return;
        let edits = [];
        let endCursorState = [];
        let linesDeleted = 0;
        for (let selection of editor.getSelections()){
            let uniqueLines = new Set();
            let lines = [];
            for(let i = selection.startLineNumber; i <= selection.endLineNumber; i++){
                let line = model.getLineContent(i);
                if (uniqueLines.has(line)) continue;
                lines.push(line);
                uniqueLines.add(line);
            }
            let selectionToReplace = new $jzicX.Selection(selection.startLineNumber, 1, selection.endLineNumber, model.getLineMaxColumn(selection.endLineNumber));
            let adjustedSelectionStart = selection.startLineNumber - linesDeleted;
            let finalSelection = new $jzicX.Selection(adjustedSelectionStart, 1, adjustedSelectionStart + lines.length - 1, lines[lines.length - 1].length);
            edits.push($kHJv6.EditOperation.replace(selectionToReplace, lines.join('\n')));
            endCursorState.push(finalSelection);
            linesDeleted += selection.endLineNumber - selection.startLineNumber + 1 - lines.length;
        }
        editor.pushUndoStop();
        editor.executeEdits(this.id, edits, endCursorState);
        editor.pushUndoStop();
    }
}
class $60fd8996f7db37cf$export$7c2a5fb1bcba21da extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: $60fd8996f7db37cf$export$7c2a5fb1bcba21da.ID,
            label: $4dEdH.localize('lines.trimTrailingWhitespace', "Trim Trailing Whitespace"),
            alias: 'Trim Trailing Whitespace',
            precondition: $ibKGQ.EditorContextKeys.writable,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.editorTextFocus,
                primary: $fuc8X.KeyChord(2089 /* KeyK */ , 2102 /* KeyX */ ),
                weight: 100 /* EditorContrib */ 
            }
        });
    }
    run(_accessor, editor, args) {
        let cursors = [];
        if (args.reason === 'auto-save') // See https://github.com/editorconfig/editorconfig-vscode/issues/47
        // It is very convenient for the editor config extension to invoke this action.
        // So, if we get a reason:'auto-save' passed in, let's preserve cursor positions.
        cursors = (editor.getSelections() || []).map((s)=>new $dcxQ7.Position(s.positionLineNumber, s.positionColumn)
        );
        let selection = editor.getSelection();
        if (selection === null) return;
        let command = new $fb94e4eefdfa3332$export$d5a264e582fa038c(selection, cursors);
        editor.pushUndoStop();
        editor.executeCommands(this.id, [
            command
        ]);
        editor.pushUndoStop();
    }
}
$60fd8996f7db37cf$export$7c2a5fb1bcba21da.ID = 'editor.action.trimTrailingWhitespace';
class $60fd8996f7db37cf$export$a325764c76fc5489 extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: 'editor.action.deleteLines',
            label: $4dEdH.localize('lines.delete', "Delete Line"),
            alias: 'Delete Line',
            precondition: $ibKGQ.EditorContextKeys.writable,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.textInputFocus,
                primary: 3113 /* KeyK */ ,
                weight: 100 /* EditorContrib */ 
            }
        });
    }
    run(_accessor, editor) {
        if (!editor.hasModel()) return;
        let ops = this._getLinesToRemove(editor);
        let model = editor.getModel();
        if (model.getLineCount() === 1 && model.getLineMaxColumn(1) === 1) // Model is empty
        return;
        let linesDeleted = 0;
        let edits = [];
        let cursorState = [];
        for(let i = 0, len = ops.length; i < len; i++){
            const op = ops[i];
            let startLineNumber = op.startLineNumber;
            let endLineNumber = op.endLineNumber;
            let startColumn = 1;
            let endColumn = model.getLineMaxColumn(endLineNumber);
            if (endLineNumber < model.getLineCount()) {
                endLineNumber += 1;
                endColumn = 1;
            } else if (startLineNumber > 1) {
                startLineNumber -= 1;
                startColumn = model.getLineMaxColumn(startLineNumber);
            }
            edits.push($kHJv6.EditOperation.replace(new $jzicX.Selection(startLineNumber, startColumn, endLineNumber, endColumn), ''));
            cursorState.push(new $jzicX.Selection(startLineNumber - linesDeleted, op.positionColumn, startLineNumber - linesDeleted, op.positionColumn));
            linesDeleted += op.endLineNumber - op.startLineNumber + 1;
        }
        editor.pushUndoStop();
        editor.executeEdits(this.id, edits, cursorState);
        editor.pushUndoStop();
    }
    _getLinesToRemove(editor) {
        // Construct delete operations
        let operations = editor.getSelections().map((s)=>{
            let endLineNumber = s.endLineNumber;
            if (s.startLineNumber < s.endLineNumber && s.endColumn === 1) endLineNumber -= 1;
            return {
                startLineNumber: s.startLineNumber,
                selectionStartColumn: s.selectionStartColumn,
                endLineNumber: endLineNumber,
                positionColumn: s.positionColumn
            };
        });
        // Sort delete operations
        operations.sort((a, b)=>{
            if (a.startLineNumber === b.startLineNumber) return a.endLineNumber - b.endLineNumber;
            return a.startLineNumber - b.startLineNumber;
        });
        // Merge delete operations which are adjacent or overlapping
        let mergedOperations = [];
        let previousOperation = operations[0];
        for(let i = 1; i < operations.length; i++)if (previousOperation.endLineNumber + 1 >= operations[i].startLineNumber) // Merge current operations into the previous one
        previousOperation.endLineNumber = operations[i].endLineNumber;
        else {
            // Push previous operation
            mergedOperations.push(previousOperation);
            previousOperation = operations[i];
        }
        // Push the last operation
        mergedOperations.push(previousOperation);
        return mergedOperations;
    }
}
class $60fd8996f7db37cf$export$b16686fff98be8f7 extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: 'editor.action.indentLines',
            label: $4dEdH.localize('lines.indent', "Indent Line"),
            alias: 'Indent Line',
            precondition: $ibKGQ.EditorContextKeys.writable,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.editorTextFocus,
                primary: 2137 /* BracketRight */ ,
                weight: 100 /* EditorContrib */ 
            }
        });
    }
    run(_accessor, editor) {
        const viewModel = editor._getViewModel();
        if (!viewModel) return;
        editor.pushUndoStop();
        editor.executeCommands(this.id, $e3Xwg.TypeOperations.indent(viewModel.cursorConfig, editor.getModel(), editor.getSelections()));
        editor.pushUndoStop();
    }
}
class $60fd8996f7db37cf$var$OutdentLinesAction extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: 'editor.action.outdentLines',
            label: $4dEdH.localize('lines.outdent', "Outdent Line"),
            alias: 'Outdent Line',
            precondition: $ibKGQ.EditorContextKeys.writable,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.editorTextFocus,
                primary: 2135 /* BracketLeft */ ,
                weight: 100 /* EditorContrib */ 
            }
        });
    }
    run(_accessor, editor) {
        $ami5U.CoreEditingCommands.Outdent.runEditorCommand(_accessor, editor, null);
    }
}
class $60fd8996f7db37cf$export$db5751c0accc4bcc extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: 'editor.action.insertLineBefore',
            label: $4dEdH.localize('lines.insertBefore', "Insert Line Above"),
            alias: 'Insert Line Above',
            precondition: $ibKGQ.EditorContextKeys.writable,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.editorTextFocus,
                primary: 3075 /* Enter */ ,
                weight: 100 /* EditorContrib */ 
            }
        });
    }
    run(_accessor, editor) {
        const viewModel = editor._getViewModel();
        if (!viewModel) return;
        editor.pushUndoStop();
        editor.executeCommands(this.id, $e3Xwg.TypeOperations.lineInsertBefore(viewModel.cursorConfig, editor.getModel(), editor.getSelections()));
    }
}
class $60fd8996f7db37cf$export$2dd5d09a007eecf5 extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: 'editor.action.insertLineAfter',
            label: $4dEdH.localize('lines.insertAfter', "Insert Line Below"),
            alias: 'Insert Line Below',
            precondition: $ibKGQ.EditorContextKeys.writable,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.editorTextFocus,
                primary: 2051 /* Enter */ ,
                weight: 100 /* EditorContrib */ 
            }
        });
    }
    run(_accessor, editor) {
        const viewModel = editor._getViewModel();
        if (!viewModel) return;
        editor.pushUndoStop();
        editor.executeCommands(this.id, $e3Xwg.TypeOperations.lineInsertAfter(viewModel.cursorConfig, editor.getModel(), editor.getSelections()));
    }
}
class $60fd8996f7db37cf$export$7fdcece70613530e extends $2iJTi.EditorAction {
    run(_accessor, editor) {
        if (!editor.hasModel()) return;
        const primaryCursor = editor.getSelection();
        let rangesToDelete = this._getRangesToDelete(editor);
        // merge overlapping selections
        let effectiveRanges = [];
        for(let i = 0, count = rangesToDelete.length - 1; i < count; i++){
            let range = rangesToDelete[i];
            let nextRange = rangesToDelete[i + 1];
            if ($d00il.Range.intersectRanges(range, nextRange) === null) effectiveRanges.push(range);
            else rangesToDelete[i + 1] = $d00il.Range.plusRange(range, nextRange);
        }
        effectiveRanges.push(rangesToDelete[rangesToDelete.length - 1]);
        let endCursorState = this._getEndCursorState(primaryCursor, effectiveRanges);
        let edits = effectiveRanges.map((range)=>{
            return $kHJv6.EditOperation.replace(range, '');
        });
        editor.pushUndoStop();
        editor.executeEdits(this.id, edits, endCursorState);
        editor.pushUndoStop();
    }
}
class $60fd8996f7db37cf$export$9a3834b09b6983ed extends $60fd8996f7db37cf$export$7fdcece70613530e {
    constructor(){
        super({
            id: 'deleteAllLeft',
            label: $4dEdH.localize('lines.deleteAllLeft', "Delete All Left"),
            alias: 'Delete All Left',
            precondition: $ibKGQ.EditorContextKeys.writable,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.textInputFocus,
                primary: 0,
                mac: {
                    primary: 2049 /* Backspace */ 
                },
                weight: 100 /* EditorContrib */ 
            }
        });
    }
    _getEndCursorState(primaryCursor, rangesToDelete) {
        let endPrimaryCursor = null;
        let endCursorState = [];
        let deletedLines = 0;
        rangesToDelete.forEach((range)=>{
            let endCursor;
            if (range.endColumn === 1 && deletedLines > 0) {
                let newStartLine = range.startLineNumber - deletedLines;
                endCursor = new $jzicX.Selection(newStartLine, range.startColumn, newStartLine, range.startColumn);
            } else endCursor = new $jzicX.Selection(range.startLineNumber, range.startColumn, range.startLineNumber, range.startColumn);
            deletedLines += range.endLineNumber - range.startLineNumber;
            if (range.intersectRanges(primaryCursor)) endPrimaryCursor = endCursor;
            else endCursorState.push(endCursor);
        });
        if (endPrimaryCursor) endCursorState.unshift(endPrimaryCursor);
        return endCursorState;
    }
    _getRangesToDelete(editor) {
        let selections = editor.getSelections();
        if (selections === null) return [];
        let rangesToDelete = selections;
        let model = editor.getModel();
        if (model === null) return [];
        rangesToDelete.sort($d00il.Range.compareRangesUsingStarts);
        rangesToDelete = rangesToDelete.map((selection)=>{
            if (selection.isEmpty()) {
                if (selection.startColumn === 1) {
                    let deleteFromLine = Math.max(1, selection.startLineNumber - 1);
                    let deleteFromColumn = selection.startLineNumber === 1 ? 1 : model.getLineContent(deleteFromLine).length + 1;
                    return new $d00il.Range(deleteFromLine, deleteFromColumn, selection.startLineNumber, 1);
                } else return new $d00il.Range(selection.startLineNumber, 1, selection.startLineNumber, selection.startColumn);
            } else return new $d00il.Range(selection.startLineNumber, 1, selection.endLineNumber, selection.endColumn);
        });
        return rangesToDelete;
    }
}
class $60fd8996f7db37cf$export$698902706bc70cc6 extends $60fd8996f7db37cf$export$7fdcece70613530e {
    constructor(){
        super({
            id: 'deleteAllRight',
            label: $4dEdH.localize('lines.deleteAllRight', "Delete All Right"),
            alias: 'Delete All Right',
            precondition: $ibKGQ.EditorContextKeys.writable,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.textInputFocus,
                primary: 0,
                mac: {
                    primary: 297 /* KeyK */ ,
                    secondary: [
                        2068 /* Delete */ 
                    ]
                },
                weight: 100 /* EditorContrib */ 
            }
        });
    }
    _getEndCursorState(primaryCursor, rangesToDelete) {
        let endPrimaryCursor = null;
        let endCursorState = [];
        for(let i = 0, len = rangesToDelete.length, offset = 0; i < len; i++){
            let range = rangesToDelete[i];
            let endCursor = new $jzicX.Selection(range.startLineNumber - offset, range.startColumn, range.startLineNumber - offset, range.startColumn);
            if (range.intersectRanges(primaryCursor)) endPrimaryCursor = endCursor;
            else endCursorState.push(endCursor);
        }
        if (endPrimaryCursor) endCursorState.unshift(endPrimaryCursor);
        return endCursorState;
    }
    _getRangesToDelete(editor) {
        let model = editor.getModel();
        if (model === null) return [];
        let selections = editor.getSelections();
        if (selections === null) return [];
        let rangesToDelete = selections.map((sel)=>{
            if (sel.isEmpty()) {
                const maxColumn = model.getLineMaxColumn(sel.startLineNumber);
                if (sel.startColumn === maxColumn) return new $d00il.Range(sel.startLineNumber, sel.startColumn, sel.startLineNumber + 1, 1);
                else return new $d00il.Range(sel.startLineNumber, sel.startColumn, sel.startLineNumber, maxColumn);
            }
            return sel;
        });
        rangesToDelete.sort($d00il.Range.compareRangesUsingStarts);
        return rangesToDelete;
    }
}
class $60fd8996f7db37cf$export$dd737e2c91d24d1a extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: 'editor.action.joinLines',
            label: $4dEdH.localize('lines.joinLines', "Join Lines"),
            alias: 'Join Lines',
            precondition: $ibKGQ.EditorContextKeys.writable,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.editorTextFocus,
                primary: 0,
                mac: {
                    primary: 296 /* KeyJ */ 
                },
                weight: 100 /* EditorContrib */ 
            }
        });
    }
    run(_accessor, editor) {
        let selections = editor.getSelections();
        if (selections === null) return;
        let primaryCursor = editor.getSelection();
        if (primaryCursor === null) return;
        selections.sort($d00il.Range.compareRangesUsingStarts);
        let reducedSelections = [];
        let lastSelection = selections.reduce((previousValue, currentValue)=>{
            if (previousValue.isEmpty()) {
                if (previousValue.endLineNumber === currentValue.startLineNumber) {
                    if (primaryCursor.equalsSelection(previousValue)) primaryCursor = currentValue;
                    return currentValue;
                }
                if (currentValue.startLineNumber > previousValue.endLineNumber + 1) {
                    reducedSelections.push(previousValue);
                    return currentValue;
                } else return new $jzicX.Selection(previousValue.startLineNumber, previousValue.startColumn, currentValue.endLineNumber, currentValue.endColumn);
            } else {
                if (currentValue.startLineNumber > previousValue.endLineNumber) {
                    reducedSelections.push(previousValue);
                    return currentValue;
                } else return new $jzicX.Selection(previousValue.startLineNumber, previousValue.startColumn, currentValue.endLineNumber, currentValue.endColumn);
            }
        });
        reducedSelections.push(lastSelection);
        let model = editor.getModel();
        if (model === null) return;
        let edits = [];
        let endCursorState = [];
        let endPrimaryCursor = primaryCursor;
        let lineOffset = 0;
        for(let i = 0, len = reducedSelections.length; i < len; i++){
            let selection = reducedSelections[i];
            let startLineNumber = selection.startLineNumber;
            let startColumn = 1;
            let columnDeltaOffset = 0;
            let endLineNumber, endColumn;
            let selectionEndPositionOffset = model.getLineContent(selection.endLineNumber).length - selection.endColumn;
            if (selection.isEmpty() || selection.startLineNumber === selection.endLineNumber) {
                let position = selection.getStartPosition();
                if (position.lineNumber < model.getLineCount()) {
                    endLineNumber = startLineNumber + 1;
                    endColumn = model.getLineMaxColumn(endLineNumber);
                } else {
                    endLineNumber = position.lineNumber;
                    endColumn = model.getLineMaxColumn(position.lineNumber);
                }
            } else {
                endLineNumber = selection.endLineNumber;
                endColumn = model.getLineMaxColumn(endLineNumber);
            }
            let trimmedLinesContent = model.getLineContent(startLineNumber);
            for(let i1 = startLineNumber + 1; i1 <= endLineNumber; i1++){
                let lineText = model.getLineContent(i1);
                let firstNonWhitespaceIdx = model.getLineFirstNonWhitespaceColumn(i1);
                if (firstNonWhitespaceIdx >= 1) {
                    let insertSpace = true;
                    if (trimmedLinesContent === '') insertSpace = false;
                    if (insertSpace && (trimmedLinesContent.charAt(trimmedLinesContent.length - 1) === ' ' || trimmedLinesContent.charAt(trimmedLinesContent.length - 1) === '\t')) {
                        insertSpace = false;
                        trimmedLinesContent = trimmedLinesContent.replace(/[\s\uFEFF\xA0]+$/g, ' ');
                    }
                    let lineTextWithoutIndent = lineText.substr(firstNonWhitespaceIdx - 1);
                    trimmedLinesContent += (insertSpace ? ' ' : '') + lineTextWithoutIndent;
                    if (insertSpace) columnDeltaOffset = lineTextWithoutIndent.length + 1;
                    else columnDeltaOffset = lineTextWithoutIndent.length;
                } else columnDeltaOffset = 0;
            }
            let deleteSelection = new $d00il.Range(startLineNumber, startColumn, endLineNumber, endColumn);
            if (!deleteSelection.isEmpty()) {
                let resultSelection;
                if (selection.isEmpty()) {
                    edits.push($kHJv6.EditOperation.replace(deleteSelection, trimmedLinesContent));
                    resultSelection = new $jzicX.Selection(deleteSelection.startLineNumber - lineOffset, trimmedLinesContent.length - columnDeltaOffset + 1, startLineNumber - lineOffset, trimmedLinesContent.length - columnDeltaOffset + 1);
                } else if (selection.startLineNumber === selection.endLineNumber) {
                    edits.push($kHJv6.EditOperation.replace(deleteSelection, trimmedLinesContent));
                    resultSelection = new $jzicX.Selection(selection.startLineNumber - lineOffset, selection.startColumn, selection.endLineNumber - lineOffset, selection.endColumn);
                } else {
                    edits.push($kHJv6.EditOperation.replace(deleteSelection, trimmedLinesContent));
                    resultSelection = new $jzicX.Selection(selection.startLineNumber - lineOffset, selection.startColumn, selection.startLineNumber - lineOffset, trimmedLinesContent.length - selectionEndPositionOffset);
                }
                if ($d00il.Range.intersectRanges(deleteSelection, primaryCursor) !== null) endPrimaryCursor = resultSelection;
                else endCursorState.push(resultSelection);
            }
            lineOffset += deleteSelection.endLineNumber - deleteSelection.startLineNumber;
        }
        endCursorState.unshift(endPrimaryCursor);
        editor.pushUndoStop();
        editor.executeEdits(this.id, edits, endCursorState);
        editor.pushUndoStop();
    }
}
class $60fd8996f7db37cf$export$30796fb0d031fb22 extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: 'editor.action.transpose',
            label: $4dEdH.localize('editor.transpose', "Transpose characters around the cursor"),
            alias: 'Transpose characters around the cursor',
            precondition: $ibKGQ.EditorContextKeys.writable
        });
    }
    run(_accessor, editor) {
        let selections = editor.getSelections();
        if (selections === null) return;
        let model = editor.getModel();
        if (model === null) return;
        let commands = [];
        for(let i = 0, len = selections.length; i < len; i++){
            let selection = selections[i];
            if (!selection.isEmpty()) continue;
            let cursor = selection.getStartPosition();
            let maxColumn = model.getLineMaxColumn(cursor.lineNumber);
            if (cursor.column >= maxColumn) {
                if (cursor.lineNumber === model.getLineCount()) continue;
                // The cursor is at the end of current line and current line is not empty
                // then we transpose the character before the cursor and the line break if there is any following line.
                let deleteSelection = new $d00il.Range(cursor.lineNumber, Math.max(1, cursor.column - 1), cursor.lineNumber + 1, 1);
                let chars = model.getValueInRange(deleteSelection).split('').reverse().join('');
                commands.push(new $5TVJR.ReplaceCommand(new $jzicX.Selection(cursor.lineNumber, Math.max(1, cursor.column - 1), cursor.lineNumber + 1, 1), chars));
            } else {
                let deleteSelection = new $d00il.Range(cursor.lineNumber, Math.max(1, cursor.column - 1), cursor.lineNumber, cursor.column + 1);
                let chars = model.getValueInRange(deleteSelection).split('').reverse().join('');
                commands.push(new $5TVJR.ReplaceCommandThatPreservesSelection(deleteSelection, chars, new $jzicX.Selection(cursor.lineNumber, cursor.column + 1, cursor.lineNumber, cursor.column + 1)));
            }
        }
        editor.pushUndoStop();
        editor.executeCommands(this.id, commands);
        editor.pushUndoStop();
    }
}
class $60fd8996f7db37cf$export$4aaeafa0e9d33d8d extends $2iJTi.EditorAction {
    run(_accessor, editor) {
        const selections = editor.getSelections();
        if (selections === null) return;
        const model = editor.getModel();
        if (model === null) return;
        const wordSeparators = editor.getOption(116 /* wordSeparators */ );
        const textEdits = [];
        for (const selection of selections)if (selection.isEmpty()) {
            const cursor = selection.getStartPosition();
            const word = editor.getConfiguredWordAtPosition(cursor);
            if (!word) continue;
            const wordRange = new $d00il.Range(cursor.lineNumber, word.startColumn, cursor.lineNumber, word.endColumn);
            const text = model.getValueInRange(wordRange);
            textEdits.push($kHJv6.EditOperation.replace(wordRange, this._modifyText(text, wordSeparators)));
        } else {
            const text = model.getValueInRange(selection);
            textEdits.push($kHJv6.EditOperation.replace(selection, this._modifyText(text, wordSeparators)));
        }
        editor.pushUndoStop();
        editor.executeEdits(this.id, textEdits);
        editor.pushUndoStop();
    }
}
class $60fd8996f7db37cf$export$952432f59b47d01d extends $60fd8996f7db37cf$export$4aaeafa0e9d33d8d {
    constructor(){
        super({
            id: 'editor.action.transformToUppercase',
            label: $4dEdH.localize('editor.transformToUppercase', "Transform to Uppercase"),
            alias: 'Transform to Uppercase',
            precondition: $ibKGQ.EditorContextKeys.writable
        });
    }
    _modifyText(text, wordSeparators) {
        return text.toLocaleUpperCase();
    }
}
class $60fd8996f7db37cf$export$f2f207fda3be448e extends $60fd8996f7db37cf$export$4aaeafa0e9d33d8d {
    constructor(){
        super({
            id: 'editor.action.transformToLowercase',
            label: $4dEdH.localize('editor.transformToLowercase', "Transform to Lowercase"),
            alias: 'Transform to Lowercase',
            precondition: $ibKGQ.EditorContextKeys.writable
        });
    }
    _modifyText(text, wordSeparators) {
        return text.toLocaleLowerCase();
    }
}
class $60fd8996f7db37cf$var$BackwardsCompatibleRegExp {
    constructor(_pattern, _flags){
        this._pattern = _pattern;
        this._flags = _flags;
        this._actual = null;
        this._evaluated = false;
    }
    get() {
        if (!this._evaluated) {
            this._evaluated = true;
            try {
                this._actual = new RegExp(this._pattern, this._flags);
            } catch (err) {
            // this browser does not support this regular expression
            }
        }
        return this._actual;
    }
    isSupported() {
        return this.get() !== null;
    }
}
class $60fd8996f7db37cf$export$9e3e216230e0d173 extends $60fd8996f7db37cf$export$4aaeafa0e9d33d8d {
    constructor(){
        super({
            id: 'editor.action.transformToTitlecase',
            label: $4dEdH.localize('editor.transformToTitlecase', "Transform to Title Case"),
            alias: 'Transform to Title Case',
            precondition: $ibKGQ.EditorContextKeys.writable
        });
    }
    _modifyText(text, wordSeparators) {
        const titleBoundary = $60fd8996f7db37cf$export$9e3e216230e0d173.titleBoundary.get();
        if (!titleBoundary) // cannot support this
        return text;
        return text.toLocaleLowerCase().replace(titleBoundary, (b)=>b.toLocaleUpperCase()
        );
    }
}
$60fd8996f7db37cf$export$9e3e216230e0d173.titleBoundary = new $60fd8996f7db37cf$var$BackwardsCompatibleRegExp('(^|[^\\p{L}\\p{N}\']|((^|\\P{L})\'))\\p{L}', 'gmu');
class $60fd8996f7db37cf$export$120f47daedc39d47 extends $60fd8996f7db37cf$export$4aaeafa0e9d33d8d {
    constructor(){
        super({
            id: 'editor.action.transformToSnakecase',
            label: $4dEdH.localize('editor.transformToSnakecase', "Transform to Snake Case"),
            alias: 'Transform to Snake Case',
            precondition: $ibKGQ.EditorContextKeys.writable
        });
    }
    _modifyText(text, wordSeparators) {
        const caseBoundary = $60fd8996f7db37cf$export$120f47daedc39d47.caseBoundary.get();
        const singleLetters = $60fd8996f7db37cf$export$120f47daedc39d47.singleLetters.get();
        if (!caseBoundary || !singleLetters) // cannot support this
        return text;
        return text.replace(caseBoundary, '$1_$2').replace(singleLetters, '$1_$2$3').toLocaleLowerCase();
    }
}
$60fd8996f7db37cf$export$120f47daedc39d47.caseBoundary = new $60fd8996f7db37cf$var$BackwardsCompatibleRegExp('(\\p{Ll})(\\p{Lu})', 'gmu');
$60fd8996f7db37cf$export$120f47daedc39d47.singleLetters = new $60fd8996f7db37cf$var$BackwardsCompatibleRegExp('(\\p{Lu}|\\p{N})(\\p{Lu})(\\p{Ll})', 'gmu');
$2iJTi.registerEditorAction($60fd8996f7db37cf$var$CopyLinesUpAction);
$2iJTi.registerEditorAction($60fd8996f7db37cf$var$CopyLinesDownAction);
$2iJTi.registerEditorAction($60fd8996f7db37cf$export$3cbca8715f2928a3);
$2iJTi.registerEditorAction($60fd8996f7db37cf$var$MoveLinesUpAction);
$2iJTi.registerEditorAction($60fd8996f7db37cf$var$MoveLinesDownAction);
$2iJTi.registerEditorAction($60fd8996f7db37cf$export$ca6d6f27cd0b1546);
$2iJTi.registerEditorAction($60fd8996f7db37cf$export$f51f7f4d11319ba2);
$2iJTi.registerEditorAction($60fd8996f7db37cf$export$16d0def50a9fdfd0);
$2iJTi.registerEditorAction($60fd8996f7db37cf$export$7c2a5fb1bcba21da);
$2iJTi.registerEditorAction($60fd8996f7db37cf$export$a325764c76fc5489);
$2iJTi.registerEditorAction($60fd8996f7db37cf$export$b16686fff98be8f7);
$2iJTi.registerEditorAction($60fd8996f7db37cf$var$OutdentLinesAction);
$2iJTi.registerEditorAction($60fd8996f7db37cf$export$db5751c0accc4bcc);
$2iJTi.registerEditorAction($60fd8996f7db37cf$export$2dd5d09a007eecf5);
$2iJTi.registerEditorAction($60fd8996f7db37cf$export$9a3834b09b6983ed);
$2iJTi.registerEditorAction($60fd8996f7db37cf$export$698902706bc70cc6);
$2iJTi.registerEditorAction($60fd8996f7db37cf$export$dd737e2c91d24d1a);
$2iJTi.registerEditorAction($60fd8996f7db37cf$export$30796fb0d031fb22);
$2iJTi.registerEditorAction($60fd8996f7db37cf$export$952432f59b47d01d);
$2iJTi.registerEditorAction($60fd8996f7db37cf$export$f2f207fda3be448e);
if ($60fd8996f7db37cf$export$120f47daedc39d47.caseBoundary.isSupported() && $60fd8996f7db37cf$export$120f47daedc39d47.singleLetters.isSupported()) $2iJTi.registerEditorAction($60fd8996f7db37cf$export$120f47daedc39d47);
if ($60fd8996f7db37cf$export$9e3e216230e0d173.titleBoundary.isSupported()) $2iJTi.registerEditorAction($60fd8996f7db37cf$export$9e3e216230e0d173);


var $938de9d978463713$exports = {};

var $kJ8UG = parcelRequire("kJ8UG");

var $6bXyA = parcelRequire("6bXyA");

var $giPcZ = parcelRequire("giPcZ");

var $bjjQO = parcelRequire("bjjQO");

var $gPkHZ = parcelRequire("gPkHZ");

var $9cWcn = parcelRequire("9cWcn");

var $jcr1R = parcelRequire("jcr1R");

var $5OJ54 = parcelRequire("5OJ54");

var $2iJTi = parcelRequire("2iJTi");

var $2Qfl0 = parcelRequire("2Qfl0");

var $dcxQ7 = parcelRequire("dcxQ7");

var $d00il = parcelRequire("d00il");

var $ibKGQ = parcelRequire("ibKGQ");

var $91ntV = parcelRequire("91ntV");

var $4PmRQ = parcelRequire("4PmRQ");

var $aKdIg = parcelRequire("aKdIg");

var $4dEdH = parcelRequire("4dEdH");

var $cxCeF = parcelRequire("cxCeF");

var $gaWeX = parcelRequire("gaWeX");

var $azIPz = parcelRequire("azIPz");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $938de9d978463713$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var $938de9d978463713$var$__param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
};
var $938de9d978463713$var$__awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
const $938de9d978463713$export$d3411856fe5ceb08 = new $cxCeF.RawContextKey('LinkedEditingInputVisible', false);
const $938de9d978463713$var$DECORATION_CLASS_NAME = 'linked-editing-decoration';
let $938de9d978463713$export$6a78bc49d64aa850 = class $938de9d978463713$export$6a78bc49d64aa850 extends $9cWcn.Disposable {
    constructor(editor, contextKeyService){
        super();
        this._debounceDuration = 200;
        this._localToDispose = this._register(new $9cWcn.DisposableStore());
        this._editor = editor;
        this._enabled = false;
        this._visibleContextKey = $938de9d978463713$export$d3411856fe5ceb08.bindTo(contextKeyService);
        this._currentDecorations = [];
        this._languageWordPattern = null;
        this._currentWordPattern = null;
        this._ignoreChangeEvent = false;
        this._localToDispose = this._register(new $9cWcn.DisposableStore());
        this._rangeUpdateTriggerPromise = null;
        this._rangeSyncTriggerPromise = null;
        this._currentRequest = null;
        this._currentRequestPosition = null;
        this._currentRequestModelVersion = null;
        this._register(this._editor.onDidChangeModel(()=>this.reinitialize(true)
        ));
        this._register(this._editor.onDidChangeConfiguration((e)=>{
            if (e.hasChanged(61 /* linkedEditing */ ) || e.hasChanged(81 /* renameOnType */ )) this.reinitialize(false);
        }));
        this._register($4PmRQ.LinkedEditingRangeProviderRegistry.onDidChange(()=>this.reinitialize(false)
        ));
        this._register(this._editor.onDidChangeModelLanguage(()=>this.reinitialize(true)
        ));
        this.reinitialize(true);
    }
    static get(editor) {
        return editor.getContribution($938de9d978463713$export$6a78bc49d64aa850.ID);
    }
    reinitialize(forceRefresh) {
        const model = this._editor.getModel();
        const isEnabled = model !== null && (this._editor.getOption(61 /* linkedEditing */ ) || this._editor.getOption(81 /* renameOnType */ )) && $4PmRQ.LinkedEditingRangeProviderRegistry.has(model);
        if (isEnabled === this._enabled && !forceRefresh) return;
        this._enabled = isEnabled;
        this.clearRanges();
        this._localToDispose.clear();
        if (!isEnabled || model === null) return;
        this._languageWordPattern = $aKdIg.LanguageConfigurationRegistry.getWordDefinition(model.getLanguageId());
        this._localToDispose.add(model.onDidChangeLanguageConfiguration(()=>{
            this._languageWordPattern = $aKdIg.LanguageConfigurationRegistry.getWordDefinition(model.getLanguageId());
        }));
        const rangeUpdateScheduler = new $6bXyA.Delayer(this._debounceDuration);
        const triggerRangeUpdate = ()=>{
            this._rangeUpdateTriggerPromise = rangeUpdateScheduler.trigger(()=>this.updateRanges()
            , this._debounceDuration);
        };
        const rangeSyncScheduler = new $6bXyA.Delayer(0);
        const triggerRangeSync = (decorations)=>{
            this._rangeSyncTriggerPromise = rangeSyncScheduler.trigger(()=>this._syncRanges(decorations)
            );
        };
        this._localToDispose.add(this._editor.onDidChangeCursorPosition(()=>{
            triggerRangeUpdate();
        }));
        this._localToDispose.add(this._editor.onDidChangeModelContent((e)=>{
            if (!this._ignoreChangeEvent) {
                if (this._currentDecorations.length > 0) {
                    const referenceRange = model.getDecorationRange(this._currentDecorations[0]);
                    if (referenceRange && e.changes.every((c)=>referenceRange.intersectRanges(c.range)
                    )) {
                        triggerRangeSync(this._currentDecorations);
                        return;
                    }
                }
            }
            triggerRangeUpdate();
        }));
        this._localToDispose.add({
            dispose: ()=>{
                rangeUpdateScheduler.cancel();
                rangeSyncScheduler.cancel();
            }
        });
        this.updateRanges();
    }
    _syncRanges(decorations) {
        // dalayed invocation, make sure we're still on
        if (!this._editor.hasModel() || decorations !== this._currentDecorations || decorations.length === 0) // nothing to do
        return;
        const model = this._editor.getModel();
        const referenceRange = model.getDecorationRange(decorations[0]);
        if (!referenceRange || referenceRange.startLineNumber !== referenceRange.endLineNumber) return this.clearRanges();
        const referenceValue = model.getValueInRange(referenceRange);
        if (this._currentWordPattern) {
            const match = referenceValue.match(this._currentWordPattern);
            const matchLength = match ? match[0].length : 0;
            if (matchLength !== referenceValue.length) return this.clearRanges();
        }
        let edits = [];
        for(let i = 1, len = decorations.length; i < len; i++){
            const mirrorRange = model.getDecorationRange(decorations[i]);
            if (!mirrorRange) continue;
            if (mirrorRange.startLineNumber !== mirrorRange.endLineNumber) edits.push({
                range: mirrorRange,
                text: referenceValue
            });
            else {
                let oldValue = model.getValueInRange(mirrorRange);
                let newValue = referenceValue;
                let rangeStartColumn = mirrorRange.startColumn;
                let rangeEndColumn = mirrorRange.endColumn;
                const commonPrefixLength = $jcr1R.commonPrefixLength(oldValue, newValue);
                rangeStartColumn += commonPrefixLength;
                oldValue = oldValue.substr(commonPrefixLength);
                newValue = newValue.substr(commonPrefixLength);
                const commonSuffixLength = $jcr1R.commonSuffixLength(oldValue, newValue);
                rangeEndColumn -= commonSuffixLength;
                oldValue = oldValue.substr(0, oldValue.length - commonSuffixLength);
                newValue = newValue.substr(0, newValue.length - commonSuffixLength);
                if (rangeStartColumn !== rangeEndColumn || newValue.length !== 0) edits.push({
                    range: new $d00il.Range(mirrorRange.startLineNumber, rangeStartColumn, mirrorRange.endLineNumber, rangeEndColumn),
                    text: newValue
                });
            }
        }
        if (edits.length === 0) return;
        try {
            this._editor.popUndoStop();
            this._ignoreChangeEvent = true;
            const prevEditOperationType = this._editor._getViewModel().getPrevEditOperationType();
            this._editor.executeEdits('linkedEditing', edits);
            this._editor._getViewModel().setPrevEditOperationType(prevEditOperationType);
        } finally{
            this._ignoreChangeEvent = false;
        }
    }
    dispose() {
        this.clearRanges();
        super.dispose();
    }
    clearRanges() {
        this._visibleContextKey.set(false);
        this._currentDecorations = this._editor.deltaDecorations(this._currentDecorations, []);
        if (this._currentRequest) {
            this._currentRequest.cancel();
            this._currentRequest = null;
            this._currentRequestPosition = null;
        }
    }
    updateRanges(force = false) {
        return $938de9d978463713$var$__awaiter(this, void 0, void 0, function*() {
            if (!this._editor.hasModel()) {
                this.clearRanges();
                return;
            }
            const position = this._editor.getPosition();
            if (!this._enabled && !force || this._editor.getSelections().length > 1) {
                // disabled or multicursor
                this.clearRanges();
                return;
            }
            const model = this._editor.getModel();
            const modelVersionId = model.getVersionId();
            if (this._currentRequestPosition && this._currentRequestModelVersion === modelVersionId) {
                if (position.equals(this._currentRequestPosition)) return; // same position
                if (this._currentDecorations && this._currentDecorations.length > 0) {
                    const range = model.getDecorationRange(this._currentDecorations[0]);
                    if (range && range.containsPosition(position)) return; // just moving inside the existing primary range
                }
            }
            this._currentRequestPosition = position;
            this._currentRequestModelVersion = modelVersionId;
            const request = $6bXyA.createCancelablePromise((token)=>$938de9d978463713$var$__awaiter(this, void 0, void 0, function*() {
                    try {
                        const response = yield $938de9d978463713$var$getLinkedEditingRanges(model, position, token);
                        if (request !== this._currentRequest) return;
                        this._currentRequest = null;
                        if (modelVersionId !== model.getVersionId()) return;
                        let ranges = [];
                        if (response === null || response === void 0 ? void 0 : response.ranges) ranges = response.ranges;
                        this._currentWordPattern = (response === null || response === void 0 ? void 0 : response.wordPattern) || this._languageWordPattern;
                        let foundReferenceRange = false;
                        for(let i = 0, len = ranges.length; i < len; i++)if ($d00il.Range.containsPosition(ranges[i], position)) {
                            foundReferenceRange = true;
                            if (i !== 0) {
                                const referenceRange = ranges[i];
                                ranges.splice(i, 1);
                                ranges.unshift(referenceRange);
                            }
                            break;
                        }
                        if (!foundReferenceRange) {
                            // Cannot do linked editing if the ranges are not where the cursor is...
                            this.clearRanges();
                            return;
                        }
                        const decorations = ranges.map((range)=>({
                                range: range,
                                options: $938de9d978463713$export$6a78bc49d64aa850.DECORATION
                            })
                        );
                        this._visibleContextKey.set(true);
                        this._currentDecorations = this._editor.deltaDecorations(this._currentDecorations, decorations);
                    } catch (err) {
                        if (!$gPkHZ.isPromiseCanceledError(err)) $gPkHZ.onUnexpectedError(err);
                        if (this._currentRequest === request || !this._currentRequest) // stop if we are still the latest request
                        this.clearRanges();
                    }
                })
            );
            this._currentRequest = request;
            return request;
        });
    }
};
$938de9d978463713$export$6a78bc49d64aa850.ID = 'editor.contrib.linkedEditing';
$938de9d978463713$export$6a78bc49d64aa850.DECORATION = $91ntV.ModelDecorationOptions.register({
    description: 'linked-editing',
    stickiness: 0 /* AlwaysGrowsWhenTypingAtEdges */ ,
    className: $938de9d978463713$var$DECORATION_CLASS_NAME
});
$938de9d978463713$export$6a78bc49d64aa850 = $938de9d978463713$var$__decorate([
    $938de9d978463713$var$__param(1, $cxCeF.IContextKeyService)
], $938de9d978463713$export$6a78bc49d64aa850);
class $938de9d978463713$export$3ac885947f0e79d7 extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: 'editor.action.linkedEditing',
            label: $4dEdH.localize('linkedEditing.label', "Start Linked Editing"),
            alias: 'Start Linked Editing',
            precondition: $cxCeF.ContextKeyExpr.and($ibKGQ.EditorContextKeys.writable, $ibKGQ.EditorContextKeys.hasRenameProvider),
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.editorTextFocus,
                primary: 3132 /* F2 */ ,
                weight: 100 /* EditorContrib */ 
            }
        });
    }
    runCommand(accessor1, args) {
        const editorService = accessor1.get($2Qfl0.ICodeEditorService);
        const [uri, pos] = Array.isArray(args) && args || [
            undefined,
            undefined
        ];
        if ($5OJ54.URI.isUri(uri) && $dcxQ7.Position.isIPosition(pos)) return editorService.openCodeEditor({
            resource: uri
        }, editorService.getActiveCodeEditor()).then((editor)=>{
            if (!editor) return;
            editor.setPosition(pos);
            editor.invokeWithinContext((accessor)=>{
                this.reportTelemetry(accessor, editor);
                return this.run(accessor, editor);
            });
        }, $gPkHZ.onUnexpectedError);
        return super.runCommand(accessor1, args);
    }
    run(_accessor, editor) {
        const controller = $938de9d978463713$export$6a78bc49d64aa850.get(editor);
        if (controller) return Promise.resolve(controller.updateRanges(true));
        return Promise.resolve();
    }
}
const $938de9d978463713$var$LinkedEditingCommand = $2iJTi.EditorCommand.bindToContribution($938de9d978463713$export$6a78bc49d64aa850.get);
$2iJTi.registerEditorCommand(new $938de9d978463713$var$LinkedEditingCommand({
    id: 'cancelLinkedEditingInput',
    precondition: $938de9d978463713$export$d3411856fe5ceb08,
    handler: (x)=>x.clearRanges()
    ,
    kbOpts: {
        kbExpr: $ibKGQ.EditorContextKeys.editorTextFocus,
        weight: 199,
        primary: 9 /* Escape */ ,
        secondary: [
            1033 /* Escape */ 
        ]
    }
}));
function $938de9d978463713$var$getLinkedEditingRanges(model, position, token) {
    const orderedByScore = $4PmRQ.LinkedEditingRangeProviderRegistry.ordered(model);
    // in order of score ask the linked editing range provider
    // until someone response with a good result
    // (good = not null)
    return $6bXyA.first(orderedByScore.map((provider)=>()=>$938de9d978463713$var$__awaiter(this, void 0, void 0, function*() {
                try {
                    return yield provider.provideLinkedEditingRanges(model, position, token);
                } catch (e) {
                    $gPkHZ.onUnexpectedExternalError(e);
                    return undefined;
                }
            })
    ), (result)=>!!result && $kJ8UG.isNonEmptyArray(result === null || result === void 0 ? void 0 : result.ranges)
    );
}
const $938de9d978463713$export$f1351e4f55b397f4 = $gaWeX.registerColor('editor.linkedEditingBackground', {
    dark: $bjjQO.Color.fromHex('#f00').transparent(0.3),
    light: $bjjQO.Color.fromHex('#f00').transparent(0.3),
    hc: $bjjQO.Color.fromHex('#f00').transparent(0.3)
}, $4dEdH.localize('editorLinkedEditingBackground', 'Background color when the editor auto renames on type.'));
$azIPz.registerThemingParticipant((theme, collector)=>{
    const editorLinkedEditingBackgroundColor = theme.getColor($938de9d978463713$export$f1351e4f55b397f4);
    if (editorLinkedEditingBackgroundColor) collector.addRule(`.monaco-editor .${$938de9d978463713$var$DECORATION_CLASS_NAME} { background: ${editorLinkedEditingBackgroundColor}; border-left-color: ${editorLinkedEditingBackgroundColor}; }`);
});
$2iJTi.registerModelAndPositionCommand('_executeLinkedEditingProvider', (model, position)=>$938de9d978463713$var$getLinkedEditingRanges(model, position, $giPcZ.CancellationToken.None)
);
$2iJTi.registerEditorContribution($938de9d978463713$export$6a78bc49d64aa850.ID, $938de9d978463713$export$6a78bc49d64aa850);
$2iJTi.registerEditorAction($938de9d978463713$export$3ac885947f0e79d7);


var $36afb6182f616b9a$exports = {};

var $6bXyA = parcelRequire("6bXyA");

var $giPcZ = parcelRequire("giPcZ");

var $gPkHZ = parcelRequire("gPkHZ");

var $iGmb0 = parcelRequire("iGmb0");

var $9cWcn = parcelRequire("9cWcn");

var $8GPp8 = parcelRequire("8GPp8");

var $lb0Ah = parcelRequire("lb0Ah");

var $5Aea5 = parcelRequire("5Aea5");

var $5OJ54 = parcelRequire("5OJ54");


var $2iJTi = parcelRequire("2iJTi");

var $91ntV = parcelRequire("91ntV");

var $4PmRQ = parcelRequire("4PmRQ");

var $2c9da49680b33e6d$exports = {};

$parcel$export($2c9da49680b33e6d$exports, "getLinks", () => $2c9da49680b33e6d$export$8054dcb2b42da45c, (v) => $2c9da49680b33e6d$export$8054dcb2b42da45c = v);

var $kJ8UG = parcelRequire("kJ8UG");

var $giPcZ = parcelRequire("giPcZ");

var $gPkHZ = parcelRequire("gPkHZ");

var $9cWcn = parcelRequire("9cWcn");

var $bxBg7 = parcelRequire("bxBg7");

var $5OJ54 = parcelRequire("5OJ54");

var $d00il = parcelRequire("d00il");

var $4PmRQ = parcelRequire("4PmRQ");

var $15EOE = parcelRequire("15EOE");

var $8tcMz = parcelRequire("8tcMz");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $2c9da49680b33e6d$var$__awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
class $2c9da49680b33e6d$export$a6c7ac8248d6e38a {
    constructor(link, provider){
        this._link = link;
        this._provider = provider;
    }
    toJSON() {
        return {
            range: this.range,
            url: this.url,
            tooltip: this.tooltip
        };
    }
    get range() {
        return this._link.range;
    }
    get url() {
        return this._link.url;
    }
    get tooltip() {
        return this._link.tooltip;
    }
    resolve(token) {
        return $2c9da49680b33e6d$var$__awaiter(this, void 0, void 0, function*() {
            if (this._link.url) return this._link.url;
            if (typeof this._provider.resolveLink === 'function') return Promise.resolve(this._provider.resolveLink(this._link, token)).then((value)=>{
                this._link = value || this._link;
                if (this._link.url) // recurse
                return this.resolve(token);
                return Promise.reject(new Error('missing'));
            });
            return Promise.reject(new Error('missing'));
        });
    }
}
class $2c9da49680b33e6d$export$adce7cd866adc18b {
    constructor(tuples){
        this._disposables = new $9cWcn.DisposableStore();
        let links = [];
        for (const [list, provider] of tuples){
            // merge all links
            const newLinks = list.links.map((link)=>new $2c9da49680b33e6d$export$a6c7ac8248d6e38a(link, provider)
            );
            links = $2c9da49680b33e6d$export$adce7cd866adc18b._union(links, newLinks);
            // register disposables
            if ($9cWcn.isDisposable(list)) this._disposables.add(list);
        }
        this.links = links;
    }
    dispose() {
        this._disposables.dispose();
        this.links.length = 0;
    }
    static _union(oldLinks, newLinks) {
        // reunite oldLinks with newLinks and remove duplicates
        let result = [];
        let oldIndex;
        let oldLen;
        let newIndex;
        let newLen;
        for(oldIndex = 0, newIndex = 0, oldLen = oldLinks.length, newLen = newLinks.length; oldIndex < oldLen && newIndex < newLen;){
            const oldLink = oldLinks[oldIndex];
            const newLink = newLinks[newIndex];
            if ($d00il.Range.areIntersectingOrTouching(oldLink.range, newLink.range)) {
                // Remove the oldLink
                oldIndex++;
                continue;
            }
            const comparisonResult = $d00il.Range.compareRangesUsingStarts(oldLink.range, newLink.range);
            if (comparisonResult < 0) {
                // oldLink is before
                result.push(oldLink);
                oldIndex++;
            } else {
                // newLink is before
                result.push(newLink);
                newIndex++;
            }
        }
        for(; oldIndex < oldLen; oldIndex++)result.push(oldLinks[oldIndex]);
        for(; newIndex < newLen; newIndex++)result.push(newLinks[newIndex]);
        return result;
    }
}
function $2c9da49680b33e6d$export$8054dcb2b42da45c(model, token) {
    const lists = [];
    // ask all providers for links in parallel
    const promises = $4PmRQ.LinkProviderRegistry.ordered(model).reverse().map((provider, i)=>{
        return Promise.resolve(provider.provideLinks(model, token)).then((result)=>{
            if (result) lists[i] = [
                result,
                provider
            ];
        }, $gPkHZ.onUnexpectedExternalError);
    });
    return Promise.all(promises).then(()=>{
        const result = new $2c9da49680b33e6d$export$adce7cd866adc18b($kJ8UG.coalesce(lists));
        if (!token.isCancellationRequested) return result;
        result.dispose();
        return new $2c9da49680b33e6d$export$adce7cd866adc18b([]);
    });
}
$8tcMz.CommandsRegistry.registerCommand('_executeLinkProvider', (accessor, ...args)=>$2c9da49680b33e6d$var$__awaiter(void 0, void 0, void 0, function*() {
        let [uri, resolveCount] = args;
        $bxBg7.assertType(uri instanceof $5OJ54.URI);
        if (typeof resolveCount !== 'number') resolveCount = 0;
        const model = accessor.get($15EOE.IModelService).getModel(uri);
        if (!model) return [];
        const list = yield $2c9da49680b33e6d$export$8054dcb2b42da45c(model, $giPcZ.CancellationToken.None);
        if (!list) return [];
        // resolve links
        for(let i = 0; i < Math.min(resolveCount, list.links.length); i++)yield list.links[i].resolve($giPcZ.CancellationToken.None);
        const result = list.links.slice(0);
        list.dispose();
        return result;
    })
);



var $4dEdH = parcelRequire("4dEdH");

var $kCOKl = parcelRequire("kCOKl");

var $iAi3o = parcelRequire("iAi3o");

var $gaWeX = parcelRequire("gaWeX");

var $azIPz = parcelRequire("azIPz");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $36afb6182f616b9a$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var $36afb6182f616b9a$var$__param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
};
var $36afb6182f616b9a$var$__awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
function $36afb6182f616b9a$var$getHoverMessage(link, useMetaKey) {
    const executeCmd = link.url && /^command:/i.test(link.url.toString());
    const label = link.tooltip ? link.tooltip : executeCmd ? $4dEdH.localize('links.navigate.executeCmd', 'Execute command') : $4dEdH.localize('links.navigate.follow', 'Follow link');
    const kb = useMetaKey ? $lb0Ah.isMacintosh ? $4dEdH.localize('links.navigate.kb.meta.mac', "cmd + click") : $4dEdH.localize('links.navigate.kb.meta', "ctrl + click") : $lb0Ah.isMacintosh ? $4dEdH.localize('links.navigate.kb.alt.mac', "option + click") : $4dEdH.localize('links.navigate.kb.alt', "alt + click");
    if (link.url) {
        let nativeLabel = '';
        if (/^command:/i.test(link.url.toString())) {
            // Don't show complete command arguments in the native tooltip
            const match = link.url.toString().match(/^command:([^?#]+)/);
            if (match) {
                const commandId = match[1];
                const nativeLabelText = $4dEdH.localize('tooltip.explanation', "Execute command {0}", commandId);
                nativeLabel = ` "${nativeLabelText}"`;
            }
        }
        const hoverMessage = new $iGmb0.MarkdownString('', true).appendMarkdown(`[${label}](${link.url.toString(true).replace(/ /g, '%20')}${nativeLabel}) (${kb})`);
        return hoverMessage;
    } else return new $iGmb0.MarkdownString().appendText(`${label} (${kb})`);
}
const $36afb6182f616b9a$var$decoration = {
    general: $91ntV.ModelDecorationOptions.register({
        description: 'detected-link',
        stickiness: 1 /* NeverGrowsWhenTypingAtEdges */ ,
        collapseOnReplaceEdit: true,
        inlineClassName: 'detected-link'
    }),
    active: $91ntV.ModelDecorationOptions.register({
        description: 'detected-link-active',
        stickiness: 1 /* NeverGrowsWhenTypingAtEdges */ ,
        collapseOnReplaceEdit: true,
        inlineClassName: 'detected-link-active'
    })
};
class $36afb6182f616b9a$var$LinkOccurrence {
    constructor(link, decorationId){
        this.link = link;
        this.decorationId = decorationId;
    }
    static decoration(link, useMetaKey) {
        return {
            range: link.range,
            options: $36afb6182f616b9a$var$LinkOccurrence._getOptions(link, useMetaKey, false)
        };
    }
    static _getOptions(link, useMetaKey, isActive) {
        const options = Object.assign({}, isActive ? $36afb6182f616b9a$var$decoration.active : $36afb6182f616b9a$var$decoration.general);
        options.hoverMessage = $36afb6182f616b9a$var$getHoverMessage(link, useMetaKey);
        return options;
    }
    activate(changeAccessor, useMetaKey) {
        changeAccessor.changeDecorationOptions(this.decorationId, $36afb6182f616b9a$var$LinkOccurrence._getOptions(this.link, useMetaKey, true));
    }
    deactivate(changeAccessor, useMetaKey) {
        changeAccessor.changeDecorationOptions(this.decorationId, $36afb6182f616b9a$var$LinkOccurrence._getOptions(this.link, useMetaKey, false));
    }
}
let $36afb6182f616b9a$export$e173163e3618783f = class $36afb6182f616b9a$export$e173163e3618783f {
    constructor(editor, openerService, notificationService){
        this.listenersToRemove = new $9cWcn.DisposableStore();
        this.editor = editor;
        this.openerService = openerService;
        this.notificationService = notificationService;
        let clickLinkGesture = new $7a43732d8fccb9d5$export$e5a83b5c609cb4bb(editor);
        this.listenersToRemove.add(clickLinkGesture);
        this.listenersToRemove.add(clickLinkGesture.onMouseMoveOrRelevantKeyDown(([mouseEvent, keyboardEvent])=>{
            this._onEditorMouseMove(mouseEvent, keyboardEvent);
        }));
        this.listenersToRemove.add(clickLinkGesture.onExecute((e)=>{
            this.onEditorMouseUp(e);
        }));
        this.listenersToRemove.add(clickLinkGesture.onCancel((e)=>{
            this.cleanUpActiveLinkDecoration();
        }));
        this.enabled = editor.getOption(62 /* links */ );
        this.listenersToRemove.add(editor.onDidChangeConfiguration((e)=>{
            const enabled = editor.getOption(62 /* links */ );
            if (this.enabled === enabled) // No change in our configuration option
            return;
            this.enabled = enabled;
            // Remove any links (for the getting disabled case)
            this.updateDecorations([]);
            // Stop any computation (for the getting disabled case)
            this.stop();
            // Start computing (for the getting enabled case)
            this.beginCompute();
        }));
        this.listenersToRemove.add(editor.onDidChangeModelContent((e)=>this.onChange()
        ));
        this.listenersToRemove.add(editor.onDidChangeModel((e)=>this.onModelChanged()
        ));
        this.listenersToRemove.add(editor.onDidChangeModelLanguage((e)=>this.onModelModeChanged()
        ));
        this.listenersToRemove.add($4PmRQ.LinkProviderRegistry.onDidChange((e)=>this.onModelModeChanged()
        ));
        this.timeout = new $6bXyA.TimeoutTimer();
        this.computePromise = null;
        this.activeLinksList = null;
        this.currentOccurrences = {};
        this.activeLinkDecorationId = null;
        this.beginCompute();
    }
    static get(editor) {
        return editor.getContribution($36afb6182f616b9a$export$e173163e3618783f.ID);
    }
    onModelChanged() {
        this.currentOccurrences = {};
        this.activeLinkDecorationId = null;
        this.stop();
        this.beginCompute();
    }
    onModelModeChanged() {
        this.stop();
        this.beginCompute();
    }
    onChange() {
        this.timeout.setIfNotSet(()=>this.beginCompute()
        , $36afb6182f616b9a$export$e173163e3618783f.RECOMPUTE_TIME);
    }
    beginCompute() {
        return $36afb6182f616b9a$var$__awaiter(this, void 0, void 0, function*() {
            if (!this.editor.hasModel() || !this.enabled) return;
            const model = this.editor.getModel();
            if (!$4PmRQ.LinkProviderRegistry.has(model)) return;
            if (this.activeLinksList) {
                this.activeLinksList.dispose();
                this.activeLinksList = null;
            }
            this.computePromise = $6bXyA.createCancelablePromise((token)=>$2c9da49680b33e6d$exports.getLinks(model, token)
            );
            try {
                this.activeLinksList = yield this.computePromise;
                this.updateDecorations(this.activeLinksList.links);
            } catch (err) {
                $gPkHZ.onUnexpectedError(err);
            } finally{
                this.computePromise = null;
            }
        });
    }
    updateDecorations(links) {
        const useMetaKey = this.editor.getOption(69 /* multiCursorModifier */ ) === 'altKey';
        let oldDecorations = [];
        let keys = Object.keys(this.currentOccurrences);
        for(let i = 0, len = keys.length; i < len; i++){
            let decorationId = keys[i];
            let occurance = this.currentOccurrences[decorationId];
            oldDecorations.push(occurance.decorationId);
        }
        let newDecorations = [];
        if (links) // Not sure why this is sometimes null
        for (const link of links)newDecorations.push($36afb6182f616b9a$var$LinkOccurrence.decoration(link, useMetaKey));
        let decorations = this.editor.deltaDecorations(oldDecorations, newDecorations);
        this.currentOccurrences = {};
        this.activeLinkDecorationId = null;
        for(let i1 = 0, len1 = decorations.length; i1 < len1; i1++){
            let occurance = new $36afb6182f616b9a$var$LinkOccurrence(links[i1], decorations[i1]);
            this.currentOccurrences[occurance.decorationId] = occurance;
        }
    }
    _onEditorMouseMove(mouseEvent, withKey) {
        const useMetaKey = this.editor.getOption(69 /* multiCursorModifier */ ) === 'altKey';
        if (this.isEnabled(mouseEvent, withKey)) {
            this.cleanUpActiveLinkDecoration(); // always remove previous link decoration as their can only be one
            const occurrence = this.getLinkOccurrence(mouseEvent.target.position);
            if (occurrence) this.editor.changeDecorations((changeAccessor)=>{
                occurrence.activate(changeAccessor, useMetaKey);
                this.activeLinkDecorationId = occurrence.decorationId;
            });
        } else this.cleanUpActiveLinkDecoration();
    }
    cleanUpActiveLinkDecoration() {
        const useMetaKey = this.editor.getOption(69 /* multiCursorModifier */ ) === 'altKey';
        if (this.activeLinkDecorationId) {
            const occurrence = this.currentOccurrences[this.activeLinkDecorationId];
            if (occurrence) this.editor.changeDecorations((changeAccessor)=>{
                occurrence.deactivate(changeAccessor, useMetaKey);
            });
            this.activeLinkDecorationId = null;
        }
    }
    onEditorMouseUp(mouseEvent) {
        if (!this.isEnabled(mouseEvent)) return;
        const occurrence = this.getLinkOccurrence(mouseEvent.target.position);
        if (!occurrence) return;
        this.openLinkOccurrence(occurrence, mouseEvent.hasSideBySideModifier, true);
    }
    openLinkOccurrence(occurrence, openToSide, fromUserGesture = false) {
        if (!this.openerService) return;
        const { link: link  } = occurrence;
        link.resolve($giPcZ.CancellationToken.None).then((uri)=>{
            // Support for relative file URIs of the shape file://./relativeFile.txt or file:///./relativeFile.txt
            if (typeof uri === 'string' && this.editor.hasModel()) {
                const modelUri = this.editor.getModel().uri;
                if (modelUri.scheme === $8GPp8.Schemas.file && uri.startsWith(`${$8GPp8.Schemas.file}:`)) {
                    const parsedUri = $5OJ54.URI.parse(uri);
                    if (parsedUri.scheme === $8GPp8.Schemas.file) {
                        const fsPath = $5Aea5.originalFSPath(parsedUri);
                        let relativePath = null;
                        if (fsPath.startsWith('/./')) relativePath = `.${fsPath.substr(1)}`;
                        else if (fsPath.startsWith('//./')) relativePath = `.${fsPath.substr(2)}`;
                        if (relativePath) uri = $5Aea5.joinPath(modelUri, relativePath);
                    }
                }
            }
            return this.openerService.open(uri, {
                openToSide: openToSide,
                fromUserGesture: fromUserGesture,
                allowContributedOpeners: true,
                allowCommands: true
            });
        }, (err)=>{
            const messageOrError = err instanceof Error ? err.message : err;
            // different error cases
            if (messageOrError === 'invalid') this.notificationService.warn($4dEdH.localize('invalid.url', 'Failed to open this link because it is not well-formed: {0}', link.url.toString()));
            else if (messageOrError === 'missing') this.notificationService.warn($4dEdH.localize('missing.url', 'Failed to open this link because its target is missing.'));
            else $gPkHZ.onUnexpectedError(err);
        });
    }
    getLinkOccurrence(position) {
        if (!this.editor.hasModel() || !position) return null;
        const decorations = this.editor.getModel().getDecorationsInRange({
            startLineNumber: position.lineNumber,
            startColumn: position.column,
            endLineNumber: position.lineNumber,
            endColumn: position.column
        }, 0, true);
        for (const decoration of decorations){
            const currentOccurrence = this.currentOccurrences[decoration.id];
            if (currentOccurrence) return currentOccurrence;
        }
        return null;
    }
    isEnabled(mouseEvent, withKey) {
        return Boolean(mouseEvent.target.type === 6 /* CONTENT_TEXT */  && (mouseEvent.hasTriggerModifier || withKey && withKey.keyCodeIsTriggerKey));
    }
    stop() {
        var _a;
        this.timeout.cancel();
        if (this.activeLinksList) {
            (_a = this.activeLinksList) === null || _a === void 0 || _a.dispose();
            this.activeLinksList = null;
        }
        if (this.computePromise) {
            this.computePromise.cancel();
            this.computePromise = null;
        }
    }
    dispose() {
        this.listenersToRemove.dispose();
        this.stop();
        this.timeout.dispose();
    }
};
$36afb6182f616b9a$export$e173163e3618783f.ID = 'editor.linkDetector';
$36afb6182f616b9a$export$e173163e3618783f.RECOMPUTE_TIME = 1000; // ms
$36afb6182f616b9a$export$e173163e3618783f = $36afb6182f616b9a$var$__decorate([
    $36afb6182f616b9a$var$__param(1, $iAi3o.IOpenerService),
    $36afb6182f616b9a$var$__param(2, $kCOKl.INotificationService)
], $36afb6182f616b9a$export$e173163e3618783f);
class $36afb6182f616b9a$var$OpenLinkAction extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: 'editor.action.openLink',
            label: $4dEdH.localize('label', "Open Link"),
            alias: 'Open Link',
            precondition: undefined
        });
    }
    run(accessor, editor) {
        let linkDetector = $36afb6182f616b9a$export$e173163e3618783f.get(editor);
        if (!linkDetector) return;
        if (!editor.hasModel()) return;
        let selections = editor.getSelections();
        for (let sel of selections){
            let link = linkDetector.getLinkOccurrence(sel.getEndPosition());
            if (link) linkDetector.openLinkOccurrence(link, false);
        }
    }
}
$2iJTi.registerEditorContribution($36afb6182f616b9a$export$e173163e3618783f.ID, $36afb6182f616b9a$export$e173163e3618783f);
$2iJTi.registerEditorAction($36afb6182f616b9a$var$OpenLinkAction);
$azIPz.registerThemingParticipant((theme, collector)=>{
    const activeLinkForeground = theme.getColor($gaWeX.editorActiveLinkForeground);
    if (activeLinkForeground) collector.addRule(`.monaco-editor .detected-link-active { color: ${activeLinkForeground} !important; }`);
});



var $aIbUW = parcelRequire("aIbUW");

var $6bXyA = parcelRequire("6bXyA");

var $fuc8X = parcelRequire("fuc8X");

var $9cWcn = parcelRequire("9cWcn");

var $2iJTi = parcelRequire("2iJTi");

var $2Arjg = parcelRequire("2Arjg");

var $d00il = parcelRequire("d00il");

var $jzicX = parcelRequire("jzicX");

var $ibKGQ = parcelRequire("ibKGQ");

var $1Y4vr = parcelRequire("1Y4vr");

var $91ntV = parcelRequire("91ntV");

var $4PmRQ = parcelRequire("4PmRQ");


var $4dEdH = parcelRequire("4dEdH");

var $g4v7E = parcelRequire("g4v7E");

var $cxCeF = parcelRequire("cxCeF");

var $gaWeX = parcelRequire("gaWeX");

var $azIPz = parcelRequire("azIPz");
function $6f753c210d2c6744$var$announceCursorChange(previousCursorState, cursorState) {
    const cursorDiff = cursorState.filter((cs)=>!previousCursorState.find((pcs)=>pcs.equals(cs)
        )
    );
    if (cursorDiff.length >= 1) {
        const cursorPositions = cursorDiff.map((cs)=>`line ${cs.viewState.position.lineNumber} column ${cs.viewState.position.column}`
        ).join(', ');
        const msg = cursorDiff.length === 1 ? $4dEdH.localize('cursorAdded', "Cursor added: {0}", cursorPositions) : $4dEdH.localize('cursorsAdded', "Cursors added: {0}", cursorPositions);
        $aIbUW.status(msg);
    }
}
class $6f753c210d2c6744$export$a2a103e44264bbeb extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: 'editor.action.insertCursorAbove',
            label: $4dEdH.localize('mutlicursor.insertAbove', "Add Cursor Above"),
            alias: 'Add Cursor Above',
            precondition: undefined,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.editorTextFocus,
                primary: 2576 /* UpArrow */ ,
                linux: {
                    primary: 1552 /* UpArrow */ ,
                    secondary: [
                        3088 /* UpArrow */ 
                    ]
                },
                weight: 100 /* EditorContrib */ 
            },
            menuOpts: {
                menuId: $g4v7E.MenuId.MenubarSelectionMenu,
                group: '3_multi',
                title: $4dEdH.localize({
                    key: 'miInsertCursorAbove',
                    comment: [
                        '&& denotes a mnemonic'
                    ]
                }, "&&Add Cursor Above"),
                order: 2
            }
        });
    }
    run(accessor, editor, args) {
        if (!editor.hasModel()) return;
        let useLogicalLine = true;
        if (args && args.logicalLine === false) useLogicalLine = false;
        const viewModel = editor._getViewModel();
        if (viewModel.cursorConfig.readOnly) return;
        viewModel.pushStackElement();
        const previousCursorState = viewModel.getCursorStates();
        viewModel.setCursorStates(args.source, 3 /* Explicit */ , $2Arjg.CursorMoveCommands.addCursorUp(viewModel, previousCursorState, useLogicalLine));
        viewModel.revealTopMostCursor(args.source);
        $6f753c210d2c6744$var$announceCursorChange(previousCursorState, viewModel.getCursorStates());
    }
}
class $6f753c210d2c6744$export$a0aca99842abcc90 extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: 'editor.action.insertCursorBelow',
            label: $4dEdH.localize('mutlicursor.insertBelow', "Add Cursor Below"),
            alias: 'Add Cursor Below',
            precondition: undefined,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.editorTextFocus,
                primary: 2578 /* DownArrow */ ,
                linux: {
                    primary: 1554 /* DownArrow */ ,
                    secondary: [
                        3090 /* DownArrow */ 
                    ]
                },
                weight: 100 /* EditorContrib */ 
            },
            menuOpts: {
                menuId: $g4v7E.MenuId.MenubarSelectionMenu,
                group: '3_multi',
                title: $4dEdH.localize({
                    key: 'miInsertCursorBelow',
                    comment: [
                        '&& denotes a mnemonic'
                    ]
                }, "A&&dd Cursor Below"),
                order: 3
            }
        });
    }
    run(accessor, editor, args) {
        if (!editor.hasModel()) return;
        let useLogicalLine = true;
        if (args && args.logicalLine === false) useLogicalLine = false;
        const viewModel = editor._getViewModel();
        if (viewModel.cursorConfig.readOnly) return;
        viewModel.pushStackElement();
        const previousCursorState = viewModel.getCursorStates();
        viewModel.setCursorStates(args.source, 3 /* Explicit */ , $2Arjg.CursorMoveCommands.addCursorDown(viewModel, previousCursorState, useLogicalLine));
        viewModel.revealBottomMostCursor(args.source);
        $6f753c210d2c6744$var$announceCursorChange(previousCursorState, viewModel.getCursorStates());
    }
}
class $6f753c210d2c6744$var$InsertCursorAtEndOfEachLineSelected extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: 'editor.action.insertCursorAtEndOfEachLineSelected',
            label: $4dEdH.localize('mutlicursor.insertAtEndOfEachLineSelected', "Add Cursors to Line Ends"),
            alias: 'Add Cursors to Line Ends',
            precondition: undefined,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.editorTextFocus,
                primary: 1575 /* KeyI */ ,
                weight: 100 /* EditorContrib */ 
            },
            menuOpts: {
                menuId: $g4v7E.MenuId.MenubarSelectionMenu,
                group: '3_multi',
                title: $4dEdH.localize({
                    key: 'miInsertCursorAtEndOfEachLineSelected',
                    comment: [
                        '&& denotes a mnemonic'
                    ]
                }, "Add C&&ursors to Line Ends"),
                order: 4
            }
        });
    }
    getCursorsForSelection(selection, model, result) {
        if (selection.isEmpty()) return;
        for(let i = selection.startLineNumber; i < selection.endLineNumber; i++){
            let currentLineMaxColumn = model.getLineMaxColumn(i);
            result.push(new $jzicX.Selection(i, currentLineMaxColumn, i, currentLineMaxColumn));
        }
        if (selection.endColumn > 1) result.push(new $jzicX.Selection(selection.endLineNumber, selection.endColumn, selection.endLineNumber, selection.endColumn));
    }
    run(accessor, editor) {
        if (!editor.hasModel()) return;
        const model = editor.getModel();
        const selections = editor.getSelections();
        const viewModel = editor._getViewModel();
        const previousCursorState = viewModel.getCursorStates();
        let newSelections = [];
        selections.forEach((sel)=>this.getCursorsForSelection(sel, model, newSelections)
        );
        if (newSelections.length > 0) editor.setSelections(newSelections);
        $6f753c210d2c6744$var$announceCursorChange(previousCursorState, viewModel.getCursorStates());
    }
}
class $6f753c210d2c6744$var$InsertCursorAtEndOfLineSelected extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: 'editor.action.addCursorsToBottom',
            label: $4dEdH.localize('mutlicursor.addCursorsToBottom', "Add Cursors To Bottom"),
            alias: 'Add Cursors To Bottom',
            precondition: undefined
        });
    }
    run(accessor, editor) {
        if (!editor.hasModel()) return;
        const selections = editor.getSelections();
        const lineCount = editor.getModel().getLineCount();
        let newSelections = [];
        for(let i = selections[0].startLineNumber; i <= lineCount; i++)newSelections.push(new $jzicX.Selection(i, selections[0].startColumn, i, selections[0].endColumn));
        const viewModel = editor._getViewModel();
        const previousCursorState = viewModel.getCursorStates();
        if (newSelections.length > 0) editor.setSelections(newSelections);
        $6f753c210d2c6744$var$announceCursorChange(previousCursorState, viewModel.getCursorStates());
    }
}
class $6f753c210d2c6744$var$InsertCursorAtTopOfLineSelected extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: 'editor.action.addCursorsToTop',
            label: $4dEdH.localize('mutlicursor.addCursorsToTop', "Add Cursors To Top"),
            alias: 'Add Cursors To Top',
            precondition: undefined
        });
    }
    run(accessor, editor) {
        if (!editor.hasModel()) return;
        const selections = editor.getSelections();
        let newSelections = [];
        for(let i = selections[0].startLineNumber; i >= 1; i--)newSelections.push(new $jzicX.Selection(i, selections[0].startColumn, i, selections[0].endColumn));
        const viewModel = editor._getViewModel();
        const previousCursorState = viewModel.getCursorStates();
        if (newSelections.length > 0) editor.setSelections(newSelections);
        $6f753c210d2c6744$var$announceCursorChange(previousCursorState, viewModel.getCursorStates());
    }
}
class $6f753c210d2c6744$export$c53027d5280f35e5 {
    constructor(selections, revealRange, revealScrollType){
        this.selections = selections;
        this.revealRange = revealRange;
        this.revealScrollType = revealScrollType;
    }
}
class $6f753c210d2c6744$export$3eae6fd7223f22ab {
    constructor(_editor, findController, isDisconnectedFromFindController, searchText, wholeWord, matchCase, currentMatch){
        this._editor = _editor;
        this.findController = findController;
        this.isDisconnectedFromFindController = isDisconnectedFromFindController;
        this.searchText = searchText;
        this.wholeWord = wholeWord;
        this.matchCase = matchCase;
        this.currentMatch = currentMatch;
    }
    static create(editor, findController) {
        if (!editor.hasModel()) return null;
        const findState = findController.getState();
        // Find widget owns entirely what we search for if:
        //  - focus is not in the editor (i.e. it is in the find widget)
        //  - and the search widget is visible
        //  - and the search string is non-empty
        if (!editor.hasTextFocus() && findState.isRevealed && findState.searchString.length > 0) // Find widget owns what is searched for
        return new $6f753c210d2c6744$export$3eae6fd7223f22ab(editor, findController, false, findState.searchString, findState.wholeWord, findState.matchCase, null);
        // Otherwise, the selection gives the search text, and the find widget gives the search settings
        // The exception is the find state disassociation case: when beginning with a single, collapsed selection
        let isDisconnectedFromFindController = false;
        let wholeWord;
        let matchCase;
        const selections = editor.getSelections();
        if (selections.length === 1 && selections[0].isEmpty()) {
            isDisconnectedFromFindController = true;
            wholeWord = true;
            matchCase = true;
        } else {
            wholeWord = findState.wholeWord;
            matchCase = findState.matchCase;
        }
        // Selection owns what is searched for
        const s = editor.getSelection();
        let searchText;
        let currentMatch = null;
        if (s.isEmpty()) {
            // selection is empty => expand to current word
            const word = editor.getConfiguredWordAtPosition(s.getStartPosition());
            if (!word) return null;
            searchText = word.word;
            currentMatch = new $jzicX.Selection(s.startLineNumber, word.startColumn, s.startLineNumber, word.endColumn);
        } else searchText = editor.getModel().getValueInRange(s).replace(/\r\n/g, '\n');
        return new $6f753c210d2c6744$export$3eae6fd7223f22ab(editor, findController, isDisconnectedFromFindController, searchText, wholeWord, matchCase, currentMatch);
    }
    addSelectionToNextFindMatch() {
        if (!this._editor.hasModel()) return null;
        const nextMatch = this._getNextMatch();
        if (!nextMatch) return null;
        const allSelections = this._editor.getSelections();
        return new $6f753c210d2c6744$export$c53027d5280f35e5(allSelections.concat(nextMatch), nextMatch, 0 /* Smooth */ );
    }
    moveSelectionToNextFindMatch() {
        if (!this._editor.hasModel()) return null;
        const nextMatch = this._getNextMatch();
        if (!nextMatch) return null;
        const allSelections = this._editor.getSelections();
        return new $6f753c210d2c6744$export$c53027d5280f35e5(allSelections.slice(0, allSelections.length - 1).concat(nextMatch), nextMatch, 0 /* Smooth */ );
    }
    _getNextMatch() {
        if (!this._editor.hasModel()) return null;
        if (this.currentMatch) {
            const result = this.currentMatch;
            this.currentMatch = null;
            return result;
        }
        this.findController.highlightFindOptions();
        const allSelections = this._editor.getSelections();
        const lastAddedSelection = allSelections[allSelections.length - 1];
        const nextMatch = this._editor.getModel().findNextMatch(this.searchText, lastAddedSelection.getEndPosition(), false, this.matchCase, this.wholeWord ? this._editor.getOption(116 /* wordSeparators */ ) : null, false);
        if (!nextMatch) return null;
        return new $jzicX.Selection(nextMatch.range.startLineNumber, nextMatch.range.startColumn, nextMatch.range.endLineNumber, nextMatch.range.endColumn);
    }
    addSelectionToPreviousFindMatch() {
        if (!this._editor.hasModel()) return null;
        const previousMatch = this._getPreviousMatch();
        if (!previousMatch) return null;
        const allSelections = this._editor.getSelections();
        return new $6f753c210d2c6744$export$c53027d5280f35e5(allSelections.concat(previousMatch), previousMatch, 0 /* Smooth */ );
    }
    moveSelectionToPreviousFindMatch() {
        if (!this._editor.hasModel()) return null;
        const previousMatch = this._getPreviousMatch();
        if (!previousMatch) return null;
        const allSelections = this._editor.getSelections();
        return new $6f753c210d2c6744$export$c53027d5280f35e5(allSelections.slice(0, allSelections.length - 1).concat(previousMatch), previousMatch, 0 /* Smooth */ );
    }
    _getPreviousMatch() {
        if (!this._editor.hasModel()) return null;
        if (this.currentMatch) {
            const result = this.currentMatch;
            this.currentMatch = null;
            return result;
        }
        this.findController.highlightFindOptions();
        const allSelections = this._editor.getSelections();
        const lastAddedSelection = allSelections[allSelections.length - 1];
        const previousMatch = this._editor.getModel().findPreviousMatch(this.searchText, lastAddedSelection.getStartPosition(), false, this.matchCase, this.wholeWord ? this._editor.getOption(116 /* wordSeparators */ ) : null, false);
        if (!previousMatch) return null;
        return new $jzicX.Selection(previousMatch.range.startLineNumber, previousMatch.range.startColumn, previousMatch.range.endLineNumber, previousMatch.range.endColumn);
    }
    selectAll() {
        if (!this._editor.hasModel()) return [];
        this.findController.highlightFindOptions();
        return this._editor.getModel().findMatches(this.searchText, true, false, this.matchCase, this.wholeWord ? this._editor.getOption(116 /* wordSeparators */ ) : null, false, 1073741824 /* MAX_SAFE_SMALL_INTEGER */ );
    }
}
class $6f753c210d2c6744$export$72ef690ee4064f04 extends $9cWcn.Disposable {
    constructor(editor){
        super();
        this._sessionDispose = this._register(new $9cWcn.DisposableStore());
        this._editor = editor;
        this._ignoreSelectionChange = false;
        this._session = null;
    }
    static get(editor) {
        return editor.getContribution($6f753c210d2c6744$export$72ef690ee4064f04.ID);
    }
    dispose() {
        this._endSession();
        super.dispose();
    }
    _beginSessionIfNeeded(findController) {
        if (!this._session) {
            // Create a new session
            const session = $6f753c210d2c6744$export$3eae6fd7223f22ab.create(this._editor, findController);
            if (!session) return;
            this._session = session;
            const newState = {
                searchString: this._session.searchText
            };
            if (this._session.isDisconnectedFromFindController) {
                newState.wholeWordOverride = 1 /* True */ ;
                newState.matchCaseOverride = 1 /* True */ ;
                newState.isRegexOverride = 2 /* False */ ;
            }
            findController.getState().change(newState, false);
            this._sessionDispose.add(this._editor.onDidChangeCursorSelection((e)=>{
                if (this._ignoreSelectionChange) return;
                this._endSession();
            }));
            this._sessionDispose.add(this._editor.onDidBlurEditorText(()=>{
                this._endSession();
            }));
            this._sessionDispose.add(findController.getState().onFindReplaceStateChange((e)=>{
                if (e.matchCase || e.wholeWord) this._endSession();
            }));
        }
    }
    _endSession() {
        this._sessionDispose.clear();
        if (this._session && this._session.isDisconnectedFromFindController) {
            const newState = {
                wholeWordOverride: 0 /* NotSet */ ,
                matchCaseOverride: 0 /* NotSet */ ,
                isRegexOverride: 0 /* NotSet */ 
            };
            this._session.findController.getState().change(newState, false);
        }
        this._session = null;
    }
    _setSelections(selections) {
        this._ignoreSelectionChange = true;
        this._editor.setSelections(selections);
        this._ignoreSelectionChange = false;
    }
    _expandEmptyToWord(model, selection) {
        if (!selection.isEmpty()) return selection;
        const word = this._editor.getConfiguredWordAtPosition(selection.getStartPosition());
        if (!word) return selection;
        return new $jzicX.Selection(selection.startLineNumber, word.startColumn, selection.startLineNumber, word.endColumn);
    }
    _applySessionResult(result) {
        if (!result) return;
        this._setSelections(result.selections);
        if (result.revealRange) this._editor.revealRangeInCenterIfOutsideViewport(result.revealRange, result.revealScrollType);
    }
    getSession(findController) {
        return this._session;
    }
    addSelectionToNextFindMatch(findController) {
        if (!this._editor.hasModel()) return;
        if (!this._session) {
            // If there are multiple cursors, handle the case where they do not all select the same text.
            const allSelections = this._editor.getSelections();
            if (allSelections.length > 1) {
                const findState = findController.getState();
                const matchCase = findState.matchCase;
                const selectionsContainSameText = $6f753c210d2c6744$var$modelRangesContainSameText(this._editor.getModel(), allSelections, matchCase);
                if (!selectionsContainSameText) {
                    const model = this._editor.getModel();
                    let resultingSelections = [];
                    for(let i = 0, len = allSelections.length; i < len; i++)resultingSelections[i] = this._expandEmptyToWord(model, allSelections[i]);
                    this._editor.setSelections(resultingSelections);
                    return;
                }
            }
        }
        this._beginSessionIfNeeded(findController);
        if (this._session) this._applySessionResult(this._session.addSelectionToNextFindMatch());
    }
    addSelectionToPreviousFindMatch(findController) {
        this._beginSessionIfNeeded(findController);
        if (this._session) this._applySessionResult(this._session.addSelectionToPreviousFindMatch());
    }
    moveSelectionToNextFindMatch(findController) {
        this._beginSessionIfNeeded(findController);
        if (this._session) this._applySessionResult(this._session.moveSelectionToNextFindMatch());
    }
    moveSelectionToPreviousFindMatch(findController) {
        this._beginSessionIfNeeded(findController);
        if (this._session) this._applySessionResult(this._session.moveSelectionToPreviousFindMatch());
    }
    selectAll(findController) {
        if (!this._editor.hasModel()) return;
        let matches = null;
        const findState = findController.getState();
        // Special case: find widget owns entirely what we search for if:
        // - focus is not in the editor (i.e. it is in the find widget)
        // - and the search widget is visible
        // - and the search string is non-empty
        // - and we're searching for a regex
        if (findState.isRevealed && findState.searchString.length > 0 && findState.isRegex) matches = this._editor.getModel().findMatches(findState.searchString, true, findState.isRegex, findState.matchCase, findState.wholeWord ? this._editor.getOption(116 /* wordSeparators */ ) : null, false, 1073741824 /* MAX_SAFE_SMALL_INTEGER */ );
        else {
            this._beginSessionIfNeeded(findController);
            if (!this._session) return;
            matches = this._session.selectAll();
        }
        if (findState.searchScope) {
            const states = findState.searchScope;
            let inSelection = [];
            matches.forEach((match)=>{
                states.forEach((state)=>{
                    if (match.range.endLineNumber <= state.endLineNumber && match.range.startLineNumber >= state.startLineNumber) inSelection.push(match);
                });
            });
            matches = inSelection;
        }
        if (matches.length > 0) {
            const editorSelection = this._editor.getSelection();
            // Have the primary cursor remain the one where the action was invoked
            for(let i = 0, len = matches.length; i < len; i++){
                const match = matches[i];
                const intersection = match.range.intersectRanges(editorSelection);
                if (intersection) {
                    // bingo!
                    matches[i] = matches[0];
                    matches[0] = match;
                    break;
                }
            }
            this._setSelections(matches.map((m)=>new $jzicX.Selection(m.range.startLineNumber, m.range.startColumn, m.range.endLineNumber, m.range.endColumn)
            ));
        }
    }
}
$6f753c210d2c6744$export$72ef690ee4064f04.ID = 'editor.contrib.multiCursorController';
class $6f753c210d2c6744$export$7117bb1c55f1db87 extends $2iJTi.EditorAction {
    run(accessor, editor) {
        const multiCursorController = $6f753c210d2c6744$export$72ef690ee4064f04.get(editor);
        if (!multiCursorController) return;
        const findController = $20012b82c35145bb$exports.CommonFindController.get(editor);
        if (!findController) return;
        const viewModel = editor._getViewModel();
        if (viewModel) {
            const previousCursorState = viewModel.getCursorStates();
            this._run(multiCursorController, findController);
            $6f753c210d2c6744$var$announceCursorChange(previousCursorState, viewModel.getCursorStates());
        }
    }
}
class $6f753c210d2c6744$export$8f076283f2167b25 extends $6f753c210d2c6744$export$7117bb1c55f1db87 {
    constructor(){
        super({
            id: 'editor.action.addSelectionToNextFindMatch',
            label: $4dEdH.localize('addSelectionToNextFindMatch', "Add Selection To Next Find Match"),
            alias: 'Add Selection To Next Find Match',
            precondition: undefined,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.focus,
                primary: 2082 /* KeyD */ ,
                weight: 100 /* EditorContrib */ 
            },
            menuOpts: {
                menuId: $g4v7E.MenuId.MenubarSelectionMenu,
                group: '3_multi',
                title: $4dEdH.localize({
                    key: 'miAddSelectionToNextFindMatch',
                    comment: [
                        '&& denotes a mnemonic'
                    ]
                }, "Add &&Next Occurrence"),
                order: 5
            }
        });
    }
    _run(multiCursorController, findController) {
        multiCursorController.addSelectionToNextFindMatch(findController);
    }
}
class $6f753c210d2c6744$export$18b95272d65addf8 extends $6f753c210d2c6744$export$7117bb1c55f1db87 {
    constructor(){
        super({
            id: 'editor.action.addSelectionToPreviousFindMatch',
            label: $4dEdH.localize('addSelectionToPreviousFindMatch', "Add Selection To Previous Find Match"),
            alias: 'Add Selection To Previous Find Match',
            precondition: undefined,
            menuOpts: {
                menuId: $g4v7E.MenuId.MenubarSelectionMenu,
                group: '3_multi',
                title: $4dEdH.localize({
                    key: 'miAddSelectionToPreviousFindMatch',
                    comment: [
                        '&& denotes a mnemonic'
                    ]
                }, "Add P&&revious Occurrence"),
                order: 6
            }
        });
    }
    _run(multiCursorController, findController) {
        multiCursorController.addSelectionToPreviousFindMatch(findController);
    }
}
class $6f753c210d2c6744$export$411b7432b064bcf7 extends $6f753c210d2c6744$export$7117bb1c55f1db87 {
    constructor(){
        super({
            id: 'editor.action.moveSelectionToNextFindMatch',
            label: $4dEdH.localize('moveSelectionToNextFindMatch', "Move Last Selection To Next Find Match"),
            alias: 'Move Last Selection To Next Find Match',
            precondition: undefined,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.focus,
                primary: $fuc8X.KeyChord(2089 /* KeyK */ , 2082 /* KeyD */ ),
                weight: 100 /* EditorContrib */ 
            }
        });
    }
    _run(multiCursorController, findController) {
        multiCursorController.moveSelectionToNextFindMatch(findController);
    }
}
class $6f753c210d2c6744$export$1fb22e5b0da21ac2 extends $6f753c210d2c6744$export$7117bb1c55f1db87 {
    constructor(){
        super({
            id: 'editor.action.moveSelectionToPreviousFindMatch',
            label: $4dEdH.localize('moveSelectionToPreviousFindMatch', "Move Last Selection To Previous Find Match"),
            alias: 'Move Last Selection To Previous Find Match',
            precondition: undefined
        });
    }
    _run(multiCursorController, findController) {
        multiCursorController.moveSelectionToPreviousFindMatch(findController);
    }
}
class $6f753c210d2c6744$export$d06ce53b2982cd37 extends $6f753c210d2c6744$export$7117bb1c55f1db87 {
    constructor(){
        super({
            id: 'editor.action.selectHighlights',
            label: $4dEdH.localize('selectAllOccurrencesOfFindMatch', "Select All Occurrences of Find Match"),
            alias: 'Select All Occurrences of Find Match',
            precondition: undefined,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.focus,
                primary: 3114 /* KeyL */ ,
                weight: 100 /* EditorContrib */ 
            },
            menuOpts: {
                menuId: $g4v7E.MenuId.MenubarSelectionMenu,
                group: '3_multi',
                title: $4dEdH.localize({
                    key: 'miSelectHighlights',
                    comment: [
                        '&& denotes a mnemonic'
                    ]
                }, "Select All &&Occurrences"),
                order: 7
            }
        });
    }
    _run(multiCursorController, findController) {
        multiCursorController.selectAll(findController);
    }
}
class $6f753c210d2c6744$export$22d364fb7d9f34a3 extends $6f753c210d2c6744$export$7117bb1c55f1db87 {
    constructor(){
        super({
            id: 'editor.action.changeAll',
            label: $4dEdH.localize('changeAll.label', "Change All Occurrences"),
            alias: 'Change All Occurrences',
            precondition: $cxCeF.ContextKeyExpr.and($ibKGQ.EditorContextKeys.writable, $ibKGQ.EditorContextKeys.editorTextFocus),
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.editorTextFocus,
                primary: 2108 /* F2 */ ,
                weight: 100 /* EditorContrib */ 
            },
            contextMenuOpts: {
                group: '1_modification',
                order: 1.2
            }
        });
    }
    _run(multiCursorController, findController) {
        multiCursorController.selectAll(findController);
    }
}
class $6f753c210d2c6744$var$SelectionHighlighterState {
    constructor(_model, _searchText, _matchCase, _wordSeparators, prevState){
        this._model = _model;
        this._searchText = _searchText;
        this._matchCase = _matchCase;
        this._wordSeparators = _wordSeparators;
        this._modelVersionId = this._model.getVersionId();
        this._cachedFindMatches = null;
        if (prevState && this._model === prevState._model && this._searchText === prevState._searchText && this._matchCase === prevState._matchCase && this._wordSeparators === prevState._wordSeparators && this._modelVersionId === prevState._modelVersionId) this._cachedFindMatches = prevState._cachedFindMatches;
    }
    findMatches() {
        if (this._cachedFindMatches === null) {
            this._cachedFindMatches = this._model.findMatches(this._searchText, true, false, this._matchCase, this._wordSeparators, false).map((m)=>m.range
            );
            this._cachedFindMatches.sort($d00il.Range.compareRangesUsingStarts);
        }
        return this._cachedFindMatches;
    }
}
class $6f753c210d2c6744$export$e2d3f180605870d2 extends $9cWcn.Disposable {
    constructor(editor){
        super();
        this.editor = editor;
        this._isEnabled = editor.getOption(96 /* selectionHighlight */ );
        this.decorations = [];
        this.updateSoon = this._register(new $6bXyA.RunOnceScheduler(()=>this._update()
        , 300));
        this.state = null;
        this._register(editor.onDidChangeConfiguration((e)=>{
            this._isEnabled = editor.getOption(96 /* selectionHighlight */ );
        }));
        this._register(editor.onDidChangeCursorSelection((e)=>{
            if (!this._isEnabled) // Early exit if nothing needs to be done!
            // Leave some form of early exit check here if you wish to continue being a cursor position change listener ;)
            return;
            if (e.selection.isEmpty()) {
                if (e.reason === 3 /* Explicit */ ) {
                    if (this.state) // no longer valid
                    this._setState(null);
                    this.updateSoon.schedule();
                } else this._setState(null);
            } else this._update();
        }));
        this._register(editor.onDidChangeModel((e)=>{
            this._setState(null);
        }));
        this._register(editor.onDidChangeModelContent((e)=>{
            if (this._isEnabled) this.updateSoon.schedule();
        }));
        this._register($20012b82c35145bb$exports.CommonFindController.get(editor).getState().onFindReplaceStateChange((e)=>{
            this._update();
        }));
    }
    _update() {
        this._setState($6f753c210d2c6744$export$e2d3f180605870d2._createState(this.state, this._isEnabled, this.editor));
    }
    static _createState(oldState, isEnabled, editor) {
        if (!isEnabled) return null;
        if (!editor.hasModel()) return null;
        const s = editor.getSelection();
        if (s.startLineNumber !== s.endLineNumber) // multiline forbidden for perf reasons
        return null;
        const multiCursorController = $6f753c210d2c6744$export$72ef690ee4064f04.get(editor);
        if (!multiCursorController) return null;
        const findController = $20012b82c35145bb$exports.CommonFindController.get(editor);
        if (!findController) return null;
        let r = multiCursorController.getSession(findController);
        if (!r) {
            const allSelections = editor.getSelections();
            if (allSelections.length > 1) {
                const findState = findController.getState();
                const matchCase = findState.matchCase;
                const selectionsContainSameText = $6f753c210d2c6744$var$modelRangesContainSameText(editor.getModel(), allSelections, matchCase);
                if (!selectionsContainSameText) return null;
            }
            r = $6f753c210d2c6744$export$3eae6fd7223f22ab.create(editor, findController);
        }
        if (!r) return null;
        if (r.currentMatch) // This is an empty selection
        // Do not interfere with semantic word highlighting in the no selection case
        return null;
        if (/^[ \t]+$/.test(r.searchText)) // whitespace only selection
        return null;
        if (r.searchText.length > 200) // very long selection
        return null;
        // TODO: better handling of this case
        const findState = findController.getState();
        const caseSensitive = findState.matchCase;
        // Return early if the find widget shows the exact same matches
        if (findState.isRevealed) {
            let findStateSearchString = findState.searchString;
            if (!caseSensitive) findStateSearchString = findStateSearchString.toLowerCase();
            let mySearchString = r.searchText;
            if (!caseSensitive) mySearchString = mySearchString.toLowerCase();
            if (findStateSearchString === mySearchString && r.matchCase === findState.matchCase && r.wholeWord === findState.wholeWord && !findState.isRegex) return null;
        }
        return new $6f753c210d2c6744$var$SelectionHighlighterState(editor.getModel(), r.searchText, r.matchCase, r.wholeWord ? editor.getOption(116 /* wordSeparators */ ) : null, oldState);
    }
    _setState(newState) {
        this.state = newState;
        if (!this.state) {
            this.decorations = this.editor.deltaDecorations(this.decorations, []);
            return;
        }
        if (!this.editor.hasModel()) return;
        const model = this.editor.getModel();
        if (model.isTooLargeForTokenization()) // the file is too large, so searching word under cursor in the whole document would be blocking the UI.
        return;
        const allMatches = this.state.findMatches();
        const selections = this.editor.getSelections();
        selections.sort($d00il.Range.compareRangesUsingStarts);
        // do not overlap with selection (issue #64 and #512)
        const matches = [];
        for(let i = 0, j = 0, len = allMatches.length, lenJ = selections.length; i < len;){
            const match = allMatches[i];
            if (j >= lenJ) {
                // finished all editor selections
                matches.push(match);
                i++;
            } else {
                const cmp = $d00il.Range.compareRangesUsingStarts(match, selections[j]);
                if (cmp < 0) {
                    // match is before sel
                    if (selections[j].isEmpty() || !$d00il.Range.areIntersecting(match, selections[j])) matches.push(match);
                    i++;
                } else if (cmp > 0) // sel is before match
                j++;
                else {
                    // sel is equal to match
                    i++;
                    j++;
                }
            }
        }
        const hasFindOccurrences = $4PmRQ.DocumentHighlightProviderRegistry.has(model) && this.editor.getOption(71 /* occurrencesHighlight */ );
        const decorations = matches.map((r)=>{
            return {
                range: r,
                // Show in overviewRuler only if model has no semantic highlighting
                options: hasFindOccurrences ? $6f753c210d2c6744$export$e2d3f180605870d2._SELECTION_HIGHLIGHT : $6f753c210d2c6744$export$e2d3f180605870d2._SELECTION_HIGHLIGHT_OVERVIEW
            };
        });
        this.decorations = this.editor.deltaDecorations(this.decorations, decorations);
    }
    dispose() {
        this._setState(null);
        super.dispose();
    }
}
$6f753c210d2c6744$export$e2d3f180605870d2.ID = 'editor.contrib.selectionHighlighter';
$6f753c210d2c6744$export$e2d3f180605870d2._SELECTION_HIGHLIGHT_OVERVIEW = $91ntV.ModelDecorationOptions.register({
    description: 'selection-highlight-overview',
    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */ ,
    className: 'selectionHighlight',
    minimap: {
        color: $azIPz.themeColorFromId($gaWeX.minimapSelectionOccurrenceHighlight),
        position: $1Y4vr.MinimapPosition.Inline
    },
    overviewRuler: {
        color: $azIPz.themeColorFromId($gaWeX.overviewRulerSelectionHighlightForeground),
        position: $1Y4vr.OverviewRulerLane.Center
    }
});
$6f753c210d2c6744$export$e2d3f180605870d2._SELECTION_HIGHLIGHT = $91ntV.ModelDecorationOptions.register({
    description: 'selection-highlight',
    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */ ,
    className: 'selectionHighlight'
});
function $6f753c210d2c6744$var$modelRangesContainSameText(model, ranges, matchCase) {
    const selectedText = $6f753c210d2c6744$var$getValueInRange(model, ranges[0], !matchCase);
    for(let i = 1, len = ranges.length; i < len; i++){
        const range = ranges[i];
        if (range.isEmpty()) return false;
        const thisSelectedText = $6f753c210d2c6744$var$getValueInRange(model, range, !matchCase);
        if (selectedText !== thisSelectedText) return false;
    }
    return true;
}
function $6f753c210d2c6744$var$getValueInRange(model, range, toLowerCase) {
    const text = model.getValueInRange(range);
    return toLowerCase ? text.toLowerCase() : text;
}
$2iJTi.registerEditorContribution($6f753c210d2c6744$export$72ef690ee4064f04.ID, $6f753c210d2c6744$export$72ef690ee4064f04);
$2iJTi.registerEditorContribution($6f753c210d2c6744$export$e2d3f180605870d2.ID, $6f753c210d2c6744$export$e2d3f180605870d2);
$2iJTi.registerEditorAction($6f753c210d2c6744$export$a2a103e44264bbeb);
$2iJTi.registerEditorAction($6f753c210d2c6744$export$a0aca99842abcc90);
$2iJTi.registerEditorAction($6f753c210d2c6744$var$InsertCursorAtEndOfEachLineSelected);
$2iJTi.registerEditorAction($6f753c210d2c6744$export$8f076283f2167b25);
$2iJTi.registerEditorAction($6f753c210d2c6744$export$18b95272d65addf8);
$2iJTi.registerEditorAction($6f753c210d2c6744$export$411b7432b064bcf7);
$2iJTi.registerEditorAction($6f753c210d2c6744$export$1fb22e5b0da21ac2);
$2iJTi.registerEditorAction($6f753c210d2c6744$export$d06ce53b2982cd37);
$2iJTi.registerEditorAction($6f753c210d2c6744$export$22d364fb7d9f34a3);
$2iJTi.registerEditorAction($6f753c210d2c6744$var$InsertCursorAtEndOfLineSelected);
$2iJTi.registerEditorAction($6f753c210d2c6744$var$InsertCursorAtTopOfLineSelected);


var $fa56ce79976d1049$exports = {};

var $9cWcn = parcelRequire("9cWcn");

var $2iJTi = parcelRequire("2iJTi");

var $ibKGQ = parcelRequire("ibKGQ");

var $4PmRQ = parcelRequire("4PmRQ");
var $f84ff78d947821c9$exports = {};

$parcel$export($f84ff78d947821c9$exports, "Context", () => $f84ff78d947821c9$export$841858b892ce1f4c, (v) => $f84ff78d947821c9$export$841858b892ce1f4c = v);
$parcel$export($f84ff78d947821c9$exports, "provideSignatureHelp", () => $f84ff78d947821c9$export$49fb82b90cfa6803, (v) => $f84ff78d947821c9$export$49fb82b90cfa6803 = v);

var $giPcZ = parcelRequire("giPcZ");

var $gPkHZ = parcelRequire("gPkHZ");

var $bxBg7 = parcelRequire("bxBg7");

var $5OJ54 = parcelRequire("5OJ54");

var $dcxQ7 = parcelRequire("dcxQ7");

var $4PmRQ = parcelRequire("4PmRQ");

var $aTkrt = parcelRequire("aTkrt");

var $8tcMz = parcelRequire("8tcMz");

var $cxCeF = parcelRequire("cxCeF");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $f84ff78d947821c9$var$__awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
const $f84ff78d947821c9$export$841858b892ce1f4c = {
    Visible: new $cxCeF.RawContextKey('parameterHintsVisible', false),
    MultipleSignatures: new $cxCeF.RawContextKey('parameterHintsMultipleSignatures', false)
};
function $f84ff78d947821c9$export$49fb82b90cfa6803(model, position, context, token) {
    return $f84ff78d947821c9$var$__awaiter(this, void 0, void 0, function*() {
        const supports = $4PmRQ.SignatureHelpProviderRegistry.ordered(model);
        for (const support of supports)try {
            const result = yield support.provideSignatureHelp(model, position, token, context);
            if (result) return result;
        } catch (err) {
            $gPkHZ.onUnexpectedExternalError(err);
        }
        return undefined;
    });
}
$8tcMz.CommandsRegistry.registerCommand('_executeSignatureHelpProvider', (accessor, ...args)=>$f84ff78d947821c9$var$__awaiter(void 0, void 0, void 0, function*() {
        const [uri, position, triggerCharacter] = args;
        $bxBg7.assertType($5OJ54.URI.isUri(uri));
        $bxBg7.assertType($dcxQ7.Position.isIPosition(position));
        $bxBg7.assertType(typeof triggerCharacter === 'string' || !triggerCharacter);
        const ref = yield accessor.get($aTkrt.ITextModelService).createModelReference(uri);
        try {
            const result = yield $f84ff78d947821c9$export$49fb82b90cfa6803(ref.object.textEditorModel, $dcxQ7.Position.lift(position), {
                triggerKind: $4PmRQ.SignatureHelpTriggerKind.Invoke,
                isRetrigger: false,
                triggerCharacter: triggerCharacter
            }, $giPcZ.CancellationToken.None);
            if (!result) return undefined;
            setTimeout(()=>result.dispose()
            , 0);
            return result.value;
        } finally{
            ref.dispose();
        }
    })
);



var $4dEdH = parcelRequire("4dEdH");

var $cxCeF = parcelRequire("cxCeF");

var $fdGPu = parcelRequire("fdGPu");
var $22fc37e0f11a602f$exports = {};

$parcel$export($22fc37e0f11a602f$exports, "ParameterHintsWidget", () => $22fc37e0f11a602f$export$fd583862071b2279, (v) => $22fc37e0f11a602f$export$fd583862071b2279 = v);

var $bDzmQ = parcelRequire("bDzmQ");

var $aIbUW = parcelRequire("aIbUW");

var $2aRJR = parcelRequire("2aRJR");

var $awgRE = parcelRequire("awgRE");

var $5YaSO = parcelRequire("5YaSO");

var $9cWcn = parcelRequire("9cWcn");

var $jcr1R = parcelRequire("jcr1R");

var $bxBg7 = parcelRequire("bxBg7");



var $is5YK = parcelRequire("is5YK");
var $fd41bb3d6058ddc3$exports = {};

$parcel$export($fd41bb3d6058ddc3$exports, "ParameterHintsModel", () => $fd41bb3d6058ddc3$export$7f27c6b5c579a14e, (v) => $fd41bb3d6058ddc3$export$7f27c6b5c579a14e = v);

var $6bXyA = parcelRequire("6bXyA");

var $gPkHZ = parcelRequire("gPkHZ");

var $5YaSO = parcelRequire("5YaSO");

var $9cWcn = parcelRequire("9cWcn");

var $kNeNo = parcelRequire("kNeNo");

var $4PmRQ = parcelRequire("4PmRQ");

/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $fd41bb3d6058ddc3$var$__awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var $fd41bb3d6058ddc3$var$ParameterHintState;
(function(ParameterHintState) {
    ParameterHintState.Default = {
        type: 0 /* Default */ 
    };
    class Pending {
        constructor(request, previouslyActiveHints){
            this.request = request;
            this.previouslyActiveHints = previouslyActiveHints;
            this.type = 2 /* Pending */ ;
        }
    }
    ParameterHintState.Pending = Pending;
    class Active {
        constructor(hints){
            this.hints = hints;
            this.type = 1 /* Active */ ;
        }
    }
    ParameterHintState.Active = Active;
})($fd41bb3d6058ddc3$var$ParameterHintState || ($fd41bb3d6058ddc3$var$ParameterHintState = {}));
class $fd41bb3d6058ddc3$export$7f27c6b5c579a14e extends $9cWcn.Disposable {
    constructor(editor, delay = $fd41bb3d6058ddc3$export$7f27c6b5c579a14e.DEFAULT_DELAY){
        super();
        this._onChangedHints = this._register(new $5YaSO.Emitter());
        this.onChangedHints = this._onChangedHints.event;
        this.triggerOnType = false;
        this._state = $fd41bb3d6058ddc3$var$ParameterHintState.Default;
        this._pendingTriggers = [];
        this._lastSignatureHelpResult = this._register(new $9cWcn.MutableDisposable());
        this.triggerChars = new $kNeNo.CharacterSet();
        this.retriggerChars = new $kNeNo.CharacterSet();
        this.triggerId = 0;
        this.editor = editor;
        this.throttledDelayer = new $6bXyA.Delayer(delay);
        this._register(this.editor.onDidBlurEditorWidget(()=>this.cancel()
        ));
        this._register(this.editor.onDidChangeConfiguration(()=>this.onEditorConfigurationChange()
        ));
        this._register(this.editor.onDidChangeModel((e)=>this.onModelChanged()
        ));
        this._register(this.editor.onDidChangeModelLanguage((_)=>this.onModelChanged()
        ));
        this._register(this.editor.onDidChangeCursorSelection((e)=>this.onCursorChange(e)
        ));
        this._register(this.editor.onDidChangeModelContent((e)=>this.onModelContentChange()
        ));
        this._register($4PmRQ.SignatureHelpProviderRegistry.onDidChange(this.onModelChanged, this));
        this._register(this.editor.onDidType((text)=>this.onDidType(text)
        ));
        this.onEditorConfigurationChange();
        this.onModelChanged();
    }
    get state() {
        return this._state;
    }
    set state(value) {
        if (this._state.type === 2 /* Pending */ ) this._state.request.cancel();
        this._state = value;
    }
    cancel(silent = false) {
        this.state = $fd41bb3d6058ddc3$var$ParameterHintState.Default;
        this.throttledDelayer.cancel();
        if (!silent) this._onChangedHints.fire(undefined);
    }
    trigger(context, delay) {
        const model = this.editor.getModel();
        if (!model || !$4PmRQ.SignatureHelpProviderRegistry.has(model)) return;
        const triggerId = ++this.triggerId;
        this._pendingTriggers.push(context);
        this.throttledDelayer.trigger(()=>{
            return this.doTrigger(triggerId);
        }, delay).catch($gPkHZ.onUnexpectedError);
    }
    next() {
        if (this.state.type !== 1 /* Active */ ) return;
        const length = this.state.hints.signatures.length;
        const activeSignature = this.state.hints.activeSignature;
        const last = activeSignature % length === length - 1;
        const cycle = this.editor.getOption(75 /* parameterHints */ ).cycle;
        // If there is only one signature, or we're on last signature of list
        if ((length < 2 || last) && !cycle) {
            this.cancel();
            return;
        }
        this.updateActiveSignature(last && cycle ? 0 : activeSignature + 1);
    }
    previous() {
        if (this.state.type !== 1 /* Active */ ) return;
        const length = this.state.hints.signatures.length;
        const activeSignature = this.state.hints.activeSignature;
        const first = activeSignature === 0;
        const cycle = this.editor.getOption(75 /* parameterHints */ ).cycle;
        // If there is only one signature, or we're on first signature of list
        if ((length < 2 || first) && !cycle) {
            this.cancel();
            return;
        }
        this.updateActiveSignature(first && cycle ? length - 1 : activeSignature - 1);
    }
    updateActiveSignature(activeSignature) {
        if (this.state.type !== 1 /* Active */ ) return;
        this.state = new $fd41bb3d6058ddc3$var$ParameterHintState.Active(Object.assign(Object.assign({}, this.state.hints), {
            activeSignature: activeSignature
        }));
        this._onChangedHints.fire(this.state.hints);
    }
    doTrigger(triggerId) {
        return $fd41bb3d6058ddc3$var$__awaiter(this, void 0, void 0, function*() {
            const isRetrigger = this.state.type === 1 /* Active */  || this.state.type === 2 /* Pending */ ;
            const activeSignatureHelp = this.getLastActiveHints();
            this.cancel(true);
            if (this._pendingTriggers.length === 0) return false;
            const context = this._pendingTriggers.reduce($fd41bb3d6058ddc3$var$mergeTriggerContexts);
            this._pendingTriggers = [];
            const triggerContext = {
                triggerKind: context.triggerKind,
                triggerCharacter: context.triggerCharacter,
                isRetrigger: isRetrigger,
                activeSignatureHelp: activeSignatureHelp
            };
            if (!this.editor.hasModel()) return false;
            const model = this.editor.getModel();
            const position = this.editor.getPosition();
            this.state = new $fd41bb3d6058ddc3$var$ParameterHintState.Pending($6bXyA.createCancelablePromise((token)=>$f84ff78d947821c9$exports.provideSignatureHelp(model, position, triggerContext, token)
            ), activeSignatureHelp);
            try {
                const result = yield this.state.request;
                // Check that we are still resolving the correct signature help
                if (triggerId !== this.triggerId) {
                    result === null || result === void 0 || result.dispose();
                    return false;
                }
                if (!result || !result.value.signatures || result.value.signatures.length === 0) {
                    result === null || result === void 0 || result.dispose();
                    this._lastSignatureHelpResult.clear();
                    this.cancel();
                    return false;
                } else {
                    this.state = new $fd41bb3d6058ddc3$var$ParameterHintState.Active(result.value);
                    this._lastSignatureHelpResult.value = result;
                    this._onChangedHints.fire(this.state.hints);
                    return true;
                }
            } catch (error) {
                if (triggerId === this.triggerId) this.state = $fd41bb3d6058ddc3$var$ParameterHintState.Default;
                $gPkHZ.onUnexpectedError(error);
                return false;
            }
        });
    }
    getLastActiveHints() {
        switch(this.state.type){
            case 1 /* Active */ :
                return this.state.hints;
            case 2 /* Pending */ :
                return this.state.previouslyActiveHints;
            default:
                return undefined;
        }
    }
    get isTriggered() {
        return this.state.type === 1 /* Active */  || this.state.type === 2 /* Pending */  || this.throttledDelayer.isTriggered();
    }
    onModelChanged() {
        this.cancel();
        // Update trigger characters
        this.triggerChars = new $kNeNo.CharacterSet();
        this.retriggerChars = new $kNeNo.CharacterSet();
        const model = this.editor.getModel();
        if (!model) return;
        for (const support of $4PmRQ.SignatureHelpProviderRegistry.ordered(model)){
            for (const ch of support.signatureHelpTriggerCharacters || []){
                this.triggerChars.add(ch.charCodeAt(0));
                // All trigger characters are also considered retrigger characters
                this.retriggerChars.add(ch.charCodeAt(0));
            }
            for (const ch1 of support.signatureHelpRetriggerCharacters || [])this.retriggerChars.add(ch1.charCodeAt(0));
        }
    }
    onDidType(text) {
        if (!this.triggerOnType) return;
        const lastCharIndex = text.length - 1;
        const triggerCharCode = text.charCodeAt(lastCharIndex);
        if (this.triggerChars.has(triggerCharCode) || this.isTriggered && this.retriggerChars.has(triggerCharCode)) this.trigger({
            triggerKind: $4PmRQ.SignatureHelpTriggerKind.TriggerCharacter,
            triggerCharacter: text.charAt(lastCharIndex)
        });
    }
    onCursorChange(e) {
        if (e.source === 'mouse') this.cancel();
        else if (this.isTriggered) this.trigger({
            triggerKind: $4PmRQ.SignatureHelpTriggerKind.ContentChange
        });
    }
    onModelContentChange() {
        if (this.isTriggered) this.trigger({
            triggerKind: $4PmRQ.SignatureHelpTriggerKind.ContentChange
        });
    }
    onEditorConfigurationChange() {
        this.triggerOnType = this.editor.getOption(75 /* parameterHints */ ).enabled;
        if (!this.triggerOnType) this.cancel();
    }
    dispose() {
        this.cancel(true);
        super.dispose();
    }
}
$fd41bb3d6058ddc3$export$7f27c6b5c579a14e.DEFAULT_DELAY = 120; // ms
function $fd41bb3d6058ddc3$var$mergeTriggerContexts(previous, current) {
    switch(current.triggerKind){
        case $4PmRQ.SignatureHelpTriggerKind.Invoke:
            // Invoke overrides previous triggers.
            return current;
        case $4PmRQ.SignatureHelpTriggerKind.ContentChange:
            // Ignore content changes triggers
            return previous;
        case $4PmRQ.SignatureHelpTriggerKind.TriggerCharacter:
        default:
            return current;
    }
}




var $4dEdH = parcelRequire("4dEdH");

var $cxCeF = parcelRequire("cxCeF");

var $iAi3o = parcelRequire("iAi3o");

var $gaWeX = parcelRequire("gaWeX");

var $hEsmQ = parcelRequire("hEsmQ");

var $95ky9 = parcelRequire("95ky9");

var $azIPz = parcelRequire("azIPz");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $22fc37e0f11a602f$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var $22fc37e0f11a602f$var$__param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
};
const $22fc37e0f11a602f$var$$ = $bDzmQ.$;
const $22fc37e0f11a602f$var$parameterHintsNextIcon = $hEsmQ.registerIcon('parameter-hints-next', $awgRE.Codicon.chevronDown, $4dEdH.localize('parameterHintsNextIcon', 'Icon for show next parameter hint.'));
const $22fc37e0f11a602f$var$parameterHintsPreviousIcon = $hEsmQ.registerIcon('parameter-hints-previous', $awgRE.Codicon.chevronUp, $4dEdH.localize('parameterHintsPreviousIcon', 'Icon for show previous parameter hint.'));
let $22fc37e0f11a602f$export$fd583862071b2279 = class $22fc37e0f11a602f$export$fd583862071b2279 extends $9cWcn.Disposable {
    constructor(editor, contextKeyService, openerService, modeService){
        super();
        this.editor = editor;
        this.renderDisposeables = this._register(new $9cWcn.DisposableStore());
        this.visible = false;
        this.announcedLabel = null;
        // Editor.IContentWidget.allowEditorOverflow
        this.allowEditorOverflow = true;
        this.markdownRenderer = this._register(new $0f615ea767437954$exports.MarkdownRenderer({
            editor: editor
        }, modeService, openerService));
        this.model = this._register(new $fd41bb3d6058ddc3$exports.ParameterHintsModel(editor));
        this.keyVisible = $f84ff78d947821c9$exports.Context.Visible.bindTo(contextKeyService);
        this.keyMultipleSignatures = $f84ff78d947821c9$exports.Context.MultipleSignatures.bindTo(contextKeyService);
        this._register(this.model.onChangedHints((newParameterHints)=>{
            if (newParameterHints) {
                this.show();
                this.render(newParameterHints);
            } else this.hide();
        }));
    }
    createParameterHintDOMNodes() {
        const element = $22fc37e0f11a602f$var$$('.editor-widget.parameter-hints-widget');
        const wrapper = $bDzmQ.append(element, $22fc37e0f11a602f$var$$('.phwrapper'));
        wrapper.tabIndex = -1;
        const controls = $bDzmQ.append(wrapper, $22fc37e0f11a602f$var$$('.controls'));
        const previous = $bDzmQ.append(controls, $22fc37e0f11a602f$var$$('.button' + $azIPz.ThemeIcon.asCSSSelector($22fc37e0f11a602f$var$parameterHintsPreviousIcon)));
        const overloads = $bDzmQ.append(controls, $22fc37e0f11a602f$var$$('.overloads'));
        const next = $bDzmQ.append(controls, $22fc37e0f11a602f$var$$('.button' + $azIPz.ThemeIcon.asCSSSelector($22fc37e0f11a602f$var$parameterHintsNextIcon)));
        this._register($bDzmQ.addDisposableListener(previous, 'click', (e)=>{
            $bDzmQ.EventHelper.stop(e);
            this.previous();
        }));
        this._register($bDzmQ.addDisposableListener(next, 'click', (e)=>{
            $bDzmQ.EventHelper.stop(e);
            this.next();
        }));
        const body = $22fc37e0f11a602f$var$$('.body');
        const scrollbar = new $2aRJR.DomScrollableElement(body, {});
        this._register(scrollbar);
        wrapper.appendChild(scrollbar.getDomNode());
        const signature = $bDzmQ.append(body, $22fc37e0f11a602f$var$$('.signature'));
        const docs = $bDzmQ.append(body, $22fc37e0f11a602f$var$$('.docs'));
        element.style.userSelect = 'text';
        this.domNodes = {
            element: element,
            signature: signature,
            overloads: overloads,
            docs: docs,
            scrollbar: scrollbar
        };
        this.editor.addContentWidget(this);
        this.hide();
        this._register(this.editor.onDidChangeCursorSelection((e)=>{
            if (this.visible) this.editor.layoutContentWidget(this);
        }));
        const updateFont = ()=>{
            if (!this.domNodes) return;
            const fontInfo = this.editor.getOption(43 /* fontInfo */ );
            this.domNodes.element.style.fontSize = `${fontInfo.fontSize}px`;
            this.domNodes.element.style.lineHeight = `${fontInfo.lineHeight / fontInfo.fontSize}`;
        };
        updateFont();
        this._register($5YaSO.Event.chain(this.editor.onDidChangeConfiguration.bind(this.editor)).filter((e)=>e.hasChanged(43 /* fontInfo */ )
        ).on(updateFont, null));
        this._register(this.editor.onDidLayoutChange((e)=>this.updateMaxHeight()
        ));
        this.updateMaxHeight();
    }
    show() {
        if (this.visible) return;
        if (!this.domNodes) this.createParameterHintDOMNodes();
        this.keyVisible.set(true);
        this.visible = true;
        setTimeout(()=>{
            if (this.domNodes) this.domNodes.element.classList.add('visible');
        }, 100);
        this.editor.layoutContentWidget(this);
    }
    hide() {
        this.renderDisposeables.clear();
        if (!this.visible) return;
        this.keyVisible.reset();
        this.visible = false;
        this.announcedLabel = null;
        if (this.domNodes) this.domNodes.element.classList.remove('visible');
        this.editor.layoutContentWidget(this);
    }
    getPosition() {
        if (this.visible) return {
            position: this.editor.getPosition(),
            preference: [
                1 /* ABOVE */ ,
                2 /* BELOW */ 
            ]
        };
        return null;
    }
    render(hints) {
        var _a;
        this.renderDisposeables.clear();
        if (!this.domNodes) return;
        const multiple = hints.signatures.length > 1;
        this.domNodes.element.classList.toggle('multiple', multiple);
        this.keyMultipleSignatures.set(multiple);
        this.domNodes.signature.innerText = '';
        this.domNodes.docs.innerText = '';
        const signature = hints.signatures[hints.activeSignature];
        if (!signature) return;
        const code = $bDzmQ.append(this.domNodes.signature, $22fc37e0f11a602f$var$$('.code'));
        const fontInfo = this.editor.getOption(43 /* fontInfo */ );
        code.style.fontSize = `${fontInfo.fontSize}px`;
        code.style.fontFamily = fontInfo.fontFamily;
        const hasParameters = signature.parameters.length > 0;
        const activeParameterIndex = (_a = signature.activeParameter) !== null && _a !== void 0 ? _a : hints.activeParameter;
        if (!hasParameters) {
            const label = $bDzmQ.append(code, $22fc37e0f11a602f$var$$('span'));
            label.textContent = signature.label;
        } else this.renderParameters(code, signature, activeParameterIndex);
        const activeParameter = signature.parameters[activeParameterIndex];
        if (activeParameter === null || activeParameter === void 0 ? void 0 : activeParameter.documentation) {
            const documentation = $22fc37e0f11a602f$var$$('span.documentation');
            if (typeof activeParameter.documentation === 'string') documentation.textContent = activeParameter.documentation;
            else {
                const renderedContents = this.renderMarkdownDocs(activeParameter.documentation);
                documentation.appendChild(renderedContents.element);
            }
            $bDzmQ.append(this.domNodes.docs, $22fc37e0f11a602f$var$$('p', {}, documentation));
        }
        if (signature.documentation === undefined) ;
        else if (typeof signature.documentation === 'string') $bDzmQ.append(this.domNodes.docs, $22fc37e0f11a602f$var$$('p', {}, signature.documentation));
        else {
            const renderedContents = this.renderMarkdownDocs(signature.documentation);
            $bDzmQ.append(this.domNodes.docs, renderedContents.element);
        }
        const hasDocs = this.hasDocs(signature, activeParameter);
        this.domNodes.signature.classList.toggle('has-docs', hasDocs);
        this.domNodes.docs.classList.toggle('empty', !hasDocs);
        this.domNodes.overloads.textContent = String(hints.activeSignature + 1).padStart(hints.signatures.length.toString().length, '0') + '/' + hints.signatures.length;
        if (activeParameter) {
            let labelToAnnounce = '';
            const param = signature.parameters[activeParameterIndex];
            if (Array.isArray(param.label)) labelToAnnounce = signature.label.substring(param.label[0], param.label[1]);
            else labelToAnnounce = param.label;
            if (param.documentation) labelToAnnounce += typeof param.documentation === 'string' ? `, ${param.documentation}` : `, ${param.documentation.value}`;
            if (signature.documentation) labelToAnnounce += typeof signature.documentation === 'string' ? `, ${signature.documentation}` : `, ${signature.documentation.value}`;
            // Select method gets called on every user type while parameter hints are visible.
            // We do not want to spam the user with same announcements, so we only announce if the current parameter changed.
            if (this.announcedLabel !== labelToAnnounce) {
                $aIbUW.alert($4dEdH.localize('hint', "{0}, hint", labelToAnnounce));
                this.announcedLabel = labelToAnnounce;
            }
        }
        this.editor.layoutContentWidget(this);
        this.domNodes.scrollbar.scanDomNode();
    }
    renderMarkdownDocs(markdown) {
        const renderedContents = this.renderDisposeables.add(this.markdownRenderer.render(markdown, {
            asyncRenderCallback: ()=>{
                var _a;
                (_a = this.domNodes) === null || _a === void 0 || _a.scrollbar.scanDomNode();
            }
        }));
        renderedContents.element.classList.add('markdown-docs');
        return renderedContents;
    }
    hasDocs(signature, activeParameter) {
        if (activeParameter && typeof activeParameter.documentation === 'string' && $bxBg7.assertIsDefined(activeParameter.documentation).length > 0) return true;
        if (activeParameter && typeof activeParameter.documentation === 'object' && $bxBg7.assertIsDefined(activeParameter.documentation).value.length > 0) return true;
        if (signature.documentation && typeof signature.documentation === 'string' && $bxBg7.assertIsDefined(signature.documentation).length > 0) return true;
        if (signature.documentation && typeof signature.documentation === 'object' && $bxBg7.assertIsDefined(signature.documentation.value).length > 0) return true;
        return false;
    }
    renderParameters(parent, signature, activeParameterIndex) {
        const [start, end] = this.getParameterLabelOffsets(signature, activeParameterIndex);
        const beforeSpan = document.createElement('span');
        beforeSpan.textContent = signature.label.substring(0, start);
        const paramSpan = document.createElement('span');
        paramSpan.textContent = signature.label.substring(start, end);
        paramSpan.className = 'parameter active';
        const afterSpan = document.createElement('span');
        afterSpan.textContent = signature.label.substring(end);
        $bDzmQ.append(parent, beforeSpan, paramSpan, afterSpan);
    }
    getParameterLabelOffsets(signature, paramIdx) {
        const param = signature.parameters[paramIdx];
        if (!param) return [
            0,
            0
        ];
        else if (Array.isArray(param.label)) return param.label;
        else if (!param.label.length) return [
            0,
            0
        ];
        else {
            const regex = new RegExp(`(\\W|^)${$jcr1R.escapeRegExpCharacters(param.label)}(?=\\W|$)`, 'g');
            regex.test(signature.label);
            const idx = regex.lastIndex - param.label.length;
            return idx >= 0 ? [
                idx,
                regex.lastIndex
            ] : [
                0,
                0
            ];
        }
    }
    next() {
        this.editor.focus();
        this.model.next();
    }
    previous() {
        this.editor.focus();
        this.model.previous();
    }
    cancel() {
        this.model.cancel();
    }
    getDomNode() {
        if (!this.domNodes) this.createParameterHintDOMNodes();
        return this.domNodes.element;
    }
    getId() {
        return $22fc37e0f11a602f$export$fd583862071b2279.ID;
    }
    trigger(context) {
        this.model.trigger(context, 0);
    }
    updateMaxHeight() {
        if (!this.domNodes) return;
        const height = Math.max(this.editor.getLayoutInfo().height / 4, 250);
        const maxHeight = `${height}px`;
        this.domNodes.element.style.maxHeight = maxHeight;
        const wrapper = this.domNodes.element.getElementsByClassName('phwrapper');
        if (wrapper.length) wrapper[0].style.maxHeight = maxHeight;
    }
};
$22fc37e0f11a602f$export$fd583862071b2279.ID = 'editor.widget.parameterHintsWidget';
$22fc37e0f11a602f$export$fd583862071b2279 = $22fc37e0f11a602f$var$__decorate([
    $22fc37e0f11a602f$var$__param(1, $cxCeF.IContextKeyService),
    $22fc37e0f11a602f$var$__param(2, $iAi3o.IOpenerService),
    $22fc37e0f11a602f$var$__param(3, $is5YK.IModeService)
], $22fc37e0f11a602f$export$fd583862071b2279);
const $22fc37e0f11a602f$export$8d35a56443b6b66f = $gaWeX.registerColor('editorHoverWidget.highlightForeground', {
    dark: $gaWeX.listHighlightForeground,
    light: $gaWeX.listHighlightForeground,
    hc: $gaWeX.listHighlightForeground
}, $4dEdH.localize('editorHoverWidgetHighlightForeground', 'Foreground color of the active item in the parameter hint.'));
$azIPz.registerThemingParticipant((theme, collector)=>{
    const border = theme.getColor($gaWeX.editorHoverBorder);
    if (border) {
        const borderWidth = theme.type === $95ky9.ColorScheme.HIGH_CONTRAST ? 2 : 1;
        collector.addRule(`.monaco-editor .parameter-hints-widget { border: ${borderWidth}px solid ${border}; }`);
        collector.addRule(`.monaco-editor .parameter-hints-widget.multiple .body { border-left: 1px solid ${border.transparent(0.5)}; }`);
        collector.addRule(`.monaco-editor .parameter-hints-widget .signature.has-docs { border-bottom: 1px solid ${border.transparent(0.5)}; }`);
    }
    const background = theme.getColor($gaWeX.editorHoverBackground);
    if (background) collector.addRule(`.monaco-editor .parameter-hints-widget { background-color: ${background}; }`);
    const link = theme.getColor($gaWeX.textLinkForeground);
    if (link) collector.addRule(`.monaco-editor .parameter-hints-widget a { color: ${link}; }`);
    const linkHover = theme.getColor($gaWeX.textLinkActiveForeground);
    if (linkHover) collector.addRule(`.monaco-editor .parameter-hints-widget a:hover { color: ${linkHover}; }`);
    const foreground = theme.getColor($gaWeX.editorHoverForeground);
    if (foreground) collector.addRule(`.monaco-editor .parameter-hints-widget { color: ${foreground}; }`);
    const codeBackground = theme.getColor($gaWeX.textCodeBlockBackground);
    if (codeBackground) collector.addRule(`.monaco-editor .parameter-hints-widget code { background-color: ${codeBackground}; }`);
    const parameterHighlightColor = theme.getColor($22fc37e0f11a602f$export$8d35a56443b6b66f);
    if (parameterHighlightColor) collector.addRule(`.monaco-editor .parameter-hints-widget .parameter.active { color: ${parameterHighlightColor}}`);
});


/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $fa56ce79976d1049$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var $fa56ce79976d1049$var$__param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
};
let $fa56ce79976d1049$var$ParameterHintsController = class ParameterHintsController extends $9cWcn.Disposable {
    constructor(editor, instantiationService){
        super();
        this.editor = editor;
        this.widget = this._register(instantiationService.createInstance($22fc37e0f11a602f$exports.ParameterHintsWidget, this.editor));
    }
    static get(editor) {
        return editor.getContribution(ParameterHintsController.ID);
    }
    cancel() {
        this.widget.cancel();
    }
    previous() {
        this.widget.previous();
    }
    next() {
        this.widget.next();
    }
    trigger(context) {
        this.widget.trigger(context);
    }
};
$fa56ce79976d1049$var$ParameterHintsController.ID = 'editor.controller.parameterHints';
$fa56ce79976d1049$var$ParameterHintsController = $fa56ce79976d1049$var$__decorate([
    $fa56ce79976d1049$var$__param(1, $fdGPu.IInstantiationService)
], $fa56ce79976d1049$var$ParameterHintsController);
class $fa56ce79976d1049$export$289200f1e6286db4 extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: 'editor.action.triggerParameterHints',
            label: $4dEdH.localize('parameterHints.trigger.label', "Trigger Parameter Hints"),
            alias: 'Trigger Parameter Hints',
            precondition: $ibKGQ.EditorContextKeys.hasSignatureHelpProvider,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.editorTextFocus,
                primary: 3082 /* Space */ ,
                weight: 100 /* EditorContrib */ 
            }
        });
    }
    run(accessor, editor) {
        const controller = $fa56ce79976d1049$var$ParameterHintsController.get(editor);
        if (controller) controller.trigger({
            triggerKind: $4PmRQ.SignatureHelpTriggerKind.Invoke
        });
    }
}
$2iJTi.registerEditorContribution($fa56ce79976d1049$var$ParameterHintsController.ID, $fa56ce79976d1049$var$ParameterHintsController);
$2iJTi.registerEditorAction($fa56ce79976d1049$export$289200f1e6286db4);
const $fa56ce79976d1049$var$weight = 175;
const $fa56ce79976d1049$var$ParameterHintsCommand = $2iJTi.EditorCommand.bindToContribution($fa56ce79976d1049$var$ParameterHintsController.get);
$2iJTi.registerEditorCommand(new $fa56ce79976d1049$var$ParameterHintsCommand({
    id: 'closeParameterHints',
    precondition: $f84ff78d947821c9$exports.Context.Visible,
    handler: (x)=>x.cancel()
    ,
    kbOpts: {
        weight: $fa56ce79976d1049$var$weight,
        kbExpr: $ibKGQ.EditorContextKeys.focus,
        primary: 9 /* Escape */ ,
        secondary: [
            1033 /* Escape */ 
        ]
    }
}));
$2iJTi.registerEditorCommand(new $fa56ce79976d1049$var$ParameterHintsCommand({
    id: 'showPrevParameterHint',
    precondition: $cxCeF.ContextKeyExpr.and($f84ff78d947821c9$exports.Context.Visible, $f84ff78d947821c9$exports.Context.MultipleSignatures),
    handler: (x)=>x.previous()
    ,
    kbOpts: {
        weight: $fa56ce79976d1049$var$weight,
        kbExpr: $ibKGQ.EditorContextKeys.focus,
        primary: 16 /* UpArrow */ ,
        secondary: [
            528 /* UpArrow */ 
        ],
        mac: {
            primary: 16 /* UpArrow */ ,
            secondary: [
                528 /* UpArrow */ ,
                302 /* KeyP */ 
            ]
        }
    }
}));
$2iJTi.registerEditorCommand(new $fa56ce79976d1049$var$ParameterHintsCommand({
    id: 'showNextParameterHint',
    precondition: $cxCeF.ContextKeyExpr.and($f84ff78d947821c9$exports.Context.Visible, $f84ff78d947821c9$exports.Context.MultipleSignatures),
    handler: (x)=>x.next()
    ,
    kbOpts: {
        weight: $fa56ce79976d1049$var$weight,
        kbExpr: $ibKGQ.EditorContextKeys.focus,
        primary: 18 /* DownArrow */ ,
        secondary: [
            530 /* DownArrow */ 
        ],
        mac: {
            primary: 18 /* DownArrow */ ,
            secondary: [
                530 /* DownArrow */ ,
                300 /* KeyN */ 
            ]
        }
    }
}));


var $82b1f3dbef2da211$exports = {};

var $aIbUW = parcelRequire("aIbUW");

var $6bXyA = parcelRequire("6bXyA");

var $giPcZ = parcelRequire("giPcZ");

var $gPkHZ = parcelRequire("gPkHZ");

var $9cWcn = parcelRequire("9cWcn");

var $bxBg7 = parcelRequire("bxBg7");

var $5OJ54 = parcelRequire("5OJ54");

var $r7siU = parcelRequire("r7siU");

var $2iJTi = parcelRequire("2iJTi");

var $d4p5R = parcelRequire("d4p5R");

var $2Qfl0 = parcelRequire("2Qfl0");

var $dcxQ7 = parcelRequire("dcxQ7");

var $d00il = parcelRequire("d00il");

var $ibKGQ = parcelRequire("ibKGQ");

var $4PmRQ = parcelRequire("4PmRQ");

var $hegJ6 = parcelRequire("hegJ6");


var $4dEdH = parcelRequire("4dEdH");

var $eWLlf = parcelRequire("eWLlf");

var $cxCeF = parcelRequire("cxCeF");

var $fdGPu = parcelRequire("fdGPu");

var $dvEeB = parcelRequire("dvEeB");

var $kCOKl = parcelRequire("kCOKl");

var $4E7vx = parcelRequire("4E7vx");

var $TezJS = parcelRequire("TezJS");
var $80fc496abec32d63$exports = {};

$parcel$export($80fc496abec32d63$exports, "CONTEXT_RENAME_INPUT_VISIBLE", () => $80fc496abec32d63$export$af782c46022b2288, (v) => $80fc496abec32d63$export$af782c46022b2288 = v);
$parcel$export($80fc496abec32d63$exports, "RenameInputField", () => $80fc496abec32d63$export$815a698d2e600605, (v) => $80fc496abec32d63$export$815a698d2e600605 = v);

var $9cWcn = parcelRequire("9cWcn");


var $dcxQ7 = parcelRequire("dcxQ7");

var $4dEdH = parcelRequire("4dEdH");

var $cxCeF = parcelRequire("cxCeF");

var $7IxGd = parcelRequire("7IxGd");

var $gaWeX = parcelRequire("gaWeX");

var $azIPz = parcelRequire("azIPz");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $80fc496abec32d63$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var $80fc496abec32d63$var$__param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
};
const $80fc496abec32d63$export$af782c46022b2288 = new $cxCeF.RawContextKey('renameInputVisible', false, $4dEdH.localize('renameInputVisible', "Whether the rename input widget is visible"));
let $80fc496abec32d63$export$815a698d2e600605 = class $80fc496abec32d63$export$815a698d2e600605 {
    constructor(_editor, _acceptKeybindings, _themeService, _keybindingService, contextKeyService){
        this._editor = _editor;
        this._acceptKeybindings = _acceptKeybindings;
        this._themeService = _themeService;
        this._keybindingService = _keybindingService;
        this._disposables = new $9cWcn.DisposableStore();
        this.allowEditorOverflow = true;
        this._visibleContextKey = $80fc496abec32d63$export$af782c46022b2288.bindTo(contextKeyService);
        this._editor.addContentWidget(this);
        this._disposables.add(this._editor.onDidChangeConfiguration((e)=>{
            if (e.hasChanged(43 /* fontInfo */ )) this._updateFont();
        }));
        this._disposables.add(_themeService.onDidColorThemeChange(this._updateStyles, this));
    }
    dispose() {
        this._disposables.dispose();
        this._editor.removeContentWidget(this);
    }
    getId() {
        return '__renameInputWidget';
    }
    getDomNode() {
        if (!this._domNode) {
            this._domNode = document.createElement('div');
            this._domNode.className = 'monaco-editor rename-box';
            this._input = document.createElement('input');
            this._input.className = 'rename-input';
            this._input.type = 'text';
            this._input.setAttribute('aria-label', $4dEdH.localize('renameAriaLabel', "Rename input. Type new name and press Enter to commit."));
            this._domNode.appendChild(this._input);
            this._label = document.createElement('div');
            this._label.className = 'rename-label';
            this._domNode.appendChild(this._label);
            const updateLabel = ()=>{
                var _a, _b;
                const [accept, preview] = this._acceptKeybindings;
                this._keybindingService.lookupKeybinding(accept);
                this._label.innerText = $4dEdH.localize({
                    key: 'label',
                    comment: [
                        'placeholders are keybindings, e.g "F2 to Rename, Shift+F2 to Preview"'
                    ]
                }, "{0} to Rename, {1} to Preview", (_a = this._keybindingService.lookupKeybinding(accept)) === null || _a === void 0 ? void 0 : _a.getLabel(), (_b = this._keybindingService.lookupKeybinding(preview)) === null || _b === void 0 ? void 0 : _b.getLabel());
            };
            updateLabel();
            this._disposables.add(this._keybindingService.onDidUpdateKeybindings(updateLabel));
            this._updateFont();
            this._updateStyles(this._themeService.getColorTheme());
        }
        return this._domNode;
    }
    _updateStyles(theme) {
        var _a, _b, _c, _d;
        if (!this._input || !this._domNode) return;
        const widgetShadowColor = theme.getColor($gaWeX.widgetShadow);
        this._domNode.style.backgroundColor = String((_a = theme.getColor($gaWeX.editorWidgetBackground)) !== null && _a !== void 0 ? _a : '');
        this._domNode.style.boxShadow = widgetShadowColor ? ` 0 0 8px 2px ${widgetShadowColor}` : '';
        this._domNode.style.color = String((_b = theme.getColor($gaWeX.inputForeground)) !== null && _b !== void 0 ? _b : '');
        this._input.style.backgroundColor = String((_c = theme.getColor($gaWeX.inputBackground)) !== null && _c !== void 0 ? _c : '');
        // this._input.style.color = String(theme.getColor(inputForeground) ?? '');
        const border = theme.getColor($gaWeX.inputBorder);
        this._input.style.borderWidth = border ? '1px' : '0px';
        this._input.style.borderStyle = border ? 'solid' : 'none';
        this._input.style.borderColor = (_d = border === null || border === void 0 ? void 0 : border.toString()) !== null && _d !== void 0 ? _d : 'none';
    }
    _updateFont() {
        if (!this._input || !this._label) return;
        const fontInfo = this._editor.getOption(43 /* fontInfo */ );
        this._input.style.fontFamily = fontInfo.fontFamily;
        this._input.style.fontWeight = fontInfo.fontWeight;
        this._input.style.fontSize = `${fontInfo.fontSize}px`;
        this._label.style.fontSize = `${fontInfo.fontSize * 0.8}px`;
    }
    getPosition() {
        if (!this._visible) return null;
        return {
            position: this._position,
            preference: [
                2 /* BELOW */ ,
                1 /* ABOVE */ 
            ]
        };
    }
    afterRender(position) {
        if (!position) // cancel rename when input widget isn't rendered anymore
        this.cancelInput(true);
    }
    acceptInput(wantsPreview) {
        if (this._currentAcceptInput) this._currentAcceptInput(wantsPreview);
    }
    cancelInput(focusEditor) {
        if (this._currentCancelInput) this._currentCancelInput(focusEditor);
    }
    getInput(where, value, selectionStart, selectionEnd, supportPreview, token) {
        this._domNode.classList.toggle('preview', supportPreview);
        this._position = new $dcxQ7.Position(where.startLineNumber, where.startColumn);
        this._input.value = value;
        this._input.setAttribute('selectionStart', selectionStart.toString());
        this._input.setAttribute('selectionEnd', selectionEnd.toString());
        this._input.size = Math.max((where.endColumn - where.startColumn) * 1.1, 20);
        const disposeOnDone = new $9cWcn.DisposableStore();
        return new Promise((resolve)=>{
            this._currentCancelInput = (focusEditor)=>{
                this._currentAcceptInput = undefined;
                this._currentCancelInput = undefined;
                resolve(focusEditor);
                return true;
            };
            this._currentAcceptInput = (wantsPreview)=>{
                if (this._input.value.trim().length === 0 || this._input.value === value) {
                    // empty or whitespace only or not changed
                    this.cancelInput(true);
                    return;
                }
                this._currentAcceptInput = undefined;
                this._currentCancelInput = undefined;
                resolve({
                    newName: this._input.value,
                    wantsPreview: supportPreview && wantsPreview
                });
            };
            token.onCancellationRequested(()=>this.cancelInput(true)
            );
            disposeOnDone.add(this._editor.onDidBlurEditorWidget(()=>this.cancelInput(false)
            ));
            this._show();
        }).finally(()=>{
            disposeOnDone.dispose();
            this._hide();
        });
    }
    _show() {
        this._editor.revealLineInCenterIfOutsideViewport(this._position.lineNumber, 0 /* Smooth */ );
        this._visible = true;
        this._visibleContextKey.set(true);
        this._editor.layoutContentWidget(this);
        setTimeout(()=>{
            this._input.focus();
            this._input.setSelectionRange(parseInt(this._input.getAttribute('selectionStart')), parseInt(this._input.getAttribute('selectionEnd')));
        }, 100);
    }
    _hide() {
        this._visible = false;
        this._visibleContextKey.reset();
        this._editor.layoutContentWidget(this);
    }
};
$80fc496abec32d63$export$815a698d2e600605 = $80fc496abec32d63$var$__decorate([
    $80fc496abec32d63$var$__param(2, $azIPz.IThemeService),
    $80fc496abec32d63$var$__param(3, $7IxGd.IKeybindingService),
    $80fc496abec32d63$var$__param(4, $cxCeF.IContextKeyService)
], $80fc496abec32d63$export$815a698d2e600605);


/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $82b1f3dbef2da211$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var $82b1f3dbef2da211$var$__param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
};
var $82b1f3dbef2da211$var$__awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
class $82b1f3dbef2da211$var$RenameSkeleton {
    constructor(model, position){
        this.model = model;
        this.position = position;
        this._providerRenameIdx = 0;
        this._providers = $4PmRQ.RenameProviderRegistry.ordered(model);
    }
    hasProvider() {
        return this._providers.length > 0;
    }
    resolveRenameLocation(token) {
        return $82b1f3dbef2da211$var$__awaiter(this, void 0, void 0, function*() {
            const rejects = [];
            for(this._providerRenameIdx = 0; this._providerRenameIdx < this._providers.length; this._providerRenameIdx++){
                const provider = this._providers[this._providerRenameIdx];
                if (!provider.resolveRenameLocation) break;
                let res = yield provider.resolveRenameLocation(this.model, this.position, token);
                if (!res) continue;
                if (res.rejectReason) {
                    rejects.push(res.rejectReason);
                    continue;
                }
                return res;
            }
            const word = this.model.getWordAtPosition(this.position);
            if (!word) return {
                range: $d00il.Range.fromPositions(this.position),
                text: '',
                rejectReason: rejects.length > 0 ? rejects.join('\n') : undefined
            };
            return {
                range: new $d00il.Range(this.position.lineNumber, word.startColumn, this.position.lineNumber, word.endColumn),
                text: word.word,
                rejectReason: rejects.length > 0 ? rejects.join('\n') : undefined
            };
        });
    }
    provideRenameEdits(newName, token) {
        return $82b1f3dbef2da211$var$__awaiter(this, void 0, void 0, function*() {
            return this._provideRenameEdits(newName, this._providerRenameIdx, [], token);
        });
    }
    _provideRenameEdits(newName, i, rejects, token) {
        return $82b1f3dbef2da211$var$__awaiter(this, void 0, void 0, function*() {
            const provider = this._providers[i];
            if (!provider) return {
                edits: [],
                rejectReason: rejects.join('\n')
            };
            const result = yield provider.provideRenameEdits(this.model, this.position, newName, token);
            if (!result) return this._provideRenameEdits(newName, i + 1, rejects.concat($4dEdH.localize('no result', "No result.")), token);
            else if (result.rejectReason) return this._provideRenameEdits(newName, i + 1, rejects.concat(result.rejectReason), token);
            return result;
        });
    }
}
function $82b1f3dbef2da211$export$7ac989ec0c9c279(model, position, newName) {
    return $82b1f3dbef2da211$var$__awaiter(this, void 0, void 0, function*() {
        const skeleton = new $82b1f3dbef2da211$var$RenameSkeleton(model, position);
        const loc = yield skeleton.resolveRenameLocation($giPcZ.CancellationToken.None);
        if (loc === null || loc === void 0 ? void 0 : loc.rejectReason) return {
            edits: [],
            rejectReason: loc.rejectReason
        };
        return skeleton.provideRenameEdits(newName, $giPcZ.CancellationToken.None);
    });
}
// ---  register actions and commands
let $82b1f3dbef2da211$var$RenameController = class RenameController {
    constructor(editor, _instaService, _notificationService, _bulkEditService, _progressService, _logService, _configService){
        this.editor = editor;
        this._instaService = _instaService;
        this._notificationService = _notificationService;
        this._bulkEditService = _bulkEditService;
        this._progressService = _progressService;
        this._logService = _logService;
        this._configService = _configService;
        this._dispoableStore = new $9cWcn.DisposableStore();
        this._cts = new $giPcZ.CancellationTokenSource();
        this._renameInputField = this._dispoableStore.add(new $6bXyA.IdleValue(()=>this._dispoableStore.add(this._instaService.createInstance($80fc496abec32d63$exports.RenameInputField, this.editor, [
                'acceptRenameInput',
                'acceptRenameInputWithPreview'
            ]))
        ));
    }
    static get(editor) {
        return editor.getContribution(RenameController.ID);
    }
    dispose() {
        this._dispoableStore.dispose();
        this._cts.dispose(true);
    }
    run() {
        return $82b1f3dbef2da211$var$__awaiter(this, void 0, void 0, function*() {
            this._cts.dispose(true);
            if (!this.editor.hasModel()) return undefined;
            const position = this.editor.getPosition();
            const skeleton = new $82b1f3dbef2da211$var$RenameSkeleton(this.editor.getModel(), position);
            if (!skeleton.hasProvider()) return undefined;
            this._cts = new $r7siU.EditorStateCancellationTokenSource(this.editor, 5 /* Value */ );
            // resolve rename location
            let loc;
            try {
                const resolveLocationOperation = skeleton.resolveRenameLocation(this._cts.token);
                this._progressService.showWhile(resolveLocationOperation, 250);
                loc = yield resolveLocationOperation;
            } catch (e) {
                $25f94a4f82af6366$exports.MessageController.get(this.editor).showMessage(e || $4dEdH.localize('resolveRenameLocationFailed', "An unknown error occurred while resolving rename location"), position);
                return undefined;
            }
            if (!loc) return undefined;
            if (loc.rejectReason) {
                $25f94a4f82af6366$exports.MessageController.get(this.editor).showMessage(loc.rejectReason, position);
                return undefined;
            }
            if (this._cts.token.isCancellationRequested) return undefined;
            this._cts.dispose();
            this._cts = new $r7siU.EditorStateCancellationTokenSource(this.editor, 5 /* Value */ , loc.range);
            // do rename at location
            let selection = this.editor.getSelection();
            let selectionStart = 0;
            let selectionEnd = loc.text.length;
            if (!$d00il.Range.isEmpty(selection) && !$d00il.Range.spansMultipleLines(selection) && $d00il.Range.containsRange(loc.range, selection)) {
                selectionStart = Math.max(0, selection.startColumn - loc.range.startColumn);
                selectionEnd = Math.min(loc.range.endColumn, selection.endColumn) - loc.range.startColumn;
            }
            const supportPreview = this._bulkEditService.hasPreviewHandler() && this._configService.getValue(this.editor.getModel().uri, 'editor.rename.enablePreview');
            const inputFieldResult = yield this._renameInputField.value.getInput(loc.range, loc.text, selectionStart, selectionEnd, supportPreview, this._cts.token);
            // no result, only hint to focus the editor or not
            if (typeof inputFieldResult === 'boolean') {
                if (inputFieldResult) this.editor.focus();
                return undefined;
            }
            this.editor.focus();
            const renameOperation = $6bXyA.raceCancellation(skeleton.provideRenameEdits(inputFieldResult.newName, this._cts.token), this._cts.token).then((renameResult)=>$82b1f3dbef2da211$var$__awaiter(this, void 0, void 0, function*() {
                    if (!renameResult || !this.editor.hasModel()) return;
                    if (renameResult.rejectReason) {
                        this._notificationService.info(renameResult.rejectReason);
                        return;
                    }
                    // collapse selection to active end
                    this.editor.setSelection($d00il.Range.fromPositions(this.editor.getSelection().getPosition()));
                    this._bulkEditService.apply($d4p5R.ResourceEdit.convert(renameResult), {
                        editor: this.editor,
                        showPreview: inputFieldResult.wantsPreview,
                        label: $4dEdH.localize('label', "Renaming '{0}'", loc === null || loc === void 0 ? void 0 : loc.text),
                        quotableLabel: $4dEdH.localize('quotableLabel', "Renaming {0}", loc === null || loc === void 0 ? void 0 : loc.text)
                    }).then((result)=>{
                        if (result.ariaSummary) $aIbUW.alert($4dEdH.localize('aria', "Successfully renamed '{0}' to '{1}'. Summary: {2}", loc.text, inputFieldResult.newName, result.ariaSummary));
                    }).catch((err)=>{
                        this._notificationService.error($4dEdH.localize('rename.failedApply', "Rename failed to apply edits"));
                        this._logService.error(err);
                    });
                })
            , (err)=>{
                this._notificationService.error($4dEdH.localize('rename.failed', "Rename failed to compute edits"));
                this._logService.error(err);
            });
            this._progressService.showWhile(renameOperation, 250);
            return renameOperation;
        });
    }
    acceptRenameInput(wantsPreview) {
        this._renameInputField.value.acceptInput(wantsPreview);
    }
    cancelRenameInput() {
        this._renameInputField.value.cancelInput(true);
    }
};
$82b1f3dbef2da211$var$RenameController.ID = 'editor.contrib.renameController';
$82b1f3dbef2da211$var$RenameController = $82b1f3dbef2da211$var$__decorate([
    $82b1f3dbef2da211$var$__param(1, $fdGPu.IInstantiationService),
    $82b1f3dbef2da211$var$__param(2, $kCOKl.INotificationService),
    $82b1f3dbef2da211$var$__param(3, $d4p5R.IBulkEditService),
    $82b1f3dbef2da211$var$__param(4, $4E7vx.IEditorProgressService),
    $82b1f3dbef2da211$var$__param(5, $dvEeB.ILogService),
    $82b1f3dbef2da211$var$__param(6, $hegJ6.ITextResourceConfigurationService)
], $82b1f3dbef2da211$var$RenameController);
class $82b1f3dbef2da211$export$9c8fe0f1407330da extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: 'editor.action.rename',
            label: $4dEdH.localize('rename.label', "Rename Symbol"),
            alias: 'Rename Symbol',
            precondition: $cxCeF.ContextKeyExpr.and($ibKGQ.EditorContextKeys.writable, $ibKGQ.EditorContextKeys.hasRenameProvider),
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.editorTextFocus,
                primary: 60 /* F2 */ ,
                weight: 100 /* EditorContrib */ 
            },
            contextMenuOpts: {
                group: '1_modification',
                order: 1.1
            }
        });
    }
    runCommand(accessor1, args) {
        const editorService = accessor1.get($2Qfl0.ICodeEditorService);
        const [uri, pos] = Array.isArray(args) && args || [
            undefined,
            undefined
        ];
        if ($5OJ54.URI.isUri(uri) && $dcxQ7.Position.isIPosition(pos)) return editorService.openCodeEditor({
            resource: uri
        }, editorService.getActiveCodeEditor()).then((editor)=>{
            if (!editor) return;
            editor.setPosition(pos);
            editor.invokeWithinContext((accessor)=>{
                this.reportTelemetry(accessor, editor);
                return this.run(accessor, editor);
            });
        }, $gPkHZ.onUnexpectedError);
        return super.runCommand(accessor1, args);
    }
    run(accessor, editor) {
        const controller = $82b1f3dbef2da211$var$RenameController.get(editor);
        if (controller) return controller.run();
        return Promise.resolve();
    }
}
$2iJTi.registerEditorContribution($82b1f3dbef2da211$var$RenameController.ID, $82b1f3dbef2da211$var$RenameController);
$2iJTi.registerEditorAction($82b1f3dbef2da211$export$9c8fe0f1407330da);
const $82b1f3dbef2da211$var$RenameCommand = $2iJTi.EditorCommand.bindToContribution($82b1f3dbef2da211$var$RenameController.get);
$2iJTi.registerEditorCommand(new $82b1f3dbef2da211$var$RenameCommand({
    id: 'acceptRenameInput',
    precondition: $80fc496abec32d63$exports.CONTEXT_RENAME_INPUT_VISIBLE,
    handler: (x)=>x.acceptRenameInput(false)
    ,
    kbOpts: {
        weight: 199,
        kbExpr: $ibKGQ.EditorContextKeys.focus,
        primary: 3 /* Enter */ 
    }
}));
$2iJTi.registerEditorCommand(new $82b1f3dbef2da211$var$RenameCommand({
    id: 'acceptRenameInputWithPreview',
    precondition: $cxCeF.ContextKeyExpr.and($80fc496abec32d63$exports.CONTEXT_RENAME_INPUT_VISIBLE, $cxCeF.ContextKeyExpr.has('config.editor.rename.enablePreview')),
    handler: (x)=>x.acceptRenameInput(true)
    ,
    kbOpts: {
        weight: 199,
        kbExpr: $ibKGQ.EditorContextKeys.focus,
        primary: 1027 /* Enter */ 
    }
}));
$2iJTi.registerEditorCommand(new $82b1f3dbef2da211$var$RenameCommand({
    id: 'cancelRenameInput',
    precondition: $80fc496abec32d63$exports.CONTEXT_RENAME_INPUT_VISIBLE,
    handler: (x)=>x.cancelRenameInput()
    ,
    kbOpts: {
        weight: 199,
        kbExpr: $ibKGQ.EditorContextKeys.focus,
        primary: 9 /* Escape */ ,
        secondary: [
            1033 /* Escape */ 
        ]
    }
}));
// ---- api bridge command
$2iJTi.registerModelAndPositionCommand('_executeDocumentRenameProvider', function(model, position, ...args) {
    const [newName] = args;
    $bxBg7.assertType(typeof newName === 'string');
    return $82b1f3dbef2da211$export$7ac989ec0c9c279(model, position, newName);
});
$2iJTi.registerModelAndPositionCommand('_executePrepareRename', function(model, position) {
    return $82b1f3dbef2da211$var$__awaiter(this, void 0, void 0, function*() {
        const skeleton = new $82b1f3dbef2da211$var$RenameSkeleton(model, position);
        const loc = yield skeleton.resolveRenameLocation($giPcZ.CancellationToken.None);
        if (loc === null || loc === void 0 ? void 0 : loc.rejectReason) throw new Error(loc.rejectReason);
        return loc;
    });
});
//todo@jrieken use editor options world
$TezJS.Registry.as($eWLlf.Extensions.Configuration).registerConfiguration({
    id: 'editor',
    properties: {
        'editor.rename.enablePreview': {
            scope: 5 /* LANGUAGE_OVERRIDABLE */ ,
            description: $4dEdH.localize('enablePreview', "Enable/disable the ability to preview changes before renaming"),
            default: true,
            type: 'boolean'
        }
    }
});


var $b5838f4c56bf4623$exports = {};

var $kJ8UG = parcelRequire("kJ8UG");

var $giPcZ = parcelRequire("giPcZ");

var $gPkHZ = parcelRequire("gPkHZ");

var $2iJTi = parcelRequire("2iJTi");

var $dcxQ7 = parcelRequire("dcxQ7");

var $d00il = parcelRequire("d00il");

var $jzicX = parcelRequire("jzicX");

var $ibKGQ = parcelRequire("ibKGQ");

var $4PmRQ = parcelRequire("4PmRQ");


var $jcr1R = parcelRequire("jcr1R");

var $d00il = parcelRequire("d00il");
class $62e0e171d9fd26a0$export$ef5b42c27450f48c {
    provideSelectionRanges(model, positions) {
        const result = [];
        for (const position of positions){
            const bucket = [];
            result.push(bucket);
            this._addInWordRanges(bucket, model, position);
            this._addWordRanges(bucket, model, position);
            this._addWhitespaceLine(bucket, model, position);
            bucket.push({
                range: model.getFullModelRange()
            });
        }
        return result;
    }
    _addInWordRanges(bucket, model, pos) {
        const obj = model.getWordAtPosition(pos);
        if (!obj) return;
        let { word: word , startColumn: startColumn  } = obj;
        let offset = pos.column - startColumn;
        let start = offset;
        let end = offset;
        let lastCh = 0;
        // LEFT anchor (start)
        for(; start >= 0; start--){
            let ch = word.charCodeAt(start);
            if (start !== offset && (ch === 95 /* Underline */  || ch === 45 /* Dash */ )) break;
            else if ($jcr1R.isLowerAsciiLetter(ch) && $jcr1R.isUpperAsciiLetter(lastCh)) break;
            lastCh = ch;
        }
        start += 1;
        // RIGHT anchor (end)
        for(; end < word.length; end++){
            let ch = word.charCodeAt(end);
            if ($jcr1R.isUpperAsciiLetter(ch) && $jcr1R.isLowerAsciiLetter(lastCh)) break;
            else if (ch === 95 /* Underline */  || ch === 45 /* Dash */ ) break;
            lastCh = ch;
        }
        if (start < end) bucket.push({
            range: new $d00il.Range(pos.lineNumber, startColumn + start, pos.lineNumber, startColumn + end)
        });
    }
    _addWordRanges(bucket, model, pos) {
        const word = model.getWordAtPosition(pos);
        if (word) bucket.push({
            range: new $d00il.Range(pos.lineNumber, word.startColumn, pos.lineNumber, word.endColumn)
        });
    }
    _addWhitespaceLine(bucket, model, pos) {
        if (model.getLineLength(pos.lineNumber) > 0 && model.getLineFirstNonWhitespaceColumn(pos.lineNumber) === 0 && model.getLineLastNonWhitespaceColumn(pos.lineNumber) === 0) bucket.push({
            range: new $d00il.Range(pos.lineNumber, 1, pos.lineNumber, model.getLineMaxColumn(pos.lineNumber))
        });
    }
}



var $4dEdH = parcelRequire("4dEdH");

var $g4v7E = parcelRequire("g4v7E");

var $8tcMz = parcelRequire("8tcMz");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $b5838f4c56bf4623$var$__awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
class $b5838f4c56bf4623$var$SelectionRanges {
    constructor(index, ranges){
        this.index = index;
        this.ranges = ranges;
    }
    mov(fwd) {
        let index = this.index + (fwd ? 1 : -1);
        if (index < 0 || index >= this.ranges.length) return this;
        const res = new $b5838f4c56bf4623$var$SelectionRanges(index, this.ranges);
        if (res.ranges[index].equalsRange(this.ranges[this.index])) // next range equals this range, retry with next-next
        return res.mov(fwd);
        return res;
    }
}
class $b5838f4c56bf4623$var$SmartSelectController {
    constructor(_editor){
        this._editor = _editor;
        this._ignoreSelection = false;
    }
    static get(editor) {
        return editor.getContribution($b5838f4c56bf4623$var$SmartSelectController.ID);
    }
    dispose() {
        var _a;
        (_a = this._selectionListener) === null || _a === void 0 || _a.dispose();
    }
    run(forward) {
        return $b5838f4c56bf4623$var$__awaiter(this, void 0, void 0, function*() {
            if (!this._editor.hasModel()) return;
            const selections = this._editor.getSelections();
            const model = this._editor.getModel();
            if (!$4PmRQ.SelectionRangeRegistry.has(model)) return;
            if (!this._state) yield $b5838f4c56bf4623$export$ade1e921564bf339(model, selections.map((s)=>s.getPosition()
            ), this._editor.getOption(101 /* smartSelect */ ), $giPcZ.CancellationToken.None).then((ranges1)=>{
                var _a1;
                if (!$kJ8UG.isNonEmptyArray(ranges1) || ranges1.length !== selections.length) // invalid result
                return;
                if (!this._editor.hasModel() || !$kJ8UG.equals(this._editor.getSelections(), selections, (a, b)=>a.equalsSelection(b)
                )) // invalid editor state
                return;
                for(let i = 0; i < ranges1.length; i++){
                    ranges1[i] = ranges1[i].filter((range)=>{
                        // filter ranges inside the selection
                        return range.containsPosition(selections[i].getStartPosition()) && range.containsPosition(selections[i].getEndPosition());
                    });
                    // prepend current selection
                    ranges1[i].unshift(selections[i]);
                }
                this._state = ranges1.map((ranges)=>new $b5838f4c56bf4623$var$SelectionRanges(0, ranges)
                );
                // listen to caret move and forget about state
                (_a1 = this._selectionListener) === null || _a1 === void 0 || _a1.dispose();
                this._selectionListener = this._editor.onDidChangeCursorPosition(()=>{
                    var _a;
                    if (!this._ignoreSelection) {
                        (_a = this._selectionListener) === null || _a === void 0 || _a.dispose();
                        this._state = undefined;
                    }
                });
            });
            if (!this._state) // no state
            return;
            this._state = this._state.map((state)=>state.mov(forward)
            );
            const newSelections = this._state.map((state)=>$jzicX.Selection.fromPositions(state.ranges[state.index].getStartPosition(), state.ranges[state.index].getEndPosition())
            );
            this._ignoreSelection = true;
            try {
                this._editor.setSelections(newSelections);
            } finally{
                this._ignoreSelection = false;
            }
        });
    }
}
$b5838f4c56bf4623$var$SmartSelectController.ID = 'editor.contrib.smartSelectController';
class $b5838f4c56bf4623$var$AbstractSmartSelect extends $2iJTi.EditorAction {
    constructor(forward, opts){
        super(opts);
        this._forward = forward;
    }
    run(_accessor, editor) {
        return $b5838f4c56bf4623$var$__awaiter(this, void 0, void 0, function*() {
            let controller = $b5838f4c56bf4623$var$SmartSelectController.get(editor);
            if (controller) yield controller.run(this._forward);
        });
    }
}
class $b5838f4c56bf4623$var$GrowSelectionAction extends $b5838f4c56bf4623$var$AbstractSmartSelect {
    constructor(){
        super(true, {
            id: 'editor.action.smartSelect.expand',
            label: $4dEdH.localize('smartSelect.expand', "Expand Selection"),
            alias: 'Expand Selection',
            precondition: undefined,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.editorTextFocus,
                primary: 1553 /* RightArrow */ ,
                mac: {
                    primary: 3345 /* RightArrow */ ,
                    secondary: [
                        1297 /* RightArrow */ 
                    ]
                },
                weight: 100 /* EditorContrib */ 
            },
            menuOpts: {
                menuId: $g4v7E.MenuId.MenubarSelectionMenu,
                group: '1_basic',
                title: $4dEdH.localize({
                    key: 'miSmartSelectGrow',
                    comment: [
                        '&& denotes a mnemonic'
                    ]
                }, "&&Expand Selection"),
                order: 2
            }
        });
    }
}
// renamed command id
$8tcMz.CommandsRegistry.registerCommandAlias('editor.action.smartSelect.grow', 'editor.action.smartSelect.expand');
class $b5838f4c56bf4623$var$ShrinkSelectionAction extends $b5838f4c56bf4623$var$AbstractSmartSelect {
    constructor(){
        super(false, {
            id: 'editor.action.smartSelect.shrink',
            label: $4dEdH.localize('smartSelect.shrink', "Shrink Selection"),
            alias: 'Shrink Selection',
            precondition: undefined,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.editorTextFocus,
                primary: 1551 /* LeftArrow */ ,
                mac: {
                    primary: 3343 /* LeftArrow */ ,
                    secondary: [
                        1295 /* LeftArrow */ 
                    ]
                },
                weight: 100 /* EditorContrib */ 
            },
            menuOpts: {
                menuId: $g4v7E.MenuId.MenubarSelectionMenu,
                group: '1_basic',
                title: $4dEdH.localize({
                    key: 'miSmartSelectShrink',
                    comment: [
                        '&& denotes a mnemonic'
                    ]
                }, "&&Shrink Selection"),
                order: 3
            }
        });
    }
}
$2iJTi.registerEditorContribution($b5838f4c56bf4623$var$SmartSelectController.ID, $b5838f4c56bf4623$var$SmartSelectController);
$2iJTi.registerEditorAction($b5838f4c56bf4623$var$GrowSelectionAction);
$2iJTi.registerEditorAction($b5838f4c56bf4623$var$ShrinkSelectionAction);
// word selection
$4PmRQ.SelectionRangeRegistry.register('*', new $62e0e171d9fd26a0$export$ef5b42c27450f48c());
function $b5838f4c56bf4623$export$ade1e921564bf339(model, positions, options, token) {
    return $b5838f4c56bf4623$var$__awaiter(this, void 0, void 0, function*() {
        const providers = $4PmRQ.SelectionRangeRegistry.all(model);
        if (providers.length === 1) // add word selection and bracket selection when no provider exists
        providers.unshift(new $c53404b201a26704$exports.BracketSelectionRangeProvider());
        let work = [];
        let allRawRanges = [];
        for (const provider of providers)work.push(Promise.resolve(provider.provideSelectionRanges(model, positions, token)).then((allProviderRanges)=>{
            if ($kJ8UG.isNonEmptyArray(allProviderRanges) && allProviderRanges.length === positions.length) for(let i = 0; i < positions.length; i++){
                if (!allRawRanges[i]) allRawRanges[i] = [];
                for (const oneProviderRanges of allProviderRanges[i])if ($d00il.Range.isIRange(oneProviderRanges.range) && $d00il.Range.containsPosition(oneProviderRanges.range, positions[i])) allRawRanges[i].push($d00il.Range.lift(oneProviderRanges.range));
            }
        }, $gPkHZ.onUnexpectedExternalError));
        yield Promise.all(work);
        return allRawRanges.map((oneRawRanges)=>{
            if (oneRawRanges.length === 0) return [];
            // sort all by start/end position
            oneRawRanges.sort((a, b)=>{
                if ($dcxQ7.Position.isBefore(a.getStartPosition(), b.getStartPosition())) return 1;
                else if ($dcxQ7.Position.isBefore(b.getStartPosition(), a.getStartPosition())) return -1;
                else if ($dcxQ7.Position.isBefore(a.getEndPosition(), b.getEndPosition())) return -1;
                else if ($dcxQ7.Position.isBefore(b.getEndPosition(), a.getEndPosition())) return 1;
                else return 0;
            });
            // remove ranges that don't contain the former range or that are equal to the
            // former range
            let oneRanges = [];
            let last;
            for (const range of oneRawRanges)if (!last || $d00il.Range.containsRange(range, last) && !$d00il.Range.equalsRange(range, last)) {
                oneRanges.push(range);
                last = range;
            }
            if (!options.selectLeadingAndTrailingWhitespace) return oneRanges;
            // add ranges that expand trivia at line starts and ends whenever a range
            // wraps onto the a new line
            let oneRangesWithTrivia = [
                oneRanges[0]
            ];
            for(let i = 1; i < oneRanges.length; i++){
                const prev = oneRanges[i - 1];
                const cur = oneRanges[i];
                if (cur.startLineNumber !== prev.startLineNumber || cur.endLineNumber !== prev.endLineNumber) {
                    // add line/block range without leading/failing whitespace
                    const rangeNoWhitespace = new $d00il.Range(prev.startLineNumber, model.getLineFirstNonWhitespaceColumn(prev.startLineNumber), prev.endLineNumber, model.getLineLastNonWhitespaceColumn(prev.endLineNumber));
                    if (rangeNoWhitespace.containsRange(prev) && !rangeNoWhitespace.equalsRange(prev) && cur.containsRange(rangeNoWhitespace) && !cur.equalsRange(rangeNoWhitespace)) oneRangesWithTrivia.push(rangeNoWhitespace);
                    // add line/block range
                    const rangeFull = new $d00il.Range(prev.startLineNumber, 1, prev.endLineNumber, model.getLineMaxColumn(prev.endLineNumber));
                    if (rangeFull.containsRange(prev) && !rangeFull.equalsRange(rangeNoWhitespace) && cur.containsRange(rangeFull) && !cur.equalsRange(rangeFull)) oneRangesWithTrivia.push(rangeFull);
                }
                oneRangesWithTrivia.push(cur);
            }
            return oneRangesWithTrivia;
        });
    });
}
$2iJTi.registerModelCommand('_executeSelectionRangeProvider', function(model, ...args) {
    const [positions] = args;
    return $b5838f4c56bf4623$export$ade1e921564bf339(model, positions, {
        selectLeadingAndTrailingWhitespace: true
    }, $giPcZ.CancellationToken.None);
});





var $eUQTM = parcelRequire("eUQTM");

var $2iJTi = parcelRequire("2iJTi");

var $4dEdH = parcelRequire("4dEdH");
class $cb8170d45b1152de$var$ForceRetokenizeAction extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: 'editor.action.forceRetokenize',
            label: $4dEdH.localize('forceRetokenize', "Developer: Force Retokenize"),
            alias: 'Developer: Force Retokenize',
            precondition: undefined
        });
    }
    run(accessor, editor) {
        if (!editor.hasModel()) return;
        const model = editor.getModel();
        model.resetTokenization();
        const sw = new $eUQTM.StopWatch(true);
        model.forceTokenization(model.getLineCount());
        sw.stop();
        console.log(`tokenization took ${sw.elapsed()}`);
    }
}
$2iJTi.registerEditorAction($cb8170d45b1152de$var$ForceRetokenizeAction);



var $aIbUW = parcelRequire("aIbUW");

var $2iJTi = parcelRequire("2iJTi");

var $4Or4W = parcelRequire("4Or4W");

var $4dEdH = parcelRequire("4dEdH");
class $33e91ba4f62df884$export$676ded3884da9932 extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: $33e91ba4f62df884$export$676ded3884da9932.ID,
            label: $4dEdH.localize({
                key: 'toggle.tabMovesFocus',
                comment: [
                    'Turn on/off use of tab key for moving focus around VS Code'
                ]
            }, "Toggle Tab Key Moves Focus"),
            alias: 'Toggle Tab Key Moves Focus',
            precondition: undefined,
            kbOpts: {
                kbExpr: null,
                primary: 2091 /* KeyM */ ,
                mac: {
                    primary: 1323 /* KeyM */ 
                },
                weight: 100 /* EditorContrib */ 
            }
        });
    }
    run(accessor, editor) {
        const oldValue = $4Or4W.TabFocus.getTabFocusMode();
        const newValue = !oldValue;
        $4Or4W.TabFocus.setTabFocusMode(newValue);
        if (newValue) $aIbUW.alert($4dEdH.localize('toggle.tabMovesFocus.on', "Pressing Tab will now move focus to the next focusable element"));
        else $aIbUW.alert($4dEdH.localize('toggle.tabMovesFocus.off', "Pressing Tab will now insert the tab character"));
    }
}
$33e91ba4f62df884$export$676ded3884da9932.ID = 'editor.action.toggleTabFocusMode';
$2iJTi.registerEditorAction($33e91ba4f62df884$export$676ded3884da9932);



var $736c4f75cbad879e$exports = {};

var $9cWcn = parcelRequire("9cWcn");

var $5Aea5 = parcelRequire("5Aea5");

var $2iJTi = parcelRequire("2iJTi");

var $2Qfl0 = parcelRequire("2Qfl0");

var $4dEdH = parcelRequire("4dEdH");

var $iERup = parcelRequire("iERup");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $736c4f75cbad879e$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var $736c4f75cbad879e$var$__param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
};
var $736c4f75cbad879e$var$__awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
const $736c4f75cbad879e$var$ignoreUnusualLineTerminators = 'ignoreUnusualLineTerminators';
function $736c4f75cbad879e$var$writeIgnoreState(codeEditorService, model, state) {
    codeEditorService.setModelProperty(model.uri, $736c4f75cbad879e$var$ignoreUnusualLineTerminators, state);
}
function $736c4f75cbad879e$var$readIgnoreState(codeEditorService, model) {
    return codeEditorService.getModelProperty(model.uri, $736c4f75cbad879e$var$ignoreUnusualLineTerminators);
}
let $736c4f75cbad879e$export$ac2e48bc5d9c728f = class $736c4f75cbad879e$export$ac2e48bc5d9c728f extends $9cWcn.Disposable {
    constructor(_editor, _dialogService, _codeEditorService){
        super();
        this._editor = _editor;
        this._dialogService = _dialogService;
        this._codeEditorService = _codeEditorService;
        this._config = this._editor.getOption(113 /* unusualLineTerminators */ );
        this._register(this._editor.onDidChangeConfiguration((e)=>{
            if (e.hasChanged(113 /* unusualLineTerminators */ )) {
                this._config = this._editor.getOption(113 /* unusualLineTerminators */ );
                this._checkForUnusualLineTerminators();
            }
        }));
        this._register(this._editor.onDidChangeModel(()=>{
            this._checkForUnusualLineTerminators();
        }));
        this._register(this._editor.onDidChangeModelContent((e)=>{
            if (e.isUndoing) // skip checking in case of undoing
            return;
            this._checkForUnusualLineTerminators();
        }));
    }
    _checkForUnusualLineTerminators() {
        return $736c4f75cbad879e$var$__awaiter(this, void 0, void 0, function*() {
            if (this._config === 'off') return;
            if (!this._editor.hasModel()) return;
            const model = this._editor.getModel();
            if (!model.mightContainUnusualLineTerminators()) return;
            const ignoreState = $736c4f75cbad879e$var$readIgnoreState(this._codeEditorService, model);
            if (ignoreState === true) // this model should be ignored
            return;
            if (this._editor.getOption(80 /* readOnly */ )) // read only editor => sorry!
            return;
            if (this._config === 'auto') {
                // just do it!
                model.removeUnusualLineTerminators(this._editor.getSelections());
                return;
            }
            const result = yield this._dialogService.confirm({
                title: $4dEdH.localize('unusualLineTerminators.title', "Unusual Line Terminators"),
                message: $4dEdH.localize('unusualLineTerminators.message', "Detected unusual line terminators"),
                detail: $4dEdH.localize('unusualLineTerminators.detail', "The file '{0}' contains one or more unusual line terminator characters, like Line Separator (LS) or Paragraph Separator (PS).\n\nIt is recommended to remove them from the file. This can be configured via `editor.unusualLineTerminators`.", $5Aea5.basename(model.uri)),
                primaryButton: $4dEdH.localize('unusualLineTerminators.fix', "Remove Unusual Line Terminators"),
                secondaryButton: $4dEdH.localize('unusualLineTerminators.ignore', "Ignore")
            });
            if (!result.confirmed) {
                // this model should be ignored
                $736c4f75cbad879e$var$writeIgnoreState(this._codeEditorService, model, true);
                return;
            }
            model.removeUnusualLineTerminators(this._editor.getSelections());
        });
    }
};
$736c4f75cbad879e$export$ac2e48bc5d9c728f.ID = 'editor.contrib.unusualLineTerminatorsDetector';
$736c4f75cbad879e$export$ac2e48bc5d9c728f = $736c4f75cbad879e$var$__decorate([
    $736c4f75cbad879e$var$__param(1, $iERup.IDialogService),
    $736c4f75cbad879e$var$__param(2, $2Qfl0.ICodeEditorService)
], $736c4f75cbad879e$export$ac2e48bc5d9c728f);
$2iJTi.registerEditorContribution($736c4f75cbad879e$export$ac2e48bc5d9c728f.ID, $736c4f75cbad879e$export$ac2e48bc5d9c728f);


var $c18a058a1ae92df1$exports = {};

var $6bXyA = parcelRequire("6bXyA");

var $9cWcn = parcelRequire("9cWcn");

var $2iJTi = parcelRequire("2iJTi");

var $4PmRQ = parcelRequire("4PmRQ");

var $9Lq0q = parcelRequire("9Lq0q");

var $15EOE = parcelRequire("15EOE");

var $hF1Mz = parcelRequire("hF1Mz");

var $9OYtR = parcelRequire("9OYtR");

var $35IZ9 = parcelRequire("35IZ9");

var $azIPz = parcelRequire("azIPz");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $c18a058a1ae92df1$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var $c18a058a1ae92df1$var$__param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
};
let $c18a058a1ae92df1$var$ViewportSemanticTokensContribution = class ViewportSemanticTokensContribution extends $9cWcn.Disposable {
    constructor(editor, _modelService, _themeService, _configurationService){
        super();
        this._modelService = _modelService;
        this._themeService = _themeService;
        this._configurationService = _configurationService;
        this._editor = editor;
        this._tokenizeViewport = new $6bXyA.RunOnceScheduler(()=>this._tokenizeViewportNow()
        , 100);
        this._outstandingRequests = [];
        this._register(this._editor.onDidScrollChange(()=>{
            this._tokenizeViewport.schedule();
        }));
        this._register(this._editor.onDidChangeModel(()=>{
            this._cancelAll();
            this._tokenizeViewport.schedule();
        }));
        this._register(this._editor.onDidChangeModelContent((e)=>{
            this._cancelAll();
            this._tokenizeViewport.schedule();
        }));
        this._register($4PmRQ.DocumentRangeSemanticTokensProviderRegistry.onDidChange(()=>{
            this._cancelAll();
            this._tokenizeViewport.schedule();
        }));
        this._register(this._configurationService.onDidChangeConfiguration((e)=>{
            if (e.affectsConfiguration($hF1Mz.SEMANTIC_HIGHLIGHTING_SETTING_ID)) {
                this._cancelAll();
                this._tokenizeViewport.schedule();
            }
        }));
        this._register(this._themeService.onDidColorThemeChange(()=>{
            this._cancelAll();
            this._tokenizeViewport.schedule();
        }));
    }
    _cancelAll() {
        for (const request of this._outstandingRequests)request.cancel();
        this._outstandingRequests = [];
    }
    _removeOutstandingRequest(req) {
        for(let i = 0, len = this._outstandingRequests.length; i < len; i++)if (this._outstandingRequests[i] === req) {
            this._outstandingRequests.splice(i, 1);
            return;
        }
    }
    _tokenizeViewportNow() {
        if (!this._editor.hasModel()) return;
        const model = this._editor.getModel();
        if (model.hasCompleteSemanticTokens()) return;
        if (!$hF1Mz.isSemanticColoringEnabled(model, this._themeService, this._configurationService)) {
            if (model.hasSomeSemanticTokens()) model.setSemanticTokens(null, false);
            return;
        }
        if (!$9Lq0q.hasDocumentRangeSemanticTokensProvider(model)) {
            if (model.hasSomeSemanticTokens()) model.setSemanticTokens(null, false);
            return;
        }
        const visibleRanges = this._editor.getVisibleRangesPlusViewportAboveBelow();
        this._outstandingRequests = this._outstandingRequests.concat(visibleRanges.map((range)=>this._requestRange(model, range)
        ));
    }
    _requestRange(model, range) {
        const requestVersionId = model.getVersionId();
        const request = $6bXyA.createCancelablePromise((token)=>Promise.resolve($9Lq0q.getDocumentRangeSemanticTokens(model, range, token))
        );
        request.then((r)=>{
            if (!r || !r.tokens || model.isDisposed() || model.getVersionId() !== requestVersionId) return;
            const { provider: provider , tokens: result  } = r;
            const styling = this._modelService.getSemanticTokensProviderStyling(provider);
            model.setPartialSemanticTokens(range, $9OYtR.toMultilineTokens2(result, styling, model.getLanguageId()));
        }).then(()=>this._removeOutstandingRequest(request)
        , ()=>this._removeOutstandingRequest(request)
        );
        return request;
    }
};
$c18a058a1ae92df1$var$ViewportSemanticTokensContribution.ID = 'editor.contrib.viewportSemanticTokens';
$c18a058a1ae92df1$var$ViewportSemanticTokensContribution = $c18a058a1ae92df1$var$__decorate([
    $c18a058a1ae92df1$var$__param(1, $15EOE.IModelService),
    $c18a058a1ae92df1$var$__param(2, $azIPz.IThemeService),
    $c18a058a1ae92df1$var$__param(3, $35IZ9.IConfigurationService)
], $c18a058a1ae92df1$var$ViewportSemanticTokensContribution);
$2iJTi.registerEditorContribution($c18a058a1ae92df1$var$ViewportSemanticTokensContribution.ID, $c18a058a1ae92df1$var$ViewportSemanticTokensContribution);


var $8be5834fcc81827d$exports = {};

var $aIbUW = parcelRequire("aIbUW");

var $kJ8UG = parcelRequire("kJ8UG");

var $6bXyA = parcelRequire("6bXyA");

var $giPcZ = parcelRequire("giPcZ");

var $gPkHZ = parcelRequire("gPkHZ");

var $9cWcn = parcelRequire("9cWcn");

var $2iJTi = parcelRequire("2iJTi");

var $d00il = parcelRequire("d00il");

var $ibKGQ = parcelRequire("ibKGQ");

var $1Y4vr = parcelRequire("1Y4vr");

var $91ntV = parcelRequire("91ntV");

var $4PmRQ = parcelRequire("4PmRQ");

var $4dEdH = parcelRequire("4dEdH");

var $cxCeF = parcelRequire("cxCeF");

var $gaWeX = parcelRequire("gaWeX");

var $azIPz = parcelRequire("azIPz");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $8be5834fcc81827d$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var $8be5834fcc81827d$var$__param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
};
const $8be5834fcc81827d$var$editorWordHighlight = $gaWeX.registerColor('editor.wordHighlightBackground', {
    dark: '#575757B8',
    light: '#57575740',
    hc: null
}, $4dEdH.localize('wordHighlight', 'Background color of a symbol during read-access, like reading a variable. The color must not be opaque so as not to hide underlying decorations.'), true);
const $8be5834fcc81827d$var$editorWordHighlightStrong = $gaWeX.registerColor('editor.wordHighlightStrongBackground', {
    dark: '#004972B8',
    light: '#0e639c40',
    hc: null
}, $4dEdH.localize('wordHighlightStrong', 'Background color of a symbol during write-access, like writing to a variable. The color must not be opaque so as not to hide underlying decorations.'), true);
const $8be5834fcc81827d$var$editorWordHighlightBorder = $gaWeX.registerColor('editor.wordHighlightBorder', {
    light: null,
    dark: null,
    hc: $gaWeX.activeContrastBorder
}, $4dEdH.localize('wordHighlightBorder', 'Border color of a symbol during read-access, like reading a variable.'));
const $8be5834fcc81827d$var$editorWordHighlightStrongBorder = $gaWeX.registerColor('editor.wordHighlightStrongBorder', {
    light: null,
    dark: null,
    hc: $gaWeX.activeContrastBorder
}, $4dEdH.localize('wordHighlightStrongBorder', 'Border color of a symbol during write-access, like writing to a variable.'));
const $8be5834fcc81827d$var$overviewRulerWordHighlightForeground = $gaWeX.registerColor('editorOverviewRuler.wordHighlightForeground', {
    dark: '#A0A0A0CC',
    light: '#A0A0A0CC',
    hc: '#A0A0A0CC'
}, $4dEdH.localize('overviewRulerWordHighlightForeground', 'Overview ruler marker color for symbol highlights. The color must not be opaque so as not to hide underlying decorations.'), true);
const $8be5834fcc81827d$var$overviewRulerWordHighlightStrongForeground = $gaWeX.registerColor('editorOverviewRuler.wordHighlightStrongForeground', {
    dark: '#C0A0C0CC',
    light: '#C0A0C0CC',
    hc: '#C0A0C0CC'
}, $4dEdH.localize('overviewRulerWordHighlightStrongForeground', 'Overview ruler marker color for write-access symbol highlights. The color must not be opaque so as not to hide underlying decorations.'), true);
const $8be5834fcc81827d$var$ctxHasWordHighlights = new $cxCeF.RawContextKey('hasWordHighlights', false);
function $8be5834fcc81827d$export$25c73b4d2077057f(model, position, token) {
    const orderedByScore = $4PmRQ.DocumentHighlightProviderRegistry.ordered(model);
    // in order of score ask the occurrences provider
    // until someone response with a good result
    // (good = none empty array)
    return $6bXyA.first(orderedByScore.map((provider)=>()=>{
            return Promise.resolve(provider.provideDocumentHighlights(model, position, token)).then(undefined, $gPkHZ.onUnexpectedExternalError);
        }
    ), $kJ8UG.isNonEmptyArray);
}
class $8be5834fcc81827d$var$OccurenceAtPositionRequest {
    constructor(model, selection, wordSeparators){
        this._wordRange = this._getCurrentWordRange(model, selection);
        this.result = $6bXyA.createCancelablePromise((token)=>this._compute(model, selection, wordSeparators, token)
        );
    }
    _getCurrentWordRange(model, selection) {
        const word = model.getWordAtPosition(selection.getPosition());
        if (word) return new $d00il.Range(selection.startLineNumber, word.startColumn, selection.startLineNumber, word.endColumn);
        return null;
    }
    isValid(model, selection, decorationIds) {
        const lineNumber = selection.startLineNumber;
        const startColumn = selection.startColumn;
        const endColumn = selection.endColumn;
        const currentWordRange = this._getCurrentWordRange(model, selection);
        let requestIsValid = Boolean(this._wordRange && this._wordRange.equalsRange(currentWordRange));
        // Even if we are on a different word, if that word is in the decorations ranges, the request is still valid
        // (Same symbol)
        for(let i = 0, len = decorationIds.length; !requestIsValid && i < len; i++){
            let range = model.getDecorationRange(decorationIds[i]);
            if (range && range.startLineNumber === lineNumber) {
                if (range.startColumn <= startColumn && range.endColumn >= endColumn) requestIsValid = true;
            }
        }
        return requestIsValid;
    }
    cancel() {
        this.result.cancel();
    }
}
class $8be5834fcc81827d$var$SemanticOccurenceAtPositionRequest extends $8be5834fcc81827d$var$OccurenceAtPositionRequest {
    _compute(model, selection, wordSeparators, token) {
        return $8be5834fcc81827d$export$25c73b4d2077057f(model, selection.getPosition(), token).then((value)=>value || []
        );
    }
}
class $8be5834fcc81827d$var$TextualOccurenceAtPositionRequest extends $8be5834fcc81827d$var$OccurenceAtPositionRequest {
    constructor(model, selection, wordSeparators){
        super(model, selection, wordSeparators);
        this._selectionIsEmpty = selection.isEmpty();
    }
    _compute(model, selection, wordSeparators, token) {
        return $6bXyA.timeout(250, token).then(()=>{
            if (!selection.isEmpty()) return [];
            const word = model.getWordAtPosition(selection.getPosition());
            if (!word || word.word.length > 1000) return [];
            const matches = model.findMatches(word.word, true, false, true, wordSeparators, false);
            return matches.map((m)=>{
                return {
                    range: m.range,
                    kind: $4PmRQ.DocumentHighlightKind.Text
                };
            });
        });
    }
    isValid(model, selection, decorationIds) {
        const currentSelectionIsEmpty = selection.isEmpty();
        if (this._selectionIsEmpty !== currentSelectionIsEmpty) return false;
        return super.isValid(model, selection, decorationIds);
    }
}
function $8be5834fcc81827d$var$computeOccurencesAtPosition(model, selection, wordSeparators) {
    if ($4PmRQ.DocumentHighlightProviderRegistry.has(model)) return new $8be5834fcc81827d$var$SemanticOccurenceAtPositionRequest(model, selection, wordSeparators);
    return new $8be5834fcc81827d$var$TextualOccurenceAtPositionRequest(model, selection, wordSeparators);
}
$2iJTi.registerModelAndPositionCommand('_executeDocumentHighlights', (model, position)=>$8be5834fcc81827d$export$25c73b4d2077057f(model, position, $giPcZ.CancellationToken.None)
);
class $8be5834fcc81827d$var$WordHighlighter {
    constructor(editor, contextKeyService){
        this.toUnhook = new $9cWcn.DisposableStore();
        this.workerRequestTokenId = 0;
        this.workerRequestCompleted = false;
        this.workerRequestValue = [];
        this.lastCursorPositionChangeTime = 0;
        this.renderDecorationsTimer = -1;
        this.editor = editor;
        this._hasWordHighlights = $8be5834fcc81827d$var$ctxHasWordHighlights.bindTo(contextKeyService);
        this._ignorePositionChangeEvent = false;
        this.occurrencesHighlight = this.editor.getOption(71 /* occurrencesHighlight */ );
        this.model = this.editor.getModel();
        this.toUnhook.add(editor.onDidChangeCursorPosition((e)=>{
            if (this._ignorePositionChangeEvent) // We are changing the position => ignore this event
            return;
            if (!this.occurrencesHighlight) // Early exit if nothing needs to be done!
            // Leave some form of early exit check here if you wish to continue being a cursor position change listener ;)
            return;
            this._onPositionChanged(e);
        }));
        this.toUnhook.add(editor.onDidChangeModelContent((e)=>{
            this._stopAll();
        }));
        this.toUnhook.add(editor.onDidChangeConfiguration((e)=>{
            let newValue = this.editor.getOption(71 /* occurrencesHighlight */ );
            if (this.occurrencesHighlight !== newValue) {
                this.occurrencesHighlight = newValue;
                this._stopAll();
            }
        }));
        this._decorationIds = [];
        this.workerRequestTokenId = 0;
        this.workerRequest = null;
        this.workerRequestCompleted = false;
        this.lastCursorPositionChangeTime = 0;
        this.renderDecorationsTimer = -1;
    }
    hasDecorations() {
        return this._decorationIds.length > 0;
    }
    restore() {
        if (!this.occurrencesHighlight) return;
        this._run();
    }
    _getSortedHighlights() {
        return $kJ8UG.coalesce(this._decorationIds.map((id)=>this.model.getDecorationRange(id)
        ).sort($d00il.Range.compareRangesUsingStarts));
    }
    moveNext() {
        let highlights = this._getSortedHighlights();
        let index = highlights.findIndex((range)=>range.containsPosition(this.editor.getPosition())
        );
        let newIndex = (index + 1) % highlights.length;
        let dest = highlights[newIndex];
        try {
            this._ignorePositionChangeEvent = true;
            this.editor.setPosition(dest.getStartPosition());
            this.editor.revealRangeInCenterIfOutsideViewport(dest);
            const word = this._getWord();
            if (word) {
                const lineContent = this.editor.getModel().getLineContent(dest.startLineNumber);
                $aIbUW.alert(`${lineContent}, ${newIndex + 1} of ${highlights.length} for '${word.word}'`);
            }
        } finally{
            this._ignorePositionChangeEvent = false;
        }
    }
    moveBack() {
        let highlights = this._getSortedHighlights();
        let index = highlights.findIndex((range)=>range.containsPosition(this.editor.getPosition())
        );
        let newIndex = (index - 1 + highlights.length) % highlights.length;
        let dest = highlights[newIndex];
        try {
            this._ignorePositionChangeEvent = true;
            this.editor.setPosition(dest.getStartPosition());
            this.editor.revealRangeInCenterIfOutsideViewport(dest);
            const word = this._getWord();
            if (word) {
                const lineContent = this.editor.getModel().getLineContent(dest.startLineNumber);
                $aIbUW.alert(`${lineContent}, ${newIndex + 1} of ${highlights.length} for '${word.word}'`);
            }
        } finally{
            this._ignorePositionChangeEvent = false;
        }
    }
    _removeDecorations() {
        if (this._decorationIds.length > 0) {
            // remove decorations
            this._decorationIds = this.editor.deltaDecorations(this._decorationIds, []);
            this._hasWordHighlights.set(false);
        }
    }
    _stopAll() {
        // Remove any existing decorations
        this._removeDecorations();
        // Cancel any renderDecorationsTimer
        if (this.renderDecorationsTimer !== -1) {
            clearTimeout(this.renderDecorationsTimer);
            this.renderDecorationsTimer = -1;
        }
        // Cancel any worker request
        if (this.workerRequest !== null) {
            this.workerRequest.cancel();
            this.workerRequest = null;
        }
        // Invalidate any worker request callback
        if (!this.workerRequestCompleted) {
            this.workerRequestTokenId++;
            this.workerRequestCompleted = true;
        }
    }
    _onPositionChanged(e) {
        // disabled
        if (!this.occurrencesHighlight) {
            this._stopAll();
            return;
        }
        // ignore typing & other
        if (e.reason !== 3 /* Explicit */ ) {
            this._stopAll();
            return;
        }
        this._run();
    }
    _getWord() {
        let editorSelection = this.editor.getSelection();
        let lineNumber = editorSelection.startLineNumber;
        let startColumn = editorSelection.startColumn;
        return this.model.getWordAtPosition({
            lineNumber: lineNumber,
            column: startColumn
        });
    }
    _run() {
        let editorSelection = this.editor.getSelection();
        // ignore multiline selection
        if (editorSelection.startLineNumber !== editorSelection.endLineNumber) {
            this._stopAll();
            return;
        }
        let startColumn = editorSelection.startColumn;
        let endColumn = editorSelection.endColumn;
        const word = this._getWord();
        // The selection must be inside a word or surround one word at most
        if (!word || word.startColumn > startColumn || word.endColumn < endColumn) {
            this._stopAll();
            return;
        }
        // All the effort below is trying to achieve this:
        // - when cursor is moved to a word, trigger immediately a findOccurrences request
        // - 250ms later after the last cursor move event, render the occurrences
        // - no flickering!
        const workerRequestIsValid = this.workerRequest && this.workerRequest.isValid(this.model, editorSelection, this._decorationIds);
        // There are 4 cases:
        // a) old workerRequest is valid & completed, renderDecorationsTimer fired
        // b) old workerRequest is valid & completed, renderDecorationsTimer not fired
        // c) old workerRequest is valid, but not completed
        // d) old workerRequest is not valid
        // For a) no action is needed
        // For c), member 'lastCursorPositionChangeTime' will be used when installing the timer so no action is needed
        this.lastCursorPositionChangeTime = new Date().getTime();
        if (workerRequestIsValid) {
            if (this.workerRequestCompleted && this.renderDecorationsTimer !== -1) {
                // case b)
                // Delay the firing of renderDecorationsTimer by an extra 250 ms
                clearTimeout(this.renderDecorationsTimer);
                this.renderDecorationsTimer = -1;
                this._beginRenderDecorations();
            }
        } else {
            // case d)
            // Stop all previous actions and start fresh
            this._stopAll();
            let myRequestId = ++this.workerRequestTokenId;
            this.workerRequestCompleted = false;
            this.workerRequest = $8be5834fcc81827d$var$computeOccurencesAtPosition(this.model, this.editor.getSelection(), this.editor.getOption(116 /* wordSeparators */ ));
            this.workerRequest.result.then((data)=>{
                if (myRequestId === this.workerRequestTokenId) {
                    this.workerRequestCompleted = true;
                    this.workerRequestValue = data || [];
                    this._beginRenderDecorations();
                }
            }, $gPkHZ.onUnexpectedError);
        }
    }
    _beginRenderDecorations() {
        let currentTime = new Date().getTime();
        let minimumRenderTime = this.lastCursorPositionChangeTime + 250;
        if (currentTime >= minimumRenderTime) {
            // Synchronous
            this.renderDecorationsTimer = -1;
            this.renderDecorations();
        } else // Asynchronous
        this.renderDecorationsTimer = setTimeout(()=>{
            this.renderDecorations();
        }, minimumRenderTime - currentTime);
    }
    renderDecorations() {
        this.renderDecorationsTimer = -1;
        let decorations = [];
        for (const info of this.workerRequestValue)if (info.range) decorations.push({
            range: info.range,
            options: $8be5834fcc81827d$var$WordHighlighter._getDecorationOptions(info.kind)
        });
        this._decorationIds = this.editor.deltaDecorations(this._decorationIds, decorations);
        this._hasWordHighlights.set(this.hasDecorations());
    }
    static _getDecorationOptions(kind) {
        if (kind === $4PmRQ.DocumentHighlightKind.Write) return this._WRITE_OPTIONS;
        else if (kind === $4PmRQ.DocumentHighlightKind.Text) return this._TEXT_OPTIONS;
        else return this._REGULAR_OPTIONS;
    }
    dispose() {
        this._stopAll();
        this.toUnhook.dispose();
    }
}
$8be5834fcc81827d$var$WordHighlighter._WRITE_OPTIONS = $91ntV.ModelDecorationOptions.register({
    description: 'word-highlight-strong',
    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */ ,
    className: 'wordHighlightStrong',
    overviewRuler: {
        color: $azIPz.themeColorFromId($8be5834fcc81827d$var$overviewRulerWordHighlightStrongForeground),
        position: $1Y4vr.OverviewRulerLane.Center
    },
    minimap: {
        color: $azIPz.themeColorFromId($gaWeX.minimapSelectionOccurrenceHighlight),
        position: $1Y4vr.MinimapPosition.Inline
    }
});
$8be5834fcc81827d$var$WordHighlighter._TEXT_OPTIONS = $91ntV.ModelDecorationOptions.register({
    description: 'selection-highlight',
    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */ ,
    className: 'selectionHighlight',
    overviewRuler: {
        color: $azIPz.themeColorFromId($gaWeX.overviewRulerSelectionHighlightForeground),
        position: $1Y4vr.OverviewRulerLane.Center
    },
    minimap: {
        color: $azIPz.themeColorFromId($gaWeX.minimapSelectionOccurrenceHighlight),
        position: $1Y4vr.MinimapPosition.Inline
    }
});
$8be5834fcc81827d$var$WordHighlighter._REGULAR_OPTIONS = $91ntV.ModelDecorationOptions.register({
    description: 'word-highlight',
    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */ ,
    className: 'wordHighlight',
    overviewRuler: {
        color: $azIPz.themeColorFromId($8be5834fcc81827d$var$overviewRulerWordHighlightForeground),
        position: $1Y4vr.OverviewRulerLane.Center
    },
    minimap: {
        color: $azIPz.themeColorFromId($gaWeX.minimapSelectionOccurrenceHighlight),
        position: $1Y4vr.MinimapPosition.Inline
    }
});
let $8be5834fcc81827d$var$WordHighlighterContribution = class WordHighlighterContribution extends $9cWcn.Disposable {
    constructor(editor, contextKeyService){
        super();
        this.wordHighlighter = null;
        const createWordHighlighterIfPossible = ()=>{
            if (editor.hasModel()) this.wordHighlighter = new $8be5834fcc81827d$var$WordHighlighter(editor, contextKeyService);
        };
        this._register(editor.onDidChangeModel((e)=>{
            if (this.wordHighlighter) {
                this.wordHighlighter.dispose();
                this.wordHighlighter = null;
            }
            createWordHighlighterIfPossible();
        }));
        createWordHighlighterIfPossible();
    }
    static get(editor) {
        return editor.getContribution(WordHighlighterContribution.ID);
    }
    saveViewState() {
        if (this.wordHighlighter && this.wordHighlighter.hasDecorations()) return true;
        return false;
    }
    moveNext() {
        if (this.wordHighlighter) this.wordHighlighter.moveNext();
    }
    moveBack() {
        if (this.wordHighlighter) this.wordHighlighter.moveBack();
    }
    restoreViewState(state) {
        if (this.wordHighlighter && state) this.wordHighlighter.restore();
    }
    dispose() {
        if (this.wordHighlighter) {
            this.wordHighlighter.dispose();
            this.wordHighlighter = null;
        }
        super.dispose();
    }
};
$8be5834fcc81827d$var$WordHighlighterContribution.ID = 'editor.contrib.wordHighlighter';
$8be5834fcc81827d$var$WordHighlighterContribution = $8be5834fcc81827d$var$__decorate([
    $8be5834fcc81827d$var$__param(1, $cxCeF.IContextKeyService)
], $8be5834fcc81827d$var$WordHighlighterContribution);
class $8be5834fcc81827d$var$WordHighlightNavigationAction extends $2iJTi.EditorAction {
    constructor(next, opts){
        super(opts);
        this._isNext = next;
    }
    run(accessor, editor) {
        const controller = $8be5834fcc81827d$var$WordHighlighterContribution.get(editor);
        if (!controller) return;
        if (this._isNext) controller.moveNext();
        else controller.moveBack();
    }
}
class $8be5834fcc81827d$var$NextWordHighlightAction extends $8be5834fcc81827d$var$WordHighlightNavigationAction {
    constructor(){
        super(true, {
            id: 'editor.action.wordHighlight.next',
            label: $4dEdH.localize('wordHighlight.next.label', "Go to Next Symbol Highlight"),
            alias: 'Go to Next Symbol Highlight',
            precondition: $8be5834fcc81827d$var$ctxHasWordHighlights,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.editorTextFocus,
                primary: 65 /* F7 */ ,
                weight: 100 /* EditorContrib */ 
            }
        });
    }
}
class $8be5834fcc81827d$var$PrevWordHighlightAction extends $8be5834fcc81827d$var$WordHighlightNavigationAction {
    constructor(){
        super(false, {
            id: 'editor.action.wordHighlight.prev',
            label: $4dEdH.localize('wordHighlight.previous.label', "Go to Previous Symbol Highlight"),
            alias: 'Go to Previous Symbol Highlight',
            precondition: $8be5834fcc81827d$var$ctxHasWordHighlights,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.editorTextFocus,
                primary: 1089 /* F7 */ ,
                weight: 100 /* EditorContrib */ 
            }
        });
    }
}
class $8be5834fcc81827d$var$TriggerWordHighlightAction extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: 'editor.action.wordHighlight.trigger',
            label: $4dEdH.localize('wordHighlight.trigger.label', "Trigger Symbol Highlight"),
            alias: 'Trigger Symbol Highlight',
            precondition: $8be5834fcc81827d$var$ctxHasWordHighlights.toNegated(),
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.editorTextFocus,
                primary: 0,
                weight: 100 /* EditorContrib */ 
            }
        });
    }
    run(accessor, editor, args) {
        const controller = $8be5834fcc81827d$var$WordHighlighterContribution.get(editor);
        if (!controller) return;
        controller.restoreViewState(true);
    }
}
$2iJTi.registerEditorContribution($8be5834fcc81827d$var$WordHighlighterContribution.ID, $8be5834fcc81827d$var$WordHighlighterContribution);
$2iJTi.registerEditorAction($8be5834fcc81827d$var$NextWordHighlightAction);
$2iJTi.registerEditorAction($8be5834fcc81827d$var$PrevWordHighlightAction);
$2iJTi.registerEditorAction($8be5834fcc81827d$var$TriggerWordHighlightAction);
$azIPz.registerThemingParticipant((theme, collector)=>{
    const selectionHighlight = theme.getColor($gaWeX.editorSelectionHighlight);
    if (selectionHighlight) {
        collector.addRule(`.monaco-editor .focused .selectionHighlight { background-color: ${selectionHighlight}; }`);
        collector.addRule(`.monaco-editor .selectionHighlight { background-color: ${selectionHighlight.transparent(0.5)}; }`);
    }
    const wordHighlight = theme.getColor($8be5834fcc81827d$var$editorWordHighlight);
    if (wordHighlight) collector.addRule(`.monaco-editor .wordHighlight { background-color: ${wordHighlight}; }`);
    const wordHighlightStrong = theme.getColor($8be5834fcc81827d$var$editorWordHighlightStrong);
    if (wordHighlightStrong) collector.addRule(`.monaco-editor .wordHighlightStrong { background-color: ${wordHighlightStrong}; }`);
    const selectionHighlightBorder = theme.getColor($gaWeX.editorSelectionHighlightBorder);
    if (selectionHighlightBorder) collector.addRule(`.monaco-editor .selectionHighlight { border: 1px ${theme.type === 'hc' ? 'dotted' : 'solid'} ${selectionHighlightBorder}; box-sizing: border-box; }`);
    const wordHighlightBorder = theme.getColor($8be5834fcc81827d$var$editorWordHighlightBorder);
    if (wordHighlightBorder) collector.addRule(`.monaco-editor .wordHighlight { border: 1px ${theme.type === 'hc' ? 'dashed' : 'solid'} ${wordHighlightBorder}; box-sizing: border-box; }`);
    const wordHighlightStrongBorder = theme.getColor($8be5834fcc81827d$var$editorWordHighlightStrongBorder);
    if (wordHighlightStrongBorder) collector.addRule(`.monaco-editor .wordHighlightStrong { border: 1px ${theme.type === 'hc' ? 'dashed' : 'solid'} ${wordHighlightStrongBorder}; box-sizing: border-box; }`);
});



var $2iJTi = parcelRequire("2iJTi");

var $5TVJR = parcelRequire("5TVJR");

var $cd4KD = parcelRequire("cd4KD");

var $lsokY = parcelRequire("lsokY");

var $01rmn = parcelRequire("01rmn");

var $fOZ9o = parcelRequire("fOZ9o");

var $dcxQ7 = parcelRequire("dcxQ7");

var $d00il = parcelRequire("d00il");

var $jzicX = parcelRequire("jzicX");

var $ibKGQ = parcelRequire("ibKGQ");

var $aKdIg = parcelRequire("aKdIg");

var $4dEdH = parcelRequire("4dEdH");

var $gjaQN = parcelRequire("gjaQN");

var $cxCeF = parcelRequire("cxCeF");

var $h84gy = parcelRequire("h84gy");
class $9a647ff149b6ad2f$export$eaab41d675fb3c77 extends $2iJTi.EditorCommand {
    constructor(opts){
        super(opts);
        this._inSelectionMode = opts.inSelectionMode;
        this._wordNavigationType = opts.wordNavigationType;
    }
    runEditorCommand(accessor, editor, args) {
        if (!editor.hasModel()) return;
        const wordSeparators = $fOZ9o.getMapForWordSeparators(editor.getOption(116 /* wordSeparators */ ));
        const model = editor.getModel();
        const selections = editor.getSelections();
        const result = selections.map((sel)=>{
            const inPosition = new $dcxQ7.Position(sel.positionLineNumber, sel.positionColumn);
            const outPosition = this._move(wordSeparators, model, inPosition, this._wordNavigationType);
            return this._moveTo(sel, outPosition, this._inSelectionMode);
        });
        model.pushStackElement();
        editor._getViewModel().setCursorStates('moveWordCommand', 3 /* Explicit */ , result.map((r)=>$lsokY.CursorState.fromModelSelection(r)
        ));
        if (result.length === 1) {
            const pos = new $dcxQ7.Position(result[0].positionLineNumber, result[0].positionColumn);
            editor.revealPosition(pos, 0 /* Smooth */ );
        }
    }
    _moveTo(from, to, inSelectionMode) {
        if (inSelectionMode) // move just position
        return new $jzicX.Selection(from.selectionStartLineNumber, from.selectionStartColumn, to.lineNumber, to.column);
        else // move everything
        return new $jzicX.Selection(to.lineNumber, to.column, to.lineNumber, to.column);
    }
}
class $9a647ff149b6ad2f$export$13a65d419a1678a2 extends $9a647ff149b6ad2f$export$eaab41d675fb3c77 {
    _move(wordSeparators, model, position, wordNavigationType) {
        return $01rmn.WordOperations.moveWordLeft(wordSeparators, model, position, wordNavigationType);
    }
}
class $9a647ff149b6ad2f$export$3bd1a89f17c94fe7 extends $9a647ff149b6ad2f$export$eaab41d675fb3c77 {
    _move(wordSeparators, model, position, wordNavigationType) {
        return $01rmn.WordOperations.moveWordRight(wordSeparators, model, position, wordNavigationType);
    }
}
class $9a647ff149b6ad2f$export$4770de8d045e69d9 extends $9a647ff149b6ad2f$export$13a65d419a1678a2 {
    constructor(){
        super({
            inSelectionMode: false,
            wordNavigationType: 0 /* WordStart */ ,
            id: 'cursorWordStartLeft',
            precondition: undefined
        });
    }
}
class $9a647ff149b6ad2f$export$157c37c85911da0 extends $9a647ff149b6ad2f$export$13a65d419a1678a2 {
    constructor(){
        super({
            inSelectionMode: false,
            wordNavigationType: 2 /* WordEnd */ ,
            id: 'cursorWordEndLeft',
            precondition: undefined
        });
    }
}
class $9a647ff149b6ad2f$export$f491d0cd70e6ac9f extends $9a647ff149b6ad2f$export$13a65d419a1678a2 {
    constructor(){
        var _a;
        super({
            inSelectionMode: false,
            wordNavigationType: 1 /* WordStartFast */ ,
            id: 'cursorWordLeft',
            precondition: undefined,
            kbOpts: {
                kbExpr: $cxCeF.ContextKeyExpr.and($ibKGQ.EditorContextKeys.textInputFocus, (_a = $cxCeF.ContextKeyExpr.and($gjaQN.CONTEXT_ACCESSIBILITY_MODE_ENABLED, $h84gy.IsWindowsContext)) === null || _a === void 0 ? void 0 : _a.negate()),
                primary: 2063 /* LeftArrow */ ,
                mac: {
                    primary: 527 /* LeftArrow */ 
                },
                weight: 100 /* EditorContrib */ 
            }
        });
    }
}
class $9a647ff149b6ad2f$export$befceb5f65aabb65 extends $9a647ff149b6ad2f$export$13a65d419a1678a2 {
    constructor(){
        super({
            inSelectionMode: true,
            wordNavigationType: 0 /* WordStart */ ,
            id: 'cursorWordStartLeftSelect',
            precondition: undefined
        });
    }
}
class $9a647ff149b6ad2f$export$9d9a22ccd52050d6 extends $9a647ff149b6ad2f$export$13a65d419a1678a2 {
    constructor(){
        super({
            inSelectionMode: true,
            wordNavigationType: 2 /* WordEnd */ ,
            id: 'cursorWordEndLeftSelect',
            precondition: undefined
        });
    }
}
class $9a647ff149b6ad2f$export$72b077928c493d15 extends $9a647ff149b6ad2f$export$13a65d419a1678a2 {
    constructor(){
        var _a;
        super({
            inSelectionMode: true,
            wordNavigationType: 1 /* WordStartFast */ ,
            id: 'cursorWordLeftSelect',
            precondition: undefined,
            kbOpts: {
                kbExpr: $cxCeF.ContextKeyExpr.and($ibKGQ.EditorContextKeys.textInputFocus, (_a = $cxCeF.ContextKeyExpr.and($gjaQN.CONTEXT_ACCESSIBILITY_MODE_ENABLED, $h84gy.IsWindowsContext)) === null || _a === void 0 ? void 0 : _a.negate()),
                primary: 3087 /* LeftArrow */ ,
                mac: {
                    primary: 1551 /* LeftArrow */ 
                },
                weight: 100 /* EditorContrib */ 
            }
        });
    }
}
class $9a647ff149b6ad2f$export$95e12cee8c99ec86 extends $9a647ff149b6ad2f$export$13a65d419a1678a2 {
    constructor(){
        super({
            inSelectionMode: false,
            wordNavigationType: 3 /* WordAccessibility */ ,
            id: 'cursorWordAccessibilityLeft',
            precondition: undefined
        });
    }
    _move(_, model, position, wordNavigationType) {
        return super._move($fOZ9o.getMapForWordSeparators($cd4KD.EditorOptions.wordSeparators.defaultValue), model, position, wordNavigationType);
    }
}
class $9a647ff149b6ad2f$export$97245746696e71d0 extends $9a647ff149b6ad2f$export$13a65d419a1678a2 {
    constructor(){
        super({
            inSelectionMode: true,
            wordNavigationType: 3 /* WordAccessibility */ ,
            id: 'cursorWordAccessibilityLeftSelect',
            precondition: undefined
        });
    }
    _move(_, model, position, wordNavigationType) {
        return super._move($fOZ9o.getMapForWordSeparators($cd4KD.EditorOptions.wordSeparators.defaultValue), model, position, wordNavigationType);
    }
}
class $9a647ff149b6ad2f$export$ceee282c44fc7605 extends $9a647ff149b6ad2f$export$3bd1a89f17c94fe7 {
    constructor(){
        super({
            inSelectionMode: false,
            wordNavigationType: 0 /* WordStart */ ,
            id: 'cursorWordStartRight',
            precondition: undefined
        });
    }
}
class $9a647ff149b6ad2f$export$850eef07da39cf7a extends $9a647ff149b6ad2f$export$3bd1a89f17c94fe7 {
    constructor(){
        var _a;
        super({
            inSelectionMode: false,
            wordNavigationType: 2 /* WordEnd */ ,
            id: 'cursorWordEndRight',
            precondition: undefined,
            kbOpts: {
                kbExpr: $cxCeF.ContextKeyExpr.and($ibKGQ.EditorContextKeys.textInputFocus, (_a = $cxCeF.ContextKeyExpr.and($gjaQN.CONTEXT_ACCESSIBILITY_MODE_ENABLED, $h84gy.IsWindowsContext)) === null || _a === void 0 ? void 0 : _a.negate()),
                primary: 2065 /* RightArrow */ ,
                mac: {
                    primary: 529 /* RightArrow */ 
                },
                weight: 100 /* EditorContrib */ 
            }
        });
    }
}
class $9a647ff149b6ad2f$export$c902fd9f7a9b8d4f extends $9a647ff149b6ad2f$export$3bd1a89f17c94fe7 {
    constructor(){
        super({
            inSelectionMode: false,
            wordNavigationType: 2 /* WordEnd */ ,
            id: 'cursorWordRight',
            precondition: undefined
        });
    }
}
class $9a647ff149b6ad2f$export$39a9bf509c325dc extends $9a647ff149b6ad2f$export$3bd1a89f17c94fe7 {
    constructor(){
        super({
            inSelectionMode: true,
            wordNavigationType: 0 /* WordStart */ ,
            id: 'cursorWordStartRightSelect',
            precondition: undefined
        });
    }
}
class $9a647ff149b6ad2f$export$ea19ea92bc7e7da2 extends $9a647ff149b6ad2f$export$3bd1a89f17c94fe7 {
    constructor(){
        var _a;
        super({
            inSelectionMode: true,
            wordNavigationType: 2 /* WordEnd */ ,
            id: 'cursorWordEndRightSelect',
            precondition: undefined,
            kbOpts: {
                kbExpr: $cxCeF.ContextKeyExpr.and($ibKGQ.EditorContextKeys.textInputFocus, (_a = $cxCeF.ContextKeyExpr.and($gjaQN.CONTEXT_ACCESSIBILITY_MODE_ENABLED, $h84gy.IsWindowsContext)) === null || _a === void 0 ? void 0 : _a.negate()),
                primary: 3089 /* RightArrow */ ,
                mac: {
                    primary: 1553 /* RightArrow */ 
                },
                weight: 100 /* EditorContrib */ 
            }
        });
    }
}
class $9a647ff149b6ad2f$export$dfb479c77c3a735f extends $9a647ff149b6ad2f$export$3bd1a89f17c94fe7 {
    constructor(){
        super({
            inSelectionMode: true,
            wordNavigationType: 2 /* WordEnd */ ,
            id: 'cursorWordRightSelect',
            precondition: undefined
        });
    }
}
class $9a647ff149b6ad2f$export$81a225a710499206 extends $9a647ff149b6ad2f$export$3bd1a89f17c94fe7 {
    constructor(){
        super({
            inSelectionMode: false,
            wordNavigationType: 3 /* WordAccessibility */ ,
            id: 'cursorWordAccessibilityRight',
            precondition: undefined
        });
    }
    _move(_, model, position, wordNavigationType) {
        return super._move($fOZ9o.getMapForWordSeparators($cd4KD.EditorOptions.wordSeparators.defaultValue), model, position, wordNavigationType);
    }
}
class $9a647ff149b6ad2f$export$fe11f7bd19429986 extends $9a647ff149b6ad2f$export$3bd1a89f17c94fe7 {
    constructor(){
        super({
            inSelectionMode: true,
            wordNavigationType: 3 /* WordAccessibility */ ,
            id: 'cursorWordAccessibilityRightSelect',
            precondition: undefined
        });
    }
    _move(_, model, position, wordNavigationType) {
        return super._move($fOZ9o.getMapForWordSeparators($cd4KD.EditorOptions.wordSeparators.defaultValue), model, position, wordNavigationType);
    }
}
class $9a647ff149b6ad2f$export$19690b27ce3c0bb3 extends $2iJTi.EditorCommand {
    constructor(opts){
        super(opts);
        this._whitespaceHeuristics = opts.whitespaceHeuristics;
        this._wordNavigationType = opts.wordNavigationType;
    }
    runEditorCommand(accessor, editor, args) {
        if (!editor.hasModel()) return;
        const wordSeparators = $fOZ9o.getMapForWordSeparators(editor.getOption(116 /* wordSeparators */ ));
        const model = editor.getModel();
        const selections = editor.getSelections();
        const autoClosingBrackets = editor.getOption(5 /* autoClosingBrackets */ );
        const autoClosingQuotes = editor.getOption(8 /* autoClosingQuotes */ );
        const autoClosingPairs = $aKdIg.LanguageConfigurationRegistry.getAutoClosingPairs(model.getLanguageId());
        const viewModel = editor._getViewModel();
        const commands = selections.map((sel)=>{
            const deleteRange = this._delete({
                wordSeparators: wordSeparators,
                model: model,
                selection: sel,
                whitespaceHeuristics: this._whitespaceHeuristics,
                autoClosingDelete: editor.getOption(6 /* autoClosingDelete */ ),
                autoClosingBrackets: autoClosingBrackets,
                autoClosingQuotes: autoClosingQuotes,
                autoClosingPairs: autoClosingPairs,
                autoClosedCharacters: viewModel.getCursorAutoClosedCharacters()
            }, this._wordNavigationType);
            return new $5TVJR.ReplaceCommand(deleteRange, '');
        });
        editor.pushUndoStop();
        editor.executeCommands(this.id, commands);
        editor.pushUndoStop();
    }
}
class $9a647ff149b6ad2f$export$5ce54e0babbd8085 extends $9a647ff149b6ad2f$export$19690b27ce3c0bb3 {
    _delete(ctx, wordNavigationType) {
        let r = $01rmn.WordOperations.deleteWordLeft(ctx, wordNavigationType);
        if (r) return r;
        return new $d00il.Range(1, 1, 1, 1);
    }
}
class $9a647ff149b6ad2f$export$8ec654e5cf025a25 extends $9a647ff149b6ad2f$export$19690b27ce3c0bb3 {
    _delete(ctx, wordNavigationType) {
        let r = $01rmn.WordOperations.deleteWordRight(ctx, wordNavigationType);
        if (r) return r;
        const lineCount = ctx.model.getLineCount();
        const maxColumn = ctx.model.getLineMaxColumn(lineCount);
        return new $d00il.Range(lineCount, maxColumn, lineCount, maxColumn);
    }
}
class $9a647ff149b6ad2f$export$ad82f35e651a1686 extends $9a647ff149b6ad2f$export$5ce54e0babbd8085 {
    constructor(){
        super({
            whitespaceHeuristics: false,
            wordNavigationType: 0 /* WordStart */ ,
            id: 'deleteWordStartLeft',
            precondition: $ibKGQ.EditorContextKeys.writable
        });
    }
}
class $9a647ff149b6ad2f$export$3cb06644b5a9b33e extends $9a647ff149b6ad2f$export$5ce54e0babbd8085 {
    constructor(){
        super({
            whitespaceHeuristics: false,
            wordNavigationType: 2 /* WordEnd */ ,
            id: 'deleteWordEndLeft',
            precondition: $ibKGQ.EditorContextKeys.writable
        });
    }
}
class $9a647ff149b6ad2f$export$f36e7db579f60a1 extends $9a647ff149b6ad2f$export$5ce54e0babbd8085 {
    constructor(){
        super({
            whitespaceHeuristics: true,
            wordNavigationType: 0 /* WordStart */ ,
            id: 'deleteWordLeft',
            precondition: $ibKGQ.EditorContextKeys.writable,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.textInputFocus,
                primary: 2049 /* Backspace */ ,
                mac: {
                    primary: 513 /* Backspace */ 
                },
                weight: 100 /* EditorContrib */ 
            }
        });
    }
}
class $9a647ff149b6ad2f$export$3e0062da3d0b9053 extends $9a647ff149b6ad2f$export$8ec654e5cf025a25 {
    constructor(){
        super({
            whitespaceHeuristics: false,
            wordNavigationType: 0 /* WordStart */ ,
            id: 'deleteWordStartRight',
            precondition: $ibKGQ.EditorContextKeys.writable
        });
    }
}
class $9a647ff149b6ad2f$export$5bc7327221e6c16c extends $9a647ff149b6ad2f$export$8ec654e5cf025a25 {
    constructor(){
        super({
            whitespaceHeuristics: false,
            wordNavigationType: 2 /* WordEnd */ ,
            id: 'deleteWordEndRight',
            precondition: $ibKGQ.EditorContextKeys.writable
        });
    }
}
class $9a647ff149b6ad2f$export$7e197173a43fafee extends $9a647ff149b6ad2f$export$8ec654e5cf025a25 {
    constructor(){
        super({
            whitespaceHeuristics: true,
            wordNavigationType: 2 /* WordEnd */ ,
            id: 'deleteWordRight',
            precondition: $ibKGQ.EditorContextKeys.writable,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.textInputFocus,
                primary: 2068 /* Delete */ ,
                mac: {
                    primary: 532 /* Delete */ 
                },
                weight: 100 /* EditorContrib */ 
            }
        });
    }
}
class $9a647ff149b6ad2f$export$8f8db2361df25afb extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: 'deleteInsideWord',
            precondition: $ibKGQ.EditorContextKeys.writable,
            label: $4dEdH.localize('deleteInsideWord', "Delete Word"),
            alias: 'Delete Word'
        });
    }
    run(accessor, editor, args) {
        if (!editor.hasModel()) return;
        const wordSeparators = $fOZ9o.getMapForWordSeparators(editor.getOption(116 /* wordSeparators */ ));
        const model = editor.getModel();
        const selections = editor.getSelections();
        const commands = selections.map((sel)=>{
            const deleteRange = $01rmn.WordOperations.deleteInsideWord(wordSeparators, model, sel);
            return new $5TVJR.ReplaceCommand(deleteRange, '');
        });
        editor.pushUndoStop();
        editor.executeCommands(this.id, commands);
        editor.pushUndoStop();
    }
}
$2iJTi.registerEditorCommand(new $9a647ff149b6ad2f$export$4770de8d045e69d9());
$2iJTi.registerEditorCommand(new $9a647ff149b6ad2f$export$157c37c85911da0());
$2iJTi.registerEditorCommand(new $9a647ff149b6ad2f$export$f491d0cd70e6ac9f());
$2iJTi.registerEditorCommand(new $9a647ff149b6ad2f$export$befceb5f65aabb65());
$2iJTi.registerEditorCommand(new $9a647ff149b6ad2f$export$9d9a22ccd52050d6());
$2iJTi.registerEditorCommand(new $9a647ff149b6ad2f$export$72b077928c493d15());
$2iJTi.registerEditorCommand(new $9a647ff149b6ad2f$export$ceee282c44fc7605());
$2iJTi.registerEditorCommand(new $9a647ff149b6ad2f$export$850eef07da39cf7a());
$2iJTi.registerEditorCommand(new $9a647ff149b6ad2f$export$c902fd9f7a9b8d4f());
$2iJTi.registerEditorCommand(new $9a647ff149b6ad2f$export$39a9bf509c325dc());
$2iJTi.registerEditorCommand(new $9a647ff149b6ad2f$export$ea19ea92bc7e7da2());
$2iJTi.registerEditorCommand(new $9a647ff149b6ad2f$export$dfb479c77c3a735f());
$2iJTi.registerEditorCommand(new $9a647ff149b6ad2f$export$95e12cee8c99ec86());
$2iJTi.registerEditorCommand(new $9a647ff149b6ad2f$export$97245746696e71d0());
$2iJTi.registerEditorCommand(new $9a647ff149b6ad2f$export$81a225a710499206());
$2iJTi.registerEditorCommand(new $9a647ff149b6ad2f$export$fe11f7bd19429986());
$2iJTi.registerEditorCommand(new $9a647ff149b6ad2f$export$ad82f35e651a1686());
$2iJTi.registerEditorCommand(new $9a647ff149b6ad2f$export$3cb06644b5a9b33e());
$2iJTi.registerEditorCommand(new $9a647ff149b6ad2f$export$f36e7db579f60a1());
$2iJTi.registerEditorCommand(new $9a647ff149b6ad2f$export$3e0062da3d0b9053());
$2iJTi.registerEditorCommand(new $9a647ff149b6ad2f$export$5bc7327221e6c16c());
$2iJTi.registerEditorCommand(new $9a647ff149b6ad2f$export$7e197173a43fafee());
$2iJTi.registerEditorAction($9a647ff149b6ad2f$export$8f8db2361df25afb);



var $2iJTi = parcelRequire("2iJTi");

var $01rmn = parcelRequire("01rmn");

var $d00il = parcelRequire("d00il");

var $ibKGQ = parcelRequire("ibKGQ");


var $8tcMz = parcelRequire("8tcMz");
class $48cd25b90596c75f$export$c4bbad0c92429e2a extends $9a647ff149b6ad2f$export$19690b27ce3c0bb3 {
    constructor(){
        super({
            whitespaceHeuristics: true,
            wordNavigationType: 0 /* WordStart */ ,
            id: 'deleteWordPartLeft',
            precondition: $ibKGQ.EditorContextKeys.writable,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.textInputFocus,
                primary: 0,
                mac: {
                    primary: 769 /* Backspace */ 
                },
                weight: 100 /* EditorContrib */ 
            }
        });
    }
    _delete(ctx, wordNavigationType) {
        let r = $01rmn.WordPartOperations.deleteWordPartLeft(ctx);
        if (r) return r;
        return new $d00il.Range(1, 1, 1, 1);
    }
}
class $48cd25b90596c75f$export$badada4aa779607 extends $9a647ff149b6ad2f$export$19690b27ce3c0bb3 {
    constructor(){
        super({
            whitespaceHeuristics: true,
            wordNavigationType: 2 /* WordEnd */ ,
            id: 'deleteWordPartRight',
            precondition: $ibKGQ.EditorContextKeys.writable,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.textInputFocus,
                primary: 0,
                mac: {
                    primary: 788 /* Delete */ 
                },
                weight: 100 /* EditorContrib */ 
            }
        });
    }
    _delete(ctx, wordNavigationType) {
        let r = $01rmn.WordPartOperations.deleteWordPartRight(ctx);
        if (r) return r;
        const lineCount = ctx.model.getLineCount();
        const maxColumn = ctx.model.getLineMaxColumn(lineCount);
        return new $d00il.Range(lineCount, maxColumn, lineCount, maxColumn);
    }
}
class $48cd25b90596c75f$export$ae81a0942e424d66 extends $9a647ff149b6ad2f$export$eaab41d675fb3c77 {
    _move(wordSeparators, model, position, wordNavigationType) {
        return $01rmn.WordPartOperations.moveWordPartLeft(wordSeparators, model, position);
    }
}
class $48cd25b90596c75f$export$d25a50b18eb112d5 extends $48cd25b90596c75f$export$ae81a0942e424d66 {
    constructor(){
        super({
            inSelectionMode: false,
            wordNavigationType: 0 /* WordStart */ ,
            id: 'cursorWordPartLeft',
            precondition: undefined,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.textInputFocus,
                primary: 0,
                mac: {
                    primary: 783 /* LeftArrow */ 
                },
                weight: 100 /* EditorContrib */ 
            }
        });
    }
}
// Register previous id for compatibility purposes
$8tcMz.CommandsRegistry.registerCommandAlias('cursorWordPartStartLeft', 'cursorWordPartLeft');
class $48cd25b90596c75f$export$351378b9c4d5255a extends $48cd25b90596c75f$export$ae81a0942e424d66 {
    constructor(){
        super({
            inSelectionMode: true,
            wordNavigationType: 0 /* WordStart */ ,
            id: 'cursorWordPartLeftSelect',
            precondition: undefined,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.textInputFocus,
                primary: 0,
                mac: {
                    primary: 1807 /* LeftArrow */ 
                },
                weight: 100 /* EditorContrib */ 
            }
        });
    }
}
// Register previous id for compatibility purposes
$8tcMz.CommandsRegistry.registerCommandAlias('cursorWordPartStartLeftSelect', 'cursorWordPartLeftSelect');
class $48cd25b90596c75f$export$8927a2c83363ac2a extends $9a647ff149b6ad2f$export$eaab41d675fb3c77 {
    _move(wordSeparators, model, position, wordNavigationType) {
        return $01rmn.WordPartOperations.moveWordPartRight(wordSeparators, model, position);
    }
}
class $48cd25b90596c75f$export$b4cc05290eaa5d1a extends $48cd25b90596c75f$export$8927a2c83363ac2a {
    constructor(){
        super({
            inSelectionMode: false,
            wordNavigationType: 2 /* WordEnd */ ,
            id: 'cursorWordPartRight',
            precondition: undefined,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.textInputFocus,
                primary: 0,
                mac: {
                    primary: 785 /* RightArrow */ 
                },
                weight: 100 /* EditorContrib */ 
            }
        });
    }
}
class $48cd25b90596c75f$export$a0ec6a8e7a9cded6 extends $48cd25b90596c75f$export$8927a2c83363ac2a {
    constructor(){
        super({
            inSelectionMode: true,
            wordNavigationType: 2 /* WordEnd */ ,
            id: 'cursorWordPartRightSelect',
            precondition: undefined,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.textInputFocus,
                primary: 0,
                mac: {
                    primary: 1809 /* RightArrow */ 
                },
                weight: 100 /* EditorContrib */ 
            }
        });
    }
}
$2iJTi.registerEditorCommand(new $48cd25b90596c75f$export$c4bbad0c92429e2a());
$2iJTi.registerEditorCommand(new $48cd25b90596c75f$export$badada4aa779607());
$2iJTi.registerEditorCommand(new $48cd25b90596c75f$export$d25a50b18eb112d5());
$2iJTi.registerEditorCommand(new $48cd25b90596c75f$export$351378b9c4d5255a());
$2iJTi.registerEditorCommand(new $48cd25b90596c75f$export$b4cc05290eaa5d1a());
$2iJTi.registerEditorCommand(new $48cd25b90596c75f$export$a0ec6a8e7a9cded6());


parcelRequire("82TRE");
parcelRequire("oj9qX");


var $642bd90ec7048653$exports = {};


var $bDzmQ = parcelRequire("bDzmQ");

var $7WVGe = parcelRequire("7WVGe");

var $e65bg = parcelRequire("e65bg");

var $aIbUW = parcelRequire("aIbUW");

var $fxJYg = parcelRequire("fxJYg");

var $9cWcn = parcelRequire("9cWcn");

var $lb0Ah = parcelRequire("lb0Ah");

var $jcr1R = parcelRequire("jcr1R");

var $5OJ54 = parcelRequire("5OJ54");

var $2iJTi = parcelRequire("2iJTi");

var $ibKGQ = parcelRequire("ibKGQ");


var $cxCeF = parcelRequire("cxCeF");

var $fdGPu = parcelRequire("fdGPu");

var $7IxGd = parcelRequire("7IxGd");

var $iAi3o = parcelRequire("iAi3o");

var $gaWeX = parcelRequire("gaWeX");

var $azIPz = parcelRequire("azIPz");

var $82TRE = parcelRequire("82TRE");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $642bd90ec7048653$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var $642bd90ec7048653$var$__param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
};
const $642bd90ec7048653$var$CONTEXT_ACCESSIBILITY_WIDGET_VISIBLE = new $cxCeF.RawContextKey('accessibilityHelpWidgetVisible', false);
let $642bd90ec7048653$var$AccessibilityHelpController = class AccessibilityHelpController extends $9cWcn.Disposable {
    constructor(editor, instantiationService){
        super();
        this._editor = editor;
        this._widget = this._register(instantiationService.createInstance($642bd90ec7048653$var$AccessibilityHelpWidget, this._editor));
    }
    static get(editor) {
        return editor.getContribution(AccessibilityHelpController.ID);
    }
    show() {
        this._widget.show();
    }
    hide() {
        this._widget.hide();
    }
};
$642bd90ec7048653$var$AccessibilityHelpController.ID = 'editor.contrib.accessibilityHelpController';
$642bd90ec7048653$var$AccessibilityHelpController = $642bd90ec7048653$var$__decorate([
    $642bd90ec7048653$var$__param(1, $fdGPu.IInstantiationService)
], $642bd90ec7048653$var$AccessibilityHelpController);
function $642bd90ec7048653$var$getSelectionLabel(selections, charactersSelected) {
    if (!selections || selections.length === 0) return $82TRE.AccessibilityHelpNLS.noSelection;
    if (selections.length === 1) {
        if (charactersSelected) return $jcr1R.format($82TRE.AccessibilityHelpNLS.singleSelectionRange, selections[0].positionLineNumber, selections[0].positionColumn, charactersSelected);
        return $jcr1R.format($82TRE.AccessibilityHelpNLS.singleSelection, selections[0].positionLineNumber, selections[0].positionColumn);
    }
    if (charactersSelected) return $jcr1R.format($82TRE.AccessibilityHelpNLS.multiSelectionRange, selections.length, charactersSelected);
    if (selections.length > 0) return $jcr1R.format($82TRE.AccessibilityHelpNLS.multiSelection, selections.length);
    return '';
}
let $642bd90ec7048653$var$AccessibilityHelpWidget = class AccessibilityHelpWidget extends $fxJYg.Widget {
    constructor(editor, _contextKeyService, _keybindingService, _openerService){
        super();
        this._contextKeyService = _contextKeyService;
        this._keybindingService = _keybindingService;
        this._openerService = _openerService;
        this._editor = editor;
        this._isVisibleKey = $642bd90ec7048653$var$CONTEXT_ACCESSIBILITY_WIDGET_VISIBLE.bindTo(this._contextKeyService);
        this._domNode = $7WVGe.createFastDomNode(document.createElement('div'));
        this._domNode.setClassName('accessibilityHelpWidget');
        this._domNode.setDisplay('none');
        this._domNode.setAttribute('role', 'dialog');
        this._domNode.setAttribute('aria-hidden', 'true');
        this._contentDomNode = $7WVGe.createFastDomNode(document.createElement('div'));
        this._contentDomNode.setAttribute('role', 'document');
        this._domNode.appendChild(this._contentDomNode);
        this._isVisible = false;
        this._register(this._editor.onDidLayoutChange(()=>{
            if (this._isVisible) this._layout();
        }));
        // Intentionally not configurable!
        this._register($bDzmQ.addStandardDisposableListener(this._contentDomNode.domNode, 'keydown', (e)=>{
            if (!this._isVisible) return;
            if (e.equals(2083 /* KeyE */ )) {
                $aIbUW.alert($82TRE.AccessibilityHelpNLS.emergencyConfOn);
                this._editor.updateOptions({
                    accessibilitySupport: 'on'
                });
                $bDzmQ.clearNode(this._contentDomNode.domNode);
                this._buildContent();
                this._contentDomNode.domNode.focus();
                e.preventDefault();
                e.stopPropagation();
            }
            if (e.equals(2086 /* KeyH */ )) {
                $aIbUW.alert($82TRE.AccessibilityHelpNLS.openingDocs);
                let url = this._editor.getRawOptions().accessibilityHelpUrl;
                if (typeof url === 'undefined') url = 'https://go.microsoft.com/fwlink/?linkid=852450';
                this._openerService.open($5OJ54.URI.parse(url));
                e.preventDefault();
                e.stopPropagation();
            }
        }));
        this.onblur(this._contentDomNode.domNode, ()=>{
            this.hide();
        });
        this._editor.addOverlayWidget(this);
    }
    dispose() {
        this._editor.removeOverlayWidget(this);
        super.dispose();
    }
    getId() {
        return AccessibilityHelpWidget.ID;
    }
    getDomNode() {
        return this._domNode.domNode;
    }
    getPosition() {
        return {
            preference: null
        };
    }
    show() {
        if (this._isVisible) return;
        this._isVisible = true;
        this._isVisibleKey.set(true);
        this._layout();
        this._domNode.setDisplay('block');
        this._domNode.setAttribute('aria-hidden', 'false');
        this._contentDomNode.domNode.tabIndex = 0;
        this._buildContent();
        this._contentDomNode.domNode.focus();
    }
    _descriptionForCommand(commandId, msg, noKbMsg) {
        let kb = this._keybindingService.lookupKeybinding(commandId);
        if (kb) return $jcr1R.format(msg, kb.getAriaLabel());
        return $jcr1R.format(noKbMsg, commandId);
    }
    _buildContent() {
        const options = this._editor.getOptions();
        const selections = this._editor.getSelections();
        let charactersSelected = 0;
        if (selections) {
            const model = this._editor.getModel();
            if (model) selections.forEach((selection)=>{
                charactersSelected += model.getValueLengthInRange(selection);
            });
        }
        let text = $642bd90ec7048653$var$getSelectionLabel(selections, charactersSelected);
        if (options.get(53 /* inDiffEditor */ )) {
            if (options.get(80 /* readOnly */ )) text += $82TRE.AccessibilityHelpNLS.readonlyDiffEditor;
            else text += $82TRE.AccessibilityHelpNLS.editableDiffEditor;
        } else if (options.get(80 /* readOnly */ )) text += $82TRE.AccessibilityHelpNLS.readonlyEditor;
        else text += $82TRE.AccessibilityHelpNLS.editableEditor;
        const turnOnMessage = $lb0Ah.isMacintosh ? $82TRE.AccessibilityHelpNLS.changeConfigToOnMac : $82TRE.AccessibilityHelpNLS.changeConfigToOnWinLinux;
        switch(options.get(2 /* accessibilitySupport */ )){
            case 0 /* Unknown */ :
                text += '\n\n - ' + turnOnMessage;
                break;
            case 2 /* Enabled */ :
                text += '\n\n - ' + $82TRE.AccessibilityHelpNLS.auto_on;
                break;
            case 1 /* Disabled */ :
                text += '\n\n - ' + $82TRE.AccessibilityHelpNLS.auto_off;
                text += ' ' + turnOnMessage;
                break;
        }
        if (options.get(129 /* tabFocusMode */ )) text += '\n\n - ' + this._descriptionForCommand($33e91ba4f62df884$export$676ded3884da9932.ID, $82TRE.AccessibilityHelpNLS.tabFocusModeOnMsg, $82TRE.AccessibilityHelpNLS.tabFocusModeOnMsgNoKb);
        else text += '\n\n - ' + this._descriptionForCommand($33e91ba4f62df884$export$676ded3884da9932.ID, $82TRE.AccessibilityHelpNLS.tabFocusModeOffMsg, $82TRE.AccessibilityHelpNLS.tabFocusModeOffMsgNoKb);
        const openDocMessage = $lb0Ah.isMacintosh ? $82TRE.AccessibilityHelpNLS.openDocMac : $82TRE.AccessibilityHelpNLS.openDocWinLinux;
        text += '\n\n - ' + openDocMessage;
        text += '\n\n' + $82TRE.AccessibilityHelpNLS.outroMsg;
        this._contentDomNode.domNode.appendChild($e65bg.renderFormattedText(text));
        // Per https://www.w3.org/TR/wai-aria/roles#document, Authors SHOULD provide a title or label for documents
        this._contentDomNode.domNode.setAttribute('aria-label', text);
    }
    hide() {
        if (!this._isVisible) return;
        this._isVisible = false;
        this._isVisibleKey.reset();
        this._domNode.setDisplay('none');
        this._domNode.setAttribute('aria-hidden', 'true');
        this._contentDomNode.domNode.tabIndex = -1;
        $bDzmQ.clearNode(this._contentDomNode.domNode);
        this._editor.focus();
    }
    _layout() {
        let editorLayout = this._editor.getLayoutInfo();
        let w = Math.max(5, Math.min(AccessibilityHelpWidget.WIDTH, editorLayout.width - 40));
        let h = Math.max(5, Math.min(AccessibilityHelpWidget.HEIGHT, editorLayout.height - 40));
        this._domNode.setWidth(w);
        this._domNode.setHeight(h);
        let top = Math.round((editorLayout.height - h) / 2);
        this._domNode.setTop(top);
        let left = Math.round((editorLayout.width - w) / 2);
        this._domNode.setLeft(left);
    }
};
$642bd90ec7048653$var$AccessibilityHelpWidget.ID = 'editor.contrib.accessibilityHelpWidget';
$642bd90ec7048653$var$AccessibilityHelpWidget.WIDTH = 500;
$642bd90ec7048653$var$AccessibilityHelpWidget.HEIGHT = 300;
$642bd90ec7048653$var$AccessibilityHelpWidget = $642bd90ec7048653$var$__decorate([
    $642bd90ec7048653$var$__param(1, $cxCeF.IContextKeyService),
    $642bd90ec7048653$var$__param(2, $7IxGd.IKeybindingService),
    $642bd90ec7048653$var$__param(3, $iAi3o.IOpenerService)
], $642bd90ec7048653$var$AccessibilityHelpWidget);
class $642bd90ec7048653$var$ShowAccessibilityHelpAction extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: 'editor.action.showAccessibilityHelp',
            label: $82TRE.AccessibilityHelpNLS.showAccessibilityHelpAction,
            alias: 'Show Accessibility Help',
            precondition: undefined,
            kbOpts: {
                primary: 571 /* F1 */ ,
                weight: 100 /* EditorContrib */ ,
                linux: {
                    primary: 1595 /* F1 */ ,
                    secondary: [
                        571 /* F1 */ 
                    ]
                }
            }
        });
    }
    run(accessor, editor) {
        let controller = $642bd90ec7048653$var$AccessibilityHelpController.get(editor);
        if (controller) controller.show();
    }
}
$2iJTi.registerEditorContribution($642bd90ec7048653$var$AccessibilityHelpController.ID, $642bd90ec7048653$var$AccessibilityHelpController);
$2iJTi.registerEditorAction($642bd90ec7048653$var$ShowAccessibilityHelpAction);
const $642bd90ec7048653$var$AccessibilityHelpCommand = $2iJTi.EditorCommand.bindToContribution($642bd90ec7048653$var$AccessibilityHelpController.get);
$2iJTi.registerEditorCommand(new $642bd90ec7048653$var$AccessibilityHelpCommand({
    id: 'closeAccessibilityHelp',
    precondition: $642bd90ec7048653$var$CONTEXT_ACCESSIBILITY_WIDGET_VISIBLE,
    handler: (x)=>x.hide()
    ,
    kbOpts: {
        weight: 200,
        kbExpr: $ibKGQ.EditorContextKeys.focus,
        primary: 9 /* Escape */ ,
        secondary: [
            1033 /* Escape */ 
        ]
    }
}));
$azIPz.registerThemingParticipant((theme, collector)=>{
    const widgetBackground = theme.getColor($gaWeX.editorWidgetBackground);
    if (widgetBackground) collector.addRule(`.monaco-editor .accessibilityHelpWidget { background-color: ${widgetBackground}; }`);
    const widgetForeground = theme.getColor($gaWeX.editorWidgetForeground);
    if (widgetForeground) collector.addRule(`.monaco-editor .accessibilityHelpWidget { color: ${widgetForeground}; }`);
    const widgetShadowColor = theme.getColor($gaWeX.widgetShadow);
    if (widgetShadowColor) collector.addRule(`.monaco-editor .accessibilityHelpWidget { box-shadow: 0 2px 8px ${widgetShadowColor}; }`);
    const hcBorder = theme.getColor($gaWeX.contrastBorder);
    if (hcBorder) collector.addRule(`.monaco-editor .accessibilityHelpWidget { border: 2px solid ${hcBorder}; }`);
});




var $bDzmQ = parcelRequire("bDzmQ");

var $9cWcn = parcelRequire("9cWcn");

var $2iJTi = parcelRequire("2iJTi");

var $lb0Ah = parcelRequire("lb0Ah");
class $43b3f6a5cad939e6$export$445a80feda1f9fce extends $9cWcn.Disposable {
    constructor(editor){
        super();
        this.editor = editor;
        this.widget = null;
        if ($lb0Ah.isIOS) {
            this._register(editor.onDidChangeConfiguration(()=>this.update()
            ));
            this.update();
        }
    }
    update() {
        const shouldHaveWidget = !this.editor.getOption(80 /* readOnly */ );
        if (!this.widget && shouldHaveWidget) this.widget = new $43b3f6a5cad939e6$var$ShowKeyboardWidget(this.editor);
        else if (this.widget && !shouldHaveWidget) {
            this.widget.dispose();
            this.widget = null;
        }
    }
    dispose() {
        super.dispose();
        if (this.widget) {
            this.widget.dispose();
            this.widget = null;
        }
    }
}
$43b3f6a5cad939e6$export$445a80feda1f9fce.ID = 'editor.contrib.iPadShowKeyboard';
class $43b3f6a5cad939e6$var$ShowKeyboardWidget extends $9cWcn.Disposable {
    constructor(editor){
        super();
        this.editor = editor;
        this._domNode = document.createElement('textarea');
        this._domNode.className = 'iPadShowKeyboard';
        this._register($bDzmQ.addDisposableListener(this._domNode, 'touchstart', (e)=>{
            this.editor.focus();
        }));
        this._register($bDzmQ.addDisposableListener(this._domNode, 'focus', (e)=>{
            this.editor.focus();
        }));
        this.editor.addOverlayWidget(this);
    }
    dispose() {
        this.editor.removeOverlayWidget(this);
        super.dispose();
    }
    // ----- IOverlayWidget API
    getId() {
        return $43b3f6a5cad939e6$var$ShowKeyboardWidget.ID;
    }
    getDomNode() {
        return this._domNode;
    }
    getPosition() {
        return {
            preference: 1 /* BOTTOM_RIGHT_CORNER */ 
        };
    }
}
$43b3f6a5cad939e6$var$ShowKeyboardWidget.ID = 'editor.contrib.ShowKeyboardWidget';
$2iJTi.registerEditorContribution($43b3f6a5cad939e6$export$445a80feda1f9fce.ID, $43b3f6a5cad939e6$export$445a80feda1f9fce);


var $a68324ae765f2c88$exports = {};


var $bDzmQ = parcelRequire("bDzmQ");

var $bjjQO = parcelRequire("bjjQO");

var $9cWcn = parcelRequire("9cWcn");

var $2iJTi = parcelRequire("2iJTi");

var $4PmRQ = parcelRequire("4PmRQ");

var $2I6gf = parcelRequire("2I6gf");

var $is5YK = parcelRequire("is5YK");

var $kJEQt = parcelRequire("kJEQt");

var $gaWeX = parcelRequire("gaWeX");

var $azIPz = parcelRequire("azIPz");

var $82TRE = parcelRequire("82TRE");

var $95ky9 = parcelRequire("95ky9");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $a68324ae765f2c88$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var $a68324ae765f2c88$var$__param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
};
let $a68324ae765f2c88$var$InspectTokensController = class InspectTokensController extends $9cWcn.Disposable {
    constructor(editor, standaloneColorService, modeService){
        super();
        this._editor = editor;
        this._modeService = modeService;
        this._widget = null;
        this._register(this._editor.onDidChangeModel((e)=>this.stop()
        ));
        this._register(this._editor.onDidChangeModelLanguage((e)=>this.stop()
        ));
        this._register($4PmRQ.TokenizationRegistry.onDidChange((e)=>this.stop()
        ));
        this._register(this._editor.onKeyUp((e)=>e.keyCode === 9 /* Escape */  && this.stop()
        ));
    }
    static get(editor) {
        return editor.getContribution(InspectTokensController.ID);
    }
    dispose() {
        this.stop();
        super.dispose();
    }
    launch() {
        if (this._widget) return;
        if (!this._editor.hasModel()) return;
        this._widget = new $a68324ae765f2c88$var$InspectTokensWidget(this._editor, this._modeService);
    }
    stop() {
        if (this._widget) {
            this._widget.dispose();
            this._widget = null;
        }
    }
};
$a68324ae765f2c88$var$InspectTokensController.ID = 'editor.contrib.inspectTokens';
$a68324ae765f2c88$var$InspectTokensController = $a68324ae765f2c88$var$__decorate([
    $a68324ae765f2c88$var$__param(1, $kJEQt.IStandaloneThemeService),
    $a68324ae765f2c88$var$__param(2, $is5YK.IModeService)
], $a68324ae765f2c88$var$InspectTokensController);
class $a68324ae765f2c88$var$InspectTokens extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: 'editor.action.inspectTokens',
            label: $82TRE.InspectTokensNLS.inspectTokensAction,
            alias: 'Developer: Inspect Tokens',
            precondition: undefined
        });
    }
    run(accessor, editor) {
        let controller = $a68324ae765f2c88$var$InspectTokensController.get(editor);
        if (controller) controller.launch();
    }
}
function $a68324ae765f2c88$var$renderTokenText(tokenText) {
    let result = '';
    for(let charIndex = 0, len = tokenText.length; charIndex < len; charIndex++){
        let charCode = tokenText.charCodeAt(charIndex);
        switch(charCode){
            case 9 /* Tab */ :
                result += '\u2192'; // &rarr;
                break;
            case 32 /* Space */ :
                result += '\u00B7'; // &middot;
                break;
            default:
                result += String.fromCharCode(charCode);
        }
    }
    return result;
}
function $a68324ae765f2c88$var$getSafeTokenizationSupport(languageIdCodec, languageId) {
    const tokenizationSupport = $4PmRQ.TokenizationRegistry.get(languageId);
    if (tokenizationSupport) return tokenizationSupport;
    const encodedLanguageId = languageIdCodec.encodeLanguageId(languageId);
    return {
        getInitialState: ()=>$2I6gf.NULL_STATE
        ,
        tokenize: (line, hasEOL, state, deltaOffset)=>$2I6gf.nullTokenize(languageId, line, state, deltaOffset)
        ,
        tokenize2: (line, hasEOL, state, deltaOffset)=>$2I6gf.nullTokenize2(encodedLanguageId, line, state, deltaOffset)
    };
}
class $a68324ae765f2c88$var$InspectTokensWidget extends $9cWcn.Disposable {
    constructor(editor, modeService){
        super();
        // Editor.IContentWidget.allowEditorOverflow
        this.allowEditorOverflow = true;
        this._editor = editor;
        this._modeService = modeService;
        this._model = this._editor.getModel();
        this._domNode = document.createElement('div');
        this._domNode.className = 'tokens-inspect-widget';
        this._tokenizationSupport = $a68324ae765f2c88$var$getSafeTokenizationSupport(this._modeService.languageIdCodec, this._model.getLanguageId());
        this._compute(this._editor.getPosition());
        this._register(this._editor.onDidChangeCursorPosition((e)=>this._compute(this._editor.getPosition())
        ));
        this._editor.addContentWidget(this);
    }
    dispose() {
        this._editor.removeContentWidget(this);
        super.dispose();
    }
    getId() {
        return $a68324ae765f2c88$var$InspectTokensWidget._ID;
    }
    _compute(position) {
        let data = this._getTokensAtLine(position.lineNumber);
        let token1Index = 0;
        for(let i = data.tokens1.length - 1; i >= 0; i--){
            let t = data.tokens1[i];
            if (position.column - 1 >= t.offset) {
                token1Index = i;
                break;
            }
        }
        let token2Index = 0;
        for(let i1 = data.tokens2.length >>> 1; i1 >= 0; i1--)if (position.column - 1 >= data.tokens2[i1 << 1]) {
            token2Index = i1;
            break;
        }
        let lineContent = this._model.getLineContent(position.lineNumber);
        let tokenText = '';
        if (token1Index < data.tokens1.length) {
            let tokenStartIndex = data.tokens1[token1Index].offset;
            let tokenEndIndex = token1Index + 1 < data.tokens1.length ? data.tokens1[token1Index + 1].offset : lineContent.length;
            tokenText = lineContent.substring(tokenStartIndex, tokenEndIndex);
        }
        $bDzmQ.reset(this._domNode, $bDzmQ.$('h2.tm-token', undefined, $a68324ae765f2c88$var$renderTokenText(tokenText), $bDzmQ.$('span.tm-token-length', undefined, `${tokenText.length} ${tokenText.length === 1 ? 'char' : 'chars'}`)));
        $bDzmQ.append(this._domNode, $bDzmQ.$('hr.tokens-inspect-separator', {
            'style': 'clear:both'
        }));
        const metadata = (token2Index << 1) + 1 < data.tokens2.length ? this._decodeMetadata(data.tokens2[(token2Index << 1) + 1]) : null;
        $bDzmQ.append(this._domNode, $bDzmQ.$('table.tm-metadata-table', undefined, $bDzmQ.$('tbody', undefined, $bDzmQ.$('tr', undefined, $bDzmQ.$('td.tm-metadata-key', undefined, 'language'), $bDzmQ.$('td.tm-metadata-value', undefined, `${metadata ? metadata.languageId : '-?-'}`)), $bDzmQ.$('tr', undefined, $bDzmQ.$('td.tm-metadata-key', undefined, 'token type'), $bDzmQ.$('td.tm-metadata-value', undefined, `${metadata ? this._tokenTypeToString(metadata.tokenType) : '-?-'}`)), $bDzmQ.$('tr', undefined, $bDzmQ.$('td.tm-metadata-key', undefined, 'font style'), $bDzmQ.$('td.tm-metadata-value', undefined, `${metadata ? this._fontStyleToString(metadata.fontStyle) : '-?-'}`)), $bDzmQ.$('tr', undefined, $bDzmQ.$('td.tm-metadata-key', undefined, 'foreground'), $bDzmQ.$('td.tm-metadata-value', undefined, `${metadata ? $bjjQO.Color.Format.CSS.formatHex(metadata.foreground) : '-?-'}`)), $bDzmQ.$('tr', undefined, $bDzmQ.$('td.tm-metadata-key', undefined, 'background'), $bDzmQ.$('td.tm-metadata-value', undefined, `${metadata ? $bjjQO.Color.Format.CSS.formatHex(metadata.background) : '-?-'}`)))));
        $bDzmQ.append(this._domNode, $bDzmQ.$('hr.tokens-inspect-separator'));
        if (token1Index < data.tokens1.length) $bDzmQ.append(this._domNode, $bDzmQ.$('span.tm-token-type', undefined, data.tokens1[token1Index].type));
        this._editor.layoutContentWidget(this);
    }
    _decodeMetadata(metadata) {
        let colorMap = $4PmRQ.TokenizationRegistry.getColorMap();
        let languageId = $4PmRQ.TokenMetadata.getLanguageId(metadata);
        let tokenType = $4PmRQ.TokenMetadata.getTokenType(metadata);
        let fontStyle = $4PmRQ.TokenMetadata.getFontStyle(metadata);
        let foreground = $4PmRQ.TokenMetadata.getForeground(metadata);
        let background = $4PmRQ.TokenMetadata.getBackground(metadata);
        return {
            languageId: this._modeService.languageIdCodec.decodeLanguageId(languageId),
            tokenType: tokenType,
            fontStyle: fontStyle,
            foreground: colorMap[foreground],
            background: colorMap[background]
        };
    }
    _tokenTypeToString(tokenType) {
        switch(tokenType){
            case 0 /* Other */ :
                return 'Other';
            case 1 /* Comment */ :
                return 'Comment';
            case 2 /* String */ :
                return 'String';
            case 4 /* RegEx */ :
                return 'RegEx';
            default:
                return '??';
        }
    }
    _fontStyleToString(fontStyle) {
        let r = '';
        if (fontStyle & 1 /* Italic */ ) r += 'italic ';
        if (fontStyle & 2 /* Bold */ ) r += 'bold ';
        if (fontStyle & 4 /* Underline */ ) r += 'underline ';
        if (r.length === 0) r = '---';
        return r;
    }
    _getTokensAtLine(lineNumber) {
        let stateBeforeLine = this._getStateBeforeLine(lineNumber);
        let tokenizationResult1 = this._tokenizationSupport.tokenize(this._model.getLineContent(lineNumber), true, stateBeforeLine, 0);
        let tokenizationResult2 = this._tokenizationSupport.tokenize2(this._model.getLineContent(lineNumber), true, stateBeforeLine, 0);
        return {
            startState: stateBeforeLine,
            tokens1: tokenizationResult1.tokens,
            tokens2: tokenizationResult2.tokens,
            endState: tokenizationResult1.endState
        };
    }
    _getStateBeforeLine(lineNumber) {
        let state = this._tokenizationSupport.getInitialState();
        for(let i = 1; i < lineNumber; i++){
            let tokenizationResult = this._tokenizationSupport.tokenize(this._model.getLineContent(i), true, state, 0);
            state = tokenizationResult.endState;
        }
        return state;
    }
    getDomNode() {
        return this._domNode;
    }
    getPosition() {
        return {
            position: this._editor.getPosition(),
            preference: [
                2 /* BELOW */ ,
                1 /* ABOVE */ 
            ]
        };
    }
}
$a68324ae765f2c88$var$InspectTokensWidget._ID = 'editor.contrib.inspectTokensWidget';
$2iJTi.registerEditorContribution($a68324ae765f2c88$var$InspectTokensController.ID, $a68324ae765f2c88$var$InspectTokensController);
$2iJTi.registerEditorAction($a68324ae765f2c88$var$InspectTokens);
$azIPz.registerThemingParticipant((theme, collector)=>{
    const border = theme.getColor($gaWeX.editorHoverBorder);
    if (border) {
        let borderWidth = theme.type === $95ky9.ColorScheme.HIGH_CONTRAST ? 2 : 1;
        collector.addRule(`.monaco-editor .tokens-inspect-widget { border: ${borderWidth}px solid ${border}; }`);
        collector.addRule(`.monaco-editor .tokens-inspect-widget .tokens-inspect-separator { background-color: ${border}; }`);
    }
    const background = theme.getColor($gaWeX.editorHoverBackground);
    if (background) collector.addRule(`.monaco-editor .tokens-inspect-widget { background-color: ${background}; }`);
    const foreground = theme.getColor($gaWeX.editorHoverForeground);
    if (foreground) collector.addRule(`.monaco-editor .tokens-inspect-widget { color: ${foreground}; }`);
});



var $TezJS = parcelRequire("TezJS");

var $7Oj2p = parcelRequire("7Oj2p");

var $82TRE = parcelRequire("82TRE");
var $7f0fcbc24e29a1f3$exports = {};

$parcel$export($7f0fcbc24e29a1f3$exports, "HelpQuickAccessProvider", () => $7f0fcbc24e29a1f3$export$960f28d3c3a61657, (v) => $7f0fcbc24e29a1f3$export$960f28d3c3a61657 = v);

var $9cWcn = parcelRequire("9cWcn");

var $4dEdH = parcelRequire("4dEdH");

var $7Oj2p = parcelRequire("7Oj2p");

var $3XkzC = parcelRequire("3XkzC");

var $TezJS = parcelRequire("TezJS");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $7f0fcbc24e29a1f3$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var $7f0fcbc24e29a1f3$var$__param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
};
let $7f0fcbc24e29a1f3$export$960f28d3c3a61657 = class $7f0fcbc24e29a1f3$export$960f28d3c3a61657 {
    constructor(quickInputService){
        this.quickInputService = quickInputService;
        this.registry = $TezJS.Registry.as($7Oj2p.Extensions.Quickaccess);
    }
    provide(picker) {
        const disposables = new $9cWcn.DisposableStore();
        // Open a picker with the selected value if picked
        disposables.add(picker.onDidAccept(()=>{
            const [item] = picker.selectedItems;
            if (item) this.quickInputService.quickAccess.show(item.prefix, {
                preserveValue: true
            });
        }));
        // Also open a picker when we detect the user typed the exact
        // name of a provider (e.g. `?term` for terminals)
        disposables.add(picker.onDidChangeValue((value)=>{
            const providerDescriptor = this.registry.getQuickAccessProvider(value.substr($7f0fcbc24e29a1f3$export$960f28d3c3a61657.PREFIX.length));
            if (providerDescriptor && providerDescriptor.prefix && providerDescriptor.prefix !== $7f0fcbc24e29a1f3$export$960f28d3c3a61657.PREFIX) this.quickInputService.quickAccess.show(providerDescriptor.prefix, {
                preserveValue: true
            });
        }));
        // Fill in all providers separated by editor/global scope
        const { editorProviders: editorProviders , globalProviders: globalProviders  } = this.getQuickAccessProviders();
        picker.items = editorProviders.length === 0 || globalProviders.length === 0 ? // Without groups
        [
            ...editorProviders.length === 0 ? globalProviders : editorProviders
        ] : // With groups
        [
            {
                label: $4dEdH.localize('globalCommands', "global commands"),
                type: 'separator'
            },
            ...globalProviders,
            {
                label: $4dEdH.localize('editorCommands', "editor commands"),
                type: 'separator'
            },
            ...editorProviders
        ];
        return disposables;
    }
    getQuickAccessProviders() {
        const globalProviders = [];
        const editorProviders = [];
        for (const provider of this.registry.getQuickAccessProviders().sort((providerA, providerB)=>providerA.prefix.localeCompare(providerB.prefix)
        )){
            if (provider.prefix === $7f0fcbc24e29a1f3$export$960f28d3c3a61657.PREFIX) continue; // exclude help which is already active
            for (const helpEntry of provider.helpEntries){
                const prefix = helpEntry.prefix || provider.prefix;
                const label = prefix || '\u2026' /* ... */ ;
                (helpEntry.needsEditor ? editorProviders : globalProviders).push({
                    prefix: prefix,
                    label: label,
                    ariaLabel: $4dEdH.localize('helpPickAriaLabel', "{0}, {1}", label, helpEntry.description),
                    description: helpEntry.description
                });
            }
        }
        return {
            editorProviders: editorProviders,
            globalProviders: globalProviders
        };
    }
};
$7f0fcbc24e29a1f3$export$960f28d3c3a61657.PREFIX = '?';
$7f0fcbc24e29a1f3$export$960f28d3c3a61657 = $7f0fcbc24e29a1f3$var$__decorate([
    $7f0fcbc24e29a1f3$var$__param(0, $3XkzC.IQuickInputService)
], $7f0fcbc24e29a1f3$export$960f28d3c3a61657);


$TezJS.Registry.as($7Oj2p.Extensions.Quickaccess).registerQuickAccessProvider({
    ctor: $7f0fcbc24e29a1f3$exports.HelpQuickAccessProvider,
    prefix: '',
    helpEntries: [
        {
            description: $82TRE.QuickHelpNLS.helpQuickAccessActionLabel,
            needsEditor: true
        }
    ]
});


var $b06ed5b6a95bf9f3$exports = {};

var $9cWcn = parcelRequire("9cWcn");

var $7UXLG = parcelRequire("7UXLG");

var $5eGXQ = parcelRequire("5eGXQ");

var $9cWcn = parcelRequire("9cWcn");

var $bxBg7 = parcelRequire("bxBg7");

var $7UXLG = parcelRequire("7UXLG");

var $1Y4vr = parcelRequire("1Y4vr");

var $50T4y = parcelRequire("50T4y");

var $azIPz = parcelRequire("azIPz");
class $be03e695747ee01a$export$6c0961619607218e {
    constructor(options){
        this.options = options;
        //#endregion
        //#region Decorations Utils
        this.rangeHighlightDecorationId = undefined;
    }
    //#region Provider methods
    provide(picker, token) {
        var _a;
        const disposables = new $9cWcn.DisposableStore();
        // Apply options if any
        picker.canAcceptInBackground = !!((_a = this.options) === null || _a === void 0 ? void 0 : _a.canAcceptInBackground);
        // Disable filtering & sorting, we control the results
        picker.matchOnLabel = picker.matchOnDescription = picker.matchOnDetail = picker.sortByLabel = false;
        // Provide based on current active editor
        const pickerDisposable = disposables.add(new $9cWcn.MutableDisposable());
        pickerDisposable.value = this.doProvide(picker, token);
        // Re-create whenever the active editor changes
        disposables.add(this.onDidActiveTextEditorControlChange(()=>{
            // Clear old
            pickerDisposable.value = undefined;
            // Add new
            pickerDisposable.value = this.doProvide(picker, token);
        }));
        return disposables;
    }
    doProvide(picker, token) {
        const disposables = new $9cWcn.DisposableStore();
        // With text control
        const editor = this.activeTextEditorControl;
        if (editor && this.canProvideWithTextEditor(editor)) {
            const context = {
                editor: editor
            };
            // Restore any view state if this picker was closed
            // without actually going to a line
            const codeEditor = $7UXLG.getCodeEditor(editor);
            if (codeEditor) {
                // Remember view state and update it when the cursor position
                // changes even later because it could be that the user has
                // configured quick access to remain open when focus is lost and
                // we always want to restore the current location.
                let lastKnownEditorViewState = $bxBg7.withNullAsUndefined(editor.saveViewState());
                disposables.add(codeEditor.onDidChangeCursorPosition(()=>{
                    lastKnownEditorViewState = $bxBg7.withNullAsUndefined(editor.saveViewState());
                }));
                context.restoreViewState = ()=>{
                    if (lastKnownEditorViewState && editor === this.activeTextEditorControl) editor.restoreViewState(lastKnownEditorViewState);
                };
                disposables.add($5eGXQ.once(token.onCancellationRequested)(()=>{
                    var _a;
                    return (_a = context.restoreViewState) === null || _a === void 0 ? void 0 : _a.call(context);
                }));
            }
            // Clean up decorations on dispose
            disposables.add($9cWcn.toDisposable(()=>this.clearDecorations(editor)
            ));
            // Ask subclass for entries
            disposables.add(this.provideWithTextEditor(context, picker, token));
        } else disposables.add(this.provideWithoutTextEditor(picker, token));
        return disposables;
    }
    /**
     * Subclasses to implement if they can operate on the text editor.
     */ canProvideWithTextEditor(editor) {
        return true;
    }
    gotoLocation({ editor: editor  }, options) {
        editor.setSelection(options.range);
        editor.revealRangeInCenter(options.range, 0 /* Smooth */ );
        if (!options.preserveFocus) editor.focus();
    }
    getModel(editor) {
        var _a;
        return $7UXLG.isDiffEditor(editor) ? (_a = editor.getModel()) === null || _a === void 0 ? void 0 : _a.modified : editor.getModel();
    }
    addDecorations(editor, range) {
        editor.changeDecorations((changeAccessor)=>{
            // Reset old decorations if any
            const deleteDecorations = [];
            if (this.rangeHighlightDecorationId) {
                deleteDecorations.push(this.rangeHighlightDecorationId.overviewRulerDecorationId);
                deleteDecorations.push(this.rangeHighlightDecorationId.rangeHighlightId);
                this.rangeHighlightDecorationId = undefined;
            }
            // Add new decorations for the range
            const newDecorations = [
                // highlight the entire line on the range
                {
                    range: range,
                    options: {
                        description: 'quick-access-range-highlight',
                        className: 'rangeHighlight',
                        isWholeLine: true
                    }
                },
                // also add overview ruler highlight
                {
                    range: range,
                    options: {
                        description: 'quick-access-range-highlight-overview',
                        overviewRuler: {
                            color: $azIPz.themeColorFromId($50T4y.overviewRulerRangeHighlight),
                            position: $1Y4vr.OverviewRulerLane.Full
                        }
                    }
                }
            ];
            const [rangeHighlightId, overviewRulerDecorationId] = changeAccessor.deltaDecorations(deleteDecorations, newDecorations);
            this.rangeHighlightDecorationId = {
                rangeHighlightId: rangeHighlightId,
                overviewRulerDecorationId: overviewRulerDecorationId
            };
        });
    }
    clearDecorations(editor) {
        const rangeHighlightDecorationId = this.rangeHighlightDecorationId;
        if (rangeHighlightDecorationId) {
            editor.changeDecorations((changeAccessor)=>{
                changeAccessor.deltaDecorations([
                    rangeHighlightDecorationId.overviewRulerDecorationId,
                    rangeHighlightDecorationId.rangeHighlightId
                ], []);
            });
            this.rangeHighlightDecorationId = undefined;
        }
    }
}



var $4dEdH = parcelRequire("4dEdH");
class $f91f13001d5a56c9$export$c7e3af26311986a extends $be03e695747ee01a$export$6c0961619607218e {
    constructor(){
        super({
            canAcceptInBackground: true
        });
    }
    provideWithoutTextEditor(picker) {
        const label = $4dEdH.localize('cannotRunGotoLine', "Open a text editor first to go to a line.");
        picker.items = [
            {
                label: label
            }
        ];
        picker.ariaLabel = label;
        return $9cWcn.Disposable.None;
    }
    provideWithTextEditor(context, picker, token) {
        const editor = context.editor;
        const disposables = new $9cWcn.DisposableStore();
        // Goto line once picked
        disposables.add(picker.onDidAccept((event)=>{
            const [item] = picker.selectedItems;
            if (item) {
                if (!this.isValidLineNumber(editor, item.lineNumber)) return;
                this.gotoLocation(context, {
                    range: this.toRange(item.lineNumber, item.column),
                    keyMods: picker.keyMods,
                    preserveFocus: event.inBackground
                });
                if (!event.inBackground) picker.hide();
            }
        }));
        // React to picker changes
        const updatePickerAndEditor = ()=>{
            const position = this.parsePosition(editor, picker.value.trim().substr($f91f13001d5a56c9$export$c7e3af26311986a.PREFIX.length));
            const label = this.getPickLabel(editor, position.lineNumber, position.column);
            // Picker
            picker.items = [
                {
                    lineNumber: position.lineNumber,
                    column: position.column,
                    label: label
                }
            ];
            // ARIA Label
            picker.ariaLabel = label;
            // Clear decorations for invalid range
            if (!this.isValidLineNumber(editor, position.lineNumber)) {
                this.clearDecorations(editor);
                return;
            }
            // Reveal
            const range = this.toRange(position.lineNumber, position.column);
            editor.revealRangeInCenter(range, 0 /* Smooth */ );
            // Decorate
            this.addDecorations(editor, range);
        };
        updatePickerAndEditor();
        disposables.add(picker.onDidChangeValue(()=>updatePickerAndEditor()
        ));
        // Adjust line number visibility as needed
        const codeEditor = $7UXLG.getCodeEditor(editor);
        if (codeEditor) {
            const options = codeEditor.getOptions();
            const lineNumbers = options.get(59 /* lineNumbers */ );
            if (lineNumbers.renderType === 2 /* Relative */ ) {
                codeEditor.updateOptions({
                    lineNumbers: 'on'
                });
                disposables.add($9cWcn.toDisposable(()=>codeEditor.updateOptions({
                        lineNumbers: 'relative'
                    })
                ));
            }
        }
        return disposables;
    }
    toRange(lineNumber = 1, column = 1) {
        return {
            startLineNumber: lineNumber,
            startColumn: column,
            endLineNumber: lineNumber,
            endColumn: column
        };
    }
    parsePosition(editor, value) {
        // Support line-col formats of `line,col`, `line:col`, `line#col`
        const numbers = value.split(/,|:|#/).map((part)=>parseInt(part, 10)
        ).filter((part)=>!isNaN(part)
        );
        const endLine = this.lineCount(editor) + 1;
        return {
            lineNumber: numbers[0] > 0 ? numbers[0] : endLine + numbers[0],
            column: numbers[1]
        };
    }
    getPickLabel(editor, lineNumber, column) {
        // Location valid: indicate this as picker label
        if (this.isValidLineNumber(editor, lineNumber)) {
            if (this.isValidColumn(editor, lineNumber, column)) return $4dEdH.localize('gotoLineColumnLabel', "Go to line {0} and character {1}.", lineNumber, column);
            return $4dEdH.localize('gotoLineLabel', "Go to line {0}.", lineNumber);
        }
        // Location invalid: show generic label
        const position = editor.getPosition() || {
            lineNumber: 1,
            column: 1
        };
        const lineCount = this.lineCount(editor);
        if (lineCount > 1) return $4dEdH.localize('gotoLineLabelEmptyWithLimit', "Current Line: {0}, Character: {1}. Type a line number between 1 and {2} to navigate to.", position.lineNumber, position.column, lineCount);
        return $4dEdH.localize('gotoLineLabelEmpty', "Current Line: {0}, Character: {1}. Type a line number to navigate to.", position.lineNumber, position.column);
    }
    isValidLineNumber(editor, lineNumber) {
        if (!lineNumber || typeof lineNumber !== 'number') return false;
        return lineNumber > 0 && lineNumber <= this.lineCount(editor);
    }
    isValidColumn(editor, lineNumber, column) {
        if (!column || typeof column !== 'number') return false;
        const model = this.getModel(editor);
        if (!model) return false;
        const positionCandidate = {
            lineNumber: lineNumber,
            column: column
        };
        return model.validatePosition(positionCandidate).equals(positionCandidate);
    }
    lineCount(editor) {
        var _a, _b;
        return (_b = (_a = this.getModel(editor)) === null || _a === void 0 ? void 0 : _a.getLineCount()) !== null && _b !== void 0 ? _b : 0;
    }
}
$f91f13001d5a56c9$export$c7e3af26311986a.PREFIX = ':';



var $TezJS = parcelRequire("TezJS");

var $7Oj2p = parcelRequire("7Oj2p");

var $2Qfl0 = parcelRequire("2Qfl0");

var $bxBg7 = parcelRequire("bxBg7");

var $82TRE = parcelRequire("82TRE");

var $5YaSO = parcelRequire("5YaSO");

var $2iJTi = parcelRequire("2iJTi");

var $ibKGQ = parcelRequire("ibKGQ");

var $3XkzC = parcelRequire("3XkzC");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $b06ed5b6a95bf9f3$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var $b06ed5b6a95bf9f3$var$__param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
};
let $b06ed5b6a95bf9f3$export$62f50e6a0744204 = class $b06ed5b6a95bf9f3$export$62f50e6a0744204 extends $f91f13001d5a56c9$export$c7e3af26311986a {
    constructor(editorService){
        super();
        this.editorService = editorService;
        this.onDidActiveTextEditorControlChange = $5YaSO.Event.None;
    }
    get activeTextEditorControl() {
        return $bxBg7.withNullAsUndefined(this.editorService.getFocusedCodeEditor());
    }
};
$b06ed5b6a95bf9f3$export$62f50e6a0744204 = $b06ed5b6a95bf9f3$var$__decorate([
    $b06ed5b6a95bf9f3$var$__param(0, $2Qfl0.ICodeEditorService)
], $b06ed5b6a95bf9f3$export$62f50e6a0744204);
$TezJS.Registry.as($7Oj2p.Extensions.Quickaccess).registerQuickAccessProvider({
    ctor: $b06ed5b6a95bf9f3$export$62f50e6a0744204,
    prefix: $b06ed5b6a95bf9f3$export$62f50e6a0744204.PREFIX,
    helpEntries: [
        {
            description: $82TRE.GoToLineNLS.gotoLineActionLabel,
            needsEditor: true
        }
    ]
});
class $b06ed5b6a95bf9f3$export$83454a444c35f5c1 extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: 'editor.action.gotoLine',
            label: $82TRE.GoToLineNLS.gotoLineActionLabel,
            alias: 'Go to Line/Column...',
            precondition: undefined,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.focus,
                primary: 2085 /* KeyG */ ,
                mac: {
                    primary: 293 /* KeyG */ 
                },
                weight: 100 /* EditorContrib */ 
            }
        });
    }
    run(accessor) {
        accessor.get($3XkzC.IQuickInputService).quickAccess.show($b06ed5b6a95bf9f3$export$62f50e6a0744204.PREFIX);
    }
}
$2iJTi.registerEditorAction($b06ed5b6a95bf9f3$export$83454a444c35f5c1);


var $506c64b5cded2bda$exports = {};
parcelRequire("oj9qX");

var $dc09d837cfdcf51f$exports = {};

$parcel$export($dc09d837cfdcf51f$exports, "AbstractGotoSymbolQuickAccessProvider", () => $dc09d837cfdcf51f$export$ceb5fc4d82017d3b, (v) => $dc09d837cfdcf51f$export$ceb5fc4d82017d3b = v);

var $6bXyA = parcelRequire("6bXyA");

var $giPcZ = parcelRequire("giPcZ");

var $awgRE = parcelRequire("awgRE");

var $lk06m = parcelRequire("lk06m");

var $a4dH7 = parcelRequire("a4dH7");

var $lb0Ah = parcelRequire("lb0Ah");

var $jcr1R = parcelRequire("jcr1R");
const $796e972dbf53d5a8$var$NO_SCORE2 = [
    undefined,
    []
];
function $796e972dbf53d5a8$export$e22f4f530abefc49(target, query, patternStart = 0, wordStart = 0) {
    // Score: multiple inputs
    const preparedQuery = query;
    if (preparedQuery.values && preparedQuery.values.length > 1) return $796e972dbf53d5a8$var$doScoreFuzzy2Multiple(target, preparedQuery.values, patternStart, wordStart);
    // Score: single input
    return $796e972dbf53d5a8$var$doScoreFuzzy2Single(target, query, patternStart, wordStart);
}
function $796e972dbf53d5a8$var$doScoreFuzzy2Multiple(target, query, patternStart, wordStart) {
    let totalScore = 0;
    const totalMatches = [];
    for (const queryPiece of query){
        const [score, matches] = $796e972dbf53d5a8$var$doScoreFuzzy2Single(target, queryPiece, patternStart, wordStart);
        if (typeof score !== 'number') // if a single query value does not match, return with
        // no score entirely, we require all queries to match
        return $796e972dbf53d5a8$var$NO_SCORE2;
        totalScore += score;
        totalMatches.push(...matches);
    }
    // if we have a score, ensure that the positions are
    // sorted in ascending order and distinct
    return [
        totalScore,
        $796e972dbf53d5a8$var$normalizeMatches(totalMatches)
    ];
}
function $796e972dbf53d5a8$var$doScoreFuzzy2Single(target, query, patternStart, wordStart) {
    const score = $lk06m.fuzzyScore(query.original, query.originalLowercase, patternStart, target, target.toLowerCase(), wordStart, true);
    if (!score) return $796e972dbf53d5a8$var$NO_SCORE2;
    return [
        score[0],
        $lk06m.createMatches(score)
    ];
}
function $796e972dbf53d5a8$var$normalizeMatches(matches) {
    // sort matches by start to be able to normalize
    const sortedMatches = matches.sort((matchA, matchB)=>{
        return matchA.start - matchB.start;
    });
    // merge matches that overlap
    const normalizedMatches = [];
    let currentMatch = undefined;
    for (const match of sortedMatches)// if we have no current match or the matches
    // do not overlap, we take it as is and remember
    // it for future merging
    if (!currentMatch || !$796e972dbf53d5a8$var$matchOverlaps(currentMatch, match)) {
        currentMatch = match;
        normalizedMatches.push(match);
    } else {
        currentMatch.start = Math.min(currentMatch.start, match.start);
        currentMatch.end = Math.max(currentMatch.end, match.end);
    }
    return normalizedMatches;
}
function $796e972dbf53d5a8$var$matchOverlaps(matchA, matchB) {
    if (matchA.end < matchB.start) return false; // A ends before B starts
    if (matchB.end < matchA.start) return false; // B ends before A starts
    return true;
}
/*
 * If a query is wrapped in quotes, the user does not want to
 * use fuzzy search for this query.
 */ function $796e972dbf53d5a8$var$queryExpectsExactMatch(query) {
    return query.startsWith('"') && query.endsWith('"');
}
/**
 * Helper function to prepare a search value for scoring by removing unwanted characters
 * and allowing to score on multiple pieces separated by whitespace character.
 */ const $796e972dbf53d5a8$var$MULTIPLE_QUERY_VALUES_SEPARATOR = ' ';
function $796e972dbf53d5a8$export$b7b2a481b84622e6(original) {
    if (typeof original !== 'string') original = '';
    const originalLowercase = original.toLowerCase();
    const { pathNormalized: pathNormalized , normalized: normalized , normalizedLowercase: normalizedLowercase  } = $796e972dbf53d5a8$var$normalizeQuery(original);
    const containsPathSeparator = pathNormalized.indexOf($a4dH7.sep) >= 0;
    const expectExactMatch = $796e972dbf53d5a8$var$queryExpectsExactMatch(original);
    let values = undefined;
    const originalSplit = original.split($796e972dbf53d5a8$var$MULTIPLE_QUERY_VALUES_SEPARATOR);
    if (originalSplit.length > 1) for (const originalPiece of originalSplit){
        const expectExactMatchPiece = $796e972dbf53d5a8$var$queryExpectsExactMatch(originalPiece);
        const { pathNormalized: pathNormalizedPiece , normalized: normalizedPiece , normalizedLowercase: normalizedLowercasePiece  } = $796e972dbf53d5a8$var$normalizeQuery(originalPiece);
        if (normalizedPiece) {
            if (!values) values = [];
            values.push({
                original: originalPiece,
                originalLowercase: originalPiece.toLowerCase(),
                pathNormalized: pathNormalizedPiece,
                normalized: normalizedPiece,
                normalizedLowercase: normalizedLowercasePiece,
                expectContiguousMatch: expectExactMatchPiece
            });
        }
    }
    return {
        original: original,
        originalLowercase: originalLowercase,
        pathNormalized: pathNormalized,
        normalized: normalized,
        normalizedLowercase: normalizedLowercase,
        values: values,
        containsPathSeparator: containsPathSeparator,
        expectContiguousMatch: expectExactMatch
    };
}
function $796e972dbf53d5a8$var$normalizeQuery(original) {
    let pathNormalized;
    if ($lb0Ah.isWindows) pathNormalized = original.replace(/\//g, $a4dH7.sep); // Help Windows users to search for paths when using slash
    else pathNormalized = original.replace(/\\/g, $a4dH7.sep); // Help macOS/Linux users to search for paths when using backslash
    // we remove quotes here because quotes are used for exact match search
    const normalized = $jcr1R.stripWildcards(pathNormalized).replace(/\s|"/g, '');
    return {
        pathNormalized: pathNormalized,
        normalized: normalized,
        normalizedLowercase: normalized.toLowerCase()
    };
}
function $796e972dbf53d5a8$export$20e144ebe86a7451(arg1) {
    if (Array.isArray(arg1)) return $796e972dbf53d5a8$export$b7b2a481b84622e6(arg1.map((piece)=>piece.original
    ).join($796e972dbf53d5a8$var$MULTIPLE_QUERY_VALUES_SEPARATOR));
    return $796e972dbf53d5a8$export$b7b2a481b84622e6(arg1.original);
} //#endregion



var $9cWcn = parcelRequire("9cWcn");

var $jcr1R = parcelRequire("jcr1R");

var $d00il = parcelRequire("d00il");

var $4PmRQ = parcelRequire("4PmRQ");



var $4dEdH = parcelRequire("4dEdH");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $dc09d837cfdcf51f$var$__awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
class $dc09d837cfdcf51f$export$ceb5fc4d82017d3b extends $be03e695747ee01a$export$6c0961619607218e {
    constructor(options = Object.create(null)){
        super(options);
        this.options = options;
        this.options.canAcceptInBackground = true;
    }
    provideWithoutTextEditor(picker) {
        this.provideLabelPick(picker, $4dEdH.localize('cannotRunGotoSymbolWithoutEditor', "To go to a symbol, first open a text editor with symbol information."));
        return $9cWcn.Disposable.None;
    }
    provideWithTextEditor(context, picker, token) {
        const editor = context.editor;
        const model = this.getModel(editor);
        if (!model) return $9cWcn.Disposable.None;
        // Provide symbols from model if available in registry
        if ($4PmRQ.DocumentSymbolProviderRegistry.has(model)) return this.doProvideWithEditorSymbols(context, model, picker, token);
        // Otherwise show an entry for a model without registry
        // But give a chance to resolve the symbols at a later
        // point if possible
        return this.doProvideWithoutEditorSymbols(context, model, picker, token);
    }
    doProvideWithoutEditorSymbols(context, model, picker, token) {
        const disposables = new $9cWcn.DisposableStore();
        // Generic pick for not having any symbol information
        this.provideLabelPick(picker, $4dEdH.localize('cannotRunGotoSymbolWithoutSymbolProvider', "The active text editor does not provide symbol information."));
        // Wait for changes to the registry and see if eventually
        // we do get symbols. This can happen if the picker is opened
        // very early after the model has loaded but before the
        // language registry is ready.
        // https://github.com/microsoft/vscode/issues/70607
        (()=>$dc09d837cfdcf51f$var$__awaiter(this, void 0, void 0, function*() {
                const result = yield this.waitForLanguageSymbolRegistry(model, disposables);
                if (!result || token.isCancellationRequested) return;
                disposables.add(this.doProvideWithEditorSymbols(context, model, picker, token));
            })
        )();
        return disposables;
    }
    provideLabelPick(picker, label) {
        picker.items = [
            {
                label: label,
                index: 0,
                kind: 14 /* String */ 
            }
        ];
        picker.ariaLabel = label;
    }
    waitForLanguageSymbolRegistry(model, disposables) {
        return $dc09d837cfdcf51f$var$__awaiter(this, void 0, void 0, function*() {
            if ($4PmRQ.DocumentSymbolProviderRegistry.has(model)) return true;
            const symbolProviderRegistryPromise = new $6bXyA.DeferredPromise();
            // Resolve promise when registry knows model
            const symbolProviderListener = disposables.add($4PmRQ.DocumentSymbolProviderRegistry.onDidChange(()=>{
                if ($4PmRQ.DocumentSymbolProviderRegistry.has(model)) {
                    symbolProviderListener.dispose();
                    symbolProviderRegistryPromise.complete(true);
                }
            }));
            // Resolve promise when we get disposed too
            disposables.add($9cWcn.toDisposable(()=>symbolProviderRegistryPromise.complete(false)
            ));
            return symbolProviderRegistryPromise.p;
        });
    }
    doProvideWithEditorSymbols(context, model, picker, token) {
        const editor = context.editor;
        const disposables = new $9cWcn.DisposableStore();
        // Goto symbol once picked
        disposables.add(picker.onDidAccept((event)=>{
            const [item] = picker.selectedItems;
            if (item && item.range) {
                this.gotoLocation(context, {
                    range: item.range.selection,
                    keyMods: picker.keyMods,
                    preserveFocus: event.inBackground
                });
                if (!event.inBackground) picker.hide();
            }
        }));
        // Goto symbol side by side if enabled
        disposables.add(picker.onDidTriggerItemButton(({ item: item  })=>{
            if (item && item.range) {
                this.gotoLocation(context, {
                    range: item.range.selection,
                    keyMods: picker.keyMods,
                    forceSideBySide: true
                });
                picker.hide();
            }
        }));
        // Resolve symbols from document once and reuse this
        // request for all filtering and typing then on
        const symbolsPromise = this.getDocumentSymbols(model, token);
        // Set initial picks and update on type
        let picksCts = undefined;
        const updatePickerItems = ()=>$dc09d837cfdcf51f$var$__awaiter(this, void 0, void 0, function*() {
                // Cancel any previous ask for picks and busy
                picksCts === null || picksCts === void 0 || picksCts.dispose(true);
                picker.busy = false;
                // Create new cancellation source for this run
                picksCts = new $giPcZ.CancellationTokenSource(token);
                // Collect symbol picks
                picker.busy = true;
                try {
                    const query = $796e972dbf53d5a8$export$b7b2a481b84622e6(picker.value.substr($dc09d837cfdcf51f$export$ceb5fc4d82017d3b.PREFIX.length).trim());
                    const items = yield this.doGetSymbolPicks(symbolsPromise, query, undefined, picksCts.token);
                    if (token.isCancellationRequested) return;
                    if (items.length > 0) picker.items = items;
                    else if (query.original.length > 0) this.provideLabelPick(picker, $4dEdH.localize('noMatchingSymbolResults', "No matching editor symbols"));
                    else this.provideLabelPick(picker, $4dEdH.localize('noSymbolResults', "No editor symbols"));
                } finally{
                    if (!token.isCancellationRequested) picker.busy = false;
                }
            })
        ;
        disposables.add(picker.onDidChangeValue(()=>updatePickerItems()
        ));
        updatePickerItems();
        // Reveal and decorate when active item changes
        // However, ignore the very first event so that
        // opening the picker is not immediately revealing
        // and decorating the first entry.
        let ignoreFirstActiveEvent = true;
        disposables.add(picker.onDidChangeActive(()=>{
            const [item] = picker.activeItems;
            if (item && item.range) {
                if (ignoreFirstActiveEvent) {
                    ignoreFirstActiveEvent = false;
                    return;
                }
                // Reveal
                editor.revealRangeInCenter(item.range.selection, 0 /* Smooth */ );
                // Decorate
                this.addDecorations(editor, item.range.decoration);
            }
        }));
        return disposables;
    }
    doGetSymbolPicks(symbolsPromise, query, options, token) {
        return $dc09d837cfdcf51f$var$__awaiter(this, void 0, void 0, function*() {
            const symbols = yield symbolsPromise;
            if (token.isCancellationRequested) return [];
            const filterBySymbolKind = query.original.indexOf($dc09d837cfdcf51f$export$ceb5fc4d82017d3b.SCOPE_PREFIX) === 0;
            const filterPos = filterBySymbolKind ? 1 : 0;
            // Split between symbol and container query
            let symbolQuery;
            let containerQuery;
            if (query.values && query.values.length > 1) {
                symbolQuery = $796e972dbf53d5a8$export$20e144ebe86a7451(query.values[0]); // symbol: only match on first part
                containerQuery = $796e972dbf53d5a8$export$20e144ebe86a7451(query.values.slice(1)); // container: match on all but first parts
            } else symbolQuery = query;
            // Convert to symbol picks and apply filtering
            const filteredSymbolPicks = [];
            for(let index = 0; index < symbols.length; index++){
                const symbol = symbols[index];
                const symbolLabel = $jcr1R.trim(symbol.name);
                const symbolLabelWithIcon = `$(symbol-${$4PmRQ.SymbolKinds.toString(symbol.kind) || 'property'}) ${symbolLabel}`;
                const symbolLabelIconOffset = symbolLabelWithIcon.length - symbolLabel.length;
                let containerLabel = symbol.containerName;
                if (options === null || options === void 0 ? void 0 : options.extraContainerLabel) {
                    if (containerLabel) containerLabel = `${options.extraContainerLabel} • ${containerLabel}`;
                    else containerLabel = options.extraContainerLabel;
                }
                let symbolScore = undefined;
                let symbolMatches = undefined;
                let containerScore = undefined;
                let containerMatches = undefined;
                if (query.original.length > filterPos) {
                    // First: try to score on the entire query, it is possible that
                    // the symbol matches perfectly (e.g. searching for "change log"
                    // can be a match on a markdown symbol "change log"). In that
                    // case we want to skip the container query altogether.
                    let skipContainerQuery = false;
                    if (symbolQuery !== query) {
                        [symbolScore, symbolMatches] = $796e972dbf53d5a8$export$e22f4f530abefc49(symbolLabelWithIcon, Object.assign(Object.assign({}, query), {
                            values: undefined /* disable multi-query support */ 
                        }), filterPos, symbolLabelIconOffset);
                        if (typeof symbolScore === 'number') skipContainerQuery = true; // since we consumed the query, skip any container matching
                    }
                    // Otherwise: score on the symbol query and match on the container later
                    if (typeof symbolScore !== 'number') {
                        [symbolScore, symbolMatches] = $796e972dbf53d5a8$export$e22f4f530abefc49(symbolLabelWithIcon, symbolQuery, filterPos, symbolLabelIconOffset);
                        if (typeof symbolScore !== 'number') continue;
                    }
                    // Score by container if specified
                    if (!skipContainerQuery && containerQuery) {
                        if (containerLabel && containerQuery.original.length > 0) [containerScore, containerMatches] = $796e972dbf53d5a8$export$e22f4f530abefc49(containerLabel, containerQuery);
                        if (typeof containerScore !== 'number') continue;
                        if (typeof symbolScore === 'number') symbolScore += containerScore; // boost symbolScore by containerScore
                    }
                }
                const deprecated = symbol.tags && symbol.tags.indexOf(1 /* Deprecated */ ) >= 0;
                filteredSymbolPicks.push({
                    index: index,
                    kind: symbol.kind,
                    score: symbolScore,
                    label: symbolLabelWithIcon,
                    ariaLabel: symbolLabel,
                    description: containerLabel,
                    highlights: deprecated ? undefined : {
                        label: symbolMatches,
                        description: containerMatches
                    },
                    range: {
                        selection: $d00il.Range.collapseToStart(symbol.selectionRange),
                        decoration: symbol.range
                    },
                    strikethrough: deprecated,
                    buttons: (()=>{
                        var _a, _b;
                        const openSideBySideDirection = ((_a = this.options) === null || _a === void 0 ? void 0 : _a.openSideBySideDirection) ? (_b = this.options) === null || _b === void 0 ? void 0 : _b.openSideBySideDirection() : undefined;
                        if (!openSideBySideDirection) return undefined;
                        return [
                            {
                                iconClass: openSideBySideDirection === 'right' ? $awgRE.Codicon.splitHorizontal.classNames : $awgRE.Codicon.splitVertical.classNames,
                                tooltip: openSideBySideDirection === 'right' ? $4dEdH.localize('openToSide', "Open to the Side") : $4dEdH.localize('openToBottom', "Open to the Bottom")
                            }
                        ];
                    })()
                });
            }
            // Sort by score
            const sortedFilteredSymbolPicks = filteredSymbolPicks.sort((symbolA, symbolB)=>filterBySymbolKind ? this.compareByKindAndScore(symbolA, symbolB) : this.compareByScore(symbolA, symbolB)
            );
            // Add separator for types
            // - @  only total number of symbols
            // - @: grouped by symbol kind
            let symbolPicks = [];
            if (filterBySymbolKind) {
                let lastSymbolKind = undefined;
                let lastSeparator = undefined;
                let lastSymbolKindCounter = 0;
                function updateLastSeparatorLabel() {
                    if (lastSeparator && typeof lastSymbolKind === 'number' && lastSymbolKindCounter > 0) lastSeparator.label = $jcr1R.format($dc09d837cfdcf51f$var$NLS_SYMBOL_KIND_CACHE[lastSymbolKind] || $dc09d837cfdcf51f$var$FALLBACK_NLS_SYMBOL_KIND, lastSymbolKindCounter);
                }
                for (const symbolPick of sortedFilteredSymbolPicks){
                    // Found new kind
                    if (lastSymbolKind !== symbolPick.kind) {
                        // Update last separator with number of symbols we found for kind
                        updateLastSeparatorLabel();
                        lastSymbolKind = symbolPick.kind;
                        lastSymbolKindCounter = 1;
                        // Add new separator for new kind
                        lastSeparator = {
                            type: 'separator'
                        };
                        symbolPicks.push(lastSeparator);
                    } else lastSymbolKindCounter++;
                    // Add to final result
                    symbolPicks.push(symbolPick);
                }
                // Update last separator with number of symbols we found for kind
                updateLastSeparatorLabel();
            } else if (sortedFilteredSymbolPicks.length > 0) symbolPicks = [
                {
                    label: $4dEdH.localize('symbols', "symbols ({0})", filteredSymbolPicks.length),
                    type: 'separator'
                },
                ...sortedFilteredSymbolPicks
            ];
            return symbolPicks;
        });
    }
    compareByScore(symbolA, symbolB) {
        if (typeof symbolA.score !== 'number' && typeof symbolB.score === 'number') return 1;
        else if (typeof symbolA.score === 'number' && typeof symbolB.score !== 'number') return -1;
        if (typeof symbolA.score === 'number' && typeof symbolB.score === 'number') {
            if (symbolA.score > symbolB.score) return -1;
            else if (symbolA.score < symbolB.score) return 1;
        }
        if (symbolA.index < symbolB.index) return -1;
        else if (symbolA.index > symbolB.index) return 1;
        return 0;
    }
    compareByKindAndScore(symbolA, symbolB) {
        const kindA = $dc09d837cfdcf51f$var$NLS_SYMBOL_KIND_CACHE[symbolA.kind] || $dc09d837cfdcf51f$var$FALLBACK_NLS_SYMBOL_KIND;
        const kindB = $dc09d837cfdcf51f$var$NLS_SYMBOL_KIND_CACHE[symbolB.kind] || $dc09d837cfdcf51f$var$FALLBACK_NLS_SYMBOL_KIND;
        // Sort by type first if scoped search
        const result = kindA.localeCompare(kindB);
        if (result === 0) return this.compareByScore(symbolA, symbolB);
        return result;
    }
    getDocumentSymbols(document, token) {
        return $dc09d837cfdcf51f$var$__awaiter(this, void 0, void 0, function*() {
            const model = yield $2c061186b8e59add$export$23911836525ed42c.create(document, token);
            return token.isCancellationRequested ? [] : model.asListOfDocumentSymbols();
        });
    }
}
$dc09d837cfdcf51f$export$ceb5fc4d82017d3b.PREFIX = '@';
$dc09d837cfdcf51f$export$ceb5fc4d82017d3b.SCOPE_PREFIX = ':';
$dc09d837cfdcf51f$export$ceb5fc4d82017d3b.PREFIX_BY_CATEGORY = `${$dc09d837cfdcf51f$export$ceb5fc4d82017d3b.PREFIX}${$dc09d837cfdcf51f$export$ceb5fc4d82017d3b.SCOPE_PREFIX}`;
// #region NLS Helpers
const $dc09d837cfdcf51f$var$FALLBACK_NLS_SYMBOL_KIND = $4dEdH.localize('property', "properties ({0})");
const $dc09d837cfdcf51f$var$NLS_SYMBOL_KIND_CACHE = {
    [5 /* Method */ ]: $4dEdH.localize('method', "methods ({0})"),
    [11 /* Function */ ]: $4dEdH.localize('function', "functions ({0})"),
    [8 /* Constructor */ ]: $4dEdH.localize('_constructor', "constructors ({0})"),
    [12 /* Variable */ ]: $4dEdH.localize('variable', "variables ({0})"),
    [4 /* Class */ ]: $4dEdH.localize('class', "classes ({0})"),
    [22 /* Struct */ ]: $4dEdH.localize('struct', "structs ({0})"),
    [23 /* Event */ ]: $4dEdH.localize('event', "events ({0})"),
    [24 /* Operator */ ]: $4dEdH.localize('operator', "operators ({0})"),
    [10 /* Interface */ ]: $4dEdH.localize('interface', "interfaces ({0})"),
    [2 /* Namespace */ ]: $4dEdH.localize('namespace', "namespaces ({0})"),
    [3 /* Package */ ]: $4dEdH.localize('package', "packages ({0})"),
    [25 /* TypeParameter */ ]: $4dEdH.localize('typeParameter', "type parameters ({0})"),
    [1 /* Module */ ]: $4dEdH.localize('modules', "modules ({0})"),
    [6 /* Property */ ]: $4dEdH.localize('property', "properties ({0})"),
    [9 /* Enum */ ]: $4dEdH.localize('enum', "enumerations ({0})"),
    [21 /* EnumMember */ ]: $4dEdH.localize('enumMember', "enumeration members ({0})"),
    [14 /* String */ ]: $4dEdH.localize('string', "strings ({0})"),
    [0 /* File */ ]: $4dEdH.localize('file', "files ({0})"),
    [17 /* Array */ ]: $4dEdH.localize('array', "arrays ({0})"),
    [15 /* Number */ ]: $4dEdH.localize('number', "numbers ({0})"),
    [16 /* Boolean */ ]: $4dEdH.localize('boolean', "booleans ({0})"),
    [18 /* Object */ ]: $4dEdH.localize('object', "objects ({0})"),
    [19 /* Key */ ]: $4dEdH.localize('key', "keys ({0})"),
    [7 /* Field */ ]: $4dEdH.localize('field', "fields ({0})"),
    [13 /* Constant */ ]: $4dEdH.localize('constant', "constants ({0})")
}; //#endregion



var $TezJS = parcelRequire("TezJS");

var $7Oj2p = parcelRequire("7Oj2p");

var $2Qfl0 = parcelRequire("2Qfl0");

var $bxBg7 = parcelRequire("bxBg7");

var $82TRE = parcelRequire("82TRE");

var $5YaSO = parcelRequire("5YaSO");

var $2iJTi = parcelRequire("2iJTi");

var $ibKGQ = parcelRequire("ibKGQ");

var $3XkzC = parcelRequire("3XkzC");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $506c64b5cded2bda$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var $506c64b5cded2bda$var$__param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
};
let $506c64b5cded2bda$export$1891c65a7e9a2e48 = class $506c64b5cded2bda$export$1891c65a7e9a2e48 extends $dc09d837cfdcf51f$exports.AbstractGotoSymbolQuickAccessProvider {
    constructor(editorService){
        super();
        this.editorService = editorService;
        this.onDidActiveTextEditorControlChange = $5YaSO.Event.None;
    }
    get activeTextEditorControl() {
        return $bxBg7.withNullAsUndefined(this.editorService.getFocusedCodeEditor());
    }
};
$506c64b5cded2bda$export$1891c65a7e9a2e48 = $506c64b5cded2bda$var$__decorate([
    $506c64b5cded2bda$var$__param(0, $2Qfl0.ICodeEditorService)
], $506c64b5cded2bda$export$1891c65a7e9a2e48);
$TezJS.Registry.as($7Oj2p.Extensions.Quickaccess).registerQuickAccessProvider({
    ctor: $506c64b5cded2bda$export$1891c65a7e9a2e48,
    prefix: $dc09d837cfdcf51f$exports.AbstractGotoSymbolQuickAccessProvider.PREFIX,
    helpEntries: [
        {
            description: $82TRE.QuickOutlineNLS.quickOutlineActionLabel,
            prefix: $dc09d837cfdcf51f$exports.AbstractGotoSymbolQuickAccessProvider.PREFIX,
            needsEditor: true
        },
        {
            description: $82TRE.QuickOutlineNLS.quickOutlineByCategoryActionLabel,
            prefix: $dc09d837cfdcf51f$exports.AbstractGotoSymbolQuickAccessProvider.PREFIX_BY_CATEGORY,
            needsEditor: true
        }
    ]
});
class $506c64b5cded2bda$export$83454a444c35f5c1 extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: 'editor.action.quickOutline',
            label: $82TRE.QuickOutlineNLS.quickOutlineActionLabel,
            alias: 'Go to Symbol...',
            precondition: $ibKGQ.EditorContextKeys.hasDocumentSymbolProvider,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.focus,
                primary: 3117 /* KeyO */ ,
                weight: 100 /* EditorContrib */ 
            },
            contextMenuOpts: {
                group: 'navigation',
                order: 3
            }
        });
    }
    run(accessor) {
        accessor.get($3XkzC.IQuickInputService).quickAccess.show($dc09d837cfdcf51f$exports.AbstractGotoSymbolQuickAccessProvider.PREFIX);
    }
}
$2iJTi.registerEditorAction($506c64b5cded2bda$export$83454a444c35f5c1);


var $cabf138d6fc5db0d$exports = {};

var $TezJS = parcelRequire("TezJS");

var $7Oj2p = parcelRequire("7Oj2p");

var $82TRE = parcelRequire("82TRE");

var $2Qfl0 = parcelRequire("2Qfl0");

var $3PwGr = parcelRequire("3PwGr");
var $b300ac387e19cb30$exports = {};

$parcel$export($b300ac387e19cb30$exports, "AbstractCommandsQuickAccessProvider", () => $b300ac387e19cb30$export$e2727582285dc787, (v) => $b300ac387e19cb30$export$e2727582285dc787 = v);

var $kJ8UG = parcelRequire("kJ8UG");

var $bxBg7 = parcelRequire("bxBg7");

var $4dEdH = parcelRequire("4dEdH");
function $fe4e8839960fa4d7$var$exceptionToErrorMessage(exception, verbose) {
    if (verbose && (exception.stack || exception.stacktrace)) return $4dEdH.localize('stackTrace.format', "{0}: {1}", $fe4e8839960fa4d7$var$detectSystemErrorMessage(exception), $fe4e8839960fa4d7$var$stackToString(exception.stack) || $fe4e8839960fa4d7$var$stackToString(exception.stacktrace));
    return $fe4e8839960fa4d7$var$detectSystemErrorMessage(exception);
}
function $fe4e8839960fa4d7$var$stackToString(stack) {
    if (Array.isArray(stack)) return stack.join('\n');
    return stack;
}
function $fe4e8839960fa4d7$var$detectSystemErrorMessage(exception) {
    // See https://nodejs.org/api/errors.html#errors_class_system_error
    if (typeof exception.code === 'string' && typeof exception.errno === 'number' && typeof exception.syscall === 'string') return $4dEdH.localize('nodeExceptionMessage', "A system error occurred ({0})", exception.message);
    return exception.message || $4dEdH.localize('error.defaultMessage', "An unknown error occurred. Please consult the log for more details.");
}
function $fe4e8839960fa4d7$export$95506c204c060a3(error = null, verbose = false) {
    if (!error) return $4dEdH.localize('error.defaultMessage', "An unknown error occurred. Please consult the log for more details.");
    if (Array.isArray(error)) {
        const errors = $kJ8UG.coalesce(error);
        const msg = $fe4e8839960fa4d7$export$95506c204c060a3(errors[0], verbose);
        if (errors.length > 1) return $4dEdH.localize('error.moreErrors', "{0} ({1} errors in total)", msg, errors.length);
        return msg;
    }
    if ($bxBg7.isString(error)) return error;
    if (error.detail) {
        const detail = error.detail;
        if (detail.error) return $fe4e8839960fa4d7$var$exceptionToErrorMessage(detail.error, verbose);
        if (detail.exception) return $fe4e8839960fa4d7$var$exceptionToErrorMessage(detail.exception, verbose);
    }
    if (error.stack) return $fe4e8839960fa4d7$var$exceptionToErrorMessage(error, verbose);
    if (error.message) return error.message;
    return $4dEdH.localize('error.defaultMessage', "An unknown error occurred. Please consult the log for more details.");
}



var $gPkHZ = parcelRequire("gPkHZ");

var $lk06m = parcelRequire("lk06m");

var $9cWcn = parcelRequire("9cWcn");

var $askDf = parcelRequire("askDf");

var $2NmM0 = parcelRequire("2NmM0");

var $bxBg7 = parcelRequire("bxBg7");

var $4dEdH = parcelRequire("4dEdH");

var $8tcMz = parcelRequire("8tcMz");

var $35IZ9 = parcelRequire("35IZ9");

var $iERup = parcelRequire("iERup");

var $fdGPu = parcelRequire("fdGPu");

var $7IxGd = parcelRequire("7IxGd");
var $8a24db115be4b14e$exports = {};

$parcel$export($8a24db115be4b14e$exports, "PickerQuickAccessProvider", () => $8a24db115be4b14e$export$76827b77f41011c2, (v) => $8a24db115be4b14e$export$76827b77f41011c2 = v);

var $6bXyA = parcelRequire("6bXyA");

var $giPcZ = parcelRequire("giPcZ");

var $9cWcn = parcelRequire("9cWcn");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $8a24db115be4b14e$var$__awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var $8a24db115be4b14e$export$43c639767ba93dcc;
(function($8a24db115be4b14e$export$43c639767ba93dcc) {
    /**
     * Do nothing after the button was clicked.
     */ $8a24db115be4b14e$export$43c639767ba93dcc[$8a24db115be4b14e$export$43c639767ba93dcc["NO_ACTION"] = 0] = "NO_ACTION";
    /**
     * Close the picker.
     */ $8a24db115be4b14e$export$43c639767ba93dcc[$8a24db115be4b14e$export$43c639767ba93dcc["CLOSE_PICKER"] = 1] = "CLOSE_PICKER";
    /**
     * Update the results of the picker.
     */ $8a24db115be4b14e$export$43c639767ba93dcc[$8a24db115be4b14e$export$43c639767ba93dcc["REFRESH_PICKER"] = 2] = "REFRESH_PICKER";
    /**
     * Remove the item from the picker.
     */ $8a24db115be4b14e$export$43c639767ba93dcc[$8a24db115be4b14e$export$43c639767ba93dcc["REMOVE_ITEM"] = 3] = "REMOVE_ITEM";
})($8a24db115be4b14e$export$43c639767ba93dcc || ($8a24db115be4b14e$export$43c639767ba93dcc = {}));
function $8a24db115be4b14e$var$isPicksWithActive(obj) {
    const candidate = obj;
    return Array.isArray(candidate.items);
}
function $8a24db115be4b14e$var$isFastAndSlowPicks(obj) {
    const candidate = obj;
    return !!candidate.picks && candidate.additionalPicks instanceof Promise;
}
class $8a24db115be4b14e$export$76827b77f41011c2 extends $9cWcn.Disposable {
    constructor(prefix, options){
        super();
        this.prefix = prefix;
        this.options = options;
    }
    provide(picker, token) {
        var _a1;
        const disposables = new $9cWcn.DisposableStore();
        // Apply options if any
        picker.canAcceptInBackground = !!((_a1 = this.options) === null || _a1 === void 0 ? void 0 : _a1.canAcceptInBackground);
        // Disable filtering & sorting, we control the results
        picker.matchOnLabel = picker.matchOnDescription = picker.matchOnDetail = picker.sortByLabel = false;
        // Set initial picks and update on type
        let picksCts = undefined;
        const picksDisposable = disposables.add(new $9cWcn.MutableDisposable());
        const updatePickerItems = ()=>$8a24db115be4b14e$var$__awaiter(this, void 0, void 0, function*() {
                const picksDisposables = picksDisposable.value = new $9cWcn.DisposableStore();
                // Cancel any previous ask for picks and busy
                picksCts === null || picksCts === void 0 || picksCts.dispose(true);
                picker.busy = false;
                // Create new cancellation source for this run
                picksCts = new $giPcZ.CancellationTokenSource(token);
                // Collect picks and support both long running and short or combined
                const picksToken = picksCts.token;
                const picksFilter = picker.value.substr(this.prefix.length).trim();
                const providedPicks = this._getPicks(picksFilter, picksDisposables, picksToken);
                const applyPicks = (picks, skipEmpty)=>{
                    var _a;
                    let items;
                    let activeItem = undefined;
                    if ($8a24db115be4b14e$var$isPicksWithActive(picks)) {
                        items = picks.items;
                        activeItem = picks.active;
                    } else items = picks;
                    if (items.length === 0) {
                        if (skipEmpty) return false;
                        if (picksFilter.length > 0 && ((_a = this.options) === null || _a === void 0 ? void 0 : _a.noResultsPick)) items = [
                            this.options.noResultsPick
                        ];
                    }
                    picker.items = items;
                    if (activeItem) picker.activeItems = [
                        activeItem
                    ];
                    return true;
                };
                // No Picks
                if (providedPicks === null) ;
                else if ($8a24db115be4b14e$var$isFastAndSlowPicks(providedPicks)) {
                    let fastPicksApplied = false;
                    let slowPicksApplied = false;
                    yield Promise.all([
                        // Fast Picks: to reduce amount of flicker, we race against
                        // the slow picks over 500ms and then set the fast picks.
                        // If the slow picks are faster, we reduce the flicker by
                        // only setting the items once.
                        (()=>$8a24db115be4b14e$var$__awaiter(this, void 0, void 0, function*() {
                                yield $6bXyA.timeout($8a24db115be4b14e$export$76827b77f41011c2.FAST_PICKS_RACE_DELAY);
                                if (picksToken.isCancellationRequested) return;
                                if (!slowPicksApplied) fastPicksApplied = applyPicks(providedPicks.picks, true);
                            })
                        )(),
                        // Slow Picks: we await the slow picks and then set them at
                        // once together with the fast picks, but only if we actually
                        // have additional results.
                        (()=>$8a24db115be4b14e$var$__awaiter(this, void 0, void 0, function*() {
                                picker.busy = true;
                                try {
                                    const awaitedAdditionalPicks = yield providedPicks.additionalPicks;
                                    if (picksToken.isCancellationRequested) return;
                                    let picks;
                                    let activePick = undefined;
                                    if ($8a24db115be4b14e$var$isPicksWithActive(providedPicks.picks)) {
                                        picks = providedPicks.picks.items;
                                        activePick = providedPicks.picks.active;
                                    } else picks = providedPicks.picks;
                                    let additionalPicks;
                                    let additionalActivePick = undefined;
                                    if ($8a24db115be4b14e$var$isPicksWithActive(awaitedAdditionalPicks)) {
                                        additionalPicks = awaitedAdditionalPicks.items;
                                        additionalActivePick = awaitedAdditionalPicks.active;
                                    } else additionalPicks = awaitedAdditionalPicks;
                                    if (additionalPicks.length > 0 || !fastPicksApplied) {
                                        // If we do not have any activePick or additionalActivePick
                                        // we try to preserve the currently active pick from the
                                        // fast results. This fixes an issue where the user might
                                        // have made a pick active before the additional results
                                        // kick in.
                                        // See https://github.com/microsoft/vscode/issues/102480
                                        let fallbackActivePick = undefined;
                                        if (!activePick && !additionalActivePick) {
                                            const fallbackActivePickCandidate = picker.activeItems[0];
                                            if (fallbackActivePickCandidate && picks.indexOf(fallbackActivePickCandidate) !== -1) fallbackActivePick = fallbackActivePickCandidate;
                                        }
                                        applyPicks({
                                            items: [
                                                ...picks,
                                                ...additionalPicks
                                            ],
                                            active: activePick || additionalActivePick || fallbackActivePick
                                        });
                                    }
                                } finally{
                                    if (!picksToken.isCancellationRequested) picker.busy = false;
                                    slowPicksApplied = true;
                                }
                            })
                        )()
                    ]);
                } else if (!(providedPicks instanceof Promise)) applyPicks(providedPicks);
                else {
                    picker.busy = true;
                    try {
                        const awaitedPicks = yield providedPicks;
                        if (picksToken.isCancellationRequested) return;
                        applyPicks(awaitedPicks);
                    } finally{
                        if (!picksToken.isCancellationRequested) picker.busy = false;
                    }
                }
            })
        ;
        disposables.add(picker.onDidChangeValue(()=>updatePickerItems()
        ));
        updatePickerItems();
        // Accept the pick on accept and hide picker
        disposables.add(picker.onDidAccept((event)=>{
            const [item] = picker.selectedItems;
            if (typeof (item === null || item === void 0 ? void 0 : item.accept) === 'function') {
                if (!event.inBackground) picker.hide(); // hide picker unless we accept in background
                item.accept(picker.keyMods, event);
            }
        }));
        // Trigger the pick with button index if button triggered
        disposables.add(picker.onDidTriggerItemButton(({ button: button , item: item  })=>$8a24db115be4b14e$var$__awaiter(this, void 0, void 0, function*() {
                var _b, _c;
                if (typeof item.trigger === 'function') {
                    const buttonIndex = (_c = (_b = item.buttons) === null || _b === void 0 ? void 0 : _b.indexOf(button)) !== null && _c !== void 0 ? _c : -1;
                    if (buttonIndex >= 0) {
                        const result = item.trigger(buttonIndex, picker.keyMods);
                        const action = typeof result === 'number' ? result : yield result;
                        if (token.isCancellationRequested) return;
                        switch(action){
                            case $8a24db115be4b14e$export$43c639767ba93dcc.NO_ACTION:
                                break;
                            case $8a24db115be4b14e$export$43c639767ba93dcc.CLOSE_PICKER:
                                picker.hide();
                                break;
                            case $8a24db115be4b14e$export$43c639767ba93dcc.REFRESH_PICKER:
                                updatePickerItems();
                                break;
                            case $8a24db115be4b14e$export$43c639767ba93dcc.REMOVE_ITEM:
                                const index = picker.items.indexOf(item);
                                if (index !== -1) {
                                    const items = picker.items.slice();
                                    const removed = items.splice(index, 1);
                                    const activeItems = picker.activeItems.filter((activeItem)=>activeItem !== removed[0]
                                    );
                                    const keepScrollPositionBefore = picker.keepScrollPosition;
                                    picker.keepScrollPosition = true;
                                    picker.items = items;
                                    if (activeItems) picker.activeItems = activeItems;
                                    picker.keepScrollPosition = keepScrollPositionBefore;
                                }
                                break;
                        }
                    }
                }
            })
        ));
        return disposables;
    }
}
$8a24db115be4b14e$export$76827b77f41011c2.FAST_PICKS_RACE_DELAY = 200; // timeout before we accept fast results before slow results are present



var $2AUoS = parcelRequire("2AUoS");

var $lMGba = parcelRequire("lMGba");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $b300ac387e19cb30$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var $b300ac387e19cb30$var$__param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
};
var $b300ac387e19cb30$var$__awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
let $b300ac387e19cb30$export$e2727582285dc787 = class $b300ac387e19cb30$export$e2727582285dc787 extends $8a24db115be4b14e$exports.PickerQuickAccessProvider {
    constructor(options, instantiationService, keybindingService, commandService, telemetryService, dialogService){
        super($b300ac387e19cb30$export$e2727582285dc787.PREFIX, options);
        this.instantiationService = instantiationService;
        this.keybindingService = keybindingService;
        this.commandService = commandService;
        this.telemetryService = telemetryService;
        this.dialogService = dialogService;
        this.commandsHistory = this._register(this.instantiationService.createInstance($b300ac387e19cb30$export$57d1125e86e67be7));
        this.options = options;
    }
    _getPicks(filter, disposables, token) {
        return $b300ac387e19cb30$var$__awaiter(this, void 0, void 0, function*() {
            // Ask subclass for all command picks
            const allCommandPicks = yield this.getCommandPicks(disposables, token);
            if (token.isCancellationRequested) return [];
            // Filter
            const filteredCommandPicks = [];
            for (const commandPick of allCommandPicks){
                const labelHighlights = $bxBg7.withNullAsUndefined($b300ac387e19cb30$export$e2727582285dc787.WORD_FILTER(filter, commandPick.label));
                const aliasHighlights = commandPick.commandAlias ? $bxBg7.withNullAsUndefined($b300ac387e19cb30$export$e2727582285dc787.WORD_FILTER(filter, commandPick.commandAlias)) : undefined;
                // Add if matching in label or alias
                if (labelHighlights || aliasHighlights) {
                    commandPick.highlights = {
                        label: labelHighlights,
                        detail: this.options.showAlias ? aliasHighlights : undefined
                    };
                    filteredCommandPicks.push(commandPick);
                } else if (filter === commandPick.commandId) filteredCommandPicks.push(commandPick);
            }
            // Add description to commands that have duplicate labels
            const mapLabelToCommand = new Map();
            for (const commandPick1 of filteredCommandPicks){
                const existingCommandForLabel = mapLabelToCommand.get(commandPick1.label);
                if (existingCommandForLabel) {
                    commandPick1.description = commandPick1.commandId;
                    existingCommandForLabel.description = existingCommandForLabel.commandId;
                } else mapLabelToCommand.set(commandPick1.label, commandPick1);
            }
            // Sort by MRU order and fallback to name otherwise
            filteredCommandPicks.sort((commandPickA, commandPickB)=>{
                const commandACounter = this.commandsHistory.peek(commandPickA.commandId);
                const commandBCounter = this.commandsHistory.peek(commandPickB.commandId);
                if (commandACounter && commandBCounter) return commandACounter > commandBCounter ? -1 : 1; // use more recently used command before older
                if (commandACounter) return -1; // first command was used, so it wins over the non used one
                if (commandBCounter) return 1; // other command was used so it wins over the command
                // both commands were never used, so we sort by name
                return commandPickA.label.localeCompare(commandPickB.label);
            });
            const commandPicks = [];
            let addSeparator = false;
            for(let i = 0; i < filteredCommandPicks.length; i++){
                const commandPick = filteredCommandPicks[i];
                const keybinding = this.keybindingService.lookupKeybinding(commandPick.commandId);
                const ariaLabel = keybinding ? $4dEdH.localize('commandPickAriaLabelWithKeybinding', "{0}, {1}", commandPick.label, keybinding.getAriaLabel()) : commandPick.label;
                // Separator: recently used
                if (i === 0 && this.commandsHistory.peek(commandPick.commandId)) {
                    commandPicks.push({
                        type: 'separator',
                        label: $4dEdH.localize('recentlyUsed', "recently used")
                    });
                    addSeparator = true;
                }
                // Separator: other commands
                if (i !== 0 && addSeparator && !this.commandsHistory.peek(commandPick.commandId)) {
                    commandPicks.push({
                        type: 'separator',
                        label: $4dEdH.localize('morecCommands', "other commands")
                    });
                    addSeparator = false; // only once
                }
                // Command
                commandPicks.push(Object.assign(Object.assign({}, commandPick), {
                    ariaLabel: ariaLabel,
                    detail: this.options.showAlias && commandPick.commandAlias !== commandPick.label ? commandPick.commandAlias : undefined,
                    keybinding: keybinding,
                    accept: ()=>$b300ac387e19cb30$var$__awaiter(this, void 0, void 0, function*() {
                            // Add to history
                            this.commandsHistory.push(commandPick.commandId);
                            // Telementry
                            this.telemetryService.publicLog2('workbenchActionExecuted', {
                                id: commandPick.commandId,
                                from: 'quick open'
                            });
                            // Run
                            try {
                                yield this.commandService.executeCommand(commandPick.commandId);
                            } catch (error) {
                                if (!$gPkHZ.isPromiseCanceledError(error)) this.dialogService.show($2NmM0.default.Error, $4dEdH.localize('canNotRun', "Command '{0}' resulted in an error ({1})", commandPick.label, $fe4e8839960fa4d7$export$95506c204c060a3(error)));
                            }
                        })
                }));
            }
            return commandPicks;
        });
    }
};
$b300ac387e19cb30$export$e2727582285dc787.PREFIX = '>';
$b300ac387e19cb30$export$e2727582285dc787.WORD_FILTER = $lk06m.or($lk06m.matchesPrefix, $lk06m.matchesWords, $lk06m.matchesContiguousSubString);
$b300ac387e19cb30$export$e2727582285dc787 = $b300ac387e19cb30$var$__decorate([
    $b300ac387e19cb30$var$__param(1, $fdGPu.IInstantiationService),
    $b300ac387e19cb30$var$__param(2, $7IxGd.IKeybindingService),
    $b300ac387e19cb30$var$__param(3, $8tcMz.ICommandService),
    $b300ac387e19cb30$var$__param(4, $lMGba.ITelemetryService),
    $b300ac387e19cb30$var$__param(5, $iERup.IDialogService)
], $b300ac387e19cb30$export$e2727582285dc787);
let $b300ac387e19cb30$export$57d1125e86e67be7 = class $b300ac387e19cb30$export$57d1125e86e67be7 extends $9cWcn.Disposable {
    constructor(storageService, configurationService){
        super();
        this.storageService = storageService;
        this.configurationService = configurationService;
        this.configuredCommandsHistoryLength = 0;
        this.updateConfiguration();
        this.load();
        this.registerListeners();
    }
    registerListeners() {
        this._register(this.configurationService.onDidChangeConfiguration(()=>this.updateConfiguration()
        ));
    }
    updateConfiguration() {
        this.configuredCommandsHistoryLength = $b300ac387e19cb30$export$57d1125e86e67be7.getConfiguredCommandHistoryLength(this.configurationService);
        if ($b300ac387e19cb30$export$57d1125e86e67be7.cache && $b300ac387e19cb30$export$57d1125e86e67be7.cache.limit !== this.configuredCommandsHistoryLength) {
            $b300ac387e19cb30$export$57d1125e86e67be7.cache.limit = this.configuredCommandsHistoryLength;
            $b300ac387e19cb30$export$57d1125e86e67be7.saveState(this.storageService);
        }
    }
    load() {
        const raw = this.storageService.get($b300ac387e19cb30$export$57d1125e86e67be7.PREF_KEY_CACHE, 0 /* GLOBAL */ );
        let serializedCache;
        if (raw) try {
            serializedCache = JSON.parse(raw);
        } catch (error) {
        // invalid data
        }
        const cache = $b300ac387e19cb30$export$57d1125e86e67be7.cache = new $askDf.LRUCache(this.configuredCommandsHistoryLength, 1);
        if (serializedCache) {
            let entries;
            if (serializedCache.usesLRU) entries = serializedCache.entries;
            else entries = serializedCache.entries.sort((a, b)=>a.value - b.value
            );
            entries.forEach((entry)=>cache.set(entry.key, entry.value)
            );
        }
        $b300ac387e19cb30$export$57d1125e86e67be7.counter = this.storageService.getNumber($b300ac387e19cb30$export$57d1125e86e67be7.PREF_KEY_COUNTER, 0 /* GLOBAL */ , $b300ac387e19cb30$export$57d1125e86e67be7.counter);
    }
    push(commandId) {
        if (!$b300ac387e19cb30$export$57d1125e86e67be7.cache) return;
        $b300ac387e19cb30$export$57d1125e86e67be7.cache.set(commandId, $b300ac387e19cb30$export$57d1125e86e67be7.counter++); // set counter to command
        $b300ac387e19cb30$export$57d1125e86e67be7.saveState(this.storageService);
    }
    peek(commandId) {
        var _a;
        return (_a = $b300ac387e19cb30$export$57d1125e86e67be7.cache) === null || _a === void 0 ? void 0 : _a.peek(commandId);
    }
    static saveState(storageService) {
        if (!$b300ac387e19cb30$export$57d1125e86e67be7.cache) return;
        const serializedCache = {
            usesLRU: true,
            entries: []
        };
        $b300ac387e19cb30$export$57d1125e86e67be7.cache.forEach((value, key)=>serializedCache.entries.push({
                key: key,
                value: value
            })
        );
        storageService.store($b300ac387e19cb30$export$57d1125e86e67be7.PREF_KEY_CACHE, JSON.stringify(serializedCache), 0 /* GLOBAL */ , 0 /* USER */ );
        storageService.store($b300ac387e19cb30$export$57d1125e86e67be7.PREF_KEY_COUNTER, $b300ac387e19cb30$export$57d1125e86e67be7.counter, 0 /* GLOBAL */ , 0 /* USER */ );
    }
    static getConfiguredCommandHistoryLength(configurationService) {
        var _a, _b;
        const config = configurationService.getValue();
        const configuredCommandHistoryLength = (_b = (_a = config.workbench) === null || _a === void 0 ? void 0 : _a.commandPalette) === null || _b === void 0 ? void 0 : _b.history;
        if (typeof configuredCommandHistoryLength === 'number') return configuredCommandHistoryLength;
        return $b300ac387e19cb30$export$57d1125e86e67be7.DEFAULT_COMMANDS_HISTORY_LENGTH;
    }
};
$b300ac387e19cb30$export$57d1125e86e67be7.DEFAULT_COMMANDS_HISTORY_LENGTH = 50;
$b300ac387e19cb30$export$57d1125e86e67be7.PREF_KEY_CACHE = 'commandPalette.mru.cache';
$b300ac387e19cb30$export$57d1125e86e67be7.PREF_KEY_COUNTER = 'commandPalette.mru.counter';
$b300ac387e19cb30$export$57d1125e86e67be7.counter = 1;
$b300ac387e19cb30$export$57d1125e86e67be7 = $b300ac387e19cb30$var$__decorate([
    $b300ac387e19cb30$var$__param(0, $2AUoS.IStorageService),
    $b300ac387e19cb30$var$__param(1, $35IZ9.IConfigurationService)
], $b300ac387e19cb30$export$57d1125e86e67be7);


class $aff895e6389c7d96$export$e085036133fffa80 extends $b300ac387e19cb30$exports.AbstractCommandsQuickAccessProvider {
    constructor(options, instantiationService, keybindingService, commandService, telemetryService, dialogService){
        super(options, instantiationService, keybindingService, commandService, telemetryService, dialogService);
    }
    getCodeEditorCommandPicks() {
        const activeTextEditorControl = this.activeTextEditorControl;
        if (!activeTextEditorControl) return [];
        const editorCommandPicks = [];
        for (const editorAction of activeTextEditorControl.getSupportedActions())editorCommandPicks.push({
            commandId: editorAction.id,
            commandAlias: editorAction.alias,
            label: $3PwGr.stripIcons(editorAction.label) || editorAction.id
        });
        return editorCommandPicks;
    }
}



var $bxBg7 = parcelRequire("bxBg7");

var $fdGPu = parcelRequire("fdGPu");

var $7IxGd = parcelRequire("7IxGd");

var $8tcMz = parcelRequire("8tcMz");

var $lMGba = parcelRequire("lMGba");

var $iERup = parcelRequire("iERup");

var $2iJTi = parcelRequire("2iJTi");

var $ibKGQ = parcelRequire("ibKGQ");

var $3XkzC = parcelRequire("3XkzC");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $cabf138d6fc5db0d$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var $cabf138d6fc5db0d$var$__param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
};
var $cabf138d6fc5db0d$var$__awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
let $cabf138d6fc5db0d$export$b53f517d2ef5810d = class $cabf138d6fc5db0d$export$b53f517d2ef5810d extends $aff895e6389c7d96$export$e085036133fffa80 {
    constructor(instantiationService, codeEditorService, keybindingService, commandService, telemetryService, dialogService){
        super({
            showAlias: false
        }, instantiationService, keybindingService, commandService, telemetryService, dialogService);
        this.codeEditorService = codeEditorService;
    }
    get activeTextEditorControl() {
        return $bxBg7.withNullAsUndefined(this.codeEditorService.getFocusedCodeEditor());
    }
    getCommandPicks() {
        return $cabf138d6fc5db0d$var$__awaiter(this, void 0, void 0, function*() {
            return this.getCodeEditorCommandPicks();
        });
    }
};
$cabf138d6fc5db0d$export$b53f517d2ef5810d = $cabf138d6fc5db0d$var$__decorate([
    $cabf138d6fc5db0d$var$__param(0, $fdGPu.IInstantiationService),
    $cabf138d6fc5db0d$var$__param(1, $2Qfl0.ICodeEditorService),
    $cabf138d6fc5db0d$var$__param(2, $7IxGd.IKeybindingService),
    $cabf138d6fc5db0d$var$__param(3, $8tcMz.ICommandService),
    $cabf138d6fc5db0d$var$__param(4, $lMGba.ITelemetryService),
    $cabf138d6fc5db0d$var$__param(5, $iERup.IDialogService)
], $cabf138d6fc5db0d$export$b53f517d2ef5810d);
$TezJS.Registry.as($7Oj2p.Extensions.Quickaccess).registerQuickAccessProvider({
    ctor: $cabf138d6fc5db0d$export$b53f517d2ef5810d,
    prefix: $cabf138d6fc5db0d$export$b53f517d2ef5810d.PREFIX,
    helpEntries: [
        {
            description: $82TRE.QuickCommandNLS.quickCommandHelp,
            needsEditor: true
        }
    ]
});
class $cabf138d6fc5db0d$export$83454a444c35f5c1 extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: 'editor.action.quickCommand',
            label: $82TRE.QuickCommandNLS.quickCommandActionLabel,
            alias: 'Command Palette',
            precondition: undefined,
            kbOpts: {
                kbExpr: $ibKGQ.EditorContextKeys.focus,
                primary: 59 /* F1 */ ,
                weight: 100 /* EditorContrib */ 
            },
            contextMenuOpts: {
                group: 'z_commands',
                order: 1
            }
        });
    }
    run(accessor) {
        accessor.get($3XkzC.IQuickInputService).quickAccess.show($cabf138d6fc5db0d$export$b53f517d2ef5810d.PREFIX);
    }
}
$2iJTi.registerEditorAction($cabf138d6fc5db0d$export$83454a444c35f5c1);


var $f217809784e9ca11$exports = {};

var $2iJTi = parcelRequire("2iJTi");

var $2Qfl0 = parcelRequire("2Qfl0");


var $35IZ9 = parcelRequire("35IZ9");

var $cxCeF = parcelRequire("cxCeF");

var $fdGPu = parcelRequire("fdGPu");

var $kCOKl = parcelRequire("kCOKl");

var $2AUoS = parcelRequire("2AUoS");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/ var $f217809784e9ca11$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var $f217809784e9ca11$var$__param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
};
let $f217809784e9ca11$export$79f48fa51423fd3f = class $f217809784e9ca11$export$79f48fa51423fd3f extends $356aea24a08017bc$exports.ReferencesController {
    constructor(editor, contextKeyService, editorService, notificationService, instantiationService, storageService, configurationService){
        super(true, editor, contextKeyService, editorService, notificationService, instantiationService, storageService, configurationService);
    }
};
$f217809784e9ca11$export$79f48fa51423fd3f = $f217809784e9ca11$var$__decorate([
    $f217809784e9ca11$var$__param(1, $cxCeF.IContextKeyService),
    $f217809784e9ca11$var$__param(2, $2Qfl0.ICodeEditorService),
    $f217809784e9ca11$var$__param(3, $kCOKl.INotificationService),
    $f217809784e9ca11$var$__param(4, $fdGPu.IInstantiationService),
    $f217809784e9ca11$var$__param(5, $2AUoS.IStorageService),
    $f217809784e9ca11$var$__param(6, $35IZ9.IConfigurationService)
], $f217809784e9ca11$export$79f48fa51423fd3f);
$2iJTi.registerEditorContribution($356aea24a08017bc$exports.ReferencesController.ID, $f217809784e9ca11$export$79f48fa51423fd3f);



var $2iJTi = parcelRequire("2iJTi");

var $kJEQt = parcelRequire("kJEQt");

var $82TRE = parcelRequire("82TRE");
class $59fb0073f4c38650$var$ToggleHighContrast extends $2iJTi.EditorAction {
    constructor(){
        super({
            id: 'editor.action.toggleHighContrast',
            label: $82TRE.ToggleHighContrastNLS.toggleHighContrast,
            alias: 'Toggle High Contrast Theme',
            precondition: undefined
        });
        this._originalThemeName = null;
    }
    run(accessor, editor) {
        const standaloneThemeService = accessor.get($kJEQt.IStandaloneThemeService);
        if (this._originalThemeName) {
            // We must toggle back to the integrator's theme
            standaloneThemeService.setTheme(this._originalThemeName);
            this._originalThemeName = null;
        } else {
            this._originalThemeName = standaloneThemeService.getColorTheme().themeName;
            standaloneThemeService.setTheme('hc-black');
        }
    }
}
$2iJTi.registerEditorAction($59fb0073f4c38650$var$ToggleHighContrast);


parcelRequire("leKFq");




var $leKFq = parcelRequire("leKFq");
var $073d2c6cc6763899$exports = {};
(function(scope) {
    function F(arity, fun, wrapper) {
        wrapper.a = arity;
        wrapper.f = fun;
        return wrapper;
    }
    function F2(fun) {
        return F(2, fun, function(a) {
            return function(b) {
                return fun(a, b);
            };
        });
    }
    function F3(fun) {
        return F(3, fun, function(a) {
            return function(b) {
                return function(c) {
                    return fun(a, b, c);
                };
            };
        });
    }
    function F4(fun) {
        return F(4, fun, function(a) {
            return function(b) {
                return function(c) {
                    return function(d) {
                        return fun(a, b, c, d);
                    };
                };
            };
        });
    }
    function F5(fun) {
        return F(5, fun, function(a) {
            return function(b) {
                return function(c) {
                    return function(d) {
                        return function(e) {
                            return fun(a, b, c, d, e);
                        };
                    };
                };
            };
        });
    }
    function F6(fun) {
        return F(6, fun, function(a) {
            return function(b) {
                return function(c) {
                    return function(d) {
                        return function(e) {
                            return function(f) {
                                return fun(a, b, c, d, e, f);
                            };
                        };
                    };
                };
            };
        });
    }
    function F7(fun) {
        return F(7, fun, function(a) {
            return function(b) {
                return function(c) {
                    return function(d) {
                        return function(e) {
                            return function(f) {
                                return function(g) {
                                    return fun(a, b, c, d, e, f, g);
                                };
                            };
                        };
                    };
                };
            };
        });
    }
    function F8(fun) {
        return F(8, fun, function(a) {
            return function(b) {
                return function(c) {
                    return function(d) {
                        return function(e) {
                            return function(f) {
                                return function(g) {
                                    return function(h) {
                                        return fun(a, b, c, d, e, f, g, h);
                                    };
                                };
                            };
                        };
                    };
                };
            };
        });
    }
    function F9(fun) {
        return F(9, fun, function(a) {
            return function(b) {
                return function(c) {
                    return function(d) {
                        return function(e) {
                            return function(f) {
                                return function(g) {
                                    return function(h) {
                                        return function(i) {
                                            return fun(a, b, c, d, e, f, g, h, i);
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        });
    }
    function A2(fun, a, b) {
        return fun.a === 2 ? fun.f(a, b) : fun(a)(b);
    }
    function A3(fun, a, b, c) {
        return fun.a === 3 ? fun.f(a, b, c) : fun(a)(b)(c);
    }
    function A4(fun, a, b, c, d) {
        return fun.a === 4 ? fun.f(a, b, c, d) : fun(a)(b)(c)(d);
    }
    function A5(fun, a, b, c, d, e) {
        return fun.a === 5 ? fun.f(a, b, c, d, e) : fun(a)(b)(c)(d)(e);
    }
    function A6(fun, a, b, c, d, e, f) {
        return fun.a === 6 ? fun.f(a, b, c, d, e, f) : fun(a)(b)(c)(d)(e)(f);
    }
    function A7(fun, a, b, c, d, e, f, g) {
        return fun.a === 7 ? fun.f(a, b, c, d, e, f, g) : fun(a)(b)(c)(d)(e)(f)(g);
    }
    function A8(fun, a, b, c, d, e, f, g, h) {
        return fun.a === 8 ? fun.f(a, b, c, d, e, f, g, h) : fun(a)(b)(c)(d)(e)(f)(g)(h);
    }
    function A9(fun, a, b, c, d, e, f, g, h, i) {
        return fun.a === 9 ? fun.f(a, b, c, d, e, f, g, h, i) : fun(a)(b)(c)(d)(e)(f)(g)(h)(i);
    }
    console.warn('Compiled in DEV mode. Follow the advice at https://elm-lang.org/0.19.1/optimize for better performance and smaller assets.');
    var _JsArray_empty = [];
    function _JsArray_singleton(value) {
        return [
            value
        ];
    }
    function _JsArray_length(array) {
        return array.length;
    }
    var _JsArray_initialize = F3(function(size, offset, func) {
        var result = new Array(size);
        for(var i = 0; i < size; i++)result[i] = func(offset + i);
        return result;
    });
    var _JsArray_initializeFromList = F2(function(max, ls) {
        var result = new Array(max);
        for(var i = 0; i < max && ls.b; i++){
            result[i] = ls.a;
            ls = ls.b;
        }
        result.length = i;
        return _Utils_Tuple2(result, ls);
    });
    var _JsArray_unsafeGet = F2(function(index, array) {
        return array[index];
    });
    var _JsArray_unsafeSet = F3(function(index, value, array) {
        var length = array.length;
        var result = new Array(length);
        for(var i = 0; i < length; i++)result[i] = array[i];
        result[index] = value;
        return result;
    });
    var _JsArray_push = F2(function(value, array) {
        var length = array.length;
        var result = new Array(length + 1);
        for(var i = 0; i < length; i++)result[i] = array[i];
        result[length] = value;
        return result;
    });
    var _JsArray_foldl = F3(function(func, acc, array) {
        var length = array.length;
        for(var i = 0; i < length; i++)acc = A2(func, array[i], acc);
        return acc;
    });
    var _JsArray_foldr = F3(function(func, acc, array) {
        for(var i = array.length - 1; i >= 0; i--)acc = A2(func, array[i], acc);
        return acc;
    });
    var _JsArray_map = F2(function(func, array) {
        var length = array.length;
        var result = new Array(length);
        for(var i = 0; i < length; i++)result[i] = func(array[i]);
        return result;
    });
    var _JsArray_indexedMap = F3(function(func, offset, array) {
        var length = array.length;
        var result = new Array(length);
        for(var i = 0; i < length; i++)result[i] = A2(func, offset + i, array[i]);
        return result;
    });
    var _JsArray_slice = F3(function(from, to, array) {
        return array.slice(from, to);
    });
    var _JsArray_appendN = F3(function(n, dest, source) {
        var destLen = dest.length;
        var itemsToCopy = n - destLen;
        if (itemsToCopy > source.length) itemsToCopy = source.length;
        var size = destLen + itemsToCopy;
        var result = new Array(size);
        for(var i = 0; i < destLen; i++)result[i] = dest[i];
        for(var i = 0; i < itemsToCopy; i++)result[i + destLen] = source[i];
        return result;
    });
    // LOG
    var _Debug_log_UNUSED = F2(function(tag, value) {
        return value;
    });
    var _Debug_log = F2(function(tag, value) {
        console.log(tag + ': ' + _Debug_toString(value));
        return value;
    });
    // TODOS
    function _Debug_todo(moduleName, region) {
        return function(message) {
            _Debug_crash(8, moduleName, region, message);
        };
    }
    function _Debug_todoCase(moduleName, region, value) {
        return function(message) {
            _Debug_crash(9, moduleName, region, value, message);
        };
    }
    // TO STRING
    function _Debug_toString_UNUSED(value) {
        return '<internals>';
    }
    function _Debug_toString(value) {
        return _Debug_toAnsiString(false, value);
    }
    function _Debug_toAnsiString(ansi, value) {
        if (typeof value === 'function') return _Debug_internalColor(ansi, '<function>');
        if (typeof value === 'boolean') return _Debug_ctorColor(ansi, value ? 'True' : 'False');
        if (typeof value === 'number') return _Debug_numberColor(ansi, value + '');
        if (value instanceof String) return _Debug_charColor(ansi, "'" + _Debug_addSlashes(value, true) + "'");
        if (typeof value === 'string') return _Debug_stringColor(ansi, '"' + _Debug_addSlashes(value, false) + '"');
        if (typeof value === 'object' && '$' in value) {
            var tag = value.$;
            if (typeof tag === 'number') return _Debug_internalColor(ansi, '<internals>');
            if (tag[0] === '#') {
                var output = [];
                for(var k in value){
                    if (k === '$') continue;
                    output.push(_Debug_toAnsiString(ansi, value[k]));
                }
                return '(' + output.join(',') + ')';
            }
            if (tag === 'Set_elm_builtin') return _Debug_ctorColor(ansi, 'Set') + _Debug_fadeColor(ansi, '.fromList') + ' ' + _Debug_toAnsiString(ansi, $elm$core$Set$toList(value));
            if (tag === 'RBNode_elm_builtin' || tag === 'RBEmpty_elm_builtin') return _Debug_ctorColor(ansi, 'Dict') + _Debug_fadeColor(ansi, '.fromList') + ' ' + _Debug_toAnsiString(ansi, $elm$core$Dict$toList(value));
            if (tag === 'Array_elm_builtin') return _Debug_ctorColor(ansi, 'Array') + _Debug_fadeColor(ansi, '.fromList') + ' ' + _Debug_toAnsiString(ansi, $elm$core$Array$toList(value));
            if (tag === '::' || tag === '[]') {
                var output = '[';
                value.b && (output += _Debug_toAnsiString(ansi, value.a), value = value.b);
                for(; value.b; value = value.b)output += ',' + _Debug_toAnsiString(ansi, value.a);
                return output + ']';
            }
            var output = '';
            for(var i in value){
                if (i === '$') continue;
                var str = _Debug_toAnsiString(ansi, value[i]);
                var c0 = str[0];
                var parenless = c0 === '{' || c0 === '(' || c0 === '[' || c0 === '<' || c0 === '"' || str.indexOf(' ') < 0;
                output += ' ' + (parenless ? str : '(' + str + ')');
            }
            return _Debug_ctorColor(ansi, tag) + output;
        }
        if (typeof DataView === 'function' && value instanceof DataView) return _Debug_stringColor(ansi, '<' + value.byteLength + ' bytes>');
        if (typeof File !== 'undefined' && value instanceof File) return _Debug_internalColor(ansi, '<' + value.name + '>');
        if (typeof value === 'object') {
            var output = [];
            for(var key in value){
                var field = key[0] === '_' ? key.slice(1) : key;
                output.push(_Debug_fadeColor(ansi, field) + ' = ' + _Debug_toAnsiString(ansi, value[key]));
            }
            if (output.length === 0) return '{}';
            return '{ ' + output.join(', ') + ' }';
        }
        return _Debug_internalColor(ansi, '<internals>');
    }
    function _Debug_addSlashes(str, isChar) {
        var s = str.replace(/\\/g, '\\\\').replace(/\n/g, '\\n').replace(/\t/g, '\\t').replace(/\r/g, '\\r').replace(/\v/g, '\\v').replace(/\0/g, '\\0');
        if (isChar) return s.replace(/\'/g, '\\\'');
        else return s.replace(/\"/g, '\\"');
    }
    function _Debug_ctorColor(ansi, string) {
        return ansi ? '\x1b[96m' + string + '\x1b[0m' : string;
    }
    function _Debug_numberColor(ansi, string) {
        return ansi ? '\x1b[95m' + string + '\x1b[0m' : string;
    }
    function _Debug_stringColor(ansi, string) {
        return ansi ? '\x1b[93m' + string + '\x1b[0m' : string;
    }
    function _Debug_charColor(ansi, string) {
        return ansi ? '\x1b[92m' + string + '\x1b[0m' : string;
    }
    function _Debug_fadeColor(ansi, string) {
        return ansi ? '\x1b[37m' + string + '\x1b[0m' : string;
    }
    function _Debug_internalColor(ansi, string) {
        return ansi ? '\x1b[36m' + string + '\x1b[0m' : string;
    }
    function _Debug_toHexDigit(n) {
        return String.fromCharCode(n < 10 ? 48 + n : 55 + n);
    }
    // CRASH
    function _Debug_crash_UNUSED(identifier) {
        throw new Error('https://github.com/elm/core/blob/1.0.0/hints/' + identifier + '.md');
    }
    function _Debug_crash(identifier, fact1, fact2, fact3, fact4) {
        switch(identifier){
            case 0:
                throw new Error('What node should I take over? In JavaScript I need something like:\n\n    Elm.Main.init({\n        node: document.getElementById("elm-node")\n    })\n\nYou need to do this with any Browser.sandbox or Browser.element program.');
            case 1:
                throw new Error('Browser.application programs cannot handle URLs like this:\n\n    ' + document.location.href + '\n\nWhat is the root? The root of your file system? Try looking at this program with `elm reactor` or some other server.');
            case 2:
                var jsonErrorString = fact1;
                throw new Error('Problem with the flags given to your Elm program on initialization.\n\n' + jsonErrorString);
            case 3:
                var portName = fact1;
                throw new Error('There can only be one port named `' + portName + '`, but your program has multiple.');
            case 4:
                var portName = fact1;
                var problem = fact2;
                throw new Error('Trying to send an unexpected type of value through port `' + portName + '`:\n' + problem);
            case 5:
                throw new Error('Trying to use `(==)` on functions.\nThere is no way to know if functions are "the same" in the Elm sense.\nRead more about this at https://package.elm-lang.org/packages/elm/core/latest/Basics#== which describes why it is this way and what the better version will look like.');
            case 6:
                var moduleName = fact1;
                throw new Error('Your page is loading multiple Elm scripts with a module named ' + moduleName + '. Maybe a duplicate script is getting loaded accidentally? If not, rename one of them so I know which is which!');
            case 8:
                var moduleName = fact1;
                var region = fact2;
                var message = fact3;
                throw new Error('TODO in module `' + moduleName + '` ' + _Debug_regionToString(region) + '\n\n' + message);
            case 9:
                var moduleName = fact1;
                var region = fact2;
                var value = fact3;
                var message = fact4;
                throw new Error('TODO in module `' + moduleName + '` from the `case` expression ' + _Debug_regionToString(region) + '\n\nIt received the following value:\n\n    ' + _Debug_toString(value).replace('\n', '\n    ') + '\n\nBut the branch that handles it says:\n\n    ' + message.replace('\n', '\n    '));
            case 10:
                throw new Error('Bug in https://github.com/elm/virtual-dom/issues');
            case 11:
                throw new Error('Cannot perform mod 0. Division by zero error.');
        }
    }
    function _Debug_regionToString(region) {
        if (region.start.line === region.end.line) return 'on line ' + region.start.line;
        return 'on lines ' + region.start.line + ' through ' + region.end.line;
    }
    // EQUALITY
    function _Utils_eq(x, y) {
        for(var pair, stack = [], isEqual = _Utils_eqHelp(x, y, 0, stack); isEqual && (pair = stack.pop()); isEqual = _Utils_eqHelp(pair.a, pair.b, 0, stack));
        return isEqual;
    }
    function _Utils_eqHelp(x, y, depth, stack) {
        if (x === y) return true;
        if (typeof x !== 'object' || x === null || y === null) {
            typeof x === 'function' && _Debug_crash(5);
            return false;
        }
        if (depth > 100) {
            stack.push(_Utils_Tuple2(x, y));
            return true;
        }
        /**/ if (x.$ === 'Set_elm_builtin') {
            x = $elm$core$Set$toList(x);
            y = $elm$core$Set$toList(y);
        }
        if (x.$ === 'RBNode_elm_builtin' || x.$ === 'RBEmpty_elm_builtin') {
            x = $elm$core$Dict$toList(x);
            y = $elm$core$Dict$toList(y);
        }
        //*/
        /**_UNUSED/
	if (x.$ < 0)
	{
		x = $elm$core$Dict$toList(x);
		y = $elm$core$Dict$toList(y);
	}
	//*/ for(var key in x){
            if (!_Utils_eqHelp(x[key], y[key], depth + 1, stack)) return false;
        }
        return true;
    }
    var _Utils_equal = F2(_Utils_eq);
    var _Utils_notEqual = F2(function(a, b) {
        return !_Utils_eq(a, b);
    });
    // COMPARISONS
    // Code in Generate/JavaScript.hs, Basics.js, and List.js depends on
    // the particular integer values assigned to LT, EQ, and GT.
    function _Utils_cmp(x, y, ord) {
        if (typeof x !== 'object') return x === y ? /*EQ*/ 0 : x < y ? /*LT*/ -1 : /*GT*/ 1;
        /**/ if (x instanceof String) {
            var a = x.valueOf();
            var b = y.valueOf();
            return a === b ? 0 : a < b ? -1 : 1;
        }
        //*/
        /**_UNUSED/
	if (typeof x.$ === 'undefined')
	//*/ /**/ if (x.$[0] === '#') return (ord = _Utils_cmp(x.a, y.a)) ? ord : (ord = _Utils_cmp(x.b, y.b)) ? ord : _Utils_cmp(x.c, y.c);
        // traverse conses until end of a list or a mismatch
        for(; x.b && y.b && !(ord = _Utils_cmp(x.a, y.a)); x = x.b, y = y.b); // WHILE_CONSES
        return ord || (x.b ? /*GT*/ 1 : y.b ? /*LT*/ -1 : /*EQ*/ 0);
    }
    var _Utils_lt = F2(function(a, b) {
        return _Utils_cmp(a, b) < 0;
    });
    var _Utils_le = F2(function(a, b) {
        return _Utils_cmp(a, b) < 1;
    });
    var _Utils_gt = F2(function(a, b) {
        return _Utils_cmp(a, b) > 0;
    });
    var _Utils_ge = F2(function(a, b) {
        return _Utils_cmp(a, b) >= 0;
    });
    var _Utils_compare = F2(function(x, y) {
        var n = _Utils_cmp(x, y);
        return n < 0 ? $elm$core$Basics$LT : n ? $elm$core$Basics$GT : $elm$core$Basics$EQ;
    });
    // COMMON VALUES
    var _Utils_Tuple0_UNUSED = 0;
    var _Utils_Tuple0 = {
        $: '#0'
    };
    function _Utils_Tuple2_UNUSED(a, b) {
        return {
            a: a,
            b: b
        };
    }
    function _Utils_Tuple2(a, b) {
        return {
            $: '#2',
            a: a,
            b: b
        };
    }
    function _Utils_Tuple3_UNUSED(a, b, c) {
        return {
            a: a,
            b: b,
            c: c
        };
    }
    function _Utils_Tuple3(a, b, c) {
        return {
            $: '#3',
            a: a,
            b: b,
            c: c
        };
    }
    function _Utils_chr_UNUSED(c) {
        return c;
    }
    function _Utils_chr(c) {
        return new String(c);
    }
    // RECORDS
    function _Utils_update(oldRecord, updatedFields) {
        var newRecord = {};
        for(var key in oldRecord)newRecord[key] = oldRecord[key];
        for(var key in updatedFields)newRecord[key] = updatedFields[key];
        return newRecord;
    }
    // APPEND
    var _Utils_append = F2(_Utils_ap);
    function _Utils_ap(xs, ys) {
        // append Strings
        if (typeof xs === 'string') return xs + ys;
        // append Lists
        if (!xs.b) return ys;
        var root = _List_Cons(xs.a, ys);
        xs = xs.b;
        for(var curr = root; xs.b; xs = xs.b)curr = curr.b = _List_Cons(xs.a, ys);
        return root;
    }
    var _List_Nil_UNUSED = {
        $: 0
    };
    var _List_Nil = {
        $: '[]'
    };
    function _List_Cons_UNUSED(hd, tl) {
        return {
            $: 1,
            a: hd,
            b: tl
        };
    }
    function _List_Cons(hd, tl) {
        return {
            $: '::',
            a: hd,
            b: tl
        };
    }
    var _List_cons = F2(_List_Cons);
    function _List_fromArray(arr) {
        var out = _List_Nil;
        for(var i = arr.length; i--;)out = _List_Cons(arr[i], out);
        return out;
    }
    function _List_toArray(xs) {
        for(var out = []; xs.b; xs = xs.b)out.push(xs.a);
        return out;
    }
    var _List_map2 = F3(function(f, xs, ys) {
        for(var arr = []; xs.b && ys.b; xs = xs.b, ys = ys.b)arr.push(A2(f, xs.a, ys.a));
        return _List_fromArray(arr);
    });
    var _List_map3 = F4(function(f, xs, ys, zs) {
        for(var arr = []; xs.b && ys.b && zs.b; xs = xs.b, ys = ys.b, zs = zs.b)arr.push(A3(f, xs.a, ys.a, zs.a));
        return _List_fromArray(arr);
    });
    var _List_map4 = F5(function(f, ws, xs, ys, zs) {
        for(var arr = []; ws.b && xs.b && ys.b && zs.b; ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b)arr.push(A4(f, ws.a, xs.a, ys.a, zs.a));
        return _List_fromArray(arr);
    });
    var _List_map5 = F6(function(f, vs, ws, xs, ys, zs) {
        for(var arr = []; vs.b && ws.b && xs.b && ys.b && zs.b; vs = vs.b, ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b)arr.push(A5(f, vs.a, ws.a, xs.a, ys.a, zs.a));
        return _List_fromArray(arr);
    });
    var _List_sortBy = F2(function(f, xs) {
        return _List_fromArray(_List_toArray(xs).sort(function(a, b) {
            return _Utils_cmp(f(a), f(b));
        }));
    });
    var _List_sortWith = F2(function(f, xs) {
        return _List_fromArray(_List_toArray(xs).sort(function(a, b) {
            var ord = A2(f, a, b);
            return ord === $elm$core$Basics$EQ ? 0 : ord === $elm$core$Basics$LT ? -1 : 1;
        }));
    });
    // MATH
    var _Basics_add = F2(function(a, b) {
        return a + b;
    });
    var _Basics_sub = F2(function(a, b) {
        return a - b;
    });
    var _Basics_mul = F2(function(a, b) {
        return a * b;
    });
    var _Basics_fdiv = F2(function(a, b) {
        return a / b;
    });
    var _Basics_idiv = F2(function(a, b) {
        return a / b | 0;
    });
    var _Basics_pow = F2(Math.pow);
    var _Basics_remainderBy = F2(function(b, a) {
        return a % b;
    });
    // https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/divmodnote-letter.pdf
    var _Basics_modBy = F2(function(modulus, x) {
        var answer = x % modulus;
        return modulus === 0 ? _Debug_crash(11) : answer > 0 && modulus < 0 || answer < 0 && modulus > 0 ? answer + modulus : answer;
    });
    // TRIGONOMETRY
    var _Basics_pi = Math.PI;
    var _Basics_e = Math.E;
    var _Basics_cos = Math.cos;
    var _Basics_sin = Math.sin;
    var _Basics_tan = Math.tan;
    var _Basics_acos = Math.acos;
    var _Basics_asin = Math.asin;
    var _Basics_atan = Math.atan;
    var _Basics_atan2 = F2(Math.atan2);
    // MORE MATH
    function _Basics_toFloat(x) {
        return x;
    }
    function _Basics_truncate(n) {
        return n | 0;
    }
    function _Basics_isInfinite(n) {
        return n === Infinity || n === -Infinity;
    }
    var _Basics_ceiling = Math.ceil;
    var _Basics_floor = Math.floor;
    var _Basics_round = Math.round;
    var _Basics_sqrt = Math.sqrt;
    var _Basics_log = Math.log;
    var _Basics_isNaN = isNaN;
    // BOOLEANS
    function _Basics_not(bool) {
        return !bool;
    }
    var _Basics_and = F2(function(a, b) {
        return a && b;
    });
    var _Basics_or = F2(function(a, b) {
        return a || b;
    });
    var _Basics_xor = F2(function(a, b) {
        return a !== b;
    });
    var _String_cons = F2(function(chr, str) {
        return chr + str;
    });
    function _String_uncons(string) {
        var word = string.charCodeAt(0);
        return !isNaN(word) ? $elm$core$Maybe$Just(55296 <= word && word <= 56319 ? _Utils_Tuple2(_Utils_chr(string[0] + string[1]), string.slice(2)) : _Utils_Tuple2(_Utils_chr(string[0]), string.slice(1))) : $elm$core$Maybe$Nothing;
    }
    var _String_append = F2(function(a, b) {
        return a + b;
    });
    function _String_length(str) {
        return str.length;
    }
    var _String_map = F2(function(func, string) {
        var len = string.length;
        var array = new Array(len);
        var i = 0;
        while(i < len){
            var word = string.charCodeAt(i);
            if (55296 <= word && word <= 56319) {
                array[i] = func(_Utils_chr(string[i] + string[i + 1]));
                i += 2;
                continue;
            }
            array[i] = func(_Utils_chr(string[i]));
            i++;
        }
        return array.join('');
    });
    var _String_filter = F2(function(isGood, str) {
        var arr = [];
        var len = str.length;
        var i = 0;
        while(i < len){
            var char = str[i];
            var word = str.charCodeAt(i);
            i++;
            if (55296 <= word && word <= 56319) {
                char += str[i];
                i++;
            }
            if (isGood(_Utils_chr(char))) arr.push(char);
        }
        return arr.join('');
    });
    function _String_reverse(str) {
        var len = str.length;
        var arr = new Array(len);
        var i = 0;
        while(i < len){
            var word = str.charCodeAt(i);
            if (55296 <= word && word <= 56319) {
                arr[len - i] = str[i + 1];
                i++;
                arr[len - i] = str[i - 1];
                i++;
            } else {
                arr[len - i] = str[i];
                i++;
            }
        }
        return arr.join('');
    }
    var _String_foldl = F3(function(func, state, string) {
        var len = string.length;
        var i = 0;
        while(i < len){
            var char = string[i];
            var word = string.charCodeAt(i);
            i++;
            if (55296 <= word && word <= 56319) {
                char += string[i];
                i++;
            }
            state = A2(func, _Utils_chr(char), state);
        }
        return state;
    });
    var _String_foldr = F3(function(func, state, string) {
        var i = string.length;
        while(i--){
            var char = string[i];
            var word = string.charCodeAt(i);
            if (56320 <= word && word <= 57343) {
                i--;
                char = string[i] + char;
            }
            state = A2(func, _Utils_chr(char), state);
        }
        return state;
    });
    var _String_split = F2(function(sep, str) {
        return str.split(sep);
    });
    var _String_join = F2(function(sep, strs) {
        return strs.join(sep);
    });
    var _String_slice = F3(function(start, end, str) {
        return str.slice(start, end);
    });
    function _String_trim(str) {
        return str.trim();
    }
    function _String_trimLeft(str) {
        return str.replace(/^\s+/, '');
    }
    function _String_trimRight(str) {
        return str.replace(/\s+$/, '');
    }
    function _String_words(str) {
        return _List_fromArray(str.trim().split(/\s+/g));
    }
    function _String_lines(str) {
        return _List_fromArray(str.split(/\r\n|\r|\n/g));
    }
    function _String_toUpper(str) {
        return str.toUpperCase();
    }
    function _String_toLower(str) {
        return str.toLowerCase();
    }
    var _String_any = F2(function(isGood, string) {
        var i = string.length;
        while(i--){
            var char = string[i];
            var word = string.charCodeAt(i);
            if (56320 <= word && word <= 57343) {
                i--;
                char = string[i] + char;
            }
            if (isGood(_Utils_chr(char))) return true;
        }
        return false;
    });
    var _String_all = F2(function(isGood, string) {
        var i = string.length;
        while(i--){
            var char = string[i];
            var word = string.charCodeAt(i);
            if (56320 <= word && word <= 57343) {
                i--;
                char = string[i] + char;
            }
            if (!isGood(_Utils_chr(char))) return false;
        }
        return true;
    });
    var _String_contains = F2(function(sub, str) {
        return str.indexOf(sub) > -1;
    });
    var _String_startsWith = F2(function(sub, str) {
        return str.indexOf(sub) === 0;
    });
    var _String_endsWith = F2(function(sub, str) {
        return str.length >= sub.length && str.lastIndexOf(sub) === str.length - sub.length;
    });
    var _String_indexes = F2(function(sub, str) {
        var subLen = sub.length;
        if (subLen < 1) return _List_Nil;
        var i = 0;
        var is = [];
        while((i = str.indexOf(sub, i)) > -1){
            is.push(i);
            i = i + subLen;
        }
        return _List_fromArray(is);
    });
    // TO STRING
    function _String_fromNumber(number) {
        return number + '';
    }
    // INT CONVERSIONS
    function _String_toInt(str) {
        var total = 0;
        var code0 = str.charCodeAt(0);
        var start = code0 == 43 /* + */  || code0 == 45 /* - */  ? 1 : 0;
        for(var i = start; i < str.length; ++i){
            var code = str.charCodeAt(i);
            if (code < 48 || 57 < code) return $elm$core$Maybe$Nothing;
            total = 10 * total + code - 48;
        }
        return i == start ? $elm$core$Maybe$Nothing : $elm$core$Maybe$Just(code0 == 45 ? -total : total);
    }
    // FLOAT CONVERSIONS
    function _String_toFloat(s) {
        // check if it is a hex, octal, or binary number
        if (s.length === 0 || /[\sxbo]/.test(s)) return $elm$core$Maybe$Nothing;
        var n = +s;
        // faster isNaN check
        return n === n ? $elm$core$Maybe$Just(n) : $elm$core$Maybe$Nothing;
    }
    function _String_fromList(chars) {
        return _List_toArray(chars).join('');
    }
    function _Char_toCode(char) {
        var code = char.charCodeAt(0);
        if (55296 <= code && code <= 56319) return (code - 55296) * 1024 + char.charCodeAt(1) - 56320 + 65536;
        return code;
    }
    function _Char_fromCode(code) {
        return _Utils_chr(code < 0 || 1114111 < code ? '\uFFFD' : code <= 65535 ? String.fromCharCode(code) : (code -= 65536, String.fromCharCode(Math.floor(code / 1024) + 55296, code % 1024 + 56320)));
    }
    function _Char_toUpper(char) {
        return _Utils_chr(char.toUpperCase());
    }
    function _Char_toLower(char) {
        return _Utils_chr(char.toLowerCase());
    }
    function _Char_toLocaleUpper(char) {
        return _Utils_chr(char.toLocaleUpperCase());
    }
    function _Char_toLocaleLower(char) {
        return _Utils_chr(char.toLocaleLowerCase());
    }
    /**/ function _Json_errorToString(error) {
        return $elm$json$Json$Decode$errorToString(error);
    }
    //*/
    // CORE DECODERS
    function _Json_succeed(msg) {
        return {
            $: 0,
            a: msg
        };
    }
    function _Json_fail(msg) {
        return {
            $: 1,
            a: msg
        };
    }
    function _Json_decodePrim(decoder) {
        return {
            $: 2,
            b: decoder
        };
    }
    var _Json_decodeInt = _Json_decodePrim(function(value) {
        return typeof value !== 'number' ? _Json_expecting('an INT', value) : -2147483647 < value && value < 2147483647 && (value | 0) === value ? $elm$core$Result$Ok(value) : isFinite(value) && !(value % 1) ? $elm$core$Result$Ok(value) : _Json_expecting('an INT', value);
    });
    var _Json_decodeBool = _Json_decodePrim(function(value) {
        return typeof value === 'boolean' ? $elm$core$Result$Ok(value) : _Json_expecting('a BOOL', value);
    });
    var _Json_decodeFloat = _Json_decodePrim(function(value) {
        return typeof value === 'number' ? $elm$core$Result$Ok(value) : _Json_expecting('a FLOAT', value);
    });
    var _Json_decodeValue = _Json_decodePrim(function(value) {
        return $elm$core$Result$Ok(_Json_wrap(value));
    });
    var _Json_decodeString = _Json_decodePrim(function(value) {
        return typeof value === 'string' ? $elm$core$Result$Ok(value) : value instanceof String ? $elm$core$Result$Ok(value + '') : _Json_expecting('a STRING', value);
    });
    function _Json_decodeList(decoder) {
        return {
            $: 3,
            b: decoder
        };
    }
    function _Json_decodeArray(decoder) {
        return {
            $: 4,
            b: decoder
        };
    }
    function _Json_decodeNull(value) {
        return {
            $: 5,
            c: value
        };
    }
    var _Json_decodeField = F2(function(field, decoder) {
        return {
            $: 6,
            d: field,
            b: decoder
        };
    });
    var _Json_decodeIndex = F2(function(index, decoder) {
        return {
            $: 7,
            e: index,
            b: decoder
        };
    });
    function _Json_decodeKeyValuePairs(decoder) {
        return {
            $: 8,
            b: decoder
        };
    }
    function _Json_mapMany(f, decoders) {
        return {
            $: 9,
            f: f,
            g: decoders
        };
    }
    var _Json_andThen = F2(function(callback, decoder) {
        return {
            $: 10,
            b: decoder,
            h: callback
        };
    });
    function _Json_oneOf(decoders) {
        return {
            $: 11,
            g: decoders
        };
    }
    // DECODING OBJECTS
    var _Json_map1 = F2(function(f, d1) {
        return _Json_mapMany(f, [
            d1
        ]);
    });
    var _Json_map2 = F3(function(f, d1, d2) {
        return _Json_mapMany(f, [
            d1,
            d2
        ]);
    });
    var _Json_map3 = F4(function(f, d1, d2, d3) {
        return _Json_mapMany(f, [
            d1,
            d2,
            d3
        ]);
    });
    var _Json_map4 = F5(function(f, d1, d2, d3, d4) {
        return _Json_mapMany(f, [
            d1,
            d2,
            d3,
            d4
        ]);
    });
    var _Json_map5 = F6(function(f, d1, d2, d3, d4, d5) {
        return _Json_mapMany(f, [
            d1,
            d2,
            d3,
            d4,
            d5
        ]);
    });
    var _Json_map6 = F7(function(f, d1, d2, d3, d4, d5, d6) {
        return _Json_mapMany(f, [
            d1,
            d2,
            d3,
            d4,
            d5,
            d6
        ]);
    });
    var _Json_map7 = F8(function(f, d1, d2, d3, d4, d5, d6, d7) {
        return _Json_mapMany(f, [
            d1,
            d2,
            d3,
            d4,
            d5,
            d6,
            d7
        ]);
    });
    var _Json_map8 = F9(function(f, d1, d2, d3, d4, d5, d6, d7, d8) {
        return _Json_mapMany(f, [
            d1,
            d2,
            d3,
            d4,
            d5,
            d6,
            d7,
            d8
        ]);
    });
    // DECODE
    var _Json_runOnString = F2(function(decoder, string) {
        try {
            var value = JSON.parse(string);
            return _Json_runHelp(decoder, value);
        } catch (e) {
            return $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure, 'This is not valid JSON! ' + e.message, _Json_wrap(string)));
        }
    });
    var _Json_run = F2(function(decoder, value) {
        return _Json_runHelp(decoder, _Json_unwrap(value));
    });
    function _Json_runHelp(decoder, value) {
        switch(decoder.$){
            case 2:
                return decoder.b(value);
            case 5:
                return value === null ? $elm$core$Result$Ok(decoder.c) : _Json_expecting('null', value);
            case 3:
                if (!_Json_isArray(value)) return _Json_expecting('a LIST', value);
                return _Json_runArrayDecoder(decoder.b, value, _List_fromArray);
            case 4:
                if (!_Json_isArray(value)) return _Json_expecting('an ARRAY', value);
                return _Json_runArrayDecoder(decoder.b, value, _Json_toElmArray);
            case 6:
                var field = decoder.d;
                if (typeof value !== 'object' || value === null || !(field in value)) return _Json_expecting('an OBJECT with a field named `' + field + '`', value);
                var result = _Json_runHelp(decoder.b, value[field]);
                return $elm$core$Result$isOk(result) ? result : $elm$core$Result$Err(A2($elm$json$Json$Decode$Field, field, result.a));
            case 7:
                var index = decoder.e;
                if (!_Json_isArray(value)) return _Json_expecting('an ARRAY', value);
                if (index >= value.length) return _Json_expecting('a LONGER array. Need index ' + index + ' but only see ' + value.length + ' entries', value);
                var result = _Json_runHelp(decoder.b, value[index]);
                return $elm$core$Result$isOk(result) ? result : $elm$core$Result$Err(A2($elm$json$Json$Decode$Index, index, result.a));
            case 8:
                if (typeof value !== 'object' || value === null || _Json_isArray(value)) return _Json_expecting('an OBJECT', value);
                var keyValuePairs = _List_Nil;
                // TODO test perf of Object.keys and switch when support is good enough
                for(var key in value)if (value.hasOwnProperty(key)) {
                    var result = _Json_runHelp(decoder.b, value[key]);
                    if (!$elm$core$Result$isOk(result)) return $elm$core$Result$Err(A2($elm$json$Json$Decode$Field, key, result.a));
                    keyValuePairs = _List_Cons(_Utils_Tuple2(key, result.a), keyValuePairs);
                }
                return $elm$core$Result$Ok($elm$core$List$reverse(keyValuePairs));
            case 9:
                var answer = decoder.f;
                var decoders = decoder.g;
                for(var i = 0; i < decoders.length; i++){
                    var result = _Json_runHelp(decoders[i], value);
                    if (!$elm$core$Result$isOk(result)) return result;
                    answer = answer(result.a);
                }
                return $elm$core$Result$Ok(answer);
            case 10:
                var result = _Json_runHelp(decoder.b, value);
                return !$elm$core$Result$isOk(result) ? result : _Json_runHelp(decoder.h(result.a), value);
            case 11:
                var errors = _List_Nil;
                for(var temp = decoder.g; temp.b; temp = temp.b){
                    var result = _Json_runHelp(temp.a, value);
                    if ($elm$core$Result$isOk(result)) return result;
                    errors = _List_Cons(result.a, errors);
                }
                return $elm$core$Result$Err($elm$json$Json$Decode$OneOf($elm$core$List$reverse(errors)));
            case 1:
                return $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure, decoder.a, _Json_wrap(value)));
            case 0:
                return $elm$core$Result$Ok(decoder.a);
        }
    }
    function _Json_runArrayDecoder(decoder, value, toElmValue) {
        var len = value.length;
        var array = new Array(len);
        for(var i = 0; i < len; i++){
            var result = _Json_runHelp(decoder, value[i]);
            if (!$elm$core$Result$isOk(result)) return $elm$core$Result$Err(A2($elm$json$Json$Decode$Index, i, result.a));
            array[i] = result.a;
        }
        return $elm$core$Result$Ok(toElmValue(array));
    }
    function _Json_isArray(value) {
        return Array.isArray(value) || typeof FileList !== 'undefined' && value instanceof FileList;
    }
    function _Json_toElmArray(array) {
        return A2($elm$core$Array$initialize, array.length, function(i) {
            return array[i];
        });
    }
    function _Json_expecting(type, value) {
        return $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure, 'Expecting ' + type, _Json_wrap(value)));
    }
    // EQUALITY
    function _Json_equality(x, y) {
        if (x === y) return true;
        if (x.$ !== y.$) return false;
        switch(x.$){
            case 0:
            case 1:
                return x.a === y.a;
            case 2:
                return x.b === y.b;
            case 5:
                return x.c === y.c;
            case 3:
            case 4:
            case 8:
                return _Json_equality(x.b, y.b);
            case 6:
                return x.d === y.d && _Json_equality(x.b, y.b);
            case 7:
                return x.e === y.e && _Json_equality(x.b, y.b);
            case 9:
                return x.f === y.f && _Json_listEquality(x.g, y.g);
            case 10:
                return x.h === y.h && _Json_equality(x.b, y.b);
            case 11:
                return _Json_listEquality(x.g, y.g);
        }
    }
    function _Json_listEquality(aDecoders, bDecoders) {
        var len = aDecoders.length;
        if (len !== bDecoders.length) return false;
        for(var i = 0; i < len; i++){
            if (!_Json_equality(aDecoders[i], bDecoders[i])) return false;
        }
        return true;
    }
    // ENCODE
    var _Json_encode = F2(function(indentLevel, value) {
        return JSON.stringify(_Json_unwrap(value), null, indentLevel) + '';
    });
    function _Json_wrap(value) {
        return {
            $: 0,
            a: value
        };
    }
    function _Json_unwrap(value) {
        return value.a;
    }
    function _Json_wrap_UNUSED(value) {
        return value;
    }
    function _Json_unwrap_UNUSED(value) {
        return value;
    }
    function _Json_emptyArray() {
        return [];
    }
    function _Json_emptyObject() {
        return {};
    }
    var _Json_addField = F3(function(key, value, object) {
        object[key] = _Json_unwrap(value);
        return object;
    });
    function _Json_addEntry(func) {
        return F2(function(entry, array) {
            array.push(_Json_unwrap(func(entry)));
            return array;
        });
    }
    var _Json_encodeNull = _Json_wrap(null);
    // TASKS
    function _Scheduler_succeed(value) {
        return {
            $: 0,
            a: value
        };
    }
    function _Scheduler_fail(error) {
        return {
            $: 1,
            a: error
        };
    }
    function _Scheduler_binding(callback) {
        return {
            $: 2,
            b: callback,
            c: null
        };
    }
    var _Scheduler_andThen = F2(function(callback, task) {
        return {
            $: 3,
            b: callback,
            d: task
        };
    });
    var _Scheduler_onError = F2(function(callback, task) {
        return {
            $: 4,
            b: callback,
            d: task
        };
    });
    function _Scheduler_receive(callback) {
        return {
            $: 5,
            b: callback
        };
    }
    // PROCESSES
    var _Scheduler_guid = 0;
    function _Scheduler_rawSpawn(task) {
        var proc = {
            $: 0,
            e: _Scheduler_guid++,
            f: task,
            g: null,
            h: []
        };
        _Scheduler_enqueue(proc);
        return proc;
    }
    function _Scheduler_spawn(task) {
        return _Scheduler_binding(function(callback) {
            callback(_Scheduler_succeed(_Scheduler_rawSpawn(task)));
        });
    }
    function _Scheduler_rawSend(proc, msg) {
        proc.h.push(msg);
        _Scheduler_enqueue(proc);
    }
    var _Scheduler_send = F2(function(proc, msg) {
        return _Scheduler_binding(function(callback) {
            _Scheduler_rawSend(proc, msg);
            callback(_Scheduler_succeed(_Utils_Tuple0));
        });
    });
    function _Scheduler_kill(proc) {
        return _Scheduler_binding(function(callback) {
            var task = proc.f;
            if (task.$ === 2 && task.c) task.c();
            proc.f = null;
            callback(_Scheduler_succeed(_Utils_Tuple0));
        });
    }
    /* STEP PROCESSES

type alias Process =
  { $ : tag
  , id : unique_id
  , root : Task
  , stack : null | { $: SUCCEED | FAIL, a: callback, b: stack }
  , mailbox : [msg]
  }

*/ var _Scheduler_working = false;
    var _Scheduler_queue = [];
    function _Scheduler_enqueue(proc) {
        _Scheduler_queue.push(proc);
        if (_Scheduler_working) return;
        _Scheduler_working = true;
        while(proc = _Scheduler_queue.shift())_Scheduler_step(proc);
        _Scheduler_working = false;
    }
    function _Scheduler_step(proc) {
        while(proc.f){
            var rootTag = proc.f.$;
            if (rootTag === 0 || rootTag === 1) {
                while(proc.g && proc.g.$ !== rootTag)proc.g = proc.g.i;
                if (!proc.g) return;
                proc.f = proc.g.b(proc.f.a);
                proc.g = proc.g.i;
            } else if (rootTag === 2) {
                proc.f.c = proc.f.b(function(newRoot) {
                    proc.f = newRoot;
                    _Scheduler_enqueue(proc);
                });
                return;
            } else if (rootTag === 5) {
                if (proc.h.length === 0) return;
                proc.f = proc.f.b(proc.h.shift());
            } else {
                proc.g = {
                    $: rootTag === 3 ? 0 : 1,
                    b: proc.f.b,
                    i: proc.g
                };
                proc.f = proc.f.d;
            }
        }
    }
    function _Process_sleep(time) {
        return _Scheduler_binding(function(callback) {
            var id = setTimeout(function() {
                callback(_Scheduler_succeed(_Utils_Tuple0));
            }, time);
            return function() {
                clearTimeout(id);
            };
        });
    }
    // PROGRAMS
    var _Platform_worker = F4(function(impl, flagDecoder, debugMetadata, args) {
        return _Platform_initialize(flagDecoder, args, impl.init, impl.update, impl.subscriptions, function() {
            return function() {};
        });
    });
    // INITIALIZE A PROGRAM
    function _Platform_initialize(flagDecoder, args, init, update, subscriptions, stepperBuilder) {
        var result = A2(_Json_run, flagDecoder, _Json_wrap(args ? args['flags'] : undefined));
        $elm$core$Result$isOk(result) || _Debug_crash(2 /**/ , _Json_errorToString(result.a));
        var managers = {};
        var initPair = init(result.a);
        var model = initPair.a;
        var stepper = stepperBuilder(sendToApp, model);
        var ports = _Platform_setupEffects(managers, sendToApp);
        function sendToApp(msg, viewMetadata) {
            var pair = A2(update, msg, model);
            stepper(model = pair.a, viewMetadata);
            _Platform_enqueueEffects(managers, pair.b, subscriptions(model));
        }
        _Platform_enqueueEffects(managers, initPair.b, subscriptions(model));
        return ports ? {
            ports: ports
        } : {};
    }
    // TRACK PRELOADS
    //
    // This is used by code in elm/browser and elm/http
    // to register any HTTP requests that are triggered by init.
    //
    var _Platform_preload;
    function _Platform_registerPreload(url) {
        _Platform_preload.add(url);
    }
    // EFFECT MANAGERS
    var _Platform_effectManagers = {};
    function _Platform_setupEffects(managers, sendToApp) {
        var ports;
        // setup all necessary effect managers
        for(var key in _Platform_effectManagers){
            var manager = _Platform_effectManagers[key];
            if (manager.a) {
                ports = ports || {};
                ports[key] = manager.a(key, sendToApp);
            }
            managers[key] = _Platform_instantiateManager(manager, sendToApp);
        }
        return ports;
    }
    function _Platform_createManager(init, onEffects, onSelfMsg, cmdMap, subMap) {
        return {
            b: init,
            c: onEffects,
            d: onSelfMsg,
            e: cmdMap,
            f: subMap
        };
    }
    function _Platform_instantiateManager(info, sendToApp) {
        var router = {
            g: sendToApp,
            h: undefined
        };
        var onEffects = info.c;
        var onSelfMsg = info.d;
        var cmdMap = info.e;
        var subMap = info.f;
        function loop(state) {
            return A2(_Scheduler_andThen, loop, _Scheduler_receive(function(msg) {
                var value = msg.a;
                if (msg.$ === 0) return A3(onSelfMsg, router, value, state);
                return cmdMap && subMap ? A4(onEffects, router, value.i, value.j, state) : A3(onEffects, router, cmdMap ? value.i : value.j, state);
            }));
        }
        return router.h = _Scheduler_rawSpawn(A2(_Scheduler_andThen, loop, info.b));
    }
    // ROUTING
    var _Platform_sendToApp = F2(function(router, msg) {
        return _Scheduler_binding(function(callback) {
            router.g(msg);
            callback(_Scheduler_succeed(_Utils_Tuple0));
        });
    });
    var _Platform_sendToSelf = F2(function(router, msg) {
        return A2(_Scheduler_send, router.h, {
            $: 0,
            a: msg
        });
    });
    // BAGS
    function _Platform_leaf(home) {
        return function(value) {
            return {
                $: 1,
                k: home,
                l: value
            };
        };
    }
    function _Platform_batch(list) {
        return {
            $: 2,
            m: list
        };
    }
    var _Platform_map = F2(function(tagger, bag) {
        return {
            $: 3,
            n: tagger,
            o: bag
        };
    });
    // PIPE BAGS INTO EFFECT MANAGERS
    //
    // Effects must be queued!
    //
    // Say your init contains a synchronous command, like Time.now or Time.here
    //
    //   - This will produce a batch of effects (FX_1)
    //   - The synchronous task triggers the subsequent `update` call
    //   - This will produce a batch of effects (FX_2)
    //
    // If we just start dispatching FX_2, subscriptions from FX_2 can be processed
    // before subscriptions from FX_1. No good! Earlier versions of this code had
    // this problem, leading to these reports:
    //
    //   https://github.com/elm/core/issues/980
    //   https://github.com/elm/core/pull/981
    //   https://github.com/elm/compiler/issues/1776
    //
    // The queue is necessary to avoid ordering issues for synchronous commands.
    // Why use true/false here? Why not just check the length of the queue?
    // The goal is to detect "are we currently dispatching effects?" If we
    // are, we need to bail and let the ongoing while loop handle things.
    //
    // Now say the queue has 1 element. When we dequeue the final element,
    // the queue will be empty, but we are still actively dispatching effects.
    // So you could get queue jumping in a really tricky category of cases.
    //
    var _Platform_effectsQueue = [];
    var _Platform_effectsActive = false;
    function _Platform_enqueueEffects(managers, cmdBag, subBag) {
        _Platform_effectsQueue.push({
            p: managers,
            q: cmdBag,
            r: subBag
        });
        if (_Platform_effectsActive) return;
        _Platform_effectsActive = true;
        for(var fx; fx = _Platform_effectsQueue.shift();)_Platform_dispatchEffects(fx.p, fx.q, fx.r);
        _Platform_effectsActive = false;
    }
    function _Platform_dispatchEffects(managers, cmdBag, subBag) {
        var effectsDict = {};
        _Platform_gatherEffects(true, cmdBag, effectsDict, null);
        _Platform_gatherEffects(false, subBag, effectsDict, null);
        for(var home in managers)_Scheduler_rawSend(managers[home], {
            $: 'fx',
            a: effectsDict[home] || {
                i: _List_Nil,
                j: _List_Nil
            }
        });
    }
    function _Platform_gatherEffects(isCmd, bag, effectsDict, taggers) {
        switch(bag.$){
            case 1:
                var home = bag.k;
                var effect = _Platform_toEffect(isCmd, home, taggers, bag.l);
                effectsDict[home] = _Platform_insert(isCmd, effect, effectsDict[home]);
                return;
            case 2:
                for(var list = bag.m; list.b; list = list.b)_Platform_gatherEffects(isCmd, list.a, effectsDict, taggers);
                return;
            case 3:
                _Platform_gatherEffects(isCmd, bag.o, effectsDict, {
                    s: bag.n,
                    t: taggers
                });
                return;
        }
    }
    function _Platform_toEffect(isCmd, home, taggers, value) {
        function applyTaggers(x) {
            for(var temp = taggers; temp; temp = temp.t)x = temp.s(x);
            return x;
        }
        var map = isCmd ? _Platform_effectManagers[home].e : _Platform_effectManagers[home].f;
        return A2(map, applyTaggers, value);
    }
    function _Platform_insert(isCmd, newEffect, effects) {
        effects = effects || {
            i: _List_Nil,
            j: _List_Nil
        };
        isCmd ? effects.i = _List_Cons(newEffect, effects.i) : effects.j = _List_Cons(newEffect, effects.j);
        return effects;
    }
    // PORTS
    function _Platform_checkPortName(name) {
        if (_Platform_effectManagers[name]) _Debug_crash(3, name);
    }
    // OUTGOING PORTS
    function _Platform_outgoingPort(name, converter) {
        _Platform_checkPortName(name);
        _Platform_effectManagers[name] = {
            e: _Platform_outgoingPortMap,
            u: converter,
            a: _Platform_setupOutgoingPort
        };
        return _Platform_leaf(name);
    }
    var _Platform_outgoingPortMap = F2(function(tagger, value) {
        return value;
    });
    function _Platform_setupOutgoingPort(name) {
        var subs = [];
        var converter = _Platform_effectManagers[name].u;
        // CREATE MANAGER
        var init = _Process_sleep(0);
        _Platform_effectManagers[name].b = init;
        _Platform_effectManagers[name].c = F3(function(router, cmdList, state) {
            for(; cmdList.b; cmdList = cmdList.b){
                // grab a separate reference to subs in case unsubscribe is called
                var currentSubs = subs;
                var value = _Json_unwrap(converter(cmdList.a));
                for(var i = 0; i < currentSubs.length; i++)currentSubs[i](value);
            }
            return init;
        });
        // PUBLIC API
        function subscribe(callback) {
            subs.push(callback);
        }
        function unsubscribe(callback) {
            // copy subs into a new array in case unsubscribe is called within a
            // subscribed callback
            subs = subs.slice();
            var index = subs.indexOf(callback);
            if (index >= 0) subs.splice(index, 1);
        }
        return {
            subscribe: subscribe,
            unsubscribe: unsubscribe
        };
    }
    // INCOMING PORTS
    function _Platform_incomingPort(name, converter) {
        _Platform_checkPortName(name);
        _Platform_effectManagers[name] = {
            f: _Platform_incomingPortMap,
            u: converter,
            a: _Platform_setupIncomingPort
        };
        return _Platform_leaf(name);
    }
    var _Platform_incomingPortMap = F2(function(tagger, finalTagger) {
        return function(value) {
            return tagger(finalTagger(value));
        };
    });
    function _Platform_setupIncomingPort(name, sendToApp) {
        var subs = _List_Nil;
        var converter = _Platform_effectManagers[name].u;
        // CREATE MANAGER
        var init = _Scheduler_succeed(null);
        _Platform_effectManagers[name].b = init;
        _Platform_effectManagers[name].c = F3(function(router, subList, state) {
            subs = subList;
            return init;
        });
        // PUBLIC API
        function send(incomingValue) {
            var result = A2(_Json_run, converter, _Json_wrap(incomingValue));
            $elm$core$Result$isOk(result) || _Debug_crash(4, name, result.a);
            var value = result.a;
            for(var temp = subs; temp.b; temp = temp.b)sendToApp(temp.a(value));
        }
        return {
            send: send
        };
    }
    // EXPORT ELM MODULES
    //
    // Have DEBUG and PROD versions so that we can (1) give nicer errors in
    // debug mode and (2) not pay for the bits needed for that in prod mode.
    //
    function _Platform_export_UNUSED(exports) {
        scope['Elm'] ? _Platform_mergeExportsProd(scope['Elm'], exports) : scope['Elm'] = exports;
    }
    function _Platform_mergeExportsProd(obj, exports) {
        for(var name in exports)name in obj ? name == 'init' ? _Debug_crash(6) : _Platform_mergeExportsProd(obj[name], exports[name]) : obj[name] = exports[name];
    }
    function _Platform_export(exports) {
        scope['Elm'] ? _Platform_mergeExportsDebug('Elm', scope['Elm'], exports) : scope['Elm'] = exports;
    }
    function _Platform_mergeExportsDebug(moduleName, obj, exports) {
        for(var name in exports)name in obj ? name == 'init' ? _Debug_crash(6, moduleName) : _Platform_mergeExportsDebug(moduleName + '.' + name, obj[name], exports[name]) : obj[name] = exports[name];
    }
    // HELPERS
    var _VirtualDom_divertHrefToApp;
    var _VirtualDom_doc = typeof document !== 'undefined' ? document : {};
    function _VirtualDom_appendChild(parent, child) {
        parent.appendChild(child);
    }
    var _VirtualDom_init = F4(function(virtualNode, flagDecoder, debugMetadata, args) {
        // NOTE: this function needs _Platform_export available to work
        /**_UNUSED/
	var node = args['node'];
	//*/ /**/ var node = args && args['node'] ? args['node'] : _Debug_crash(0);
        //*/
        node.parentNode.replaceChild(_VirtualDom_render(virtualNode, function() {}), node);
        return {};
    });
    // TEXT
    function _VirtualDom_text(string) {
        return {
            $: 0,
            a: string
        };
    }
    // NODE
    var _VirtualDom_nodeNS = F2(function(namespace, tag) {
        return F2(function(factList, kidList) {
            for(var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b){
                var kid = kidList.a;
                descendantsCount += kid.b || 0;
                kids.push(kid);
            }
            descendantsCount += kids.length;
            return {
                $: 1,
                c: tag,
                d: _VirtualDom_organizeFacts(factList),
                e: kids,
                f: namespace,
                b: descendantsCount
            };
        });
    });
    var _VirtualDom_node = _VirtualDom_nodeNS(undefined);
    // KEYED NODE
    var _VirtualDom_keyedNodeNS = F2(function(namespace, tag) {
        return F2(function(factList, kidList) {
            for(var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b){
                var kid = kidList.a;
                descendantsCount += kid.b.b || 0;
                kids.push(kid);
            }
            descendantsCount += kids.length;
            return {
                $: 2,
                c: tag,
                d: _VirtualDom_organizeFacts(factList),
                e: kids,
                f: namespace,
                b: descendantsCount
            };
        });
    });
    var _VirtualDom_keyedNode = _VirtualDom_keyedNodeNS(undefined);
    // CUSTOM
    function _VirtualDom_custom(factList, model, render, diff) {
        return {
            $: 3,
            d: _VirtualDom_organizeFacts(factList),
            g: model,
            h: render,
            i: diff
        };
    }
    // MAP
    var _VirtualDom_map = F2(function(tagger, node) {
        return {
            $: 4,
            j: tagger,
            k: node,
            b: 1 + (node.b || 0)
        };
    });
    // LAZY
    function _VirtualDom_thunk(refs, thunk) {
        return {
            $: 5,
            l: refs,
            m: thunk,
            k: undefined
        };
    }
    var _VirtualDom_lazy = F2(function(func, a) {
        return _VirtualDom_thunk([
            func,
            a
        ], function() {
            return func(a);
        });
    });
    var _VirtualDom_lazy2 = F3(function(func, a, b) {
        return _VirtualDom_thunk([
            func,
            a,
            b
        ], function() {
            return A2(func, a, b);
        });
    });
    var _VirtualDom_lazy3 = F4(function(func, a, b, c) {
        return _VirtualDom_thunk([
            func,
            a,
            b,
            c
        ], function() {
            return A3(func, a, b, c);
        });
    });
    var _VirtualDom_lazy4 = F5(function(func, a, b, c, d) {
        return _VirtualDom_thunk([
            func,
            a,
            b,
            c,
            d
        ], function() {
            return A4(func, a, b, c, d);
        });
    });
    var _VirtualDom_lazy5 = F6(function(func, a, b, c, d, e) {
        return _VirtualDom_thunk([
            func,
            a,
            b,
            c,
            d,
            e
        ], function() {
            return A5(func, a, b, c, d, e);
        });
    });
    var _VirtualDom_lazy6 = F7(function(func, a, b, c, d, e, f) {
        return _VirtualDom_thunk([
            func,
            a,
            b,
            c,
            d,
            e,
            f
        ], function() {
            return A6(func, a, b, c, d, e, f);
        });
    });
    var _VirtualDom_lazy7 = F8(function(func, a, b, c, d, e, f, g) {
        return _VirtualDom_thunk([
            func,
            a,
            b,
            c,
            d,
            e,
            f,
            g
        ], function() {
            return A7(func, a, b, c, d, e, f, g);
        });
    });
    var _VirtualDom_lazy8 = F9(function(func, a, b, c, d, e, f, g, h) {
        return _VirtualDom_thunk([
            func,
            a,
            b,
            c,
            d,
            e,
            f,
            g,
            h
        ], function() {
            return A8(func, a, b, c, d, e, f, g, h);
        });
    });
    // FACTS
    var _VirtualDom_on = F2(function(key, handler) {
        return {
            $: 'a0',
            n: key,
            o: handler
        };
    });
    var _VirtualDom_style = F2(function(key, value) {
        return {
            $: 'a1',
            n: key,
            o: value
        };
    });
    var _VirtualDom_property = F2(function(key, value) {
        return {
            $: 'a2',
            n: key,
            o: value
        };
    });
    var _VirtualDom_attribute = F2(function(key, value) {
        return {
            $: 'a3',
            n: key,
            o: value
        };
    });
    var _VirtualDom_attributeNS = F3(function(namespace, key, value) {
        return {
            $: 'a4',
            n: key,
            o: {
                f: namespace,
                o: value
            }
        };
    });
    // XSS ATTACK VECTOR CHECKS
    function _VirtualDom_noScript(tag) {
        return tag == 'script' ? 'p' : tag;
    }
    function _VirtualDom_noOnOrFormAction(key) {
        return /^(on|formAction$)/i.test(key) ? 'data-' + key : key;
    }
    function _VirtualDom_noInnerHtmlOrFormAction(key) {
        return key == 'innerHTML' || key == 'formAction' ? 'data-' + key : key;
    }
    function _VirtualDom_noJavaScriptUri_UNUSED(value) {
        return /^javascript:/i.test(value.replace(/\s/g, '')) ? '' : value;
    }
    function _VirtualDom_noJavaScriptUri(value) {
        return /^javascript:/i.test(value.replace(/\s/g, '')) ? 'javascript:alert("This is an XSS vector. Please use ports or web components instead.")' : value;
    }
    function _VirtualDom_noJavaScriptOrHtmlUri_UNUSED(value) {
        return /^\s*(javascript:|data:text\/html)/i.test(value) ? '' : value;
    }
    function _VirtualDom_noJavaScriptOrHtmlUri(value) {
        return /^\s*(javascript:|data:text\/html)/i.test(value) ? 'javascript:alert("This is an XSS vector. Please use ports or web components instead.")' : value;
    }
    // MAP FACTS
    var _VirtualDom_mapAttribute = F2(function(func, attr) {
        return attr.$ === 'a0' ? A2(_VirtualDom_on, attr.n, _VirtualDom_mapHandler(func, attr.o)) : attr;
    });
    function _VirtualDom_mapHandler(func, handler) {
        var tag = $elm$virtual_dom$VirtualDom$toHandlerInt(handler);
        // 0 = Normal
        // 1 = MayStopPropagation
        // 2 = MayPreventDefault
        // 3 = Custom
        return {
            $: handler.$,
            a: !tag ? A2($elm$json$Json$Decode$map, func, handler.a) : A3($elm$json$Json$Decode$map2, tag < 3 ? _VirtualDom_mapEventTuple : _VirtualDom_mapEventRecord, $elm$json$Json$Decode$succeed(func), handler.a)
        };
    }
    var _VirtualDom_mapEventTuple = F2(function(func, tuple) {
        return _Utils_Tuple2(func(tuple.a), tuple.b);
    });
    var _VirtualDom_mapEventRecord = F2(function(func, record) {
        return {
            message: func(record.message),
            stopPropagation: record.stopPropagation,
            preventDefault: record.preventDefault
        };
    });
    // ORGANIZE FACTS
    function _VirtualDom_organizeFacts(factList) {
        for(var facts = {}; factList.b; factList = factList.b){
            var entry = factList.a;
            var tag = entry.$;
            var key = entry.n;
            var value = entry.o;
            if (tag === 'a2') {
                key === 'className' ? _VirtualDom_addClass(facts, key, _Json_unwrap(value)) : facts[key] = _Json_unwrap(value);
                continue;
            }
            var subFacts = facts[tag] || (facts[tag] = {});
            tag === 'a3' && key === 'class' ? _VirtualDom_addClass(subFacts, key, value) : subFacts[key] = value;
        }
        return facts;
    }
    function _VirtualDom_addClass(object, key, newClass) {
        var classes = object[key];
        object[key] = classes ? classes + ' ' + newClass : newClass;
    }
    // RENDER
    function _VirtualDom_render(vNode, eventNode) {
        var tag = vNode.$;
        if (tag === 5) return _VirtualDom_render(vNode.k || (vNode.k = vNode.m()), eventNode);
        if (tag === 0) return _VirtualDom_doc.createTextNode(vNode.a);
        if (tag === 4) {
            var subNode = vNode.k;
            var tagger = vNode.j;
            while(subNode.$ === 4){
                typeof tagger !== 'object' ? tagger = [
                    tagger,
                    subNode.j
                ] : tagger.push(subNode.j);
                subNode = subNode.k;
            }
            var subEventRoot = {
                j: tagger,
                p: eventNode
            };
            var domNode = _VirtualDom_render(subNode, subEventRoot);
            domNode.elm_event_node_ref = subEventRoot;
            return domNode;
        }
        if (tag === 3) {
            var domNode = vNode.h(vNode.g);
            _VirtualDom_applyFacts(domNode, eventNode, vNode.d);
            return domNode;
        }
        // at this point `tag` must be 1 or 2
        var domNode = vNode.f ? _VirtualDom_doc.createElementNS(vNode.f, vNode.c) : _VirtualDom_doc.createElement(vNode.c);
        if (_VirtualDom_divertHrefToApp && vNode.c == 'a') domNode.addEventListener('click', _VirtualDom_divertHrefToApp(domNode));
        _VirtualDom_applyFacts(domNode, eventNode, vNode.d);
        for(var kids = vNode.e, i = 0; i < kids.length; i++)_VirtualDom_appendChild(domNode, _VirtualDom_render(tag === 1 ? kids[i] : kids[i].b, eventNode));
        return domNode;
    }
    // APPLY FACTS
    function _VirtualDom_applyFacts(domNode, eventNode, facts) {
        for(var key in facts){
            var value = facts[key];
            key === 'a1' ? _VirtualDom_applyStyles(domNode, value) : key === 'a0' ? _VirtualDom_applyEvents(domNode, eventNode, value) : key === 'a3' ? _VirtualDom_applyAttrs(domNode, value) : key === 'a4' ? _VirtualDom_applyAttrsNS(domNode, value) : (key !== 'value' && key !== 'checked' || domNode[key] !== value) && (domNode[key] = value);
        }
    }
    // APPLY STYLES
    function _VirtualDom_applyStyles(domNode, styles) {
        var domNodeStyle = domNode.style;
        for(var key in styles)domNodeStyle[key] = styles[key];
    }
    // APPLY ATTRS
    function _VirtualDom_applyAttrs(domNode, attrs) {
        for(var key in attrs){
            var value = attrs[key];
            typeof value !== 'undefined' ? domNode.setAttribute(key, value) : domNode.removeAttribute(key);
        }
    }
    // APPLY NAMESPACED ATTRS
    function _VirtualDom_applyAttrsNS(domNode, nsAttrs) {
        for(var key in nsAttrs){
            var pair = nsAttrs[key];
            var namespace = pair.f;
            var value = pair.o;
            typeof value !== 'undefined' ? domNode.setAttributeNS(namespace, key, value) : domNode.removeAttributeNS(namespace, key);
        }
    }
    // APPLY EVENTS
    function _VirtualDom_applyEvents(domNode, eventNode, events) {
        var allCallbacks = domNode.elmFs || (domNode.elmFs = {});
        for(var key in events){
            var newHandler = events[key];
            var oldCallback = allCallbacks[key];
            if (!newHandler) {
                domNode.removeEventListener(key, oldCallback);
                allCallbacks[key] = undefined;
                continue;
            }
            if (oldCallback) {
                var oldHandler = oldCallback.q;
                if (oldHandler.$ === newHandler.$) {
                    oldCallback.q = newHandler;
                    continue;
                }
                domNode.removeEventListener(key, oldCallback);
            }
            oldCallback = _VirtualDom_makeCallback(eventNode, newHandler);
            domNode.addEventListener(key, oldCallback, _VirtualDom_passiveSupported && {
                passive: $elm$virtual_dom$VirtualDom$toHandlerInt(newHandler) < 2
            });
            allCallbacks[key] = oldCallback;
        }
    }
    // PASSIVE EVENTS
    var _VirtualDom_passiveSupported;
    try {
        window.addEventListener('t', null, Object.defineProperty({}, 'passive', {
            get: function() {
                _VirtualDom_passiveSupported = true;
            }
        }));
    } catch (e1) {}
    // EVENT HANDLERS
    function _VirtualDom_makeCallback(eventNode, initialHandler) {
        function callback(event) {
            var handler = callback.q;
            var result = _Json_runHelp(handler.a, event);
            if (!$elm$core$Result$isOk(result)) return;
            var tag = $elm$virtual_dom$VirtualDom$toHandlerInt(handler);
            // 0 = Normal
            // 1 = MayStopPropagation
            // 2 = MayPreventDefault
            // 3 = Custom
            var value = result.a;
            var message = !tag ? value : tag < 3 ? value.a : value.message;
            var stopPropagation = tag == 1 ? value.b : tag == 3 && value.stopPropagation;
            var currentEventNode = (stopPropagation && event.stopPropagation(), (tag == 2 ? value.b : tag == 3 && value.preventDefault) && event.preventDefault(), eventNode);
            var tagger;
            var i;
            while(tagger = currentEventNode.j){
                if (typeof tagger == 'function') message = tagger(message);
                else for(var i = tagger.length; i--;)message = tagger[i](message);
                currentEventNode = currentEventNode.p;
            }
            currentEventNode(message, stopPropagation); // stopPropagation implies isSync
        }
        callback.q = initialHandler;
        return callback;
    }
    function _VirtualDom_equalEvents(x, y) {
        return x.$ == y.$ && _Json_equality(x.a, y.a);
    }
    // DIFF
    // TODO: Should we do patches like in iOS?
    //
    // type Patch
    //   = At Int Patch
    //   | Batch (List Patch)
    //   | Change ...
    //
    // How could it not be better?
    //
    function _VirtualDom_diff(x, y) {
        var patches = [];
        _VirtualDom_diffHelp(x, y, patches, 0);
        return patches;
    }
    function _VirtualDom_pushPatch(patches, type, index, data) {
        var patch = {
            $: type,
            r: index,
            s: data,
            t: undefined,
            u: undefined
        };
        patches.push(patch);
        return patch;
    }
    function _VirtualDom_diffHelp(x, y, patches, index) {
        if (x === y) return;
        var xType = x.$;
        var yType = y.$;
        // Bail if you run into different types of nodes. Implies that the
        // structure has changed significantly and it's not worth a diff.
        if (xType !== yType) {
            if (xType === 1 && yType === 2) {
                y = _VirtualDom_dekey(y);
                yType = 1;
            } else {
                _VirtualDom_pushPatch(patches, 0, index, y);
                return;
            }
        }
        // Now we know that both nodes are the same $.
        switch(yType){
            case 5:
                var xRefs = x.l;
                var yRefs = y.l;
                var i = xRefs.length;
                var same = i === yRefs.length;
                while(same && i--)same = xRefs[i] === yRefs[i];
                if (same) {
                    y.k = x.k;
                    return;
                }
                y.k = y.m();
                var subPatches = [];
                _VirtualDom_diffHelp(x.k, y.k, subPatches, 0);
                subPatches.length > 0 && _VirtualDom_pushPatch(patches, 1, index, subPatches);
                return;
            case 4:
                // gather nested taggers
                var xTaggers = x.j;
                var yTaggers = y.j;
                var nesting = false;
                var xSubNode = x.k;
                while(xSubNode.$ === 4){
                    nesting = true;
                    typeof xTaggers !== 'object' ? xTaggers = [
                        xTaggers,
                        xSubNode.j
                    ] : xTaggers.push(xSubNode.j);
                    xSubNode = xSubNode.k;
                }
                var ySubNode = y.k;
                while(ySubNode.$ === 4){
                    nesting = true;
                    typeof yTaggers !== 'object' ? yTaggers = [
                        yTaggers,
                        ySubNode.j
                    ] : yTaggers.push(ySubNode.j);
                    ySubNode = ySubNode.k;
                }
                // Just bail if different numbers of taggers. This implies the
                // structure of the virtual DOM has changed.
                if (nesting && xTaggers.length !== yTaggers.length) {
                    _VirtualDom_pushPatch(patches, 0, index, y);
                    return;
                }
                // check if taggers are "the same"
                if (nesting ? !_VirtualDom_pairwiseRefEqual(xTaggers, yTaggers) : xTaggers !== yTaggers) _VirtualDom_pushPatch(patches, 2, index, yTaggers);
                // diff everything below the taggers
                _VirtualDom_diffHelp(xSubNode, ySubNode, patches, index + 1);
                return;
            case 0:
                if (x.a !== y.a) _VirtualDom_pushPatch(patches, 3, index, y.a);
                return;
            case 1:
                _VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKids);
                return;
            case 2:
                _VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKeyedKids);
                return;
            case 3:
                if (x.h !== y.h) {
                    _VirtualDom_pushPatch(patches, 0, index, y);
                    return;
                }
                var factsDiff = _VirtualDom_diffFacts(x.d, y.d);
                factsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);
                var patch = y.i(x.g, y.g);
                patch && _VirtualDom_pushPatch(patches, 5, index, patch);
                return;
        }
    }
    // assumes the incoming arrays are the same length
    function _VirtualDom_pairwiseRefEqual(as, bs) {
        for(var i = 0; i < as.length; i++){
            if (as[i] !== bs[i]) return false;
        }
        return true;
    }
    function _VirtualDom_diffNodes(x, y, patches, index, diffKids) {
        // Bail if obvious indicators have changed. Implies more serious
        // structural changes such that it's not worth it to diff.
        if (x.c !== y.c || x.f !== y.f) {
            _VirtualDom_pushPatch(patches, 0, index, y);
            return;
        }
        var factsDiff = _VirtualDom_diffFacts(x.d, y.d);
        factsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);
        diffKids(x, y, patches, index);
    }
    // DIFF FACTS
    // TODO Instead of creating a new diff object, it's possible to just test if
    // there *is* a diff. During the actual patch, do the diff again and make the
    // modifications directly. This way, there's no new allocations. Worth it?
    function _VirtualDom_diffFacts(x, y, category) {
        var diff;
        // look for changes and removals
        for(var xKey in x){
            if (xKey === 'a1' || xKey === 'a0' || xKey === 'a3' || xKey === 'a4') {
                var subDiff = _VirtualDom_diffFacts(x[xKey], y[xKey] || {}, xKey);
                if (subDiff) {
                    diff = diff || {};
                    diff[xKey] = subDiff;
                }
                continue;
            }
            // remove if not in the new facts
            if (!(xKey in y)) {
                diff = diff || {};
                diff[xKey] = !category ? typeof x[xKey] === 'string' ? '' : null : category === 'a1' ? '' : category === 'a0' || category === 'a3' ? undefined : {
                    f: x[xKey].f,
                    o: undefined
                };
                continue;
            }
            var xValue = x[xKey];
            var yValue = y[xKey];
            // reference equal, so don't worry about it
            if (xValue === yValue && xKey !== 'value' && xKey !== 'checked' || category === 'a0' && _VirtualDom_equalEvents(xValue, yValue)) continue;
            diff = diff || {};
            diff[xKey] = yValue;
        }
        // add new stuff
        for(var yKey in y)if (!(yKey in x)) {
            diff = diff || {};
            diff[yKey] = y[yKey];
        }
        return diff;
    }
    // DIFF KIDS
    function _VirtualDom_diffKids(xParent, yParent, patches, index) {
        var xKids = xParent.e;
        var yKids = yParent.e;
        var xLen = xKids.length;
        var yLen = yKids.length;
        // FIGURE OUT IF THERE ARE INSERTS OR REMOVALS
        if (xLen > yLen) _VirtualDom_pushPatch(patches, 6, index, {
            v: yLen,
            i: xLen - yLen
        });
        else if (xLen < yLen) _VirtualDom_pushPatch(patches, 7, index, {
            v: xLen,
            e: yKids
        });
        // PAIRWISE DIFF EVERYTHING ELSE
        for(var minLen = xLen < yLen ? xLen : yLen, i = 0; i < minLen; i++){
            var xKid = xKids[i];
            _VirtualDom_diffHelp(xKid, yKids[i], patches, ++index);
            index += xKid.b || 0;
        }
    }
    // KEYED DIFF
    function _VirtualDom_diffKeyedKids(xParent, yParent, patches, rootIndex) {
        var localPatches = [];
        var changes = {}; // Dict String Entry
        var inserts = []; // Array { index : Int, entry : Entry }
        // type Entry = { tag : String, vnode : VNode, index : Int, data : _ }
        var xKids = xParent.e;
        var yKids = yParent.e;
        var xLen = xKids.length;
        var yLen = yKids.length;
        var xIndex = 0;
        var yIndex = 0;
        var index = rootIndex;
        while(xIndex < xLen && yIndex < yLen){
            var x = xKids[xIndex];
            var y = yKids[yIndex];
            var xKey = x.a;
            var yKey = y.a;
            var xNode = x.b;
            var yNode = y.b;
            var newMatch = undefined;
            var oldMatch = undefined;
            // check if keys match
            if (xKey === yKey) {
                index++;
                _VirtualDom_diffHelp(xNode, yNode, localPatches, index);
                index += xNode.b || 0;
                xIndex++;
                yIndex++;
                continue;
            }
            // look ahead 1 to detect insertions and removals.
            var xNext = xKids[xIndex + 1];
            var yNext = yKids[yIndex + 1];
            if (xNext) {
                var xNextKey = xNext.a;
                var xNextNode = xNext.b;
                oldMatch = yKey === xNextKey;
            }
            if (yNext) {
                var yNextKey = yNext.a;
                var yNextNode = yNext.b;
                newMatch = xKey === yNextKey;
            }
            // swap x and y
            if (newMatch && oldMatch) {
                index++;
                _VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);
                _VirtualDom_insertNode(changes, localPatches, xKey, yNode, yIndex, inserts);
                index += xNode.b || 0;
                index++;
                _VirtualDom_removeNode(changes, localPatches, xKey, xNextNode, index);
                index += xNextNode.b || 0;
                xIndex += 2;
                yIndex += 2;
                continue;
            }
            // insert y
            if (newMatch) {
                index++;
                _VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);
                _VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);
                index += xNode.b || 0;
                xIndex += 1;
                yIndex += 2;
                continue;
            }
            // remove x
            if (oldMatch) {
                index++;
                _VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);
                index += xNode.b || 0;
                index++;
                _VirtualDom_diffHelp(xNextNode, yNode, localPatches, index);
                index += xNextNode.b || 0;
                xIndex += 2;
                yIndex += 1;
                continue;
            }
            // remove x, insert y
            if (xNext && xNextKey === yNextKey) {
                index++;
                _VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);
                _VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);
                index += xNode.b || 0;
                index++;
                _VirtualDom_diffHelp(xNextNode, yNextNode, localPatches, index);
                index += xNextNode.b || 0;
                xIndex += 2;
                yIndex += 2;
                continue;
            }
            break;
        }
        // eat up any remaining nodes with removeNode and insertNode
        while(xIndex < xLen){
            index++;
            var x = xKids[xIndex];
            var xNode = x.b;
            _VirtualDom_removeNode(changes, localPatches, x.a, xNode, index);
            index += xNode.b || 0;
            xIndex++;
        }
        while(yIndex < yLen){
            var endInserts = endInserts || [];
            var y = yKids[yIndex];
            _VirtualDom_insertNode(changes, localPatches, y.a, y.b, undefined, endInserts);
            yIndex++;
        }
        if (localPatches.length > 0 || inserts.length > 0 || endInserts) _VirtualDom_pushPatch(patches, 8, rootIndex, {
            w: localPatches,
            x: inserts,
            y: endInserts
        });
    }
    // CHANGES FROM KEYED DIFF
    var _VirtualDom_POSTFIX = '_elmW6BL';
    function _VirtualDom_insertNode(changes, localPatches, key, vnode, yIndex, inserts) {
        var entry = changes[key];
        // never seen this key before
        if (!entry) {
            entry = {
                c: 0,
                z: vnode,
                r: yIndex,
                s: undefined
            };
            inserts.push({
                r: yIndex,
                A: entry
            });
            changes[key] = entry;
            return;
        }
        // this key was removed earlier, a match!
        if (entry.c === 1) {
            inserts.push({
                r: yIndex,
                A: entry
            });
            entry.c = 2;
            var subPatches = [];
            _VirtualDom_diffHelp(entry.z, vnode, subPatches, entry.r);
            entry.r = yIndex;
            entry.s.s = {
                w: subPatches,
                A: entry
            };
            return;
        }
        // this key has already been inserted or moved, a duplicate!
        _VirtualDom_insertNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, yIndex, inserts);
    }
    function _VirtualDom_removeNode(changes, localPatches, key, vnode, index) {
        var entry = changes[key];
        // never seen this key before
        if (!entry) {
            var patch = _VirtualDom_pushPatch(localPatches, 9, index, undefined);
            changes[key] = {
                c: 1,
                z: vnode,
                r: index,
                s: patch
            };
            return;
        }
        // this key was inserted earlier, a match!
        if (entry.c === 0) {
            entry.c = 2;
            var subPatches = [];
            _VirtualDom_diffHelp(vnode, entry.z, subPatches, index);
            _VirtualDom_pushPatch(localPatches, 9, index, {
                w: subPatches,
                A: entry
            });
            return;
        }
        // this key has already been removed or moved, a duplicate!
        _VirtualDom_removeNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, index);
    }
    // ADD DOM NODES
    //
    // Each DOM node has an "index" assigned in order of traversal. It is important
    // to minimize our crawl over the actual DOM, so these indexes (along with the
    // descendantsCount of virtual nodes) let us skip touching entire subtrees of
    // the DOM if we know there are no patches there.
    function _VirtualDom_addDomNodes(domNode, vNode, patches, eventNode) {
        _VirtualDom_addDomNodesHelp(domNode, vNode, patches, 0, 0, vNode.b, eventNode);
    }
    // assumes `patches` is non-empty and indexes increase monotonically.
    function _VirtualDom_addDomNodesHelp(domNode, vNode, patches, i, low, high, eventNode) {
        var patch = patches[i];
        var index = patch.r;
        while(index === low){
            var patchType = patch.$;
            if (patchType === 1) _VirtualDom_addDomNodes(domNode, vNode.k, patch.s, eventNode);
            else if (patchType === 8) {
                patch.t = domNode;
                patch.u = eventNode;
                var subPatches = patch.s.w;
                if (subPatches.length > 0) _VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);
            } else if (patchType === 9) {
                patch.t = domNode;
                patch.u = eventNode;
                var data = patch.s;
                if (data) {
                    data.A.s = domNode;
                    var subPatches = data.w;
                    if (subPatches.length > 0) _VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);
                }
            } else {
                patch.t = domNode;
                patch.u = eventNode;
            }
            i++;
            if (!(patch = patches[i]) || (index = patch.r) > high) return i;
        }
        var tag = vNode.$;
        if (tag === 4) {
            var subNode = vNode.k;
            while(subNode.$ === 4)subNode = subNode.k;
            return _VirtualDom_addDomNodesHelp(domNode, subNode, patches, i, low + 1, high, domNode.elm_event_node_ref);
        }
        // tag must be 1 or 2 at this point
        var vKids = vNode.e;
        var childNodes = domNode.childNodes;
        for(var j = 0; j < vKids.length; j++){
            low++;
            var vKid = tag === 1 ? vKids[j] : vKids[j].b;
            var nextLow = low + (vKid.b || 0);
            if (low <= index && index <= nextLow) {
                i = _VirtualDom_addDomNodesHelp(childNodes[j], vKid, patches, i, low, nextLow, eventNode);
                if (!(patch = patches[i]) || (index = patch.r) > high) return i;
            }
            low = nextLow;
        }
        return i;
    }
    // APPLY PATCHES
    function _VirtualDom_applyPatches(rootDomNode, oldVirtualNode, patches, eventNode) {
        if (patches.length === 0) return rootDomNode;
        _VirtualDom_addDomNodes(rootDomNode, oldVirtualNode, patches, eventNode);
        return _VirtualDom_applyPatchesHelp(rootDomNode, patches);
    }
    function _VirtualDom_applyPatchesHelp(rootDomNode, patches) {
        for(var i = 0; i < patches.length; i++){
            var patch = patches[i];
            var localDomNode = patch.t;
            var newNode = _VirtualDom_applyPatch(localDomNode, patch);
            if (localDomNode === rootDomNode) rootDomNode = newNode;
        }
        return rootDomNode;
    }
    function _VirtualDom_applyPatch(domNode, patch) {
        switch(patch.$){
            case 0:
                return _VirtualDom_applyPatchRedraw(domNode, patch.s, patch.u);
            case 4:
                _VirtualDom_applyFacts(domNode, patch.u, patch.s);
                return domNode;
            case 3:
                domNode.replaceData(0, domNode.length, patch.s);
                return domNode;
            case 1:
                return _VirtualDom_applyPatchesHelp(domNode, patch.s);
            case 2:
                if (domNode.elm_event_node_ref) domNode.elm_event_node_ref.j = patch.s;
                else domNode.elm_event_node_ref = {
                    j: patch.s,
                    p: patch.u
                };
                return domNode;
            case 6:
                var data = patch.s;
                for(var i = 0; i < data.i; i++)domNode.removeChild(domNode.childNodes[data.v]);
                return domNode;
            case 7:
                var data = patch.s;
                var kids = data.e;
                var i = data.v;
                var theEnd = domNode.childNodes[i];
                for(; i < kids.length; i++)domNode.insertBefore(_VirtualDom_render(kids[i], patch.u), theEnd);
                return domNode;
            case 9:
                var data = patch.s;
                if (!data) {
                    domNode.parentNode.removeChild(domNode);
                    return domNode;
                }
                var entry = data.A;
                if (typeof entry.r !== 'undefined') domNode.parentNode.removeChild(domNode);
                entry.s = _VirtualDom_applyPatchesHelp(domNode, data.w);
                return domNode;
            case 8:
                return _VirtualDom_applyPatchReorder(domNode, patch);
            case 5:
                return patch.s(domNode);
            default:
                _Debug_crash(10); // 'Ran into an unknown patch!'
        }
    }
    function _VirtualDom_applyPatchRedraw(domNode, vNode, eventNode) {
        var parentNode = domNode.parentNode;
        var newNode = _VirtualDom_render(vNode, eventNode);
        if (!newNode.elm_event_node_ref) newNode.elm_event_node_ref = domNode.elm_event_node_ref;
        if (parentNode && newNode !== domNode) parentNode.replaceChild(newNode, domNode);
        return newNode;
    }
    function _VirtualDom_applyPatchReorder(domNode, patch) {
        var data = patch.s;
        // remove end inserts
        var frag = _VirtualDom_applyPatchReorderEndInsertsHelp(data.y, patch);
        // removals
        domNode = _VirtualDom_applyPatchesHelp(domNode, data.w);
        // inserts
        var inserts = data.x;
        for(var i = 0; i < inserts.length; i++){
            var insert = inserts[i];
            var entry = insert.A;
            var node = entry.c === 2 ? entry.s : _VirtualDom_render(entry.z, patch.u);
            domNode.insertBefore(node, domNode.childNodes[insert.r]);
        }
        // add end inserts
        if (frag) _VirtualDom_appendChild(domNode, frag);
        return domNode;
    }
    function _VirtualDom_applyPatchReorderEndInsertsHelp(endInserts, patch) {
        if (!endInserts) return;
        var frag = _VirtualDom_doc.createDocumentFragment();
        for(var i = 0; i < endInserts.length; i++){
            var insert = endInserts[i];
            var entry = insert.A;
            _VirtualDom_appendChild(frag, entry.c === 2 ? entry.s : _VirtualDom_render(entry.z, patch.u));
        }
        return frag;
    }
    function _VirtualDom_virtualize(node) {
        // TEXT NODES
        if (node.nodeType === 3) return _VirtualDom_text(node.textContent);
        // WEIRD NODES
        if (node.nodeType !== 1) return _VirtualDom_text('');
        // ELEMENT NODES
        var attrList = _List_Nil;
        var attrs = node.attributes;
        for(var i = attrs.length; i--;){
            var attr = attrs[i];
            var name = attr.name;
            var value = attr.value;
            attrList = _List_Cons(A2(_VirtualDom_attribute, name, value), attrList);
        }
        var tag = node.tagName.toLowerCase();
        var kidList = _List_Nil;
        var kids = node.childNodes;
        for(var i = kids.length; i--;)kidList = _List_Cons(_VirtualDom_virtualize(kids[i]), kidList);
        return A3(_VirtualDom_node, tag, attrList, kidList);
    }
    function _VirtualDom_dekey(keyedNode) {
        var keyedKids = keyedNode.e;
        var len = keyedKids.length;
        var kids = new Array(len);
        for(var i = 0; i < len; i++)kids[i] = keyedKids[i].b;
        return {
            $: 1,
            c: keyedNode.c,
            d: keyedNode.d,
            e: kids,
            f: keyedNode.f,
            b: keyedNode.b
        };
    }
    // ELEMENT
    var _Debugger_element;
    var _Browser_element = _Debugger_element || F4(function(impl, flagDecoder, debugMetadata, args) {
        return _Platform_initialize(flagDecoder, args, impl.init, impl.update, impl.subscriptions, function(sendToApp, initialModel) {
            var view = impl.view;
            /**_UNUSED/
			var domNode = args['node'];
			//*/ /**/ var domNode = args && args['node'] ? args['node'] : _Debug_crash(0);
            //*/
            var currNode = _VirtualDom_virtualize(domNode);
            return _Browser_makeAnimator(initialModel, function(model) {
                var nextNode = view(model);
                var patches = _VirtualDom_diff(currNode, nextNode);
                domNode = _VirtualDom_applyPatches(domNode, currNode, patches, sendToApp);
                currNode = nextNode;
            });
        });
    });
    // DOCUMENT
    var _Debugger_document;
    var _Browser_document = _Debugger_document || F4(function(impl, flagDecoder, debugMetadata, args) {
        return _Platform_initialize(flagDecoder, args, impl.init, impl.update, impl.subscriptions, function(sendToApp, initialModel) {
            var divertHrefToApp = impl.setup && impl.setup(sendToApp);
            var view = impl.view;
            var title = _VirtualDom_doc.title;
            var bodyNode = _VirtualDom_doc.body;
            var currNode = _VirtualDom_virtualize(bodyNode);
            return _Browser_makeAnimator(initialModel, function(model) {
                _VirtualDom_divertHrefToApp = divertHrefToApp;
                var doc = view(model);
                var nextNode = _VirtualDom_node('body')(_List_Nil)(doc.body);
                var patches = _VirtualDom_diff(currNode, nextNode);
                bodyNode = _VirtualDom_applyPatches(bodyNode, currNode, patches, sendToApp);
                currNode = nextNode;
                _VirtualDom_divertHrefToApp = 0;
                title !== doc.title && (_VirtualDom_doc.title = title = doc.title);
            });
        });
    });
    // ANIMATION
    var _Browser_cancelAnimationFrame = typeof cancelAnimationFrame !== 'undefined' ? cancelAnimationFrame : function(id) {
        clearTimeout(id);
    };
    var _Browser_requestAnimationFrame = typeof requestAnimationFrame !== 'undefined' ? requestAnimationFrame : function(callback) {
        return setTimeout(callback, 1000 / 60);
    };
    function _Browser_makeAnimator(model, draw) {
        draw(model);
        var state = 0;
        function updateIfNeeded() {
            state = state === 1 ? 0 : (_Browser_requestAnimationFrame(updateIfNeeded), draw(model), 1);
        }
        return function(nextModel, isSync) {
            model = nextModel;
            isSync ? (draw(model), state === 2 && (state = 1)) : (state === 0 && _Browser_requestAnimationFrame(updateIfNeeded), state = 2);
        };
    }
    // APPLICATION
    function _Browser_application(impl) {
        var onUrlChange = impl.onUrlChange;
        var onUrlRequest = impl.onUrlRequest;
        var key = function() {
            key.a(onUrlChange(_Browser_getUrl()));
        };
        return _Browser_document({
            setup: function(sendToApp) {
                key.a = sendToApp;
                _Browser_window.addEventListener('popstate', key);
                _Browser_window.navigator.userAgent.indexOf('Trident') < 0 || _Browser_window.addEventListener('hashchange', key);
                return F2(function(domNode, event) {
                    if (!event.ctrlKey && !event.metaKey && !event.shiftKey && event.button < 1 && !domNode.target && !domNode.hasAttribute('download')) {
                        event.preventDefault();
                        var href = domNode.href;
                        var curr = _Browser_getUrl();
                        var next = $elm$url$Url$fromString(href).a;
                        sendToApp(onUrlRequest(next && curr.protocol === next.protocol && curr.host === next.host && curr.port_.a === next.port_.a ? $elm$browser$Browser$Internal(next) : $elm$browser$Browser$External(href)));
                    }
                });
            },
            init: function(flags) {
                return A3(impl.init, flags, _Browser_getUrl(), key);
            },
            view: impl.view,
            update: impl.update,
            subscriptions: impl.subscriptions
        });
    }
    function _Browser_getUrl() {
        return $elm$url$Url$fromString(_VirtualDom_doc.location.href).a || _Debug_crash(1);
    }
    var _Browser_go = F2(function(key, n) {
        return A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function() {
            n && history.go(n);
            key();
        }));
    });
    var _Browser_pushUrl = F2(function(key, url) {
        return A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function() {
            history.pushState({}, '', url);
            key();
        }));
    });
    var _Browser_replaceUrl = F2(function(key, url) {
        return A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function() {
            history.replaceState({}, '', url);
            key();
        }));
    });
    // GLOBAL EVENTS
    var _Browser_fakeNode = {
        addEventListener: function() {},
        removeEventListener: function() {}
    };
    var _Browser_doc = typeof document !== 'undefined' ? document : _Browser_fakeNode;
    var _Browser_window = typeof window !== 'undefined' ? window : _Browser_fakeNode;
    var _Browser_on = F3(function(node, eventName, sendToSelf) {
        return _Scheduler_spawn(_Scheduler_binding(function(callback) {
            function handler(event) {
                _Scheduler_rawSpawn(sendToSelf(event));
            }
            node.addEventListener(eventName, handler, _VirtualDom_passiveSupported && {
                passive: true
            });
            return function() {
                node.removeEventListener(eventName, handler);
            };
        }));
    });
    var _Browser_decodeEvent = F2(function(decoder, event) {
        var result = _Json_runHelp(decoder, event);
        return $elm$core$Result$isOk(result) ? $elm$core$Maybe$Just(result.a) : $elm$core$Maybe$Nothing;
    });
    // PAGE VISIBILITY
    function _Browser_visibilityInfo() {
        return typeof _VirtualDom_doc.hidden !== 'undefined' ? {
            hidden: 'hidden',
            change: 'visibilitychange'
        } : typeof _VirtualDom_doc.mozHidden !== 'undefined' ? {
            hidden: 'mozHidden',
            change: 'mozvisibilitychange'
        } : typeof _VirtualDom_doc.msHidden !== 'undefined' ? {
            hidden: 'msHidden',
            change: 'msvisibilitychange'
        } : typeof _VirtualDom_doc.webkitHidden !== 'undefined' ? {
            hidden: 'webkitHidden',
            change: 'webkitvisibilitychange'
        } : {
            hidden: 'hidden',
            change: 'visibilitychange'
        };
    }
    // ANIMATION FRAMES
    function _Browser_rAF() {
        return _Scheduler_binding(function(callback) {
            var id = _Browser_requestAnimationFrame(function() {
                callback(_Scheduler_succeed(Date.now()));
            });
            return function() {
                _Browser_cancelAnimationFrame(id);
            };
        });
    }
    function _Browser_now() {
        return _Scheduler_binding(function(callback) {
            callback(_Scheduler_succeed(Date.now()));
        });
    }
    // DOM STUFF
    function _Browser_withNode(id, doStuff) {
        return _Scheduler_binding(function(callback) {
            _Browser_requestAnimationFrame(function() {
                var node = document.getElementById(id);
                callback(node ? _Scheduler_succeed(doStuff(node)) : _Scheduler_fail($elm$browser$Browser$Dom$NotFound(id)));
            });
        });
    }
    function _Browser_withWindow(doStuff) {
        return _Scheduler_binding(function(callback) {
            _Browser_requestAnimationFrame(function() {
                callback(_Scheduler_succeed(doStuff()));
            });
        });
    }
    // FOCUS and BLUR
    var _Browser_call = F2(function(functionName, id) {
        return _Browser_withNode(id, function(node) {
            node[functionName]();
            return _Utils_Tuple0;
        });
    });
    // WINDOW VIEWPORT
    function _Browser_getViewport() {
        return {
            scene: _Browser_getScene(),
            viewport: {
                x: _Browser_window.pageXOffset,
                y: _Browser_window.pageYOffset,
                width: _Browser_doc.documentElement.clientWidth,
                height: _Browser_doc.documentElement.clientHeight
            }
        };
    }
    function _Browser_getScene() {
        var body = _Browser_doc.body;
        var elem = _Browser_doc.documentElement;
        return {
            width: Math.max(body.scrollWidth, body.offsetWidth, elem.scrollWidth, elem.offsetWidth, elem.clientWidth),
            height: Math.max(body.scrollHeight, body.offsetHeight, elem.scrollHeight, elem.offsetHeight, elem.clientHeight)
        };
    }
    var _Browser_setViewport = F2(function(x, y) {
        return _Browser_withWindow(function() {
            _Browser_window.scroll(x, y);
            return _Utils_Tuple0;
        });
    });
    // ELEMENT VIEWPORT
    function _Browser_getViewportOf(id) {
        return _Browser_withNode(id, function(node) {
            return {
                scene: {
                    width: node.scrollWidth,
                    height: node.scrollHeight
                },
                viewport: {
                    x: node.scrollLeft,
                    y: node.scrollTop,
                    width: node.clientWidth,
                    height: node.clientHeight
                }
            };
        });
    }
    var _Browser_setViewportOf = F3(function(id, x, y) {
        return _Browser_withNode(id, function(node) {
            node.scrollLeft = x;
            node.scrollTop = y;
            return _Utils_Tuple0;
        });
    });
    // ELEMENT
    function _Browser_getElement(id) {
        return _Browser_withNode(id, function(node) {
            var rect = node.getBoundingClientRect();
            var x = _Browser_window.pageXOffset;
            var y = _Browser_window.pageYOffset;
            return {
                scene: _Browser_getScene(),
                viewport: {
                    x: x,
                    y: y,
                    width: _Browser_doc.documentElement.clientWidth,
                    height: _Browser_doc.documentElement.clientHeight
                },
                element: {
                    x: x + rect.left,
                    y: y + rect.top,
                    width: rect.width,
                    height: rect.height
                }
            };
        });
    }
    // LOAD and RELOAD
    function _Browser_reload(skipCache) {
        return A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function(callback) {
            _VirtualDom_doc.location.reload(skipCache);
        }));
    }
    function _Browser_load(url) {
        return A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function(callback) {
            try {
                _Browser_window.location = url;
            } catch (err) {
                // Only Firefox can throw a NS_ERROR_MALFORMED_URI exception here.
                // Other browsers reload the page, so let's be consistent about that.
                _VirtualDom_doc.location.reload(false);
            }
        }));
    }
    function _Url_percentEncode(string) {
        return encodeURIComponent(string);
    }
    function _Url_percentDecode(string) {
        try {
            return $elm$core$Maybe$Just(decodeURIComponent(string));
        } catch (e) {
            return $elm$core$Maybe$Nothing;
        }
    }
    function _Time_now(millisToPosix) {
        return _Scheduler_binding(function(callback) {
            callback(_Scheduler_succeed(millisToPosix(Date.now())));
        });
    }
    var _Time_setInterval = F2(function(interval, task) {
        return _Scheduler_binding(function(callback) {
            var id = setInterval(function() {
                _Scheduler_rawSpawn(task);
            }, interval);
            return function() {
                clearInterval(id);
            };
        });
    });
    function _Time_here() {
        return _Scheduler_binding(function(callback) {
            callback(_Scheduler_succeed(A2($elm$time$Time$customZone, -new Date().getTimezoneOffset(), _List_Nil)));
        });
    }
    function _Time_getZoneName() {
        return _Scheduler_binding(function(callback) {
            try {
                var name = $elm$time$Time$Name(Intl.DateTimeFormat().resolvedOptions().timeZone);
            } catch (e) {
                var name = $elm$time$Time$Offset(new Date().getTimezoneOffset());
            }
            callback(_Scheduler_succeed(name));
        });
    }
    // STRINGS
    var _Parser_isSubString = F5(function(smallString, offset, row, col, bigString) {
        var smallLength = smallString.length;
        var isGood = offset + smallLength <= bigString.length;
        for(var i = 0; isGood && i < smallLength;){
            var code = bigString.charCodeAt(offset);
            isGood = smallString[i++] === bigString[offset++] && (code === 10 /* \n */  ? (row++, col = 1) : (col++, (code & 63488) === 55296 ? smallString[i++] === bigString[offset++] : 1));
        }
        return _Utils_Tuple3(isGood ? offset : -1, row, col);
    });
    // CHARS
    var _Parser_isSubChar = F3(function(predicate, offset, string) {
        return string.length <= offset ? -1 : (string.charCodeAt(offset) & 63488) === 55296 ? predicate(_Utils_chr(string.substr(offset, 2))) ? offset + 2 : -1 : predicate(_Utils_chr(string[offset])) ? string[offset] === '\n' ? -2 : offset + 1 : -1;
    });
    var _Parser_isAsciiCode = F3(function(code, offset, string) {
        return string.charCodeAt(offset) === code;
    });
    // NUMBERS
    var _Parser_chompBase10 = F2(function(offset, string) {
        for(; offset < string.length; offset++){
            var code = string.charCodeAt(offset);
            if (code < 48 || 57 < code) return offset;
        }
        return offset;
    });
    var _Parser_consumeBase = F3(function(base, offset, string) {
        for(var total = 0; offset < string.length; offset++){
            var digit = string.charCodeAt(offset) - 48;
            if (digit < 0 || base <= digit) break;
            total = base * total + digit;
        }
        return _Utils_Tuple2(offset, total);
    });
    var _Parser_consumeBase16 = F2(function(offset, string) {
        for(var total = 0; offset < string.length; offset++){
            var code = string.charCodeAt(offset);
            if (48 <= code && code <= 57) total = 16 * total + code - 48;
            else if (65 <= code && code <= 70) total = 16 * total + code - 55;
            else if (97 <= code && code <= 102) total = 16 * total + code - 87;
            else break;
        }
        return _Utils_Tuple2(offset, total);
    });
    // FIND STRING
    var _Parser_findSubString = F5(function(smallString, offset, row, col, bigString) {
        var newOffset = bigString.indexOf(smallString, offset);
        var target = newOffset < 0 ? bigString.length : newOffset + smallString.length;
        while(offset < target){
            var code = bigString.charCodeAt(offset++);
            code === 10 /* \n */  ? (col = 1, row++) : (col++, (code & 63488) === 55296 && offset++);
        }
        return _Utils_Tuple3(newOffset, row, col);
    });
    // CREATE
    var _Regex_never = /.^/;
    var _Regex_fromStringWith = F2(function(options, string) {
        var flags = 'g';
        if (options.multiline) flags += 'm';
        if (options.caseInsensitive) flags += 'i';
        try {
            return $elm$core$Maybe$Just(new RegExp(string, flags));
        } catch (error) {
            return $elm$core$Maybe$Nothing;
        }
    });
    // USE
    var _Regex_contains = F2(function(re, string) {
        return string.match(re) !== null;
    });
    var _Regex_findAtMost = F3(function(n, re, str) {
        var out = [];
        var number = 0;
        var string = str;
        var lastIndex = re.lastIndex;
        var prevLastIndex = -1;
        var result;
        while((number++) < n && (result = re.exec(string))){
            if (prevLastIndex == re.lastIndex) break;
            var i = result.length - 1;
            var subs = new Array(i);
            while(i > 0){
                var submatch = result[i];
                subs[--i] = submatch ? $elm$core$Maybe$Just(submatch) : $elm$core$Maybe$Nothing;
            }
            out.push(A4($elm$regex$Regex$Match, result[0], result.index, number, _List_fromArray(subs)));
            prevLastIndex = re.lastIndex;
        }
        re.lastIndex = lastIndex;
        return _List_fromArray(out);
    });
    var _Regex_replaceAtMost = F4(function(n, re, replacer, string) {
        var count = 0;
        function jsReplacer(match) {
            if ((count++) >= n) return match;
            var i = arguments.length - 3;
            var submatches = new Array(i);
            while(i > 0){
                var submatch = arguments[i];
                submatches[--i] = submatch ? $elm$core$Maybe$Just(submatch) : $elm$core$Maybe$Nothing;
            }
            return replacer(A4($elm$regex$Regex$Match, match, arguments[arguments.length - 2], count, _List_fromArray(submatches)));
        }
        return string.replace(re, jsReplacer);
    });
    var _Regex_splitAtMost = F3(function(n, re, str) {
        var string = str;
        var out = [];
        var start = re.lastIndex;
        var restoreLastIndex = re.lastIndex;
        while(n--){
            var result = re.exec(string);
            if (!result) break;
            out.push(string.slice(start, result.index));
            start = re.lastIndex;
        }
        out.push(string.slice(start));
        re.lastIndex = restoreLastIndex;
        return _List_fromArray(out);
    });
    var _Regex_infinity = Infinity;
    var _Bitwise_and = F2(function(a, b) {
        return a & b;
    });
    var _Bitwise_or = F2(function(a, b) {
        return a | b;
    });
    var _Bitwise_xor = F2(function(a, b) {
        return a ^ b;
    });
    function _Bitwise_complement(a) {
        return ~a;
    }
    var _Bitwise_shiftLeftBy = F2(function(offset, a) {
        return a << offset;
    });
    var _Bitwise_shiftRightBy = F2(function(offset, a) {
        return a >> offset;
    });
    var _Bitwise_shiftRightZfBy = F2(function(offset, a) {
        return a >>> offset;
    });
    var $author$project$Main$ChangedUrl = function(a) {
        return {
            $: 'ChangedUrl',
            a: a
        };
    };
    var $author$project$Main$ClickedLink = function(a) {
        return {
            $: 'ClickedLink',
            a: a
        };
    };
    var $elm$core$List$cons = _List_cons;
    var $elm$core$Elm$JsArray$foldr = _JsArray_foldr;
    var $elm$core$Array$foldr = F3(function(func, baseCase, _v0) {
        var tree = _v0.c;
        var tail = _v0.d;
        var helper = F2(function(node, acc) {
            if (node.$ === 'SubTree') {
                var subTree = node.a;
                return A3($elm$core$Elm$JsArray$foldr, helper, acc, subTree);
            } else {
                var values = node.a;
                return A3($elm$core$Elm$JsArray$foldr, func, acc, values);
            }
        });
        return A3($elm$core$Elm$JsArray$foldr, helper, A3($elm$core$Elm$JsArray$foldr, func, baseCase, tail), tree);
    });
    var $elm$core$Array$toList = function(array) {
        return A3($elm$core$Array$foldr, $elm$core$List$cons, _List_Nil, array);
    };
    var $elm$core$Dict$foldr = F3(function(func, acc, t) {
        foldr: while(true){
            if (t.$ === 'RBEmpty_elm_builtin') return acc;
            else {
                var key = t.b;
                var value = t.c;
                var left = t.d;
                var right = t.e;
                var $temp$func = func, $temp$acc = A3(func, key, value, A3($elm$core$Dict$foldr, func, acc, right)), $temp$t = left;
                func = $temp$func;
                acc = $temp$acc;
                t = $temp$t;
                continue foldr;
            }
        }
    });
    var $elm$core$Dict$toList = function(dict) {
        return A3($elm$core$Dict$foldr, F3(function(key, value, list) {
            return A2($elm$core$List$cons, _Utils_Tuple2(key, value), list);
        }), _List_Nil, dict);
    };
    var $elm$core$Dict$keys = function(dict) {
        return A3($elm$core$Dict$foldr, F3(function(key, value, keyList) {
            return A2($elm$core$List$cons, key, keyList);
        }), _List_Nil, dict);
    };
    var $elm$core$Set$toList = function(_v0) {
        var dict = _v0.a;
        return $elm$core$Dict$keys(dict);
    };
    var $elm$core$Basics$EQ = {
        $: 'EQ'
    };
    var $elm$core$Basics$GT = {
        $: 'GT'
    };
    var $elm$core$Basics$LT = {
        $: 'LT'
    };
    var $elm$core$Result$Err = function(a) {
        return {
            $: 'Err',
            a: a
        };
    };
    var $elm$json$Json$Decode$Failure = F2(function(a, b) {
        return {
            $: 'Failure',
            a: a,
            b: b
        };
    });
    var $elm$json$Json$Decode$Field = F2(function(a, b) {
        return {
            $: 'Field',
            a: a,
            b: b
        };
    });
    var $elm$json$Json$Decode$Index = F2(function(a, b) {
        return {
            $: 'Index',
            a: a,
            b: b
        };
    });
    var $elm$core$Result$Ok = function(a) {
        return {
            $: 'Ok',
            a: a
        };
    };
    var $elm$json$Json$Decode$OneOf = function(a) {
        return {
            $: 'OneOf',
            a: a
        };
    };
    var $elm$core$Basics$False = {
        $: 'False'
    };
    var $elm$core$Basics$add = _Basics_add;
    var $elm$core$Maybe$Just = function(a) {
        return {
            $: 'Just',
            a: a
        };
    };
    var $elm$core$Maybe$Nothing = {
        $: 'Nothing'
    };
    var $elm$core$String$all = _String_all;
    var $elm$core$Basics$and = _Basics_and;
    var $elm$core$Basics$append = _Utils_append;
    var $elm$json$Json$Encode$encode = _Json_encode;
    var $elm$core$String$fromInt = _String_fromNumber;
    var $elm$core$String$join = F2(function(sep, chunks) {
        return A2(_String_join, sep, _List_toArray(chunks));
    });
    var $elm$core$String$split = F2(function(sep, string) {
        return _List_fromArray(A2(_String_split, sep, string));
    });
    var $elm$json$Json$Decode$indent = function(str) {
        return A2($elm$core$String$join, '\n    ', A2($elm$core$String$split, '\n', str));
    };
    var $elm$core$List$foldl = F3(function(func, acc, list) {
        foldl: while(true){
            if (!list.b) return acc;
            else {
                var x = list.a;
                var xs = list.b;
                var $temp$func = func, $temp$acc = A2(func, x, acc), $temp$list = xs;
                func = $temp$func;
                acc = $temp$acc;
                list = $temp$list;
                continue foldl;
            }
        }
    });
    var $elm$core$List$length = function(xs) {
        return A3($elm$core$List$foldl, F2(function(_v0, i) {
            return i + 1;
        }), 0, xs);
    };
    var $elm$core$List$map2 = _List_map2;
    var $elm$core$Basics$le = _Utils_le;
    var $elm$core$Basics$sub = _Basics_sub;
    var $elm$core$List$rangeHelp = F3(function(lo, hi, list) {
        rangeHelp: while(true){
            if (_Utils_cmp(lo, hi) < 1) {
                var $temp$lo = lo, $temp$hi = hi - 1, $temp$list = A2($elm$core$List$cons, hi, list);
                lo = $temp$lo;
                hi = $temp$hi;
                list = $temp$list;
                continue rangeHelp;
            } else return list;
        }
    });
    var $elm$core$List$range = F2(function(lo, hi) {
        return A3($elm$core$List$rangeHelp, lo, hi, _List_Nil);
    });
    var $elm$core$List$indexedMap = F2(function(f, xs) {
        return A3($elm$core$List$map2, f, A2($elm$core$List$range, 0, $elm$core$List$length(xs) - 1), xs);
    });
    var $elm$core$Char$toCode = _Char_toCode;
    var $elm$core$Char$isLower = function(_char) {
        var code = $elm$core$Char$toCode(_char);
        return 97 <= code && code <= 122;
    };
    var $elm$core$Char$isUpper = function(_char) {
        var code = $elm$core$Char$toCode(_char);
        return code <= 90 && 65 <= code;
    };
    var $elm$core$Basics$or = _Basics_or;
    var $elm$core$Char$isAlpha = function(_char) {
        return $elm$core$Char$isLower(_char) || $elm$core$Char$isUpper(_char);
    };
    var $elm$core$Char$isDigit = function(_char) {
        var code = $elm$core$Char$toCode(_char);
        return code <= 57 && 48 <= code;
    };
    var $elm$core$Char$isAlphaNum = function(_char) {
        return $elm$core$Char$isLower(_char) || $elm$core$Char$isUpper(_char) || $elm$core$Char$isDigit(_char);
    };
    var $elm$core$List$reverse = function(list) {
        return A3($elm$core$List$foldl, $elm$core$List$cons, _List_Nil, list);
    };
    var $elm$core$String$uncons = _String_uncons;
    var $elm$json$Json$Decode$errorOneOf = F2(function(i, error) {
        return '\n\n(' + ($elm$core$String$fromInt(i + 1) + (') ' + $elm$json$Json$Decode$indent($elm$json$Json$Decode$errorToString(error))));
    });
    var $elm$json$Json$Decode$errorToString = function(error) {
        return A2($elm$json$Json$Decode$errorToStringHelp, error, _List_Nil);
    };
    var $elm$json$Json$Decode$errorToStringHelp = F2(function(error, context) {
        errorToStringHelp: while(true)switch(error.$){
            case 'Field':
                var f = error.a;
                var err = error.b;
                var isSimple = function() {
                    var _v1 = $elm$core$String$uncons(f);
                    if (_v1.$ === 'Nothing') return false;
                    else {
                        var _v2 = _v1.a;
                        var _char = _v2.a;
                        var rest = _v2.b;
                        return $elm$core$Char$isAlpha(_char) && A2($elm$core$String$all, $elm$core$Char$isAlphaNum, rest);
                    }
                }();
                var fieldName = isSimple ? '.' + f : '[\'' + (f + '\']');
                var $temp$error = err, $temp$context = A2($elm$core$List$cons, fieldName, context);
                error = $temp$error;
                context = $temp$context;
                continue errorToStringHelp;
            case 'Index':
                var i = error.a;
                var err = error.b;
                var indexName = '[' + ($elm$core$String$fromInt(i) + ']');
                var $temp$error = err, $temp$context = A2($elm$core$List$cons, indexName, context);
                error = $temp$error;
                context = $temp$context;
                continue errorToStringHelp;
            case 'OneOf':
                var errors = error.a;
                if (!errors.b) return 'Ran into a Json.Decode.oneOf with no possibilities' + function() {
                    if (!context.b) return '!';
                    else return ' at json' + A2($elm$core$String$join, '', $elm$core$List$reverse(context));
                }();
                else if (!errors.b.b) {
                    var err = errors.a;
                    var $temp$error = err, $temp$context = context;
                    error = $temp$error;
                    context = $temp$context;
                    continue errorToStringHelp;
                } else {
                    var starter = function() {
                        if (!context.b) return 'Json.Decode.oneOf';
                        else return 'The Json.Decode.oneOf at json' + A2($elm$core$String$join, '', $elm$core$List$reverse(context));
                    }();
                    var introduction = starter + (' failed in the following ' + ($elm$core$String$fromInt($elm$core$List$length(errors)) + ' ways:'));
                    return A2($elm$core$String$join, '\n\n', A2($elm$core$List$cons, introduction, A2($elm$core$List$indexedMap, $elm$json$Json$Decode$errorOneOf, errors)));
                }
            default:
                var msg = error.a;
                var json = error.b;
                var introduction = function() {
                    if (!context.b) return 'Problem with the given value:\n\n';
                    else return 'Problem with the value at json' + (A2($elm$core$String$join, '', $elm$core$List$reverse(context)) + ':\n\n    ');
                }();
                return introduction + ($elm$json$Json$Decode$indent(A2($elm$json$Json$Encode$encode, 4, json)) + ('\n\n' + msg));
        }
    });
    var $elm$core$Array$branchFactor = 32;
    var $elm$core$Array$Array_elm_builtin = F4(function(a, b, c, d) {
        return {
            $: 'Array_elm_builtin',
            a: a,
            b: b,
            c: c,
            d: d
        };
    });
    var $elm$core$Elm$JsArray$empty = _JsArray_empty;
    var $elm$core$Basics$ceiling = _Basics_ceiling;
    var $elm$core$Basics$fdiv = _Basics_fdiv;
    var $elm$core$Basics$logBase = F2(function(base, number) {
        return _Basics_log(number) / _Basics_log(base);
    });
    var $elm$core$Basics$toFloat = _Basics_toFloat;
    var $elm$core$Array$shiftStep = $elm$core$Basics$ceiling(A2($elm$core$Basics$logBase, 2, $elm$core$Array$branchFactor));
    var $elm$core$Array$empty = A4($elm$core$Array$Array_elm_builtin, 0, $elm$core$Array$shiftStep, $elm$core$Elm$JsArray$empty, $elm$core$Elm$JsArray$empty);
    var $elm$core$Elm$JsArray$initialize = _JsArray_initialize;
    var $elm$core$Array$Leaf = function(a) {
        return {
            $: 'Leaf',
            a: a
        };
    };
    var $elm$core$Basics$apL = F2(function(f, x) {
        return f(x);
    });
    var $elm$core$Basics$apR = F2(function(x, f) {
        return f(x);
    });
    var $elm$core$Basics$eq = _Utils_equal;
    var $elm$core$Basics$floor = _Basics_floor;
    var $elm$core$Elm$JsArray$length = _JsArray_length;
    var $elm$core$Basics$gt = _Utils_gt;
    var $elm$core$Basics$max = F2(function(x, y) {
        return _Utils_cmp(x, y) > 0 ? x : y;
    });
    var $elm$core$Basics$mul = _Basics_mul;
    var $elm$core$Array$SubTree = function(a) {
        return {
            $: 'SubTree',
            a: a
        };
    };
    var $elm$core$Elm$JsArray$initializeFromList = _JsArray_initializeFromList;
    var $elm$core$Array$compressNodes = F2(function(nodes, acc) {
        compressNodes: while(true){
            var _v0 = A2($elm$core$Elm$JsArray$initializeFromList, $elm$core$Array$branchFactor, nodes);
            var node = _v0.a;
            var remainingNodes = _v0.b;
            var newAcc = A2($elm$core$List$cons, $elm$core$Array$SubTree(node), acc);
            if (!remainingNodes.b) return $elm$core$List$reverse(newAcc);
            else {
                var $temp$nodes = remainingNodes, $temp$acc = newAcc;
                nodes = $temp$nodes;
                acc = $temp$acc;
                continue compressNodes;
            }
        }
    });
    var $elm$core$Tuple$first = function(_v0) {
        var x = _v0.a;
        return x;
    };
    var $elm$core$Array$treeFromBuilder = F2(function(nodeList, nodeListSize) {
        treeFromBuilder: while(true){
            var newNodeSize = $elm$core$Basics$ceiling(nodeListSize / $elm$core$Array$branchFactor);
            if (newNodeSize === 1) return A2($elm$core$Elm$JsArray$initializeFromList, $elm$core$Array$branchFactor, nodeList).a;
            else {
                var $temp$nodeList = A2($elm$core$Array$compressNodes, nodeList, _List_Nil), $temp$nodeListSize = newNodeSize;
                nodeList = $temp$nodeList;
                nodeListSize = $temp$nodeListSize;
                continue treeFromBuilder;
            }
        }
    });
    var $elm$core$Array$builderToArray = F2(function(reverseNodeList, builder) {
        if (!builder.nodeListSize) return A4($elm$core$Array$Array_elm_builtin, $elm$core$Elm$JsArray$length(builder.tail), $elm$core$Array$shiftStep, $elm$core$Elm$JsArray$empty, builder.tail);
        else {
            var treeLen = builder.nodeListSize * $elm$core$Array$branchFactor;
            var depth = $elm$core$Basics$floor(A2($elm$core$Basics$logBase, $elm$core$Array$branchFactor, treeLen - 1));
            var correctNodeList = reverseNodeList ? $elm$core$List$reverse(builder.nodeList) : builder.nodeList;
            var tree = A2($elm$core$Array$treeFromBuilder, correctNodeList, builder.nodeListSize);
            return A4($elm$core$Array$Array_elm_builtin, $elm$core$Elm$JsArray$length(builder.tail) + treeLen, A2($elm$core$Basics$max, 5, depth * $elm$core$Array$shiftStep), tree, builder.tail);
        }
    });
    var $elm$core$Basics$idiv = _Basics_idiv;
    var $elm$core$Basics$lt = _Utils_lt;
    var $elm$core$Array$initializeHelp = F5(function(fn, fromIndex, len, nodeList, tail) {
        initializeHelp: while(true){
            if (fromIndex < 0) return A2($elm$core$Array$builderToArray, false, {
                nodeList: nodeList,
                nodeListSize: len / $elm$core$Array$branchFactor | 0,
                tail: tail
            });
            else {
                var leaf = $elm$core$Array$Leaf(A3($elm$core$Elm$JsArray$initialize, $elm$core$Array$branchFactor, fromIndex, fn));
                var $temp$fn = fn, $temp$fromIndex = fromIndex - $elm$core$Array$branchFactor, $temp$len = len, $temp$nodeList = A2($elm$core$List$cons, leaf, nodeList), $temp$tail = tail;
                fn = $temp$fn;
                fromIndex = $temp$fromIndex;
                len = $temp$len;
                nodeList = $temp$nodeList;
                tail = $temp$tail;
                continue initializeHelp;
            }
        }
    });
    var $elm$core$Basics$remainderBy = _Basics_remainderBy;
    var $elm$core$Array$initialize = F2(function(len, fn) {
        if (len <= 0) return $elm$core$Array$empty;
        else {
            var tailLen = len % $elm$core$Array$branchFactor;
            var tail = A3($elm$core$Elm$JsArray$initialize, tailLen, len - tailLen, fn);
            var initialFromIndex = len - tailLen - $elm$core$Array$branchFactor;
            return A5($elm$core$Array$initializeHelp, fn, initialFromIndex, len, _List_Nil, tail);
        }
    });
    var $elm$core$Basics$True = {
        $: 'True'
    };
    var $elm$core$Result$isOk = function(result) {
        if (result.$ === 'Ok') return true;
        else return false;
    };
    var $elm$json$Json$Decode$andThen = _Json_andThen;
    var $elm$json$Json$Decode$map = _Json_map1;
    var $elm$json$Json$Decode$map2 = _Json_map2;
    var $elm$json$Json$Decode$succeed = _Json_succeed;
    var $elm$virtual_dom$VirtualDom$toHandlerInt = function(handler) {
        switch(handler.$){
            case 'Normal':
                return 0;
            case 'MayStopPropagation':
                return 1;
            case 'MayPreventDefault':
                return 2;
            default:
                return 3;
        }
    };
    var $elm$browser$Browser$External = function(a) {
        return {
            $: 'External',
            a: a
        };
    };
    var $elm$browser$Browser$Internal = function(a) {
        return {
            $: 'Internal',
            a: a
        };
    };
    var $elm$core$Basics$identity = function(x) {
        return x;
    };
    var $elm$browser$Browser$Dom$NotFound = function(a) {
        return {
            $: 'NotFound',
            a: a
        };
    };
    var $elm$url$Url$Http = {
        $: 'Http'
    };
    var $elm$url$Url$Https = {
        $: 'Https'
    };
    var $elm$url$Url$Url = F6(function(protocol, host, port_, path, query, fragment) {
        return {
            fragment: fragment,
            host: host,
            path: path,
            port_: port_,
            protocol: protocol,
            query: query
        };
    });
    var $elm$core$String$contains = _String_contains;
    var $elm$core$String$length = _String_length;
    var $elm$core$String$slice = _String_slice;
    var $elm$core$String$dropLeft = F2(function(n, string) {
        return n < 1 ? string : A3($elm$core$String$slice, n, $elm$core$String$length(string), string);
    });
    var $elm$core$String$indexes = _String_indexes;
    var $elm$core$String$isEmpty = function(string) {
        return string === '';
    };
    var $elm$core$String$left = F2(function(n, string) {
        return n < 1 ? '' : A3($elm$core$String$slice, 0, n, string);
    });
    var $elm$core$String$toInt = _String_toInt;
    var $elm$url$Url$chompBeforePath = F5(function(protocol, path, params, frag, str) {
        if ($elm$core$String$isEmpty(str) || A2($elm$core$String$contains, '@', str)) return $elm$core$Maybe$Nothing;
        else {
            var _v0 = A2($elm$core$String$indexes, ':', str);
            if (!_v0.b) return $elm$core$Maybe$Just(A6($elm$url$Url$Url, protocol, str, $elm$core$Maybe$Nothing, path, params, frag));
            else {
                if (!_v0.b.b) {
                    var i = _v0.a;
                    var _v1 = $elm$core$String$toInt(A2($elm$core$String$dropLeft, i + 1, str));
                    if (_v1.$ === 'Nothing') return $elm$core$Maybe$Nothing;
                    else {
                        var port_ = _v1;
                        return $elm$core$Maybe$Just(A6($elm$url$Url$Url, protocol, A2($elm$core$String$left, i, str), port_, path, params, frag));
                    }
                } else return $elm$core$Maybe$Nothing;
            }
        }
    });
    var $elm$url$Url$chompBeforeQuery = F4(function(protocol, params, frag, str) {
        if ($elm$core$String$isEmpty(str)) return $elm$core$Maybe$Nothing;
        else {
            var _v0 = A2($elm$core$String$indexes, '/', str);
            if (!_v0.b) return A5($elm$url$Url$chompBeforePath, protocol, '/', params, frag, str);
            else {
                var i = _v0.a;
                return A5($elm$url$Url$chompBeforePath, protocol, A2($elm$core$String$dropLeft, i, str), params, frag, A2($elm$core$String$left, i, str));
            }
        }
    });
    var $elm$url$Url$chompBeforeFragment = F3(function(protocol, frag, str) {
        if ($elm$core$String$isEmpty(str)) return $elm$core$Maybe$Nothing;
        else {
            var _v0 = A2($elm$core$String$indexes, '?', str);
            if (!_v0.b) return A4($elm$url$Url$chompBeforeQuery, protocol, $elm$core$Maybe$Nothing, frag, str);
            else {
                var i = _v0.a;
                return A4($elm$url$Url$chompBeforeQuery, protocol, $elm$core$Maybe$Just(A2($elm$core$String$dropLeft, i + 1, str)), frag, A2($elm$core$String$left, i, str));
            }
        }
    });
    var $elm$url$Url$chompAfterProtocol = F2(function(protocol, str) {
        if ($elm$core$String$isEmpty(str)) return $elm$core$Maybe$Nothing;
        else {
            var _v0 = A2($elm$core$String$indexes, '#', str);
            if (!_v0.b) return A3($elm$url$Url$chompBeforeFragment, protocol, $elm$core$Maybe$Nothing, str);
            else {
                var i = _v0.a;
                return A3($elm$url$Url$chompBeforeFragment, protocol, $elm$core$Maybe$Just(A2($elm$core$String$dropLeft, i + 1, str)), A2($elm$core$String$left, i, str));
            }
        }
    });
    var $elm$core$String$startsWith = _String_startsWith;
    var $elm$url$Url$fromString = function(str) {
        return A2($elm$core$String$startsWith, 'http://', str) ? A2($elm$url$Url$chompAfterProtocol, $elm$url$Url$Http, A2($elm$core$String$dropLeft, 7, str)) : A2($elm$core$String$startsWith, 'https://', str) ? A2($elm$url$Url$chompAfterProtocol, $elm$url$Url$Https, A2($elm$core$String$dropLeft, 8, str)) : $elm$core$Maybe$Nothing;
    };
    var $elm$core$Basics$never = function(_v0) {
        never: while(true){
            var nvr = _v0.a;
            var $temp$_v0 = nvr;
            _v0 = $temp$_v0;
            continue never;
        }
    };
    var $elm$core$Task$Perform = function(a) {
        return {
            $: 'Perform',
            a: a
        };
    };
    var $elm$core$Task$succeed = _Scheduler_succeed;
    var $elm$core$Task$init = $elm$core$Task$succeed(_Utils_Tuple0);
    var $elm$core$List$foldrHelper = F4(function(fn, acc, ctr, ls) {
        if (!ls.b) return acc;
        else {
            var a = ls.a;
            var r1 = ls.b;
            if (!r1.b) return A2(fn, a, acc);
            else {
                var b = r1.a;
                var r2 = r1.b;
                if (!r2.b) return A2(fn, a, A2(fn, b, acc));
                else {
                    var c = r2.a;
                    var r3 = r2.b;
                    if (!r3.b) return A2(fn, a, A2(fn, b, A2(fn, c, acc)));
                    else {
                        var d = r3.a;
                        var r4 = r3.b;
                        var res = ctr > 500 ? A3($elm$core$List$foldl, fn, acc, $elm$core$List$reverse(r4)) : A4($elm$core$List$foldrHelper, fn, acc, ctr + 1, r4);
                        return A2(fn, a, A2(fn, b, A2(fn, c, A2(fn, d, res))));
                    }
                }
            }
        }
    });
    var $elm$core$List$foldr = F3(function(fn, acc, ls) {
        return A4($elm$core$List$foldrHelper, fn, acc, 0, ls);
    });
    var $elm$core$List$map = F2(function(f, xs) {
        return A3($elm$core$List$foldr, F2(function(x, acc) {
            return A2($elm$core$List$cons, f(x), acc);
        }), _List_Nil, xs);
    });
    var $elm$core$Task$andThen = _Scheduler_andThen;
    var $elm$core$Task$map = F2(function(func, taskA) {
        return A2($elm$core$Task$andThen, function(a) {
            return $elm$core$Task$succeed(func(a));
        }, taskA);
    });
    var $elm$core$Task$map2 = F3(function(func, taskA, taskB) {
        return A2($elm$core$Task$andThen, function(a) {
            return A2($elm$core$Task$andThen, function(b) {
                return $elm$core$Task$succeed(A2(func, a, b));
            }, taskB);
        }, taskA);
    });
    var $elm$core$Task$sequence = function(tasks) {
        return A3($elm$core$List$foldr, $elm$core$Task$map2($elm$core$List$cons), $elm$core$Task$succeed(_List_Nil), tasks);
    };
    var $elm$core$Platform$sendToApp = _Platform_sendToApp;
    var $elm$core$Task$spawnCmd = F2(function(router, _v0) {
        var task = _v0.a;
        return _Scheduler_spawn(A2($elm$core$Task$andThen, $elm$core$Platform$sendToApp(router), task));
    });
    var $elm$core$Task$onEffects = F3(function(router, commands, state) {
        return A2($elm$core$Task$map, function(_v0) {
            return _Utils_Tuple0;
        }, $elm$core$Task$sequence(A2($elm$core$List$map, $elm$core$Task$spawnCmd(router), commands)));
    });
    var $elm$core$Task$onSelfMsg = F3(function(_v0, _v1, _v2) {
        return $elm$core$Task$succeed(_Utils_Tuple0);
    });
    var $elm$core$Task$cmdMap = F2(function(tagger, _v0) {
        var task = _v0.a;
        return $elm$core$Task$Perform(A2($elm$core$Task$map, tagger, task));
    });
    _Platform_effectManagers['Task'] = _Platform_createManager($elm$core$Task$init, $elm$core$Task$onEffects, $elm$core$Task$onSelfMsg, $elm$core$Task$cmdMap);
    var $elm$core$Task$command = _Platform_leaf('Task');
    var $elm$core$Task$perform = F2(function(toMessage, task) {
        return $elm$core$Task$command($elm$core$Task$Perform(A2($elm$core$Task$map, toMessage, task)));
    });
    var $elm$browser$Browser$application = _Browser_application;
    var $elm$json$Json$Decode$index = _Json_decodeIndex;
    var $author$project$Main$Editor = F3(function(a, b, c) {
        return {
            $: 'Editor',
            a: a,
            b: b,
            c: c
        };
    });
    var $author$project$Main$Home = F2(function(a, b) {
        return {
            $: 'Home',
            a: a,
            b: b
        };
    });
    var $author$project$Main$EditorsModel = F5(function(pane, viewEditor, monacoValue, selectedView, errors) {
        return {
            errors: errors,
            monacoValue: monacoValue,
            pane: pane,
            selectedView: selectedView,
            viewEditor: viewEditor
        };
    });
    var $whale9490$elm_split_pane$SplitPane$Horizontal = {
        $: 'Horizontal'
    };
    var $author$project$Main$Init = {
        $: 'Init'
    };
    var $author$project$Main$MonacoValue = F3(function(views, domain, value) {
        return {
            domain: domain,
            value: value,
            views: views
        };
    });
    var $elm$core$Dict$RBEmpty_elm_builtin = {
        $: 'RBEmpty_elm_builtin'
    };
    var $elm$core$Dict$empty = $elm$core$Dict$RBEmpty_elm_builtin;
    var $elm_community$undo_redo$UndoList$UndoList = F3(function(past, present, future) {
        return {
            future: future,
            past: past,
            present: present
        };
    });
    var $elm_community$undo_redo$UndoList$fresh = function(state) {
        return A3($elm_community$undo_redo$UndoList$UndoList, _List_Nil, state, _List_Nil);
    };
    var $author$project$Main$getUndoRedoMonacoValue = $elm_community$undo_redo$UndoList$fresh(A3($author$project$Main$MonacoValue, $elm$core$Dict$empty, $elm$core$Maybe$Nothing, ''));
    var $whale9490$elm_split_pane$SplitPane$Draggable = function(a) {
        return {
            $: 'Draggable',
            a: a
        };
    };
    var $whale9490$elm_split_pane$SplitPane$State = function(a) {
        return {
            $: 'State',
            a: a
        };
    };
    var $whale9490$elm_split_pane$SplitPane$Percentage = function(a) {
        return {
            $: 'Percentage',
            a: a
        };
    };
    var $elm$core$Basics$min = F2(function(x, y) {
        return _Utils_cmp(x, y) < 0 ? x : y;
    });
    var $whale9490$elm_split_pane$Bound$createBound = F2(function(a, b) {
        return _Utils_Tuple2(A2($elm$core$Basics$min, a, b), A2($elm$core$Basics$max, a, b));
    });
    var $elm$core$Basics$composeL = F3(function(g, f, x) {
        return g(f(x));
    });
    var $whale9490$elm_split_pane$Bound$boundTo = function(_v0) {
        var a = _v0.a;
        var b = _v0.b;
        return A2($elm$core$Basics$composeL, $elm$core$Basics$min(b), $elm$core$Basics$max(a));
    };
    var $whale9490$elm_split_pane$Bound$putValue = F2(function(_v0, value) {
        var bound = _v0.b;
        return _Utils_Tuple2(A2($whale9490$elm_split_pane$Bound$boundTo, bound, value), bound);
    });
    var $whale9490$elm_split_pane$Bound$createBounded = F2(function(value, bound) {
        return A2($whale9490$elm_split_pane$Bound$putValue, _Utils_Tuple2(value, bound), value);
    });
    var $whale9490$elm_split_pane$SplitPane$percentage = F2(function(x, bound) {
        var newBound = function() {
            if (bound.$ === 'Just') {
                var _v1 = bound.a;
                var lower = _v1.a;
                var upper = _v1.b;
                return A2($whale9490$elm_split_pane$Bound$createBound, lower, upper);
            } else return A2($whale9490$elm_split_pane$Bound$createBound, 0, 1);
        }();
        return $whale9490$elm_split_pane$SplitPane$Percentage(A2($whale9490$elm_split_pane$Bound$createBounded, x, newBound));
    });
    var $whale9490$elm_split_pane$SplitPane$init = function(o) {
        return $whale9490$elm_split_pane$SplitPane$State({
            dragState: $whale9490$elm_split_pane$SplitPane$Draggable($elm$core$Maybe$Nothing),
            orientation: o,
            splitterPosition: A2($whale9490$elm_split_pane$SplitPane$percentage, 0.5, $elm$core$Maybe$Nothing)
        });
    };
    var $author$project$Main$getEditorsModel = function(selectedView) {
        return A5($author$project$Main$EditorsModel, $whale9490$elm_split_pane$SplitPane$init($whale9490$elm_split_pane$SplitPane$Horizontal), $author$project$Main$Init, $author$project$Main$getUndoRedoMonacoValue, selectedView, '');
    };
    var $author$project$Main$ReceiveMonacoElementPosition = function(a) {
        return {
            $: 'ReceiveMonacoElementPosition',
            a: a
        };
    };
    var $elm$core$Task$onError = _Scheduler_onError;
    var $elm$core$Task$attempt = F2(function(resultToMessage, task) {
        return $elm$core$Task$command($elm$core$Task$Perform(A2($elm$core$Task$onError, A2($elm$core$Basics$composeL, A2($elm$core$Basics$composeL, $elm$core$Task$succeed, resultToMessage), $elm$core$Result$Err), A2($elm$core$Task$andThen, A2($elm$core$Basics$composeL, A2($elm$core$Basics$composeL, $elm$core$Task$succeed, resultToMessage), $elm$core$Result$Ok), task))));
    });
    var $elm$browser$Browser$Dom$getElement = _Browser_getElement;
    var $author$project$Main$getMonacoElementPosition = A2($elm$core$Task$attempt, $author$project$Main$ReceiveMonacoElementPosition, $elm$browser$Browser$Dom$getElement('monaco'));
    var $elm$core$Platform$Cmd$batch = _Platform_batch;
    var $elm$core$Platform$Cmd$none = $elm$core$Platform$Cmd$batch(_List_Nil);
    var $author$project$Main$changeRouteTo = F3(function(gifLinks, maybeRoute, key) {
        if (maybeRoute.$ === 'Nothing') return _Utils_Tuple2(A2($author$project$Main$Home, key, gifLinks), $elm$core$Platform$Cmd$none);
        else if (maybeRoute.a.$ === 'Home') {
            var _v1 = maybeRoute.a;
            return _Utils_Tuple2(A2($author$project$Main$Home, key, gifLinks), $elm$core$Platform$Cmd$none);
        } else {
            var selectedView = maybeRoute.a.a;
            return _Utils_Tuple2(A3($author$project$Main$Editor, key, gifLinks, $author$project$Main$getEditorsModel(selectedView)), $author$project$Main$getMonacoElementPosition);
        }
    });
    var $elm$url$Url$Parser$State = F5(function(visited, unvisited, params, frag, value) {
        return {
            frag: frag,
            params: params,
            unvisited: unvisited,
            value: value,
            visited: visited
        };
    });
    var $elm$url$Url$Parser$getFirstMatch = function(states) {
        getFirstMatch: while(true){
            if (!states.b) return $elm$core$Maybe$Nothing;
            else {
                var state = states.a;
                var rest = states.b;
                var _v1 = state.unvisited;
                if (!_v1.b) return $elm$core$Maybe$Just(state.value);
                else {
                    if (_v1.a === '' && !_v1.b.b) return $elm$core$Maybe$Just(state.value);
                    else {
                        var $temp$states = rest;
                        states = $temp$states;
                        continue getFirstMatch;
                    }
                }
            }
        }
    };
    var $elm$url$Url$Parser$removeFinalEmpty = function(segments) {
        if (!segments.b) return _List_Nil;
        else {
            if (segments.a === '' && !segments.b.b) return _List_Nil;
            else {
                var segment = segments.a;
                var rest = segments.b;
                return A2($elm$core$List$cons, segment, $elm$url$Url$Parser$removeFinalEmpty(rest));
            }
        }
    };
    var $elm$url$Url$Parser$preparePath = function(path) {
        var _v0 = A2($elm$core$String$split, '/', path);
        if (_v0.b && _v0.a === '') {
            var segments = _v0.b;
            return $elm$url$Url$Parser$removeFinalEmpty(segments);
        } else {
            var segments = _v0;
            return $elm$url$Url$Parser$removeFinalEmpty(segments);
        }
    };
    var $elm$url$Url$Parser$addToParametersHelp = F2(function(value, maybeList) {
        if (maybeList.$ === 'Nothing') return $elm$core$Maybe$Just(_List_fromArray([
            value
        ]));
        else {
            var list = maybeList.a;
            return $elm$core$Maybe$Just(A2($elm$core$List$cons, value, list));
        }
    });
    var $elm$url$Url$percentDecode = _Url_percentDecode;
    var $elm$core$Basics$compare = _Utils_compare;
    var $elm$core$Dict$get = F2(function(targetKey, dict) {
        get: while(true){
            if (dict.$ === 'RBEmpty_elm_builtin') return $elm$core$Maybe$Nothing;
            else {
                var key = dict.b;
                var value = dict.c;
                var left = dict.d;
                var right = dict.e;
                var _v1 = A2($elm$core$Basics$compare, targetKey, key);
                switch(_v1.$){
                    case 'LT':
                        var $temp$targetKey = targetKey, $temp$dict = left;
                        targetKey = $temp$targetKey;
                        dict = $temp$dict;
                        continue get;
                    case 'EQ':
                        return $elm$core$Maybe$Just(value);
                    default:
                        var $temp$targetKey = targetKey, $temp$dict = right;
                        targetKey = $temp$targetKey;
                        dict = $temp$dict;
                        continue get;
                }
            }
        }
    });
    var $elm$core$Dict$Black = {
        $: 'Black'
    };
    var $elm$core$Dict$RBNode_elm_builtin = F5(function(a, b, c, d, e) {
        return {
            $: 'RBNode_elm_builtin',
            a: a,
            b: b,
            c: c,
            d: d,
            e: e
        };
    });
    var $elm$core$Dict$Red = {
        $: 'Red'
    };
    var $elm$core$Dict$balance = F5(function(color, key, value, left, right) {
        if (right.$ === 'RBNode_elm_builtin' && right.a.$ === 'Red') {
            var _v1 = right.a;
            var rK = right.b;
            var rV = right.c;
            var rLeft = right.d;
            var rRight = right.e;
            if (left.$ === 'RBNode_elm_builtin' && left.a.$ === 'Red') {
                var _v3 = left.a;
                var lK = left.b;
                var lV = left.c;
                var lLeft = left.d;
                var lRight = left.e;
                return A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, key, value, A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, lK, lV, lLeft, lRight), A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, rK, rV, rLeft, rRight));
            } else return A5($elm$core$Dict$RBNode_elm_builtin, color, rK, rV, A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, key, value, left, rLeft), rRight);
        } else {
            if (left.$ === 'RBNode_elm_builtin' && left.a.$ === 'Red' && left.d.$ === 'RBNode_elm_builtin' && left.d.a.$ === 'Red') {
                var _v5 = left.a;
                var lK = left.b;
                var lV = left.c;
                var _v6 = left.d;
                var _v7 = _v6.a;
                var llK = _v6.b;
                var llV = _v6.c;
                var llLeft = _v6.d;
                var llRight = _v6.e;
                var lRight = left.e;
                return A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, lK, lV, A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, llK, llV, llLeft, llRight), A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, key, value, lRight, right));
            } else return A5($elm$core$Dict$RBNode_elm_builtin, color, key, value, left, right);
        }
    });
    var $elm$core$Dict$insertHelp = F3(function(key, value, dict) {
        if (dict.$ === 'RBEmpty_elm_builtin') return A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, key, value, $elm$core$Dict$RBEmpty_elm_builtin, $elm$core$Dict$RBEmpty_elm_builtin);
        else {
            var nColor = dict.a;
            var nKey = dict.b;
            var nValue = dict.c;
            var nLeft = dict.d;
            var nRight = dict.e;
            var _v1 = A2($elm$core$Basics$compare, key, nKey);
            switch(_v1.$){
                case 'LT':
                    return A5($elm$core$Dict$balance, nColor, nKey, nValue, A3($elm$core$Dict$insertHelp, key, value, nLeft), nRight);
                case 'EQ':
                    return A5($elm$core$Dict$RBNode_elm_builtin, nColor, nKey, value, nLeft, nRight);
                default:
                    return A5($elm$core$Dict$balance, nColor, nKey, nValue, nLeft, A3($elm$core$Dict$insertHelp, key, value, nRight));
            }
        }
    });
    var $elm$core$Dict$insert = F3(function(key, value, dict) {
        var _v0 = A3($elm$core$Dict$insertHelp, key, value, dict);
        if (_v0.$ === 'RBNode_elm_builtin' && _v0.a.$ === 'Red') {
            var _v1 = _v0.a;
            var k = _v0.b;
            var v = _v0.c;
            var l = _v0.d;
            var r = _v0.e;
            return A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, k, v, l, r);
        } else {
            var x = _v0;
            return x;
        }
    });
    var $elm$core$Dict$getMin = function(dict) {
        getMin: while(true){
            if (dict.$ === 'RBNode_elm_builtin' && dict.d.$ === 'RBNode_elm_builtin') {
                var left = dict.d;
                var $temp$dict = left;
                dict = $temp$dict;
                continue getMin;
            } else return dict;
        }
    };
    var $elm$core$Dict$moveRedLeft = function(dict) {
        if (dict.$ === 'RBNode_elm_builtin' && dict.d.$ === 'RBNode_elm_builtin' && dict.e.$ === 'RBNode_elm_builtin') {
            if (dict.e.d.$ === 'RBNode_elm_builtin' && dict.e.d.a.$ === 'Red') {
                var clr = dict.a;
                var k = dict.b;
                var v = dict.c;
                var _v1 = dict.d;
                var lClr = _v1.a;
                var lK = _v1.b;
                var lV = _v1.c;
                var lLeft = _v1.d;
                var lRight = _v1.e;
                var _v2 = dict.e;
                var rClr = _v2.a;
                var rK = _v2.b;
                var rV = _v2.c;
                var rLeft = _v2.d;
                var _v3 = rLeft.a;
                var rlK = rLeft.b;
                var rlV = rLeft.c;
                var rlL = rLeft.d;
                var rlR = rLeft.e;
                var rRight = _v2.e;
                return A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, rlK, rlV, A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, k, v, A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, lK, lV, lLeft, lRight), rlL), A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, rK, rV, rlR, rRight));
            } else {
                var clr = dict.a;
                var k = dict.b;
                var v = dict.c;
                var _v4 = dict.d;
                var lClr = _v4.a;
                var lK = _v4.b;
                var lV = _v4.c;
                var lLeft = _v4.d;
                var lRight = _v4.e;
                var _v5 = dict.e;
                var rClr = _v5.a;
                var rK = _v5.b;
                var rV = _v5.c;
                var rLeft = _v5.d;
                var rRight = _v5.e;
                if (clr.$ === 'Black') return A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, k, v, A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, lK, lV, lLeft, lRight), A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, rK, rV, rLeft, rRight));
                else return A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, k, v, A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, lK, lV, lLeft, lRight), A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, rK, rV, rLeft, rRight));
            }
        } else return dict;
    };
    var $elm$core$Dict$moveRedRight = function(dict) {
        if (dict.$ === 'RBNode_elm_builtin' && dict.d.$ === 'RBNode_elm_builtin' && dict.e.$ === 'RBNode_elm_builtin') {
            if (dict.d.d.$ === 'RBNode_elm_builtin' && dict.d.d.a.$ === 'Red') {
                var clr = dict.a;
                var k = dict.b;
                var v = dict.c;
                var _v1 = dict.d;
                var lClr = _v1.a;
                var lK = _v1.b;
                var lV = _v1.c;
                var _v2 = _v1.d;
                var _v3 = _v2.a;
                var llK = _v2.b;
                var llV = _v2.c;
                var llLeft = _v2.d;
                var llRight = _v2.e;
                var lRight = _v1.e;
                var _v4 = dict.e;
                var rClr = _v4.a;
                var rK = _v4.b;
                var rV = _v4.c;
                var rLeft = _v4.d;
                var rRight = _v4.e;
                return A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, lK, lV, A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, llK, llV, llLeft, llRight), A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, k, v, lRight, A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, rK, rV, rLeft, rRight)));
            } else {
                var clr = dict.a;
                var k = dict.b;
                var v = dict.c;
                var _v5 = dict.d;
                var lClr = _v5.a;
                var lK = _v5.b;
                var lV = _v5.c;
                var lLeft = _v5.d;
                var lRight = _v5.e;
                var _v6 = dict.e;
                var rClr = _v6.a;
                var rK = _v6.b;
                var rV = _v6.c;
                var rLeft = _v6.d;
                var rRight = _v6.e;
                if (clr.$ === 'Black') return A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, k, v, A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, lK, lV, lLeft, lRight), A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, rK, rV, rLeft, rRight));
                else return A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, k, v, A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, lK, lV, lLeft, lRight), A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, rK, rV, rLeft, rRight));
            }
        } else return dict;
    };
    var $elm$core$Dict$removeHelpPrepEQGT = F7(function(targetKey, dict, color, key, value, left, right) {
        if (left.$ === 'RBNode_elm_builtin' && left.a.$ === 'Red') {
            var _v1 = left.a;
            var lK = left.b;
            var lV = left.c;
            var lLeft = left.d;
            var lRight = left.e;
            return A5($elm$core$Dict$RBNode_elm_builtin, color, lK, lV, lLeft, A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, key, value, lRight, right));
        } else {
            _v2$2: while(true){
                if (right.$ === 'RBNode_elm_builtin' && right.a.$ === 'Black') {
                    if (right.d.$ === 'RBNode_elm_builtin') {
                        if (right.d.a.$ === 'Black') {
                            var _v3 = right.a;
                            var _v4 = right.d;
                            var _v5 = _v4.a;
                            return $elm$core$Dict$moveRedRight(dict);
                        } else break _v2$2;
                    } else {
                        var _v6 = right.a;
                        var _v7 = right.d;
                        return $elm$core$Dict$moveRedRight(dict);
                    }
                } else break _v2$2;
            }
            return dict;
        }
    });
    var $elm$core$Dict$removeMin = function(dict) {
        if (dict.$ === 'RBNode_elm_builtin' && dict.d.$ === 'RBNode_elm_builtin') {
            var color = dict.a;
            var key = dict.b;
            var value = dict.c;
            var left = dict.d;
            var lColor = left.a;
            var lLeft = left.d;
            var right = dict.e;
            if (lColor.$ === 'Black') {
                if (lLeft.$ === 'RBNode_elm_builtin' && lLeft.a.$ === 'Red') {
                    var _v3 = lLeft.a;
                    return A5($elm$core$Dict$RBNode_elm_builtin, color, key, value, $elm$core$Dict$removeMin(left), right);
                } else {
                    var _v4 = $elm$core$Dict$moveRedLeft(dict);
                    if (_v4.$ === 'RBNode_elm_builtin') {
                        var nColor = _v4.a;
                        var nKey = _v4.b;
                        var nValue = _v4.c;
                        var nLeft = _v4.d;
                        var nRight = _v4.e;
                        return A5($elm$core$Dict$balance, nColor, nKey, nValue, $elm$core$Dict$removeMin(nLeft), nRight);
                    } else return $elm$core$Dict$RBEmpty_elm_builtin;
                }
            } else return A5($elm$core$Dict$RBNode_elm_builtin, color, key, value, $elm$core$Dict$removeMin(left), right);
        } else return $elm$core$Dict$RBEmpty_elm_builtin;
    };
    var $elm$core$Dict$removeHelp = F2(function(targetKey, dict) {
        if (dict.$ === 'RBEmpty_elm_builtin') return $elm$core$Dict$RBEmpty_elm_builtin;
        else {
            var color = dict.a;
            var key = dict.b;
            var value = dict.c;
            var left = dict.d;
            var right = dict.e;
            if (_Utils_cmp(targetKey, key) < 0) {
                if (left.$ === 'RBNode_elm_builtin' && left.a.$ === 'Black') {
                    var _v4 = left.a;
                    var lLeft = left.d;
                    if (lLeft.$ === 'RBNode_elm_builtin' && lLeft.a.$ === 'Red') {
                        var _v6 = lLeft.a;
                        return A5($elm$core$Dict$RBNode_elm_builtin, color, key, value, A2($elm$core$Dict$removeHelp, targetKey, left), right);
                    } else {
                        var _v7 = $elm$core$Dict$moveRedLeft(dict);
                        if (_v7.$ === 'RBNode_elm_builtin') {
                            var nColor = _v7.a;
                            var nKey = _v7.b;
                            var nValue = _v7.c;
                            var nLeft = _v7.d;
                            var nRight = _v7.e;
                            return A5($elm$core$Dict$balance, nColor, nKey, nValue, A2($elm$core$Dict$removeHelp, targetKey, nLeft), nRight);
                        } else return $elm$core$Dict$RBEmpty_elm_builtin;
                    }
                } else return A5($elm$core$Dict$RBNode_elm_builtin, color, key, value, A2($elm$core$Dict$removeHelp, targetKey, left), right);
            } else return A2($elm$core$Dict$removeHelpEQGT, targetKey, A7($elm$core$Dict$removeHelpPrepEQGT, targetKey, dict, color, key, value, left, right));
        }
    });
    var $elm$core$Dict$removeHelpEQGT = F2(function(targetKey, dict) {
        if (dict.$ === 'RBNode_elm_builtin') {
            var color = dict.a;
            var key = dict.b;
            var value = dict.c;
            var left = dict.d;
            var right = dict.e;
            if (_Utils_eq(targetKey, key)) {
                var _v1 = $elm$core$Dict$getMin(right);
                if (_v1.$ === 'RBNode_elm_builtin') {
                    var minKey = _v1.b;
                    var minValue = _v1.c;
                    return A5($elm$core$Dict$balance, color, minKey, minValue, left, $elm$core$Dict$removeMin(right));
                } else return $elm$core$Dict$RBEmpty_elm_builtin;
            } else return A5($elm$core$Dict$balance, color, key, value, left, A2($elm$core$Dict$removeHelp, targetKey, right));
        } else return $elm$core$Dict$RBEmpty_elm_builtin;
    });
    var $elm$core$Dict$remove = F2(function(key, dict) {
        var _v0 = A2($elm$core$Dict$removeHelp, key, dict);
        if (_v0.$ === 'RBNode_elm_builtin' && _v0.a.$ === 'Red') {
            var _v1 = _v0.a;
            var k = _v0.b;
            var v = _v0.c;
            var l = _v0.d;
            var r = _v0.e;
            return A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, k, v, l, r);
        } else {
            var x = _v0;
            return x;
        }
    });
    var $elm$core$Dict$update = F3(function(targetKey, alter, dictionary) {
        var _v0 = alter(A2($elm$core$Dict$get, targetKey, dictionary));
        if (_v0.$ === 'Just') {
            var value = _v0.a;
            return A3($elm$core$Dict$insert, targetKey, value, dictionary);
        } else return A2($elm$core$Dict$remove, targetKey, dictionary);
    });
    var $elm$url$Url$Parser$addParam = F2(function(segment, dict) {
        var _v0 = A2($elm$core$String$split, '=', segment);
        if (_v0.b && _v0.b.b && !_v0.b.b.b) {
            var rawKey = _v0.a;
            var _v1 = _v0.b;
            var rawValue = _v1.a;
            var _v2 = $elm$url$Url$percentDecode(rawKey);
            if (_v2.$ === 'Nothing') return dict;
            else {
                var key = _v2.a;
                var _v3 = $elm$url$Url$percentDecode(rawValue);
                if (_v3.$ === 'Nothing') return dict;
                else {
                    var value = _v3.a;
                    return A3($elm$core$Dict$update, key, $elm$url$Url$Parser$addToParametersHelp(value), dict);
                }
            }
        } else return dict;
    });
    var $elm$url$Url$Parser$prepareQuery = function(maybeQuery) {
        if (maybeQuery.$ === 'Nothing') return $elm$core$Dict$empty;
        else {
            var qry = maybeQuery.a;
            return A3($elm$core$List$foldr, $elm$url$Url$Parser$addParam, $elm$core$Dict$empty, A2($elm$core$String$split, '&', qry));
        }
    };
    var $elm$url$Url$Parser$parse = F2(function(_v0, url) {
        var parser = _v0.a;
        return $elm$url$Url$Parser$getFirstMatch(parser(A5($elm$url$Url$Parser$State, _List_Nil, $elm$url$Url$Parser$preparePath(url.path), $elm$url$Url$Parser$prepareQuery(url.query), url.fragment, $elm$core$Basics$identity)));
    });
    var $author$project$Route$Editor = function(a) {
        return {
            $: 'Editor',
            a: a
        };
    };
    var $author$project$Route$Home = {
        $: 'Home'
    };
    var $elm$url$Url$Parser$Parser = function(a) {
        return {
            $: 'Parser',
            a: a
        };
    };
    var $elm$url$Url$Parser$mapState = F2(function(func, _v0) {
        var visited = _v0.visited;
        var unvisited = _v0.unvisited;
        var params = _v0.params;
        var frag = _v0.frag;
        var value = _v0.value;
        return A5($elm$url$Url$Parser$State, visited, unvisited, params, frag, func(value));
    });
    var $elm$url$Url$Parser$map = F2(function(subValue, _v0) {
        var parseArg = _v0.a;
        return $elm$url$Url$Parser$Parser(function(_v1) {
            var visited = _v1.visited;
            var unvisited = _v1.unvisited;
            var params = _v1.params;
            var frag = _v1.frag;
            var value = _v1.value;
            return A2($elm$core$List$map, $elm$url$Url$Parser$mapState(value), parseArg(A5($elm$url$Url$Parser$State, visited, unvisited, params, frag, subValue)));
        });
    });
    var $elm$core$List$append = F2(function(xs, ys) {
        if (!ys.b) return xs;
        else return A3($elm$core$List$foldr, $elm$core$List$cons, ys, xs);
    });
    var $elm$core$List$concat = function(lists) {
        return A3($elm$core$List$foldr, $elm$core$List$append, _List_Nil, lists);
    };
    var $elm$core$List$concatMap = F2(function(f, list) {
        return $elm$core$List$concat(A2($elm$core$List$map, f, list));
    });
    var $elm$url$Url$Parser$oneOf = function(parsers) {
        return $elm$url$Url$Parser$Parser(function(state) {
            return A2($elm$core$List$concatMap, function(_v0) {
                var parser = _v0.a;
                return parser(state);
            }, parsers);
        });
    };
    var $elm$url$Url$Parser$s = function(str) {
        return $elm$url$Url$Parser$Parser(function(_v0) {
            var visited = _v0.visited;
            var unvisited = _v0.unvisited;
            var params = _v0.params;
            var frag = _v0.frag;
            var value = _v0.value;
            if (!unvisited.b) return _List_Nil;
            else {
                var next = unvisited.a;
                var rest = unvisited.b;
                return _Utils_eq(next, str) ? _List_fromArray([
                    A5($elm$url$Url$Parser$State, A2($elm$core$List$cons, next, visited), rest, params, frag, value)
                ]) : _List_Nil;
            }
        });
    };
    var $elm$url$Url$Parser$slash = F2(function(_v0, _v1) {
        var parseBefore = _v0.a;
        var parseAfter = _v1.a;
        return $elm$url$Url$Parser$Parser(function(state) {
            return A2($elm$core$List$concatMap, parseAfter, parseBefore(state));
        });
    });
    var $elm$url$Url$Parser$custom = F2(function(tipe, stringToSomething) {
        return $elm$url$Url$Parser$Parser(function(_v0) {
            var visited = _v0.visited;
            var unvisited = _v0.unvisited;
            var params = _v0.params;
            var frag = _v0.frag;
            var value = _v0.value;
            if (!unvisited.b) return _List_Nil;
            else {
                var next = unvisited.a;
                var rest = unvisited.b;
                var _v2 = stringToSomething(next);
                if (_v2.$ === 'Just') {
                    var nextValue = _v2.a;
                    return _List_fromArray([
                        A5($elm$url$Url$Parser$State, A2($elm$core$List$cons, next, visited), rest, params, frag, value(nextValue))
                    ]);
                } else return _List_Nil;
            }
        });
    });
    var $elm$url$Url$Parser$string = A2($elm$url$Url$Parser$custom, 'STRING', $elm$core$Maybe$Just);
    var $elm$url$Url$Parser$top = $elm$url$Url$Parser$Parser(function(state) {
        return _List_fromArray([
            state
        ]);
    });
    var $author$project$Route$parser = $elm$url$Url$Parser$oneOf(_List_fromArray([
        A2($elm$url$Url$Parser$map, $author$project$Route$Home, $elm$url$Url$Parser$top),
        A2($elm$url$Url$Parser$map, $author$project$Route$Editor, A2($elm$url$Url$Parser$slash, $elm$url$Url$Parser$s('editor'), $elm$url$Url$Parser$string))
    ]));
    var $elm$core$Maybe$withDefault = F2(function(_default, maybe) {
        if (maybe.$ === 'Just') {
            var value = maybe.a;
            return value;
        } else return _default;
    });
    var $author$project$Route$fromUrl = function(url) {
        return A2($elm$url$Url$Parser$parse, $author$project$Route$parser, _Utils_update(url, {
            fragment: $elm$core$Maybe$Nothing,
            path: A2($elm$core$Maybe$withDefault, '', url.fragment)
        }));
    };
    var $author$project$Main$init = F3(function(gifLinks, url, navKey) {
        return A3($author$project$Main$changeRouteTo, gifLinks, $author$project$Route$fromUrl(url), navKey);
    });
    var $elm$json$Json$Decode$string = _Json_decodeString;
    var $author$project$Main$InitMonacoRequestReceived = function(a) {
        return {
            $: 'InitMonacoRequestReceived',
            a: a
        };
    };
    var $author$project$Main$MonacoEditorValueReceived = F2(function(a, b) {
        return {
            $: 'MonacoEditorValueReceived',
            a: a,
            b: b
        };
    });
    var $author$project$Main$MouseMove = function(a) {
        return {
            $: 'MouseMove',
            a: a
        };
    };
    var $author$project$Main$MouseMoveEnd = {
        $: 'MouseMoveEnd'
    };
    var $author$project$Main$PaneMsg = function(a) {
        return {
            $: 'PaneMsg',
            a: a
        };
    };
    var $author$project$Main$Resize = {
        $: 'Resize'
    };
    var $author$project$Main$ZoomMsg = function(a) {
        return {
            $: 'ZoomMsg',
            a: a
        };
    };
    var $elm$core$Platform$Sub$batch = _Platform_batch;
    var $elm$core$Basics$composeR = F3(function(f, g, x) {
        return g(f(x));
    });
    var $mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$Event = F6(function(keys, button, clientPos, offsetPos, pagePos, screenPos) {
        return {
            button: button,
            clientPos: clientPos,
            keys: keys,
            offsetPos: offsetPos,
            pagePos: pagePos,
            screenPos: screenPos
        };
    });
    var $mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$BackButton = {
        $: 'BackButton'
    };
    var $mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$ErrorButton = {
        $: 'ErrorButton'
    };
    var $mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$ForwardButton = {
        $: 'ForwardButton'
    };
    var $mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$MainButton = {
        $: 'MainButton'
    };
    var $mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$MiddleButton = {
        $: 'MiddleButton'
    };
    var $mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$SecondButton = {
        $: 'SecondButton'
    };
    var $mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$buttonFromId = function(id) {
        switch(id){
            case 0:
                return $mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$MainButton;
            case 1:
                return $mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$MiddleButton;
            case 2:
                return $mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$SecondButton;
            case 3:
                return $mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$BackButton;
            case 4:
                return $mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$ForwardButton;
            default:
                return $mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$ErrorButton;
        }
    };
    var $elm$json$Json$Decode$field = _Json_decodeField;
    var $elm$json$Json$Decode$int = _Json_decodeInt;
    var $mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$buttonDecoder = A2($elm$json$Json$Decode$map, $mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$buttonFromId, A2($elm$json$Json$Decode$field, 'button', $elm$json$Json$Decode$int));
    var $elm$json$Json$Decode$float = _Json_decodeFloat;
    var $mpizenberg$elm_pointer_events$Internal$Decode$clientPos = A3($elm$json$Json$Decode$map2, F2(function(a, b) {
        return _Utils_Tuple2(a, b);
    }), A2($elm$json$Json$Decode$field, 'clientX', $elm$json$Json$Decode$float), A2($elm$json$Json$Decode$field, 'clientY', $elm$json$Json$Decode$float));
    var $mpizenberg$elm_pointer_events$Internal$Decode$Keys = F3(function(alt, ctrl, shift) {
        return {
            alt: alt,
            ctrl: ctrl,
            shift: shift
        };
    });
    var $elm$json$Json$Decode$bool = _Json_decodeBool;
    var $elm$json$Json$Decode$map3 = _Json_map3;
    var $mpizenberg$elm_pointer_events$Internal$Decode$keys = A4($elm$json$Json$Decode$map3, $mpizenberg$elm_pointer_events$Internal$Decode$Keys, A2($elm$json$Json$Decode$field, 'altKey', $elm$json$Json$Decode$bool), A2($elm$json$Json$Decode$field, 'ctrlKey', $elm$json$Json$Decode$bool), A2($elm$json$Json$Decode$field, 'shiftKey', $elm$json$Json$Decode$bool));
    var $elm$json$Json$Decode$map6 = _Json_map6;
    var $mpizenberg$elm_pointer_events$Internal$Decode$offsetPos = A3($elm$json$Json$Decode$map2, F2(function(a, b) {
        return _Utils_Tuple2(a, b);
    }), A2($elm$json$Json$Decode$field, 'offsetX', $elm$json$Json$Decode$float), A2($elm$json$Json$Decode$field, 'offsetY', $elm$json$Json$Decode$float));
    var $mpizenberg$elm_pointer_events$Internal$Decode$pagePos = A3($elm$json$Json$Decode$map2, F2(function(a, b) {
        return _Utils_Tuple2(a, b);
    }), A2($elm$json$Json$Decode$field, 'pageX', $elm$json$Json$Decode$float), A2($elm$json$Json$Decode$field, 'pageY', $elm$json$Json$Decode$float));
    var $mpizenberg$elm_pointer_events$Internal$Decode$screenPos = A3($elm$json$Json$Decode$map2, F2(function(a, b) {
        return _Utils_Tuple2(a, b);
    }), A2($elm$json$Json$Decode$field, 'screenX', $elm$json$Json$Decode$float), A2($elm$json$Json$Decode$field, 'screenY', $elm$json$Json$Decode$float));
    var $mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$eventDecoder = A7($elm$json$Json$Decode$map6, $mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$Event, $mpizenberg$elm_pointer_events$Internal$Decode$keys, $mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$buttonDecoder, $mpizenberg$elm_pointer_events$Internal$Decode$clientPos, $mpizenberg$elm_pointer_events$Internal$Decode$offsetPos, $mpizenberg$elm_pointer_events$Internal$Decode$pagePos, $mpizenberg$elm_pointer_events$Internal$Decode$screenPos);
    var $elm$json$Json$Decode$null = _Json_decodeNull;
    var $author$project$JsInterop$initMonacoRequest = _Platform_incomingPort('initMonacoRequest', $elm$json$Json$Decode$null(_Utils_Tuple0));
    var $author$project$Main$keyDecoder = A2($elm$json$Json$Decode$field, 'key', $elm$json$Json$Decode$string);
    var $elm$core$Platform$Sub$map = _Platform_map;
    var $author$project$JsInterop$monacoEditorSavedValue = _Platform_incomingPort('monacoEditorSavedValue', $elm$json$Json$Decode$string);
    var $author$project$JsInterop$monacoEditorValue = _Platform_incomingPort('monacoEditorValue', $elm$json$Json$Decode$string);
    var $elm$core$Platform$Sub$none = $elm$core$Platform$Sub$batch(_List_Nil);
    var $elm$browser$Browser$Events$Document = {
        $: 'Document'
    };
    var $elm$browser$Browser$Events$MySub = F3(function(a, b, c) {
        return {
            $: 'MySub',
            a: a,
            b: b,
            c: c
        };
    });
    var $elm$browser$Browser$Events$State = F2(function(subs, pids) {
        return {
            pids: pids,
            subs: subs
        };
    });
    var $elm$browser$Browser$Events$init = $elm$core$Task$succeed(A2($elm$browser$Browser$Events$State, _List_Nil, $elm$core$Dict$empty));
    var $elm$browser$Browser$Events$nodeToKey = function(node) {
        if (node.$ === 'Document') return 'd_';
        else return 'w_';
    };
    var $elm$browser$Browser$Events$addKey = function(sub) {
        var node = sub.a;
        var name = sub.b;
        return _Utils_Tuple2(_Utils_ap($elm$browser$Browser$Events$nodeToKey(node), name), sub);
    };
    var $elm$core$Dict$fromList = function(assocs) {
        return A3($elm$core$List$foldl, F2(function(_v0, dict) {
            var key = _v0.a;
            var value = _v0.b;
            return A3($elm$core$Dict$insert, key, value, dict);
        }), $elm$core$Dict$empty, assocs);
    };
    var $elm$core$Process$kill = _Scheduler_kill;
    var $elm$core$Dict$foldl = F3(function(func, acc, dict) {
        foldl: while(true){
            if (dict.$ === 'RBEmpty_elm_builtin') return acc;
            else {
                var key = dict.b;
                var value = dict.c;
                var left = dict.d;
                var right = dict.e;
                var $temp$func = func, $temp$acc = A3(func, key, value, A3($elm$core$Dict$foldl, func, acc, left)), $temp$dict = right;
                func = $temp$func;
                acc = $temp$acc;
                dict = $temp$dict;
                continue foldl;
            }
        }
    });
    var $elm$core$Dict$merge = F6(function(leftStep, bothStep, rightStep, leftDict, rightDict, initialResult) {
        var stepState = F3(function(rKey, rValue, _v0) {
            stepState: while(true){
                var list = _v0.a;
                var result = _v0.b;
                if (!list.b) return _Utils_Tuple2(list, A3(rightStep, rKey, rValue, result));
                else {
                    var _v2 = list.a;
                    var lKey = _v2.a;
                    var lValue = _v2.b;
                    var rest = list.b;
                    if (_Utils_cmp(lKey, rKey) < 0) {
                        var $temp$rKey = rKey, $temp$rValue = rValue, $temp$_v0 = _Utils_Tuple2(rest, A3(leftStep, lKey, lValue, result));
                        rKey = $temp$rKey;
                        rValue = $temp$rValue;
                        _v0 = $temp$_v0;
                        continue stepState;
                    } else {
                        if (_Utils_cmp(lKey, rKey) > 0) return _Utils_Tuple2(list, A3(rightStep, rKey, rValue, result));
                        else return _Utils_Tuple2(rest, A4(bothStep, lKey, lValue, rValue, result));
                    }
                }
            }
        });
        var _v3 = A3($elm$core$Dict$foldl, stepState, _Utils_Tuple2($elm$core$Dict$toList(leftDict), initialResult), rightDict);
        var leftovers = _v3.a;
        var intermediateResult = _v3.b;
        return A3($elm$core$List$foldl, F2(function(_v4, result) {
            var k = _v4.a;
            var v = _v4.b;
            return A3(leftStep, k, v, result);
        }), intermediateResult, leftovers);
    });
    var $elm$browser$Browser$Events$Event = F2(function(key, event) {
        return {
            event: event,
            key: key
        };
    });
    var $elm$core$Platform$sendToSelf = _Platform_sendToSelf;
    var $elm$browser$Browser$Events$spawn = F3(function(router, key, _v0) {
        var node = _v0.a;
        var name = _v0.b;
        var actualNode = function() {
            if (node.$ === 'Document') return _Browser_doc;
            else return _Browser_window;
        }();
        return A2($elm$core$Task$map, function(value) {
            return _Utils_Tuple2(key, value);
        }, A3(_Browser_on, actualNode, name, function(event) {
            return A2($elm$core$Platform$sendToSelf, router, A2($elm$browser$Browser$Events$Event, key, event));
        }));
    });
    var $elm$core$Dict$union = F2(function(t1, t2) {
        return A3($elm$core$Dict$foldl, $elm$core$Dict$insert, t2, t1);
    });
    var $elm$browser$Browser$Events$onEffects = F3(function(router, subs, state) {
        var stepRight = F3(function(key, sub, _v6) {
            var deads = _v6.a;
            var lives = _v6.b;
            var news = _v6.c;
            return _Utils_Tuple3(deads, lives, A2($elm$core$List$cons, A3($elm$browser$Browser$Events$spawn, router, key, sub), news));
        });
        var stepLeft = F3(function(_v4, pid, _v5) {
            var deads = _v5.a;
            var lives = _v5.b;
            var news = _v5.c;
            return _Utils_Tuple3(A2($elm$core$List$cons, pid, deads), lives, news);
        });
        var stepBoth = F4(function(key, pid, _v2, _v3) {
            var deads = _v3.a;
            var lives = _v3.b;
            var news = _v3.c;
            return _Utils_Tuple3(deads, A3($elm$core$Dict$insert, key, pid, lives), news);
        });
        var newSubs = A2($elm$core$List$map, $elm$browser$Browser$Events$addKey, subs);
        var _v0 = A6($elm$core$Dict$merge, stepLeft, stepBoth, stepRight, state.pids, $elm$core$Dict$fromList(newSubs), _Utils_Tuple3(_List_Nil, $elm$core$Dict$empty, _List_Nil));
        var deadPids = _v0.a;
        var livePids = _v0.b;
        var makeNewPids = _v0.c;
        return A2($elm$core$Task$andThen, function(pids) {
            return $elm$core$Task$succeed(A2($elm$browser$Browser$Events$State, newSubs, A2($elm$core$Dict$union, livePids, $elm$core$Dict$fromList(pids))));
        }, A2($elm$core$Task$andThen, function(_v1) {
            return $elm$core$Task$sequence(makeNewPids);
        }, $elm$core$Task$sequence(A2($elm$core$List$map, $elm$core$Process$kill, deadPids))));
    });
    var $elm$core$List$maybeCons = F3(function(f, mx, xs) {
        var _v0 = f(mx);
        if (_v0.$ === 'Just') {
            var x = _v0.a;
            return A2($elm$core$List$cons, x, xs);
        } else return xs;
    });
    var $elm$core$List$filterMap = F2(function(f, xs) {
        return A3($elm$core$List$foldr, $elm$core$List$maybeCons(f), _List_Nil, xs);
    });
    var $elm$browser$Browser$Events$onSelfMsg = F3(function(router, _v0, state) {
        var key = _v0.key;
        var event = _v0.event;
        var toMessage = function(_v2) {
            var subKey = _v2.a;
            var _v3 = _v2.b;
            var node = _v3.a;
            var name = _v3.b;
            var decoder = _v3.c;
            return _Utils_eq(subKey, key) ? A2(_Browser_decodeEvent, decoder, event) : $elm$core$Maybe$Nothing;
        };
        var messages = A2($elm$core$List$filterMap, toMessage, state.subs);
        return A2($elm$core$Task$andThen, function(_v1) {
            return $elm$core$Task$succeed(state);
        }, $elm$core$Task$sequence(A2($elm$core$List$map, $elm$core$Platform$sendToApp(router), messages)));
    });
    var $elm$browser$Browser$Events$subMap = F2(function(func, _v0) {
        var node = _v0.a;
        var name = _v0.b;
        var decoder = _v0.c;
        return A3($elm$browser$Browser$Events$MySub, node, name, A2($elm$json$Json$Decode$map, func, decoder));
    });
    _Platform_effectManagers['Browser.Events'] = _Platform_createManager($elm$browser$Browser$Events$init, $elm$browser$Browser$Events$onEffects, $elm$browser$Browser$Events$onSelfMsg, 0, $elm$browser$Browser$Events$subMap);
    var $elm$browser$Browser$Events$subscription = _Platform_leaf('Browser.Events');
    var $elm$browser$Browser$Events$on = F3(function(node, name, decoder) {
        return $elm$browser$Browser$Events$subscription(A3($elm$browser$Browser$Events$MySub, node, name, decoder));
    });
    var $elm$browser$Browser$Events$onKeyDown = A2($elm$browser$Browser$Events$on, $elm$browser$Browser$Events$Document, 'keydown');
    var $elm$browser$Browser$Events$onKeyUp = A2($elm$browser$Browser$Events$on, $elm$browser$Browser$Events$Document, 'keyup');
    var $elm$browser$Browser$Events$onMouseMove = A2($elm$browser$Browser$Events$on, $elm$browser$Browser$Events$Document, 'mousemove');
    var $elm$browser$Browser$Events$onMouseUp = A2($elm$browser$Browser$Events$on, $elm$browser$Browser$Events$Document, 'mouseup');
    var $elm$browser$Browser$Events$Window = {
        $: 'Window'
    };
    var $elm$browser$Browser$Events$onResize = function(func) {
        return A3($elm$browser$Browser$Events$on, $elm$browser$Browser$Events$Window, 'resize', A2($elm$json$Json$Decode$field, 'target', A3($elm$json$Json$Decode$map2, func, A2($elm$json$Json$Decode$field, 'innerWidth', $elm$json$Json$Decode$int), A2($elm$json$Json$Decode$field, 'innerHeight', $elm$json$Json$Decode$int))));
    };
    var $author$project$Main$NoOp = {
        $: 'NoOp'
    };
    var $author$project$Main$Redo = {
        $: 'Redo'
    };
    var $author$project$Main$SetCtrlIsDown = function(a) {
        return {
            $: 'SetCtrlIsDown',
            a: a
        };
    };
    var $author$project$Main$Undo = {
        $: 'Undo'
    };
    var $author$project$Main$setCtrlAndOtherState = function(value) {
        return $elm$json$Json$Decode$map(function(key) {
            return key === 'Control' ? $author$project$Main$SetCtrlIsDown(value) : key === 'z' ? $author$project$Main$Undo : key === 'y' ? $author$project$Main$Redo : $author$project$Main$NoOp;
        });
    };
    var $author$project$Main$setCtrlState = function(value) {
        return $elm$json$Json$Decode$map(function(key) {
            return key === 'Control' ? $author$project$Main$SetCtrlIsDown(value) : $author$project$Main$NoOp;
        });
    };
    var $whale9490$elm_split_pane$SplitPane$Position = F2(function(x, y) {
        return {
            x: x,
            y: y
        };
    });
    var $whale9490$elm_split_pane$SplitPane$SplitterLeftAlone = function(a) {
        return {
            $: 'SplitterLeftAlone',
            a: a
        };
    };
    var $whale9490$elm_split_pane$SplitPane$SplitterMove = function(a) {
        return {
            $: 'SplitterMove',
            a: a
        };
    };
    var $whale9490$elm_split_pane$SplitPane$subscriptions = function(_v0) {
        var state = _v0.a;
        var _v1 = state.dragState;
        if (_v1.$ === 'Draggable' && _v1.a.$ === 'Just') return $elm$core$Platform$Sub$batch(_List_fromArray([
            $elm$browser$Browser$Events$onMouseMove(A2($elm$json$Json$Decode$map, $whale9490$elm_split_pane$SplitPane$SplitterMove, A3($elm$json$Json$Decode$map2, $whale9490$elm_split_pane$SplitPane$Position, A2($elm$json$Json$Decode$field, 'pageX', $elm$json$Json$Decode$int), A2($elm$json$Json$Decode$field, 'pageY', $elm$json$Json$Decode$int)))),
            $elm$browser$Browser$Events$onMouseUp(A2($elm$json$Json$Decode$map, $whale9490$elm_split_pane$SplitPane$SplitterLeftAlone, A3($elm$json$Json$Decode$map2, $whale9490$elm_split_pane$SplitPane$Position, A2($elm$json$Json$Decode$field, 'pageX', $elm$json$Json$Decode$int), A2($elm$json$Json$Decode$field, 'pageY', $elm$json$Json$Decode$int))))
        ]));
        else return $elm$core$Platform$Sub$none;
    };
    var $gampleman$elm_visualization$Zoom$MouseMove = function(a) {
        return {
            $: 'MouseMove',
            a: a
        };
    };
    var $gampleman$elm_visualization$Zoom$MouseUp = {
        $: 'MouseUp'
    };
    var $gampleman$elm_visualization$Zoom$Tick = function(a) {
        return {
            $: 'Tick',
            a: a
        };
    };
    var $gampleman$elm_visualization$Zoom$TouchStartedExpired = {
        $: 'TouchStartedExpired'
    };
    var $elm$core$Basics$always = F2(function(a, _v0) {
        return a;
    });
    var $elm$time$Time$Every = F2(function(a, b) {
        return {
            $: 'Every',
            a: a,
            b: b
        };
    });
    var $elm$time$Time$State = F2(function(taggers, processes) {
        return {
            processes: processes,
            taggers: taggers
        };
    });
    var $elm$time$Time$init = $elm$core$Task$succeed(A2($elm$time$Time$State, $elm$core$Dict$empty, $elm$core$Dict$empty));
    var $elm$time$Time$addMySub = F2(function(_v0, state) {
        var interval = _v0.a;
        var tagger = _v0.b;
        var _v1 = A2($elm$core$Dict$get, interval, state);
        if (_v1.$ === 'Nothing') return A3($elm$core$Dict$insert, interval, _List_fromArray([
            tagger
        ]), state);
        else {
            var taggers = _v1.a;
            return A3($elm$core$Dict$insert, interval, A2($elm$core$List$cons, tagger, taggers), state);
        }
    });
    var $elm$time$Time$Name = function(a) {
        return {
            $: 'Name',
            a: a
        };
    };
    var $elm$time$Time$Offset = function(a) {
        return {
            $: 'Offset',
            a: a
        };
    };
    var $elm$time$Time$Zone = F2(function(a, b) {
        return {
            $: 'Zone',
            a: a,
            b: b
        };
    });
    var $elm$time$Time$customZone = $elm$time$Time$Zone;
    var $elm$time$Time$setInterval = _Time_setInterval;
    var $elm$core$Process$spawn = _Scheduler_spawn;
    var $elm$time$Time$spawnHelp = F3(function(router, intervals, processes) {
        if (!intervals.b) return $elm$core$Task$succeed(processes);
        else {
            var interval = intervals.a;
            var rest = intervals.b;
            var spawnTimer = $elm$core$Process$spawn(A2($elm$time$Time$setInterval, interval, A2($elm$core$Platform$sendToSelf, router, interval)));
            var spawnRest = function(id) {
                return A3($elm$time$Time$spawnHelp, router, rest, A3($elm$core$Dict$insert, interval, id, processes));
            };
            return A2($elm$core$Task$andThen, spawnRest, spawnTimer);
        }
    });
    var $elm$time$Time$onEffects = F3(function(router, subs, _v0) {
        var processes = _v0.processes;
        var rightStep = F3(function(_v6, id, _v7) {
            var spawns = _v7.a;
            var existing = _v7.b;
            var kills = _v7.c;
            return _Utils_Tuple3(spawns, existing, A2($elm$core$Task$andThen, function(_v5) {
                return kills;
            }, $elm$core$Process$kill(id)));
        });
        var newTaggers = A3($elm$core$List$foldl, $elm$time$Time$addMySub, $elm$core$Dict$empty, subs);
        var leftStep = F3(function(interval, taggers, _v4) {
            var spawns = _v4.a;
            var existing = _v4.b;
            var kills = _v4.c;
            return _Utils_Tuple3(A2($elm$core$List$cons, interval, spawns), existing, kills);
        });
        var bothStep = F4(function(interval, taggers, id, _v3) {
            var spawns = _v3.a;
            var existing = _v3.b;
            var kills = _v3.c;
            return _Utils_Tuple3(spawns, A3($elm$core$Dict$insert, interval, id, existing), kills);
        });
        var _v1 = A6($elm$core$Dict$merge, leftStep, bothStep, rightStep, newTaggers, processes, _Utils_Tuple3(_List_Nil, $elm$core$Dict$empty, $elm$core$Task$succeed(_Utils_Tuple0)));
        var spawnList = _v1.a;
        var existingDict = _v1.b;
        var killTask = _v1.c;
        return A2($elm$core$Task$andThen, function(newProcesses) {
            return $elm$core$Task$succeed(A2($elm$time$Time$State, newTaggers, newProcesses));
        }, A2($elm$core$Task$andThen, function(_v2) {
            return A3($elm$time$Time$spawnHelp, router, spawnList, existingDict);
        }, killTask));
    });
    var $elm$time$Time$Posix = function(a) {
        return {
            $: 'Posix',
            a: a
        };
    };
    var $elm$time$Time$millisToPosix = $elm$time$Time$Posix;
    var $elm$time$Time$now = _Time_now($elm$time$Time$millisToPosix);
    var $elm$time$Time$onSelfMsg = F3(function(router, interval, state) {
        var _v0 = A2($elm$core$Dict$get, interval, state.taggers);
        if (_v0.$ === 'Nothing') return $elm$core$Task$succeed(state);
        else {
            var taggers = _v0.a;
            var tellTaggers = function(time) {
                return $elm$core$Task$sequence(A2($elm$core$List$map, function(tagger) {
                    return A2($elm$core$Platform$sendToApp, router, tagger(time));
                }, taggers));
            };
            return A2($elm$core$Task$andThen, function(_v1) {
                return $elm$core$Task$succeed(state);
            }, A2($elm$core$Task$andThen, tellTaggers, $elm$time$Time$now));
        }
    });
    var $elm$time$Time$subMap = F2(function(f, _v0) {
        var interval = _v0.a;
        var tagger = _v0.b;
        return A2($elm$time$Time$Every, interval, A2($elm$core$Basics$composeL, f, tagger));
    });
    _Platform_effectManagers['Time'] = _Platform_createManager($elm$time$Time$init, $elm$time$Time$onEffects, $elm$time$Time$onSelfMsg, 0, $elm$time$Time$subMap);
    var $elm$time$Time$subscription = _Platform_leaf('Time');
    var $elm$time$Time$every = F2(function(interval, tagger) {
        return $elm$time$Time$subscription(A2($elm$time$Time$Every, interval, tagger));
    });
    var $elm$core$Maybe$map = F2(function(f, maybe) {
        if (maybe.$ === 'Just') {
            var value = maybe.a;
            return $elm$core$Maybe$Just(f(value));
        } else return $elm$core$Maybe$Nothing;
    });
    var $elm$browser$Browser$AnimationManager$Delta = function(a) {
        return {
            $: 'Delta',
            a: a
        };
    };
    var $elm$browser$Browser$AnimationManager$State = F3(function(subs, request, oldTime) {
        return {
            oldTime: oldTime,
            request: request,
            subs: subs
        };
    });
    var $elm$browser$Browser$AnimationManager$init = $elm$core$Task$succeed(A3($elm$browser$Browser$AnimationManager$State, _List_Nil, $elm$core$Maybe$Nothing, 0));
    var $elm$browser$Browser$AnimationManager$now = _Browser_now(_Utils_Tuple0);
    var $elm$browser$Browser$AnimationManager$rAF = _Browser_rAF(_Utils_Tuple0);
    var $elm$browser$Browser$AnimationManager$onEffects = F3(function(router, subs, _v0) {
        var request = _v0.request;
        var oldTime = _v0.oldTime;
        var _v1 = _Utils_Tuple2(request, subs);
        if (_v1.a.$ === 'Nothing') {
            if (!_v1.b.b) {
                var _v2 = _v1.a;
                return $elm$browser$Browser$AnimationManager$init;
            } else {
                var _v4 = _v1.a;
                return A2($elm$core$Task$andThen, function(pid) {
                    return A2($elm$core$Task$andThen, function(time) {
                        return $elm$core$Task$succeed(A3($elm$browser$Browser$AnimationManager$State, subs, $elm$core$Maybe$Just(pid), time));
                    }, $elm$browser$Browser$AnimationManager$now);
                }, $elm$core$Process$spawn(A2($elm$core$Task$andThen, $elm$core$Platform$sendToSelf(router), $elm$browser$Browser$AnimationManager$rAF)));
            }
        } else {
            if (!_v1.b.b) {
                var pid1 = _v1.a.a;
                return A2($elm$core$Task$andThen, function(_v3) {
                    return $elm$browser$Browser$AnimationManager$init;
                }, $elm$core$Process$kill(pid1));
            } else return $elm$core$Task$succeed(A3($elm$browser$Browser$AnimationManager$State, subs, request, oldTime));
        }
    });
    var $elm$browser$Browser$AnimationManager$onSelfMsg = F3(function(router, newTime, _v0) {
        var subs = _v0.subs;
        var oldTime = _v0.oldTime;
        var send = function(sub) {
            if (sub.$ === 'Time') {
                var tagger = sub.a;
                return A2($elm$core$Platform$sendToApp, router, tagger($elm$time$Time$millisToPosix(newTime)));
            } else {
                var tagger = sub.a;
                return A2($elm$core$Platform$sendToApp, router, tagger(newTime - oldTime));
            }
        };
        return A2($elm$core$Task$andThen, function(pid) {
            return A2($elm$core$Task$andThen, function(_v1) {
                return $elm$core$Task$succeed(A3($elm$browser$Browser$AnimationManager$State, subs, $elm$core$Maybe$Just(pid), newTime));
            }, $elm$core$Task$sequence(A2($elm$core$List$map, send, subs)));
        }, $elm$core$Process$spawn(A2($elm$core$Task$andThen, $elm$core$Platform$sendToSelf(router), $elm$browser$Browser$AnimationManager$rAF)));
    });
    var $elm$browser$Browser$AnimationManager$Time = function(a) {
        return {
            $: 'Time',
            a: a
        };
    };
    var $elm$browser$Browser$AnimationManager$subMap = F2(function(func, sub) {
        if (sub.$ === 'Time') {
            var tagger = sub.a;
            return $elm$browser$Browser$AnimationManager$Time(A2($elm$core$Basics$composeL, func, tagger));
        } else {
            var tagger = sub.a;
            return $elm$browser$Browser$AnimationManager$Delta(A2($elm$core$Basics$composeL, func, tagger));
        }
    });
    _Platform_effectManagers['Browser.AnimationManager'] = _Platform_createManager($elm$browser$Browser$AnimationManager$init, $elm$browser$Browser$AnimationManager$onEffects, $elm$browser$Browser$AnimationManager$onSelfMsg, 0, $elm$browser$Browser$AnimationManager$subMap);
    var $elm$browser$Browser$AnimationManager$subscription = _Platform_leaf('Browser.AnimationManager');
    var $elm$browser$Browser$AnimationManager$onAnimationFrameDelta = function(tagger) {
        return $elm$browser$Browser$AnimationManager$subscription($elm$browser$Browser$AnimationManager$Delta(tagger));
    };
    var $elm$browser$Browser$Events$onAnimationFrameDelta = $elm$browser$Browser$AnimationManager$onAnimationFrameDelta;
    var $gampleman$elm_visualization$Zoom$touchDelay = 500;
    var $gampleman$elm_visualization$Zoom$subscriptions = F2(function(_v0, tagger) {
        var zoom = _v0.a;
        return $elm$core$Platform$Sub$batch(_List_fromArray([
            function() {
                var _v1 = zoom.drag;
                if (_v1.$ === 'Just') return $elm$core$Platform$Sub$batch(_List_fromArray([
                    $elm$browser$Browser$Events$onMouseMove(A3($elm$json$Json$Decode$map2, F2(function(x, y) {
                        return tagger($gampleman$elm_visualization$Zoom$MouseMove(_Utils_Tuple2(x, y)));
                    }), A2($elm$json$Json$Decode$field, 'clientX', $elm$json$Json$Decode$float), A2($elm$json$Json$Decode$field, 'clientY', $elm$json$Json$Decode$float))),
                    $elm$browser$Browser$Events$onMouseUp($elm$json$Json$Decode$succeed(tagger($gampleman$elm_visualization$Zoom$MouseUp)))
                ]));
                else return $elm$core$Platform$Sub$none;
            }(),
            zoom.touchStarted ? A2($elm$time$Time$every, $gampleman$elm_visualization$Zoom$touchDelay, A2($elm$core$Basics$composeR, $elm$core$Basics$always($gampleman$elm_visualization$Zoom$TouchStartedExpired), tagger)) : $elm$core$Platform$Sub$none,
            A2($elm$core$Maybe$withDefault, $elm$core$Platform$Sub$none, A2($elm$core$Maybe$map, $elm$core$Basics$always($elm$browser$Browser$Events$onAnimationFrameDelta(A2($elm$core$Basics$composeR, $gampleman$elm_visualization$Zoom$Tick, tagger))), zoom.transition))
        ]));
    });
    var $author$project$Main$subscriptions = function(model) {
        var dragSubscriptions = $elm$core$Platform$Sub$batch(_List_fromArray([
            $elm$browser$Browser$Events$onMouseMove(A2($elm$json$Json$Decode$map, A2($elm$core$Basics$composeR, function($) {
                return $.clientPos;
            }, $author$project$Main$MouseMove), $mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$eventDecoder)),
            $elm$browser$Browser$Events$onMouseUp(A2($elm$json$Json$Decode$map, function(_v9) {
                return $author$project$Main$MouseMoveEnd;
            }, $mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$eventDecoder))
        ]));
        var readySubscriptions = function(_v8) {
            var zoom = _v8.zoom;
            var brush = _v8.brush;
            var drag = _v8.drag;
            return $elm$core$Platform$Sub$batch(_List_fromArray([
                A2($gampleman$elm_visualization$Zoom$subscriptions, zoom, $author$project$Main$ZoomMsg),
                function() {
                    var _v5 = _Utils_Tuple2(brush, drag);
                    if (_v5.a.$ === 'Nothing' && _v5.b.$ === 'Nothing') {
                        var _v6 = _v5.a;
                        var _v7 = _v5.b;
                        return $elm$core$Platform$Sub$none;
                    } else return dragSubscriptions;
                }()
            ]));
        };
        return $elm$core$Platform$Sub$batch(_List_fromArray([
            function() {
                if (model.$ === 'Home') return $elm$core$Platform$Sub$none;
                else {
                    var viewEditor = model.c.viewEditor;
                    if (viewEditor.$ === 'Init') return $elm$core$Platform$Sub$none;
                    else {
                        var state = viewEditor.a;
                        return readySubscriptions(state);
                    }
                }
            }(),
            $elm$browser$Browser$Events$onResize(function(_v2) {
                return function(_v3) {
                    return $author$project$Main$Resize;
                };
            }),
            $elm$browser$Browser$Events$onKeyDown(A2($author$project$Main$setCtrlAndOtherState, true, $author$project$Main$keyDecoder)),
            $elm$browser$Browser$Events$onKeyUp(A2($author$project$Main$setCtrlState, false, $author$project$Main$keyDecoder)),
            function() {
                if (model.$ === 'Home') return $elm$core$Platform$Sub$none;
                else {
                    var pane = model.c.pane;
                    return A2($elm$core$Platform$Sub$map, $author$project$Main$PaneMsg, $whale9490$elm_split_pane$SplitPane$subscriptions(pane));
                }
            }(),
            $author$project$JsInterop$monacoEditorValue($author$project$Main$MonacoEditorValueReceived(false)),
            $author$project$JsInterop$monacoEditorSavedValue($author$project$Main$MonacoEditorValueReceived(true)),
            $author$project$JsInterop$initMonacoRequest($author$project$Main$InitMonacoRequestReceived)
        ]));
    };
    var $author$project$Main$Brush = F2(function(end, start) {
        return {
            end: end,
            start: start
        };
    });
    var $author$project$Domain$ElementKey = function(a) {
        return {
            $: 'ElementKey',
            a: a
        };
    };
    var $author$project$Domain$PointKey = function(a) {
        return {
            $: 'PointKey',
            a: a
        };
    };
    var $author$project$JsInterop$PointMessage = F5(function(selectedView, viewElementKey, relation, pointIndex, coords) {
        return {
            coords: coords,
            pointIndex: pointIndex,
            relation: relation,
            selectedView: selectedView,
            viewElementKey: viewElementKey
        };
    });
    var $author$project$Main$Ready = function(a) {
        return {
            $: 'Ready',
            a: a
        };
    };
    var $author$project$JsInterop$RemovePointMessage = F4(function(selectedView, viewElementKey, relation, pointIndex) {
        return {
            pointIndex: pointIndex,
            relation: relation,
            selectedView: selectedView,
            viewElementKey: viewElementKey
        };
    });
    var $author$project$Main$SelectedItem = F2(function(key, delta) {
        return {
            delta: delta,
            key: key
        };
    });
    var $author$project$Domain$ViewRelationPoint = F2(function(x, y) {
        return {
            x: x,
            y: y
        };
    });
    var $author$project$JsInterop$addPoint = _Platform_outgoingPort('addPoint', $elm$core$Basics$identity);
    var $author$project$Main$betweenPoints = F2(function(_v0, _v1) {
        var x = _v0.a;
        var y = _v0.b;
        var _v2 = _v1.a;
        var x1 = _v2.a;
        var y1 = _v2.b;
        var _v3 = _v1.b;
        var x2 = _v3.a;
        var y2 = _v3.b;
        var isBetween = F3(function(v, v1, v2) {
            return _Utils_cmp(v1, v2) < 0 ? _Utils_cmp(v1, v) < 0 && _Utils_cmp(v, v2) < 0 : _Utils_eq(v1, v2) ? _Utils_eq(v1, v) && _Utils_eq(v, v2) : _Utils_cmp(v2, v) < 0 && _Utils_cmp(v, v1) < 0;
        });
        return A3(isBetween, x, x1, x2) && A3(isBetween, y, y1, y2);
    });
    var $elm$core$Basics$negate = function(n) {
        return -n;
    };
    var $elm$core$Basics$abs = function(n) {
        return n < 0 ? -n : n;
    };
    var $elm$core$Basics$sqrt = _Basics_sqrt;
    var $author$project$Main$distanceToLine = F2(function(_v0, _v1) {
        var x = _v0.a;
        var y = _v0.b;
        var _v2 = _v1.a;
        var x1 = _v2.a;
        var y1 = _v2.b;
        var _v3 = _v1.b;
        var x2 = _v3.a;
        var y2 = _v3.b;
        return $elm$core$Basics$abs((x2 - x1) * (y1 - y) - (x1 - x) * (y2 - y1)) / $elm$core$Basics$sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));
    });
    var $elm$core$List$drop = F2(function(n, list) {
        drop: while(true){
            if (n <= 0) return list;
            else {
                if (!list.b) return list;
                else {
                    var x = list.a;
                    var xs = list.b;
                    var $temp$n = n - 1, $temp$list = xs;
                    n = $temp$n;
                    list = $temp$list;
                    continue drop;
                }
            }
        }
    });
    var $elm$json$Json$Encode$float = _Json_wrap;
    var $author$project$Domain$relationSplitter = ' - ';
    var $elm$core$Tuple$second = function(_v0) {
        var y = _v0.b;
        return y;
    };
    var $author$project$Domain$getStringFromRelation = function(relation) {
        return _Utils_ap(relation.b, _Utils_ap($author$project$Domain$relationSplitter, relation.a));
    };
    var $elm$json$Json$Encode$int = _Json_wrap;
    var $elm$json$Json$Encode$object = function(pairs) {
        return _Json_wrap(A3($elm$core$List$foldl, F2(function(_v0, obj) {
            var k = _v0.a;
            var v = _v0.b;
            return A3(_Json_addField, k, v, obj);
        }), _Json_emptyObject(_Utils_Tuple0), pairs));
    };
    var $elm$json$Json$Encode$string = _Json_wrap;
    var $author$project$JsInterop$encodePointMessage = function(addPointValue) {
        return $elm$json$Json$Encode$object(_List_fromArray([
            _Utils_Tuple2('view', $elm$json$Json$Encode$string(addPointValue.selectedView)),
            _Utils_Tuple2('elementKey', $elm$json$Json$Encode$string(addPointValue.viewElementKey)),
            _Utils_Tuple2('relation', $elm$json$Json$Encode$string($author$project$Domain$getStringFromRelation(addPointValue.relation))),
            _Utils_Tuple2('pointIndex', $elm$json$Json$Encode$int(addPointValue.pointIndex)),
            _Utils_Tuple2('x', $elm$json$Json$Encode$float(addPointValue.coords.a)),
            _Utils_Tuple2('y', $elm$json$Json$Encode$float(addPointValue.coords.b))
        ]));
    };
    var $author$project$JsInterop$encodeRemovePoint = function(removePointValue) {
        return $elm$json$Json$Encode$object(_List_fromArray([
            _Utils_Tuple2('view', $elm$json$Json$Encode$string(removePointValue.selectedView)),
            _Utils_Tuple2('elementKey', $elm$json$Json$Encode$string(removePointValue.viewElementKey)),
            _Utils_Tuple2('relation', $elm$json$Json$Encode$string($author$project$Domain$getStringFromRelation(removePointValue.relation))),
            _Utils_Tuple2('pointIndex', $elm$json$Json$Encode$int(removePointValue.pointIndex))
        ]));
    };
    var $author$project$Elements$edgeStrokeWidthExtend = 3;
    var $author$project$Elements$extendPoints = F2(function(_v0, _v1) {
        var x1 = _v0.a;
        var y1 = _v0.b;
        var x2 = _v1.a;
        var y2 = _v1.b;
        var extend = F2(function(v1, v2) {
            return _Utils_cmp(v1, v2) < 0 || _Utils_eq(v1, v2) ? _Utils_Tuple2(v1 - $author$project$Elements$edgeStrokeWidthExtend, v2 + $author$project$Elements$edgeStrokeWidthExtend) : _Utils_Tuple2(v2 - $author$project$Elements$edgeStrokeWidthExtend, v1 + $author$project$Elements$edgeStrokeWidthExtend);
        });
        var _v2 = A2(extend, y1, y2);
        var uy1 = _v2.a;
        var uy2 = _v2.b;
        var _v3 = A2(extend, x1, x2);
        var ux1 = _v3.a;
        var ux2 = _v3.b;
        return _Utils_Tuple2(_Utils_Tuple2(ux1, uy1), _Utils_Tuple2(ux2, uy2));
    });
    var $MaybeJustJames$yaml$Yaml$Decode$Parsing = function(a) {
        return {
            $: 'Parsing',
            a: a
        };
    };
    var $MaybeJustJames$yaml$Yaml$Parser$problemToString = function(p) {
        switch(p.$){
            case 'Expecting':
                var msg = p.a;
                return 'Expected ' + msg;
            case 'ExpectingInt':
                return 'Expected an integer';
            case 'ExpectingHex':
                return 'Expected a hexadecimal value';
            case 'ExpectingOctal':
                return 'Expected an octal value';
            case 'ExpectingBinary':
                return 'Expected a binary value';
            case 'ExpectingFloat':
                return 'Expected a float';
            case 'ExpectingNumber':
                return 'Expected a number';
            case 'ExpectingVariable':
                return 'Expected a variable';
            case 'ExpectingSymbol':
                var name = p.a;
                return 'Expected symbol \'' + (name + '\'');
            case 'ExpectingKeyword':
                var name = p.a;
                return 'Expected keyword \'' + (name + '\'');
            case 'ExpectingEnd':
                return 'Expected end of input';
            case 'UnexpectedChar':
                return 'Encountered an unexpected character';
            case 'Problem':
                var msg = p.a;
                return 'Problem: ' + msg;
            default:
                return 'Bad repeat';
        }
    };
    var $MaybeJustJames$yaml$Yaml$Parser$deadEndToString = function(deadend) {
        return 'Line ' + ($elm$core$String$fromInt(deadend.row) + (', column ' + ($elm$core$String$fromInt(deadend.col) + (': ' + $MaybeJustJames$yaml$Yaml$Parser$problemToString(deadend.problem)))));
    };
    var $MaybeJustJames$yaml$Yaml$Parser$deadEndsToString = function(deadends) {
        return A2($elm$core$String$join, '\n', A2($elm$core$List$map, $MaybeJustJames$yaml$Yaml$Parser$deadEndToString, deadends));
    };
    var $elm$core$Dict$values = function(dict) {
        return A3($elm$core$Dict$foldr, F3(function(key, value, valueList) {
            return A2($elm$core$List$cons, value, valueList);
        }), _List_Nil, dict);
    };
    var $MaybeJustJames$yaml$Yaml$Parser$Ast$fold = F3(function(f, value, z) {
        switch(value.$){
            case 'String_':
                return A2(f, value, z);
            case 'Float_':
                return A2(f, value, z);
            case 'Int_':
                return A2(f, value, z);
            case 'Bool_':
                return A2(f, value, z);
            case 'Null_':
                return A2(f, value, z);
            case 'Alias_':
                return A2(f, value, z);
            case 'List_':
                var l = value.a;
                return A2(f, value, A3($elm$core$List$foldl, $MaybeJustJames$yaml$Yaml$Parser$Ast$fold(f), z, l));
            case 'Record_':
                var r = value.a;
                return A2(f, value, A3($elm$core$List$foldl, $MaybeJustJames$yaml$Yaml$Parser$Ast$fold(f), z, $elm$core$Dict$values(r)));
            default:
                var nm = value.a;
                var a = value.b;
                return A2(f, value, A3($MaybeJustJames$yaml$Yaml$Parser$Ast$fold, f, a, z));
        }
    });
    var $MaybeJustJames$yaml$Yaml$Parser$Ast$Anchor_ = F2(function(a, b) {
        return {
            $: 'Anchor_',
            a: a,
            b: b
        };
    });
    var $MaybeJustJames$yaml$Yaml$Parser$Ast$List_ = function(a) {
        return {
            $: 'List_',
            a: a
        };
    };
    var $MaybeJustJames$yaml$Yaml$Parser$Ast$Record_ = function(a) {
        return {
            $: 'Record_',
            a: a
        };
    };
    var $MaybeJustJames$yaml$Yaml$Parser$Ast$map = F2(function(f, value) {
        switch(value.$){
            case 'String_':
                return f(value);
            case 'Float_':
                return f(value);
            case 'Int_':
                return f(value);
            case 'Bool_':
                return f(value);
            case 'Null_':
                return f(value);
            case 'Alias_':
                return f(value);
            case 'List_':
                var l = value.a;
                return f($MaybeJustJames$yaml$Yaml$Parser$Ast$List_(A2($elm$core$List$map, $MaybeJustJames$yaml$Yaml$Parser$Ast$map(f), l)));
            case 'Record_':
                var r = value.a;
                return f($MaybeJustJames$yaml$Yaml$Parser$Ast$Record_($elm$core$Dict$fromList(A2($elm$core$List$map, function(_v1) {
                    var k = _v1.a;
                    var v = _v1.b;
                    return _Utils_Tuple2(k, A2($MaybeJustJames$yaml$Yaml$Parser$Ast$map, f, v));
                }, $elm$core$Dict$toList(r)))));
            default:
                var name = value.a;
                var a = value.b;
                return f(A2($MaybeJustJames$yaml$Yaml$Parser$Ast$Anchor_, name, A2($MaybeJustJames$yaml$Yaml$Parser$Ast$map, f, a)));
        }
    });
    var $MaybeJustJames$yaml$Yaml$Parser$deref = function(ast) {
        var anchorMap = A3($MaybeJustJames$yaml$Yaml$Parser$Ast$fold, F2(function(node, d) {
            if (node.$ === 'Anchor_') {
                var name = node.a;
                var v = node.b;
                return A3($elm$core$Dict$insert, name, v, d);
            } else return d;
        }), ast, $elm$core$Dict$empty);
        var replaceAnchors = function(v) {
            switch(v.$){
                case 'Alias_':
                    var name = v.a;
                    return A2($elm$core$Maybe$withDefault, v, A2($elm$core$Dict$get, name, anchorMap));
                case 'Anchor_':
                    var node = v.b;
                    return node;
                default:
                    return v;
            }
        };
        return A2($MaybeJustJames$yaml$Yaml$Parser$Ast$map, replaceAnchors, ast);
    };
    var $elm$core$Result$map = F2(function(func, ra) {
        if (ra.$ === 'Ok') {
            var a = ra.a;
            return $elm$core$Result$Ok(func(a));
        } else {
            var e = ra.a;
            return $elm$core$Result$Err(e);
        }
    });
    var $elm$core$Result$mapError = F2(function(f, result) {
        if (result.$ === 'Ok') {
            var v = result.a;
            return $elm$core$Result$Ok(v);
        } else {
            var e = result.a;
            return $elm$core$Result$Err(f(e));
        }
    });
    var $elm$parser$Parser$Advanced$Bad = F2(function(a, b) {
        return {
            $: 'Bad',
            a: a,
            b: b
        };
    });
    var $elm$parser$Parser$Advanced$Good = F3(function(a, b, c) {
        return {
            $: 'Good',
            a: a,
            b: b,
            c: c
        };
    });
    var $elm$parser$Parser$Advanced$Parser = function(a) {
        return {
            $: 'Parser',
            a: a
        };
    };
    var $elm$parser$Parser$Advanced$andThen = F2(function(callback, _v0) {
        var parseA = _v0.a;
        return $elm$parser$Parser$Advanced$Parser(function(s0) {
            var _v1 = parseA(s0);
            if (_v1.$ === 'Bad') {
                var p = _v1.a;
                var x = _v1.b;
                return A2($elm$parser$Parser$Advanced$Bad, p, x);
            } else {
                var p1 = _v1.a;
                var a = _v1.b;
                var s1 = _v1.c;
                var _v2 = callback(a);
                var parseB = _v2.a;
                var _v3 = parseB(s1);
                if (_v3.$ === 'Bad') {
                    var p2 = _v3.a;
                    var x = _v3.b;
                    return A2($elm$parser$Parser$Advanced$Bad, p1 || p2, x);
                } else {
                    var p2 = _v3.a;
                    var b = _v3.b;
                    var s2 = _v3.c;
                    return A3($elm$parser$Parser$Advanced$Good, p1 || p2, b, s2);
                }
            }
        });
    });
    var $elm$parser$Parser$andThen = $elm$parser$Parser$Advanced$andThen;
    var $elm$parser$Parser$Advanced$map2 = F3(function(func, _v0, _v1) {
        var parseA = _v0.a;
        var parseB = _v1.a;
        return $elm$parser$Parser$Advanced$Parser(function(s0) {
            var _v2 = parseA(s0);
            if (_v2.$ === 'Bad') {
                var p = _v2.a;
                var x = _v2.b;
                return A2($elm$parser$Parser$Advanced$Bad, p, x);
            } else {
                var p1 = _v2.a;
                var a = _v2.b;
                var s1 = _v2.c;
                var _v3 = parseB(s1);
                if (_v3.$ === 'Bad') {
                    var p2 = _v3.a;
                    var x = _v3.b;
                    return A2($elm$parser$Parser$Advanced$Bad, p1 || p2, x);
                } else {
                    var p2 = _v3.a;
                    var b = _v3.b;
                    var s2 = _v3.c;
                    return A3($elm$parser$Parser$Advanced$Good, p1 || p2, A2(func, a, b), s2);
                }
            }
        });
    });
    var $elm$parser$Parser$Advanced$ignorer = F2(function(keepParser, ignoreParser) {
        return A3($elm$parser$Parser$Advanced$map2, $elm$core$Basics$always, keepParser, ignoreParser);
    });
    var $elm$parser$Parser$ignorer = $elm$parser$Parser$Advanced$ignorer;
    var $elm$parser$Parser$Advanced$Empty = {
        $: 'Empty'
    };
    var $elm$parser$Parser$Advanced$Append = F2(function(a, b) {
        return {
            $: 'Append',
            a: a,
            b: b
        };
    });
    var $elm$parser$Parser$Advanced$oneOfHelp = F3(function(s0, bag, parsers) {
        oneOfHelp: while(true){
            if (!parsers.b) return A2($elm$parser$Parser$Advanced$Bad, false, bag);
            else {
                var parse = parsers.a.a;
                var remainingParsers = parsers.b;
                var _v1 = parse(s0);
                if (_v1.$ === 'Good') {
                    var step = _v1;
                    return step;
                } else {
                    var step = _v1;
                    var p = step.a;
                    var x = step.b;
                    if (p) return step;
                    else {
                        var $temp$s0 = s0, $temp$bag = A2($elm$parser$Parser$Advanced$Append, bag, x), $temp$parsers = remainingParsers;
                        s0 = $temp$s0;
                        bag = $temp$bag;
                        parsers = $temp$parsers;
                        continue oneOfHelp;
                    }
                }
            }
        }
    });
    var $elm$parser$Parser$Advanced$oneOf = function(parsers) {
        return $elm$parser$Parser$Advanced$Parser(function(s) {
            return A3($elm$parser$Parser$Advanced$oneOfHelp, s, $elm$parser$Parser$Advanced$Empty, parsers);
        });
    };
    var $elm$parser$Parser$oneOf = $elm$parser$Parser$Advanced$oneOf;
    var $elm$parser$Parser$Advanced$succeed = function(a) {
        return $elm$parser$Parser$Advanced$Parser(function(s) {
            return A3($elm$parser$Parser$Advanced$Good, false, a, s);
        });
    };
    var $elm$parser$Parser$succeed = $elm$parser$Parser$Advanced$succeed;
    var $elm$parser$Parser$ExpectingSymbol = function(a) {
        return {
            $: 'ExpectingSymbol',
            a: a
        };
    };
    var $elm$parser$Parser$Advanced$Token = F2(function(a, b) {
        return {
            $: 'Token',
            a: a,
            b: b
        };
    });
    var $elm$parser$Parser$Advanced$AddRight = F2(function(a, b) {
        return {
            $: 'AddRight',
            a: a,
            b: b
        };
    });
    var $elm$parser$Parser$Advanced$DeadEnd = F4(function(row, col, problem, contextStack) {
        return {
            col: col,
            contextStack: contextStack,
            problem: problem,
            row: row
        };
    });
    var $elm$parser$Parser$Advanced$fromState = F2(function(s, x) {
        return A2($elm$parser$Parser$Advanced$AddRight, $elm$parser$Parser$Advanced$Empty, A4($elm$parser$Parser$Advanced$DeadEnd, s.row, s.col, x, s.context));
    });
    var $elm$parser$Parser$Advanced$isSubString = _Parser_isSubString;
    var $elm$core$Basics$not = _Basics_not;
    var $elm$parser$Parser$Advanced$token = function(_v0) {
        var str = _v0.a;
        var expecting = _v0.b;
        var progress = !$elm$core$String$isEmpty(str);
        return $elm$parser$Parser$Advanced$Parser(function(s) {
            var _v1 = A5($elm$parser$Parser$Advanced$isSubString, str, s.offset, s.row, s.col, s.src);
            var newOffset = _v1.a;
            var newRow = _v1.b;
            var newCol = _v1.c;
            return _Utils_eq(newOffset, -1) ? A2($elm$parser$Parser$Advanced$Bad, false, A2($elm$parser$Parser$Advanced$fromState, s, expecting)) : A3($elm$parser$Parser$Advanced$Good, progress, _Utils_Tuple0, {
                col: newCol,
                context: s.context,
                indent: s.indent,
                offset: newOffset,
                row: newRow,
                src: s.src
            });
        });
    };
    var $elm$parser$Parser$Advanced$symbol = $elm$parser$Parser$Advanced$token;
    var $elm$parser$Parser$symbol = function(str) {
        return $elm$parser$Parser$Advanced$symbol(A2($elm$parser$Parser$Advanced$Token, str, $elm$parser$Parser$ExpectingSymbol(str)));
    };
    var $MaybeJustJames$yaml$Yaml$Parser$Util$threeDashes = $elm$parser$Parser$symbol('---');
    var $elm$parser$Parser$Done = function(a) {
        return {
            $: 'Done',
            a: a
        };
    };
    var $elm$parser$Parser$Loop = function(a) {
        return {
            $: 'Loop',
            a: a
        };
    };
    var $elm$parser$Parser$Advanced$chompUntilEndOr = function(str) {
        return $elm$parser$Parser$Advanced$Parser(function(s) {
            var _v0 = A5(_Parser_findSubString, str, s.offset, s.row, s.col, s.src);
            var newOffset = _v0.a;
            var newRow = _v0.b;
            var newCol = _v0.c;
            var adjustedOffset = newOffset < 0 ? $elm$core$String$length(s.src) : newOffset;
            return A3($elm$parser$Parser$Advanced$Good, _Utils_cmp(s.offset, adjustedOffset) < 0, _Utils_Tuple0, {
                col: newCol,
                context: s.context,
                indent: s.indent,
                offset: adjustedOffset,
                row: newRow,
                src: s.src
            });
        });
    };
    var $elm$parser$Parser$Advanced$lineComment = function(start) {
        return A2($elm$parser$Parser$Advanced$ignorer, $elm$parser$Parser$Advanced$token(start), $elm$parser$Parser$Advanced$chompUntilEndOr('\n'));
    };
    var $elm$parser$Parser$Expecting = function(a) {
        return {
            $: 'Expecting',
            a: a
        };
    };
    var $elm$parser$Parser$toToken = function(str) {
        return A2($elm$parser$Parser$Advanced$Token, str, $elm$parser$Parser$Expecting(str));
    };
    var $elm$parser$Parser$lineComment = function(str) {
        return $elm$parser$Parser$Advanced$lineComment($elm$parser$Parser$toToken(str));
    };
    var $MaybeJustJames$yaml$Yaml$Parser$Util$comment = $elm$parser$Parser$lineComment('#');
    var $elm$parser$Parser$Advanced$loopHelp = F4(function(p, state, callback, s0) {
        loopHelp: while(true){
            var _v0 = callback(state);
            var parse = _v0.a;
            var _v1 = parse(s0);
            if (_v1.$ === 'Good') {
                var p1 = _v1.a;
                var step = _v1.b;
                var s1 = _v1.c;
                if (step.$ === 'Loop') {
                    var newState = step.a;
                    var $temp$p = p || p1, $temp$state = newState, $temp$callback = callback, $temp$s0 = s1;
                    p = $temp$p;
                    state = $temp$state;
                    callback = $temp$callback;
                    s0 = $temp$s0;
                    continue loopHelp;
                } else {
                    var result = step.a;
                    return A3($elm$parser$Parser$Advanced$Good, p || p1, result, s1);
                }
            } else {
                var p1 = _v1.a;
                var x = _v1.b;
                return A2($elm$parser$Parser$Advanced$Bad, p || p1, x);
            }
        }
    });
    var $elm$parser$Parser$Advanced$loop = F2(function(state, callback) {
        return $elm$parser$Parser$Advanced$Parser(function(s) {
            return A4($elm$parser$Parser$Advanced$loopHelp, false, state, callback, s);
        });
    });
    var $elm$parser$Parser$Advanced$map = F2(function(func, _v0) {
        var parse = _v0.a;
        return $elm$parser$Parser$Advanced$Parser(function(s0) {
            var _v1 = parse(s0);
            if (_v1.$ === 'Good') {
                var p = _v1.a;
                var a = _v1.b;
                var s1 = _v1.c;
                return A3($elm$parser$Parser$Advanced$Good, p, func(a), s1);
            } else {
                var p = _v1.a;
                var x = _v1.b;
                return A2($elm$parser$Parser$Advanced$Bad, p, x);
            }
        });
    });
    var $elm$parser$Parser$map = $elm$parser$Parser$Advanced$map;
    var $elm$parser$Parser$Advanced$Done = function(a) {
        return {
            $: 'Done',
            a: a
        };
    };
    var $elm$parser$Parser$Advanced$Loop = function(a) {
        return {
            $: 'Loop',
            a: a
        };
    };
    var $elm$parser$Parser$toAdvancedStep = function(step) {
        if (step.$ === 'Loop') {
            var s = step.a;
            return $elm$parser$Parser$Advanced$Loop(s);
        } else {
            var a = step.a;
            return $elm$parser$Parser$Advanced$Done(a);
        }
    };
    var $elm$parser$Parser$loop = F2(function(state, callback) {
        return A2($elm$parser$Parser$Advanced$loop, state, function(s) {
            return A2($elm$parser$Parser$map, $elm$parser$Parser$toAdvancedStep, callback(s));
        });
    });
    var $MaybeJustJames$yaml$Yaml$Parser$Util$whitespace = function() {
        var step = function(_v0) {
            return $elm$parser$Parser$oneOf(_List_fromArray([
                A2($elm$parser$Parser$ignorer, $elm$parser$Parser$succeed($elm$parser$Parser$Loop(_Utils_Tuple0)), $MaybeJustJames$yaml$Yaml$Parser$Util$comment),
                A2($elm$parser$Parser$ignorer, $elm$parser$Parser$succeed($elm$parser$Parser$Loop(_Utils_Tuple0)), $elm$parser$Parser$symbol(' ')),
                A2($elm$parser$Parser$ignorer, $elm$parser$Parser$succeed($elm$parser$Parser$Loop(_Utils_Tuple0)), $elm$parser$Parser$symbol('\n')),
                $elm$parser$Parser$succeed($elm$parser$Parser$Done(_Utils_Tuple0))
            ]));
        };
        return A2($elm$parser$Parser$loop, _Utils_Tuple0, step);
    }();
    var $MaybeJustJames$yaml$Yaml$Parser$Document$dashes = function(indent) {
        return indent === 1 ? $elm$parser$Parser$oneOf(_List_fromArray([
            A2($elm$parser$Parser$ignorer, A2($elm$parser$Parser$ignorer, $elm$parser$Parser$succeed($elm$core$Basics$identity), $MaybeJustJames$yaml$Yaml$Parser$Util$threeDashes), $MaybeJustJames$yaml$Yaml$Parser$Util$whitespace),
            A2($elm$parser$Parser$ignorer, $elm$parser$Parser$succeed($elm$core$Basics$identity), $MaybeJustJames$yaml$Yaml$Parser$Util$whitespace)
        ])) : A2($elm$parser$Parser$ignorer, $elm$parser$Parser$succeed($elm$core$Basics$identity), $MaybeJustJames$yaml$Yaml$Parser$Util$whitespace);
    };
    var $elm$parser$Parser$Advanced$getCol = $elm$parser$Parser$Advanced$Parser(function(s) {
        return A3($elm$parser$Parser$Advanced$Good, false, s.col, s);
    });
    var $elm$parser$Parser$getCol = $elm$parser$Parser$Advanced$getCol;
    var $MaybeJustJames$yaml$Yaml$Parser$Document$begins = $elm$parser$Parser$oneOf(_List_fromArray([
        A2($elm$parser$Parser$ignorer, A2($elm$parser$Parser$ignorer, $elm$parser$Parser$succeed($elm$core$Basics$identity), $MaybeJustJames$yaml$Yaml$Parser$Util$whitespace), A2($elm$parser$Parser$andThen, $MaybeJustJames$yaml$Yaml$Parser$Document$dashes, $elm$parser$Parser$getCol)),
        A2($elm$parser$Parser$ignorer, $elm$parser$Parser$succeed($elm$core$Basics$identity), $MaybeJustJames$yaml$Yaml$Parser$Util$whitespace)
    ]));
    var $elm$parser$Parser$ExpectingEnd = {
        $: 'ExpectingEnd'
    };
    var $elm$parser$Parser$Advanced$end = function(x) {
        return $elm$parser$Parser$Advanced$Parser(function(s) {
            return _Utils_eq($elm$core$String$length(s.src), s.offset) ? A3($elm$parser$Parser$Advanced$Good, false, _Utils_Tuple0, s) : A2($elm$parser$Parser$Advanced$Bad, false, A2($elm$parser$Parser$Advanced$fromState, s, x));
        });
    };
    var $elm$parser$Parser$end = $elm$parser$Parser$Advanced$end($elm$parser$Parser$ExpectingEnd);
    var $MaybeJustJames$yaml$Yaml$Parser$Util$threeDots = $elm$parser$Parser$symbol('...');
    var $MaybeJustJames$yaml$Yaml$Parser$Document$ends = A2($elm$parser$Parser$ignorer, A2($elm$parser$Parser$ignorer, A2($elm$parser$Parser$ignorer, A2($elm$parser$Parser$ignorer, $elm$parser$Parser$succeed($elm$core$Basics$identity), $MaybeJustJames$yaml$Yaml$Parser$Util$whitespace), $elm$parser$Parser$oneOf(_List_fromArray([
        $MaybeJustJames$yaml$Yaml$Parser$Util$threeDots,
        $elm$parser$Parser$succeed(_Utils_Tuple0)
    ]))), $MaybeJustJames$yaml$Yaml$Parser$Util$whitespace), $elm$parser$Parser$end);
    var $elm$parser$Parser$Advanced$keeper = F2(function(parseFunc, parseArg) {
        return A3($elm$parser$Parser$Advanced$map2, $elm$core$Basics$apL, parseFunc, parseArg);
    });
    var $elm$parser$Parser$keeper = $elm$parser$Parser$Advanced$keeper;
    var $MaybeJustJames$yaml$Yaml$Parser$Ast$Null_ = {
        $: 'Null_'
    };
    var $MaybeJustJames$yaml$Yaml$Parser$Ast$String_ = function(a) {
        return {
            $: 'String_',
            a: a
        };
    };
    var $elm$parser$Parser$chompUntilEndOr = $elm$parser$Parser$Advanced$chompUntilEndOr;
    var $elm$parser$Parser$Advanced$mapChompedString = F2(function(func, _v0) {
        var parse = _v0.a;
        return $elm$parser$Parser$Advanced$Parser(function(s0) {
            var _v1 = parse(s0);
            if (_v1.$ === 'Bad') {
                var p = _v1.a;
                var x = _v1.b;
                return A2($elm$parser$Parser$Advanced$Bad, p, x);
            } else {
                var p = _v1.a;
                var a = _v1.b;
                var s1 = _v1.c;
                return A3($elm$parser$Parser$Advanced$Good, p, A2(func, A3($elm$core$String$slice, s0.offset, s1.offset, s0.src), a), s1);
            }
        });
    });
    var $elm$parser$Parser$Advanced$getChompedString = function(parser) {
        return A2($elm$parser$Parser$Advanced$mapChompedString, $elm$core$Basics$always, parser);
    };
    var $elm$parser$Parser$getChompedString = $elm$parser$Parser$Advanced$getChompedString;
    var $MaybeJustJames$yaml$Yaml$Parser$Util$remaining = $elm$parser$Parser$getChompedString(A2($elm$parser$Parser$ignorer, $elm$parser$Parser$succeed(_Utils_Tuple0), $elm$parser$Parser$chompUntilEndOr('\n...\n')));
    var $MaybeJustJames$yaml$Yaml$Parser$String$exceptions = function() {
        var dashed = function(s) {
            return '---' + s;
        };
        return $elm$parser$Parser$oneOf(_List_fromArray([
            A2($elm$parser$Parser$ignorer, $elm$parser$Parser$succeed($MaybeJustJames$yaml$Yaml$Parser$Ast$Null_), $elm$parser$Parser$end),
            A2($elm$parser$Parser$keeper, A2($elm$parser$Parser$ignorer, $elm$parser$Parser$succeed(A2($elm$core$Basics$composeL, $MaybeJustJames$yaml$Yaml$Parser$Ast$String_, dashed)), $MaybeJustJames$yaml$Yaml$Parser$Util$threeDashes), $MaybeJustJames$yaml$Yaml$Parser$Util$remaining),
            A2($elm$parser$Parser$ignorer, A2($elm$parser$Parser$ignorer, $elm$parser$Parser$succeed($MaybeJustJames$yaml$Yaml$Parser$Ast$Null_), $MaybeJustJames$yaml$Yaml$Parser$Util$threeDots), $MaybeJustJames$yaml$Yaml$Parser$Util$remaining)
        ]));
    }();
    var $elm$parser$Parser$Advanced$isSubChar = _Parser_isSubChar;
    var $elm$parser$Parser$Advanced$chompWhileHelp = F5(function(isGood, offset, row, col, s0) {
        chompWhileHelp: while(true){
            var newOffset = A3($elm$parser$Parser$Advanced$isSubChar, isGood, offset, s0.src);
            if (_Utils_eq(newOffset, -1)) return A3($elm$parser$Parser$Advanced$Good, _Utils_cmp(s0.offset, offset) < 0, _Utils_Tuple0, {
                col: col,
                context: s0.context,
                indent: s0.indent,
                offset: offset,
                row: row,
                src: s0.src
            });
            else if (_Utils_eq(newOffset, -2)) {
                var $temp$isGood = isGood, $temp$offset = offset + 1, $temp$row = row + 1, $temp$col = 1, $temp$s0 = s0;
                isGood = $temp$isGood;
                offset = $temp$offset;
                row = $temp$row;
                col = $temp$col;
                s0 = $temp$s0;
                continue chompWhileHelp;
            } else {
                var $temp$isGood = isGood, $temp$offset = newOffset, $temp$row = row, $temp$col = col + 1, $temp$s0 = s0;
                isGood = $temp$isGood;
                offset = $temp$offset;
                row = $temp$row;
                col = $temp$col;
                s0 = $temp$s0;
                continue chompWhileHelp;
            }
        }
    });
    var $elm$parser$Parser$Advanced$chompWhile = function(isGood) {
        return $elm$parser$Parser$Advanced$Parser(function(s) {
            return A5($elm$parser$Parser$Advanced$chompWhileHelp, isGood, s.offset, s.row, s.col, s);
        });
    };
    var $elm$parser$Parser$chompWhile = $elm$parser$Parser$Advanced$chompWhile;
    var $elm$core$List$any = F2(function(isOkay, list) {
        any: while(true){
            if (!list.b) return false;
            else {
                var x = list.a;
                var xs = list.b;
                if (isOkay(x)) return true;
                else {
                    var $temp$isOkay = isOkay, $temp$list = xs;
                    isOkay = $temp$isOkay;
                    list = $temp$list;
                    continue any;
                }
            }
        }
    });
    var $elm$core$List$member = F2(function(x, xs) {
        return A2($elm$core$List$any, function(a) {
            return _Utils_eq(a, x);
        }, xs);
    });
    var $MaybeJustJames$yaml$Yaml$Parser$refName = A2($elm$parser$Parser$keeper, $elm$parser$Parser$succeed($elm$core$Basics$identity), $elm$parser$Parser$getChompedString($elm$parser$Parser$chompWhile(function(c) {
        return !A2($elm$core$List$member, c, _List_fromArray([
            _Utils_chr('\u000D'),
            _Utils_chr('\n'),
            _Utils_chr(' '),
            _Utils_chr('\t'),
            _Utils_chr(','),
            _Utils_chr('['),
            _Utils_chr(']'),
            _Utils_chr('{'),
            _Utils_chr('}')
        ]));
    })));
    var $MaybeJustJames$yaml$Yaml$Parser$anchor = function(valParser) {
        return A2($elm$parser$Parser$keeper, A2($elm$parser$Parser$keeper, A2($elm$parser$Parser$ignorer, $elm$parser$Parser$succeed($MaybeJustJames$yaml$Yaml$Parser$Ast$Anchor_), $elm$parser$Parser$symbol('&')), A2($elm$parser$Parser$ignorer, $MaybeJustJames$yaml$Yaml$Parser$refName, $MaybeJustJames$yaml$Yaml$Parser$Util$whitespace)), A2($elm$parser$Parser$andThen, valParser, $elm$parser$Parser$getCol));
    };
    var $elm$parser$Parser$Advanced$backtrackable = function(_v0) {
        var parse = _v0.a;
        return $elm$parser$Parser$Advanced$Parser(function(s0) {
            var _v1 = parse(s0);
            if (_v1.$ === 'Bad') {
                var x = _v1.b;
                return A2($elm$parser$Parser$Advanced$Bad, false, x);
            } else {
                var a = _v1.b;
                var s1 = _v1.c;
                return A3($elm$parser$Parser$Advanced$Good, false, a, s1);
            }
        });
    };
    var $elm$parser$Parser$backtrackable = $elm$parser$Parser$Advanced$backtrackable;
    var $elm$parser$Parser$UnexpectedChar = {
        $: 'UnexpectedChar'
    };
    var $elm$parser$Parser$Advanced$chompIf = F2(function(isGood, expecting) {
        return $elm$parser$Parser$Advanced$Parser(function(s) {
            var newOffset = A3($elm$parser$Parser$Advanced$isSubChar, isGood, s.offset, s.src);
            return _Utils_eq(newOffset, -1) ? A2($elm$parser$Parser$Advanced$Bad, false, A2($elm$parser$Parser$Advanced$fromState, s, expecting)) : _Utils_eq(newOffset, -2) ? A3($elm$parser$Parser$Advanced$Good, true, _Utils_Tuple0, {
                col: 1,
                context: s.context,
                indent: s.indent,
                offset: s.offset + 1,
                row: s.row + 1,
                src: s.src
            }) : A3($elm$parser$Parser$Advanced$Good, true, _Utils_Tuple0, {
                col: s.col + 1,
                context: s.context,
                indent: s.indent,
                offset: newOffset,
                row: s.row,
                src: s.src
            });
        });
    });
    var $elm$parser$Parser$chompIf = function(isGood) {
        return A2($elm$parser$Parser$Advanced$chompIf, isGood, $elm$parser$Parser$UnexpectedChar);
    };
    var $MaybeJustJames$yaml$Yaml$Parser$Util$characters_ = function(isOk) {
        return $elm$parser$Parser$getChompedString(A2($elm$parser$Parser$ignorer, $elm$parser$Parser$succeed(_Utils_Tuple0), $elm$parser$Parser$chompWhile(isOk)));
    };
    var $MaybeJustJames$yaml$Yaml$Parser$Util$is = F2(function(searched, _char) {
        return _Utils_eq(_char, searched);
    });
    var $MaybeJustJames$yaml$Yaml$Parser$Util$isDoubleQuote = $MaybeJustJames$yaml$Yaml$Parser$Util$is(_Utils_chr('\"'));
    var $MaybeJustJames$yaml$Yaml$Parser$Util$isSpace = $MaybeJustJames$yaml$Yaml$Parser$Util$is(_Utils_chr(' '));
    var $MaybeJustJames$yaml$Yaml$Parser$Util$spaces = $elm$parser$Parser$chompWhile($MaybeJustJames$yaml$Yaml$Parser$Util$isSpace);
    var $MaybeJustJames$yaml$Yaml$Parser$Util$doubleQuotes = A2($elm$parser$Parser$keeper, A2($elm$parser$Parser$ignorer, $elm$parser$Parser$succeed($elm$core$Basics$identity), $elm$parser$Parser$symbol('\"')), A2($elm$parser$Parser$ignorer, A2($elm$parser$Parser$ignorer, $MaybeJustJames$yaml$Yaml$Parser$Util$characters_(A2($elm$core$Basics$composeL, $elm$core$Basics$not, $MaybeJustJames$yaml$Yaml$Parser$Util$isDoubleQuote)), $elm$parser$Parser$symbol('\"')), $MaybeJustJames$yaml$Yaml$Parser$Util$spaces));
    var $MaybeJustJames$yaml$Yaml$Parser$Ast$Bool_ = function(a) {
        return {
            $: 'Bool_',
            a: a
        };
    };
    var $MaybeJustJames$yaml$Yaml$Parser$Ast$Float_ = function(a) {
        return {
            $: 'Float_',
            a: a
        };
    };
    var $MaybeJustJames$yaml$Yaml$Parser$Ast$Int_ = function(a) {
        return {
            $: 'Int_',
            a: a
        };
    };
    var $elm$core$String$toFloat = _String_toFloat;
    var $elm$core$String$toLower = _String_toLower;
    var $elm$core$String$trim = _String_trim;
    var $MaybeJustJames$yaml$Yaml$Parser$Ast$fromString = function(string) {
        var trimmed = $elm$core$String$trim(string);
        var _v0 = $elm$core$String$toLower(trimmed);
        switch(_v0){
            case '':
                return $MaybeJustJames$yaml$Yaml$Parser$Ast$Null_;
            case 'null':
                return $MaybeJustJames$yaml$Yaml$Parser$Ast$Null_;
            case 'true':
                return $MaybeJustJames$yaml$Yaml$Parser$Ast$Bool_(true);
            case 'false':
                return $MaybeJustJames$yaml$Yaml$Parser$Ast$Bool_(false);
            default:
                var other = _v0;
                var _v1 = $elm$core$String$toInt(other);
                if (_v1.$ === 'Just') {
                    var _int = _v1.a;
                    return $MaybeJustJames$yaml$Yaml$Parser$Ast$Int_(_int);
                } else {
                    var _v2 = $elm$core$String$toFloat(other);
                    if (_v2.$ === 'Just') {
                        var _float = _v2.a;
                        return $MaybeJustJames$yaml$Yaml$Parser$Ast$Float_(_float);
                    } else return $MaybeJustJames$yaml$Yaml$Parser$Ast$String_(trimmed);
                }
        }
    };
    var $elm$core$List$head = function(list) {
        if (list.b) {
            var x = list.a;
            var xs = list.b;
            return $elm$core$Maybe$Just(x);
        } else return $elm$core$Maybe$Nothing;
    };
    var $MaybeJustJames$yaml$Yaml$Parser$Util$indented = F2(function(indent, next) {
        var check = function(actual) {
            return $elm$parser$Parser$oneOf(_List_fromArray([
                A2($elm$parser$Parser$andThen, function(_v0) {
                    return next.ending;
                }, $elm$parser$Parser$end),
                A2($elm$parser$Parser$andThen, function(_v1) {
                    return next.ending;
                }, $elm$parser$Parser$symbol('\n...\n')),
                _Utils_eq(actual, indent) ? next.exactly : _Utils_cmp(actual, indent) > 0 ? next.larger(actual) : next.smaller
            ]));
        };
        return A2($elm$parser$Parser$andThen, check, A2($elm$parser$Parser$keeper, A2($elm$parser$Parser$ignorer, $elm$parser$Parser$succeed($elm$core$Basics$identity), $MaybeJustJames$yaml$Yaml$Parser$Util$whitespace), $elm$parser$Parser$getCol));
    });
    var $MaybeJustJames$yaml$Yaml$Parser$Util$isColon = $MaybeJustJames$yaml$Yaml$Parser$Util$is(_Utils_chr(':'));
    var $MaybeJustJames$yaml$Yaml$Parser$Util$isListEnd = $MaybeJustJames$yaml$Yaml$Parser$Util$is(_Utils_chr(']'));
    var $MaybeJustJames$yaml$Yaml$Parser$Util$isListStart = $MaybeJustJames$yaml$Yaml$Parser$Util$is(_Utils_chr('['));
    var $MaybeJustJames$yaml$Yaml$Parser$Util$isNewLine = $MaybeJustJames$yaml$Yaml$Parser$Util$is(_Utils_chr('\n'));
    var $MaybeJustJames$yaml$Yaml$Parser$Util$isRecordEnd = $MaybeJustJames$yaml$Yaml$Parser$Util$is(_Utils_chr('}'));
    var $MaybeJustJames$yaml$Yaml$Parser$Util$isRecordStart = $MaybeJustJames$yaml$Yaml$Parser$Util$is(_Utils_chr('{'));
    var $MaybeJustJames$yaml$Yaml$Parser$listElementBegin = $elm$parser$Parser$oneOf(_List_fromArray([
        $elm$parser$Parser$symbol('- '),
        $elm$parser$Parser$symbol('-\n')
    ]));
    var $MaybeJustJames$yaml$Yaml$Parser$Util$isComma = $MaybeJustJames$yaml$Yaml$Parser$Util$is(_Utils_chr(','));
    var $MaybeJustJames$yaml$Yaml$Parser$listInlineOnDone = F2(function(elements, element) {
        return $elm$parser$Parser$Done($elm$core$List$reverse(A2($elm$core$List$cons, element, elements)));
    });
    var $MaybeJustJames$yaml$Yaml$Parser$listInlineOnMore = F2(function(elements, element) {
        return $elm$parser$Parser$Loop(A2($elm$core$List$cons, element, elements));
    });
    var $MaybeJustJames$yaml$Yaml$Parser$listInlineNext = F2(function(elements, element) {
        return $elm$parser$Parser$oneOf(_List_fromArray([
            A2($elm$parser$Parser$ignorer, $elm$parser$Parser$succeed(A2($MaybeJustJames$yaml$Yaml$Parser$listInlineOnMore, elements, element)), $elm$parser$Parser$chompIf($MaybeJustJames$yaml$Yaml$Parser$Util$isComma)),
            A2($elm$parser$Parser$ignorer, $elm$parser$Parser$succeed(A2($MaybeJustJames$yaml$Yaml$Parser$listInlineOnDone, elements, element)), $elm$parser$Parser$chompIf($MaybeJustJames$yaml$Yaml$Parser$Util$isListEnd))
        ]));
    });
    var $MaybeJustJames$yaml$Yaml$Parser$Util$neither = F3(function(f1, f2, _char) {
        return !f1(_char) && !f2(_char);
    });
    var $elm$core$String$replace = F3(function(before, after, string) {
        return A2($elm$core$String$join, after, A2($elm$core$String$split, before, string));
    });
    var $MaybeJustJames$yaml$Yaml$Parser$listInlineString = A2($elm$parser$Parser$map, A2($elm$core$Basics$composeL, $MaybeJustJames$yaml$Yaml$Parser$Ast$fromString, A2($elm$core$String$replace, '\\', '\\\\')), $elm$parser$Parser$getChompedString(A2($elm$parser$Parser$ignorer, $elm$parser$Parser$succeed(_Utils_Tuple0), $elm$parser$Parser$chompWhile(A2($MaybeJustJames$yaml$Yaml$Parser$Util$neither, $MaybeJustJames$yaml$Yaml$Parser$Util$isComma, $MaybeJustJames$yaml$Yaml$Parser$Util$isListEnd)))));
    var $elm$core$String$concat = function(strings) {
        return A2($elm$core$String$join, '', strings);
    };
    var $MaybeJustJames$yaml$Yaml$Parser$Util$characters = function(isOk) {
        var more = F2(function(chars, _char) {
            return $elm$parser$Parser$Loop(A2($elm$core$List$cons, _char, chars));
        });
        var done = function(chars) {
            return $elm$parser$Parser$Done($elm$core$String$concat($elm$core$List$reverse(chars)));
        };
        var step = function(chars) {
            return $elm$parser$Parser$oneOf(_List_fromArray([
                A2($elm$parser$Parser$ignorer, $elm$parser$Parser$succeed(done(chars)), $MaybeJustJames$yaml$Yaml$Parser$Util$comment),
                A2($elm$parser$Parser$map, more(chars), $elm$parser$Parser$getChompedString(A2($elm$parser$Parser$ignorer, $elm$parser$Parser$succeed(_Utils_Tuple0), $elm$parser$Parser$chompIf(isOk)))),
                $elm$parser$Parser$succeed(done(chars))
            ]));
        };
        return A2($elm$parser$Parser$loop, _List_Nil, step);
    };
    var $MaybeJustJames$yaml$Yaml$Parser$Util$multilineStep = F2(function(indent, lines) {
        var multilineString = function(lines_) {
            return A2($elm$core$String$join, ' ', $elm$core$List$reverse(lines_));
        };
        var conclusion = F2(function(line, indent_) {
            return _Utils_cmp(indent_, indent) > 0 ? $elm$parser$Parser$Loop(A2($elm$core$List$cons, line, lines)) : $elm$parser$Parser$Done(multilineString(A2($elm$core$List$cons, line, lines)));
        });
        return $elm$parser$Parser$oneOf(_List_fromArray([
            A2($elm$parser$Parser$keeper, A2($elm$parser$Parser$keeper, $elm$parser$Parser$succeed(conclusion), A2($elm$parser$Parser$ignorer, A2($elm$parser$Parser$ignorer, $MaybeJustJames$yaml$Yaml$Parser$Util$characters(A2($elm$core$Basics$composeL, $elm$core$Basics$not, $MaybeJustJames$yaml$Yaml$Parser$Util$isNewLine)), $elm$parser$Parser$chompIf($MaybeJustJames$yaml$Yaml$Parser$Util$isNewLine)), $MaybeJustJames$yaml$Yaml$Parser$Util$spaces)), $elm$parser$Parser$getCol),
            $elm$parser$Parser$succeed($elm$parser$Parser$Done(multilineString(lines)))
        ]));
    });
    var $MaybeJustJames$yaml$Yaml$Parser$Util$multiline = function(indent) {
        return A2($elm$parser$Parser$loop, _List_Nil, $MaybeJustJames$yaml$Yaml$Parser$Util$multilineStep(indent));
    };
    var $elm$core$Tuple$pair = F2(function(a, b) {
        return _Utils_Tuple2(a, b);
    });
    var $elm$regex$Regex$Match = F4(function(match, index, number, submatches) {
        return {
            index: index,
            match: match,
            number: number,
            submatches: submatches
        };
    });
    var $elm$regex$Regex$fromStringWith = _Regex_fromStringWith;
    var $elm$regex$Regex$fromString = function(string) {
        return A2($elm$regex$Regex$fromStringWith, {
            caseInsensitive: false,
            multiline: false
        }, string);
    };
    var $elm$regex$Regex$never = _Regex_never;
    var $elm$regex$Regex$replace = _Regex_replaceAtMost(_Regex_infinity);
    var $MaybeJustJames$yaml$Yaml$Parser$Util$postProcessString = function(str) {
        var regexFromString = A2($elm$core$Basics$composeR, $elm$regex$Regex$fromString, $elm$core$Maybe$withDefault($elm$regex$Regex$never));
        return A3($elm$regex$Regex$replace, regexFromString('\\s\\s+'), function(match) {
            return A2($elm$core$String$contains, '\n\n', match.match) ? '\n' : ' ';
        }, str);
    };
    var $elm$parser$Parser$Problem = function(a) {
        return {
            $: 'Problem',
            a: a
        };
    };
    var $elm$parser$Parser$Advanced$problem = function(x) {
        return $elm$parser$Parser$Advanced$Parser(function(s) {
            return A2($elm$parser$Parser$Advanced$Bad, false, A2($elm$parser$Parser$Advanced$fromState, s, x));
        });
    };
    var $elm$parser$Parser$problem = function(msg) {
        return $elm$parser$Parser$Advanced$problem($elm$parser$Parser$Problem(msg));
    };
    var $MaybeJustJames$yaml$Yaml$Parser$recordInlineOnDone = F2(function(elements, element) {
        return $elm$parser$Parser$Done($elm$core$List$reverse(A2($elm$core$List$cons, element, elements)));
    });
    var $MaybeJustJames$yaml$Yaml$Parser$recordInlineOnMore = F2(function(elements, element) {
        return $elm$parser$Parser$Loop(A2($elm$core$List$cons, element, elements));
    });
    var $MaybeJustJames$yaml$Yaml$Parser$recordInlineNext = F2(function(elements, element) {
        return $elm$parser$Parser$oneOf(_List_fromArray([
            A2($elm$parser$Parser$ignorer, $elm$parser$Parser$succeed(A2($MaybeJustJames$yaml$Yaml$Parser$recordInlineOnMore, elements, element)), $elm$parser$Parser$chompIf($MaybeJustJames$yaml$Yaml$Parser$Util$isComma)),
            A2($elm$parser$Parser$ignorer, $elm$parser$Parser$succeed(A2($MaybeJustJames$yaml$Yaml$Parser$recordInlineOnDone, elements, element)), $elm$parser$Parser$chompIf($MaybeJustJames$yaml$Yaml$Parser$Util$isRecordEnd))
        ]));
    });
    var $MaybeJustJames$yaml$Yaml$Parser$Util$neither3 = F4(function(f1, f2, f3, _char) {
        return !f1(_char) && !f2(_char) && !f3(_char);
    });
    var $MaybeJustJames$yaml$Yaml$Parser$recordInlinePropertyNameString = A2($elm$parser$Parser$map, $elm$core$String$trim, $elm$parser$Parser$getChompedString(A2($elm$parser$Parser$ignorer, A2($elm$parser$Parser$ignorer, $elm$parser$Parser$succeed(_Utils_Tuple0), $elm$parser$Parser$chompWhile(A3($MaybeJustJames$yaml$Yaml$Parser$Util$neither3, $MaybeJustJames$yaml$Yaml$Parser$Util$isColon, $MaybeJustJames$yaml$Yaml$Parser$Util$isComma, $MaybeJustJames$yaml$Yaml$Parser$Util$isRecordEnd))), $MaybeJustJames$yaml$Yaml$Parser$Util$whitespace)));
    var $MaybeJustJames$yaml$Yaml$Parser$Util$isSingleQuote = $MaybeJustJames$yaml$Yaml$Parser$Util$is(_Utils_chr('\''));
    var $MaybeJustJames$yaml$Yaml$Parser$Util$singleQuotes = A2($elm$parser$Parser$keeper, A2($elm$parser$Parser$ignorer, $elm$parser$Parser$succeed(A2($elm$core$String$replace, '\\', '\\\\')), $elm$parser$Parser$symbol('\'')), A2($elm$parser$Parser$ignorer, A2($elm$parser$Parser$ignorer, $MaybeJustJames$yaml$Yaml$Parser$Util$characters_(A2($elm$core$Basics$composeL, $elm$core$Basics$not, $MaybeJustJames$yaml$Yaml$Parser$Util$isSingleQuote)), $elm$parser$Parser$symbol('\'')), $MaybeJustJames$yaml$Yaml$Parser$Util$spaces));
    var $MaybeJustJames$yaml$Yaml$Parser$recordInlinePropertyName = A2($elm$parser$Parser$keeper, $elm$parser$Parser$succeed($elm$core$Basics$identity), A2($elm$parser$Parser$ignorer, A2($elm$parser$Parser$ignorer, A2($elm$parser$Parser$ignorer, $elm$parser$Parser$oneOf(_List_fromArray([
        $MaybeJustJames$yaml$Yaml$Parser$Util$singleQuotes,
        $MaybeJustJames$yaml$Yaml$Parser$Util$doubleQuotes,
        $MaybeJustJames$yaml$Yaml$Parser$recordInlinePropertyNameString
    ])), $elm$parser$Parser$chompWhile($MaybeJustJames$yaml$Yaml$Parser$Util$isSpace)), $elm$parser$Parser$oneOf(_List_fromArray([
        $elm$parser$Parser$chompIf($MaybeJustJames$yaml$Yaml$Parser$Util$isColon),
        $elm$parser$Parser$problem('I was parsing an inline record, when I ran into an invalid property. It is missing the \":\"!')
    ]))), $elm$parser$Parser$oneOf(_List_fromArray([
        $elm$parser$Parser$chompIf($MaybeJustJames$yaml$Yaml$Parser$Util$isNewLine),
        $elm$parser$Parser$chompIf($MaybeJustJames$yaml$Yaml$Parser$Util$isSpace),
        $elm$parser$Parser$problem('I was parsing an inline record, but missing a space or a new line between the \":\" and the value!')
    ]))));
    var $MaybeJustJames$yaml$Yaml$Parser$recordInlineString = A2($elm$parser$Parser$map, $MaybeJustJames$yaml$Yaml$Parser$Ast$fromString, $elm$parser$Parser$getChompedString(A2($elm$parser$Parser$ignorer, $elm$parser$Parser$succeed(_Utils_Tuple0), $elm$parser$Parser$chompWhile(A2($MaybeJustJames$yaml$Yaml$Parser$Util$neither, $MaybeJustJames$yaml$Yaml$Parser$Util$isComma, $MaybeJustJames$yaml$Yaml$Parser$Util$isRecordEnd)))));
    var $MaybeJustJames$yaml$Yaml$Parser$Ast$Alias_ = function(a) {
        return {
            $: 'Alias_',
            a: a
        };
    };
    var $MaybeJustJames$yaml$Yaml$Parser$reference = A2($elm$parser$Parser$keeper, A2($elm$parser$Parser$ignorer, $elm$parser$Parser$succeed($MaybeJustJames$yaml$Yaml$Parser$Ast$Alias_), $elm$parser$Parser$symbol('*')), $MaybeJustJames$yaml$Yaml$Parser$refName);
    var $elm$parser$Parser$token = function(str) {
        return $elm$parser$Parser$Advanced$token($elm$parser$Parser$toToken(str));
    };
    var $MaybeJustJames$yaml$Yaml$Parser$list = function(indent) {
        var confirmed = function(value_) {
            return A2($elm$parser$Parser$keeper, $elm$parser$Parser$succeed($MaybeJustJames$yaml$Yaml$Parser$Ast$List_), A2($elm$parser$Parser$loop, _List_fromArray([
                value_
            ]), $MaybeJustJames$yaml$Yaml$Parser$listStep(indent)));
        };
        return A2($elm$parser$Parser$andThen, confirmed, $MaybeJustJames$yaml$Yaml$Parser$listElement(indent));
    };
    var $MaybeJustJames$yaml$Yaml$Parser$listElement = function(indent) {
        return A2($elm$parser$Parser$keeper, A2($elm$parser$Parser$ignorer, $elm$parser$Parser$succeed($elm$core$Basics$identity), $MaybeJustJames$yaml$Yaml$Parser$listElementBegin), $MaybeJustJames$yaml$Yaml$Parser$listElementValue(indent));
    };
    var $MaybeJustJames$yaml$Yaml$Parser$listElementValue = function(indent) {
        var elVal = function(indent_) {
            return $elm$parser$Parser$oneOf(_List_fromArray([
                $MaybeJustJames$yaml$Yaml$Parser$cyclic$listInline(),
                $MaybeJustJames$yaml$Yaml$Parser$cyclic$recordInline(),
                $MaybeJustJames$yaml$Yaml$Parser$list(indent_),
                A2($MaybeJustJames$yaml$Yaml$Parser$recordOrString, indent, indent_)
            ]));
        };
        return A2($MaybeJustJames$yaml$Yaml$Parser$Util$indented, indent, {
            ending: $elm$parser$Parser$succeed($MaybeJustJames$yaml$Yaml$Parser$Ast$Null_),
            exactly: $elm$parser$Parser$succeed($MaybeJustJames$yaml$Yaml$Parser$Ast$Null_),
            larger: function(indent_) {
                return $elm$parser$Parser$oneOf(_List_fromArray([
                    $MaybeJustJames$yaml$Yaml$Parser$anchor(elVal),
                    $MaybeJustJames$yaml$Yaml$Parser$reference,
                    elVal(indent_)
                ]));
            },
            smaller: $elm$parser$Parser$succeed($MaybeJustJames$yaml$Yaml$Parser$Ast$Null_)
        });
    };
    var $MaybeJustJames$yaml$Yaml$Parser$listInlineStep = function(elements) {
        return A2($elm$parser$Parser$andThen, $MaybeJustJames$yaml$Yaml$Parser$listInlineNext(elements), A2($elm$parser$Parser$keeper, A2($elm$parser$Parser$ignorer, $elm$parser$Parser$succeed($elm$core$Basics$identity), $MaybeJustJames$yaml$Yaml$Parser$Util$whitespace), A2($elm$parser$Parser$ignorer, $MaybeJustJames$yaml$Yaml$Parser$cyclic$listInlineValue(), $MaybeJustJames$yaml$Yaml$Parser$Util$whitespace)));
    };
    var $MaybeJustJames$yaml$Yaml$Parser$listStep = F2(function(indent, values) {
        var next = function(value_) {
            return $elm$parser$Parser$Loop(A2($elm$core$List$cons, value_, values));
        };
        var finish = $elm$parser$Parser$Done($elm$core$List$reverse(values));
        return A2($MaybeJustJames$yaml$Yaml$Parser$Util$indented, indent, {
            ending: $elm$parser$Parser$succeed(finish),
            exactly: $elm$parser$Parser$oneOf(_List_fromArray([
                A2($elm$parser$Parser$keeper, $elm$parser$Parser$succeed(next), $MaybeJustJames$yaml$Yaml$Parser$listElement(indent)),
                $elm$parser$Parser$succeed(finish)
            ])),
            larger: function(_v1) {
                return $elm$parser$Parser$problem('I was looking for the next element but didn\'t find one.');
            },
            smaller: $elm$parser$Parser$succeed(finish)
        });
    });
    var $MaybeJustJames$yaml$Yaml$Parser$quotedString = function(indent) {
        var withQuote = function(quote) {
            return $elm$parser$Parser$oneOf(_List_fromArray([
                A2($MaybeJustJames$yaml$Yaml$Parser$recordProperty, indent, quote),
                $elm$parser$Parser$succeed($MaybeJustJames$yaml$Yaml$Parser$Ast$String_($MaybeJustJames$yaml$Yaml$Parser$Util$postProcessString(quote)))
            ]));
        };
        return A2($elm$parser$Parser$andThen, withQuote, A2($elm$parser$Parser$keeper, $elm$parser$Parser$succeed($elm$core$Basics$identity), A2($elm$parser$Parser$ignorer, $elm$parser$Parser$oneOf(_List_fromArray([
            $MaybeJustJames$yaml$Yaml$Parser$Util$singleQuotes,
            $MaybeJustJames$yaml$Yaml$Parser$Util$doubleQuotes
        ])), $MaybeJustJames$yaml$Yaml$Parser$Util$spaces)));
    };
    var $MaybeJustJames$yaml$Yaml$Parser$record = F2(function(indent, property) {
        var confirmed = function(value_) {
            return A2($elm$parser$Parser$keeper, $elm$parser$Parser$succeed(A2($elm$core$Basics$composeL, $MaybeJustJames$yaml$Yaml$Parser$Ast$Record_, $elm$core$Dict$fromList)), A2($elm$parser$Parser$loop, _List_fromArray([
                _Utils_Tuple2(property, value_)
            ]), $MaybeJustJames$yaml$Yaml$Parser$recordStep(indent)));
        };
        return A2($elm$parser$Parser$andThen, confirmed, $MaybeJustJames$yaml$Yaml$Parser$recordElementValue(indent));
    });
    var $MaybeJustJames$yaml$Yaml$Parser$recordElement = function(indent) {
        var property = $elm$parser$Parser$oneOf(_List_fromArray([
            $MaybeJustJames$yaml$Yaml$Parser$Util$singleQuotes,
            $MaybeJustJames$yaml$Yaml$Parser$Util$doubleQuotes,
            $elm$parser$Parser$getChompedString($elm$parser$Parser$chompWhile(A2($MaybeJustJames$yaml$Yaml$Parser$Util$neither, $MaybeJustJames$yaml$Yaml$Parser$Util$isColon, $MaybeJustJames$yaml$Yaml$Parser$Util$isNewLine)))
        ]));
        return A2($elm$parser$Parser$keeper, A2($elm$parser$Parser$keeper, $elm$parser$Parser$succeed($elm$core$Tuple$pair), A2($elm$parser$Parser$ignorer, A2($elm$parser$Parser$ignorer, property, $MaybeJustJames$yaml$Yaml$Parser$Util$spaces), $elm$parser$Parser$chompIf($MaybeJustJames$yaml$Yaml$Parser$Util$isColon))), $MaybeJustJames$yaml$Yaml$Parser$recordElementValue(indent));
    };
    var $MaybeJustJames$yaml$Yaml$Parser$recordElementValue = function(indent) {
        var elVal = function(indent_) {
            return $elm$parser$Parser$oneOf(_List_fromArray([
                $MaybeJustJames$yaml$Yaml$Parser$cyclic$listInline(),
                $MaybeJustJames$yaml$Yaml$Parser$cyclic$recordInline(),
                $MaybeJustJames$yaml$Yaml$Parser$list(indent_),
                A2($MaybeJustJames$yaml$Yaml$Parser$recordOrString, indent, indent_)
            ]));
        };
        return A2($MaybeJustJames$yaml$Yaml$Parser$Util$indented, indent, {
            ending: $elm$parser$Parser$succeed($MaybeJustJames$yaml$Yaml$Parser$Ast$Null_),
            exactly: $elm$parser$Parser$oneOf(_List_fromArray([
                $MaybeJustJames$yaml$Yaml$Parser$list(indent),
                $elm$parser$Parser$succeed($MaybeJustJames$yaml$Yaml$Parser$Ast$Null_)
            ])),
            larger: function(indent_) {
                return $elm$parser$Parser$oneOf(_List_fromArray([
                    $MaybeJustJames$yaml$Yaml$Parser$anchor(elVal),
                    $MaybeJustJames$yaml$Yaml$Parser$reference,
                    elVal(indent_)
                ]));
            },
            smaller: $elm$parser$Parser$succeed($MaybeJustJames$yaml$Yaml$Parser$Ast$Null_)
        });
    };
    var $MaybeJustJames$yaml$Yaml$Parser$recordInlineStep = function(elements) {
        return A2($elm$parser$Parser$andThen, $MaybeJustJames$yaml$Yaml$Parser$recordInlineNext(elements), A2($elm$parser$Parser$keeper, A2($elm$parser$Parser$ignorer, $elm$parser$Parser$succeed($elm$core$Basics$identity), $MaybeJustJames$yaml$Yaml$Parser$Util$whitespace), A2($elm$parser$Parser$ignorer, $MaybeJustJames$yaml$Yaml$Parser$cyclic$recordInlineValue(), $MaybeJustJames$yaml$Yaml$Parser$Util$whitespace)));
    };
    var $MaybeJustJames$yaml$Yaml$Parser$recordOrString = F2(function(indent, indent_) {
        var removeComment = function(string) {
            return A2($elm$core$Maybe$withDefault, '', $elm$core$List$head(A2($elm$core$String$split, '#', string)));
        };
        var addRemaining = F2(function(string, remaining) {
            return $MaybeJustJames$yaml$Yaml$Parser$Ast$fromString($MaybeJustJames$yaml$Yaml$Parser$Util$postProcessString(_Utils_ap(removeComment(string), remaining)));
        });
        var withString = function(string) {
            return $elm$parser$Parser$oneOf(_List_fromArray([
                A2($elm$parser$Parser$ignorer, $elm$parser$Parser$succeed($MaybeJustJames$yaml$Yaml$Parser$Ast$fromString(string)), $elm$parser$Parser$end),
                A2($MaybeJustJames$yaml$Yaml$Parser$recordProperty, indent_, string),
                A2($elm$parser$Parser$keeper, $elm$parser$Parser$succeed(addRemaining(string)), !indent ? $MaybeJustJames$yaml$Yaml$Parser$Util$remaining : $MaybeJustJames$yaml$Yaml$Parser$Util$multiline(indent))
            ]));
        };
        return $elm$parser$Parser$oneOf(_List_fromArray([
            $MaybeJustJames$yaml$Yaml$Parser$quotedString(indent_),
            A2($elm$parser$Parser$andThen, withString, $elm$parser$Parser$getChompedString(A2($elm$parser$Parser$ignorer, A2($elm$parser$Parser$ignorer, $elm$parser$Parser$succeed($elm$core$Basics$identity), $elm$parser$Parser$chompIf(A2($MaybeJustJames$yaml$Yaml$Parser$Util$neither, $MaybeJustJames$yaml$Yaml$Parser$Util$isColon, $MaybeJustJames$yaml$Yaml$Parser$Util$isNewLine))), $elm$parser$Parser$chompWhile(A2($MaybeJustJames$yaml$Yaml$Parser$Util$neither, $MaybeJustJames$yaml$Yaml$Parser$Util$isColon, $MaybeJustJames$yaml$Yaml$Parser$Util$isNewLine))))),
            A2($elm$parser$Parser$andThen, withString, $elm$parser$Parser$getChompedString(A2($elm$parser$Parser$ignorer, $elm$parser$Parser$succeed($elm$core$Basics$identity), $elm$parser$Parser$chompWhile($MaybeJustJames$yaml$Yaml$Parser$Util$isColon))))
        ]));
    });
    var $MaybeJustJames$yaml$Yaml$Parser$recordProperty = F2(function(indent, name) {
        return A2($elm$parser$Parser$andThen, $elm$core$Basics$identity, A2($elm$parser$Parser$ignorer, $elm$parser$Parser$succeed(A2($MaybeJustJames$yaml$Yaml$Parser$record, indent, name)), $elm$parser$Parser$oneOf(_List_fromArray([
            $elm$parser$Parser$token(': '),
            $elm$parser$Parser$token(':\n'),
            A2($elm$parser$Parser$ignorer, $elm$parser$Parser$backtrackable($elm$parser$Parser$token(':')), $elm$parser$Parser$end)
        ]))));
    });
    var $MaybeJustJames$yaml$Yaml$Parser$recordStep = F2(function(indent, values) {
        var next = function(value_) {
            return $elm$parser$Parser$Loop(A2($elm$core$List$cons, value_, values));
        };
        var finish = $elm$parser$Parser$Done($elm$core$List$reverse(values));
        return A2($MaybeJustJames$yaml$Yaml$Parser$Util$indented, indent, {
            ending: $elm$parser$Parser$succeed(finish),
            exactly: A2($elm$parser$Parser$keeper, $elm$parser$Parser$succeed(next), $MaybeJustJames$yaml$Yaml$Parser$recordElement(indent)),
            larger: function(_v0) {
                return $elm$parser$Parser$problem('I was looking for the next property but didn\'t find one.');
            },
            smaller: $elm$parser$Parser$succeed(finish)
        });
    });
    function $MaybeJustJames$yaml$Yaml$Parser$cyclic$recordInlineValue() {
        return A2($elm$parser$Parser$keeper, A2($elm$parser$Parser$keeper, $elm$parser$Parser$succeed($elm$core$Tuple$pair), A2($elm$parser$Parser$ignorer, $MaybeJustJames$yaml$Yaml$Parser$recordInlinePropertyName, $MaybeJustJames$yaml$Yaml$Parser$Util$whitespace)), $MaybeJustJames$yaml$Yaml$Parser$cyclic$recordInlinePropertyValue());
    }
    function $MaybeJustJames$yaml$Yaml$Parser$cyclic$recordInlinePropertyValue() {
        var propVal = $elm$parser$Parser$oneOf(_List_fromArray([
            $MaybeJustJames$yaml$Yaml$Parser$cyclic$listInline(),
            $MaybeJustJames$yaml$Yaml$Parser$cyclic$recordInline(),
            $MaybeJustJames$yaml$Yaml$Parser$recordInlineString
        ]));
        return $elm$parser$Parser$oneOf(_List_fromArray([
            $MaybeJustJames$yaml$Yaml$Parser$anchor($elm$core$Basics$always(propVal)),
            $MaybeJustJames$yaml$Yaml$Parser$reference,
            propVal
        ]));
    }
    function $MaybeJustJames$yaml$Yaml$Parser$cyclic$listInlineValue() {
        var inlineVal = $elm$parser$Parser$oneOf(_List_fromArray([
            $MaybeJustJames$yaml$Yaml$Parser$cyclic$listInline(),
            $MaybeJustJames$yaml$Yaml$Parser$cyclic$recordInline(),
            $MaybeJustJames$yaml$Yaml$Parser$quotedString(0),
            $MaybeJustJames$yaml$Yaml$Parser$listInlineString
        ]));
        return $elm$parser$Parser$oneOf(_List_fromArray([
            $MaybeJustJames$yaml$Yaml$Parser$anchor($elm$core$Basics$always(inlineVal)),
            $MaybeJustJames$yaml$Yaml$Parser$reference,
            inlineVal
        ]));
    }
    function $MaybeJustJames$yaml$Yaml$Parser$cyclic$listInline() {
        return A2($elm$parser$Parser$keeper, A2($elm$parser$Parser$ignorer, A2($elm$parser$Parser$ignorer, $elm$parser$Parser$succeed($MaybeJustJames$yaml$Yaml$Parser$Ast$List_), $elm$parser$Parser$chompIf($MaybeJustJames$yaml$Yaml$Parser$Util$isListStart)), $MaybeJustJames$yaml$Yaml$Parser$Util$whitespace), $MaybeJustJames$yaml$Yaml$Parser$cyclic$listInlineStepOne());
    }
    function $MaybeJustJames$yaml$Yaml$Parser$cyclic$listInlineStepOne() {
        return $elm$parser$Parser$oneOf(_List_fromArray([
            A2($elm$parser$Parser$ignorer, $elm$parser$Parser$succeed(_List_Nil), $elm$parser$Parser$chompIf($MaybeJustJames$yaml$Yaml$Parser$Util$isListEnd)),
            A2($elm$parser$Parser$keeper, $elm$parser$Parser$succeed($elm$core$Basics$identity), A2($elm$parser$Parser$loop, _List_Nil, $MaybeJustJames$yaml$Yaml$Parser$listInlineStep))
        ]));
    }
    function $MaybeJustJames$yaml$Yaml$Parser$cyclic$recordInline() {
        return A2($elm$parser$Parser$keeper, A2($elm$parser$Parser$ignorer, A2($elm$parser$Parser$ignorer, $elm$parser$Parser$succeed(A2($elm$core$Basics$composeL, $MaybeJustJames$yaml$Yaml$Parser$Ast$Record_, $elm$core$Dict$fromList)), $elm$parser$Parser$chompIf($MaybeJustJames$yaml$Yaml$Parser$Util$isRecordStart)), $MaybeJustJames$yaml$Yaml$Parser$Util$whitespace), $MaybeJustJames$yaml$Yaml$Parser$cyclic$recordInlineStepOne());
    }
    function $MaybeJustJames$yaml$Yaml$Parser$cyclic$recordInlineStepOne() {
        return $elm$parser$Parser$oneOf(_List_fromArray([
            A2($elm$parser$Parser$ignorer, $elm$parser$Parser$succeed(_List_Nil), $elm$parser$Parser$chompIf($MaybeJustJames$yaml$Yaml$Parser$Util$isRecordEnd)),
            A2($elm$parser$Parser$keeper, $elm$parser$Parser$succeed($elm$core$Basics$identity), A2($elm$parser$Parser$loop, _List_Nil, $MaybeJustJames$yaml$Yaml$Parser$recordInlineStep))
        ]));
    }
    try {
        var $MaybeJustJames$yaml$Yaml$Parser$recordInlineValue = $MaybeJustJames$yaml$Yaml$Parser$cyclic$recordInlineValue();
        $MaybeJustJames$yaml$Yaml$Parser$cyclic$recordInlineValue = function() {
            return $MaybeJustJames$yaml$Yaml$Parser$recordInlineValue;
        };
        var $MaybeJustJames$yaml$Yaml$Parser$recordInlinePropertyValue = $MaybeJustJames$yaml$Yaml$Parser$cyclic$recordInlinePropertyValue();
        $MaybeJustJames$yaml$Yaml$Parser$cyclic$recordInlinePropertyValue = function() {
            return $MaybeJustJames$yaml$Yaml$Parser$recordInlinePropertyValue;
        };
        var $MaybeJustJames$yaml$Yaml$Parser$listInlineValue = $MaybeJustJames$yaml$Yaml$Parser$cyclic$listInlineValue();
        $MaybeJustJames$yaml$Yaml$Parser$cyclic$listInlineValue = function() {
            return $MaybeJustJames$yaml$Yaml$Parser$listInlineValue;
        };
        var $MaybeJustJames$yaml$Yaml$Parser$listInline = $MaybeJustJames$yaml$Yaml$Parser$cyclic$listInline();
        $MaybeJustJames$yaml$Yaml$Parser$cyclic$listInline = function() {
            return $MaybeJustJames$yaml$Yaml$Parser$listInline;
        };
        var $MaybeJustJames$yaml$Yaml$Parser$listInlineStepOne = $MaybeJustJames$yaml$Yaml$Parser$cyclic$listInlineStepOne();
        $MaybeJustJames$yaml$Yaml$Parser$cyclic$listInlineStepOne = function() {
            return $MaybeJustJames$yaml$Yaml$Parser$listInlineStepOne;
        };
        var $MaybeJustJames$yaml$Yaml$Parser$recordInline = $MaybeJustJames$yaml$Yaml$Parser$cyclic$recordInline();
        $MaybeJustJames$yaml$Yaml$Parser$cyclic$recordInline = function() {
            return $MaybeJustJames$yaml$Yaml$Parser$recordInline;
        };
        var $MaybeJustJames$yaml$Yaml$Parser$recordInlineStepOne = $MaybeJustJames$yaml$Yaml$Parser$cyclic$recordInlineStepOne();
        $MaybeJustJames$yaml$Yaml$Parser$cyclic$recordInlineStepOne = function() {
            return $MaybeJustJames$yaml$Yaml$Parser$recordInlineStepOne;
        };
    } catch ($1) {
        throw 'Some top-level definitions from `Yaml.Parser` are causing infinite recursion:\n\n  ┌─────┐\n  │    list\n  │     ↓\n  │    listElement\n  │     ↓\n  │    listElementValue\n  │     ↓\n  │    recordInlineValue\n  │     ↓\n  │    recordInlinePropertyValue\n  │     ↓\n  │    listInlineValue\n  │     ↓\n  │    listInline\n  │     ↓\n  │    listInlineStepOne\n  │     ↓\n  │    listInlineStep\n  │     ↓\n  │    listStep\n  │     ↓\n  │    quotedString\n  │     ↓\n  │    record\n  │     ↓\n  │    recordElement\n  │     ↓\n  │    recordElementValue\n  │     ↓\n  │    recordInline\n  │     ↓\n  │    recordInlineStepOne\n  │     ↓\n  │    recordInlineStep\n  │     ↓\n  │    recordOrString\n  │     ↓\n  │    recordProperty\n  │     ↓\n  │    recordStep\n  └─────┘\n\nThese errors are very tricky, so read https://elm-lang.org/0.19.1/bad-recursion to learn how to fix it!';
    }
    var $MaybeJustJames$yaml$Yaml$Parser$value = $elm$parser$Parser$oneOf(_List_fromArray([
        $MaybeJustJames$yaml$Yaml$Parser$String$exceptions,
        $MaybeJustJames$yaml$Yaml$Parser$recordInline,
        $MaybeJustJames$yaml$Yaml$Parser$listInline,
        A2($elm$parser$Parser$andThen, $MaybeJustJames$yaml$Yaml$Parser$list, $elm$parser$Parser$getCol),
        A2($elm$parser$Parser$andThen, $MaybeJustJames$yaml$Yaml$Parser$recordOrString(0), $elm$parser$Parser$getCol)
    ]));
    var $MaybeJustJames$yaml$Yaml$Parser$parser = A2($elm$parser$Parser$keeper, A2($elm$parser$Parser$ignorer, A2($elm$parser$Parser$ignorer, $elm$parser$Parser$succeed($elm$core$Basics$identity), $MaybeJustJames$yaml$Yaml$Parser$Document$begins), $MaybeJustJames$yaml$Yaml$Parser$Util$whitespace), A2($elm$parser$Parser$ignorer, $MaybeJustJames$yaml$Yaml$Parser$value, $MaybeJustJames$yaml$Yaml$Parser$Document$ends));
    var $elm$parser$Parser$DeadEnd = F3(function(row, col, problem) {
        return {
            col: col,
            problem: problem,
            row: row
        };
    });
    var $elm$parser$Parser$problemToDeadEnd = function(p) {
        return A3($elm$parser$Parser$DeadEnd, p.row, p.col, p.problem);
    };
    var $elm$parser$Parser$Advanced$bagToList = F2(function(bag, list) {
        bagToList: while(true)switch(bag.$){
            case 'Empty':
                return list;
            case 'AddRight':
                var bag1 = bag.a;
                var x = bag.b;
                var $temp$bag = bag1, $temp$list = A2($elm$core$List$cons, x, list);
                bag = $temp$bag;
                list = $temp$list;
                continue bagToList;
            default:
                var bag1 = bag.a;
                var bag2 = bag.b;
                var $temp$bag = bag1, $temp$list = A2($elm$parser$Parser$Advanced$bagToList, bag2, list);
                bag = $temp$bag;
                list = $temp$list;
                continue bagToList;
        }
    });
    var $elm$parser$Parser$Advanced$run = F2(function(_v0, src) {
        var parse = _v0.a;
        var _v1 = parse({
            col: 1,
            context: _List_Nil,
            indent: 1,
            offset: 0,
            row: 1,
            src: src
        });
        if (_v1.$ === 'Good') {
            var value = _v1.b;
            return $elm$core$Result$Ok(value);
        } else {
            var bag = _v1.b;
            return $elm$core$Result$Err(A2($elm$parser$Parser$Advanced$bagToList, bag, _List_Nil));
        }
    });
    var $elm$parser$Parser$run = F2(function(parser, source) {
        var _v0 = A2($elm$parser$Parser$Advanced$run, parser, source);
        if (_v0.$ === 'Ok') {
            var a = _v0.a;
            return $elm$core$Result$Ok(a);
        } else {
            var problems = _v0.a;
            return $elm$core$Result$Err(A2($elm$core$List$map, $elm$parser$Parser$problemToDeadEnd, problems));
        }
    });
    var $MaybeJustJames$yaml$Yaml$Parser$fromString = A2($elm$core$Basics$composeR, $elm$parser$Parser$run($MaybeJustJames$yaml$Yaml$Parser$parser), A2($elm$core$Basics$composeR, $elm$core$Result$mapError($MaybeJustJames$yaml$Yaml$Parser$deadEndsToString), $elm$core$Result$map($MaybeJustJames$yaml$Yaml$Parser$deref)));
    var $MaybeJustJames$yaml$Yaml$Decode$fromValue = F2(function(_v0, v) {
        var decoder = _v0.a;
        return decoder(v);
    });
    var $MaybeJustJames$yaml$Yaml$Decode$fromString = F2(function(decoder, raw) {
        var _v0 = $MaybeJustJames$yaml$Yaml$Parser$fromString(raw);
        if (_v0.$ === 'Ok') {
            var v = _v0.a;
            return A2($MaybeJustJames$yaml$Yaml$Decode$fromValue, decoder, v);
        } else {
            var error = _v0.a;
            return $elm$core$Result$Err($MaybeJustJames$yaml$Yaml$Decode$Parsing(error));
        }
    });
    var $author$project$Domain$getCurrentView = F2(function(selectedView, views) {
        return A2($elm$core$Dict$get, selectedView, views);
    });
    var $elm$core$Maybe$andThen = F2(function(callback, maybeValue) {
        if (maybeValue.$ === 'Just') {
            var value = maybeValue.a;
            return callback(value);
        } else return $elm$core$Maybe$Nothing;
    });
    var $author$project$Domain$getElement = function(viewElementKey) {
        return $elm$core$Maybe$andThen($elm$core$Dict$get(viewElementKey));
    };
    var $author$project$Main$ReceiveElementPosition = function(a) {
        return {
            $: 'ReceiveElementPosition',
            a: a
        };
    };
    var $author$project$Main$elementId = 'main-graph';
    var $author$project$Main$getElementPosition = A2($elm$core$Task$attempt, $author$project$Main$ReceiveElementPosition, $elm$browser$Browser$Dom$getElement($author$project$Main$elementId));
    var $author$project$Main$getNavKey = function(model) {
        if (model.$ === 'Home') {
            var key = model.a;
            return key;
        } else {
            var key = model.a;
            return key;
        }
    };
    var $author$project$Domain$getPoint = function(index) {
        return A2($elm$core$Basics$composeR, $elm$core$Maybe$map($elm$core$List$drop(index)), $elm$core$Maybe$andThen($elm$core$List$head));
    };
    var $author$project$Domain$getRelationPoints = function(relation) {
        return A2($elm$core$Basics$composeR, $elm$core$Maybe$map(function($) {
            return $.relations;
        }), $elm$core$Maybe$andThen($elm$core$Dict$get(relation)));
    };
    var $author$project$Main$getSelectedElementKeysAndDeltas = function() {
        var extractViewElelementKeys = function(v) {
            var _v0 = v.key;
            if (_v0.$ === 'ElementKey') {
                var x = _v0.a;
                return $elm$core$Maybe$Just(_Utils_Tuple2(x, v.delta));
            } else return $elm$core$Maybe$Nothing;
        };
        return $elm$core$List$filterMap(extractViewElelementKeys);
    }();
    var $author$project$Main$getSelectedPointKeysAndDeltas = function() {
        var extractPointKeys = function(v) {
            var _v0 = v.key;
            if (_v0.$ === 'PointKey') {
                var x = _v0.a;
                return $elm$core$Maybe$Just(_Utils_Tuple2(x, v.delta));
            } else return $elm$core$Maybe$Nothing;
        };
        return $elm$core$List$filterMap(extractPointKeys);
    }();
    var $author$project$Domain$getViewElementsOfCurrentView = $elm$core$Maybe$map(function($) {
        return $.elements;
    });
    var $author$project$Domain$getViewRelationPoints = F2(function(_v0, view) {
        var viewElementKey = _v0.a;
        var relation = _v0.b;
        return A2($elm$core$Maybe$withDefault, _List_Nil, A2($elm$core$Maybe$map, $elm$core$List$map(function(p) {
            return A2($elm$core$Tuple$pair, p.x, p.y);
        }), A2($elm$core$Maybe$andThen, $elm$core$Dict$get(relation), A2($elm$core$Maybe$map, function($) {
            return $.relations;
        }, A2($elm$core$Dict$get, viewElementKey, view.elements)))));
    });
    var $author$project$Main$elementWithinBrush = F3(function(_v0, _v1, _v2) {
        var start = _v0.start;
        var end = _v0.end;
        var x = _v2.x;
        var y = _v2.y;
        var _v3 = start;
        var startX1 = _v3.a;
        var startY1 = _v3.b;
        var _v4 = end;
        var endX2 = _v4.a;
        var endY2 = _v4.b;
        return _Utils_cmp(x, A2($elm$core$Basics$min, startX1, endX2)) > 0 && _Utils_cmp(x, A2($elm$core$Basics$max, startX1, endX2)) < 0 && _Utils_cmp(y, A2($elm$core$Basics$min, startY1, endY2)) > 0 && _Utils_cmp(y, A2($elm$core$Basics$max, startY1, endY2)) < 0;
    });
    var $author$project$Domain$getElementAndItsKeys = A2($elm$core$Basics$composeR, $elm$core$Maybe$map($elm$core$Dict$toList), $elm$core$Maybe$withDefault(_List_Nil));
    var $elm$core$Dict$filter = F2(function(isGood, dict) {
        return A3($elm$core$Dict$foldl, F3(function(k, v, d) {
            return A2(isGood, k, v) ? A3($elm$core$Dict$insert, k, v, d) : d;
        }), $elm$core$Dict$empty, dict);
    });
    var $author$project$Domain$getViewElementKeysByCondition = function(condition) {
        return A2($elm$core$Basics$composeR, $elm$core$Maybe$map(A2($elm$core$Basics$composeR, $elm$core$Dict$filter(condition), $elm$core$Dict$keys)), $elm$core$Maybe$withDefault(_List_Nil));
    };
    var $author$project$Domain$getViewPointKeysByCondition = function(condition) {
        return A2($elm$core$Basics$composeR, $elm$core$List$indexedMap(F2(function(i, point) {
            return _Utils_Tuple2(i, point);
        })), $elm$core$List$filterMap(function(_v0) {
            var i = _v0.a;
            var point = _v0.b;
            return condition(point) ? $elm$core$Maybe$Just(i) : $elm$core$Maybe$Nothing;
        }));
    };
    var $author$project$Main$pointWithinBrush = F2(function(_v0, _v1) {
        var start = _v0.start;
        var end = _v0.end;
        var x = _v1.x;
        var y = _v1.y;
        var _v2 = start;
        var startX1 = _v2.a;
        var startY1 = _v2.b;
        var _v3 = end;
        var endX2 = _v3.a;
        var endY2 = _v3.b;
        return _Utils_cmp(x, A2($elm$core$Basics$min, startX1, endX2)) > 0 && _Utils_cmp(x, A2($elm$core$Basics$max, startX1, endX2)) < 0 && _Utils_cmp(y, A2($elm$core$Basics$min, startY1, endY2)) > 0 && _Utils_cmp(y, A2($elm$core$Basics$max, startY1, endY2)) < 0;
    });
    var $gampleman$elm_visualization$Zoom$asRecord = function(_v0) {
        var zoom = _v0.a;
        return {
            scale: zoom.transform.k,
            translate: {
                x: zoom.transform.x,
                y: zoom.transform.y
            }
        };
    };
    var $author$project$Main$shiftPosition = F3(function(zoom, _v0, _v1) {
        var elementX = _v0.a;
        var elementY = _v0.b;
        var clientX = _v1.a;
        var clientY = _v1.b;
        var zoomRecord = $gampleman$elm_visualization$Zoom$asRecord(zoom);
        return _Utils_Tuple2((clientX - zoomRecord.translate.x - elementX) / zoomRecord.scale, (clientY - zoomRecord.translate.y - elementY) / zoomRecord.scale);
    });
    var $author$project$Main$handleMouseMove = F3(function(xy, state, currentView) {
        var drag = state.drag;
        var brush = state.brush;
        if (brush.$ === 'Just') {
            var b = brush.a;
            var shiftedXY = A3($author$project$Main$shiftPosition, state.zoom, _Utils_Tuple2(0, 0), xy);
            var updatedBrush = _Utils_update(b, {
                end: shiftedXY
            });
            var pointKeysWithinBrush = A2($elm$core$List$map, function(i) {
                return A2($author$project$Main$SelectedItem, $author$project$Domain$PointKey(i), $elm$core$Maybe$Nothing);
            }, A2($elm$core$List$concatMap, function(_v3) {
                var k = _v3.a;
                var relation = _v3.b;
                var points = _v3.c;
                return A2($elm$core$List$map, function(pointIndex) {
                    return _Utils_Tuple3(k, relation, pointIndex);
                }, A2($author$project$Domain$getViewPointKeysByCondition, $author$project$Main$pointWithinBrush(updatedBrush), points));
            }, A2($elm$core$List$concatMap, function(_v1) {
                var k = _v1.a;
                var v = _v1.b;
                return A2($elm$core$List$map, function(_v2) {
                    var relation = _v2.a;
                    var points = _v2.b;
                    return _Utils_Tuple3(k, relation, points);
                }, $elm$core$Dict$toList(v.relations));
            }, $author$project$Domain$getElementAndItsKeys($author$project$Domain$getViewElementsOfCurrentView(currentView)))));
            var elementKeysWithinBrush = A2($elm$core$List$map, function(i) {
                return A2($author$project$Main$SelectedItem, $author$project$Domain$ElementKey(i), $elm$core$Maybe$Nothing);
            }, A2($author$project$Domain$getViewElementKeysByCondition, $author$project$Main$elementWithinBrush(updatedBrush), $author$project$Domain$getViewElementsOfCurrentView(currentView)));
            return $author$project$Main$Ready(_Utils_update(state, {
                brush: $elm$core$Maybe$Just(updatedBrush),
                selectedItems: _Utils_ap(elementKeysWithinBrush, pointKeysWithinBrush)
            }));
        } else {
            if (drag.$ === 'Just') {
                var start = drag.a.start;
                return $author$project$Main$Ready(_Utils_update(state, {
                    drag: $elm$core$Maybe$Just({
                        current: xy,
                        start: start
                    })
                }));
            } else return $author$project$Main$Ready(state);
        }
    });
    var $elm$json$Json$Encode$null = _Json_encodeNull;
    var $author$project$JsInterop$initMonacoResponse = _Platform_outgoingPort('initMonacoResponse', function($) {
        return $elm$json$Json$Encode$null;
    });
    var $author$project$Main$initMonaco = $author$project$JsInterop$initMonacoResponse(_Utils_Tuple0);
    var $gampleman$elm_visualization$Zoom$NoTouches = {
        $: 'NoTouches'
    };
    var $gampleman$elm_visualization$Zoom$Zoom = function(a) {
        return {
            $: 'Zoom',
            a: a
        };
    };
    var $gampleman$elm_visualization$Zoom$Transform$Transform = F3(function(k, x, y) {
        return {
            k: k,
            x: x,
            y: y
        };
    });
    var $gampleman$elm_visualization$Zoom$Transform$identity = A3($gampleman$elm_visualization$Zoom$Transform$Transform, 1, 0, 0);
    var $gampleman$elm_visualization$Zoom$infinity = 1 / 0;
    var $gampleman$elm_visualization$Zoom$init = function(_v0) {
        var width = _v0.width;
        var height = _v0.height;
        return $gampleman$elm_visualization$Zoom$Zoom({
            drag: $elm$core$Maybe$Nothing,
            extent: _Utils_Tuple2(_Utils_Tuple2(0, 0), _Utils_Tuple2(width, height)),
            gestureLastScale: 0,
            scaleExtent: _Utils_Tuple2(0, $gampleman$elm_visualization$Zoom$infinity),
            touchStarted: false,
            touches: $gampleman$elm_visualization$Zoom$NoTouches,
            transform: $gampleman$elm_visualization$Zoom$Transform$identity,
            transition: $elm$core$Maybe$Nothing,
            translateExtent: _Utils_Tuple2(_Utils_Tuple2(-$gampleman$elm_visualization$Zoom$infinity, -$gampleman$elm_visualization$Zoom$infinity), _Utils_Tuple2($gampleman$elm_visualization$Zoom$infinity, $gampleman$elm_visualization$Zoom$infinity))
        });
    };
    var $gampleman$elm_visualization$Zoom$scaleExtent = F3(function(mn, mx, _v0) {
        var zoom = _v0.a;
        return $gampleman$elm_visualization$Zoom$Zoom(_Utils_update(zoom, {
            scaleExtent: _Utils_Tuple2(mn, mx)
        }));
    });
    var $author$project$Main$initZoom = function(element) {
        return A3($gampleman$elm_visualization$Zoom$scaleExtent, 0.1, 2, $gampleman$elm_visualization$Zoom$init({
            height: element.height,
            width: element.width
        }));
    };
    var $elm$core$List$isEmpty = function(xs) {
        if (!xs.b) return true;
        else return false;
    };
    var $elm$core$Basics$isNaN = _Basics_isNaN;
    var $elm$browser$Browser$Navigation$load = _Browser_load;
    var $elm_community$undo_redo$UndoList$mapPresent = F2(function(f, _v0) {
        var past = _v0.past;
        var present = _v0.present;
        var future = _v0.future;
        return A3($elm_community$undo_redo$UndoList$UndoList, past, f(present), future);
    });
    var $elm$core$Basics$pow = _Basics_pow;
    var $elm_community$basics_extra$Basics$Extra$maxSafeInteger = A2($elm$core$Basics$pow, 2, 53) - 1;
    var $elm_community$undo_redo$UndoList$new = F2(function(event, _v0) {
        var past = _v0.past;
        var present = _v0.present;
        return A3($elm_community$undo_redo$UndoList$UndoList, A2($elm$core$List$cons, present, past), event, _List_Nil);
    });
    var $elm$browser$Browser$Navigation$pushUrl = _Browser_pushUrl;
    var $MaybeJustJames$yaml$Yaml$Decode$Decoder = function(a) {
        return {
            $: 'Decoder',
            a: a
        };
    };
    var $MaybeJustJames$yaml$Yaml$Decode$andThen = F2(function(next, decoder) {
        return $MaybeJustJames$yaml$Yaml$Decode$Decoder(function(v0) {
            var _v0 = A2($MaybeJustJames$yaml$Yaml$Decode$fromValue, decoder, v0);
            if (_v0.$ === 'Ok') {
                var a = _v0.a;
                return A2($MaybeJustJames$yaml$Yaml$Decode$fromValue, next(a), v0);
            } else {
                var err = _v0.a;
                return $elm$core$Result$Err(err);
            }
        });
    });
    var $MaybeJustJames$yaml$Yaml$Decode$Decoding = function(a) {
        return {
            $: 'Decoding',
            a: a
        };
    };
    var $MaybeJustJames$yaml$Yaml$Decode$find = F3(function(names, decoder, v0) {
        find: while(true){
            if (names.b) {
                var name = names.a;
                var rest = names.b;
                if (v0.$ === 'Record_') {
                    var properties = v0.a;
                    var _v2 = A2($elm$core$Dict$get, name, properties);
                    if (_v2.$ === 'Just') {
                        var v1 = _v2.a;
                        var $temp$names = rest, $temp$decoder = decoder, $temp$v0 = v1;
                        names = $temp$names;
                        decoder = $temp$decoder;
                        v0 = $temp$v0;
                        continue find;
                    } else return $elm$core$Result$Err($MaybeJustJames$yaml$Yaml$Decode$Decoding('Expected property: ' + name));
                } else return $elm$core$Result$Err($MaybeJustJames$yaml$Yaml$Decode$Decoding('Expected record'));
            } else return A2($MaybeJustJames$yaml$Yaml$Decode$fromValue, decoder, v0);
        }
    });
    var $MaybeJustJames$yaml$Yaml$Decode$field = F2(function(name, decoder) {
        return $MaybeJustJames$yaml$Yaml$Decode$Decoder(function(v) {
            return A3($MaybeJustJames$yaml$Yaml$Decode$find, _List_fromArray([
                name
            ]), decoder, v);
        });
    });
    var $author$project$Domain$Domain = F4(function(name, description, actors, rings) {
        return {
            actors: actors,
            description: description,
            name: name,
            rings: rings
        };
    });
    var $author$project$Domain$Actor = F3(function(name, description, relations) {
        return {
            description: description,
            name: name,
            relations: relations
        };
    });
    var $elm$core$String$fromFloat = _String_fromNumber;
    var $MaybeJustJames$yaml$Yaml$Parser$Ast$toString = function(value) {
        switch(value.$){
            case 'String_':
                var string = value.a;
                return '\"' + (string + '\"');
            case 'Float_':
                var _float = value.a;
                return $elm$core$String$fromFloat(_float) + ' (float)';
            case 'Int_':
                var _int = value.a;
                return $elm$core$String$fromInt(_int) + ' (int)';
            case 'List_':
                var list = value.a;
                return '[ ' + (A2($elm$core$String$join, ', ', A2($elm$core$List$map, $MaybeJustJames$yaml$Yaml$Parser$Ast$toString, list)) + ' ]');
            case 'Record_':
                var properties = value.a;
                return '{ ' + (A2($elm$core$String$join, ', ', A2($elm$core$List$map, $MaybeJustJames$yaml$Yaml$Parser$Ast$toStringProperty, $elm$core$Dict$toList(properties))) + ' }');
            case 'Bool_':
                if (value.a) return 'True (bool)';
                else return 'False (bool)';
            case 'Null_':
                return 'Null';
            case 'Anchor_':
                var name = value.a;
                var r_val = value.b;
                return '&' + (name + (' ' + $MaybeJustJames$yaml$Yaml$Parser$Ast$toString(r_val)));
            default:
                var name = value.a;
                return '*' + name;
        }
    };
    var $MaybeJustJames$yaml$Yaml$Parser$Ast$toStringProperty = function(_v0) {
        var name = _v0.a;
        var value = _v0.b;
        return name + (': ' + $MaybeJustJames$yaml$Yaml$Parser$Ast$toString(value));
    };
    var $MaybeJustJames$yaml$Yaml$Decode$decodeError = F2(function(expected, got) {
        return $elm$core$Result$Err($MaybeJustJames$yaml$Yaml$Decode$Decoding('Expected ' + (expected + (', got: ' + $MaybeJustJames$yaml$Yaml$Parser$Ast$toString(got)))));
    });
    var $MaybeJustJames$yaml$Yaml$Decode$singleResult = function() {
        var each = F2(function(v, r) {
            if (r.$ === 'Err') return r;
            else {
                var vs = r.a;
                if (v.$ === 'Ok') {
                    var vok = v.a;
                    return $elm$core$Result$Ok(A2($elm$core$List$cons, vok, vs));
                } else {
                    var err = v.a;
                    return $elm$core$Result$Err(err);
                }
            }
        });
        return A2($elm$core$Basics$composeR, A2($elm$core$List$foldl, each, $elm$core$Result$Ok(_List_Nil)), $elm$core$Result$map($elm$core$List$reverse));
    }();
    var $MaybeJustJames$yaml$Yaml$Decode$list = function(decoder) {
        return $MaybeJustJames$yaml$Yaml$Decode$Decoder(function(v) {
            switch(v.$){
                case 'List_':
                    var list_ = v.a;
                    return $MaybeJustJames$yaml$Yaml$Decode$singleResult(A2($elm$core$List$map, $MaybeJustJames$yaml$Yaml$Decode$fromValue(decoder), list_));
                case 'Null_':
                    return $elm$core$Result$Ok(_List_Nil);
                default:
                    return A2($MaybeJustJames$yaml$Yaml$Decode$decodeError, 'list', v);
            }
        });
    };
    var $MaybeJustJames$yaml$Yaml$Decode$map3 = F4(function(func, _v0, _v1, _v2) {
        var a = _v0.a;
        var b = _v1.a;
        var c = _v2.a;
        return $MaybeJustJames$yaml$Yaml$Decode$Decoder(function(v0) {
            var _v3 = a(v0);
            if (_v3.$ === 'Err') {
                var err1 = _v3.a;
                return $elm$core$Result$Err(err1);
            } else {
                var av = _v3.a;
                var _v4 = b(v0);
                if (_v4.$ === 'Err') {
                    var err2 = _v4.a;
                    return $elm$core$Result$Err(err2);
                } else {
                    var bv = _v4.a;
                    var _v5 = c(v0);
                    if (_v5.$ === 'Err') {
                        var err3 = _v5.a;
                        return $elm$core$Result$Err(err3);
                    } else {
                        var cv = _v5.a;
                        return $elm$core$Result$Ok(A3(func, av, bv, cv));
                    }
                }
            }
        });
    });
    var $MaybeJustJames$yaml$Yaml$Decode$fail = function(error) {
        return $MaybeJustJames$yaml$Yaml$Decode$Decoder(function(_v0) {
            return $elm$core$Result$Err($MaybeJustJames$yaml$Yaml$Decode$Decoding(error));
        });
    };
    var $MaybeJustJames$yaml$Yaml$Decode$succeed = function(v) {
        return $MaybeJustJames$yaml$Yaml$Decode$Decoder(function(_v0) {
            return $elm$core$Result$Ok(v);
        });
    };
    var $MaybeJustJames$yaml$Yaml$Decode$fromResult = function(result) {
        if (result.$ === 'Ok') {
            var val = result.a;
            return $MaybeJustJames$yaml$Yaml$Decode$succeed(val);
        } else {
            var err = result.a;
            return $MaybeJustJames$yaml$Yaml$Decode$fail(err);
        }
    };
    var $elm$core$List$tail = function(list) {
        if (list.b) {
            var x = list.a;
            var xs = list.b;
            return $elm$core$Maybe$Just(xs);
        } else return $elm$core$Maybe$Nothing;
    };
    var $author$project$DomainDecoder$getRelationFromString = function(value) {
        var splitted = A2($elm$core$String$split, $author$project$Domain$relationSplitter, value);
        var target = A2($elm$core$Maybe$andThen, $elm$core$List$head, $elm$core$List$tail(splitted));
        var description = $elm$core$List$head(splitted);
        var _v0 = _Utils_Tuple2(description, target);
        if (_v0.a.$ === 'Just' && _v0.b.$ === 'Just') {
            var d = _v0.a.a;
            var t = _v0.b.a;
            return $elm$core$Result$Ok(_Utils_Tuple2(t, d));
        } else return $elm$core$Result$Err('Relations should be formatted like \'purpose - target\'');
    };
    var $MaybeJustJames$yaml$Yaml$Decode$string = $MaybeJustJames$yaml$Yaml$Decode$Decoder(function(v) {
        switch(v.$){
            case 'String_':
                var string_ = v.a;
                return $elm$core$Result$Ok(string_);
            case 'Null_':
                return $elm$core$Result$Ok('');
            default:
                return A2($MaybeJustJames$yaml$Yaml$Decode$decodeError, 'string', v);
        }
    });
    var $author$project$DomainDecoder$relationDecoder = A2($MaybeJustJames$yaml$Yaml$Decode$andThen, A2($elm$core$Basics$composeR, $author$project$DomainDecoder$getRelationFromString, $MaybeJustJames$yaml$Yaml$Decode$fromResult), $MaybeJustJames$yaml$Yaml$Decode$string);
    var $author$project$DomainDecoder$basicDecoder = function(constructor) {
        return A4($MaybeJustJames$yaml$Yaml$Decode$map3, constructor, A2($MaybeJustJames$yaml$Yaml$Decode$field, 'name', $MaybeJustJames$yaml$Yaml$Decode$string), A2($MaybeJustJames$yaml$Yaml$Decode$field, 'description', $MaybeJustJames$yaml$Yaml$Decode$string), A2($MaybeJustJames$yaml$Yaml$Decode$field, 'relations', $MaybeJustJames$yaml$Yaml$Decode$list($author$project$DomainDecoder$relationDecoder)));
    };
    var $author$project$DomainDecoder$actorDecoder = $author$project$DomainDecoder$basicDecoder($author$project$Domain$Actor);
    var $MaybeJustJames$yaml$Yaml$Decode$dict = function(decoder) {
        return $MaybeJustJames$yaml$Yaml$Decode$Decoder(function(v) {
            if (v.$ === 'Record_') {
                var properties = v.a;
                return $elm$core$Result$Ok($elm$core$Dict$fromList(A2($elm$core$List$filterMap, function(_v2) {
                    var key = _v2.a;
                    var val = _v2.b;
                    if (val.$ === 'Ok') {
                        var val_ = val.a;
                        return $elm$core$Maybe$Just(_Utils_Tuple2(key, val_));
                    } else return $elm$core$Maybe$Nothing;
                }, A2($elm$core$List$map, function(_v1) {
                    var key = _v1.a;
                    var val = _v1.b;
                    return _Utils_Tuple2(key, A2($MaybeJustJames$yaml$Yaml$Decode$fromValue, decoder, val));
                }, $elm$core$Dict$toList(properties)))));
            } else return A2($MaybeJustJames$yaml$Yaml$Decode$decodeError, 'record', v);
        });
    };
    var $MaybeJustJames$yaml$Yaml$Decode$map4 = F5(function(func, _v0, _v1, _v2, _v3) {
        var a = _v0.a;
        var b = _v1.a;
        var c = _v2.a;
        var d = _v3.a;
        return $MaybeJustJames$yaml$Yaml$Decode$Decoder(function(v0) {
            var _v4 = a(v0);
            if (_v4.$ === 'Err') {
                var err1 = _v4.a;
                return $elm$core$Result$Err(err1);
            } else {
                var av = _v4.a;
                var _v5 = b(v0);
                if (_v5.$ === 'Err') {
                    var err2 = _v5.a;
                    return $elm$core$Result$Err(err2);
                } else {
                    var bv = _v5.a;
                    var _v6 = c(v0);
                    if (_v6.$ === 'Err') {
                        var err3 = _v6.a;
                        return $elm$core$Result$Err(err3);
                    } else {
                        var cv = _v6.a;
                        var _v7 = d(v0);
                        if (_v7.$ === 'Err') {
                            var err4 = _v7.a;
                            return $elm$core$Result$Err(err4);
                        } else {
                            var dv = _v7.a;
                            return $elm$core$Result$Ok(A4(func, av, bv, cv, dv));
                        }
                    }
                }
            }
        });
    });
    var $author$project$Domain$Ring = F4(function(name, description, relations, delivery) {
        return {
            delivery: delivery,
            description: description,
            name: name,
            relations: relations
        };
    });
    var $author$project$Domain$Delivery = F4(function(name, description, relations, blocks) {
        return {
            blocks: blocks,
            description: description,
            name: name,
            relations: relations
        };
    });
    var $author$project$Domain$Block = F3(function(name, description, relations) {
        return {
            description: description,
            name: name,
            relations: relations
        };
    });
    var $author$project$DomainDecoder$blockDecoder = $author$project$DomainDecoder$basicDecoder($author$project$Domain$Block);
    var $author$project$DomainDecoder$deliveryDecoder = A5($MaybeJustJames$yaml$Yaml$Decode$map4, $author$project$Domain$Delivery, A2($MaybeJustJames$yaml$Yaml$Decode$field, 'name', $MaybeJustJames$yaml$Yaml$Decode$string), A2($MaybeJustJames$yaml$Yaml$Decode$field, 'description', $MaybeJustJames$yaml$Yaml$Decode$string), A2($MaybeJustJames$yaml$Yaml$Decode$field, 'relations', $MaybeJustJames$yaml$Yaml$Decode$list($author$project$DomainDecoder$relationDecoder)), A2($MaybeJustJames$yaml$Yaml$Decode$field, 'blocks', $MaybeJustJames$yaml$Yaml$Decode$dict($author$project$DomainDecoder$blockDecoder)));
    var $author$project$DomainDecoder$ringDecoder = A5($MaybeJustJames$yaml$Yaml$Decode$map4, $author$project$Domain$Ring, A2($MaybeJustJames$yaml$Yaml$Decode$field, 'name', $MaybeJustJames$yaml$Yaml$Decode$string), A2($MaybeJustJames$yaml$Yaml$Decode$field, 'description', $MaybeJustJames$yaml$Yaml$Decode$string), A2($MaybeJustJames$yaml$Yaml$Decode$field, 'relations', $MaybeJustJames$yaml$Yaml$Decode$list($author$project$DomainDecoder$relationDecoder)), A2($MaybeJustJames$yaml$Yaml$Decode$field, 'deliveries', $MaybeJustJames$yaml$Yaml$Decode$dict($author$project$DomainDecoder$deliveryDecoder)));
    var $author$project$DomainDecoder$internalDomainDecoder = A5($MaybeJustJames$yaml$Yaml$Decode$map4, $author$project$Domain$Domain, A2($MaybeJustJames$yaml$Yaml$Decode$field, 'name', $MaybeJustJames$yaml$Yaml$Decode$string), A2($MaybeJustJames$yaml$Yaml$Decode$field, 'description', $MaybeJustJames$yaml$Yaml$Decode$string), A2($MaybeJustJames$yaml$Yaml$Decode$field, 'actors', $MaybeJustJames$yaml$Yaml$Decode$dict($author$project$DomainDecoder$actorDecoder)), A2($MaybeJustJames$yaml$Yaml$Decode$field, 'rings', $MaybeJustJames$yaml$Yaml$Decode$dict($author$project$DomainDecoder$ringDecoder)));
    var $author$project$DomainDecoder$domainDecoder = A2($MaybeJustJames$yaml$Yaml$Decode$field, 'domain', $author$project$DomainDecoder$internalDomainDecoder);
    var $MaybeJustJames$yaml$Yaml$Decode$map2 = F3(function(func, _v0, _v1) {
        var a = _v0.a;
        var b = _v1.a;
        return $MaybeJustJames$yaml$Yaml$Decode$Decoder(function(v0) {
            var _v2 = a(v0);
            if (_v2.$ === 'Err') {
                var err1 = _v2.a;
                return $elm$core$Result$Err(err1);
            } else {
                var av = _v2.a;
                var _v3 = b(v0);
                if (_v3.$ === 'Err') {
                    var err2 = _v3.a;
                    return $elm$core$Result$Err(err2);
                } else {
                    var bv = _v3.a;
                    return $elm$core$Result$Ok(A2(func, av, bv));
                }
            }
        });
    });
    var $author$project$Validation$addDelimeterIfNonEmpty = F2(function(delimeter, current) {
        return $elm$core$String$isEmpty(current) ? current : _Utils_ap(current, delimeter);
    });
    var $author$project$Validation$addComma = $author$project$Validation$addDelimeterIfNonEmpty(',');
    var $author$project$Validation$addPrefixIfNotEmpty = F2(function(prefix, current) {
        return $elm$core$String$isEmpty(current) ? current : _Utils_ap(prefix, current);
    });
    var $author$project$Validation$duplicates = function(list) {
        var internalDuplicates = F2(function(elem, _v0) {
            var unique = _v0.a;
            var dup = _v0.b;
            return A2($elm$core$List$member, elem, unique) ? _Utils_Tuple2(unique, A2($elm$core$List$cons, elem, dup)) : _Utils_Tuple2(A2($elm$core$List$cons, elem, unique), dup);
        });
        return A3($elm$core$List$foldr, internalDuplicates, _Utils_Tuple2(_List_Nil, _List_Nil), list).b;
    };
    var $elm$core$List$filter = F2(function(isGood, list) {
        return A3($elm$core$List$foldr, F2(function(x, xs) {
            return isGood(x) ? A2($elm$core$List$cons, x, xs) : xs;
        }), _List_Nil, list);
    });
    var $elm$core$Dict$map = F2(function(func, dict) {
        if (dict.$ === 'RBEmpty_elm_builtin') return $elm$core$Dict$RBEmpty_elm_builtin;
        else {
            var color = dict.a;
            var key = dict.b;
            var value = dict.c;
            var left = dict.d;
            var right = dict.e;
            return A5($elm$core$Dict$RBNode_elm_builtin, color, key, A2(func, key, value), A2($elm$core$Dict$map, func, left), A2($elm$core$Dict$map, func, right));
        }
    });
    var $author$project$Domain$extractKeyAndName = A2($elm$core$Basics$composeR, $elm$core$Dict$map(F2(function(k, v) {
        return _Utils_Tuple2(k, v.name);
    })), $elm$core$Dict$values);
    var $author$project$Domain$getElementsKeysAndNames = function(domain) {
        return _Utils_ap($author$project$Domain$extractKeyAndName(domain.actors), _Utils_ap($author$project$Domain$extractKeyAndName(domain.rings), _Utils_ap(A2($elm$core$List$concatMap, $author$project$Domain$extractKeyAndName, A2($elm$core$List$map, function($) {
            return $.delivery;
        }, $elm$core$Dict$values(domain.rings))), A2($elm$core$List$concatMap, $author$project$Domain$extractKeyAndName, A2($elm$core$List$map, function($) {
            return $.blocks;
        }, A2($elm$core$List$concatMap, $elm$core$Dict$values, A2($elm$core$List$map, function($) {
            return $.delivery;
        }, $elm$core$Dict$values(domain.rings))))))));
    };
    var $author$project$Validation$getRelations = function(domain) {
        return _Utils_ap($elm$core$List$concat(A2($elm$core$List$map, function(_v0) {
            var k = _v0.a;
            var actor = _v0.b;
            return A2($elm$core$List$map, function(x) {
                return _Utils_Tuple2(k, x);
            }, actor.relations);
        }, $elm$core$Dict$toList(domain.actors))), _Utils_ap($elm$core$List$concat(A2($elm$core$List$map, function(_v1) {
            var k = _v1.a;
            var ring = _v1.b;
            return A2($elm$core$List$map, function(x) {
                return _Utils_Tuple2(k, x);
            }, ring.relations);
        }, $elm$core$Dict$toList(domain.rings))), _Utils_ap($elm$core$List$concat(A2($elm$core$List$map, function(_v2) {
            var k = _v2.a;
            var delivery = _v2.b;
            return A2($elm$core$List$map, function(x) {
                return _Utils_Tuple2(k, x);
            }, delivery.relations);
        }, A2($elm$core$List$concatMap, $elm$core$Dict$toList, A2($elm$core$List$map, function($) {
            return $.delivery;
        }, $elm$core$Dict$values(domain.rings))))), $elm$core$List$concat(A2($elm$core$List$map, function(_v3) {
            var k = _v3.a;
            var block = _v3.b;
            return A2($elm$core$List$map, function(x) {
                return _Utils_Tuple2(k, x);
            }, block.relations);
        }, A2($elm$core$List$concatMap, $elm$core$Dict$toList, A2($elm$core$List$map, function($) {
            return $.blocks;
        }, A2($elm$core$List$concatMap, $elm$core$Dict$values, A2($elm$core$List$map, function($) {
            return $.delivery;
        }, $elm$core$Dict$values(domain.rings))))))))));
    };
    var $author$project$Validation$validateDomain = function(domain) {
        var relations = A2($elm$core$List$map, $elm$core$Tuple$second, $author$project$Validation$getRelations(domain));
        var elementKeysAndNames = $author$project$Domain$getElementsKeysAndNames(domain);
        var emptyNames = A2($author$project$Validation$addPrefixIfNotEmpty, 'Elements with empty names:', A2($elm$core$String$join, ',', A2($elm$core$List$filterMap, function(_v0) {
            var k = _v0.a;
            var name = _v0.b;
            return $elm$core$String$isEmpty(name) ? $elm$core$Maybe$Just(k) : $elm$core$Maybe$Nothing;
        }, elementKeysAndNames)));
        var elementKeys = A2($elm$core$List$map, $elm$core$Tuple$first, elementKeysAndNames);
        var nonExistingTarget = function() {
            var nonExistingTargetInRelation = F2(function(currentRelation, result) {
                return A2($elm$core$List$member, currentRelation.a, elementKeys) ? result : _Utils_ap($author$project$Validation$addComma(result), $author$project$Domain$getStringFromRelation(currentRelation));
            });
            return A2($author$project$Validation$addPrefixIfNotEmpty, 'Not existing targets:', A3($elm$core$List$foldl, nonExistingTargetInRelation, '', relations));
        }();
        var duplicatedElements = A2($author$project$Validation$addPrefixIfNotEmpty, 'Duplicated element keys:', A2($elm$core$String$join, ',', $author$project$Validation$duplicates(elementKeys)));
        var finalResult = A2($elm$core$String$join, ';', A2($elm$core$List$filter, A2($elm$core$Basics$composeR, $elm$core$String$isEmpty, $elm$core$Basics$not), _List_fromArray([
            emptyNames,
            nonExistingTarget,
            duplicatedElements
        ])));
        return $elm$core$String$isEmpty(finalResult) ? $elm$core$Result$Ok(domain) : $elm$core$Result$Err(finalResult);
    };
    var $elm$core$Set$Set_elm_builtin = function(a) {
        return {
            $: 'Set_elm_builtin',
            a: a
        };
    };
    var $elm$core$Dict$diff = F2(function(t1, t2) {
        return A3($elm$core$Dict$foldl, F3(function(k, v, t) {
            return A2($elm$core$Dict$remove, k, t);
        }), t1, t2);
    });
    var $elm$core$Set$diff = F2(function(_v0, _v1) {
        var dict1 = _v0.a;
        var dict2 = _v1.a;
        return $elm$core$Set$Set_elm_builtin(A2($elm$core$Dict$diff, dict1, dict2));
    });
    var $elm$core$Set$foldl = F3(function(func, initialState, _v0) {
        var dict = _v0.a;
        return A3($elm$core$Dict$foldl, F3(function(key, _v1, state) {
            return A2(func, key, state);
        }), initialState, dict);
    });
    var $elm$core$Set$empty = $elm$core$Set$Set_elm_builtin($elm$core$Dict$empty);
    var $elm$core$Set$insert = F2(function(key, _v0) {
        var dict = _v0.a;
        return $elm$core$Set$Set_elm_builtin(A3($elm$core$Dict$insert, key, _Utils_Tuple0, dict));
    });
    var $elm$core$Set$fromList = function(list) {
        return A3($elm$core$List$foldl, $elm$core$Set$insert, $elm$core$Set$empty, list);
    };
    var $author$project$Validation$getUniqueElementsKeys = A2($elm$core$Basics$composeR, $author$project$Domain$getElementsKeysAndNames, A2($elm$core$Basics$composeR, $elm$core$List$map($elm$core$Tuple$first), $elm$core$Set$fromList));
    var $author$project$Validation$getUniqueRelations = A2($elm$core$Basics$composeR, $author$project$Validation$getRelations, $elm$core$Set$fromList);
    var $author$project$Validation$getViewElementKeys = function(view) {
        return $elm$core$Set$fromList($elm$core$Dict$keys(view.elements));
    };
    var $author$project$Validation$getViewRelations = function(view) {
        return $elm$core$Set$fromList($elm$core$List$concat(A2($elm$core$List$map, function(_v0) {
            var k = _v0.a;
            var element = _v0.b;
            return A2($elm$core$List$map, function(x) {
                return _Utils_Tuple2(k, x);
            }, $elm$core$Dict$keys(element.relations));
        }, $elm$core$Dict$toList(view.elements))));
    };
    var $author$project$Validation$validateViews = function(_v0) {
        var domain = _v0.a;
        var views = _v0.b;
        var domainRelations = $author$project$Validation$getUniqueRelations(domain);
        var domainElementNames = $author$project$Validation$getUniqueElementsKeys(domain);
        var convertRelationsToString = A2($elm$core$Set$foldl, F2(function(_v1, z) {
            var source = _v1.a;
            var relation = _v1.b;
            var relationString = $author$project$Domain$getStringFromRelation(relation);
            return A2($author$project$Validation$addDelimeterIfNonEmpty, ',', z) + (source + (' - ' + relationString));
        }), '');
        var convertElementsToString = A2($elm$core$Set$foldl, F2(function(item, z) {
            return _Utils_ap($author$project$Validation$addComma(z), item);
        }), '');
        var validateResult = A3($elm$core$Dict$foldl, F3(function(k, v, b) {
            var viewRelations = $author$project$Validation$getViewRelations(v);
            var viewElementNames = $author$project$Validation$getViewElementKeys(v);
            var relationErrors = A2($author$project$Validation$addPrefixIfNotEmpty, 'Not existing relation in domain:', convertRelationsToString(A2($elm$core$Set$diff, viewRelations, domainRelations)));
            var elementsErrors = A2($author$project$Validation$addPrefixIfNotEmpty, 'Not existing element in domain:', convertElementsToString(A2($elm$core$Set$diff, viewElementNames, domainElementNames)));
            var finalResult = A2($author$project$Validation$addPrefixIfNotEmpty, k + ':', A2($elm$core$String$join, ';', A2($elm$core$List$filter, A2($elm$core$Basics$composeR, $elm$core$String$isEmpty, $elm$core$Basics$not), _List_fromArray([
                elementsErrors,
                relationErrors
            ]))));
            return _Utils_ap(b, finalResult);
        }), '', views);
        return $elm$core$String$isEmpty(validateResult) ? $elm$core$Result$Ok(_Utils_Tuple2(domain, views)) : $elm$core$Result$Err(validateResult);
    };
    var $author$project$Domain$View = function(elements) {
        return {
            elements: elements
        };
    };
    var $MaybeJustJames$yaml$Yaml$Decode$map = F2(function(func, _v0) {
        var a = _v0.a;
        return $MaybeJustJames$yaml$Yaml$Decode$Decoder(function(v0) {
            var _v1 = a(v0);
            if (_v1.$ === 'Err') {
                var err = _v1.a;
                return $elm$core$Result$Err(err);
            } else {
                var av = _v1.a;
                return $elm$core$Result$Ok(func(av));
            }
        });
    });
    var $author$project$Domain$ViewElement = F3(function(x, y, relations) {
        return {
            relations: relations,
            x: x,
            y: y
        };
    });
    var $MaybeJustJames$yaml$Yaml$Decode$float = $MaybeJustJames$yaml$Yaml$Decode$Decoder(function(v) {
        switch(v.$){
            case 'Float_':
                var float_ = v.a;
                return $elm$core$Result$Ok(float_);
            case 'Int_':
                var int_ = v.a;
                return $elm$core$Result$Ok(int_);
            default:
                return A2($MaybeJustJames$yaml$Yaml$Decode$decodeError, 'float', v);
        }
    });
    var $author$project$DomainDecoder$convertDictKeys = function(dict) {
        return A3($elm$core$Dict$foldl, F3(function(k, v, newD) {
            var _v0 = $author$project$DomainDecoder$getRelationFromString(k);
            if (_v0.$ === 'Ok') {
                var relation = _v0.a;
                return A3($elm$core$Dict$insert, relation, v, newD);
            } else return newD;
        }), $elm$core$Dict$empty, dict);
    };
    var $author$project$DomainDecoder$mapViewRelationDecoder = $MaybeJustJames$yaml$Yaml$Decode$map($author$project$DomainDecoder$convertDictKeys);
    var $MaybeJustJames$yaml$Yaml$Decode$maybe = function(decoder) {
        return $MaybeJustJames$yaml$Yaml$Decode$Decoder(function(v) {
            var _v0 = A2($MaybeJustJames$yaml$Yaml$Decode$fromValue, decoder, v);
            if (_v0.$ === 'Ok') {
                var a = _v0.a;
                return $elm$core$Result$Ok($elm$core$Maybe$Just(a));
            } else return $elm$core$Result$Ok($elm$core$Maybe$Nothing);
        });
    };
    var $author$project$DomainDecoder$viewRelationPointDecoder = A3($MaybeJustJames$yaml$Yaml$Decode$map2, $author$project$Domain$ViewRelationPoint, A2($MaybeJustJames$yaml$Yaml$Decode$field, 'x', $MaybeJustJames$yaml$Yaml$Decode$float), A2($MaybeJustJames$yaml$Yaml$Decode$field, 'y', $MaybeJustJames$yaml$Yaml$Decode$float));
    var $author$project$DomainDecoder$viewElementDecoder = A4($MaybeJustJames$yaml$Yaml$Decode$map3, $author$project$Domain$ViewElement, A2($MaybeJustJames$yaml$Yaml$Decode$field, 'x', $MaybeJustJames$yaml$Yaml$Decode$float), A2($MaybeJustJames$yaml$Yaml$Decode$field, 'y', $MaybeJustJames$yaml$Yaml$Decode$float), A2($MaybeJustJames$yaml$Yaml$Decode$map, $elm$core$Maybe$withDefault($elm$core$Dict$empty), $MaybeJustJames$yaml$Yaml$Decode$maybe(A2($MaybeJustJames$yaml$Yaml$Decode$field, 'relations', $author$project$DomainDecoder$mapViewRelationDecoder($MaybeJustJames$yaml$Yaml$Decode$dict($MaybeJustJames$yaml$Yaml$Decode$list($author$project$DomainDecoder$viewRelationPointDecoder)))))));
    var $author$project$DomainDecoder$viewDecoder = A2($MaybeJustJames$yaml$Yaml$Decode$map, $author$project$Domain$View, A2($MaybeJustJames$yaml$Yaml$Decode$field, 'elements', $MaybeJustJames$yaml$Yaml$Decode$dict($author$project$DomainDecoder$viewElementDecoder)));
    var $author$project$DomainDecoder$internalViewsDecoder = $MaybeJustJames$yaml$Yaml$Decode$dict($author$project$DomainDecoder$viewDecoder);
    var $author$project$DomainDecoder$viewsDecoder = A2($MaybeJustJames$yaml$Yaml$Decode$field, 'views', $author$project$DomainDecoder$internalViewsDecoder);
    var $author$project$DomainDecoder$rdbDecoder = A2($MaybeJustJames$yaml$Yaml$Decode$andThen, A2($elm$core$Basics$composeR, $author$project$Validation$validateViews, $MaybeJustJames$yaml$Yaml$Decode$fromResult), A3($MaybeJustJames$yaml$Yaml$Decode$map2, $elm$core$Tuple$pair, A2($MaybeJustJames$yaml$Yaml$Decode$andThen, A2($elm$core$Basics$composeR, $author$project$Validation$validateDomain, $MaybeJustJames$yaml$Yaml$Decode$fromResult), $author$project$DomainDecoder$domainDecoder), $author$project$DomainDecoder$viewsDecoder));
    var $elm_community$undo_redo$UndoList$redo = function(_v0) {
        var past = _v0.past;
        var present = _v0.present;
        var future = _v0.future;
        if (!future.b) return A3($elm_community$undo_redo$UndoList$UndoList, past, present, future);
        else {
            var x = future.a;
            var xs = future.b;
            return A3($elm_community$undo_redo$UndoList$UndoList, A2($elm$core$List$cons, present, past), x, xs);
        }
    };
    var $author$project$JsInterop$removePoint = _Platform_outgoingPort('removePoint', $elm$core$Basics$identity);
    var $elm$core$List$singleton = function(value) {
        return _List_fromArray([
            value
        ]);
    };
    var $elm$core$List$takeReverse = F3(function(n, list, kept) {
        takeReverse: while(true){
            if (n <= 0) return kept;
            else {
                if (!list.b) return kept;
                else {
                    var x = list.a;
                    var xs = list.b;
                    var $temp$n = n - 1, $temp$list = xs, $temp$kept = A2($elm$core$List$cons, x, kept);
                    n = $temp$n;
                    list = $temp$list;
                    kept = $temp$kept;
                    continue takeReverse;
                }
            }
        }
    });
    var $elm$core$List$takeTailRec = F2(function(n, list) {
        return $elm$core$List$reverse(A3($elm$core$List$takeReverse, n, list, _List_Nil));
    });
    var $elm$core$List$takeFast = F3(function(ctr, n, list) {
        if (n <= 0) return _List_Nil;
        else {
            var _v0 = _Utils_Tuple2(n, list);
            _v0$1: while(true){
                _v0$5: while(true){
                    if (!_v0.b.b) return list;
                    else if (_v0.b.b.b) switch(_v0.a){
                        case 1:
                            break _v0$1;
                        case 2:
                            var _v2 = _v0.b;
                            var x = _v2.a;
                            var _v3 = _v2.b;
                            var y = _v3.a;
                            return _List_fromArray([
                                x,
                                y
                            ]);
                        case 3:
                            if (_v0.b.b.b.b) {
                                var _v4 = _v0.b;
                                var x = _v4.a;
                                var _v5 = _v4.b;
                                var y = _v5.a;
                                var _v6 = _v5.b;
                                var z = _v6.a;
                                return _List_fromArray([
                                    x,
                                    y,
                                    z
                                ]);
                            } else break _v0$5;
                        default:
                            if (_v0.b.b.b.b && _v0.b.b.b.b.b) {
                                var _v7 = _v0.b;
                                var x = _v7.a;
                                var _v8 = _v7.b;
                                var y = _v8.a;
                                var _v9 = _v8.b;
                                var z = _v9.a;
                                var _v10 = _v9.b;
                                var w = _v10.a;
                                var tl = _v10.b;
                                return ctr > 1000 ? A2($elm$core$List$cons, x, A2($elm$core$List$cons, y, A2($elm$core$List$cons, z, A2($elm$core$List$cons, w, A2($elm$core$List$takeTailRec, n - 4, tl))))) : A2($elm$core$List$cons, x, A2($elm$core$List$cons, y, A2($elm$core$List$cons, z, A2($elm$core$List$cons, w, A3($elm$core$List$takeFast, ctr + 1, n - 4, tl)))));
                            } else break _v0$5;
                    }
                    else {
                        if (_v0.a === 1) break _v0$1;
                        else break _v0$5;
                    }
                }
                return list;
            }
            var _v1 = _v0.b;
            var x = _v1.a;
            return _List_fromArray([
                x
            ]);
        }
    });
    var $elm$core$List$take = F2(function(n, list) {
        return A3($elm$core$List$takeFast, 0, n, list);
    });
    var $elm$url$Url$addPort = F2(function(maybePort, starter) {
        if (maybePort.$ === 'Nothing') return starter;
        else {
            var port_ = maybePort.a;
            return starter + (':' + $elm$core$String$fromInt(port_));
        }
    });
    var $elm$url$Url$addPrefixed = F3(function(prefix, maybeSegment, starter) {
        if (maybeSegment.$ === 'Nothing') return starter;
        else {
            var segment = maybeSegment.a;
            return _Utils_ap(starter, _Utils_ap(prefix, segment));
        }
    });
    var $elm$url$Url$toString = function(url) {
        var http = function() {
            var _v0 = url.protocol;
            if (_v0.$ === 'Http') return 'http://';
            else return 'https://';
        }();
        return A3($elm$url$Url$addPrefixed, '#', url.fragment, A3($elm$url$Url$addPrefixed, '?', url.query, _Utils_ap(A2($elm$url$Url$addPort, url.port_, _Utils_ap(http, url.host)), url.path)));
    };
    var $author$project$Main$trimList = function(count) {
        return A2($elm$core$Basics$composeR, $elm$core$List$drop(count), A2($elm$core$Basics$composeR, $elm$core$List$reverse, A2($elm$core$Basics$composeR, $elm$core$List$drop(count), $elm$core$List$reverse)));
    };
    var $elm_community$undo_redo$UndoList$undo = function(_v0) {
        var past = _v0.past;
        var present = _v0.present;
        var future = _v0.future;
        if (!past.b) return A3($elm_community$undo_redo$UndoList$UndoList, past, present, future);
        else {
            var x = past.a;
            var xs = past.b;
            return A3($elm_community$undo_redo$UndoList$UndoList, xs, x, A2($elm$core$List$cons, present, future));
        }
    };
    var $whale9490$elm_split_pane$SplitPane$UpdateConfig = function(a) {
        return {
            $: 'UpdateConfig',
            a: a
        };
    };
    var $whale9490$elm_split_pane$SplitPane$createUpdateConfig = function(config) {
        return $whale9490$elm_split_pane$SplitPane$UpdateConfig(config);
    };
    var $whale9490$elm_split_pane$SplitPane$Px = function(a) {
        return {
            $: 'Px',
            a: a
        };
    };
    var $whale9490$elm_split_pane$Bound$updateValue = F2(function(f, _v0) {
        var value = _v0.a;
        var bound = _v0.b;
        return _Utils_Tuple2(A2($whale9490$elm_split_pane$Bound$boundTo, bound, f(value)), bound);
    });
    var $whale9490$elm_split_pane$SplitPane$resize = F5(function(ori, splitterPosition, step, paneWidth, paneHeight) {
        if (ori.$ === 'Horizontal') {
            if (splitterPosition.$ === 'Px') {
                var p = splitterPosition.a;
                return $whale9490$elm_split_pane$SplitPane$Px(A2($whale9490$elm_split_pane$Bound$updateValue, function(v) {
                    return v + step.x;
                }, p));
            } else {
                var p = splitterPosition.a;
                return $whale9490$elm_split_pane$SplitPane$Percentage(A2($whale9490$elm_split_pane$Bound$updateValue, function(v) {
                    return v + step.x / paneWidth;
                }, p));
            }
        } else if (splitterPosition.$ === 'Px') {
            var p = splitterPosition.a;
            return $whale9490$elm_split_pane$SplitPane$Px(A2($whale9490$elm_split_pane$Bound$updateValue, function(v) {
                return v + step.y;
            }, p));
        } else {
            var p = splitterPosition.a;
            return $whale9490$elm_split_pane$SplitPane$Percentage(A2($whale9490$elm_split_pane$Bound$updateValue, function(v) {
                return v + step.y / paneHeight;
            }, p));
        }
    });
    var $whale9490$elm_split_pane$SplitPane$customUpdate = F3(function(_v0, msg, _v1) {
        var updateConfig = _v0.a;
        var state = _v1.a;
        var _v2 = _Utils_Tuple2(state.dragState, msg);
        _v2$3: while(true){
            if (_v2.a.$ === 'Draggable') {
                if (_v2.a.a.$ === 'Nothing') {
                    if (_v2.b.$ === 'SplitterClick') {
                        var _v3 = _v2.a.a;
                        var pos = _v2.b.a;
                        return _Utils_Tuple2($whale9490$elm_split_pane$SplitPane$State(_Utils_update(state, {
                            dragState: $whale9490$elm_split_pane$SplitPane$Draggable($elm$core$Maybe$Just({
                                anchor: {
                                    x: A2($elm$core$Maybe$withDefault, 0, pos.x),
                                    y: A2($elm$core$Maybe$withDefault, 0, pos.y)
                                },
                                paneInfo: {
                                    height: pos.parentHeight,
                                    width: pos.parentWidth
                                }
                            }))
                        })), updateConfig.onResizeStarted);
                    } else break _v2$3;
                } else switch(_v2.b.$){
                    case 'SplitterLeftAlone':
                        return _Utils_Tuple2($whale9490$elm_split_pane$SplitPane$State(_Utils_update(state, {
                            dragState: $whale9490$elm_split_pane$SplitPane$Draggable($elm$core$Maybe$Nothing)
                        })), updateConfig.onResizeEnded);
                    case 'SplitterMove':
                        var paneInfo = _v2.a.a.a.paneInfo;
                        var anchor = _v2.a.a.a.anchor;
                        var newRequestedPosition = _v2.b.a;
                        var step = {
                            x: newRequestedPosition.x - anchor.x,
                            y: newRequestedPosition.y - anchor.y
                        };
                        var newSplitterPosition = A5($whale9490$elm_split_pane$SplitPane$resize, state.orientation, state.splitterPosition, step, paneInfo.width, paneInfo.height);
                        return _Utils_Tuple2($whale9490$elm_split_pane$SplitPane$State(_Utils_update(state, {
                            dragState: $whale9490$elm_split_pane$SplitPane$Draggable($elm$core$Maybe$Just({
                                anchor: {
                                    x: newRequestedPosition.x,
                                    y: newRequestedPosition.y
                                },
                                paneInfo: {
                                    height: paneInfo.height,
                                    width: paneInfo.width
                                }
                            })),
                            splitterPosition: newSplitterPosition
                        })), updateConfig.onResize(newSplitterPosition));
                    default:
                        break _v2$3;
                }
            } else break _v2$3;
        }
        return _Utils_Tuple2($whale9490$elm_split_pane$SplitPane$State(state), $elm$core$Maybe$Nothing);
    });
    var $whale9490$elm_split_pane$SplitPane$update = F2(function(msg, model) {
        var _v0 = A3($whale9490$elm_split_pane$SplitPane$customUpdate, $whale9490$elm_split_pane$SplitPane$createUpdateConfig({
            onResize: function(_v1) {
                return $elm$core$Maybe$Nothing;
            },
            onResizeEnded: $elm$core$Maybe$Nothing,
            onResizeStarted: $elm$core$Maybe$Nothing
        }), msg, model);
        var updatedModel = _v0.a;
        return updatedModel;
    });
    var $gampleman$elm_visualization$Zoom$OneFinger = function(a) {
        return {
            $: 'OneFinger',
            a: a
        };
    };
    var $gampleman$elm_visualization$Zoom$TwoFingers = F2(function(a, b) {
        return {
            $: 'TwoFingers',
            a: a,
            b: b
        };
    });
    var $elm$core$Basics$clamp = F3(function(low, high, number) {
        return _Utils_cmp(number, low) < 0 ? low : _Utils_cmp(number, high) > 0 ? high : number;
    });
    var $gampleman$elm_visualization$Zoom$Transform$invert = F2(function(_v0, _v1) {
        var locX = _v0.a;
        var locY = _v0.b;
        var k = _v1.k;
        var x = _v1.x;
        var y = _v1.y;
        return _Utils_Tuple2((locX - x) / k, (locY - y) / k);
    });
    var $gampleman$elm_visualization$Zoom$Transform$translate = F2(function(_v0, _v1) {
        var locX = _v0.a;
        var locY = _v0.b;
        var k = _v1.k;
        var x = _v1.x;
        var y = _v1.y;
        return A3($gampleman$elm_visualization$Zoom$Transform$Transform, k, x + k * locX, y + k * locY);
    });
    var $gampleman$elm_visualization$Zoom$constrain = F3(function(_v0, _v1, tsfm) {
        var extentT = _v0.a;
        var extentB = _v0.b;
        var translateExtentT = _v1.a;
        var translateExtentB = _v1.b;
        var minus = F2(function(_v5, _v6) {
            var a = _v5.a;
            var b = _v5.b;
            var c = _v6.a;
            var d = _v6.b;
            return _Utils_Tuple2(c - a, d - b);
        });
        var _v2 = A2(minus, translateExtentB, A2($gampleman$elm_visualization$Zoom$Transform$invert, extentB, tsfm));
        var dx1 = _v2.a;
        var dy1 = _v2.b;
        var _v3 = A2(minus, translateExtentT, A2($gampleman$elm_visualization$Zoom$Transform$invert, extentT, tsfm));
        var dx0 = _v3.a;
        var dy0 = _v3.b;
        var _v4 = _Utils_Tuple2(A2($elm$core$Basics$min, 0, dx0), A2($elm$core$Basics$min, 0, dy0));
        var minDX = _v4.a;
        var minDY = _v4.b;
        return A2($gampleman$elm_visualization$Zoom$Transform$translate, _Utils_Tuple2(_Utils_cmp(dx1, dx0) > 0 ? (dx0 + dx1) / 2 : !minDX ? A2($elm$core$Basics$max, 0, dx1) : minDX, _Utils_cmp(dy1, dy0) > 0 ? (dy0 + dy1) / 2 : !minDY ? A2($elm$core$Basics$max, 0, dy1) : minDY), tsfm);
    });
    var $gampleman$elm_visualization$Zoom$dist2 = F2(function(_v0, _v1) {
        var x1 = _v0.a;
        var y1 = _v0.b;
        var x2 = _v1.a;
        var y2 = _v1.b;
        return A2($elm$core$Basics$pow, x2 - x1, 2) + A2($elm$core$Basics$pow, y2 - y1, 2);
    });
    var $gampleman$elm_visualization$Zoom$easingInOutCubic = function(t) {
        return t < 0.5 ? A2($elm$core$Basics$pow, t * 2, 3) / 2 : 1 - 0.5 * A2($elm$core$Basics$pow, -2 * t + 2, 3);
    };
    var $gampleman$elm_visualization$Zoom$findAssociatedTouch = function(_v0) {
        var identifier = _v0.identifier;
        return A2($elm$core$Basics$composeR, $elm$core$List$filter(function(t) {
            return _Utils_eq(t.identifier, identifier);
        }), $elm$core$List$head);
    };
    var $elm$core$Basics$ge = _Utils_ge;
    var $gampleman$elm_visualization$Zoom$midpoint = F2(function(_v0, _v1) {
        var x1 = _v0.a;
        var y1 = _v0.b;
        var x2 = _v1.a;
        var y2 = _v1.b;
        return _Utils_Tuple2((x1 + x2) / 2, (y1 + y2) / 2);
    });
    var $gampleman$elm_visualization$Zoom$Matrix$transform = F2(function(_v0, _v1) {
        var x = _v0.a;
        var y = _v0.b;
        var _v2 = _v1.a;
        var a11 = _v2.a;
        var a12 = _v2.b;
        var a13 = _v2.c;
        var _v3 = _v1.b;
        var a21 = _v3.a;
        var a22 = _v3.b;
        var a23 = _v3.c;
        return _Utils_Tuple2(a11 * x + a12 * y + a13 * 1, a21 * x + a22 * y + a23 * 1);
    });
    var $gampleman$elm_visualization$Events$normalizePointerPosition = F2(function(position, maybeMatrix) {
        if (maybeMatrix.$ === 'Just') {
            var matrix = maybeMatrix.a;
            return A2($gampleman$elm_visualization$Zoom$Matrix$transform, position, matrix);
        } else return position;
    });
    var $gampleman$elm_visualization$Zoom$scale = F3(function(_v0, k, trfm) {
        var mi = _v0.a;
        var mx = _v0.b;
        return _Utils_update(trfm, {
            k: A3($elm$core$Basics$clamp, mi, mx, k)
        });
    });
    var $gampleman$elm_visualization$Zoom$Transform$scale = F2(function(k_, _v0) {
        var k = _v0.k;
        var x = _v0.x;
        var y = _v0.y;
        return A3($gampleman$elm_visualization$Zoom$Transform$Transform, k * k_, x, y);
    });
    var $elm$core$Basics$e = _Basics_e;
    var $gampleman$elm_visualization$Zoom$Interpolation$exp = function(x) {
        return A2($elm$core$Basics$pow, $elm$core$Basics$e, x);
    };
    var $gampleman$elm_visualization$Zoom$Interpolation$cosh = function(x) {
        var x_ = $gampleman$elm_visualization$Zoom$Interpolation$exp(x);
        return (x_ + 1 / x_) / 2;
    };
    var $gampleman$elm_visualization$Zoom$Interpolation$epsilon2 = 0.000000000001;
    var $gampleman$elm_visualization$Zoom$Interpolation$log = $elm$core$Basics$logBase($elm$core$Basics$e);
    var $gampleman$elm_visualization$Zoom$Interpolation$rho = $elm$core$Basics$sqrt(2);
    var $gampleman$elm_visualization$Zoom$Interpolation$sinh = function(x) {
        var x_ = $gampleman$elm_visualization$Zoom$Interpolation$exp(x);
        return (x_ - 1 / x_) / 2;
    };
    var $gampleman$elm_visualization$Zoom$Interpolation$tanh = function(x) {
        var x_ = $gampleman$elm_visualization$Zoom$Interpolation$exp(2 * x);
        return (x_ - 1) / (x_ + 1);
    };
    var $gampleman$elm_visualization$Zoom$Interpolation$interpolate = F2(function(a, b) {
        var dy = b.cy - a.cy;
        var dx = b.cx - a.cx;
        var d2 = A2($elm$core$Basics$pow, dx, 2) + A2($elm$core$Basics$pow, dy, 2);
        if (_Utils_cmp(d2, $gampleman$elm_visualization$Zoom$Interpolation$epsilon2) < 0) {
            var s = $gampleman$elm_visualization$Zoom$Interpolation$log(b.size / a.size) / $gampleman$elm_visualization$Zoom$Interpolation$rho;
            return _Utils_Tuple2($elm$core$Basics$abs(s) * 1000, function(t) {
                return {
                    cx: a.cx + t * dx,
                    cy: a.cy + t * dy,
                    size: a.size * $gampleman$elm_visualization$Zoom$Interpolation$exp($gampleman$elm_visualization$Zoom$Interpolation$rho * t * s)
                };
            });
        } else {
            var d1 = $elm$core$Basics$sqrt(d2);
            var b1 = (A2($elm$core$Basics$pow, b.size, 2) - A2($elm$core$Basics$pow, a.size, 2) - A2($elm$core$Basics$pow, $gampleman$elm_visualization$Zoom$Interpolation$rho, 4) * d2) / (2 * b.size * A2($elm$core$Basics$pow, $gampleman$elm_visualization$Zoom$Interpolation$rho, 2) * d1);
            var r1 = $gampleman$elm_visualization$Zoom$Interpolation$log($elm$core$Basics$sqrt(A2($elm$core$Basics$pow, b1, 2) + 1) - b1);
            var b0 = (A2($elm$core$Basics$pow, b.size, 2) - A2($elm$core$Basics$pow, a.size, 2) + A2($elm$core$Basics$pow, $gampleman$elm_visualization$Zoom$Interpolation$rho, 4) * d2) / (2 * a.size * A2($elm$core$Basics$pow, $gampleman$elm_visualization$Zoom$Interpolation$rho, 2) * d1);
            var r0 = $gampleman$elm_visualization$Zoom$Interpolation$log($elm$core$Basics$sqrt(A2($elm$core$Basics$pow, b0, 2) + 1) - b0);
            var s_ = (r1 - r0) / $gampleman$elm_visualization$Zoom$Interpolation$rho;
            return _Utils_Tuple2(s_ * 1000, function(t) {
                var s = t * s_;
                var coshr0 = $gampleman$elm_visualization$Zoom$Interpolation$cosh(r0);
                var u = a.size / (A2($elm$core$Basics$pow, $gampleman$elm_visualization$Zoom$Interpolation$rho, 2) * d1) * (coshr0 * $gampleman$elm_visualization$Zoom$Interpolation$tanh($gampleman$elm_visualization$Zoom$Interpolation$rho * s + r0) - $gampleman$elm_visualization$Zoom$Interpolation$sinh(r0));
                return {
                    cx: a.cx + u * dx,
                    cy: a.cy + u * dy,
                    size: a.size * coshr0 / $gampleman$elm_visualization$Zoom$Interpolation$cosh($gampleman$elm_visualization$Zoom$Interpolation$rho * s + r0)
                };
            });
        }
    });
    var $gampleman$elm_visualization$Zoom$schedule = F3(function(btransform, center, _v0) {
        var model = _v0.a;
        var atransform = model.transform;
        var _v1 = model.extent;
        var _v2 = _v1.a;
        var top = _v2.a;
        var left = _v2.b;
        var _v3 = _v1.b;
        var bottom = _v3.a;
        var right = _v3.b;
        var w = A2($elm$core$Basics$max, bottom - top, right - left);
        var _v4 = A2($gampleman$elm_visualization$Zoom$Transform$invert, center, btransform);
        var bx = _v4.a;
        var by = _v4.b;
        var _v5 = A2($gampleman$elm_visualization$Zoom$Transform$invert, center, atransform);
        var ax = _v5.a;
        var ay = _v5.b;
        var _v6 = A2($gampleman$elm_visualization$Zoom$Interpolation$interpolate, {
            cx: ax,
            cy: ay,
            size: w / atransform.k
        }, {
            cx: bx,
            cy: by,
            size: w / btransform.k
        });
        var dur = _v6.a;
        var interp = _v6.b;
        return $gampleman$elm_visualization$Zoom$Zoom(_Utils_update(model, {
            transition: $elm$core$Maybe$Just({
                duration: dur,
                elapsed: 0,
                interpolation: function(t) {
                    if (t === 1) return btransform;
                    else {
                        var l = interp(t);
                        var k = w / l.size;
                        return {
                            k: k,
                            x: center.a - l.cx * k,
                            y: center.b - l.cy * k
                        };
                    }
                }
            })
        }));
    });
    var $gampleman$elm_visualization$Zoom$translate = F3(function(_v0, _v1, trfm) {
        var position0x = _v0.a;
        var position0y = _v0.b;
        var position1x = _v1.a;
        var position1y = _v1.b;
        return _Utils_update(trfm, {
            x: position0x - position1x * trfm.k,
            y: position0y - position1y * trfm.k
        });
    });
    var $gampleman$elm_visualization$Zoom$update = F2(function(msg, _v0) {
        var model = _v0.a;
        switch(msg.$){
            case 'DoubleClicked':
                var shiftKey = msg.a;
                var position0 = msg.b;
                var position1 = A2($gampleman$elm_visualization$Zoom$Transform$invert, position0, model.transform);
                var k = model.transform.k * (shiftKey ? 0.5 : 2);
                var newTransform = A3($gampleman$elm_visualization$Zoom$constrain, model.extent, model.translateExtent, A3($gampleman$elm_visualization$Zoom$translate, position0, position1, A3($gampleman$elm_visualization$Zoom$scale, model.scaleExtent, k, model.transform)));
                return A3($gampleman$elm_visualization$Zoom$schedule, newTransform, position0, $gampleman$elm_visualization$Zoom$Zoom(_Utils_update(model, {
                    touchStarted: false
                })));
            case 'MouseDown':
                var position = msg.a;
                var matrix = msg.b;
                return $gampleman$elm_visualization$Zoom$Zoom(_Utils_update(model, {
                    drag: $elm$core$Maybe$Just({
                        current: A2($gampleman$elm_visualization$Zoom$Transform$invert, A2($gampleman$elm_visualization$Events$normalizePointerPosition, position, matrix), model.transform),
                        matrix: matrix
                    }),
                    transition: $elm$core$Maybe$Nothing
                }));
            case 'MouseMove':
                var position_ = msg.a;
                var _v2 = model.drag;
                if (_v2.$ === 'Just') {
                    var drag = _v2.a;
                    var position = A2($gampleman$elm_visualization$Events$normalizePointerPosition, position_, drag.matrix);
                    var trasform_ = A3($gampleman$elm_visualization$Zoom$translate, position, drag.current, model.transform);
                    return $gampleman$elm_visualization$Zoom$Zoom(_Utils_update(model, {
                        drag: $elm$core$Maybe$Just(_Utils_update(drag, {
                            current: A2($gampleman$elm_visualization$Zoom$Transform$invert, position, trasform_)
                        })),
                        transform: A3($gampleman$elm_visualization$Zoom$constrain, model.extent, model.translateExtent, trasform_),
                        transition: $elm$core$Maybe$Nothing
                    }));
                } else return $gampleman$elm_visualization$Zoom$Zoom(model);
            case 'MouseUp':
                return $gampleman$elm_visualization$Zoom$Zoom(_Utils_update(model, {
                    drag: $elm$core$Maybe$Nothing
                }));
            case 'Wheeled':
                var delta = msg.a;
                var position0 = msg.b;
                var position1 = A2($gampleman$elm_visualization$Zoom$Transform$invert, position0, model.transform);
                var k = model.transform.k * A2($elm$core$Basics$pow, 2, delta);
                return $gampleman$elm_visualization$Zoom$Zoom(_Utils_update(model, {
                    transform: A3($gampleman$elm_visualization$Zoom$constrain, model.extent, model.translateExtent, A3($gampleman$elm_visualization$Zoom$translate, position0, position1, A3($gampleman$elm_visualization$Zoom$scale, model.scaleExtent, k, model.transform))),
                    transition: $elm$core$Maybe$Nothing
                }));
            case 'GestureStarted':
                return $gampleman$elm_visualization$Zoom$Zoom(_Utils_update(model, {
                    gestureLastScale: 1
                }));
            case 'Gestured':
                var scl = msg.a;
                var position0 = msg.b;
                var position1 = A2($gampleman$elm_visualization$Zoom$Transform$invert, position0, model.transform);
                return $gampleman$elm_visualization$Zoom$Zoom(_Utils_update(model, {
                    gestureLastScale: scl,
                    transform: A3($gampleman$elm_visualization$Zoom$constrain, model.extent, model.translateExtent, A3($gampleman$elm_visualization$Zoom$translate, position0, position1, A2($gampleman$elm_visualization$Zoom$Transform$scale, scl / model.gestureLastScale, model.transform))),
                    transition: $elm$core$Maybe$Nothing
                }));
            case 'TouchStartedExpired':
                return $gampleman$elm_visualization$Zoom$Zoom(_Utils_update(model, {
                    touchStarted: false
                }));
            case 'TouchStarted':
                var touches = msg.a;
                return $gampleman$elm_visualization$Zoom$Zoom(_Utils_update(model, {
                    touchStarted: true,
                    touches: function() {
                        var _v3 = _Utils_Tuple2(model.touches, touches);
                        _v3$3: while(true){
                            if (_v3.b.b) switch(_v3.a.$){
                                case 'NoTouches':
                                    if (!_v3.b.b.b) {
                                        var _v4 = _v3.a;
                                        var _v5 = _v3.b;
                                        var single = _v5.a;
                                        return $gampleman$elm_visualization$Zoom$OneFinger({
                                            identifier: single.identifier,
                                            position: single.position,
                                            previous: A2($gampleman$elm_visualization$Zoom$Transform$invert, single.position, model.transform)
                                        });
                                    } else {
                                        var _v6 = _v3.a;
                                        var _v7 = _v3.b;
                                        var one = _v7.a;
                                        var _v8 = _v7.b;
                                        var two = _v8.a;
                                        return A2($gampleman$elm_visualization$Zoom$TwoFingers, {
                                            identifier: one.identifier,
                                            position: one.position,
                                            previous: A2($gampleman$elm_visualization$Zoom$Transform$invert, one.position, model.transform)
                                        }, {
                                            identifier: two.identifier,
                                            position: two.position,
                                            previous: A2($gampleman$elm_visualization$Zoom$Transform$invert, two.position, model.transform)
                                        });
                                    }
                                case 'OneFinger':
                                    var id1 = _v3.a.a;
                                    var _v9 = _v3.b;
                                    var one = _v9.a;
                                    return A2($gampleman$elm_visualization$Zoom$TwoFingers, id1, {
                                        identifier: one.identifier,
                                        position: one.position,
                                        previous: A2($gampleman$elm_visualization$Zoom$Transform$invert, one.position, model.transform)
                                    });
                                default:
                                    break _v3$3;
                            }
                            else break _v3$3;
                        }
                        return model.touches;
                    }(),
                    transition: $elm$core$Maybe$Nothing
                }));
            case 'TouchMoved':
                var touches = msg.a;
                return $gampleman$elm_visualization$Zoom$Zoom(function() {
                    var _v10 = model.touches;
                    switch(_v10.$){
                        case 'OneFinger':
                            var before = _v10.a;
                            var _v11 = A2($gampleman$elm_visualization$Zoom$findAssociatedTouch, before, touches);
                            if (_v11.$ === 'Just') {
                                var after = _v11.a;
                                return _Utils_update(model, {
                                    touchStarted: false,
                                    touches: $gampleman$elm_visualization$Zoom$OneFinger(_Utils_update(before, {
                                        position: after.position
                                    })),
                                    transform: A3($gampleman$elm_visualization$Zoom$constrain, model.extent, model.translateExtent, A3($gampleman$elm_visualization$Zoom$translate, after.position, before.previous, model.transform)),
                                    transition: $elm$core$Maybe$Nothing
                                });
                            } else return model;
                        case 'TwoFingers':
                            var beforeTouch1 = _v10.a;
                            var beforeTouch2 = _v10.b;
                            var t = model.transform;
                            var before2 = beforeTouch2.previous;
                            var before1 = beforeTouch1.previous;
                            var distBefore = A2($gampleman$elm_visualization$Zoom$dist2, before1, before2);
                            var after2 = A2($elm$core$Maybe$withDefault, beforeTouch2.position, A2($elm$core$Maybe$map, function($) {
                                return $.position;
                            }, A2($gampleman$elm_visualization$Zoom$findAssociatedTouch, beforeTouch2, touches)));
                            var after1 = A2($elm$core$Maybe$withDefault, beforeTouch1.position, A2($elm$core$Maybe$map, function($) {
                                return $.position;
                            }, A2($gampleman$elm_visualization$Zoom$findAssociatedTouch, beforeTouch1, touches)));
                            var distAfter = A2($gampleman$elm_visualization$Zoom$dist2, after1, after2);
                            return _Utils_update(model, {
                                touchStarted: false,
                                touches: A2($gampleman$elm_visualization$Zoom$TwoFingers, _Utils_update(beforeTouch1, {
                                    position: after1
                                }), _Utils_update(beforeTouch2, {
                                    position: after2
                                })),
                                transform: A3($gampleman$elm_visualization$Zoom$constrain, model.extent, model.translateExtent, A3($gampleman$elm_visualization$Zoom$translate, A2($gampleman$elm_visualization$Zoom$midpoint, after1, after2), A2($gampleman$elm_visualization$Zoom$midpoint, before1, before2), A3($gampleman$elm_visualization$Zoom$scale, model.scaleExtent, $elm$core$Basics$sqrt(distAfter / distBefore), t))),
                                transition: $elm$core$Maybe$Nothing
                            });
                        default:
                            return model;
                    }
                }());
            case 'TouchEnded':
                var touches = msg.a;
                return $gampleman$elm_visualization$Zoom$Zoom(_Utils_update(model, {
                    touches: function() {
                        var _v12 = model.touches;
                        switch(_v12.$){
                            case 'NoTouches':
                                return $gampleman$elm_visualization$Zoom$NoTouches;
                            case 'OneFinger':
                                var touch1 = _v12.a;
                                var _v13 = A2($gampleman$elm_visualization$Zoom$findAssociatedTouch, touch1, touches);
                                if (_v13.$ === 'Just') return $gampleman$elm_visualization$Zoom$NoTouches;
                                else return model.touches;
                            default:
                                var before1 = _v12.a;
                                var before2 = _v12.b;
                                var _v14 = _Utils_Tuple2(A2($gampleman$elm_visualization$Zoom$findAssociatedTouch, before1, touches), A2($gampleman$elm_visualization$Zoom$findAssociatedTouch, before2, touches));
                                if (_v14.a.$ === 'Just') {
                                    if (_v14.b.$ === 'Just') return $gampleman$elm_visualization$Zoom$NoTouches;
                                    else {
                                        var _v15 = _v14.b;
                                        return $gampleman$elm_visualization$Zoom$OneFinger(before2);
                                    }
                                } else if (_v14.b.$ === 'Just') {
                                    var _v16 = _v14.a;
                                    return $gampleman$elm_visualization$Zoom$OneFinger(before1);
                                } else {
                                    var _v17 = _v14.a;
                                    var _v18 = _v14.b;
                                    return model.touches;
                                }
                        }
                    }()
                }));
            default:
                var delta = msg.a;
                var _v19 = model.transition;
                if (_v19.$ === 'Just') {
                    var transition = _v19.a;
                    var duration = transition.duration;
                    var elapsed = transition.elapsed;
                    var interpolation = transition.interpolation;
                    return $gampleman$elm_visualization$Zoom$Zoom(_Utils_update(model, {
                        transform: interpolation($gampleman$elm_visualization$Zoom$easingInOutCubic(A3($elm$core$Basics$clamp, 0, 1, (elapsed + delta) / duration))),
                        transition: _Utils_cmp(elapsed + delta, duration) > -1 ? $elm$core$Maybe$Nothing : $elm$core$Maybe$Just(_Utils_update(transition, {
                            elapsed: elapsed + delta
                        }))
                    }));
                } else return $gampleman$elm_visualization$Zoom$Zoom(model);
        }
    });
    var $author$project$Main$updateElementAndPointPosition = F3(function(selectedItems, xy, state) {
        var selectedPointsDeltas = A2($elm$core$List$filterMap, function(_v9) {
            var k = _v9.a;
            var d = _v9.b;
            return A2($elm$core$Maybe$map, $elm$core$Tuple$pair(k), d);
        }, $author$project$Main$getSelectedPointKeysAndDeltas(selectedItems));
        var selectedElementDeltas = A2($elm$core$List$filterMap, function(_v8) {
            var k = _v8.a;
            var d = _v8.b;
            return A2($elm$core$Maybe$map, $elm$core$Tuple$pair(k), d);
        }, $author$project$Main$getSelectedElementKeysAndDeltas(selectedItems));
        var _v0 = A3($author$project$Main$shiftPosition, state.zoom, _Utils_Tuple2(state.element.x, state.element.y), xy);
        var shiftedX = _v0.a;
        var shiftedY = _v0.b;
        var updateElementXY = F2(function(viewElementKey, viewElement) {
            var foundElement = $elm$core$List$head(A2($elm$core$List$filter, function(x) {
                return _Utils_eq(x.a, viewElementKey);
            }, selectedElementDeltas));
            if (foundElement.$ === 'Just') {
                var _v6 = foundElement.a;
                var _v7 = _v6.b;
                var deltaX = _v7.a;
                var deltaY = _v7.b;
                return _Utils_update(viewElement, {
                    x: shiftedX - deltaX,
                    y: shiftedY - deltaY
                });
            } else return viewElement;
        });
        var updatePointXY = F3(function(selectedPointIndexes, i, viewRelationPoint) {
            return A2($elm$core$Maybe$withDefault, viewRelationPoint, A2($elm$core$Maybe$map, function(_v4) {
                var deltaX = _v4.a;
                var deltaY = _v4.b;
                return _Utils_update(viewRelationPoint, {
                    x: shiftedX - deltaX,
                    y: shiftedY - deltaY
                });
            }, $elm$core$List$head(A2($elm$core$List$filterMap, function(_v3) {
                var pointIndex = _v3.a;
                var d = _v3.b;
                return _Utils_eq(pointIndex, i) ? $elm$core$Maybe$Just(d) : $elm$core$Maybe$Nothing;
            }, selectedPointIndexes))));
        });
        var updatedPoints = function(viewElementKey) {
            return $elm$core$Dict$map(F2(function(relation, points) {
                var updatePointXYUsingSelectedPoints = updatePointXY(A2($elm$core$List$filterMap, function(_v1) {
                    var _v2 = _v1.a;
                    var vek = _v2.a;
                    var rel = _v2.b;
                    var pointIndex = _v2.c;
                    var delta = _v1.b;
                    return _Utils_eq(vek, viewElementKey) && _Utils_eq(rel, relation) ? $elm$core$Maybe$Just(_Utils_Tuple2(pointIndex, delta)) : $elm$core$Maybe$Nothing;
                }, selectedPointsDeltas));
                return A2($elm$core$List$indexedMap, updatePointXYUsingSelectedPoints, points);
            }));
        };
        var updatedRelations = F2(function(viewElementKey, viewElement) {
            return _Utils_update(viewElement, {
                relations: A2(updatedPoints, viewElementKey, viewElement.relations)
            });
        });
        return $elm$core$Dict$map(F2(function(viewElementKey, ve) {
            return A2(updatedRelations, viewElementKey, A2(updateElementXY, viewElementKey, ve));
        }));
    });
    var $author$project$Domain$updateElementsInViews = F3(function(selectedView, views, updateElements) {
        return A3($elm$core$Dict$update, selectedView, $elm$core$Maybe$map(function(v) {
            return _Utils_update(v, {
                elements: updateElements(v.elements)
            });
        }), views);
    });
    var $author$project$JsInterop$updateMonacoValue = _Platform_outgoingPort('updateMonacoValue', $elm$json$Json$Encode$string);
    var $author$project$JsInterop$UpdateElementPositionMessage = F3(function(selectedView, viewElementKey, coords) {
        return {
            coords: coords,
            selectedView: selectedView,
            viewElementKey: viewElementKey
        };
    });
    var $author$project$JsInterop$encodeUpdateElementPosition = function(value) {
        return $elm$json$Json$Encode$object(_List_fromArray([
            _Utils_Tuple2('view', $elm$json$Json$Encode$string(value.selectedView)),
            _Utils_Tuple2('elementKey', $elm$json$Json$Encode$string(value.viewElementKey)),
            _Utils_Tuple2('x', $elm$json$Json$Encode$float(value.coords.a)),
            _Utils_Tuple2('y', $elm$json$Json$Encode$float(value.coords.b))
        ]));
    };
    var $author$project$Domain$getElements = F2(function(viewElementKeys, maybeDict) {
        if (maybeDict.$ === 'Just') {
            var dict = maybeDict.a;
            return A2($elm$core$List$filterMap, function(vek) {
                return A2($elm$core$Maybe$map, function(el) {
                    return _Utils_Tuple2(vek, el);
                }, A2($elm$core$Dict$get, vek, dict));
            }, viewElementKeys);
        } else return _List_Nil;
    });
    var $author$project$Domain$getPoints = F2(function(relationPointKeys, maybeDict) {
        if (maybeDict.$ === 'Just') {
            var dict = maybeDict.a;
            return A2($elm$core$List$filterMap, function(_v1) {
                var vek = _v1.a;
                var relation = _v1.b;
                var index = _v1.c;
                return A2($elm$core$Maybe$map, function(p) {
                    return _Utils_Tuple2(_Utils_Tuple3(vek, relation, index), p);
                }, A2($elm$core$Maybe$andThen, $elm$core$List$head, A2($elm$core$Maybe$map, $elm$core$List$drop(index), A2($elm$core$Maybe$andThen, function(el) {
                    return A2($elm$core$Dict$get, relation, el.relations);
                }, A2($elm$core$Dict$get, vek, dict)))));
            }, relationPointKeys);
        } else return _List_Nil;
    });
    var $author$project$JsInterop$updateElementPosition = _Platform_outgoingPort('updateElementPosition', $elm$core$Basics$identity);
    var $author$project$JsInterop$updatePointPosition = _Platform_outgoingPort('updatePointPosition', $elm$core$Basics$identity);
    var $author$project$Main$updateMonacoValues = F3(function(selectedView, views, selectedItems) {
        var viewElements = $author$project$Domain$getViewElementsOfCurrentView(A2($author$project$Domain$getCurrentView, selectedView, views));
        var currentViewElementsXY = A2($author$project$Domain$getElements, A2($elm$core$List$map, $elm$core$Tuple$first, $author$project$Main$getSelectedElementKeysAndDeltas(selectedItems)), viewElements);
        var currentRelationPointXY = A2($author$project$Domain$getPoints, A2($elm$core$List$map, $elm$core$Tuple$first, $author$project$Main$getSelectedPointKeysAndDeltas(selectedItems)), viewElements);
        var createPointMessage = function(_v2) {
            var viewRelationPointKey = _v2.a;
            var viewRelationPoint = _v2.b;
            var _v1 = viewRelationPointKey;
            var viewElementKey = _v1.a;
            var relation = _v1.b;
            var viewRelationPointIndex = _v1.c;
            return A5($author$project$JsInterop$PointMessage, selectedView, viewElementKey, relation, viewRelationPointIndex, _Utils_Tuple2(viewRelationPoint.x, viewRelationPoint.y));
        };
        var updateElementPointsPositionMessages = A2($elm$core$List$map, A2($elm$core$Basics$composeR, createPointMessage, A2($elm$core$Basics$composeR, $author$project$JsInterop$encodePointMessage, $author$project$JsInterop$updatePointPosition)), currentRelationPointXY);
        var createMessage = function(_v0) {
            var elementKey = _v0.a;
            var element = _v0.b;
            return A3($author$project$JsInterop$UpdateElementPositionMessage, selectedView, elementKey, _Utils_Tuple2(element.x, element.y));
        };
        var updateElementPositionMessages = A2($elm$core$List$map, A2($elm$core$Basics$composeR, createMessage, A2($elm$core$Basics$composeR, $author$project$JsInterop$encodeUpdateElementPosition, $author$project$JsInterop$updateElementPosition)), currentViewElementsXY);
        return $elm$core$Platform$Cmd$batch(_Utils_ap(updateElementPositionMessages, updateElementPointsPositionMessages));
    });
    var $author$project$Domain$updatePointsInRelations = F2(function(relation, updatedPoints) {
        return A2($elm$core$Dict$update, relation, $elm$core$Maybe$map(updatedPoints));
    });
    var $author$project$Domain$updateRelationsInElements = F2(function(viewElementKey, updatedRelationsFunc) {
        return A2($elm$core$Dict$update, viewElementKey, $elm$core$Maybe$map(function(ve) {
            return _Utils_update(ve, {
                relations: updatedRelationsFunc(ve.relations)
            });
        }));
    });
    var $author$project$Main$updateSelectedItemsDeltas = F3(function(viewElementsOfCurrentView, _v0, selectedItems) {
        var shiftedStartX = _v0.a;
        var shiftedStartY = _v0.b;
        var selectedPointKeys = A2($elm$core$List$map, $elm$core$Tuple$first, $author$project$Main$getSelectedPointKeysAndDeltas(selectedItems));
        var selectedElementKeys = A2($elm$core$List$map, $elm$core$Tuple$first, $author$project$Main$getSelectedElementKeysAndDeltas(selectedItems));
        var pointIsWithinAlreadySelected = function(vpk) {
            return A2($elm$core$List$member, vpk, selectedPointKeys);
        };
        var selectedPointsWithDeltas = A2($elm$core$List$map, function(_v7) {
            var vpk = _v7.a;
            var point = _v7.b;
            return A2($author$project$Main$SelectedItem, $author$project$Domain$PointKey(vpk), $elm$core$Maybe$Just(_Utils_Tuple2(shiftedStartX - point.x, shiftedStartY - point.y)));
        }, A2($elm$core$List$filter, function(_v6) {
            var vpk = _v6.a;
            return pointIsWithinAlreadySelected(vpk);
        }, A2($elm$core$List$concatMap, function(_v4) {
            var vek = _v4.a;
            var _v5 = _v4.b;
            var r = _v5.a;
            var points = _v5.b;
            return A2($elm$core$List$indexedMap, F2(function(i, point) {
                return _Utils_Tuple2(_Utils_Tuple3(vek, r, i), point);
            }), points);
        }, A2($elm$core$List$concatMap, function(_v3) {
            var vek = _v3.a;
            var ve = _v3.b;
            return A2($elm$core$List$map, $elm$core$Tuple$pair(vek), $elm$core$Dict$toList(ve.relations));
        }, A2($elm$core$Maybe$withDefault, _List_Nil, A2($elm$core$Maybe$map, $elm$core$Dict$toList, viewElementsOfCurrentView))))));
        var elementIsWithinAlreadySelected = F2(function(vek, _v2) {
            return A2($elm$core$List$member, vek, selectedElementKeys);
        });
        var selectedElementsWithDeltas = A2($elm$core$List$map, function(_v1) {
            var vek = _v1.a;
            var ve = _v1.b;
            return A2($author$project$Main$SelectedItem, $author$project$Domain$ElementKey(vek), $elm$core$Maybe$Just(_Utils_Tuple2(shiftedStartX - ve.x, shiftedStartY - ve.y)));
        }, A2($elm$core$Maybe$withDefault, _List_Nil, A2($elm$core$Maybe$map, $elm$core$Dict$toList, A2($elm$core$Maybe$map, $elm$core$Dict$filter(elementIsWithinAlreadySelected), viewElementsOfCurrentView))));
        return _Utils_ap(selectedElementsWithDeltas, selectedPointsWithDeltas);
    });
    var $author$project$Main$update = F2(function(msg, model) {
        var _v0 = _Utils_Tuple2(msg, model);
        _v0$5: while(true){
            _v0$8: while(true)switch(_v0.a.$){
                case 'ReceiveMonacoElementPosition':
                    if (_v0.a.a.$ === 'Ok') return _Utils_Tuple2(model, $author$project$Main$initMonaco);
                    else return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
                case 'ClickedLink':
                    var urlRequest = _v0.a.a;
                    if (urlRequest.$ === 'Internal') {
                        var url = urlRequest.a;
                        return _Utils_Tuple2(model, A2($elm$browser$Browser$Navigation$pushUrl, $author$project$Main$getNavKey(model), $elm$url$Url$toString(url)));
                    } else {
                        var href = urlRequest.a;
                        return _Utils_Tuple2(model, $elm$browser$Browser$Navigation$load(href));
                    }
                case 'ChangedUrl':
                    if (_v0.b.$ === 'Home') {
                        var url = _v0.a.a;
                        var _v2 = _v0.b;
                        var links = _v2.b;
                        return A3($author$project$Main$changeRouteTo, links, $author$project$Route$fromUrl(url), $author$project$Main$getNavKey(model));
                    } else {
                        var url = _v0.a.a;
                        var _v3 = _v0.b;
                        var links = _v3.b;
                        return A3($author$project$Main$changeRouteTo, links, $author$project$Route$fromUrl(url), $author$project$Main$getNavKey(model));
                    }
                case 'MonacoEditorValueReceived':
                    if (_v0.b.$ === 'Home') break _v0$5;
                    else {
                        var _v5 = _v0.a;
                        var isNewState = _v5.a;
                        var val = _v5.b;
                        var _v6 = _v0.b;
                        var navKey = _v6.a;
                        var gifLinks = _v6.b;
                        var editorsModel = _v6.c;
                        var _v7 = A2($MaybeJustJames$yaml$Yaml$Decode$fromString, $author$project$DomainDecoder$rdbDecoder, val);
                        if (_v7.$ === 'Ok') {
                            var _v8 = _v7.a;
                            var domain = _v8.a;
                            var views = _v8.b;
                            var newMonacoValue = function(a) {
                                return _Utils_update(a, {
                                    domain: $elm$core$Maybe$Just(domain),
                                    value: val,
                                    views: views
                                });
                            };
                            var newModel = _Utils_update(editorsModel, {
                                errors: '',
                                monacoValue: function() {
                                    if (isNewState) {
                                        var currentMonacoValue = editorsModel.monacoValue.present;
                                        var updatedMonacoValue = _Utils_update(currentMonacoValue, {
                                            domain: $elm$core$Maybe$Just(domain),
                                            value: val,
                                            views: views
                                        });
                                        return A2($elm_community$undo_redo$UndoList$new, updatedMonacoValue, editorsModel.monacoValue);
                                    } else return A2($elm_community$undo_redo$UndoList$mapPresent, newMonacoValue, editorsModel.monacoValue);
                                }()
                            });
                            return _Utils_Tuple2(A3($author$project$Main$Editor, navKey, gifLinks, newModel), $author$project$Main$getElementPosition);
                        } else {
                            var err = _v7.a;
                            if (err.$ === 'Parsing') {
                                var errMsg = err.a;
                                var newModel = _Utils_update(editorsModel, {
                                    errors: errMsg
                                });
                                return _Utils_Tuple2(A3($author$project$Main$Editor, navKey, gifLinks, newModel), $elm$core$Platform$Cmd$none);
                            } else {
                                var errMsg = err.a;
                                var newModel = _Utils_update(editorsModel, {
                                    errors: errMsg
                                });
                                return _Utils_Tuple2(A3($author$project$Main$Editor, navKey, gifLinks, newModel), $elm$core$Platform$Cmd$none);
                            }
                        }
                    }
                case 'ReceiveElementPosition':
                    if (_v0.b.$ === 'Home') break _v0$5;
                    else {
                        if (_v0.a.a.$ === 'Err') return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
                        else break _v0$8;
                    }
                default:
                    if (_v0.b.$ === 'Home') break _v0$5;
                    else break _v0$8;
            }
            var _v10 = _v0.b;
            var navKey = _v10.a;
            var gifLinks = _v10.b;
            var editorModel = _v10.c;
            var toEditor = A2($author$project$Main$Editor, navKey, gifLinks);
            var _v11 = editorModel.viewEditor;
            if (_v11.$ === 'Init') {
                _v12$4: while(true)switch(msg.$){
                    case 'ReceiveElementPosition':
                        if (msg.a.$ === 'Ok') {
                            var element = msg.a.a.element;
                            return _Utils_Tuple2(toEditor(_Utils_update(editorModel, {
                                viewEditor: $author$project$Main$Ready({
                                    brush: $elm$core$Maybe$Nothing,
                                    drag: $elm$core$Maybe$Nothing,
                                    element: element,
                                    panMode: false,
                                    selectedItems: _List_Nil,
                                    zoom: $author$project$Main$initZoom(element)
                                })
                            })), $elm$core$Platform$Cmd$none);
                        } else break _v12$4;
                    case 'InitMonacoRequestReceived':
                        return _Utils_Tuple2(model, $author$project$Main$initMonaco);
                    case 'PaneMsg':
                        var paneMsg = msg.a;
                        return _Utils_Tuple2(toEditor(_Utils_update(editorModel, {
                            pane: A2($whale9490$elm_split_pane$SplitPane$update, paneMsg, editorModel.pane)
                        })), $elm$core$Platform$Cmd$none);
                    case 'Resize':
                        return _Utils_Tuple2(model, $author$project$Main$getElementPosition);
                    default:
                        break _v12$4;
                }
                return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
            } else {
                var state = _v11.a;
                _v13$14: while(true)switch(msg.$){
                    case 'SelectItemsStart':
                        var xy = msg.a;
                        var shiftedXY = A3($author$project$Main$shiftPosition, state.zoom, _Utils_Tuple2(0, 0), xy);
                        return _Utils_Tuple2(toEditor(_Utils_update(editorModel, {
                            viewEditor: $author$project$Main$Ready(_Utils_update(state, {
                                brush: $elm$core$Maybe$Just(A2($author$project$Main$Brush, shiftedXY, shiftedXY))
                            }))
                        })), $elm$core$Platform$Cmd$none);
                    case 'SetCtrlIsDown':
                        var value = msg.a;
                        return _Utils_Tuple2(toEditor(_Utils_update(editorModel, {
                            viewEditor: $author$project$Main$Ready(_Utils_update(state, {
                                panMode: value
                            }))
                        })), $elm$core$Platform$Cmd$none);
                    case 'Undo':
                        var newModel = _Utils_update(editorModel, {
                            monacoValue: state.panMode ? $elm_community$undo_redo$UndoList$undo(editorModel.monacoValue) : editorModel.monacoValue
                        });
                        return _Utils_Tuple2(toEditor(newModel), $author$project$JsInterop$updateMonacoValue(newModel.monacoValue.present.value));
                    case 'Redo':
                        var newModel = _Utils_update(editorModel, {
                            monacoValue: state.panMode ? $elm_community$undo_redo$UndoList$redo(editorModel.monacoValue) : editorModel.monacoValue
                        });
                        return _Utils_Tuple2(toEditor(newModel), $author$project$JsInterop$updateMonacoValue(newModel.monacoValue.present.value));
                    case 'ReceiveElementPosition':
                        if (msg.a.$ === 'Ok') {
                            var element = msg.a.a.element;
                            return _Utils_Tuple2(toEditor(_Utils_update(editorModel, {
                                viewEditor: $author$project$Main$Ready(_Utils_update(state, {
                                    element: element
                                }))
                            })), $elm$core$Platform$Cmd$none);
                        } else break _v13$14;
                    case 'Resize':
                        return _Utils_Tuple2(model, $author$project$Main$getElementPosition);
                    case 'ZoomMsg':
                        var zoomMsg = msg.a;
                        return _Utils_Tuple2(toEditor(_Utils_update(editorModel, {
                            viewEditor: $author$project$Main$Ready(_Utils_update(state, {
                                zoom: A2($gampleman$elm_visualization$Zoom$update, zoomMsg, state.zoom)
                            }))
                        })), $elm$core$Platform$Cmd$none);
                    case 'DragViewElementStart':
                        var viewElementKey = msg.a;
                        var xy = msg.b;
                        var selectedElementKeys = A2($elm$core$List$map, $elm$core$Tuple$first, $author$project$Main$getSelectedElementKeysAndDeltas(state.selectedItems));
                        var isWithinAlreadySelected = A2($elm$core$List$member, viewElementKey, selectedElementKeys);
                        var currentModel = editorModel;
                        var elementsOfCurrentView = $author$project$Domain$getViewElementsOfCurrentView(A2($author$project$Domain$getCurrentView, currentModel.selectedView, currentModel.monacoValue.present.views));
                        var _v14 = A3($author$project$Main$shiftPosition, state.zoom, _Utils_Tuple2(state.element.x, state.element.y), xy);
                        var shiftedStartX = _v14.a;
                        var shiftedStartY = _v14.b;
                        var updatedSelectedItems = $elm$core$List$isEmpty(state.selectedItems) || !isWithinAlreadySelected ? $elm$core$List$singleton(A2($author$project$Main$SelectedItem, $author$project$Domain$ElementKey(viewElementKey), A2($elm$core$Maybe$map, function(ve) {
                            return _Utils_Tuple2(shiftedStartX - ve.x, shiftedStartY - ve.y);
                        }, A2($author$project$Domain$getElement, viewElementKey, elementsOfCurrentView)))) : A3($author$project$Main$updateSelectedItemsDeltas, elementsOfCurrentView, _Utils_Tuple2(shiftedStartX, shiftedStartY), state.selectedItems);
                        return _Utils_Tuple2(toEditor(_Utils_update(editorModel, {
                            monacoValue: A2($elm_community$undo_redo$UndoList$new, editorModel.monacoValue.present, editorModel.monacoValue),
                            viewEditor: $author$project$Main$Ready(_Utils_update(state, {
                                drag: $elm$core$Maybe$Just({
                                    current: xy,
                                    start: xy
                                }),
                                selectedItems: updatedSelectedItems
                            }))
                        })), $elm$core$Platform$Cmd$none);
                    case 'DragPointStart':
                        var viewRelationPointKey = msg.a;
                        var xy = msg.b;
                        var selectedPointKeys = A2($elm$core$List$map, $elm$core$Tuple$first, $author$project$Main$getSelectedPointKeysAndDeltas(state.selectedItems));
                        var isWithinAlreadySelected = A2($elm$core$List$member, viewRelationPointKey, selectedPointKeys);
                        var currentModel = editorModel;
                        var elementsOfCurrentView = $author$project$Domain$getViewElementsOfCurrentView(A2($author$project$Domain$getCurrentView, currentModel.selectedView, currentModel.monacoValue.present.views));
                        var _v15 = A3($author$project$Main$shiftPosition, state.zoom, _Utils_Tuple2(state.element.x, state.element.y), xy);
                        var shiftedStartX = _v15.a;
                        var shiftedStartY = _v15.b;
                        var _v16 = viewRelationPointKey;
                        var viewElementKey = _v16.a;
                        var relation = _v16.b;
                        var pointIndex = _v16.c;
                        var updatedSelectedItems = $elm$core$List$isEmpty(state.selectedItems) || !isWithinAlreadySelected ? $elm$core$List$singleton(A2($author$project$Main$SelectedItem, $author$project$Domain$PointKey(viewRelationPointKey), A2($elm$core$Maybe$map, function(tp) {
                            return _Utils_Tuple2(shiftedStartX - tp.x, shiftedStartY - tp.y);
                        }, A2($author$project$Domain$getPoint, pointIndex, A2($author$project$Domain$getRelationPoints, relation, A2($author$project$Domain$getElement, viewElementKey, elementsOfCurrentView)))))) : A3($author$project$Main$updateSelectedItemsDeltas, elementsOfCurrentView, _Utils_Tuple2(shiftedStartX, shiftedStartY), state.selectedItems);
                        return _Utils_Tuple2(toEditor(_Utils_update(editorModel, {
                            monacoValue: A2($elm_community$undo_redo$UndoList$new, editorModel.monacoValue.present, editorModel.monacoValue),
                            viewEditor: $author$project$Main$Ready(_Utils_update(state, {
                                drag: $elm$core$Maybe$Just({
                                    current: xy,
                                    start: xy
                                }),
                                selectedItems: updatedSelectedItems
                            }))
                        })), $elm$core$Platform$Cmd$none);
                    case 'RemovePoint':
                        var _v17 = msg.a;
                        var viewElementKey = _v17.a;
                        var relation = _v17.b;
                        var pointIndex = _v17.c;
                        var removePointMessage = $author$project$JsInterop$removePoint($author$project$JsInterop$encodeRemovePoint(A4($author$project$JsInterop$RemovePointMessage, editorModel.selectedView, viewElementKey, relation, pointIndex)));
                        var removePointAtIndex = function(list) {
                            return _Utils_ap(A2($elm$core$List$take, pointIndex, list), A2($elm$core$List$drop, pointIndex + 1, list));
                        };
                        var updatedViews = A3($author$project$Domain$updateElementsInViews, editorModel.selectedView, editorModel.monacoValue.present.views, A2($author$project$Domain$updateRelationsInElements, viewElementKey, A2($author$project$Domain$updatePointsInRelations, relation, removePointAtIndex)));
                        var currentMonacoValue1 = editorModel.monacoValue.present;
                        var updatedPresentMonacoValue = _Utils_update(currentMonacoValue1, {
                            views: updatedViews
                        });
                        return _Utils_Tuple2(toEditor(_Utils_update(editorModel, {
                            monacoValue: A2($elm_community$undo_redo$UndoList$new, updatedPresentMonacoValue, editorModel.monacoValue)
                        })), removePointMessage);
                    case 'ClickEdgeStart':
                        var _v18 = msg.a;
                        var viewElementKey = _v18.a;
                        var relation = _v18.b;
                        var xy = msg.b;
                        var spxy = A3($author$project$Main$shiftPosition, state.zoom, _Utils_Tuple2(state.element.x, state.element.y), xy);
                        var currentView = A2($author$project$Domain$getCurrentView, editorModel.selectedView, editorModel.monacoValue.present.views);
                        var sourceXY = A2($elm$core$Maybe$map, function(s) {
                            return _Utils_Tuple2(s.x, s.y);
                        }, A2($author$project$Domain$getElement, viewElementKey, $author$project$Domain$getViewElementsOfCurrentView(currentView)));
                        var targetXY = A2($elm$core$Maybe$map, function(s) {
                            return _Utils_Tuple2(s.x, s.y);
                        }, A2($author$project$Domain$getElement, relation.a, $author$project$Domain$getViewElementsOfCurrentView(currentView)));
                        var _v19 = _Utils_Tuple3(sourceXY, targetXY, currentView);
                        if (_v19.a.$ === 'Just' && _v19.b.$ === 'Just' && _v19.c.$ === 'Just') {
                            var sxy = _v19.a.a;
                            var txy = _v19.b.a;
                            var cv = _v19.c.a;
                            var currentMonacoValue1 = editorModel.monacoValue.present;
                            var allPoints = A2($elm$core$List$cons, sxy, _Utils_ap(A2($author$project$Domain$getViewRelationPoints, _Utils_Tuple2(viewElementKey, relation), cv), _List_fromArray([
                                txy
                            ])));
                            var _v20 = A3($elm$core$List$foldr, function(currentPoint) {
                                return function(_v22) {
                                    var previousPoint = _v22.a;
                                    var _v23 = _v22.b;
                                    var insertAfterPoint = _v23.a;
                                    var val = _v23.b;
                                    var z = A2($author$project$Main$distanceToLine, spxy, _Utils_Tuple2(currentPoint, previousPoint));
                                    var _v24 = A2($author$project$Elements$extendPoints, currentPoint, previousPoint);
                                    var extendedA = _v24.a;
                                    var extendedPrev = _v24.b;
                                    return !$elm$core$Basics$isNaN(z) && A2($author$project$Main$betweenPoints, spxy, _Utils_Tuple2(extendedA, extendedPrev)) && _Utils_cmp(z, val) < 0 ? _Utils_Tuple2(currentPoint, _Utils_Tuple2(currentPoint, z)) : _Utils_Tuple2(currentPoint, _Utils_Tuple2(insertAfterPoint, val));
                                };
                            }, _Utils_Tuple2(txy, _Utils_Tuple2(txy, $elm_community$basics_extra$Basics$Extra$maxSafeInteger)), allPoints);
                            var _v21 = _v20.b;
                            var insertAfterValue = _v21.a;
                            var _v25 = A3($elm$core$List$foldr, function(a) {
                                return function(_v26) {
                                    var b = _v26.a;
                                    var i = _v26.b;
                                    var found = _v26.c;
                                    return _Utils_eq(insertAfterValue, a) ? _Utils_Tuple3(A2($elm$core$List$cons, a, A2($elm$core$List$cons, spxy, b)), i, true) : _Utils_Tuple3(A2($elm$core$List$cons, a, b), found ? i : i + 1, found);
                                };
                            }, _Utils_Tuple3(_List_Nil, 0, false), allPoints);
                            var listWithNewPoint = _v25.a;
                            var indexOfNewPoint = _v25.b;
                            var updatedList = A2($author$project$Main$trimList, 1, listWithNewPoint);
                            var addPointMessage = $author$project$JsInterop$addPoint($author$project$JsInterop$encodePointMessage(A5($author$project$JsInterop$PointMessage, editorModel.selectedView, viewElementKey, relation, $elm$core$List$length(updatedList) - indexOfNewPoint, spxy)));
                            var updatedPoints = function(_v27) {
                                return A2($elm$core$List$map, function(_v28) {
                                    var x = _v28.a;
                                    var y = _v28.b;
                                    return A2($author$project$Domain$ViewRelationPoint, x, y);
                                }, updatedList);
                            };
                            var updatedViewsValue = A3($author$project$Domain$updateElementsInViews, editorModel.selectedView, editorModel.monacoValue.present.views, A2($author$project$Domain$updateRelationsInElements, viewElementKey, A2($author$project$Domain$updatePointsInRelations, relation, updatedPoints)));
                            var updatedPresentMonacoValue = _Utils_update(currentMonacoValue1, {
                                views: updatedViewsValue
                            });
                            return _Utils_Tuple2(toEditor(_Utils_update(editorModel, {
                                monacoValue: A2($elm_community$undo_redo$UndoList$new, updatedPresentMonacoValue, editorModel.monacoValue)
                            })), addPointMessage);
                        } else return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
                    case 'MouseMove':
                        var xy = msg.a;
                        var updatedViews = function() {
                            var _v29 = _Utils_Tuple2(state.brush, state.drag);
                            if (_v29.a.$ === 'Nothing' && _v29.b.$ === 'Just') {
                                var _v30 = _v29.a;
                                return A3($author$project$Domain$updateElementsInViews, editorModel.selectedView, editorModel.monacoValue.present.views, A3($author$project$Main$updateElementAndPointPosition, state.selectedItems, xy, state));
                            } else return editorModel.monacoValue.present.views;
                        }();
                        var updatedPresentMonacoValue = function(a) {
                            return _Utils_update(a, {
                                views: updatedViews
                            });
                        };
                        var selectedView = A2($author$project$Domain$getCurrentView, editorModel.selectedView, editorModel.monacoValue.present.views);
                        var updatedViewEditor = A3($author$project$Main$handleMouseMove, xy, state, selectedView);
                        return _Utils_Tuple2(toEditor(_Utils_update(editorModel, {
                            monacoValue: A2($elm_community$undo_redo$UndoList$mapPresent, updatedPresentMonacoValue, editorModel.monacoValue),
                            viewEditor: updatedViewEditor
                        })), $elm$core$Platform$Cmd$none);
                    case 'MouseMoveEnd':
                        var _v31 = state.brush;
                        if (_v31.$ === 'Just') return _Utils_Tuple2(toEditor(_Utils_update(editorModel, {
                            viewEditor: $author$project$Main$Ready(_Utils_update(state, {
                                brush: $elm$core$Maybe$Nothing
                            }))
                        })), $elm$core$Platform$Cmd$none);
                        else {
                            var _v32 = state.drag;
                            if (_v32.$ === 'Just') return _Utils_Tuple2(toEditor(_Utils_update(editorModel, {
                                viewEditor: $author$project$Main$Ready(_Utils_update(state, {
                                    drag: $elm$core$Maybe$Nothing,
                                    selectedItems: _List_Nil
                                }))
                            })), A3($author$project$Main$updateMonacoValues, editorModel.selectedView, editorModel.monacoValue.present.views, state.selectedItems));
                            else return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
                        }
                    case 'PaneMsg':
                        var paneMsg = msg.a;
                        return _Utils_Tuple2(toEditor(_Utils_update(editorModel, {
                            pane: A2($whale9490$elm_split_pane$SplitPane$update, paneMsg, editorModel.pane)
                        })), $elm$core$Platform$Cmd$none);
                    default:
                        break _v13$14;
                }
                return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
            }
        }
        var _v4 = _v0.b;
        return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
    });
    var $elm$html$Html$div = _VirtualDom_node('div');
    var $elm$virtual_dom$VirtualDom$attribute = F2(function(key, value) {
        return A2(_VirtualDom_attribute, _VirtualDom_noOnOrFormAction(key), _VirtualDom_noJavaScriptOrHtmlUri(value));
    });
    var $elm_community$typed_svg$TypedSvg$Core$attribute = $elm$virtual_dom$VirtualDom$attribute;
    var $elm_community$typed_svg$TypedSvg$Attributes$id = $elm_community$typed_svg$TypedSvg$Core$attribute('id');
    var $mdgriffith$elm_ui$Internal$Model$Unkeyed = function(a) {
        return {
            $: 'Unkeyed',
            a: a
        };
    };
    var $mdgriffith$elm_ui$Internal$Model$AsColumn = {
        $: 'AsColumn'
    };
    var $mdgriffith$elm_ui$Internal$Model$asColumn = $mdgriffith$elm_ui$Internal$Model$AsColumn;
    var $mdgriffith$elm_ui$Internal$Style$classes = {
        above: 'a',
        active: 'atv',
        alignBottom: 'ab',
        alignCenterX: 'cx',
        alignCenterY: 'cy',
        alignContainerBottom: 'acb',
        alignContainerCenterX: 'accx',
        alignContainerCenterY: 'accy',
        alignContainerRight: 'acr',
        alignLeft: 'al',
        alignRight: 'ar',
        alignTop: 'at',
        alignedHorizontally: 'ah',
        alignedVertically: 'av',
        any: 's',
        behind: 'bh',
        below: 'b',
        bold: 'w7',
        borderDashed: 'bd',
        borderDotted: 'bdt',
        borderNone: 'bn',
        borderSolid: 'bs',
        capturePointerEvents: 'cpe',
        clip: 'cp',
        clipX: 'cpx',
        clipY: 'cpy',
        column: 'c',
        container: 'ctr',
        contentBottom: 'cb',
        contentCenterX: 'ccx',
        contentCenterY: 'ccy',
        contentLeft: 'cl',
        contentRight: 'cr',
        contentTop: 'ct',
        cursorPointer: 'cptr',
        cursorText: 'ctxt',
        focus: 'fcs',
        focusedWithin: 'focus-within',
        fullSize: 'fs',
        grid: 'g',
        hasBehind: 'hbh',
        heightContent: 'hc',
        heightExact: 'he',
        heightFill: 'hf',
        heightFillPortion: 'hfp',
        hover: 'hv',
        imageContainer: 'ic',
        inFront: 'fr',
        inputLabel: 'lbl',
        inputMultiline: 'iml',
        inputMultilineFiller: 'imlf',
        inputMultilineParent: 'imlp',
        inputMultilineWrapper: 'implw',
        inputText: 'it',
        italic: 'i',
        link: 'lnk',
        nearby: 'nb',
        noTextSelection: 'notxt',
        onLeft: 'ol',
        onRight: 'or',
        opaque: 'oq',
        overflowHidden: 'oh',
        page: 'pg',
        paragraph: 'p',
        passPointerEvents: 'ppe',
        root: 'ui',
        row: 'r',
        scrollbars: 'sb',
        scrollbarsX: 'sbx',
        scrollbarsY: 'sby',
        seButton: 'sbt',
        single: 'e',
        sizeByCapital: 'cap',
        spaceEvenly: 'sev',
        strike: 'sk',
        text: 't',
        textCenter: 'tc',
        textExtraBold: 'w8',
        textExtraLight: 'w2',
        textHeavy: 'w9',
        textJustify: 'tj',
        textJustifyAll: 'tja',
        textLeft: 'tl',
        textLight: 'w3',
        textMedium: 'w5',
        textNormalWeight: 'w4',
        textRight: 'tr',
        textSemiBold: 'w6',
        textThin: 'w1',
        textUnitalicized: 'tun',
        transition: 'ts',
        transparent: 'clr',
        underline: 'u',
        widthContent: 'wc',
        widthExact: 'we',
        widthFill: 'wf',
        widthFillPortion: 'wfp',
        wrapped: 'wrp'
    };
    var $mdgriffith$elm_ui$Internal$Model$Generic = {
        $: 'Generic'
    };
    var $mdgriffith$elm_ui$Internal$Model$div = $mdgriffith$elm_ui$Internal$Model$Generic;
    var $mdgriffith$elm_ui$Internal$Model$NoNearbyChildren = {
        $: 'NoNearbyChildren'
    };
    var $mdgriffith$elm_ui$Internal$Model$columnClass = $mdgriffith$elm_ui$Internal$Style$classes.any + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.column);
    var $mdgriffith$elm_ui$Internal$Model$gridClass = $mdgriffith$elm_ui$Internal$Style$classes.any + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.grid);
    var $mdgriffith$elm_ui$Internal$Model$pageClass = $mdgriffith$elm_ui$Internal$Style$classes.any + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.page);
    var $mdgriffith$elm_ui$Internal$Model$paragraphClass = $mdgriffith$elm_ui$Internal$Style$classes.any + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.paragraph);
    var $mdgriffith$elm_ui$Internal$Model$rowClass = $mdgriffith$elm_ui$Internal$Style$classes.any + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.row);
    var $mdgriffith$elm_ui$Internal$Model$singleClass = $mdgriffith$elm_ui$Internal$Style$classes.any + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.single);
    var $mdgriffith$elm_ui$Internal$Model$contextClasses = function(context) {
        switch(context.$){
            case 'AsRow':
                return $mdgriffith$elm_ui$Internal$Model$rowClass;
            case 'AsColumn':
                return $mdgriffith$elm_ui$Internal$Model$columnClass;
            case 'AsEl':
                return $mdgriffith$elm_ui$Internal$Model$singleClass;
            case 'AsGrid':
                return $mdgriffith$elm_ui$Internal$Model$gridClass;
            case 'AsParagraph':
                return $mdgriffith$elm_ui$Internal$Model$paragraphClass;
            default:
                return $mdgriffith$elm_ui$Internal$Model$pageClass;
        }
    };
    var $mdgriffith$elm_ui$Internal$Model$Keyed = function(a) {
        return {
            $: 'Keyed',
            a: a
        };
    };
    var $mdgriffith$elm_ui$Internal$Model$NoStyleSheet = {
        $: 'NoStyleSheet'
    };
    var $mdgriffith$elm_ui$Internal$Model$Styled = function(a) {
        return {
            $: 'Styled',
            a: a
        };
    };
    var $mdgriffith$elm_ui$Internal$Model$Unstyled = function(a) {
        return {
            $: 'Unstyled',
            a: a
        };
    };
    var $mdgriffith$elm_ui$Internal$Model$addChildren = F2(function(existing, nearbyChildren) {
        switch(nearbyChildren.$){
            case 'NoNearbyChildren':
                return existing;
            case 'ChildrenBehind':
                var behind = nearbyChildren.a;
                return _Utils_ap(behind, existing);
            case 'ChildrenInFront':
                var inFront = nearbyChildren.a;
                return _Utils_ap(existing, inFront);
            default:
                var behind = nearbyChildren.a;
                var inFront = nearbyChildren.b;
                return _Utils_ap(behind, _Utils_ap(existing, inFront));
        }
    });
    var $mdgriffith$elm_ui$Internal$Model$addKeyedChildren = F3(function(key, existing, nearbyChildren) {
        switch(nearbyChildren.$){
            case 'NoNearbyChildren':
                return existing;
            case 'ChildrenBehind':
                var behind = nearbyChildren.a;
                return _Utils_ap(A2($elm$core$List$map, function(x) {
                    return _Utils_Tuple2(key, x);
                }, behind), existing);
            case 'ChildrenInFront':
                var inFront = nearbyChildren.a;
                return _Utils_ap(existing, A2($elm$core$List$map, function(x) {
                    return _Utils_Tuple2(key, x);
                }, inFront));
            default:
                var behind = nearbyChildren.a;
                var inFront = nearbyChildren.b;
                return _Utils_ap(A2($elm$core$List$map, function(x) {
                    return _Utils_Tuple2(key, x);
                }, behind), _Utils_ap(existing, A2($elm$core$List$map, function(x) {
                    return _Utils_Tuple2(key, x);
                }, inFront)));
        }
    });
    var $mdgriffith$elm_ui$Internal$Model$AsEl = {
        $: 'AsEl'
    };
    var $mdgriffith$elm_ui$Internal$Model$asEl = $mdgriffith$elm_ui$Internal$Model$AsEl;
    var $mdgriffith$elm_ui$Internal$Model$AsParagraph = {
        $: 'AsParagraph'
    };
    var $mdgriffith$elm_ui$Internal$Model$asParagraph = $mdgriffith$elm_ui$Internal$Model$AsParagraph;
    var $mdgriffith$elm_ui$Internal$Flag$Flag = function(a) {
        return {
            $: 'Flag',
            a: a
        };
    };
    var $mdgriffith$elm_ui$Internal$Flag$Second = function(a) {
        return {
            $: 'Second',
            a: a
        };
    };
    var $elm$core$Bitwise$shiftLeftBy = _Bitwise_shiftLeftBy;
    var $mdgriffith$elm_ui$Internal$Flag$flag = function(i) {
        return i > 31 ? $mdgriffith$elm_ui$Internal$Flag$Second(1 << i - 32) : $mdgriffith$elm_ui$Internal$Flag$Flag(1 << i);
    };
    var $mdgriffith$elm_ui$Internal$Flag$alignBottom = $mdgriffith$elm_ui$Internal$Flag$flag(41);
    var $mdgriffith$elm_ui$Internal$Flag$alignRight = $mdgriffith$elm_ui$Internal$Flag$flag(40);
    var $mdgriffith$elm_ui$Internal$Flag$centerX = $mdgriffith$elm_ui$Internal$Flag$flag(42);
    var $mdgriffith$elm_ui$Internal$Flag$centerY = $mdgriffith$elm_ui$Internal$Flag$flag(43);
    var $elm$html$Html$Attributes$stringProperty = F2(function(key, string) {
        return A2(_VirtualDom_property, key, $elm$json$Json$Encode$string(string));
    });
    var $elm$html$Html$Attributes$class = $elm$html$Html$Attributes$stringProperty('className');
    var $mdgriffith$elm_ui$Internal$Model$lengthClassName = function(x) {
        switch(x.$){
            case 'Px':
                var px = x.a;
                return $elm$core$String$fromInt(px) + 'px';
            case 'Content':
                return 'auto';
            case 'Fill':
                var i = x.a;
                return $elm$core$String$fromInt(i) + 'fr';
            case 'Min':
                var min = x.a;
                var len = x.b;
                return 'min' + ($elm$core$String$fromInt(min) + $mdgriffith$elm_ui$Internal$Model$lengthClassName(len));
            default:
                var max = x.a;
                var len = x.b;
                return 'max' + ($elm$core$String$fromInt(max) + $mdgriffith$elm_ui$Internal$Model$lengthClassName(len));
        }
    };
    var $elm$core$Basics$round = _Basics_round;
    var $mdgriffith$elm_ui$Internal$Model$floatClass = function(x) {
        return $elm$core$String$fromInt($elm$core$Basics$round(x * 255));
    };
    var $mdgriffith$elm_ui$Internal$Model$transformClass = function(transform) {
        switch(transform.$){
            case 'Untransformed':
                return $elm$core$Maybe$Nothing;
            case 'Moved':
                var _v1 = transform.a;
                var x = _v1.a;
                var y = _v1.b;
                var z = _v1.c;
                return $elm$core$Maybe$Just('mv-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(x) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(y) + ('-' + $mdgriffith$elm_ui$Internal$Model$floatClass(z))))));
            default:
                var _v2 = transform.a;
                var tx = _v2.a;
                var ty = _v2.b;
                var tz = _v2.c;
                var _v3 = transform.b;
                var sx = _v3.a;
                var sy = _v3.b;
                var sz = _v3.c;
                var _v4 = transform.c;
                var ox = _v4.a;
                var oy = _v4.b;
                var oz = _v4.c;
                var angle = transform.d;
                return $elm$core$Maybe$Just('tfrm-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(tx) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(ty) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(tz) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(sx) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(sy) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(sz) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(ox) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(oy) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(oz) + ('-' + $mdgriffith$elm_ui$Internal$Model$floatClass(angle))))))))))))))))))));
        }
    };
    var $mdgriffith$elm_ui$Internal$Model$getStyleName = function(style) {
        switch(style.$){
            case 'Shadows':
                var name = style.a;
                return name;
            case 'Transparency':
                var name = style.a;
                var o = style.b;
                return name;
            case 'Style':
                var _class = style.a;
                return _class;
            case 'FontFamily':
                var name = style.a;
                return name;
            case 'FontSize':
                var i = style.a;
                return 'font-size-' + $elm$core$String$fromInt(i);
            case 'Single':
                var _class = style.a;
                return _class;
            case 'Colored':
                var _class = style.a;
                return _class;
            case 'SpacingStyle':
                var cls = style.a;
                var x = style.b;
                var y = style.c;
                return cls;
            case 'PaddingStyle':
                var cls = style.a;
                var top = style.b;
                var right = style.c;
                var bottom = style.d;
                var left = style.e;
                return cls;
            case 'BorderWidth':
                var cls = style.a;
                var top = style.b;
                var right = style.c;
                var bottom = style.d;
                var left = style.e;
                return cls;
            case 'GridTemplateStyle':
                var template = style.a;
                return 'grid-rows-' + (A2($elm$core$String$join, '-', A2($elm$core$List$map, $mdgriffith$elm_ui$Internal$Model$lengthClassName, template.rows)) + ('-cols-' + (A2($elm$core$String$join, '-', A2($elm$core$List$map, $mdgriffith$elm_ui$Internal$Model$lengthClassName, template.columns)) + ('-space-x-' + ($mdgriffith$elm_ui$Internal$Model$lengthClassName(template.spacing.a) + ('-space-y-' + $mdgriffith$elm_ui$Internal$Model$lengthClassName(template.spacing.b)))))));
            case 'GridPosition':
                var pos = style.a;
                return 'gp grid-pos-' + ($elm$core$String$fromInt(pos.row) + ('-' + ($elm$core$String$fromInt(pos.col) + ('-' + ($elm$core$String$fromInt(pos.width) + ('-' + $elm$core$String$fromInt(pos.height)))))));
            case 'PseudoSelector':
                var selector = style.a;
                var subStyle = style.b;
                var name = function() {
                    switch(selector.$){
                        case 'Focus':
                            return 'fs';
                        case 'Hover':
                            return 'hv';
                        default:
                            return 'act';
                    }
                }();
                return A2($elm$core$String$join, ' ', A2($elm$core$List$map, function(sty) {
                    var _v1 = $mdgriffith$elm_ui$Internal$Model$getStyleName(sty);
                    if (_v1 === '') return '';
                    else {
                        var styleName = _v1;
                        return styleName + ('-' + name);
                    }
                }, subStyle));
            default:
                var x = style.a;
                return A2($elm$core$Maybe$withDefault, '', $mdgriffith$elm_ui$Internal$Model$transformClass(x));
        }
    };
    var $elm$core$Dict$member = F2(function(key, dict) {
        var _v0 = A2($elm$core$Dict$get, key, dict);
        if (_v0.$ === 'Just') return true;
        else return false;
    });
    var $elm$core$Set$member = F2(function(key, _v0) {
        var dict = _v0.a;
        return A2($elm$core$Dict$member, key, dict);
    });
    var $mdgriffith$elm_ui$Internal$Model$reduceStyles = F2(function(style, nevermind) {
        var cache = nevermind.a;
        var existing = nevermind.b;
        var styleName = $mdgriffith$elm_ui$Internal$Model$getStyleName(style);
        return A2($elm$core$Set$member, styleName, cache) ? nevermind : _Utils_Tuple2(A2($elm$core$Set$insert, styleName, cache), A2($elm$core$List$cons, style, existing));
    });
    var $mdgriffith$elm_ui$Internal$Model$Property = F2(function(a, b) {
        return {
            $: 'Property',
            a: a,
            b: b
        };
    });
    var $mdgriffith$elm_ui$Internal$Model$Style = F2(function(a, b) {
        return {
            $: 'Style',
            a: a,
            b: b
        };
    });
    var $mdgriffith$elm_ui$Internal$Style$dot = function(c) {
        return '.' + c;
    };
    var $mdgriffith$elm_ui$Internal$Model$formatColor = function(_v0) {
        var red = _v0.a;
        var green = _v0.b;
        var blue = _v0.c;
        var alpha = _v0.d;
        return 'rgba(' + ($elm$core$String$fromInt($elm$core$Basics$round(red * 255)) + (',' + $elm$core$String$fromInt($elm$core$Basics$round(green * 255)) + (',' + $elm$core$String$fromInt($elm$core$Basics$round(blue * 255)) + (',' + ($elm$core$String$fromFloat(alpha) + ')')))));
    };
    var $mdgriffith$elm_ui$Internal$Model$formatBoxShadow = function(shadow) {
        return A2($elm$core$String$join, ' ', A2($elm$core$List$filterMap, $elm$core$Basics$identity, _List_fromArray([
            shadow.inset ? $elm$core$Maybe$Just('inset') : $elm$core$Maybe$Nothing,
            $elm$core$Maybe$Just($elm$core$String$fromFloat(shadow.offset.a) + 'px'),
            $elm$core$Maybe$Just($elm$core$String$fromFloat(shadow.offset.b) + 'px'),
            $elm$core$Maybe$Just($elm$core$String$fromFloat(shadow.blur) + 'px'),
            $elm$core$Maybe$Just($elm$core$String$fromFloat(shadow.size) + 'px'),
            $elm$core$Maybe$Just($mdgriffith$elm_ui$Internal$Model$formatColor(shadow.color))
        ])));
    };
    var $elm$core$Tuple$mapFirst = F2(function(func, _v0) {
        var x = _v0.a;
        var y = _v0.b;
        return _Utils_Tuple2(func(x), y);
    });
    var $elm$core$Tuple$mapSecond = F2(function(func, _v0) {
        var x = _v0.a;
        var y = _v0.b;
        return _Utils_Tuple2(x, func(y));
    });
    var $mdgriffith$elm_ui$Internal$Model$renderFocusStyle = function(focus) {
        return _List_fromArray([
            A2($mdgriffith$elm_ui$Internal$Model$Style, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.focusedWithin) + ':focus-within', A2($elm$core$List$filterMap, $elm$core$Basics$identity, _List_fromArray([
                A2($elm$core$Maybe$map, function(color) {
                    return A2($mdgriffith$elm_ui$Internal$Model$Property, 'border-color', $mdgriffith$elm_ui$Internal$Model$formatColor(color));
                }, focus.borderColor),
                A2($elm$core$Maybe$map, function(color) {
                    return A2($mdgriffith$elm_ui$Internal$Model$Property, 'background-color', $mdgriffith$elm_ui$Internal$Model$formatColor(color));
                }, focus.backgroundColor),
                A2($elm$core$Maybe$map, function(shadow) {
                    return A2($mdgriffith$elm_ui$Internal$Model$Property, 'box-shadow', $mdgriffith$elm_ui$Internal$Model$formatBoxShadow({
                        blur: shadow.blur,
                        color: shadow.color,
                        inset: false,
                        offset: A2($elm$core$Tuple$mapSecond, $elm$core$Basics$toFloat, A2($elm$core$Tuple$mapFirst, $elm$core$Basics$toFloat, shadow.offset)),
                        size: shadow.size
                    }));
                }, focus.shadow),
                $elm$core$Maybe$Just(A2($mdgriffith$elm_ui$Internal$Model$Property, 'outline', 'none'))
            ]))),
            A2($mdgriffith$elm_ui$Internal$Model$Style, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any) + ':focus .focusable, ' + ($mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any) + '.focusable:focus, ' + ('.ui-slide-bar:focus + ' + ($mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any) + ' .focusable-thumb'))), A2($elm$core$List$filterMap, $elm$core$Basics$identity, _List_fromArray([
                A2($elm$core$Maybe$map, function(color) {
                    return A2($mdgriffith$elm_ui$Internal$Model$Property, 'border-color', $mdgriffith$elm_ui$Internal$Model$formatColor(color));
                }, focus.borderColor),
                A2($elm$core$Maybe$map, function(color) {
                    return A2($mdgriffith$elm_ui$Internal$Model$Property, 'background-color', $mdgriffith$elm_ui$Internal$Model$formatColor(color));
                }, focus.backgroundColor),
                A2($elm$core$Maybe$map, function(shadow) {
                    return A2($mdgriffith$elm_ui$Internal$Model$Property, 'box-shadow', $mdgriffith$elm_ui$Internal$Model$formatBoxShadow({
                        blur: shadow.blur,
                        color: shadow.color,
                        inset: false,
                        offset: A2($elm$core$Tuple$mapSecond, $elm$core$Basics$toFloat, A2($elm$core$Tuple$mapFirst, $elm$core$Basics$toFloat, shadow.offset)),
                        size: shadow.size
                    }));
                }, focus.shadow),
                $elm$core$Maybe$Just(A2($mdgriffith$elm_ui$Internal$Model$Property, 'outline', 'none'))
            ])))
        ]);
    };
    var $elm$virtual_dom$VirtualDom$node = function(tag) {
        return _VirtualDom_node(_VirtualDom_noScript(tag));
    };
    var $elm$virtual_dom$VirtualDom$property = F2(function(key, value) {
        return A2(_VirtualDom_property, _VirtualDom_noInnerHtmlOrFormAction(key), _VirtualDom_noJavaScriptOrHtmlUri(value));
    });
    var $mdgriffith$elm_ui$Internal$Style$AllChildren = F2(function(a, b) {
        return {
            $: 'AllChildren',
            a: a,
            b: b
        };
    });
    var $mdgriffith$elm_ui$Internal$Style$Batch = function(a) {
        return {
            $: 'Batch',
            a: a
        };
    };
    var $mdgriffith$elm_ui$Internal$Style$Child = F2(function(a, b) {
        return {
            $: 'Child',
            a: a,
            b: b
        };
    });
    var $mdgriffith$elm_ui$Internal$Style$Class = F2(function(a, b) {
        return {
            $: 'Class',
            a: a,
            b: b
        };
    });
    var $mdgriffith$elm_ui$Internal$Style$Descriptor = F2(function(a, b) {
        return {
            $: 'Descriptor',
            a: a,
            b: b
        };
    });
    var $mdgriffith$elm_ui$Internal$Style$Left = {
        $: 'Left'
    };
    var $mdgriffith$elm_ui$Internal$Style$Prop = F2(function(a, b) {
        return {
            $: 'Prop',
            a: a,
            b: b
        };
    });
    var $mdgriffith$elm_ui$Internal$Style$Right = {
        $: 'Right'
    };
    var $mdgriffith$elm_ui$Internal$Style$Self = function(a) {
        return {
            $: 'Self',
            a: a
        };
    };
    var $mdgriffith$elm_ui$Internal$Style$Supports = F2(function(a, b) {
        return {
            $: 'Supports',
            a: a,
            b: b
        };
    });
    var $mdgriffith$elm_ui$Internal$Style$Content = function(a) {
        return {
            $: 'Content',
            a: a
        };
    };
    var $mdgriffith$elm_ui$Internal$Style$Bottom = {
        $: 'Bottom'
    };
    var $mdgriffith$elm_ui$Internal$Style$CenterX = {
        $: 'CenterX'
    };
    var $mdgriffith$elm_ui$Internal$Style$CenterY = {
        $: 'CenterY'
    };
    var $mdgriffith$elm_ui$Internal$Style$Top = {
        $: 'Top'
    };
    var $mdgriffith$elm_ui$Internal$Style$alignments = _List_fromArray([
        $mdgriffith$elm_ui$Internal$Style$Top,
        $mdgriffith$elm_ui$Internal$Style$Bottom,
        $mdgriffith$elm_ui$Internal$Style$Right,
        $mdgriffith$elm_ui$Internal$Style$Left,
        $mdgriffith$elm_ui$Internal$Style$CenterX,
        $mdgriffith$elm_ui$Internal$Style$CenterY
    ]);
    var $mdgriffith$elm_ui$Internal$Style$contentName = function(desc) {
        switch(desc.a.$){
            case 'Top':
                var _v1 = desc.a;
                return $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.contentTop);
            case 'Bottom':
                var _v2 = desc.a;
                return $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.contentBottom);
            case 'Right':
                var _v3 = desc.a;
                return $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.contentRight);
            case 'Left':
                var _v4 = desc.a;
                return $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.contentLeft);
            case 'CenterX':
                var _v5 = desc.a;
                return $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.contentCenterX);
            default:
                var _v6 = desc.a;
                return $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.contentCenterY);
        }
    };
    var $mdgriffith$elm_ui$Internal$Style$selfName = function(desc) {
        switch(desc.a.$){
            case 'Top':
                var _v1 = desc.a;
                return $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.alignTop);
            case 'Bottom':
                var _v2 = desc.a;
                return $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.alignBottom);
            case 'Right':
                var _v3 = desc.a;
                return $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.alignRight);
            case 'Left':
                var _v4 = desc.a;
                return $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.alignLeft);
            case 'CenterX':
                var _v5 = desc.a;
                return $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.alignCenterX);
            default:
                var _v6 = desc.a;
                return $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.alignCenterY);
        }
    };
    var $mdgriffith$elm_ui$Internal$Style$describeAlignment = function(values) {
        var createDescription = function(alignment) {
            var _v0 = values(alignment);
            var content = _v0.a;
            var indiv = _v0.b;
            return _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$contentName($mdgriffith$elm_ui$Internal$Style$Content(alignment)), content),
                A2($mdgriffith$elm_ui$Internal$Style$Child, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any), _List_fromArray([
                    A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$selfName($mdgriffith$elm_ui$Internal$Style$Self(alignment)), indiv)
                ]))
            ]);
        };
        return $mdgriffith$elm_ui$Internal$Style$Batch(A2($elm$core$List$concatMap, createDescription, $mdgriffith$elm_ui$Internal$Style$alignments));
    };
    var $mdgriffith$elm_ui$Internal$Style$elDescription = _List_fromArray([
        A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'flex'),
        A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-direction', 'column'),
        A2($mdgriffith$elm_ui$Internal$Style$Prop, 'white-space', 'pre'),
        A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.hasBehind), _List_fromArray([
            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'z-index', '0'),
            A2($mdgriffith$elm_ui$Internal$Style$Child, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.behind), _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'z-index', '-1')
            ]))
        ])),
        A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.seButton), _List_fromArray([
            A2($mdgriffith$elm_ui$Internal$Style$Child, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.text), _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.heightFill), _List_fromArray([
                    A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '0')
                ])),
                A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.widthFill), _List_fromArray([
                    A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'auto !important')
                ]))
            ]))
        ])),
        A2($mdgriffith$elm_ui$Internal$Style$Child, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.heightContent), _List_fromArray([
            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', 'auto')
        ])),
        A2($mdgriffith$elm_ui$Internal$Style$Child, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.heightFill), _List_fromArray([
            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '100000')
        ])),
        A2($mdgriffith$elm_ui$Internal$Style$Child, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.widthFill), _List_fromArray([
            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%')
        ])),
        A2($mdgriffith$elm_ui$Internal$Style$Child, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.widthFillPortion), _List_fromArray([
            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%')
        ])),
        A2($mdgriffith$elm_ui$Internal$Style$Child, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.widthContent), _List_fromArray([
            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'flex-start')
        ])),
        $mdgriffith$elm_ui$Internal$Style$describeAlignment(function(alignment) {
            switch(alignment.$){
                case 'Top':
                    return _Utils_Tuple2(_List_fromArray([
                        A2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'flex-start')
                    ]), _List_fromArray([
                        A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-bottom', 'auto !important'),
                        A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-top', '0 !important')
                    ]));
                case 'Bottom':
                    return _Utils_Tuple2(_List_fromArray([
                        A2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'flex-end')
                    ]), _List_fromArray([
                        A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-top', 'auto !important'),
                        A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-bottom', '0 !important')
                    ]));
                case 'Right':
                    return _Utils_Tuple2(_List_fromArray([
                        A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'flex-end')
                    ]), _List_fromArray([
                        A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'flex-end')
                    ]));
                case 'Left':
                    return _Utils_Tuple2(_List_fromArray([
                        A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'flex-start')
                    ]), _List_fromArray([
                        A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'flex-start')
                    ]));
                case 'CenterX':
                    return _Utils_Tuple2(_List_fromArray([
                        A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'center')
                    ]), _List_fromArray([
                        A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'center')
                    ]));
                default:
                    return _Utils_Tuple2(_List_fromArray([
                        A2($mdgriffith$elm_ui$Internal$Style$Child, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any), _List_fromArray([
                            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-top', 'auto'),
                            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-bottom', 'auto')
                        ]))
                    ]), _List_fromArray([
                        A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-top', 'auto !important'),
                        A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-bottom', 'auto !important')
                    ]));
            }
        })
    ]);
    var $mdgriffith$elm_ui$Internal$Style$gridAlignments = function(values) {
        var createDescription = function(alignment) {
            return _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Child, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any), _List_fromArray([
                    A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$selfName($mdgriffith$elm_ui$Internal$Style$Self(alignment)), values(alignment))
                ]))
            ]);
        };
        return $mdgriffith$elm_ui$Internal$Style$Batch(A2($elm$core$List$concatMap, createDescription, $mdgriffith$elm_ui$Internal$Style$alignments));
    };
    var $mdgriffith$elm_ui$Internal$Style$Above = {
        $: 'Above'
    };
    var $mdgriffith$elm_ui$Internal$Style$Behind = {
        $: 'Behind'
    };
    var $mdgriffith$elm_ui$Internal$Style$Below = {
        $: 'Below'
    };
    var $mdgriffith$elm_ui$Internal$Style$OnLeft = {
        $: 'OnLeft'
    };
    var $mdgriffith$elm_ui$Internal$Style$OnRight = {
        $: 'OnRight'
    };
    var $mdgriffith$elm_ui$Internal$Style$Within = {
        $: 'Within'
    };
    var $mdgriffith$elm_ui$Internal$Style$locations = function() {
        var loc = $mdgriffith$elm_ui$Internal$Style$Above;
        var _v0 = function() {
            switch(loc.$){
                case 'Above':
                    return _Utils_Tuple0;
                case 'Below':
                    return _Utils_Tuple0;
                case 'OnRight':
                    return _Utils_Tuple0;
                case 'OnLeft':
                    return _Utils_Tuple0;
                case 'Within':
                    return _Utils_Tuple0;
                default:
                    return _Utils_Tuple0;
            }
        }();
        return _List_fromArray([
            $mdgriffith$elm_ui$Internal$Style$Above,
            $mdgriffith$elm_ui$Internal$Style$Below,
            $mdgriffith$elm_ui$Internal$Style$OnRight,
            $mdgriffith$elm_ui$Internal$Style$OnLeft,
            $mdgriffith$elm_ui$Internal$Style$Within,
            $mdgriffith$elm_ui$Internal$Style$Behind
        ]);
    }();
    var $mdgriffith$elm_ui$Internal$Style$baseSheet = _List_fromArray([
        A2($mdgriffith$elm_ui$Internal$Style$Class, 'html,body', _List_fromArray([
            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', '100%'),
            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'padding', '0'),
            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin', '0')
        ])),
        A2($mdgriffith$elm_ui$Internal$Style$Class, _Utils_ap($mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any), _Utils_ap($mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.single), $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.imageContainer))), _List_fromArray([
            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'block'),
            A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.heightFill), _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Child, 'img', _List_fromArray([
                    A2($mdgriffith$elm_ui$Internal$Style$Prop, 'max-height', '100%'),
                    A2($mdgriffith$elm_ui$Internal$Style$Prop, 'object-fit', 'cover')
                ]))
            ])),
            A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.widthFill), _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Child, 'img', _List_fromArray([
                    A2($mdgriffith$elm_ui$Internal$Style$Prop, 'max-width', '100%'),
                    A2($mdgriffith$elm_ui$Internal$Style$Prop, 'object-fit', 'cover')
                ]))
            ]))
        ])),
        A2($mdgriffith$elm_ui$Internal$Style$Class, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any) + ':focus', _List_fromArray([
            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'outline', 'none')
        ])),
        A2($mdgriffith$elm_ui$Internal$Style$Class, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.root), _List_fromArray([
            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%'),
            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', 'auto'),
            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'min-height', '100%'),
            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'z-index', '0'),
            A2($mdgriffith$elm_ui$Internal$Style$Descriptor, _Utils_ap($mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any), $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.heightFill)), _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', '100%'),
                A2($mdgriffith$elm_ui$Internal$Style$Child, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.heightFill), _List_fromArray([
                    A2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', '100%')
                ]))
            ])),
            A2($mdgriffith$elm_ui$Internal$Style$Child, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.inFront), _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.nearby), _List_fromArray([
                    A2($mdgriffith$elm_ui$Internal$Style$Prop, 'position', 'fixed'),
                    A2($mdgriffith$elm_ui$Internal$Style$Prop, 'z-index', '20')
                ]))
            ]))
        ])),
        A2($mdgriffith$elm_ui$Internal$Style$Class, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.nearby), _List_fromArray([
            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'position', 'relative'),
            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'border', 'none'),
            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'flex'),
            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-direction', 'row'),
            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-basis', 'auto'),
            A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.single), $mdgriffith$elm_ui$Internal$Style$elDescription),
            $mdgriffith$elm_ui$Internal$Style$Batch(function(fn) {
                return A2($elm$core$List$map, fn, $mdgriffith$elm_ui$Internal$Style$locations);
            }(function(loc) {
                switch(loc.$){
                    case 'Above':
                        return A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.above), _List_fromArray([
                            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'position', 'absolute'),
                            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'bottom', '100%'),
                            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'left', '0'),
                            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%'),
                            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'z-index', '20'),
                            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin', '0 !important'),
                            A2($mdgriffith$elm_ui$Internal$Style$Child, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.heightFill), _List_fromArray([
                                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', 'auto')
                            ])),
                            A2($mdgriffith$elm_ui$Internal$Style$Child, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.widthFill), _List_fromArray([
                                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%')
                            ])),
                            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'none'),
                            A2($mdgriffith$elm_ui$Internal$Style$Child, '*', _List_fromArray([
                                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'auto')
                            ]))
                        ]));
                    case 'Below':
                        return A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.below), _List_fromArray([
                            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'position', 'absolute'),
                            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'bottom', '0'),
                            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'left', '0'),
                            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', '0'),
                            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%'),
                            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'z-index', '20'),
                            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin', '0 !important'),
                            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'none'),
                            A2($mdgriffith$elm_ui$Internal$Style$Child, '*', _List_fromArray([
                                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'auto')
                            ])),
                            A2($mdgriffith$elm_ui$Internal$Style$Child, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.heightFill), _List_fromArray([
                                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', 'auto')
                            ]))
                        ]));
                    case 'OnRight':
                        return A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.onRight), _List_fromArray([
                            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'position', 'absolute'),
                            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'left', '100%'),
                            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'top', '0'),
                            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', '100%'),
                            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin', '0 !important'),
                            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'z-index', '20'),
                            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'none'),
                            A2($mdgriffith$elm_ui$Internal$Style$Child, '*', _List_fromArray([
                                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'auto')
                            ]))
                        ]));
                    case 'OnLeft':
                        return A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.onLeft), _List_fromArray([
                            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'position', 'absolute'),
                            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'right', '100%'),
                            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'top', '0'),
                            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', '100%'),
                            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin', '0 !important'),
                            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'z-index', '20'),
                            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'none'),
                            A2($mdgriffith$elm_ui$Internal$Style$Child, '*', _List_fromArray([
                                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'auto')
                            ]))
                        ]));
                    case 'Within':
                        return A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.inFront), _List_fromArray([
                            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'position', 'absolute'),
                            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%'),
                            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', '100%'),
                            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'left', '0'),
                            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'top', '0'),
                            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin', '0 !important'),
                            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'none'),
                            A2($mdgriffith$elm_ui$Internal$Style$Child, '*', _List_fromArray([
                                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'auto')
                            ]))
                        ]));
                    default:
                        return A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.behind), _List_fromArray([
                            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'position', 'absolute'),
                            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%'),
                            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', '100%'),
                            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'left', '0'),
                            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'top', '0'),
                            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin', '0 !important'),
                            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'z-index', '0'),
                            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'none'),
                            A2($mdgriffith$elm_ui$Internal$Style$Child, '*', _List_fromArray([
                                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'auto')
                            ]))
                        ]));
                }
            }))
        ])),
        A2($mdgriffith$elm_ui$Internal$Style$Class, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any), _List_fromArray([
            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'position', 'relative'),
            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'border', 'none'),
            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-shrink', '0'),
            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'flex'),
            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-direction', 'row'),
            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-basis', 'auto'),
            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'resize', 'none'),
            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-feature-settings', 'inherit'),
            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'box-sizing', 'border-box'),
            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin', '0'),
            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'padding', '0'),
            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'border-width', '0'),
            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'border-style', 'solid'),
            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-size', 'inherit'),
            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'color', 'inherit'),
            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-family', 'inherit'),
            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'line-height', '1'),
            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-weight', 'inherit'),
            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-decoration', 'none'),
            A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-style', 'inherit'),
            A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.wrapped), _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-wrap', 'wrap')
            ])),
            A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.noTextSelection), _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Prop, '-moz-user-select', 'none'),
                A2($mdgriffith$elm_ui$Internal$Style$Prop, '-webkit-user-select', 'none'),
                A2($mdgriffith$elm_ui$Internal$Style$Prop, '-ms-user-select', 'none'),
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'user-select', 'none')
            ])),
            A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.cursorPointer), _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'cursor', 'pointer')
            ])),
            A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.cursorText), _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'cursor', 'text')
            ])),
            A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.passPointerEvents), _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'none !important')
            ])),
            A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.capturePointerEvents), _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'auto !important')
            ])),
            A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.transparent), _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'opacity', '0')
            ])),
            A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.opaque), _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'opacity', '1')
            ])),
            A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot(_Utils_ap($mdgriffith$elm_ui$Internal$Style$classes.hover, $mdgriffith$elm_ui$Internal$Style$classes.transparent)) + ':hover', _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'opacity', '0')
            ])),
            A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot(_Utils_ap($mdgriffith$elm_ui$Internal$Style$classes.hover, $mdgriffith$elm_ui$Internal$Style$classes.opaque)) + ':hover', _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'opacity', '1')
            ])),
            A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot(_Utils_ap($mdgriffith$elm_ui$Internal$Style$classes.focus, $mdgriffith$elm_ui$Internal$Style$classes.transparent)) + ':focus', _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'opacity', '0')
            ])),
            A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot(_Utils_ap($mdgriffith$elm_ui$Internal$Style$classes.focus, $mdgriffith$elm_ui$Internal$Style$classes.opaque)) + ':focus', _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'opacity', '1')
            ])),
            A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot(_Utils_ap($mdgriffith$elm_ui$Internal$Style$classes.active, $mdgriffith$elm_ui$Internal$Style$classes.transparent)) + ':active', _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'opacity', '0')
            ])),
            A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot(_Utils_ap($mdgriffith$elm_ui$Internal$Style$classes.active, $mdgriffith$elm_ui$Internal$Style$classes.opaque)) + ':active', _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'opacity', '1')
            ])),
            A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.transition), _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'transition', A2($elm$core$String$join, ', ', A2($elm$core$List$map, function(x) {
                    return x + ' 160ms';
                }, _List_fromArray([
                    'transform',
                    'opacity',
                    'filter',
                    'background-color',
                    'color',
                    'font-size'
                ]))))
            ])),
            A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.scrollbars), _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'overflow', 'auto'),
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-shrink', '1')
            ])),
            A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.scrollbarsX), _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'overflow-x', 'auto'),
                A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.row), _List_fromArray([
                    A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-shrink', '1')
                ]))
            ])),
            A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.scrollbarsY), _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'overflow-y', 'auto'),
                A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.column), _List_fromArray([
                    A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-shrink', '1')
                ])),
                A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.single), _List_fromArray([
                    A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-shrink', '1')
                ]))
            ])),
            A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.clip), _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'overflow', 'hidden')
            ])),
            A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.clipX), _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'overflow-x', 'hidden')
            ])),
            A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.clipY), _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'overflow-y', 'hidden')
            ])),
            A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.widthContent), _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', 'auto')
            ])),
            A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.borderNone), _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'border-width', '0')
            ])),
            A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.borderDashed), _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'border-style', 'dashed')
            ])),
            A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.borderDotted), _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'border-style', 'dotted')
            ])),
            A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.borderSolid), _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'border-style', 'solid')
            ])),
            A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.text), _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'white-space', 'pre'),
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'inline-block')
            ])),
            A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.inputText), _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'line-height', '1.05'),
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'background', 'transparent'),
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-align', 'inherit')
            ])),
            A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.single), $mdgriffith$elm_ui$Internal$Style$elDescription),
            A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.row), _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'flex'),
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-direction', 'row'),
                A2($mdgriffith$elm_ui$Internal$Style$Child, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any), _List_fromArray([
                    A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-basis', '0%'),
                    A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.widthExact), _List_fromArray([
                        A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-basis', 'auto')
                    ])),
                    A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.link), _List_fromArray([
                        A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-basis', 'auto')
                    ]))
                ])),
                A2($mdgriffith$elm_ui$Internal$Style$Child, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.heightFill), _List_fromArray([
                    A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'stretch !important')
                ])),
                A2($mdgriffith$elm_ui$Internal$Style$Child, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.heightFillPortion), _List_fromArray([
                    A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'stretch !important')
                ])),
                A2($mdgriffith$elm_ui$Internal$Style$Child, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.widthFill), _List_fromArray([
                    A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '100000')
                ])),
                A2($mdgriffith$elm_ui$Internal$Style$Child, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.container), _List_fromArray([
                    A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '0'),
                    A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-basis', 'auto'),
                    A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'stretch')
                ])),
                A2($mdgriffith$elm_ui$Internal$Style$Child, 'u:first-of-type.' + $mdgriffith$elm_ui$Internal$Style$classes.alignContainerRight, _List_fromArray([
                    A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '1')
                ])),
                A2($mdgriffith$elm_ui$Internal$Style$Child, 's:first-of-type.' + $mdgriffith$elm_ui$Internal$Style$classes.alignContainerCenterX, _List_fromArray([
                    A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '1'),
                    A2($mdgriffith$elm_ui$Internal$Style$Child, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.alignCenterX), _List_fromArray([
                        A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-left', 'auto !important')
                    ]))
                ])),
                A2($mdgriffith$elm_ui$Internal$Style$Child, 's:last-of-type.' + $mdgriffith$elm_ui$Internal$Style$classes.alignContainerCenterX, _List_fromArray([
                    A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '1'),
                    A2($mdgriffith$elm_ui$Internal$Style$Child, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.alignCenterX), _List_fromArray([
                        A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-right', 'auto !important')
                    ]))
                ])),
                A2($mdgriffith$elm_ui$Internal$Style$Child, 's:only-of-type.' + $mdgriffith$elm_ui$Internal$Style$classes.alignContainerCenterX, _List_fromArray([
                    A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '1'),
                    A2($mdgriffith$elm_ui$Internal$Style$Child, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.alignCenterY), _List_fromArray([
                        A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-top', 'auto !important'),
                        A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-bottom', 'auto !important')
                    ]))
                ])),
                A2($mdgriffith$elm_ui$Internal$Style$Child, 's:last-of-type.' + ($mdgriffith$elm_ui$Internal$Style$classes.alignContainerCenterX + ' ~ u'), _List_fromArray([
                    A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '0')
                ])),
                A2($mdgriffith$elm_ui$Internal$Style$Child, 'u:first-of-type.' + ($mdgriffith$elm_ui$Internal$Style$classes.alignContainerRight + (' ~ s.' + $mdgriffith$elm_ui$Internal$Style$classes.alignContainerCenterX)), _List_fromArray([
                    A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '0')
                ])),
                $mdgriffith$elm_ui$Internal$Style$describeAlignment(function(alignment) {
                    switch(alignment.$){
                        case 'Top':
                            return _Utils_Tuple2(_List_fromArray([
                                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'flex-start')
                            ]), _List_fromArray([
                                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'flex-start')
                            ]));
                        case 'Bottom':
                            return _Utils_Tuple2(_List_fromArray([
                                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'flex-end')
                            ]), _List_fromArray([
                                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'flex-end')
                            ]));
                        case 'Right':
                            return _Utils_Tuple2(_List_fromArray([
                                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'flex-end')
                            ]), _List_Nil);
                        case 'Left':
                            return _Utils_Tuple2(_List_fromArray([
                                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'flex-start')
                            ]), _List_Nil);
                        case 'CenterX':
                            return _Utils_Tuple2(_List_fromArray([
                                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'center')
                            ]), _List_Nil);
                        default:
                            return _Utils_Tuple2(_List_fromArray([
                                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'center')
                            ]), _List_fromArray([
                                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'center')
                            ]));
                    }
                }),
                A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.spaceEvenly), _List_fromArray([
                    A2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'space-between')
                ])),
                A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.inputLabel), _List_fromArray([
                    A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'baseline')
                ]))
            ])),
            A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.column), _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'flex'),
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-direction', 'column'),
                A2($mdgriffith$elm_ui$Internal$Style$Child, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any), _List_fromArray([
                    A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-basis', '0px'),
                    A2($mdgriffith$elm_ui$Internal$Style$Prop, 'min-height', 'min-content'),
                    A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.heightExact), _List_fromArray([
                        A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-basis', 'auto')
                    ]))
                ])),
                A2($mdgriffith$elm_ui$Internal$Style$Child, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.heightFill), _List_fromArray([
                    A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '100000')
                ])),
                A2($mdgriffith$elm_ui$Internal$Style$Child, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.widthFill), _List_fromArray([
                    A2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%')
                ])),
                A2($mdgriffith$elm_ui$Internal$Style$Child, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.widthFillPortion), _List_fromArray([
                    A2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%')
                ])),
                A2($mdgriffith$elm_ui$Internal$Style$Child, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.widthContent), _List_fromArray([
                    A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'flex-start')
                ])),
                A2($mdgriffith$elm_ui$Internal$Style$Child, 'u:first-of-type.' + $mdgriffith$elm_ui$Internal$Style$classes.alignContainerBottom, _List_fromArray([
                    A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '1')
                ])),
                A2($mdgriffith$elm_ui$Internal$Style$Child, 's:first-of-type.' + $mdgriffith$elm_ui$Internal$Style$classes.alignContainerCenterY, _List_fromArray([
                    A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '1'),
                    A2($mdgriffith$elm_ui$Internal$Style$Child, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.alignCenterY), _List_fromArray([
                        A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-top', 'auto !important'),
                        A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-bottom', '0 !important')
                    ]))
                ])),
                A2($mdgriffith$elm_ui$Internal$Style$Child, 's:last-of-type.' + $mdgriffith$elm_ui$Internal$Style$classes.alignContainerCenterY, _List_fromArray([
                    A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '1'),
                    A2($mdgriffith$elm_ui$Internal$Style$Child, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.alignCenterY), _List_fromArray([
                        A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-bottom', 'auto !important'),
                        A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-top', '0 !important')
                    ]))
                ])),
                A2($mdgriffith$elm_ui$Internal$Style$Child, 's:only-of-type.' + $mdgriffith$elm_ui$Internal$Style$classes.alignContainerCenterY, _List_fromArray([
                    A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '1'),
                    A2($mdgriffith$elm_ui$Internal$Style$Child, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.alignCenterY), _List_fromArray([
                        A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-top', 'auto !important'),
                        A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-bottom', 'auto !important')
                    ]))
                ])),
                A2($mdgriffith$elm_ui$Internal$Style$Child, 's:last-of-type.' + ($mdgriffith$elm_ui$Internal$Style$classes.alignContainerCenterY + ' ~ u'), _List_fromArray([
                    A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '0')
                ])),
                A2($mdgriffith$elm_ui$Internal$Style$Child, 'u:first-of-type.' + ($mdgriffith$elm_ui$Internal$Style$classes.alignContainerBottom + (' ~ s.' + $mdgriffith$elm_ui$Internal$Style$classes.alignContainerCenterY)), _List_fromArray([
                    A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '0')
                ])),
                $mdgriffith$elm_ui$Internal$Style$describeAlignment(function(alignment) {
                    switch(alignment.$){
                        case 'Top':
                            return _Utils_Tuple2(_List_fromArray([
                                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'flex-start')
                            ]), _List_fromArray([
                                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-bottom', 'auto')
                            ]));
                        case 'Bottom':
                            return _Utils_Tuple2(_List_fromArray([
                                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'flex-end')
                            ]), _List_fromArray([
                                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-top', 'auto')
                            ]));
                        case 'Right':
                            return _Utils_Tuple2(_List_fromArray([
                                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'flex-end')
                            ]), _List_fromArray([
                                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'flex-end')
                            ]));
                        case 'Left':
                            return _Utils_Tuple2(_List_fromArray([
                                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'flex-start')
                            ]), _List_fromArray([
                                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'flex-start')
                            ]));
                        case 'CenterX':
                            return _Utils_Tuple2(_List_fromArray([
                                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'center')
                            ]), _List_fromArray([
                                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'center')
                            ]));
                        default:
                            return _Utils_Tuple2(_List_fromArray([
                                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'center')
                            ]), _List_Nil);
                    }
                }),
                A2($mdgriffith$elm_ui$Internal$Style$Child, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.container), _List_fromArray([
                    A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '0'),
                    A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-basis', 'auto'),
                    A2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%'),
                    A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'stretch !important')
                ])),
                A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.spaceEvenly), _List_fromArray([
                    A2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'space-between')
                ]))
            ])),
            A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.grid), _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', '-ms-grid'),
                A2($mdgriffith$elm_ui$Internal$Style$Child, '.gp', _List_fromArray([
                    A2($mdgriffith$elm_ui$Internal$Style$Child, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any), _List_fromArray([
                        A2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%')
                    ]))
                ])),
                A2($mdgriffith$elm_ui$Internal$Style$Supports, _Utils_Tuple2('display', 'grid'), _List_fromArray([
                    _Utils_Tuple2('display', 'grid')
                ])),
                $mdgriffith$elm_ui$Internal$Style$gridAlignments(function(alignment) {
                    switch(alignment.$){
                        case 'Top':
                            return _List_fromArray([
                                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'flex-start')
                            ]);
                        case 'Bottom':
                            return _List_fromArray([
                                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'flex-end')
                            ]);
                        case 'Right':
                            return _List_fromArray([
                                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'flex-end')
                            ]);
                        case 'Left':
                            return _List_fromArray([
                                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'flex-start')
                            ]);
                        case 'CenterX':
                            return _List_fromArray([
                                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'center')
                            ]);
                        default:
                            return _List_fromArray([
                                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'center')
                            ]);
                    }
                })
            ])),
            A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.page), _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'block'),
                A2($mdgriffith$elm_ui$Internal$Style$Child, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any + ':first-child'), _List_fromArray([
                    A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin', '0 !important')
                ])),
                A2($mdgriffith$elm_ui$Internal$Style$Child, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any + ($mdgriffith$elm_ui$Internal$Style$selfName($mdgriffith$elm_ui$Internal$Style$Self($mdgriffith$elm_ui$Internal$Style$Left)) + (':first-child + .' + $mdgriffith$elm_ui$Internal$Style$classes.any))), _List_fromArray([
                    A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin', '0 !important')
                ])),
                A2($mdgriffith$elm_ui$Internal$Style$Child, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any + ($mdgriffith$elm_ui$Internal$Style$selfName($mdgriffith$elm_ui$Internal$Style$Self($mdgriffith$elm_ui$Internal$Style$Right)) + (':first-child + .' + $mdgriffith$elm_ui$Internal$Style$classes.any))), _List_fromArray([
                    A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin', '0 !important')
                ])),
                $mdgriffith$elm_ui$Internal$Style$describeAlignment(function(alignment) {
                    switch(alignment.$){
                        case 'Top':
                            return _Utils_Tuple2(_List_Nil, _List_Nil);
                        case 'Bottom':
                            return _Utils_Tuple2(_List_Nil, _List_Nil);
                        case 'Right':
                            return _Utils_Tuple2(_List_Nil, _List_fromArray([
                                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'float', 'right'),
                                A2($mdgriffith$elm_ui$Internal$Style$Descriptor, '::after', _List_fromArray([
                                    A2($mdgriffith$elm_ui$Internal$Style$Prop, 'content', '\"\"'),
                                    A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'table'),
                                    A2($mdgriffith$elm_ui$Internal$Style$Prop, 'clear', 'both')
                                ]))
                            ]));
                        case 'Left':
                            return _Utils_Tuple2(_List_Nil, _List_fromArray([
                                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'float', 'left'),
                                A2($mdgriffith$elm_ui$Internal$Style$Descriptor, '::after', _List_fromArray([
                                    A2($mdgriffith$elm_ui$Internal$Style$Prop, 'content', '\"\"'),
                                    A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'table'),
                                    A2($mdgriffith$elm_ui$Internal$Style$Prop, 'clear', 'both')
                                ]))
                            ]));
                        case 'CenterX':
                            return _Utils_Tuple2(_List_Nil, _List_Nil);
                        default:
                            return _Utils_Tuple2(_List_Nil, _List_Nil);
                    }
                })
            ])),
            A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.inputMultiline), _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'white-space', 'pre-wrap !important'),
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', '100%'),
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%'),
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'background-color', 'transparent')
            ])),
            A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.inputMultilineWrapper), _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.single), _List_fromArray([
                    A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-basis', 'auto')
                ]))
            ])),
            A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.inputMultilineParent), _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'white-space', 'pre-wrap !important'),
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'cursor', 'text'),
                A2($mdgriffith$elm_ui$Internal$Style$Child, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.inputMultilineFiller), _List_fromArray([
                    A2($mdgriffith$elm_ui$Internal$Style$Prop, 'white-space', 'pre-wrap !important'),
                    A2($mdgriffith$elm_ui$Internal$Style$Prop, 'color', 'transparent')
                ]))
            ])),
            A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.paragraph), _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'block'),
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'white-space', 'normal'),
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'overflow-wrap', 'break-word'),
                A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.hasBehind), _List_fromArray([
                    A2($mdgriffith$elm_ui$Internal$Style$Prop, 'z-index', '0'),
                    A2($mdgriffith$elm_ui$Internal$Style$Child, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.behind), _List_fromArray([
                        A2($mdgriffith$elm_ui$Internal$Style$Prop, 'z-index', '-1')
                    ]))
                ])),
                A2($mdgriffith$elm_ui$Internal$Style$AllChildren, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.text), _List_fromArray([
                    A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'inline'),
                    A2($mdgriffith$elm_ui$Internal$Style$Prop, 'white-space', 'normal')
                ])),
                A2($mdgriffith$elm_ui$Internal$Style$AllChildren, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.paragraph), _List_fromArray([
                    A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'inline'),
                    A2($mdgriffith$elm_ui$Internal$Style$Descriptor, '::after', _List_fromArray([
                        A2($mdgriffith$elm_ui$Internal$Style$Prop, 'content', 'none')
                    ])),
                    A2($mdgriffith$elm_ui$Internal$Style$Descriptor, '::before', _List_fromArray([
                        A2($mdgriffith$elm_ui$Internal$Style$Prop, 'content', 'none')
                    ]))
                ])),
                A2($mdgriffith$elm_ui$Internal$Style$AllChildren, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.single), _List_fromArray([
                    A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'inline'),
                    A2($mdgriffith$elm_ui$Internal$Style$Prop, 'white-space', 'normal'),
                    A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.widthExact), _List_fromArray([
                        A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'inline-block')
                    ])),
                    A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.inFront), _List_fromArray([
                        A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'flex')
                    ])),
                    A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.behind), _List_fromArray([
                        A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'flex')
                    ])),
                    A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.above), _List_fromArray([
                        A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'flex')
                    ])),
                    A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.below), _List_fromArray([
                        A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'flex')
                    ])),
                    A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.onRight), _List_fromArray([
                        A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'flex')
                    ])),
                    A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.onLeft), _List_fromArray([
                        A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'flex')
                    ])),
                    A2($mdgriffith$elm_ui$Internal$Style$Child, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.text), _List_fromArray([
                        A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'inline'),
                        A2($mdgriffith$elm_ui$Internal$Style$Prop, 'white-space', 'normal')
                    ]))
                ])),
                A2($mdgriffith$elm_ui$Internal$Style$Child, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.row), _List_fromArray([
                    A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'inline')
                ])),
                A2($mdgriffith$elm_ui$Internal$Style$Child, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.column), _List_fromArray([
                    A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'inline-flex')
                ])),
                A2($mdgriffith$elm_ui$Internal$Style$Child, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.grid), _List_fromArray([
                    A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'inline-grid')
                ])),
                $mdgriffith$elm_ui$Internal$Style$describeAlignment(function(alignment) {
                    switch(alignment.$){
                        case 'Top':
                            return _Utils_Tuple2(_List_Nil, _List_Nil);
                        case 'Bottom':
                            return _Utils_Tuple2(_List_Nil, _List_Nil);
                        case 'Right':
                            return _Utils_Tuple2(_List_Nil, _List_fromArray([
                                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'float', 'right')
                            ]));
                        case 'Left':
                            return _Utils_Tuple2(_List_Nil, _List_fromArray([
                                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'float', 'left')
                            ]));
                        case 'CenterX':
                            return _Utils_Tuple2(_List_Nil, _List_Nil);
                        default:
                            return _Utils_Tuple2(_List_Nil, _List_Nil);
                    }
                })
            ])),
            A2($mdgriffith$elm_ui$Internal$Style$Descriptor, '.hidden', _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'none')
            ])),
            A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.textThin), _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-weight', '100')
            ])),
            A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.textExtraLight), _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-weight', '200')
            ])),
            A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.textLight), _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-weight', '300')
            ])),
            A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.textNormalWeight), _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-weight', '400')
            ])),
            A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.textMedium), _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-weight', '500')
            ])),
            A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.textSemiBold), _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-weight', '600')
            ])),
            A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.bold), _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-weight', '700')
            ])),
            A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.textExtraBold), _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-weight', '800')
            ])),
            A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.textHeavy), _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-weight', '900')
            ])),
            A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.italic), _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-style', 'italic')
            ])),
            A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.strike), _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-decoration', 'line-through')
            ])),
            A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.underline), _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-decoration', 'underline'),
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-decoration-skip-ink', 'auto'),
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-decoration-skip', 'ink')
            ])),
            A2($mdgriffith$elm_ui$Internal$Style$Descriptor, _Utils_ap($mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.underline), $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.strike)), _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-decoration', 'line-through underline'),
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-decoration-skip-ink', 'auto'),
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-decoration-skip', 'ink')
            ])),
            A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.textUnitalicized), _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-style', 'normal')
            ])),
            A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.textJustify), _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-align', 'justify')
            ])),
            A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.textJustifyAll), _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-align', 'justify-all')
            ])),
            A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.textCenter), _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-align', 'center')
            ])),
            A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.textRight), _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-align', 'right')
            ])),
            A2($mdgriffith$elm_ui$Internal$Style$Descriptor, $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.textLeft), _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-align', 'left')
            ])),
            A2($mdgriffith$elm_ui$Internal$Style$Descriptor, '.modal', _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'position', 'fixed'),
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'left', '0'),
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'top', '0'),
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%'),
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', '100%'),
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'none')
            ]))
        ]))
    ]);
    var $mdgriffith$elm_ui$Internal$Style$fontVariant = function(_var) {
        return _List_fromArray([
            A2($mdgriffith$elm_ui$Internal$Style$Class, '.v-' + _var, _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-feature-settings', '\"' + (_var + '\"'))
            ])),
            A2($mdgriffith$elm_ui$Internal$Style$Class, '.v-' + (_var + '-off'), _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-feature-settings', '\"' + (_var + '\" 0'))
            ]))
        ]);
    };
    var $mdgriffith$elm_ui$Internal$Style$commonValues = $elm$core$List$concat(_List_fromArray([
        A2($elm$core$List$map, function(x) {
            return A2($mdgriffith$elm_ui$Internal$Style$Class, '.border-' + $elm$core$String$fromInt(x), _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'border-width', $elm$core$String$fromInt(x) + 'px')
            ]));
        }, A2($elm$core$List$range, 0, 6)),
        A2($elm$core$List$map, function(i) {
            return A2($mdgriffith$elm_ui$Internal$Style$Class, '.font-size-' + $elm$core$String$fromInt(i), _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-size', $elm$core$String$fromInt(i) + 'px')
            ]));
        }, A2($elm$core$List$range, 8, 32)),
        A2($elm$core$List$map, function(i) {
            return A2($mdgriffith$elm_ui$Internal$Style$Class, '.p-' + $elm$core$String$fromInt(i), _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'padding', $elm$core$String$fromInt(i) + 'px')
            ]));
        }, A2($elm$core$List$range, 0, 24)),
        _List_fromArray([
            A2($mdgriffith$elm_ui$Internal$Style$Class, '.v-smcp', _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-variant', 'small-caps')
            ])),
            A2($mdgriffith$elm_ui$Internal$Style$Class, '.v-smcp-off', _List_fromArray([
                A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-variant', 'normal')
            ]))
        ]),
        $mdgriffith$elm_ui$Internal$Style$fontVariant('zero'),
        $mdgriffith$elm_ui$Internal$Style$fontVariant('onum'),
        $mdgriffith$elm_ui$Internal$Style$fontVariant('liga'),
        $mdgriffith$elm_ui$Internal$Style$fontVariant('dlig'),
        $mdgriffith$elm_ui$Internal$Style$fontVariant('ordn'),
        $mdgriffith$elm_ui$Internal$Style$fontVariant('tnum'),
        $mdgriffith$elm_ui$Internal$Style$fontVariant('afrc'),
        $mdgriffith$elm_ui$Internal$Style$fontVariant('frac')
    ]));
    var $mdgriffith$elm_ui$Internal$Style$explainer = '\n.explain {\n    border: 6px solid rgb(174, 121, 15) !important;\n}\n.explain > .' + ($mdgriffith$elm_ui$Internal$Style$classes.any + (' {\n    border: 4px dashed rgb(0, 151, 167) !important;\n}\n\n.ctr {\n    border: none !important;\n}\n.explain > .ctr > .' + ($mdgriffith$elm_ui$Internal$Style$classes.any + ' {\n    border: 4px dashed rgb(0, 151, 167) !important;\n}\n\n')));
    var $mdgriffith$elm_ui$Internal$Style$inputTextReset = '\ninput[type="search"],\ninput[type="search"]::-webkit-search-decoration,\ninput[type="search"]::-webkit-search-cancel-button,\ninput[type="search"]::-webkit-search-results-button,\ninput[type="search"]::-webkit-search-results-decoration {\n  -webkit-appearance:none;\n}\n';
    var $mdgriffith$elm_ui$Internal$Style$sliderReset = '\ninput[type=range] {\n  -webkit-appearance: none; \n  background: transparent;\n  position:absolute;\n  left:0;\n  top:0;\n  z-index:10;\n  width: 100%;\n  outline: dashed 1px;\n  height: 100%;\n  opacity: 0;\n}\n';
    var $mdgriffith$elm_ui$Internal$Style$thumbReset = '\ninput[type=range]::-webkit-slider-thumb {\n    -webkit-appearance: none;\n    opacity: 0.5;\n    width: 80px;\n    height: 80px;\n    background-color: black;\n    border:none;\n    border-radius: 5px;\n}\ninput[type=range]::-moz-range-thumb {\n    opacity: 0.5;\n    width: 80px;\n    height: 80px;\n    background-color: black;\n    border:none;\n    border-radius: 5px;\n}\ninput[type=range]::-ms-thumb {\n    opacity: 0.5;\n    width: 80px;\n    height: 80px;\n    background-color: black;\n    border:none;\n    border-radius: 5px;\n}\ninput[type=range][orient=vertical]{\n    writing-mode: bt-lr; /* IE */\n    -webkit-appearance: slider-vertical;  /* WebKit */\n}\n';
    var $mdgriffith$elm_ui$Internal$Style$trackReset = '\ninput[type=range]::-moz-range-track {\n    background: transparent;\n    cursor: pointer;\n}\ninput[type=range]::-ms-track {\n    background: transparent;\n    cursor: pointer;\n}\ninput[type=range]::-webkit-slider-runnable-track {\n    background: transparent;\n    cursor: pointer;\n}\n';
    var $mdgriffith$elm_ui$Internal$Style$overrides = '@media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {' + ($mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any) + ($mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.row) + (' > ' + ($mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any) + (' { flex-basis: auto !important; } ' + ($mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any) + ($mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.row) + (' > ' + ($mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any) + ($mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.container) + (' { flex-basis: auto !important; }}' + ($mdgriffith$elm_ui$Internal$Style$inputTextReset + ($mdgriffith$elm_ui$Internal$Style$sliderReset + ($mdgriffith$elm_ui$Internal$Style$trackReset + ($mdgriffith$elm_ui$Internal$Style$thumbReset + $mdgriffith$elm_ui$Internal$Style$explainer)))))))))))))));
    var $mdgriffith$elm_ui$Internal$Style$Intermediate = function(a) {
        return {
            $: 'Intermediate',
            a: a
        };
    };
    var $mdgriffith$elm_ui$Internal$Style$emptyIntermediate = F2(function(selector, closing) {
        return $mdgriffith$elm_ui$Internal$Style$Intermediate({
            closing: closing,
            others: _List_Nil,
            props: _List_Nil,
            selector: selector
        });
    });
    var $mdgriffith$elm_ui$Internal$Style$renderRules = F2(function(_v0, rulesToRender) {
        var parent = _v0.a;
        var generateIntermediates = F2(function(rule, rendered) {
            switch(rule.$){
                case 'Prop':
                    var name = rule.a;
                    var val = rule.b;
                    return _Utils_update(rendered, {
                        props: A2($elm$core$List$cons, _Utils_Tuple2(name, val), rendered.props)
                    });
                case 'Supports':
                    var _v2 = rule.a;
                    var prop = _v2.a;
                    var value = _v2.b;
                    var props = rule.b;
                    return _Utils_update(rendered, {
                        others: A2($elm$core$List$cons, $mdgriffith$elm_ui$Internal$Style$Intermediate({
                            closing: '\n}',
                            others: _List_Nil,
                            props: props,
                            selector: '@supports (' + (prop + (':' + (value + (') {' + parent.selector))))
                        }), rendered.others)
                    });
                case 'Adjacent':
                    var selector = rule.a;
                    var adjRules = rule.b;
                    return _Utils_update(rendered, {
                        others: A2($elm$core$List$cons, A2($mdgriffith$elm_ui$Internal$Style$renderRules, A2($mdgriffith$elm_ui$Internal$Style$emptyIntermediate, parent.selector + (' + ' + selector), ''), adjRules), rendered.others)
                    });
                case 'Child':
                    var child = rule.a;
                    var childRules = rule.b;
                    return _Utils_update(rendered, {
                        others: A2($elm$core$List$cons, A2($mdgriffith$elm_ui$Internal$Style$renderRules, A2($mdgriffith$elm_ui$Internal$Style$emptyIntermediate, parent.selector + (' > ' + child), ''), childRules), rendered.others)
                    });
                case 'AllChildren':
                    var child = rule.a;
                    var childRules = rule.b;
                    return _Utils_update(rendered, {
                        others: A2($elm$core$List$cons, A2($mdgriffith$elm_ui$Internal$Style$renderRules, A2($mdgriffith$elm_ui$Internal$Style$emptyIntermediate, parent.selector + (' ' + child), ''), childRules), rendered.others)
                    });
                case 'Descriptor':
                    var descriptor = rule.a;
                    var descriptorRules = rule.b;
                    return _Utils_update(rendered, {
                        others: A2($elm$core$List$cons, A2($mdgriffith$elm_ui$Internal$Style$renderRules, A2($mdgriffith$elm_ui$Internal$Style$emptyIntermediate, _Utils_ap(parent.selector, descriptor), ''), descriptorRules), rendered.others)
                    });
                default:
                    var batched = rule.a;
                    return _Utils_update(rendered, {
                        others: A2($elm$core$List$cons, A2($mdgriffith$elm_ui$Internal$Style$renderRules, A2($mdgriffith$elm_ui$Internal$Style$emptyIntermediate, parent.selector, ''), batched), rendered.others)
                    });
            }
        });
        return $mdgriffith$elm_ui$Internal$Style$Intermediate(A3($elm$core$List$foldr, generateIntermediates, parent, rulesToRender));
    });
    var $mdgriffith$elm_ui$Internal$Style$renderCompact = function(styleClasses) {
        var renderValues = function(values) {
            return $elm$core$String$concat(A2($elm$core$List$map, function(_v3) {
                var x = _v3.a;
                var y = _v3.b;
                return x + (':' + (y + ';'));
            }, values));
        };
        var renderClass = function(rule) {
            var _v2 = rule.props;
            if (!_v2.b) return '';
            else return rule.selector + ('{' + (renderValues(rule.props) + (rule.closing + '}')));
        };
        var renderIntermediate = function(_v0) {
            var rule = _v0.a;
            return _Utils_ap(renderClass(rule), $elm$core$String$concat(A2($elm$core$List$map, renderIntermediate, rule.others)));
        };
        return $elm$core$String$concat(A2($elm$core$List$map, renderIntermediate, A3($elm$core$List$foldr, F2(function(_v1, existing) {
            var name = _v1.a;
            var styleRules = _v1.b;
            return A2($elm$core$List$cons, A2($mdgriffith$elm_ui$Internal$Style$renderRules, A2($mdgriffith$elm_ui$Internal$Style$emptyIntermediate, name, ''), styleRules), existing);
        }), _List_Nil, styleClasses)));
    };
    var $mdgriffith$elm_ui$Internal$Style$rules = _Utils_ap($mdgriffith$elm_ui$Internal$Style$overrides, $mdgriffith$elm_ui$Internal$Style$renderCompact(_Utils_ap($mdgriffith$elm_ui$Internal$Style$baseSheet, $mdgriffith$elm_ui$Internal$Style$commonValues)));
    var $elm$virtual_dom$VirtualDom$text = _VirtualDom_text;
    var $mdgriffith$elm_ui$Internal$Model$staticRoot = function(opts) {
        var _v0 = opts.mode;
        switch(_v0.$){
            case 'Layout':
                return A3($elm$virtual_dom$VirtualDom$node, 'div', _List_Nil, _List_fromArray([
                    A3($elm$virtual_dom$VirtualDom$node, 'style', _List_Nil, _List_fromArray([
                        $elm$virtual_dom$VirtualDom$text($mdgriffith$elm_ui$Internal$Style$rules)
                    ]))
                ]));
            case 'NoStaticStyleSheet':
                return $elm$virtual_dom$VirtualDom$text('');
            default:
                return A3($elm$virtual_dom$VirtualDom$node, 'elm-ui-static-rules', _List_fromArray([
                    A2($elm$virtual_dom$VirtualDom$property, 'rules', $elm$json$Json$Encode$string($mdgriffith$elm_ui$Internal$Style$rules))
                ]), _List_Nil);
        }
    };
    var $elm$json$Json$Encode$list = F2(function(func, entries) {
        return _Json_wrap(A3($elm$core$List$foldl, _Json_addEntry(func), _Json_emptyArray(_Utils_Tuple0), entries));
    });
    var $mdgriffith$elm_ui$Internal$Model$fontName = function(font) {
        switch(font.$){
            case 'Serif':
                return 'serif';
            case 'SansSerif':
                return 'sans-serif';
            case 'Monospace':
                return 'monospace';
            case 'Typeface':
                var name = font.a;
                return '\"' + (name + '\"');
            case 'ImportFont':
                var name = font.a;
                var url = font.b;
                return '\"' + (name + '\"');
            default:
                var name = font.a.name;
                return '\"' + (name + '\"');
        }
    };
    var $mdgriffith$elm_ui$Internal$Model$isSmallCaps = function(_var) {
        switch(_var.$){
            case 'VariantActive':
                var name = _var.a;
                return name === 'smcp';
            case 'VariantOff':
                var name = _var.a;
                return false;
            default:
                var name = _var.a;
                var index = _var.b;
                return name === 'smcp' && index === 1;
        }
    };
    var $mdgriffith$elm_ui$Internal$Model$hasSmallCaps = function(typeface) {
        if (typeface.$ === 'FontWith') {
            var font = typeface.a;
            return A2($elm$core$List$any, $mdgriffith$elm_ui$Internal$Model$isSmallCaps, font.variants);
        } else return false;
    };
    var $mdgriffith$elm_ui$Internal$Model$renderProps = F3(function(force, _v0, existing) {
        var key = _v0.a;
        var val = _v0.b;
        return force ? existing + ('\n  ' + (key + (': ' + (val + ' !important;')))) : existing + ('\n  ' + (key + (': ' + (val + ';'))));
    });
    var $mdgriffith$elm_ui$Internal$Model$renderStyle = F4(function(options, maybePseudo, selector, props) {
        if (maybePseudo.$ === 'Nothing') return _List_fromArray([
            selector + ('{' + (A3($elm$core$List$foldl, $mdgriffith$elm_ui$Internal$Model$renderProps(false), '', props) + '\n}'))
        ]);
        else {
            var pseudo = maybePseudo.a;
            switch(pseudo.$){
                case 'Hover':
                    var _v2 = options.hover;
                    switch(_v2.$){
                        case 'NoHover':
                            return _List_Nil;
                        case 'ForceHover':
                            return _List_fromArray([
                                selector + ('-hv {' + (A3($elm$core$List$foldl, $mdgriffith$elm_ui$Internal$Model$renderProps(true), '', props) + '\n}'))
                            ]);
                        default:
                            return _List_fromArray([
                                selector + ('-hv:hover {' + (A3($elm$core$List$foldl, $mdgriffith$elm_ui$Internal$Model$renderProps(false), '', props) + '\n}'))
                            ]);
                    }
                case 'Focus':
                    var renderedProps = A3($elm$core$List$foldl, $mdgriffith$elm_ui$Internal$Model$renderProps(false), '', props);
                    return _List_fromArray([
                        selector + ('-fs:focus {' + (renderedProps + '\n}')),
                        '.' + ($mdgriffith$elm_ui$Internal$Style$classes.any + (':focus ' + (selector + '-fs  {'))) + (renderedProps + '\n}'),
                        selector + '-fs:focus-within {' + (renderedProps + '\n}'),
                        '.ui-slide-bar:focus + ' + ($mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any) + (' .focusable-thumb' + (selector + '-fs {'))) + (renderedProps + '\n}')
                    ]);
                default:
                    return _List_fromArray([
                        selector + ('-act:active {' + (A3($elm$core$List$foldl, $mdgriffith$elm_ui$Internal$Model$renderProps(false), '', props) + '\n}'))
                    ]);
            }
        }
    });
    var $mdgriffith$elm_ui$Internal$Model$renderVariant = function(_var) {
        switch(_var.$){
            case 'VariantActive':
                var name = _var.a;
                return '\"' + (name + '\"');
            case 'VariantOff':
                var name = _var.a;
                return '\"' + (name + '\" 0');
            default:
                var name = _var.a;
                var index = _var.b;
                return '\"' + (name + ('\" ' + $elm$core$String$fromInt(index)));
        }
    };
    var $mdgriffith$elm_ui$Internal$Model$renderVariants = function(typeface) {
        if (typeface.$ === 'FontWith') {
            var font = typeface.a;
            return $elm$core$Maybe$Just(A2($elm$core$String$join, ', ', A2($elm$core$List$map, $mdgriffith$elm_ui$Internal$Model$renderVariant, font.variants)));
        } else return $elm$core$Maybe$Nothing;
    };
    var $mdgriffith$elm_ui$Internal$Model$transformValue = function(transform) {
        switch(transform.$){
            case 'Untransformed':
                return $elm$core$Maybe$Nothing;
            case 'Moved':
                var _v1 = transform.a;
                var x = _v1.a;
                var y = _v1.b;
                var z = _v1.c;
                return $elm$core$Maybe$Just('translate3d(' + ($elm$core$String$fromFloat(x) + ('px, ' + ($elm$core$String$fromFloat(y) + ('px, ' + ($elm$core$String$fromFloat(z) + 'px)'))))));
            default:
                var _v2 = transform.a;
                var tx = _v2.a;
                var ty = _v2.b;
                var tz = _v2.c;
                var _v3 = transform.b;
                var sx = _v3.a;
                var sy = _v3.b;
                var sz = _v3.c;
                var _v4 = transform.c;
                var ox = _v4.a;
                var oy = _v4.b;
                var oz = _v4.c;
                var angle = transform.d;
                var translate = 'translate3d(' + ($elm$core$String$fromFloat(tx) + ('px, ' + ($elm$core$String$fromFloat(ty) + ('px, ' + ($elm$core$String$fromFloat(tz) + 'px)')))));
                var scale = 'scale3d(' + ($elm$core$String$fromFloat(sx) + (', ' + ($elm$core$String$fromFloat(sy) + (', ' + ($elm$core$String$fromFloat(sz) + ')')))));
                var rotate = 'rotate3d(' + ($elm$core$String$fromFloat(ox) + (', ' + ($elm$core$String$fromFloat(oy) + (', ' + ($elm$core$String$fromFloat(oz) + (', ' + ($elm$core$String$fromFloat(angle) + 'rad)')))))));
                return $elm$core$Maybe$Just(translate + (' ' + (scale + (' ' + rotate))));
        }
    };
    var $mdgriffith$elm_ui$Internal$Model$renderStyleRule = F3(function(options, rule, maybePseudo) {
        switch(rule.$){
            case 'Style':
                var selector = rule.a;
                var props = rule.b;
                return A4($mdgriffith$elm_ui$Internal$Model$renderStyle, options, maybePseudo, selector, props);
            case 'Shadows':
                var name = rule.a;
                var prop = rule.b;
                return A4($mdgriffith$elm_ui$Internal$Model$renderStyle, options, maybePseudo, '.' + name, _List_fromArray([
                    A2($mdgriffith$elm_ui$Internal$Model$Property, 'box-shadow', prop)
                ]));
            case 'Transparency':
                var name = rule.a;
                var transparency = rule.b;
                var opacity = A2($elm$core$Basics$max, 0, A2($elm$core$Basics$min, 1, 1 - transparency));
                return A4($mdgriffith$elm_ui$Internal$Model$renderStyle, options, maybePseudo, '.' + name, _List_fromArray([
                    A2($mdgriffith$elm_ui$Internal$Model$Property, 'opacity', $elm$core$String$fromFloat(opacity))
                ]));
            case 'FontSize':
                var i1 = rule.a;
                return A4($mdgriffith$elm_ui$Internal$Model$renderStyle, options, maybePseudo, '.font-size-' + $elm$core$String$fromInt(i1), _List_fromArray([
                    A2($mdgriffith$elm_ui$Internal$Model$Property, 'font-size', $elm$core$String$fromInt(i1) + 'px')
                ]));
            case 'FontFamily':
                var name = rule.a;
                var typefaces = rule.b;
                var features = A2($elm$core$String$join, ', ', A2($elm$core$List$filterMap, $mdgriffith$elm_ui$Internal$Model$renderVariants, typefaces));
                var families = _List_fromArray([
                    A2($mdgriffith$elm_ui$Internal$Model$Property, 'font-family', A2($elm$core$String$join, ', ', A2($elm$core$List$map, $mdgriffith$elm_ui$Internal$Model$fontName, typefaces))),
                    A2($mdgriffith$elm_ui$Internal$Model$Property, 'font-feature-settings', features),
                    A2($mdgriffith$elm_ui$Internal$Model$Property, 'font-variant', A2($elm$core$List$any, $mdgriffith$elm_ui$Internal$Model$hasSmallCaps, typefaces) ? 'small-caps' : 'normal')
                ]);
                return A4($mdgriffith$elm_ui$Internal$Model$renderStyle, options, maybePseudo, '.' + name, families);
            case 'Single':
                var _class = rule.a;
                var prop = rule.b;
                var val = rule.c;
                return A4($mdgriffith$elm_ui$Internal$Model$renderStyle, options, maybePseudo, '.' + _class, _List_fromArray([
                    A2($mdgriffith$elm_ui$Internal$Model$Property, prop, val)
                ]));
            case 'Colored':
                var _class = rule.a;
                var prop = rule.b;
                var color = rule.c;
                return A4($mdgriffith$elm_ui$Internal$Model$renderStyle, options, maybePseudo, '.' + _class, _List_fromArray([
                    A2($mdgriffith$elm_ui$Internal$Model$Property, prop, $mdgriffith$elm_ui$Internal$Model$formatColor(color))
                ]));
            case 'SpacingStyle':
                var cls = rule.a;
                var x3 = rule.b;
                var y = rule.c;
                var yPx = $elm$core$String$fromInt(y) + 'px';
                var xPx = $elm$core$String$fromInt(x3) + 'px';
                var single = '.' + $mdgriffith$elm_ui$Internal$Style$classes.single;
                var row = '.' + $mdgriffith$elm_ui$Internal$Style$classes.row;
                var wrappedRow = '.' + ($mdgriffith$elm_ui$Internal$Style$classes.wrapped + row);
                var right = '.' + $mdgriffith$elm_ui$Internal$Style$classes.alignRight;
                var paragraph = '.' + $mdgriffith$elm_ui$Internal$Style$classes.paragraph;
                var page = '.' + $mdgriffith$elm_ui$Internal$Style$classes.page;
                var left = '.' + $mdgriffith$elm_ui$Internal$Style$classes.alignLeft;
                var halfY = $elm$core$String$fromFloat(y / 2) + 'px';
                var halfX = $elm$core$String$fromFloat(x3 / 2) + 'px';
                var column = '.' + $mdgriffith$elm_ui$Internal$Style$classes.column;
                var _class = '.' + cls;
                var any = '.' + $mdgriffith$elm_ui$Internal$Style$classes.any;
                return $elm$core$List$concat(_List_fromArray([
                    A4($mdgriffith$elm_ui$Internal$Model$renderStyle, options, maybePseudo, _class + (row + (' > ' + (any + (' + ' + any)))), _List_fromArray([
                        A2($mdgriffith$elm_ui$Internal$Model$Property, 'margin-left', xPx)
                    ])),
                    A4($mdgriffith$elm_ui$Internal$Model$renderStyle, options, maybePseudo, _class + (wrappedRow + (' > ' + any)), _List_fromArray([
                        A2($mdgriffith$elm_ui$Internal$Model$Property, 'margin', halfY + (' ' + halfX))
                    ])),
                    A4($mdgriffith$elm_ui$Internal$Model$renderStyle, options, maybePseudo, _class + (column + (' > ' + (any + (' + ' + any)))), _List_fromArray([
                        A2($mdgriffith$elm_ui$Internal$Model$Property, 'margin-top', yPx)
                    ])),
                    A4($mdgriffith$elm_ui$Internal$Model$renderStyle, options, maybePseudo, _class + (page + (' > ' + (any + (' + ' + any)))), _List_fromArray([
                        A2($mdgriffith$elm_ui$Internal$Model$Property, 'margin-top', yPx)
                    ])),
                    A4($mdgriffith$elm_ui$Internal$Model$renderStyle, options, maybePseudo, _class + (page + (' > ' + left)), _List_fromArray([
                        A2($mdgriffith$elm_ui$Internal$Model$Property, 'margin-right', xPx)
                    ])),
                    A4($mdgriffith$elm_ui$Internal$Model$renderStyle, options, maybePseudo, _class + (page + (' > ' + right)), _List_fromArray([
                        A2($mdgriffith$elm_ui$Internal$Model$Property, 'margin-left', xPx)
                    ])),
                    A4($mdgriffith$elm_ui$Internal$Model$renderStyle, options, maybePseudo, _Utils_ap(_class, paragraph), _List_fromArray([
                        A2($mdgriffith$elm_ui$Internal$Model$Property, 'line-height', 'calc(1em + ' + ($elm$core$String$fromInt(y) + 'px)'))
                    ])),
                    A4($mdgriffith$elm_ui$Internal$Model$renderStyle, options, maybePseudo, 'textarea' + (any + _class), _List_fromArray([
                        A2($mdgriffith$elm_ui$Internal$Model$Property, 'line-height', 'calc(1em + ' + ($elm$core$String$fromInt(y) + 'px)')),
                        A2($mdgriffith$elm_ui$Internal$Model$Property, 'height', 'calc(100% + ' + ($elm$core$String$fromInt(y) + 'px)'))
                    ])),
                    A4($mdgriffith$elm_ui$Internal$Model$renderStyle, options, maybePseudo, _class + (paragraph + (' > ' + left)), _List_fromArray([
                        A2($mdgriffith$elm_ui$Internal$Model$Property, 'margin-right', xPx)
                    ])),
                    A4($mdgriffith$elm_ui$Internal$Model$renderStyle, options, maybePseudo, _class + (paragraph + (' > ' + right)), _List_fromArray([
                        A2($mdgriffith$elm_ui$Internal$Model$Property, 'margin-left', xPx)
                    ])),
                    A4($mdgriffith$elm_ui$Internal$Model$renderStyle, options, maybePseudo, _class + (paragraph + '::after'), _List_fromArray([
                        A2($mdgriffith$elm_ui$Internal$Model$Property, 'content', '\'\''),
                        A2($mdgriffith$elm_ui$Internal$Model$Property, 'display', 'block'),
                        A2($mdgriffith$elm_ui$Internal$Model$Property, 'height', '0'),
                        A2($mdgriffith$elm_ui$Internal$Model$Property, 'width', '0'),
                        A2($mdgriffith$elm_ui$Internal$Model$Property, 'margin-top', $elm$core$String$fromInt(-1 * (y / 2 | 0)) + 'px')
                    ])),
                    A4($mdgriffith$elm_ui$Internal$Model$renderStyle, options, maybePseudo, _class + (paragraph + '::before'), _List_fromArray([
                        A2($mdgriffith$elm_ui$Internal$Model$Property, 'content', '\'\''),
                        A2($mdgriffith$elm_ui$Internal$Model$Property, 'display', 'block'),
                        A2($mdgriffith$elm_ui$Internal$Model$Property, 'height', '0'),
                        A2($mdgriffith$elm_ui$Internal$Model$Property, 'width', '0'),
                        A2($mdgriffith$elm_ui$Internal$Model$Property, 'margin-bottom', $elm$core$String$fromInt(-1 * (y / 2 | 0)) + 'px')
                    ]))
                ]));
            case 'PaddingStyle':
                var cls = rule.a;
                var top = rule.b;
                var right = rule.c;
                var bottom = rule.d;
                var left = rule.e;
                var _class = '.' + cls;
                return A4($mdgriffith$elm_ui$Internal$Model$renderStyle, options, maybePseudo, _class, _List_fromArray([
                    A2($mdgriffith$elm_ui$Internal$Model$Property, 'padding', $elm$core$String$fromFloat(top) + ('px ' + ($elm$core$String$fromFloat(right) + ('px ' + ($elm$core$String$fromFloat(bottom) + ('px ' + ($elm$core$String$fromFloat(left) + 'px')))))))
                ]));
            case 'BorderWidth':
                var cls = rule.a;
                var top = rule.b;
                var right = rule.c;
                var bottom = rule.d;
                var left = rule.e;
                var _class = '.' + cls;
                return A4($mdgriffith$elm_ui$Internal$Model$renderStyle, options, maybePseudo, _class, _List_fromArray([
                    A2($mdgriffith$elm_ui$Internal$Model$Property, 'border-width', $elm$core$String$fromInt(top) + ('px ' + ($elm$core$String$fromInt(right) + ('px ' + ($elm$core$String$fromInt(bottom) + ('px ' + ($elm$core$String$fromInt(left) + 'px')))))))
                ]));
            case 'GridTemplateStyle':
                var template = rule.a;
                var toGridLengthHelper = F3(function(minimum, maximum, x) {
                    toGridLengthHelper: while(true)switch(x.$){
                        case 'Px':
                            var px = x.a;
                            return $elm$core$String$fromInt(px) + 'px';
                        case 'Content':
                            var _v2 = _Utils_Tuple2(minimum, maximum);
                            if (_v2.a.$ === 'Nothing') {
                                if (_v2.b.$ === 'Nothing') {
                                    var _v3 = _v2.a;
                                    var _v4 = _v2.b;
                                    return 'max-content';
                                } else {
                                    var _v6 = _v2.a;
                                    var maxSize = _v2.b.a;
                                    return 'minmax(max-content, ' + ($elm$core$String$fromInt(maxSize) + 'px)');
                                }
                            } else if (_v2.b.$ === 'Nothing') {
                                var minSize = _v2.a.a;
                                var _v5 = _v2.b;
                                return 'minmax(' + ($elm$core$String$fromInt(minSize) + "px, max-content)");
                            } else {
                                var minSize = _v2.a.a;
                                var maxSize = _v2.b.a;
                                return 'minmax(' + ($elm$core$String$fromInt(minSize) + ('px, ' + ($elm$core$String$fromInt(maxSize) + 'px)')));
                            }
                        case 'Fill':
                            var i = x.a;
                            var _v7 = _Utils_Tuple2(minimum, maximum);
                            if (_v7.a.$ === 'Nothing') {
                                if (_v7.b.$ === 'Nothing') {
                                    var _v8 = _v7.a;
                                    var _v9 = _v7.b;
                                    return $elm$core$String$fromInt(i) + 'fr';
                                } else {
                                    var _v11 = _v7.a;
                                    var maxSize = _v7.b.a;
                                    return 'minmax(max-content, ' + ($elm$core$String$fromInt(maxSize) + 'px)');
                                }
                            } else if (_v7.b.$ === 'Nothing') {
                                var minSize = _v7.a.a;
                                var _v10 = _v7.b;
                                return 'minmax(' + ($elm$core$String$fromInt(minSize) + ('px, ' + ($elm$core$String$fromInt(i) + "frfr)")));
                            } else {
                                var minSize = _v7.a.a;
                                var maxSize = _v7.b.a;
                                return 'minmax(' + ($elm$core$String$fromInt(minSize) + ('px, ' + ($elm$core$String$fromInt(maxSize) + 'px)')));
                            }
                        case 'Min':
                            var m = x.a;
                            var len = x.b;
                            var $temp$minimum = $elm$core$Maybe$Just(m), $temp$maximum = maximum, $temp$x = len;
                            minimum = $temp$minimum;
                            maximum = $temp$maximum;
                            x = $temp$x;
                            continue toGridLengthHelper;
                        default:
                            var m = x.a;
                            var len = x.b;
                            var $temp$minimum = minimum, $temp$maximum = $elm$core$Maybe$Just(m), $temp$x = len;
                            minimum = $temp$minimum;
                            maximum = $temp$maximum;
                            x = $temp$x;
                            continue toGridLengthHelper;
                    }
                });
                var toGridLength = function(x) {
                    return A3(toGridLengthHelper, $elm$core$Maybe$Nothing, $elm$core$Maybe$Nothing, x);
                };
                var xSpacing = toGridLength(template.spacing.a);
                var ySpacing = toGridLength(template.spacing.b);
                var rows = function(x) {
                    return 'grid-template-rows: ' + (x + ';');
                }(A2($elm$core$String$join, ' ', A2($elm$core$List$map, toGridLength, template.rows)));
                var msRows = function(x) {
                    return '-ms-grid-rows: ' + (x + ';');
                }(A2($elm$core$String$join, ySpacing, A2($elm$core$List$map, toGridLength, template.columns)));
                var msColumns = function(x) {
                    return '-ms-grid-columns: ' + (x + ';');
                }(A2($elm$core$String$join, ySpacing, A2($elm$core$List$map, toGridLength, template.columns)));
                var gapY = 'grid-row-gap:' + (toGridLength(template.spacing.b) + ';');
                var gapX = 'grid-column-gap:' + (toGridLength(template.spacing.a) + ';');
                var columns = function(x) {
                    return 'grid-template-columns: ' + (x + ';');
                }(A2($elm$core$String$join, ' ', A2($elm$core$List$map, toGridLength, template.columns)));
                var _class = '.grid-rows-' + (A2($elm$core$String$join, '-', A2($elm$core$List$map, $mdgriffith$elm_ui$Internal$Model$lengthClassName, template.rows)) + ('-cols-' + (A2($elm$core$String$join, '-', A2($elm$core$List$map, $mdgriffith$elm_ui$Internal$Model$lengthClassName, template.columns)) + ('-space-x-' + ($mdgriffith$elm_ui$Internal$Model$lengthClassName(template.spacing.a) + ('-space-y-' + $mdgriffith$elm_ui$Internal$Model$lengthClassName(template.spacing.b)))))));
                var modernGrid = _class + ('{' + (columns + (rows + (gapX + (gapY + '}')))));
                var supports = '@supports (display:grid) {' + (modernGrid + '}');
                var base = _class + ('{' + (msColumns + (msRows + '}')));
                return _List_fromArray([
                    base,
                    supports
                ]);
            case 'GridPosition':
                var position = rule.a;
                var msPosition = A2($elm$core$String$join, ' ', _List_fromArray([
                    '-ms-grid-row: ' + ($elm$core$String$fromInt(position.row) + ';'),
                    '-ms-grid-row-span: ' + ($elm$core$String$fromInt(position.height) + ';'),
                    '-ms-grid-column: ' + ($elm$core$String$fromInt(position.col) + ';'),
                    '-ms-grid-column-span: ' + ($elm$core$String$fromInt(position.width) + ';')
                ]));
                var modernPosition = A2($elm$core$String$join, ' ', _List_fromArray([
                    'grid-row: ' + ($elm$core$String$fromInt(position.row) + (' / ' + ($elm$core$String$fromInt(position.row + position.height) + ';'))),
                    'grid-column: ' + ($elm$core$String$fromInt(position.col) + (' / ' + ($elm$core$String$fromInt(position.col + position.width) + ';')))
                ]));
                var _class = '.grid-pos-' + ($elm$core$String$fromInt(position.row) + ('-' + ($elm$core$String$fromInt(position.col) + ('-' + ($elm$core$String$fromInt(position.width) + ('-' + $elm$core$String$fromInt(position.height)))))));
                var modernGrid = _class + ('{' + (modernPosition + '}'));
                var supports = '@supports (display:grid) {' + (modernGrid + '}');
                var base = _class + ('{' + (msPosition + '}'));
                return _List_fromArray([
                    base,
                    supports
                ]);
            case 'PseudoSelector':
                var _class = rule.a;
                var styles = rule.b;
                var renderPseudoRule = function(style) {
                    return A3($mdgriffith$elm_ui$Internal$Model$renderStyleRule, options, style, $elm$core$Maybe$Just(_class));
                };
                return A2($elm$core$List$concatMap, renderPseudoRule, styles);
            default:
                var transform = rule.a;
                var val = $mdgriffith$elm_ui$Internal$Model$transformValue(transform);
                var _class = $mdgriffith$elm_ui$Internal$Model$transformClass(transform);
                var _v12 = _Utils_Tuple2(_class, val);
                if (_v12.a.$ === 'Just' && _v12.b.$ === 'Just') {
                    var cls = _v12.a.a;
                    var v = _v12.b.a;
                    return A4($mdgriffith$elm_ui$Internal$Model$renderStyle, options, maybePseudo, '.' + cls, _List_fromArray([
                        A2($mdgriffith$elm_ui$Internal$Model$Property, 'transform', v)
                    ]));
                } else return _List_Nil;
        }
    });
    var $mdgriffith$elm_ui$Internal$Model$encodeStyles = F2(function(options, stylesheet) {
        return $elm$json$Json$Encode$object(A2($elm$core$List$map, function(style) {
            var styled = A3($mdgriffith$elm_ui$Internal$Model$renderStyleRule, options, style, $elm$core$Maybe$Nothing);
            return _Utils_Tuple2($mdgriffith$elm_ui$Internal$Model$getStyleName(style), A2($elm$json$Json$Encode$list, $elm$json$Json$Encode$string, styled));
        }, stylesheet));
    });
    var $mdgriffith$elm_ui$Internal$Model$bracket = F2(function(selector, rules) {
        var renderPair = function(_v0) {
            var name = _v0.a;
            var val = _v0.b;
            return name + (': ' + (val + ';'));
        };
        return selector + (' {' + (A2($elm$core$String$join, '', A2($elm$core$List$map, renderPair, rules)) + '}'));
    });
    var $mdgriffith$elm_ui$Internal$Model$fontRule = F3(function(name, modifier, _v0) {
        var parentAdj = _v0.a;
        var textAdjustment = _v0.b;
        return _List_fromArray([
            A2($mdgriffith$elm_ui$Internal$Model$bracket, '.' + (name + ('.' + (modifier + (', ' + ('.' + (name + (' .' + modifier))))))), parentAdj),
            A2($mdgriffith$elm_ui$Internal$Model$bracket, '.' + (name + ('.' + (modifier + ('> .' + ($mdgriffith$elm_ui$Internal$Style$classes.text + (', .' + (name + (' .' + (modifier + (' > .' + $mdgriffith$elm_ui$Internal$Style$classes.text)))))))))), textAdjustment)
        ]);
    });
    var $mdgriffith$elm_ui$Internal$Model$renderFontAdjustmentRule = F3(function(fontToAdjust, _v0, otherFontName) {
        var full = _v0.a;
        var capital = _v0.b;
        var name = _Utils_eq(fontToAdjust, otherFontName) ? fontToAdjust : otherFontName + (' .' + fontToAdjust);
        return A2($elm$core$String$join, ' ', _Utils_ap(A3($mdgriffith$elm_ui$Internal$Model$fontRule, name, $mdgriffith$elm_ui$Internal$Style$classes.sizeByCapital, capital), A3($mdgriffith$elm_ui$Internal$Model$fontRule, name, $mdgriffith$elm_ui$Internal$Style$classes.fullSize, full)));
    });
    var $mdgriffith$elm_ui$Internal$Model$renderNullAdjustmentRule = F2(function(fontToAdjust, otherFontName) {
        var name = _Utils_eq(fontToAdjust, otherFontName) ? fontToAdjust : otherFontName + (' .' + fontToAdjust);
        return A2($elm$core$String$join, ' ', _List_fromArray([
            A2($mdgriffith$elm_ui$Internal$Model$bracket, '.' + (name + ('.' + ($mdgriffith$elm_ui$Internal$Style$classes.sizeByCapital + (', ' + ('.' + (name + (' .' + $mdgriffith$elm_ui$Internal$Style$classes.sizeByCapital))))))), _List_fromArray([
                _Utils_Tuple2('line-height', '1')
            ])),
            A2($mdgriffith$elm_ui$Internal$Model$bracket, '.' + (name + ('.' + ($mdgriffith$elm_ui$Internal$Style$classes.sizeByCapital + ('> .' + ($mdgriffith$elm_ui$Internal$Style$classes.text + (', .' + (name + (' .' + ($mdgriffith$elm_ui$Internal$Style$classes.sizeByCapital + (' > .' + $mdgriffith$elm_ui$Internal$Style$classes.text)))))))))), _List_fromArray([
                _Utils_Tuple2('vertical-align', '0'),
                _Utils_Tuple2('line-height', '1')
            ]))
        ]));
    });
    var $mdgriffith$elm_ui$Internal$Model$adjust = F3(function(size, height, vertical) {
        return {
            height: height / size,
            size: size,
            vertical: vertical
        };
    });
    var $elm$core$List$maximum = function(list) {
        if (list.b) {
            var x = list.a;
            var xs = list.b;
            return $elm$core$Maybe$Just(A3($elm$core$List$foldl, $elm$core$Basics$max, x, xs));
        } else return $elm$core$Maybe$Nothing;
    };
    var $elm$core$List$minimum = function(list) {
        if (list.b) {
            var x = list.a;
            var xs = list.b;
            return $elm$core$Maybe$Just(A3($elm$core$List$foldl, $elm$core$Basics$min, x, xs));
        } else return $elm$core$Maybe$Nothing;
    };
    var $elm$core$Basics$neq = _Utils_notEqual;
    var $mdgriffith$elm_ui$Internal$Model$convertAdjustment = function(adjustment) {
        var lines = _List_fromArray([
            adjustment.capital,
            adjustment.baseline,
            adjustment.descender,
            adjustment.lowercase
        ]);
        var lineHeight = 1.5;
        var normalDescender = (lineHeight - 1) / 2;
        var oldMiddle = lineHeight / 2;
        var descender = A2($elm$core$Maybe$withDefault, adjustment.descender, $elm$core$List$minimum(lines));
        var newBaseline = A2($elm$core$Maybe$withDefault, adjustment.baseline, $elm$core$List$minimum(A2($elm$core$List$filter, function(x) {
            return !_Utils_eq(x, descender);
        }, lines)));
        var base = lineHeight;
        var ascender = A2($elm$core$Maybe$withDefault, adjustment.capital, $elm$core$List$maximum(lines));
        var capitalSize = 1 / (ascender - newBaseline);
        var capitalVertical = 1 - ascender;
        var fullSize = 1 / (ascender - descender);
        var fullVertical = 1 - ascender;
        var newCapitalMiddle = (ascender - newBaseline) / 2 + newBaseline;
        var newFullMiddle = (ascender - descender) / 2 + descender;
        return {
            capital: A3($mdgriffith$elm_ui$Internal$Model$adjust, capitalSize, ascender - newBaseline, capitalVertical),
            full: A3($mdgriffith$elm_ui$Internal$Model$adjust, fullSize, ascender - descender, fullVertical)
        };
    };
    var $mdgriffith$elm_ui$Internal$Model$fontAdjustmentRules = function(converted) {
        return _Utils_Tuple2(_List_fromArray([
            _Utils_Tuple2('display', 'block')
        ]), _List_fromArray([
            _Utils_Tuple2('display', 'inline-block'),
            _Utils_Tuple2('line-height', $elm$core$String$fromFloat(converted.height)),
            _Utils_Tuple2('vertical-align', $elm$core$String$fromFloat(converted.vertical) + 'em'),
            _Utils_Tuple2('font-size', $elm$core$String$fromFloat(converted.size) + 'em')
        ]));
    };
    var $mdgriffith$elm_ui$Internal$Model$typefaceAdjustment = function(typefaces) {
        return A3($elm$core$List$foldl, F2(function(face, found) {
            if (found.$ === 'Nothing') {
                if (face.$ === 'FontWith') {
                    var _with = face.a;
                    var _v2 = _with.adjustment;
                    if (_v2.$ === 'Nothing') return found;
                    else {
                        var adjustment = _v2.a;
                        return $elm$core$Maybe$Just(_Utils_Tuple2($mdgriffith$elm_ui$Internal$Model$fontAdjustmentRules(function($) {
                            return $.full;
                        }($mdgriffith$elm_ui$Internal$Model$convertAdjustment(adjustment))), $mdgriffith$elm_ui$Internal$Model$fontAdjustmentRules(function($) {
                            return $.capital;
                        }($mdgriffith$elm_ui$Internal$Model$convertAdjustment(adjustment)))));
                    }
                } else return found;
            } else return found;
        }), $elm$core$Maybe$Nothing, typefaces);
    };
    var $mdgriffith$elm_ui$Internal$Model$renderTopLevelValues = function(rules) {
        var withImport = function(font) {
            if (font.$ === 'ImportFont') {
                var url = font.b;
                return $elm$core$Maybe$Just('@import url(\'' + (url + '\');'));
            } else return $elm$core$Maybe$Nothing;
        };
        var fontImports = function(_v2) {
            var name = _v2.a;
            var typefaces = _v2.b;
            var imports = A2($elm$core$String$join, '\n', A2($elm$core$List$filterMap, withImport, typefaces));
            return imports;
        };
        var allNames = A2($elm$core$List$map, $elm$core$Tuple$first, rules);
        var fontAdjustments = function(_v1) {
            var name = _v1.a;
            var typefaces = _v1.b;
            var _v0 = $mdgriffith$elm_ui$Internal$Model$typefaceAdjustment(typefaces);
            if (_v0.$ === 'Nothing') return A2($elm$core$String$join, '', A2($elm$core$List$map, $mdgriffith$elm_ui$Internal$Model$renderNullAdjustmentRule(name), allNames));
            else {
                var adjustment = _v0.a;
                return A2($elm$core$String$join, '', A2($elm$core$List$map, A2($mdgriffith$elm_ui$Internal$Model$renderFontAdjustmentRule, name, adjustment), allNames));
            }
        };
        return _Utils_ap(A2($elm$core$String$join, '\n', A2($elm$core$List$map, fontImports, rules)), A2($elm$core$String$join, '\n', A2($elm$core$List$map, fontAdjustments, rules)));
    };
    var $mdgriffith$elm_ui$Internal$Model$topLevelValue = function(rule) {
        if (rule.$ === 'FontFamily') {
            var name = rule.a;
            var typefaces = rule.b;
            return $elm$core$Maybe$Just(_Utils_Tuple2(name, typefaces));
        } else return $elm$core$Maybe$Nothing;
    };
    var $mdgriffith$elm_ui$Internal$Model$toStyleSheetString = F2(function(options, stylesheet) {
        var combine = F2(function(style, rendered) {
            return {
                rules: _Utils_ap(rendered.rules, A3($mdgriffith$elm_ui$Internal$Model$renderStyleRule, options, style, $elm$core$Maybe$Nothing)),
                topLevel: function() {
                    var _v1 = $mdgriffith$elm_ui$Internal$Model$topLevelValue(style);
                    if (_v1.$ === 'Nothing') return rendered.topLevel;
                    else {
                        var topLevel = _v1.a;
                        return A2($elm$core$List$cons, topLevel, rendered.topLevel);
                    }
                }()
            };
        });
        var _v0 = A3($elm$core$List$foldl, combine, {
            rules: _List_Nil,
            topLevel: _List_Nil
        }, stylesheet);
        var topLevel1 = _v0.topLevel;
        var rules = _v0.rules;
        return _Utils_ap($mdgriffith$elm_ui$Internal$Model$renderTopLevelValues(topLevel1), $elm$core$String$concat(rules));
    });
    var $mdgriffith$elm_ui$Internal$Model$toStyleSheet = F2(function(options, styleSheet) {
        var _v0 = options.mode;
        switch(_v0.$){
            case 'Layout':
                return A3($elm$virtual_dom$VirtualDom$node, 'div', _List_Nil, _List_fromArray([
                    A3($elm$virtual_dom$VirtualDom$node, 'style', _List_Nil, _List_fromArray([
                        $elm$virtual_dom$VirtualDom$text(A2($mdgriffith$elm_ui$Internal$Model$toStyleSheetString, options, styleSheet))
                    ]))
                ]));
            case 'NoStaticStyleSheet':
                return A3($elm$virtual_dom$VirtualDom$node, 'div', _List_Nil, _List_fromArray([
                    A3($elm$virtual_dom$VirtualDom$node, 'style', _List_Nil, _List_fromArray([
                        $elm$virtual_dom$VirtualDom$text(A2($mdgriffith$elm_ui$Internal$Model$toStyleSheetString, options, styleSheet))
                    ]))
                ]));
            default:
                return A3($elm$virtual_dom$VirtualDom$node, 'elm-ui-rules', _List_fromArray([
                    A2($elm$virtual_dom$VirtualDom$property, 'rules', A2($mdgriffith$elm_ui$Internal$Model$encodeStyles, options, styleSheet))
                ]), _List_Nil);
        }
    });
    var $mdgriffith$elm_ui$Internal$Model$embedKeyed = F4(function(_static, opts, styles, children) {
        var dynamicStyleSheet = A2($mdgriffith$elm_ui$Internal$Model$toStyleSheet, opts, A3($elm$core$List$foldl, $mdgriffith$elm_ui$Internal$Model$reduceStyles, _Utils_Tuple2($elm$core$Set$empty, $mdgriffith$elm_ui$Internal$Model$renderFocusStyle(opts.focus)), styles).b);
        return _static ? A2($elm$core$List$cons, _Utils_Tuple2('static-stylesheet', $mdgriffith$elm_ui$Internal$Model$staticRoot(opts)), A2($elm$core$List$cons, _Utils_Tuple2('dynamic-stylesheet', dynamicStyleSheet), children)) : A2($elm$core$List$cons, _Utils_Tuple2('dynamic-stylesheet', dynamicStyleSheet), children);
    });
    var $mdgriffith$elm_ui$Internal$Model$embedWith = F4(function(_static, opts, styles, children) {
        var dynamicStyleSheet = A2($mdgriffith$elm_ui$Internal$Model$toStyleSheet, opts, A3($elm$core$List$foldl, $mdgriffith$elm_ui$Internal$Model$reduceStyles, _Utils_Tuple2($elm$core$Set$empty, $mdgriffith$elm_ui$Internal$Model$renderFocusStyle(opts.focus)), styles).b);
        return _static ? A2($elm$core$List$cons, $mdgriffith$elm_ui$Internal$Model$staticRoot(opts), A2($elm$core$List$cons, dynamicStyleSheet, children)) : A2($elm$core$List$cons, dynamicStyleSheet, children);
    });
    var $mdgriffith$elm_ui$Internal$Flag$heightBetween = $mdgriffith$elm_ui$Internal$Flag$flag(45);
    var $mdgriffith$elm_ui$Internal$Flag$heightFill = $mdgriffith$elm_ui$Internal$Flag$flag(37);
    var $elm$virtual_dom$VirtualDom$keyedNode = function(tag) {
        return _VirtualDom_keyedNode(_VirtualDom_noScript(tag));
    };
    var $elm$html$Html$p = _VirtualDom_node('p');
    var $elm$core$Bitwise$and = _Bitwise_and;
    var $mdgriffith$elm_ui$Internal$Flag$present = F2(function(myFlag, _v0) {
        var fieldOne = _v0.a;
        var fieldTwo = _v0.b;
        if (myFlag.$ === 'Flag') {
            var first = myFlag.a;
            return _Utils_eq(first & fieldOne, first);
        } else {
            var second = myFlag.a;
            return _Utils_eq(second & fieldTwo, second);
        }
    });
    var $elm$html$Html$s = _VirtualDom_node('s');
    var $elm$html$Html$u = _VirtualDom_node('u');
    var $mdgriffith$elm_ui$Internal$Flag$widthBetween = $mdgriffith$elm_ui$Internal$Flag$flag(44);
    var $mdgriffith$elm_ui$Internal$Flag$widthFill = $mdgriffith$elm_ui$Internal$Flag$flag(39);
    var $mdgriffith$elm_ui$Internal$Model$finalizeNode = F6(function(has, node, attributes, children, embedMode, parentContext) {
        var createNode = F2(function(nodeName, attrs) {
            if (children.$ === 'Keyed') {
                var keyed = children.a;
                return A3($elm$virtual_dom$VirtualDom$keyedNode, nodeName, attrs, function() {
                    switch(embedMode.$){
                        case 'NoStyleSheet':
                            return keyed;
                        case 'OnlyDynamic':
                            var opts = embedMode.a;
                            var styles = embedMode.b;
                            return A4($mdgriffith$elm_ui$Internal$Model$embedKeyed, false, opts, styles, keyed);
                        default:
                            var opts = embedMode.a;
                            var styles = embedMode.b;
                            return A4($mdgriffith$elm_ui$Internal$Model$embedKeyed, true, opts, styles, keyed);
                    }
                }());
            } else {
                var unkeyed = children.a;
                return A2(function() {
                    switch(nodeName){
                        case 'div':
                            return $elm$html$Html$div;
                        case 'p':
                            return $elm$html$Html$p;
                        default:
                            return $elm$virtual_dom$VirtualDom$node(nodeName);
                    }
                }(), attrs, function() {
                    switch(embedMode.$){
                        case 'NoStyleSheet':
                            return unkeyed;
                        case 'OnlyDynamic':
                            var opts = embedMode.a;
                            var styles = embedMode.b;
                            return A4($mdgriffith$elm_ui$Internal$Model$embedWith, false, opts, styles, unkeyed);
                        default:
                            var opts = embedMode.a;
                            var styles = embedMode.b;
                            return A4($mdgriffith$elm_ui$Internal$Model$embedWith, true, opts, styles, unkeyed);
                    }
                }());
            }
        });
        var html = function() {
            switch(node.$){
                case 'Generic':
                    return A2(createNode, 'div', attributes);
                case 'NodeName':
                    var nodeName = node.a;
                    return A2(createNode, nodeName, attributes);
                default:
                    var nodeName = node.a;
                    var internal = node.b;
                    return A3($elm$virtual_dom$VirtualDom$node, nodeName, attributes, _List_fromArray([
                        A2(createNode, internal, _List_fromArray([
                            $elm$html$Html$Attributes$class($mdgriffith$elm_ui$Internal$Style$classes.any + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.single))
                        ]))
                    ]));
            }
        }();
        switch(parentContext.$){
            case 'AsRow':
                return A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$widthFill, has) && !A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$widthBetween, has) ? html : A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$alignRight, has) ? A2($elm$html$Html$u, _List_fromArray([
                    $elm$html$Html$Attributes$class(A2($elm$core$String$join, ' ', _List_fromArray([
                        $mdgriffith$elm_ui$Internal$Style$classes.any,
                        $mdgriffith$elm_ui$Internal$Style$classes.single,
                        $mdgriffith$elm_ui$Internal$Style$classes.container,
                        $mdgriffith$elm_ui$Internal$Style$classes.contentCenterY,
                        $mdgriffith$elm_ui$Internal$Style$classes.alignContainerRight
                    ])))
                ]), _List_fromArray([
                    html
                ])) : A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$centerX, has) ? A2($elm$html$Html$s, _List_fromArray([
                    $elm$html$Html$Attributes$class(A2($elm$core$String$join, ' ', _List_fromArray([
                        $mdgriffith$elm_ui$Internal$Style$classes.any,
                        $mdgriffith$elm_ui$Internal$Style$classes.single,
                        $mdgriffith$elm_ui$Internal$Style$classes.container,
                        $mdgriffith$elm_ui$Internal$Style$classes.contentCenterY,
                        $mdgriffith$elm_ui$Internal$Style$classes.alignContainerCenterX
                    ])))
                ]), _List_fromArray([
                    html
                ])) : html;
            case 'AsColumn':
                return A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$heightFill, has) && !A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$heightBetween, has) ? html : A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$centerY, has) ? A2($elm$html$Html$s, _List_fromArray([
                    $elm$html$Html$Attributes$class(A2($elm$core$String$join, ' ', _List_fromArray([
                        $mdgriffith$elm_ui$Internal$Style$classes.any,
                        $mdgriffith$elm_ui$Internal$Style$classes.single,
                        $mdgriffith$elm_ui$Internal$Style$classes.container,
                        $mdgriffith$elm_ui$Internal$Style$classes.alignContainerCenterY
                    ])))
                ]), _List_fromArray([
                    html
                ])) : A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$alignBottom, has) ? A2($elm$html$Html$u, _List_fromArray([
                    $elm$html$Html$Attributes$class(A2($elm$core$String$join, ' ', _List_fromArray([
                        $mdgriffith$elm_ui$Internal$Style$classes.any,
                        $mdgriffith$elm_ui$Internal$Style$classes.single,
                        $mdgriffith$elm_ui$Internal$Style$classes.container,
                        $mdgriffith$elm_ui$Internal$Style$classes.alignContainerBottom
                    ])))
                ]), _List_fromArray([
                    html
                ])) : html;
            default:
                return html;
        }
    });
    var $elm$html$Html$text = $elm$virtual_dom$VirtualDom$text;
    var $mdgriffith$elm_ui$Internal$Model$textElementClasses = $mdgriffith$elm_ui$Internal$Style$classes.any + (' ' + ($mdgriffith$elm_ui$Internal$Style$classes.text + (' ' + ($mdgriffith$elm_ui$Internal$Style$classes.widthContent + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.heightContent)))));
    var $mdgriffith$elm_ui$Internal$Model$textElement = function(str) {
        return A2($elm$html$Html$div, _List_fromArray([
            $elm$html$Html$Attributes$class($mdgriffith$elm_ui$Internal$Model$textElementClasses)
        ]), _List_fromArray([
            $elm$html$Html$text(str)
        ]));
    };
    var $mdgriffith$elm_ui$Internal$Model$textElementFillClasses = $mdgriffith$elm_ui$Internal$Style$classes.any + (' ' + ($mdgriffith$elm_ui$Internal$Style$classes.text + (' ' + ($mdgriffith$elm_ui$Internal$Style$classes.widthFill + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.heightFill)))));
    var $mdgriffith$elm_ui$Internal$Model$textElementFill = function(str) {
        return A2($elm$html$Html$div, _List_fromArray([
            $elm$html$Html$Attributes$class($mdgriffith$elm_ui$Internal$Model$textElementFillClasses)
        ]), _List_fromArray([
            $elm$html$Html$text(str)
        ]));
    };
    var $mdgriffith$elm_ui$Internal$Model$createElement = F3(function(context, children, rendered) {
        var gatherKeyed = F2(function(_v8, _v9) {
            var key = _v8.a;
            var child = _v8.b;
            var htmls = _v9.a;
            var existingStyles = _v9.b;
            switch(child.$){
                case 'Unstyled':
                    var html = child.a;
                    return _Utils_eq(context, $mdgriffith$elm_ui$Internal$Model$asParagraph) ? _Utils_Tuple2(A2($elm$core$List$cons, _Utils_Tuple2(key, html(context)), htmls), existingStyles) : _Utils_Tuple2(A2($elm$core$List$cons, _Utils_Tuple2(key, html(context)), htmls), existingStyles);
                case 'Styled':
                    var styled = child.a;
                    return _Utils_eq(context, $mdgriffith$elm_ui$Internal$Model$asParagraph) ? _Utils_Tuple2(A2($elm$core$List$cons, _Utils_Tuple2(key, A2(styled.html, $mdgriffith$elm_ui$Internal$Model$NoStyleSheet, context)), htmls), $elm$core$List$isEmpty(existingStyles) ? styled.styles : _Utils_ap(styled.styles, existingStyles)) : _Utils_Tuple2(A2($elm$core$List$cons, _Utils_Tuple2(key, A2(styled.html, $mdgriffith$elm_ui$Internal$Model$NoStyleSheet, context)), htmls), $elm$core$List$isEmpty(existingStyles) ? styled.styles : _Utils_ap(styled.styles, existingStyles));
                case 'Text':
                    var str = child.a;
                    return _Utils_Tuple2(A2($elm$core$List$cons, _Utils_Tuple2(key, _Utils_eq(context, $mdgriffith$elm_ui$Internal$Model$asEl) ? $mdgriffith$elm_ui$Internal$Model$textElementFill(str) : $mdgriffith$elm_ui$Internal$Model$textElement(str)), htmls), existingStyles);
                default:
                    return _Utils_Tuple2(htmls, existingStyles);
            }
        });
        var gather = F2(function(child, _v6) {
            var htmls = _v6.a;
            var existingStyles = _v6.b;
            switch(child.$){
                case 'Unstyled':
                    var html = child.a;
                    return _Utils_eq(context, $mdgriffith$elm_ui$Internal$Model$asParagraph) ? _Utils_Tuple2(A2($elm$core$List$cons, html(context), htmls), existingStyles) : _Utils_Tuple2(A2($elm$core$List$cons, html(context), htmls), existingStyles);
                case 'Styled':
                    var styled = child.a;
                    return _Utils_eq(context, $mdgriffith$elm_ui$Internal$Model$asParagraph) ? _Utils_Tuple2(A2($elm$core$List$cons, A2(styled.html, $mdgriffith$elm_ui$Internal$Model$NoStyleSheet, context), htmls), $elm$core$List$isEmpty(existingStyles) ? styled.styles : _Utils_ap(styled.styles, existingStyles)) : _Utils_Tuple2(A2($elm$core$List$cons, A2(styled.html, $mdgriffith$elm_ui$Internal$Model$NoStyleSheet, context), htmls), $elm$core$List$isEmpty(existingStyles) ? styled.styles : _Utils_ap(styled.styles, existingStyles));
                case 'Text':
                    var str = child.a;
                    return _Utils_Tuple2(A2($elm$core$List$cons, _Utils_eq(context, $mdgriffith$elm_ui$Internal$Model$asEl) ? $mdgriffith$elm_ui$Internal$Model$textElementFill(str) : $mdgriffith$elm_ui$Internal$Model$textElement(str), htmls), existingStyles);
                default:
                    return _Utils_Tuple2(htmls, existingStyles);
            }
        });
        if (children.$ === 'Keyed') {
            var keyedChildren = children.a;
            var _v1 = A3($elm$core$List$foldr, gatherKeyed, _Utils_Tuple2(_List_Nil, _List_Nil), keyedChildren);
            var keyed = _v1.a;
            var styles = _v1.b;
            var newStyles = $elm$core$List$isEmpty(styles) ? rendered.styles : _Utils_ap(rendered.styles, styles);
            if (!newStyles.b) return $mdgriffith$elm_ui$Internal$Model$Unstyled(A5($mdgriffith$elm_ui$Internal$Model$finalizeNode, rendered.has, rendered.node, rendered.attributes, $mdgriffith$elm_ui$Internal$Model$Keyed(A3($mdgriffith$elm_ui$Internal$Model$addKeyedChildren, 'nearby-element-pls', keyed, rendered.children)), $mdgriffith$elm_ui$Internal$Model$NoStyleSheet));
            else {
                var allStyles = newStyles;
                return $mdgriffith$elm_ui$Internal$Model$Styled({
                    html: A4($mdgriffith$elm_ui$Internal$Model$finalizeNode, rendered.has, rendered.node, rendered.attributes, $mdgriffith$elm_ui$Internal$Model$Keyed(A3($mdgriffith$elm_ui$Internal$Model$addKeyedChildren, 'nearby-element-pls', keyed, rendered.children))),
                    styles: allStyles
                });
            }
        } else {
            var unkeyedChildren = children.a;
            var _v3 = A3($elm$core$List$foldr, gather, _Utils_Tuple2(_List_Nil, _List_Nil), unkeyedChildren);
            var unkeyed = _v3.a;
            var styles = _v3.b;
            var newStyles = $elm$core$List$isEmpty(styles) ? rendered.styles : _Utils_ap(rendered.styles, styles);
            if (!newStyles.b) return $mdgriffith$elm_ui$Internal$Model$Unstyled(A5($mdgriffith$elm_ui$Internal$Model$finalizeNode, rendered.has, rendered.node, rendered.attributes, $mdgriffith$elm_ui$Internal$Model$Unkeyed(A2($mdgriffith$elm_ui$Internal$Model$addChildren, unkeyed, rendered.children)), $mdgriffith$elm_ui$Internal$Model$NoStyleSheet));
            else {
                var allStyles = newStyles;
                return $mdgriffith$elm_ui$Internal$Model$Styled({
                    html: A4($mdgriffith$elm_ui$Internal$Model$finalizeNode, rendered.has, rendered.node, rendered.attributes, $mdgriffith$elm_ui$Internal$Model$Unkeyed(A2($mdgriffith$elm_ui$Internal$Model$addChildren, unkeyed, rendered.children))),
                    styles: allStyles
                });
            }
        }
    });
    var $mdgriffith$elm_ui$Internal$Model$Single = F3(function(a, b, c) {
        return {
            $: 'Single',
            a: a,
            b: b,
            c: c
        };
    });
    var $mdgriffith$elm_ui$Internal$Model$Transform = function(a) {
        return {
            $: 'Transform',
            a: a
        };
    };
    var $mdgriffith$elm_ui$Internal$Flag$Field = F2(function(a, b) {
        return {
            $: 'Field',
            a: a,
            b: b
        };
    });
    var $elm$core$Bitwise$or = _Bitwise_or;
    var $mdgriffith$elm_ui$Internal$Flag$add = F2(function(myFlag, _v0) {
        var one = _v0.a;
        var two = _v0.b;
        if (myFlag.$ === 'Flag') {
            var first = myFlag.a;
            return A2($mdgriffith$elm_ui$Internal$Flag$Field, first | one, two);
        } else {
            var second = myFlag.a;
            return A2($mdgriffith$elm_ui$Internal$Flag$Field, one, second | two);
        }
    });
    var $mdgriffith$elm_ui$Internal$Model$ChildrenBehind = function(a) {
        return {
            $: 'ChildrenBehind',
            a: a
        };
    };
    var $mdgriffith$elm_ui$Internal$Model$ChildrenBehindAndInFront = F2(function(a, b) {
        return {
            $: 'ChildrenBehindAndInFront',
            a: a,
            b: b
        };
    });
    var $mdgriffith$elm_ui$Internal$Model$ChildrenInFront = function(a) {
        return {
            $: 'ChildrenInFront',
            a: a
        };
    };
    var $mdgriffith$elm_ui$Internal$Model$nearbyElement = F2(function(location, elem) {
        return A2($elm$html$Html$div, _List_fromArray([
            $elm$html$Html$Attributes$class(function() {
                switch(location.$){
                    case 'Above':
                        return A2($elm$core$String$join, ' ', _List_fromArray([
                            $mdgriffith$elm_ui$Internal$Style$classes.nearby,
                            $mdgriffith$elm_ui$Internal$Style$classes.single,
                            $mdgriffith$elm_ui$Internal$Style$classes.above
                        ]));
                    case 'Below':
                        return A2($elm$core$String$join, ' ', _List_fromArray([
                            $mdgriffith$elm_ui$Internal$Style$classes.nearby,
                            $mdgriffith$elm_ui$Internal$Style$classes.single,
                            $mdgriffith$elm_ui$Internal$Style$classes.below
                        ]));
                    case 'OnRight':
                        return A2($elm$core$String$join, ' ', _List_fromArray([
                            $mdgriffith$elm_ui$Internal$Style$classes.nearby,
                            $mdgriffith$elm_ui$Internal$Style$classes.single,
                            $mdgriffith$elm_ui$Internal$Style$classes.onRight
                        ]));
                    case 'OnLeft':
                        return A2($elm$core$String$join, ' ', _List_fromArray([
                            $mdgriffith$elm_ui$Internal$Style$classes.nearby,
                            $mdgriffith$elm_ui$Internal$Style$classes.single,
                            $mdgriffith$elm_ui$Internal$Style$classes.onLeft
                        ]));
                    case 'InFront':
                        return A2($elm$core$String$join, ' ', _List_fromArray([
                            $mdgriffith$elm_ui$Internal$Style$classes.nearby,
                            $mdgriffith$elm_ui$Internal$Style$classes.single,
                            $mdgriffith$elm_ui$Internal$Style$classes.inFront
                        ]));
                    default:
                        return A2($elm$core$String$join, ' ', _List_fromArray([
                            $mdgriffith$elm_ui$Internal$Style$classes.nearby,
                            $mdgriffith$elm_ui$Internal$Style$classes.single,
                            $mdgriffith$elm_ui$Internal$Style$classes.behind
                        ]));
                }
            }())
        ]), _List_fromArray([
            function() {
                switch(elem.$){
                    case 'Empty':
                        return $elm$virtual_dom$VirtualDom$text('');
                    case 'Text':
                        var str = elem.a;
                        return $mdgriffith$elm_ui$Internal$Model$textElement(str);
                    case 'Unstyled':
                        var html = elem.a;
                        return html($mdgriffith$elm_ui$Internal$Model$asEl);
                    default:
                        var styled = elem.a;
                        return A2(styled.html, $mdgriffith$elm_ui$Internal$Model$NoStyleSheet, $mdgriffith$elm_ui$Internal$Model$asEl);
                }
            }()
        ]));
    });
    var $mdgriffith$elm_ui$Internal$Model$addNearbyElement = F3(function(location, elem, existing) {
        var nearby = A2($mdgriffith$elm_ui$Internal$Model$nearbyElement, location, elem);
        switch(existing.$){
            case 'NoNearbyChildren':
                if (location.$ === 'Behind') return $mdgriffith$elm_ui$Internal$Model$ChildrenBehind(_List_fromArray([
                    nearby
                ]));
                else return $mdgriffith$elm_ui$Internal$Model$ChildrenInFront(_List_fromArray([
                    nearby
                ]));
            case 'ChildrenBehind':
                var existingBehind = existing.a;
                if (location.$ === 'Behind') return $mdgriffith$elm_ui$Internal$Model$ChildrenBehind(A2($elm$core$List$cons, nearby, existingBehind));
                else return A2($mdgriffith$elm_ui$Internal$Model$ChildrenBehindAndInFront, existingBehind, _List_fromArray([
                    nearby
                ]));
            case 'ChildrenInFront':
                var existingInFront = existing.a;
                if (location.$ === 'Behind') return A2($mdgriffith$elm_ui$Internal$Model$ChildrenBehindAndInFront, _List_fromArray([
                    nearby
                ]), existingInFront);
                else return $mdgriffith$elm_ui$Internal$Model$ChildrenInFront(A2($elm$core$List$cons, nearby, existingInFront));
            default:
                var existingBehind = existing.a;
                var existingInFront = existing.b;
                if (location.$ === 'Behind') return A2($mdgriffith$elm_ui$Internal$Model$ChildrenBehindAndInFront, A2($elm$core$List$cons, nearby, existingBehind), existingInFront);
                else return A2($mdgriffith$elm_ui$Internal$Model$ChildrenBehindAndInFront, existingBehind, A2($elm$core$List$cons, nearby, existingInFront));
        }
    });
    var $mdgriffith$elm_ui$Internal$Model$Embedded = F2(function(a, b) {
        return {
            $: 'Embedded',
            a: a,
            b: b
        };
    });
    var $mdgriffith$elm_ui$Internal$Model$NodeName = function(a) {
        return {
            $: 'NodeName',
            a: a
        };
    };
    var $mdgriffith$elm_ui$Internal$Model$addNodeName = F2(function(newNode, old) {
        switch(old.$){
            case 'Generic':
                return $mdgriffith$elm_ui$Internal$Model$NodeName(newNode);
            case 'NodeName':
                var name = old.a;
                return A2($mdgriffith$elm_ui$Internal$Model$Embedded, name, newNode);
            default:
                var x = old.a;
                var y = old.b;
                return A2($mdgriffith$elm_ui$Internal$Model$Embedded, x, y);
        }
    });
    var $mdgriffith$elm_ui$Internal$Model$alignXName = function(align) {
        switch(align.$){
            case 'Left':
                return $mdgriffith$elm_ui$Internal$Style$classes.alignedHorizontally + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.alignLeft);
            case 'Right':
                return $mdgriffith$elm_ui$Internal$Style$classes.alignedHorizontally + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.alignRight);
            default:
                return $mdgriffith$elm_ui$Internal$Style$classes.alignedHorizontally + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.alignCenterX);
        }
    };
    var $mdgriffith$elm_ui$Internal$Model$alignYName = function(align) {
        switch(align.$){
            case 'Top':
                return $mdgriffith$elm_ui$Internal$Style$classes.alignedVertically + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.alignTop);
            case 'Bottom':
                return $mdgriffith$elm_ui$Internal$Style$classes.alignedVertically + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.alignBottom);
            default:
                return $mdgriffith$elm_ui$Internal$Style$classes.alignedVertically + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.alignCenterY);
        }
    };
    var $mdgriffith$elm_ui$Internal$Model$FullTransform = F4(function(a, b, c, d) {
        return {
            $: 'FullTransform',
            a: a,
            b: b,
            c: c,
            d: d
        };
    });
    var $mdgriffith$elm_ui$Internal$Model$Moved = function(a) {
        return {
            $: 'Moved',
            a: a
        };
    };
    var $mdgriffith$elm_ui$Internal$Model$composeTransformation = F2(function(transform, component) {
        switch(transform.$){
            case 'Untransformed':
                switch(component.$){
                    case 'MoveX':
                        var x = component.a;
                        return $mdgriffith$elm_ui$Internal$Model$Moved(_Utils_Tuple3(x, 0, 0));
                    case 'MoveY':
                        var y = component.a;
                        return $mdgriffith$elm_ui$Internal$Model$Moved(_Utils_Tuple3(0, y, 0));
                    case 'MoveZ':
                        var z = component.a;
                        return $mdgriffith$elm_ui$Internal$Model$Moved(_Utils_Tuple3(0, 0, z));
                    case 'MoveXYZ':
                        var xyz = component.a;
                        return $mdgriffith$elm_ui$Internal$Model$Moved(xyz);
                    case 'Rotate':
                        var xyz = component.a;
                        var angle = component.b;
                        return A4($mdgriffith$elm_ui$Internal$Model$FullTransform, _Utils_Tuple3(0, 0, 0), _Utils_Tuple3(1, 1, 1), xyz, angle);
                    default:
                        var xyz = component.a;
                        return A4($mdgriffith$elm_ui$Internal$Model$FullTransform, _Utils_Tuple3(0, 0, 0), xyz, _Utils_Tuple3(0, 0, 1), 0);
                }
            case 'Moved':
                var moved = transform.a;
                var x = moved.a;
                var y = moved.b;
                var z = moved.c;
                switch(component.$){
                    case 'MoveX':
                        var newX = component.a;
                        return $mdgriffith$elm_ui$Internal$Model$Moved(_Utils_Tuple3(newX, y, z));
                    case 'MoveY':
                        var newY = component.a;
                        return $mdgriffith$elm_ui$Internal$Model$Moved(_Utils_Tuple3(x, newY, z));
                    case 'MoveZ':
                        var newZ = component.a;
                        return $mdgriffith$elm_ui$Internal$Model$Moved(_Utils_Tuple3(x, y, newZ));
                    case 'MoveXYZ':
                        var xyz = component.a;
                        return $mdgriffith$elm_ui$Internal$Model$Moved(xyz);
                    case 'Rotate':
                        var xyz = component.a;
                        var angle = component.b;
                        return A4($mdgriffith$elm_ui$Internal$Model$FullTransform, moved, _Utils_Tuple3(1, 1, 1), xyz, angle);
                    default:
                        var scale = component.a;
                        return A4($mdgriffith$elm_ui$Internal$Model$FullTransform, moved, scale, _Utils_Tuple3(0, 0, 1), 0);
                }
            default:
                var moved = transform.a;
                var x = moved.a;
                var y = moved.b;
                var z = moved.c;
                var scaled = transform.b;
                var origin = transform.c;
                var angle = transform.d;
                switch(component.$){
                    case 'MoveX':
                        var newX = component.a;
                        return A4($mdgriffith$elm_ui$Internal$Model$FullTransform, _Utils_Tuple3(newX, y, z), scaled, origin, angle);
                    case 'MoveY':
                        var newY = component.a;
                        return A4($mdgriffith$elm_ui$Internal$Model$FullTransform, _Utils_Tuple3(x, newY, z), scaled, origin, angle);
                    case 'MoveZ':
                        var newZ = component.a;
                        return A4($mdgriffith$elm_ui$Internal$Model$FullTransform, _Utils_Tuple3(x, y, newZ), scaled, origin, angle);
                    case 'MoveXYZ':
                        var newMove = component.a;
                        return A4($mdgriffith$elm_ui$Internal$Model$FullTransform, newMove, scaled, origin, angle);
                    case 'Rotate':
                        var newOrigin = component.a;
                        var newAngle = component.b;
                        return A4($mdgriffith$elm_ui$Internal$Model$FullTransform, moved, scaled, newOrigin, newAngle);
                    default:
                        var newScale = component.a;
                        return A4($mdgriffith$elm_ui$Internal$Model$FullTransform, moved, newScale, origin, angle);
                }
        }
    });
    var $mdgriffith$elm_ui$Internal$Flag$height = $mdgriffith$elm_ui$Internal$Flag$flag(7);
    var $mdgriffith$elm_ui$Internal$Flag$heightContent = $mdgriffith$elm_ui$Internal$Flag$flag(36);
    var $mdgriffith$elm_ui$Internal$Flag$merge = F2(function(_v0, _v1) {
        var one = _v0.a;
        var two = _v0.b;
        var three = _v1.a;
        var four = _v1.b;
        return A2($mdgriffith$elm_ui$Internal$Flag$Field, one | three, two | four);
    });
    var $mdgriffith$elm_ui$Internal$Flag$none = A2($mdgriffith$elm_ui$Internal$Flag$Field, 0, 0);
    var $mdgriffith$elm_ui$Internal$Model$renderHeight = function(h) {
        switch(h.$){
            case 'Px':
                var px = h.a;
                var val = $elm$core$String$fromInt(px);
                var name = 'height-px-' + val;
                return _Utils_Tuple3($mdgriffith$elm_ui$Internal$Flag$none, $mdgriffith$elm_ui$Internal$Style$classes.heightExact + (' ' + name), _List_fromArray([
                    A3($mdgriffith$elm_ui$Internal$Model$Single, name, 'height', val + 'px')
                ]));
            case 'Content':
                return _Utils_Tuple3(A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$heightContent, $mdgriffith$elm_ui$Internal$Flag$none), $mdgriffith$elm_ui$Internal$Style$classes.heightContent, _List_Nil);
            case 'Fill':
                var portion = h.a;
                return portion === 1 ? _Utils_Tuple3(A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$heightFill, $mdgriffith$elm_ui$Internal$Flag$none), $mdgriffith$elm_ui$Internal$Style$classes.heightFill, _List_Nil) : _Utils_Tuple3(A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$heightFill, $mdgriffith$elm_ui$Internal$Flag$none), $mdgriffith$elm_ui$Internal$Style$classes.heightFillPortion + (' height-fill-' + $elm$core$String$fromInt(portion)), _List_fromArray([
                    A3($mdgriffith$elm_ui$Internal$Model$Single, $mdgriffith$elm_ui$Internal$Style$classes.any + ('.' + ($mdgriffith$elm_ui$Internal$Style$classes.column + (' > ' + $mdgriffith$elm_ui$Internal$Style$dot('height-fill-' + $elm$core$String$fromInt(portion))))), 'flex-grow', $elm$core$String$fromInt(portion * 100000))
                ]));
            case 'Min':
                var minSize = h.a;
                var len = h.b;
                var cls = 'min-height-' + $elm$core$String$fromInt(minSize);
                var style = A3($mdgriffith$elm_ui$Internal$Model$Single, cls, 'min-height', $elm$core$String$fromInt(minSize) + 'px !important');
                var _v1 = $mdgriffith$elm_ui$Internal$Model$renderHeight(len);
                var newFlag = _v1.a;
                var newAttrs = _v1.b;
                var newStyle = _v1.c;
                return _Utils_Tuple3(A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$heightBetween, newFlag), cls + (' ' + newAttrs), A2($elm$core$List$cons, style, newStyle));
            default:
                var maxSize = h.a;
                var len = h.b;
                var cls = 'max-height-' + $elm$core$String$fromInt(maxSize);
                var style = A3($mdgriffith$elm_ui$Internal$Model$Single, cls, 'max-height', $elm$core$String$fromInt(maxSize) + 'px');
                var _v2 = $mdgriffith$elm_ui$Internal$Model$renderHeight(len);
                var newFlag = _v2.a;
                var newAttrs = _v2.b;
                var newStyle = _v2.c;
                return _Utils_Tuple3(A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$heightBetween, newFlag), cls + (' ' + newAttrs), A2($elm$core$List$cons, style, newStyle));
        }
    };
    var $mdgriffith$elm_ui$Internal$Flag$widthContent = $mdgriffith$elm_ui$Internal$Flag$flag(38);
    var $mdgriffith$elm_ui$Internal$Model$renderWidth = function(w) {
        switch(w.$){
            case 'Px':
                var px = w.a;
                return _Utils_Tuple3($mdgriffith$elm_ui$Internal$Flag$none, $mdgriffith$elm_ui$Internal$Style$classes.widthExact + (' width-px-' + $elm$core$String$fromInt(px)), _List_fromArray([
                    A3($mdgriffith$elm_ui$Internal$Model$Single, 'width-px-' + $elm$core$String$fromInt(px), 'width', $elm$core$String$fromInt(px) + 'px')
                ]));
            case 'Content':
                return _Utils_Tuple3(A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$widthContent, $mdgriffith$elm_ui$Internal$Flag$none), $mdgriffith$elm_ui$Internal$Style$classes.widthContent, _List_Nil);
            case 'Fill':
                var portion = w.a;
                return portion === 1 ? _Utils_Tuple3(A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$widthFill, $mdgriffith$elm_ui$Internal$Flag$none), $mdgriffith$elm_ui$Internal$Style$classes.widthFill, _List_Nil) : _Utils_Tuple3(A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$widthFill, $mdgriffith$elm_ui$Internal$Flag$none), $mdgriffith$elm_ui$Internal$Style$classes.widthFillPortion + (' width-fill-' + $elm$core$String$fromInt(portion)), _List_fromArray([
                    A3($mdgriffith$elm_ui$Internal$Model$Single, $mdgriffith$elm_ui$Internal$Style$classes.any + ('.' + ($mdgriffith$elm_ui$Internal$Style$classes.row + (' > ' + $mdgriffith$elm_ui$Internal$Style$dot('width-fill-' + $elm$core$String$fromInt(portion))))), 'flex-grow', $elm$core$String$fromInt(portion * 100000))
                ]));
            case 'Min':
                var minSize = w.a;
                var len = w.b;
                var cls = 'min-width-' + $elm$core$String$fromInt(minSize);
                var style = A3($mdgriffith$elm_ui$Internal$Model$Single, cls, 'min-width', $elm$core$String$fromInt(minSize) + 'px');
                var _v1 = $mdgriffith$elm_ui$Internal$Model$renderWidth(len);
                var newFlag = _v1.a;
                var newAttrs = _v1.b;
                var newStyle = _v1.c;
                return _Utils_Tuple3(A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$widthBetween, newFlag), cls + (' ' + newAttrs), A2($elm$core$List$cons, style, newStyle));
            default:
                var maxSize = w.a;
                var len = w.b;
                var cls = 'max-width-' + $elm$core$String$fromInt(maxSize);
                var style = A3($mdgriffith$elm_ui$Internal$Model$Single, cls, 'max-width', $elm$core$String$fromInt(maxSize) + 'px');
                var _v2 = $mdgriffith$elm_ui$Internal$Model$renderWidth(len);
                var newFlag = _v2.a;
                var newAttrs = _v2.b;
                var newStyle = _v2.c;
                return _Utils_Tuple3(A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$widthBetween, newFlag), cls + (' ' + newAttrs), A2($elm$core$List$cons, style, newStyle));
        }
    };
    var $mdgriffith$elm_ui$Internal$Flag$borderWidth = $mdgriffith$elm_ui$Internal$Flag$flag(27);
    var $mdgriffith$elm_ui$Internal$Model$skippable = F2(function(flag, style) {
        if (_Utils_eq(flag, $mdgriffith$elm_ui$Internal$Flag$borderWidth)) {
            if (style.$ === 'Single') {
                var val = style.c;
                switch(val){
                    case '0px':
                        return true;
                    case '1px':
                        return true;
                    case '2px':
                        return true;
                    case '3px':
                        return true;
                    case '4px':
                        return true;
                    case '5px':
                        return true;
                    case '6px':
                        return true;
                    default:
                        return false;
                }
            } else return false;
        } else switch(style.$){
            case 'FontSize':
                var i = style.a;
                return i >= 8 && i <= 32;
            case 'PaddingStyle':
                var name = style.a;
                var t = style.b;
                var r = style.c;
                var b = style.d;
                var l = style.e;
                return _Utils_eq(t, b) && _Utils_eq(t, r) && _Utils_eq(t, l) && t >= 0 && t <= 24;
            default:
                return false;
        }
    });
    var $mdgriffith$elm_ui$Internal$Flag$width = $mdgriffith$elm_ui$Internal$Flag$flag(6);
    var $mdgriffith$elm_ui$Internal$Flag$xAlign = $mdgriffith$elm_ui$Internal$Flag$flag(30);
    var $mdgriffith$elm_ui$Internal$Flag$yAlign = $mdgriffith$elm_ui$Internal$Flag$flag(29);
    var $mdgriffith$elm_ui$Internal$Model$gatherAttrRecursive = F8(function(classes, node, has, transform, styles, attrs, children, elementAttrs) {
        gatherAttrRecursive: while(true)if (!elementAttrs.b) {
            var _v1 = $mdgriffith$elm_ui$Internal$Model$transformClass(transform);
            if (_v1.$ === 'Nothing') return {
                attributes: A2($elm$core$List$cons, $elm$html$Html$Attributes$class(classes), attrs),
                children: children,
                has: has,
                node: node,
                styles: styles
            };
            else {
                var _class = _v1.a;
                return {
                    attributes: A2($elm$core$List$cons, $elm$html$Html$Attributes$class(classes + (' ' + _class)), attrs),
                    children: children,
                    has: has,
                    node: node,
                    styles: A2($elm$core$List$cons, $mdgriffith$elm_ui$Internal$Model$Transform(transform), styles)
                };
            }
        } else {
            var attribute = elementAttrs.a;
            var remaining = elementAttrs.b;
            switch(attribute.$){
                case 'NoAttribute':
                    var $temp$classes = classes, $temp$node = node, $temp$has = has, $temp$transform = transform, $temp$styles = styles, $temp$attrs = attrs, $temp$children = children, $temp$elementAttrs = remaining;
                    classes = $temp$classes;
                    node = $temp$node;
                    has = $temp$has;
                    transform = $temp$transform;
                    styles = $temp$styles;
                    attrs = $temp$attrs;
                    children = $temp$children;
                    elementAttrs = $temp$elementAttrs;
                    continue gatherAttrRecursive;
                case 'Class':
                    var flag = attribute.a;
                    var exactClassName = attribute.b;
                    if (A2($mdgriffith$elm_ui$Internal$Flag$present, flag, has)) {
                        var $temp$classes = classes, $temp$node = node, $temp$has = has, $temp$transform = transform, $temp$styles = styles, $temp$attrs = attrs, $temp$children = children, $temp$elementAttrs = remaining;
                        classes = $temp$classes;
                        node = $temp$node;
                        has = $temp$has;
                        transform = $temp$transform;
                        styles = $temp$styles;
                        attrs = $temp$attrs;
                        children = $temp$children;
                        elementAttrs = $temp$elementAttrs;
                        continue gatherAttrRecursive;
                    } else {
                        var $temp$classes = exactClassName + (' ' + classes), $temp$node = node, $temp$has = A2($mdgriffith$elm_ui$Internal$Flag$add, flag, has), $temp$transform = transform, $temp$styles = styles, $temp$attrs = attrs, $temp$children = children, $temp$elementAttrs = remaining;
                        classes = $temp$classes;
                        node = $temp$node;
                        has = $temp$has;
                        transform = $temp$transform;
                        styles = $temp$styles;
                        attrs = $temp$attrs;
                        children = $temp$children;
                        elementAttrs = $temp$elementAttrs;
                        continue gatherAttrRecursive;
                    }
                case 'Attr':
                    var actualAttribute = attribute.a;
                    var $temp$classes = classes, $temp$node = node, $temp$has = has, $temp$transform = transform, $temp$styles = styles, $temp$attrs = A2($elm$core$List$cons, actualAttribute, attrs), $temp$children = children, $temp$elementAttrs = remaining;
                    classes = $temp$classes;
                    node = $temp$node;
                    has = $temp$has;
                    transform = $temp$transform;
                    styles = $temp$styles;
                    attrs = $temp$attrs;
                    children = $temp$children;
                    elementAttrs = $temp$elementAttrs;
                    continue gatherAttrRecursive;
                case 'StyleClass':
                    var flag = attribute.a;
                    var style = attribute.b;
                    if (A2($mdgriffith$elm_ui$Internal$Flag$present, flag, has)) {
                        var $temp$classes = classes, $temp$node = node, $temp$has = has, $temp$transform = transform, $temp$styles = styles, $temp$attrs = attrs, $temp$children = children, $temp$elementAttrs = remaining;
                        classes = $temp$classes;
                        node = $temp$node;
                        has = $temp$has;
                        transform = $temp$transform;
                        styles = $temp$styles;
                        attrs = $temp$attrs;
                        children = $temp$children;
                        elementAttrs = $temp$elementAttrs;
                        continue gatherAttrRecursive;
                    } else if (A2($mdgriffith$elm_ui$Internal$Model$skippable, flag, style)) {
                        var $temp$classes = $mdgriffith$elm_ui$Internal$Model$getStyleName(style) + (' ' + classes), $temp$node = node, $temp$has = A2($mdgriffith$elm_ui$Internal$Flag$add, flag, has), $temp$transform = transform, $temp$styles = styles, $temp$attrs = attrs, $temp$children = children, $temp$elementAttrs = remaining;
                        classes = $temp$classes;
                        node = $temp$node;
                        has = $temp$has;
                        transform = $temp$transform;
                        styles = $temp$styles;
                        attrs = $temp$attrs;
                        children = $temp$children;
                        elementAttrs = $temp$elementAttrs;
                        continue gatherAttrRecursive;
                    } else {
                        var $temp$classes = $mdgriffith$elm_ui$Internal$Model$getStyleName(style) + (' ' + classes), $temp$node = node, $temp$has = A2($mdgriffith$elm_ui$Internal$Flag$add, flag, has), $temp$transform = transform, $temp$styles = A2($elm$core$List$cons, style, styles), $temp$attrs = attrs, $temp$children = children, $temp$elementAttrs = remaining;
                        classes = $temp$classes;
                        node = $temp$node;
                        has = $temp$has;
                        transform = $temp$transform;
                        styles = $temp$styles;
                        attrs = $temp$attrs;
                        children = $temp$children;
                        elementAttrs = $temp$elementAttrs;
                        continue gatherAttrRecursive;
                    }
                case 'TransformComponent':
                    var flag = attribute.a;
                    var component = attribute.b;
                    var $temp$classes = classes, $temp$node = node, $temp$has = A2($mdgriffith$elm_ui$Internal$Flag$add, flag, has), $temp$transform = A2($mdgriffith$elm_ui$Internal$Model$composeTransformation, transform, component), $temp$styles = styles, $temp$attrs = attrs, $temp$children = children, $temp$elementAttrs = remaining;
                    classes = $temp$classes;
                    node = $temp$node;
                    has = $temp$has;
                    transform = $temp$transform;
                    styles = $temp$styles;
                    attrs = $temp$attrs;
                    children = $temp$children;
                    elementAttrs = $temp$elementAttrs;
                    continue gatherAttrRecursive;
                case 'Width':
                    var width = attribute.a;
                    if (A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$width, has)) {
                        var $temp$classes = classes, $temp$node = node, $temp$has = has, $temp$transform = transform, $temp$styles = styles, $temp$attrs = attrs, $temp$children = children, $temp$elementAttrs = remaining;
                        classes = $temp$classes;
                        node = $temp$node;
                        has = $temp$has;
                        transform = $temp$transform;
                        styles = $temp$styles;
                        attrs = $temp$attrs;
                        children = $temp$children;
                        elementAttrs = $temp$elementAttrs;
                        continue gatherAttrRecursive;
                    } else switch(width.$){
                        case 'Px':
                            var px = width.a;
                            var $temp$classes = $mdgriffith$elm_ui$Internal$Style$classes.widthExact + (' width-px-' + $elm$core$String$fromInt(px)) + (' ' + classes), $temp$node = node, $temp$has = A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$width, has), $temp$transform = transform, $temp$styles = A2($elm$core$List$cons, A3($mdgriffith$elm_ui$Internal$Model$Single, 'width-px-' + $elm$core$String$fromInt(px), 'width', $elm$core$String$fromInt(px) + 'px'), styles), $temp$attrs = attrs, $temp$children = children, $temp$elementAttrs = remaining;
                            classes = $temp$classes;
                            node = $temp$node;
                            has = $temp$has;
                            transform = $temp$transform;
                            styles = $temp$styles;
                            attrs = $temp$attrs;
                            children = $temp$children;
                            elementAttrs = $temp$elementAttrs;
                            continue gatherAttrRecursive;
                        case 'Content':
                            var $temp$classes = classes + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.widthContent), $temp$node = node, $temp$has = A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$widthContent, A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$width, has)), $temp$transform = transform, $temp$styles = styles, $temp$attrs = attrs, $temp$children = children, $temp$elementAttrs = remaining;
                            classes = $temp$classes;
                            node = $temp$node;
                            has = $temp$has;
                            transform = $temp$transform;
                            styles = $temp$styles;
                            attrs = $temp$attrs;
                            children = $temp$children;
                            elementAttrs = $temp$elementAttrs;
                            continue gatherAttrRecursive;
                        case 'Fill':
                            var portion = width.a;
                            if (portion === 1) {
                                var $temp$classes = classes + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.widthFill), $temp$node = node, $temp$has = A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$widthFill, A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$width, has)), $temp$transform = transform, $temp$styles = styles, $temp$attrs = attrs, $temp$children = children, $temp$elementAttrs = remaining;
                                classes = $temp$classes;
                                node = $temp$node;
                                has = $temp$has;
                                transform = $temp$transform;
                                styles = $temp$styles;
                                attrs = $temp$attrs;
                                children = $temp$children;
                                elementAttrs = $temp$elementAttrs;
                                continue gatherAttrRecursive;
                            } else {
                                var $temp$classes = classes + (' ' + ($mdgriffith$elm_ui$Internal$Style$classes.widthFillPortion + (' width-fill-' + $elm$core$String$fromInt(portion)))), $temp$node = node, $temp$has = A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$widthFill, A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$width, has)), $temp$transform = transform, $temp$styles = A2($elm$core$List$cons, A3($mdgriffith$elm_ui$Internal$Model$Single, $mdgriffith$elm_ui$Internal$Style$classes.any + ('.' + ($mdgriffith$elm_ui$Internal$Style$classes.row + (' > ' + $mdgriffith$elm_ui$Internal$Style$dot('width-fill-' + $elm$core$String$fromInt(portion))))), 'flex-grow', $elm$core$String$fromInt(portion * 100000)), styles), $temp$attrs = attrs, $temp$children = children, $temp$elementAttrs = remaining;
                                classes = $temp$classes;
                                node = $temp$node;
                                has = $temp$has;
                                transform = $temp$transform;
                                styles = $temp$styles;
                                attrs = $temp$attrs;
                                children = $temp$children;
                                elementAttrs = $temp$elementAttrs;
                                continue gatherAttrRecursive;
                            }
                        default:
                            var _v4 = $mdgriffith$elm_ui$Internal$Model$renderWidth(width);
                            var addToFlags = _v4.a;
                            var newClass = _v4.b;
                            var newStyles = _v4.c;
                            var $temp$classes = classes + (' ' + newClass), $temp$node = node, $temp$has = A2($mdgriffith$elm_ui$Internal$Flag$merge, addToFlags, A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$width, has)), $temp$transform = transform, $temp$styles = _Utils_ap(newStyles, styles), $temp$attrs = attrs, $temp$children = children, $temp$elementAttrs = remaining;
                            classes = $temp$classes;
                            node = $temp$node;
                            has = $temp$has;
                            transform = $temp$transform;
                            styles = $temp$styles;
                            attrs = $temp$attrs;
                            children = $temp$children;
                            elementAttrs = $temp$elementAttrs;
                            continue gatherAttrRecursive;
                    }
                case 'Height':
                    var height = attribute.a;
                    if (A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$height, has)) {
                        var $temp$classes = classes, $temp$node = node, $temp$has = has, $temp$transform = transform, $temp$styles = styles, $temp$attrs = attrs, $temp$children = children, $temp$elementAttrs = remaining;
                        classes = $temp$classes;
                        node = $temp$node;
                        has = $temp$has;
                        transform = $temp$transform;
                        styles = $temp$styles;
                        attrs = $temp$attrs;
                        children = $temp$children;
                        elementAttrs = $temp$elementAttrs;
                        continue gatherAttrRecursive;
                    } else switch(height.$){
                        case 'Px':
                            var px = height.a;
                            var val = $elm$core$String$fromInt(px) + 'px';
                            var name = 'height-px-' + val;
                            var $temp$classes = $mdgriffith$elm_ui$Internal$Style$classes.heightExact + (' ' + (name + (' ' + classes))), $temp$node = node, $temp$has = A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$height, has), $temp$transform = transform, $temp$styles = A2($elm$core$List$cons, A3($mdgriffith$elm_ui$Internal$Model$Single, name, 'height ', val), styles), $temp$attrs = attrs, $temp$children = children, $temp$elementAttrs = remaining;
                            classes = $temp$classes;
                            node = $temp$node;
                            has = $temp$has;
                            transform = $temp$transform;
                            styles = $temp$styles;
                            attrs = $temp$attrs;
                            children = $temp$children;
                            elementAttrs = $temp$elementAttrs;
                            continue gatherAttrRecursive;
                        case 'Content':
                            var $temp$classes = $mdgriffith$elm_ui$Internal$Style$classes.heightContent + (' ' + classes), $temp$node = node, $temp$has = A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$heightContent, A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$height, has)), $temp$transform = transform, $temp$styles = styles, $temp$attrs = attrs, $temp$children = children, $temp$elementAttrs = remaining;
                            classes = $temp$classes;
                            node = $temp$node;
                            has = $temp$has;
                            transform = $temp$transform;
                            styles = $temp$styles;
                            attrs = $temp$attrs;
                            children = $temp$children;
                            elementAttrs = $temp$elementAttrs;
                            continue gatherAttrRecursive;
                        case 'Fill':
                            var portion = height.a;
                            if (portion === 1) {
                                var $temp$classes = $mdgriffith$elm_ui$Internal$Style$classes.heightFill + (' ' + classes), $temp$node = node, $temp$has = A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$heightFill, A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$height, has)), $temp$transform = transform, $temp$styles = styles, $temp$attrs = attrs, $temp$children = children, $temp$elementAttrs = remaining;
                                classes = $temp$classes;
                                node = $temp$node;
                                has = $temp$has;
                                transform = $temp$transform;
                                styles = $temp$styles;
                                attrs = $temp$attrs;
                                children = $temp$children;
                                elementAttrs = $temp$elementAttrs;
                                continue gatherAttrRecursive;
                            } else {
                                var $temp$classes = classes + (' ' + ($mdgriffith$elm_ui$Internal$Style$classes.heightFillPortion + (' height-fill-' + $elm$core$String$fromInt(portion)))), $temp$node = node, $temp$has = A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$heightFill, A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$height, has)), $temp$transform = transform, $temp$styles = A2($elm$core$List$cons, A3($mdgriffith$elm_ui$Internal$Model$Single, $mdgriffith$elm_ui$Internal$Style$classes.any + ('.' + ($mdgriffith$elm_ui$Internal$Style$classes.column + (' > ' + $mdgriffith$elm_ui$Internal$Style$dot('height-fill-' + $elm$core$String$fromInt(portion))))), 'flex-grow', $elm$core$String$fromInt(portion * 100000)), styles), $temp$attrs = attrs, $temp$children = children, $temp$elementAttrs = remaining;
                                classes = $temp$classes;
                                node = $temp$node;
                                has = $temp$has;
                                transform = $temp$transform;
                                styles = $temp$styles;
                                attrs = $temp$attrs;
                                children = $temp$children;
                                elementAttrs = $temp$elementAttrs;
                                continue gatherAttrRecursive;
                            }
                        default:
                            var _v6 = $mdgriffith$elm_ui$Internal$Model$renderHeight(height);
                            var addToFlags = _v6.a;
                            var newClass = _v6.b;
                            var newStyles = _v6.c;
                            var $temp$classes = classes + (' ' + newClass), $temp$node = node, $temp$has = A2($mdgriffith$elm_ui$Internal$Flag$merge, addToFlags, A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$height, has)), $temp$transform = transform, $temp$styles = _Utils_ap(newStyles, styles), $temp$attrs = attrs, $temp$children = children, $temp$elementAttrs = remaining;
                            classes = $temp$classes;
                            node = $temp$node;
                            has = $temp$has;
                            transform = $temp$transform;
                            styles = $temp$styles;
                            attrs = $temp$attrs;
                            children = $temp$children;
                            elementAttrs = $temp$elementAttrs;
                            continue gatherAttrRecursive;
                    }
                case 'Describe':
                    var description = attribute.a;
                    switch(description.$){
                        case 'Main':
                            var $temp$classes = classes, $temp$node = A2($mdgriffith$elm_ui$Internal$Model$addNodeName, 'main', node), $temp$has = has, $temp$transform = transform, $temp$styles = styles, $temp$attrs = attrs, $temp$children = children, $temp$elementAttrs = remaining;
                            classes = $temp$classes;
                            node = $temp$node;
                            has = $temp$has;
                            transform = $temp$transform;
                            styles = $temp$styles;
                            attrs = $temp$attrs;
                            children = $temp$children;
                            elementAttrs = $temp$elementAttrs;
                            continue gatherAttrRecursive;
                        case 'Navigation':
                            var $temp$classes = classes, $temp$node = A2($mdgriffith$elm_ui$Internal$Model$addNodeName, 'nav', node), $temp$has = has, $temp$transform = transform, $temp$styles = styles, $temp$attrs = attrs, $temp$children = children, $temp$elementAttrs = remaining;
                            classes = $temp$classes;
                            node = $temp$node;
                            has = $temp$has;
                            transform = $temp$transform;
                            styles = $temp$styles;
                            attrs = $temp$attrs;
                            children = $temp$children;
                            elementAttrs = $temp$elementAttrs;
                            continue gatherAttrRecursive;
                        case 'ContentInfo':
                            var $temp$classes = classes, $temp$node = A2($mdgriffith$elm_ui$Internal$Model$addNodeName, 'footer', node), $temp$has = has, $temp$transform = transform, $temp$styles = styles, $temp$attrs = attrs, $temp$children = children, $temp$elementAttrs = remaining;
                            classes = $temp$classes;
                            node = $temp$node;
                            has = $temp$has;
                            transform = $temp$transform;
                            styles = $temp$styles;
                            attrs = $temp$attrs;
                            children = $temp$children;
                            elementAttrs = $temp$elementAttrs;
                            continue gatherAttrRecursive;
                        case 'Complementary':
                            var $temp$classes = classes, $temp$node = A2($mdgriffith$elm_ui$Internal$Model$addNodeName, 'aside', node), $temp$has = has, $temp$transform = transform, $temp$styles = styles, $temp$attrs = attrs, $temp$children = children, $temp$elementAttrs = remaining;
                            classes = $temp$classes;
                            node = $temp$node;
                            has = $temp$has;
                            transform = $temp$transform;
                            styles = $temp$styles;
                            attrs = $temp$attrs;
                            children = $temp$children;
                            elementAttrs = $temp$elementAttrs;
                            continue gatherAttrRecursive;
                        case 'Heading':
                            var i = description.a;
                            if (i <= 1) {
                                var $temp$classes = classes, $temp$node = A2($mdgriffith$elm_ui$Internal$Model$addNodeName, 'h1', node), $temp$has = has, $temp$transform = transform, $temp$styles = styles, $temp$attrs = attrs, $temp$children = children, $temp$elementAttrs = remaining;
                                classes = $temp$classes;
                                node = $temp$node;
                                has = $temp$has;
                                transform = $temp$transform;
                                styles = $temp$styles;
                                attrs = $temp$attrs;
                                children = $temp$children;
                                elementAttrs = $temp$elementAttrs;
                                continue gatherAttrRecursive;
                            } else if (i < 7) {
                                var $temp$classes = classes, $temp$node = A2($mdgriffith$elm_ui$Internal$Model$addNodeName, 'h' + $elm$core$String$fromInt(i), node), $temp$has = has, $temp$transform = transform, $temp$styles = styles, $temp$attrs = attrs, $temp$children = children, $temp$elementAttrs = remaining;
                                classes = $temp$classes;
                                node = $temp$node;
                                has = $temp$has;
                                transform = $temp$transform;
                                styles = $temp$styles;
                                attrs = $temp$attrs;
                                children = $temp$children;
                                elementAttrs = $temp$elementAttrs;
                                continue gatherAttrRecursive;
                            } else {
                                var $temp$classes = classes, $temp$node = A2($mdgriffith$elm_ui$Internal$Model$addNodeName, 'h6', node), $temp$has = has, $temp$transform = transform, $temp$styles = styles, $temp$attrs = attrs, $temp$children = children, $temp$elementAttrs = remaining;
                                classes = $temp$classes;
                                node = $temp$node;
                                has = $temp$has;
                                transform = $temp$transform;
                                styles = $temp$styles;
                                attrs = $temp$attrs;
                                children = $temp$children;
                                elementAttrs = $temp$elementAttrs;
                                continue gatherAttrRecursive;
                            }
                        case 'Paragraph':
                            var $temp$classes = classes, $temp$node = node, $temp$has = has, $temp$transform = transform, $temp$styles = styles, $temp$attrs = attrs, $temp$children = children, $temp$elementAttrs = remaining;
                            classes = $temp$classes;
                            node = $temp$node;
                            has = $temp$has;
                            transform = $temp$transform;
                            styles = $temp$styles;
                            attrs = $temp$attrs;
                            children = $temp$children;
                            elementAttrs = $temp$elementAttrs;
                            continue gatherAttrRecursive;
                        case 'Button':
                            var $temp$classes = classes, $temp$node = node, $temp$has = has, $temp$transform = transform, $temp$styles = styles, $temp$attrs = A2($elm$core$List$cons, A2($elm$virtual_dom$VirtualDom$attribute, 'role', 'button'), attrs), $temp$children = children, $temp$elementAttrs = remaining;
                            classes = $temp$classes;
                            node = $temp$node;
                            has = $temp$has;
                            transform = $temp$transform;
                            styles = $temp$styles;
                            attrs = $temp$attrs;
                            children = $temp$children;
                            elementAttrs = $temp$elementAttrs;
                            continue gatherAttrRecursive;
                        case 'Label':
                            var label = description.a;
                            var $temp$classes = classes, $temp$node = node, $temp$has = has, $temp$transform = transform, $temp$styles = styles, $temp$attrs = A2($elm$core$List$cons, A2($elm$virtual_dom$VirtualDom$attribute, 'aria-label', label), attrs), $temp$children = children, $temp$elementAttrs = remaining;
                            classes = $temp$classes;
                            node = $temp$node;
                            has = $temp$has;
                            transform = $temp$transform;
                            styles = $temp$styles;
                            attrs = $temp$attrs;
                            children = $temp$children;
                            elementAttrs = $temp$elementAttrs;
                            continue gatherAttrRecursive;
                        case 'LivePolite':
                            var $temp$classes = classes, $temp$node = node, $temp$has = has, $temp$transform = transform, $temp$styles = styles, $temp$attrs = A2($elm$core$List$cons, A2($elm$virtual_dom$VirtualDom$attribute, 'aria-live', 'polite'), attrs), $temp$children = children, $temp$elementAttrs = remaining;
                            classes = $temp$classes;
                            node = $temp$node;
                            has = $temp$has;
                            transform = $temp$transform;
                            styles = $temp$styles;
                            attrs = $temp$attrs;
                            children = $temp$children;
                            elementAttrs = $temp$elementAttrs;
                            continue gatherAttrRecursive;
                        default:
                            var $temp$classes = classes, $temp$node = node, $temp$has = has, $temp$transform = transform, $temp$styles = styles, $temp$attrs = A2($elm$core$List$cons, A2($elm$virtual_dom$VirtualDom$attribute, 'aria-live', 'assertive'), attrs), $temp$children = children, $temp$elementAttrs = remaining;
                            classes = $temp$classes;
                            node = $temp$node;
                            has = $temp$has;
                            transform = $temp$transform;
                            styles = $temp$styles;
                            attrs = $temp$attrs;
                            children = $temp$children;
                            elementAttrs = $temp$elementAttrs;
                            continue gatherAttrRecursive;
                    }
                case 'Nearby':
                    var location = attribute.a;
                    var elem = attribute.b;
                    var newStyles = function() {
                        switch(elem.$){
                            case 'Empty':
                                return styles;
                            case 'Text':
                                var str = elem.a;
                                return styles;
                            case 'Unstyled':
                                var html = elem.a;
                                return styles;
                            default:
                                var styled = elem.a;
                                return _Utils_ap(styles, styled.styles);
                        }
                    }();
                    var $temp$classes = classes, $temp$node = node, $temp$has = has, $temp$transform = transform, $temp$styles = newStyles, $temp$attrs = attrs, $temp$children = A3($mdgriffith$elm_ui$Internal$Model$addNearbyElement, location, elem, children), $temp$elementAttrs = remaining;
                    classes = $temp$classes;
                    node = $temp$node;
                    has = $temp$has;
                    transform = $temp$transform;
                    styles = $temp$styles;
                    attrs = $temp$attrs;
                    children = $temp$children;
                    elementAttrs = $temp$elementAttrs;
                    continue gatherAttrRecursive;
                case 'AlignX':
                    var x = attribute.a;
                    if (A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$xAlign, has)) {
                        var $temp$classes = classes, $temp$node = node, $temp$has = has, $temp$transform = transform, $temp$styles = styles, $temp$attrs = attrs, $temp$children = children, $temp$elementAttrs = remaining;
                        classes = $temp$classes;
                        node = $temp$node;
                        has = $temp$has;
                        transform = $temp$transform;
                        styles = $temp$styles;
                        attrs = $temp$attrs;
                        children = $temp$children;
                        elementAttrs = $temp$elementAttrs;
                        continue gatherAttrRecursive;
                    } else {
                        var $temp$classes = $mdgriffith$elm_ui$Internal$Model$alignXName(x) + (' ' + classes), $temp$node = node, $temp$has = function(flags) {
                            switch(x.$){
                                case 'CenterX':
                                    return A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$centerX, flags);
                                case 'Right':
                                    return A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$alignRight, flags);
                                default:
                                    return flags;
                            }
                        }(A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$xAlign, has)), $temp$transform = transform, $temp$styles = styles, $temp$attrs = attrs, $temp$children = children, $temp$elementAttrs = remaining;
                        classes = $temp$classes;
                        node = $temp$node;
                        has = $temp$has;
                        transform = $temp$transform;
                        styles = $temp$styles;
                        attrs = $temp$attrs;
                        children = $temp$children;
                        elementAttrs = $temp$elementAttrs;
                        continue gatherAttrRecursive;
                    }
                default:
                    var y = attribute.a;
                    if (A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$yAlign, has)) {
                        var $temp$classes = classes, $temp$node = node, $temp$has = has, $temp$transform = transform, $temp$styles = styles, $temp$attrs = attrs, $temp$children = children, $temp$elementAttrs = remaining;
                        classes = $temp$classes;
                        node = $temp$node;
                        has = $temp$has;
                        transform = $temp$transform;
                        styles = $temp$styles;
                        attrs = $temp$attrs;
                        children = $temp$children;
                        elementAttrs = $temp$elementAttrs;
                        continue gatherAttrRecursive;
                    } else {
                        var $temp$classes = $mdgriffith$elm_ui$Internal$Model$alignYName(y) + (' ' + classes), $temp$node = node, $temp$has = function(flags) {
                            switch(y.$){
                                case 'CenterY':
                                    return A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$centerY, flags);
                                case 'Bottom':
                                    return A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$alignBottom, flags);
                                default:
                                    return flags;
                            }
                        }(A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$yAlign, has)), $temp$transform = transform, $temp$styles = styles, $temp$attrs = attrs, $temp$children = children, $temp$elementAttrs = remaining;
                        classes = $temp$classes;
                        node = $temp$node;
                        has = $temp$has;
                        transform = $temp$transform;
                        styles = $temp$styles;
                        attrs = $temp$attrs;
                        children = $temp$children;
                        elementAttrs = $temp$elementAttrs;
                        continue gatherAttrRecursive;
                    }
            }
        }
    });
    var $mdgriffith$elm_ui$Internal$Model$Untransformed = {
        $: 'Untransformed'
    };
    var $mdgriffith$elm_ui$Internal$Model$untransformed = $mdgriffith$elm_ui$Internal$Model$Untransformed;
    var $mdgriffith$elm_ui$Internal$Model$element = F4(function(context, node, attributes, children) {
        return A3($mdgriffith$elm_ui$Internal$Model$createElement, context, children, A8($mdgriffith$elm_ui$Internal$Model$gatherAttrRecursive, $mdgriffith$elm_ui$Internal$Model$contextClasses(context), node, $mdgriffith$elm_ui$Internal$Flag$none, $mdgriffith$elm_ui$Internal$Model$untransformed, _List_Nil, _List_Nil, $mdgriffith$elm_ui$Internal$Model$NoNearbyChildren, $elm$core$List$reverse(attributes)));
    });
    var $mdgriffith$elm_ui$Internal$Model$Height = function(a) {
        return {
            $: 'Height',
            a: a
        };
    };
    var $mdgriffith$elm_ui$Element$height = $mdgriffith$elm_ui$Internal$Model$Height;
    var $mdgriffith$elm_ui$Internal$Model$Attr = function(a) {
        return {
            $: 'Attr',
            a: a
        };
    };
    var $mdgriffith$elm_ui$Internal$Model$htmlClass = function(cls) {
        return $mdgriffith$elm_ui$Internal$Model$Attr($elm$html$Html$Attributes$class(cls));
    };
    var $mdgriffith$elm_ui$Internal$Model$Content = {
        $: 'Content'
    };
    var $mdgriffith$elm_ui$Element$shrink = $mdgriffith$elm_ui$Internal$Model$Content;
    var $mdgriffith$elm_ui$Internal$Model$Width = function(a) {
        return {
            $: 'Width',
            a: a
        };
    };
    var $mdgriffith$elm_ui$Element$width = $mdgriffith$elm_ui$Internal$Model$Width;
    var $mdgriffith$elm_ui$Element$column = F2(function(attrs, children) {
        return A4($mdgriffith$elm_ui$Internal$Model$element, $mdgriffith$elm_ui$Internal$Model$asColumn, $mdgriffith$elm_ui$Internal$Model$div, A2($elm$core$List$cons, $mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.contentTop + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.contentLeft)), A2($elm$core$List$cons, $mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$shrink), A2($elm$core$List$cons, $mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$shrink), attrs))), $mdgriffith$elm_ui$Internal$Model$Unkeyed(children));
    });
    var $mdgriffith$elm_ui$Internal$Model$PaddingStyle = F5(function(a, b, c, d, e) {
        return {
            $: 'PaddingStyle',
            a: a,
            b: b,
            c: c,
            d: d,
            e: e
        };
    });
    var $mdgriffith$elm_ui$Internal$Model$StyleClass = F2(function(a, b) {
        return {
            $: 'StyleClass',
            a: a,
            b: b
        };
    });
    var $mdgriffith$elm_ui$Internal$Flag$padding = $mdgriffith$elm_ui$Internal$Flag$flag(2);
    var $mdgriffith$elm_ui$Element$padding = function(x) {
        var f = x;
        return A2($mdgriffith$elm_ui$Internal$Model$StyleClass, $mdgriffith$elm_ui$Internal$Flag$padding, A5($mdgriffith$elm_ui$Internal$Model$PaddingStyle, 'p-' + $elm$core$String$fromInt(x), f, f, f, f));
    };
    var $author$project$Index$blockPadding = $mdgriffith$elm_ui$Element$padding(10);
    var $mdgriffith$elm_ui$Internal$Model$FontSize = function(a) {
        return {
            $: 'FontSize',
            a: a
        };
    };
    var $mdgriffith$elm_ui$Internal$Flag$fontSize = $mdgriffith$elm_ui$Internal$Flag$flag(4);
    var $mdgriffith$elm_ui$Element$Font$size = function(i) {
        return A2($mdgriffith$elm_ui$Internal$Model$StyleClass, $mdgriffith$elm_ui$Internal$Flag$fontSize, $mdgriffith$elm_ui$Internal$Model$FontSize(i));
    };
    var $author$project$Index$defaultFontSize = $mdgriffith$elm_ui$Element$Font$size(28);
    var $author$project$Index$defaultPadding = $mdgriffith$elm_ui$Element$padding(30);
    var $mdgriffith$elm_ui$Internal$Model$SpacingStyle = F3(function(a, b, c) {
        return {
            $: 'SpacingStyle',
            a: a,
            b: b,
            c: c
        };
    });
    var $mdgriffith$elm_ui$Internal$Flag$spacing = $mdgriffith$elm_ui$Internal$Flag$flag(3);
    var $mdgriffith$elm_ui$Internal$Model$spacingName = F2(function(x, y) {
        return 'spacing-' + ($elm$core$String$fromInt(x) + ('-' + $elm$core$String$fromInt(y)));
    });
    var $mdgriffith$elm_ui$Element$spacing = function(x) {
        return A2($mdgriffith$elm_ui$Internal$Model$StyleClass, $mdgriffith$elm_ui$Internal$Flag$spacing, A3($mdgriffith$elm_ui$Internal$Model$SpacingStyle, A2($mdgriffith$elm_ui$Internal$Model$spacingName, x, x), x, x));
    };
    var $author$project$Index$defaultSpacing = $mdgriffith$elm_ui$Element$spacing(20);
    var $mdgriffith$elm_ui$Internal$Model$Text = function(a) {
        return {
            $: 'Text',
            a: a
        };
    };
    var $mdgriffith$elm_ui$Element$text = function(content) {
        return $mdgriffith$elm_ui$Internal$Model$Text(content);
    };
    var $author$project$Index$yamlItem = function(value) {
        return $mdgriffith$elm_ui$Element$text('- ' + value);
    };
    var $author$project$Index$digramDescription = A2($mdgriffith$elm_ui$Element$column, _List_fromArray([
        $author$project$Index$defaultSpacing,
        $author$project$Index$defaultPadding,
        $author$project$Index$defaultFontSize
    ]), _List_fromArray([
        $author$project$Index$yamlItem('View domain representation via view editor'),
        $author$project$Index$yamlItem('☝ Rings are runnable applications, aka Software systems'),
        $author$project$Index$yamlItem('☝ Deliveries are deployable units, aka Containers'),
        $author$project$Index$yamlItem('☝ Blocks are buildable packages, aka Components'),
        $author$project$Index$yamlItem('See 🔎 connections between actors, rings, deliveries, and blocks'),
        $author$project$Index$yamlItem('Layout selected view elements and edges manually'),
        $author$project$Index$yamlItem('Check elements and edges descriptions'),
        $author$project$Index$yamlItem('Zoom, scroll, and navigate through the view')
    ]));
    var $mdgriffith$elm_ui$Element$el = F2(function(attrs, child) {
        return A4($mdgriffith$elm_ui$Internal$Model$element, $mdgriffith$elm_ui$Internal$Model$asEl, $mdgriffith$elm_ui$Internal$Model$div, A2($elm$core$List$cons, $mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$shrink), A2($elm$core$List$cons, $mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$shrink), attrs)), $mdgriffith$elm_ui$Internal$Model$Unkeyed(_List_fromArray([
            child
        ])));
    });
    var $mdgriffith$elm_ui$Internal$Model$Fill = function(a) {
        return {
            $: 'Fill',
            a: a
        };
    };
    var $mdgriffith$elm_ui$Element$fill = $mdgriffith$elm_ui$Internal$Model$Fill(1);
    var $elm$html$Html$Attributes$alt = $elm$html$Html$Attributes$stringProperty('alt');
    var $elm$html$Html$Attributes$src = function(url) {
        return A2($elm$html$Html$Attributes$stringProperty, 'src', _VirtualDom_noJavaScriptOrHtmlUri(url));
    };
    var $mdgriffith$elm_ui$Element$image = F2(function(attrs, _v0) {
        var src = _v0.src;
        var description = _v0.description;
        var imageAttributes = A2($elm$core$List$filter, function(a) {
            switch(a.$){
                case 'Width':
                    return true;
                case 'Height':
                    return true;
                default:
                    return false;
            }
        }, attrs);
        return A4($mdgriffith$elm_ui$Internal$Model$element, $mdgriffith$elm_ui$Internal$Model$asEl, $mdgriffith$elm_ui$Internal$Model$div, A2($elm$core$List$cons, $mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.imageContainer), attrs), $mdgriffith$elm_ui$Internal$Model$Unkeyed(_List_fromArray([
            A4($mdgriffith$elm_ui$Internal$Model$element, $mdgriffith$elm_ui$Internal$Model$asEl, $mdgriffith$elm_ui$Internal$Model$NodeName('img'), _Utils_ap(_List_fromArray([
                $mdgriffith$elm_ui$Internal$Model$Attr($elm$html$Html$Attributes$src(src)),
                $mdgriffith$elm_ui$Internal$Model$Attr($elm$html$Html$Attributes$alt(description))
            ]), imageAttributes), $mdgriffith$elm_ui$Internal$Model$Unkeyed(_List_Nil))
        ])));
    });
    var $mdgriffith$elm_ui$Internal$Model$AsRow = {
        $: 'AsRow'
    };
    var $mdgriffith$elm_ui$Internal$Model$asRow = $mdgriffith$elm_ui$Internal$Model$AsRow;
    var $mdgriffith$elm_ui$Element$row = F2(function(attrs, children) {
        return A4($mdgriffith$elm_ui$Internal$Model$element, $mdgriffith$elm_ui$Internal$Model$asRow, $mdgriffith$elm_ui$Internal$Model$div, A2($elm$core$List$cons, $mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.contentLeft + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.contentCenterY)), A2($elm$core$List$cons, $mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$shrink), A2($elm$core$List$cons, $mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$shrink), attrs))), $mdgriffith$elm_ui$Internal$Model$Unkeyed(children));
    });
    var $author$project$Index$diagram = function(url) {
        return A2($mdgriffith$elm_ui$Element$row, _List_fromArray([
            $mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
            $author$project$Index$blockPadding
        ]), _List_fromArray([
            A2($mdgriffith$elm_ui$Element$el, _List_fromArray([
                $mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$shrink)
            ]), A2($mdgriffith$elm_ui$Element$image, _List_Nil, {
                description: 'diagram',
                src: url
            })),
            A2($mdgriffith$elm_ui$Element$el, _List_fromArray([
                $mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
            ]), $author$project$Index$digramDescription)
        ]));
    };
    var $avh4$elm_color$Color$RgbaSpace = F4(function(a, b, c, d) {
        return {
            $: 'RgbaSpace',
            a: a,
            b: b,
            c: c,
            d: d
        };
    });
    var $avh4$elm_color$Color$blue = A4($avh4$elm_color$Color$RgbaSpace, 52 / 255, 101 / 255, 164 / 255, 1);
    var $mdgriffith$elm_ui$Internal$Model$Colored = F3(function(a, b, c) {
        return {
            $: 'Colored',
            a: a,
            b: b,
            c: c
        };
    });
    var $mdgriffith$elm_ui$Internal$Flag$fontColor = $mdgriffith$elm_ui$Internal$Flag$flag(14);
    var $mdgriffith$elm_ui$Internal$Model$formatColorClass = function(_v0) {
        var red = _v0.a;
        var green = _v0.b;
        var blue = _v0.c;
        var alpha = _v0.d;
        return $mdgriffith$elm_ui$Internal$Model$floatClass(red) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(green) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(blue) + ('-' + $mdgriffith$elm_ui$Internal$Model$floatClass(alpha))))));
    };
    var $mdgriffith$elm_ui$Element$Font$color = function(fontColor) {
        return A2($mdgriffith$elm_ui$Internal$Model$StyleClass, $mdgriffith$elm_ui$Internal$Flag$fontColor, A3($mdgriffith$elm_ui$Internal$Model$Colored, 'fc-' + $mdgriffith$elm_ui$Internal$Model$formatColorClass(fontColor), 'color', fontColor));
    };
    var $elm$html$Html$Attributes$href = function(url) {
        return A2($elm$html$Html$Attributes$stringProperty, 'href', _VirtualDom_noJavaScriptUri(url));
    };
    var $elm$html$Html$Attributes$rel = _VirtualDom_attribute('rel');
    var $mdgriffith$elm_ui$Element$link = F2(function(attrs, _v0) {
        var url = _v0.url;
        var label = _v0.label;
        return A4($mdgriffith$elm_ui$Internal$Model$element, $mdgriffith$elm_ui$Internal$Model$asEl, $mdgriffith$elm_ui$Internal$Model$NodeName('a'), A2($elm$core$List$cons, $mdgriffith$elm_ui$Internal$Model$Attr($elm$html$Html$Attributes$href(url)), A2($elm$core$List$cons, $mdgriffith$elm_ui$Internal$Model$Attr($elm$html$Html$Attributes$rel('noopener noreferrer')), A2($elm$core$List$cons, $mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$shrink), A2($elm$core$List$cons, $mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$shrink), A2($elm$core$List$cons, $mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.contentCenterX + (' ' + ($mdgriffith$elm_ui$Internal$Style$classes.contentCenterY + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.link)))), attrs))))), $mdgriffith$elm_ui$Internal$Model$Unkeyed(_List_fromArray([
            label
        ])));
    });
    var $mdgriffith$elm_ui$Internal$Model$Rgba = F4(function(a, b, c, d) {
        return {
            $: 'Rgba',
            a: a,
            b: b,
            c: c,
            d: d
        };
    });
    var $mdgriffith$elm_ui$Element$rgba = $mdgriffith$elm_ui$Internal$Model$Rgba;
    var $avh4$elm_color$Color$toRgba = function(_v0) {
        var r = _v0.a;
        var g = _v0.b;
        var b = _v0.c;
        var a = _v0.d;
        return {
            alpha: a,
            blue: b,
            green: g,
            red: r
        };
    };
    var $author$project$Index$mapColor = A2($elm$core$Basics$composeR, $avh4$elm_color$Color$toRgba, function(_v0) {
        var red = _v0.red;
        var green = _v0.green;
        var blue = _v0.blue;
        var alpha = _v0.alpha;
        return A4($mdgriffith$elm_ui$Element$rgba, red, green, blue, alpha);
    });
    var $mdgriffith$elm_ui$Internal$Model$Describe = function(a) {
        return {
            $: 'Describe',
            a: a
        };
    };
    var $mdgriffith$elm_ui$Internal$Model$Paragraph = {
        $: 'Paragraph'
    };
    var $mdgriffith$elm_ui$Element$paragraph = F2(function(attrs, children) {
        return A4($mdgriffith$elm_ui$Internal$Model$element, $mdgriffith$elm_ui$Internal$Model$asParagraph, $mdgriffith$elm_ui$Internal$Model$div, A2($elm$core$List$cons, $mdgriffith$elm_ui$Internal$Model$Describe($mdgriffith$elm_ui$Internal$Model$Paragraph), A2($elm$core$List$cons, $mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill), A2($elm$core$List$cons, $mdgriffith$elm_ui$Element$spacing(5), attrs))), $mdgriffith$elm_ui$Internal$Model$Unkeyed(children));
    });
    var $author$project$Index$editorDescription = A2($mdgriffith$elm_ui$Element$column, _List_fromArray([
        $author$project$Index$defaultSpacing,
        $author$project$Index$defaultPadding,
        $author$project$Index$defaultFontSize
    ]), _List_fromArray([
        A2($mdgriffith$elm_ui$Element$paragraph, _List_Nil, _List_fromArray([
            $author$project$Index$yamlItem('Use simplified 😎'),
            A2($mdgriffith$elm_ui$Element$link, _List_fromArray([
                $mdgriffith$elm_ui$Element$Font$color($author$project$Index$mapColor($avh4$elm_color$Color$blue))
            ]), {
                label: $mdgriffith$elm_ui$Element$text('C4 model'),
                url: 'https://c4model.com/'
            }),
            $mdgriffith$elm_ui$Element$text(' to represent a domain')
        ])),
        $author$project$Index$yamlItem('Represent ✍ domain in YAML format'),
        A2($mdgriffith$elm_ui$Element$paragraph, _List_Nil, _List_fromArray([
            $author$project$Index$yamlItem('Modify views (domain representations) manually via 💣'),
            A2($mdgriffith$elm_ui$Element$link, _List_fromArray([
                $mdgriffith$elm_ui$Element$Font$color($author$project$Index$mapColor($avh4$elm_color$Color$blue))
            ]), {
                label: $mdgriffith$elm_ui$Element$text('Monaco editor'),
                url: 'https://microsoft.github.io/monaco-editor/'
            })
        ])),
        $author$project$Index$yamlItem('Check changes from view editor in realtime'),
        $author$project$Index$yamlItem('Use key shortcuts to save, navigate and modify the domain and views'),
        $author$project$Index$yamlItem('See validation errors in the domain and views immediately'),
        $author$project$Index$yamlItem('Use many views to represent the domain from different perspectives')
    ]));
    var $author$project$Index$editor = function(url) {
        return A2($mdgriffith$elm_ui$Element$row, _List_fromArray([
            $mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
            $author$project$Index$blockPadding
        ]), _List_fromArray([
            A2($mdgriffith$elm_ui$Element$el, _List_fromArray([
                $mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
            ]), $author$project$Index$editorDescription),
            A2($mdgriffith$elm_ui$Element$el, _List_fromArray([
                $mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$shrink)
            ]), A2($mdgriffith$elm_ui$Element$image, _List_Nil, {
                description: 'editor',
                src: url
            }))
        ]));
    };
    var $author$project$Index$body = function(_v0) {
        var diagramUrl = _v0.a;
        var editorUrl = _v0.b;
        return A2($mdgriffith$elm_ui$Element$column, _List_fromArray([
            $mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
        ]), _List_fromArray([
            $author$project$Index$diagram(diagramUrl),
            $author$project$Index$editor(editorUrl)
        ]));
    };
    var $mdgriffith$elm_ui$Internal$Model$AlignX = function(a) {
        return {
            $: 'AlignX',
            a: a
        };
    };
    var $mdgriffith$elm_ui$Internal$Model$CenterX = {
        $: 'CenterX'
    };
    var $mdgriffith$elm_ui$Element$centerX = $mdgriffith$elm_ui$Internal$Model$AlignX($mdgriffith$elm_ui$Internal$Model$CenterX);
    var $mdgriffith$elm_ui$Internal$Model$AlignY = function(a) {
        return {
            $: 'AlignY',
            a: a
        };
    };
    var $mdgriffith$elm_ui$Internal$Model$CenterY = {
        $: 'CenterY'
    };
    var $mdgriffith$elm_ui$Element$centerY = $mdgriffith$elm_ui$Internal$Model$AlignY($mdgriffith$elm_ui$Internal$Model$CenterY);
    var $mdgriffith$elm_ui$Internal$Flag$bgColor = $mdgriffith$elm_ui$Internal$Flag$flag(8);
    var $mdgriffith$elm_ui$Element$Background$color = function(clr) {
        return A2($mdgriffith$elm_ui$Internal$Model$StyleClass, $mdgriffith$elm_ui$Internal$Flag$bgColor, A3($mdgriffith$elm_ui$Internal$Model$Colored, 'bg-' + $mdgriffith$elm_ui$Internal$Model$formatColorClass(clr), 'background-color', clr));
    };
    var $author$project$Route$editorRoute = '#/editor/view-1';
    var $avh4$elm_color$Color$lightBlue = A4($avh4$elm_color$Color$RgbaSpace, 114 / 255, 159 / 255, 207 / 255, 1);
    var $mdgriffith$elm_ui$Element$paddingXY = F2(function(x, y) {
        if (_Utils_eq(x, y)) {
            var f = x;
            return A2($mdgriffith$elm_ui$Internal$Model$StyleClass, $mdgriffith$elm_ui$Internal$Flag$padding, A5($mdgriffith$elm_ui$Internal$Model$PaddingStyle, 'p-' + $elm$core$String$fromInt(x), f, f, f, f));
        } else {
            var yFloat = y;
            var xFloat = x;
            return A2($mdgriffith$elm_ui$Internal$Model$StyleClass, $mdgriffith$elm_ui$Internal$Flag$padding, A5($mdgriffith$elm_ui$Internal$Model$PaddingStyle, 'p-' + ($elm$core$String$fromInt(x) + ('-' + $elm$core$String$fromInt(y))), yFloat, xFloat, yFloat, xFloat));
        }
    });
    var $mdgriffith$elm_ui$Internal$Flag$borderRound = $mdgriffith$elm_ui$Internal$Flag$flag(17);
    var $mdgriffith$elm_ui$Element$Border$rounded = function(radius) {
        return A2($mdgriffith$elm_ui$Internal$Model$StyleClass, $mdgriffith$elm_ui$Internal$Flag$borderRound, A3($mdgriffith$elm_ui$Internal$Model$Single, 'br-' + $elm$core$String$fromInt(radius), 'border-radius', $elm$core$String$fromInt(radius) + 'px'));
    };
    var $author$project$Index$editorButton = A2($mdgriffith$elm_ui$Element$el, _List_fromArray([
        $mdgriffith$elm_ui$Element$centerX,
        $mdgriffith$elm_ui$Element$centerY
    ]), A2($mdgriffith$elm_ui$Element$link, _List_fromArray([
        $mdgriffith$elm_ui$Element$Background$color($author$project$Index$mapColor($avh4$elm_color$Color$lightBlue)),
        $mdgriffith$elm_ui$Element$Border$rounded(5)
    ]), {
        label: A2($mdgriffith$elm_ui$Element$el, _List_fromArray([
            A2($mdgriffith$elm_ui$Element$paddingXY, 150, 20),
            $author$project$Index$defaultFontSize
        ]), $mdgriffith$elm_ui$Element$text('See the demo ☀️')),
        url: '/' + $author$project$Route$editorRoute
    }));
    var $mdgriffith$elm_ui$Internal$Model$Px = function(a) {
        return {
            $: 'Px',
            a: a
        };
    };
    var $mdgriffith$elm_ui$Element$px = $mdgriffith$elm_ui$Internal$Model$Px;
    var $author$project$Index$editorLink = A2($mdgriffith$elm_ui$Element$el, _List_fromArray([
        $mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
        $mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$px(120)),
        $author$project$Index$blockPadding
    ]), $author$project$Index$editorButton);
    var $mdgriffith$elm_ui$Internal$Model$Right = {
        $: 'Right'
    };
    var $mdgriffith$elm_ui$Element$alignRight = $mdgriffith$elm_ui$Internal$Model$AlignX($mdgriffith$elm_ui$Internal$Model$Right);
    var $author$project$Index$footer = A2($mdgriffith$elm_ui$Element$row, _List_fromArray([
        $mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
        $author$project$Index$defaultPadding
    ]), _List_fromArray([
        A2($mdgriffith$elm_ui$Element$paragraph, _List_Nil, _List_fromArray([
            $mdgriffith$elm_ui$Element$text('created by '),
            A2($mdgriffith$elm_ui$Element$link, _List_fromArray([
                $mdgriffith$elm_ui$Element$Font$color($author$project$Index$mapColor($avh4$elm_color$Color$blue))
            ]), {
                label: $mdgriffith$elm_ui$Element$text('Yauhen Pyl'),
                url: 'https://www.linkedin.com/in/yauhenpyl/'
            })
        ])),
        A2($mdgriffith$elm_ui$Element$paragraph, _List_fromArray([
            $mdgriffith$elm_ui$Element$alignRight,
            $mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$shrink)
        ]), _List_fromArray([
            $mdgriffith$elm_ui$Element$text('written in ❤️ '),
            A2($mdgriffith$elm_ui$Element$link, _List_fromArray([
                $mdgriffith$elm_ui$Element$Font$color($author$project$Index$mapColor($avh4$elm_color$Color$blue))
            ]), {
                label: $mdgriffith$elm_ui$Element$text('Elm lang'),
                url: 'https://elm-lang.org/'
            })
        ]))
    ]));
    var $mdgriffith$elm_ui$Internal$Model$Class = F2(function(a, b) {
        return {
            $: 'Class',
            a: a,
            b: b
        };
    });
    var $mdgriffith$elm_ui$Internal$Flag$fontWeight = $mdgriffith$elm_ui$Internal$Flag$flag(13);
    var $mdgriffith$elm_ui$Element$Font$light = A2($mdgriffith$elm_ui$Internal$Model$Class, $mdgriffith$elm_ui$Internal$Flag$fontWeight, $mdgriffith$elm_ui$Internal$Style$classes.textLight);
    var $author$project$Index$header = A2($mdgriffith$elm_ui$Element$row, _List_fromArray([
        $mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
        $mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$px(50)),
        $author$project$Index$blockPadding,
        $mdgriffith$elm_ui$Element$spacing(20)
    ]), _List_fromArray([
        A2($mdgriffith$elm_ui$Element$el, _List_fromArray([
            $mdgriffith$elm_ui$Element$Font$size(32)
        ]), $mdgriffith$elm_ui$Element$text('RDB modeling')),
        A2($mdgriffith$elm_ui$Element$el, _List_fromArray([
            $author$project$Index$defaultFontSize,
            $mdgriffith$elm_ui$Element$Font$light
        ]), $mdgriffith$elm_ui$Element$text('...a way to simplify your C4 model')),
        A2($mdgriffith$elm_ui$Element$link, _List_fromArray([
            $mdgriffith$elm_ui$Element$Font$color($author$project$Index$mapColor($avh4$elm_color$Color$blue)),
            $mdgriffith$elm_ui$Element$alignRight,
            $mdgriffith$elm_ui$Element$Font$size(22)
        ]), {
            label: $mdgriffith$elm_ui$Element$text('[Source]'),
            url: 'https://github.com/RDBModel/rdbmodel.github.io'
        })
    ]));
    var $author$project$Index$indexMain = function(gifLinks) {
        return A2($mdgriffith$elm_ui$Element$column, _List_fromArray([
            $mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
            $mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill)
        ]), _List_fromArray([
            $author$project$Index$header,
            $author$project$Index$body(gifLinks),
            $author$project$Index$editorLink,
            $author$project$Index$footer
        ]));
    };
    var $mdgriffith$elm_ui$Internal$Model$OnlyDynamic = F2(function(a, b) {
        return {
            $: 'OnlyDynamic',
            a: a,
            b: b
        };
    });
    var $mdgriffith$elm_ui$Internal$Model$StaticRootAndDynamic = F2(function(a, b) {
        return {
            $: 'StaticRootAndDynamic',
            a: a,
            b: b
        };
    });
    var $mdgriffith$elm_ui$Internal$Model$AllowHover = {
        $: 'AllowHover'
    };
    var $mdgriffith$elm_ui$Internal$Model$Layout = {
        $: 'Layout'
    };
    var $mdgriffith$elm_ui$Internal$Model$focusDefaultStyle = {
        backgroundColor: $elm$core$Maybe$Nothing,
        borderColor: $elm$core$Maybe$Nothing,
        shadow: $elm$core$Maybe$Just({
            blur: 0,
            color: A4($mdgriffith$elm_ui$Internal$Model$Rgba, 155 / 255, 203 / 255, 1, 1),
            offset: _Utils_Tuple2(0, 0),
            size: 3
        })
    };
    var $mdgriffith$elm_ui$Internal$Model$optionsToRecord = function(options) {
        var combine = F2(function(opt, record) {
            switch(opt.$){
                case 'HoverOption':
                    var hoverable = opt.a;
                    var _v4 = record.hover;
                    if (_v4.$ === 'Nothing') return _Utils_update(record, {
                        hover: $elm$core$Maybe$Just(hoverable)
                    });
                    else return record;
                case 'FocusStyleOption':
                    var focusStyle = opt.a;
                    var _v5 = record.focus;
                    if (_v5.$ === 'Nothing') return _Utils_update(record, {
                        focus: $elm$core$Maybe$Just(focusStyle)
                    });
                    else return record;
                default:
                    var renderMode = opt.a;
                    var _v6 = record.mode;
                    if (_v6.$ === 'Nothing') return _Utils_update(record, {
                        mode: $elm$core$Maybe$Just(renderMode)
                    });
                    else return record;
            }
        });
        var andFinally = function(record) {
            return {
                focus: function() {
                    var _v0 = record.focus;
                    if (_v0.$ === 'Nothing') return $mdgriffith$elm_ui$Internal$Model$focusDefaultStyle;
                    else {
                        var focusable = _v0.a;
                        return focusable;
                    }
                }(),
                hover: function() {
                    var _v1 = record.hover;
                    if (_v1.$ === 'Nothing') return $mdgriffith$elm_ui$Internal$Model$AllowHover;
                    else {
                        var hoverable = _v1.a;
                        return hoverable;
                    }
                }(),
                mode: function() {
                    var _v2 = record.mode;
                    if (_v2.$ === 'Nothing') return $mdgriffith$elm_ui$Internal$Model$Layout;
                    else {
                        var actualMode = _v2.a;
                        return actualMode;
                    }
                }()
            };
        };
        return andFinally(A3($elm$core$List$foldr, combine, {
            focus: $elm$core$Maybe$Nothing,
            hover: $elm$core$Maybe$Nothing,
            mode: $elm$core$Maybe$Nothing
        }, options));
    };
    var $mdgriffith$elm_ui$Internal$Model$toHtml = F2(function(mode, el) {
        switch(el.$){
            case 'Unstyled':
                var html = el.a;
                return html($mdgriffith$elm_ui$Internal$Model$asEl);
            case 'Styled':
                var styles = el.a.styles;
                var html = el.a.html;
                return A2(html, mode(styles), $mdgriffith$elm_ui$Internal$Model$asEl);
            case 'Text':
                var text = el.a;
                return $mdgriffith$elm_ui$Internal$Model$textElement(text);
            default:
                return $mdgriffith$elm_ui$Internal$Model$textElement('');
        }
    });
    var $mdgriffith$elm_ui$Internal$Model$renderRoot = F3(function(optionList, attributes, child) {
        var options = $mdgriffith$elm_ui$Internal$Model$optionsToRecord(optionList);
        var embedStyle = function() {
            var _v0 = options.mode;
            if (_v0.$ === 'NoStaticStyleSheet') return $mdgriffith$elm_ui$Internal$Model$OnlyDynamic(options);
            else return $mdgriffith$elm_ui$Internal$Model$StaticRootAndDynamic(options);
        }();
        return A2($mdgriffith$elm_ui$Internal$Model$toHtml, embedStyle, A4($mdgriffith$elm_ui$Internal$Model$element, $mdgriffith$elm_ui$Internal$Model$asEl, $mdgriffith$elm_ui$Internal$Model$div, attributes, $mdgriffith$elm_ui$Internal$Model$Unkeyed(_List_fromArray([
            child
        ]))));
    });
    var $mdgriffith$elm_ui$Internal$Model$FontFamily = F2(function(a, b) {
        return {
            $: 'FontFamily',
            a: a,
            b: b
        };
    });
    var $mdgriffith$elm_ui$Internal$Model$SansSerif = {
        $: 'SansSerif'
    };
    var $mdgriffith$elm_ui$Internal$Model$Typeface = function(a) {
        return {
            $: 'Typeface',
            a: a
        };
    };
    var $mdgriffith$elm_ui$Internal$Flag$fontFamily = $mdgriffith$elm_ui$Internal$Flag$flag(5);
    var $elm$core$String$words = _String_words;
    var $mdgriffith$elm_ui$Internal$Model$renderFontClassName = F2(function(font, current) {
        return _Utils_ap(current, function() {
            switch(font.$){
                case 'Serif':
                    return 'serif';
                case 'SansSerif':
                    return 'sans-serif';
                case 'Monospace':
                    return 'monospace';
                case 'Typeface':
                    var name = font.a;
                    return A2($elm$core$String$join, '-', $elm$core$String$words($elm$core$String$toLower(name)));
                case 'ImportFont':
                    var name = font.a;
                    var url = font.b;
                    return A2($elm$core$String$join, '-', $elm$core$String$words($elm$core$String$toLower(name)));
                default:
                    var name = font.a.name;
                    return A2($elm$core$String$join, '-', $elm$core$String$words($elm$core$String$toLower(name)));
            }
        }());
    });
    var $mdgriffith$elm_ui$Internal$Model$rootStyle = function() {
        var families = _List_fromArray([
            $mdgriffith$elm_ui$Internal$Model$Typeface('Open Sans'),
            $mdgriffith$elm_ui$Internal$Model$Typeface('Helvetica'),
            $mdgriffith$elm_ui$Internal$Model$Typeface('Verdana'),
            $mdgriffith$elm_ui$Internal$Model$SansSerif
        ]);
        return _List_fromArray([
            A2($mdgriffith$elm_ui$Internal$Model$StyleClass, $mdgriffith$elm_ui$Internal$Flag$bgColor, A3($mdgriffith$elm_ui$Internal$Model$Colored, 'bg-' + $mdgriffith$elm_ui$Internal$Model$formatColorClass(A4($mdgriffith$elm_ui$Internal$Model$Rgba, 1, 1, 1, 0)), 'background-color', A4($mdgriffith$elm_ui$Internal$Model$Rgba, 1, 1, 1, 0))),
            A2($mdgriffith$elm_ui$Internal$Model$StyleClass, $mdgriffith$elm_ui$Internal$Flag$fontColor, A3($mdgriffith$elm_ui$Internal$Model$Colored, 'fc-' + $mdgriffith$elm_ui$Internal$Model$formatColorClass(A4($mdgriffith$elm_ui$Internal$Model$Rgba, 0, 0, 0, 1)), 'color', A4($mdgriffith$elm_ui$Internal$Model$Rgba, 0, 0, 0, 1))),
            A2($mdgriffith$elm_ui$Internal$Model$StyleClass, $mdgriffith$elm_ui$Internal$Flag$fontSize, $mdgriffith$elm_ui$Internal$Model$FontSize(20)),
            A2($mdgriffith$elm_ui$Internal$Model$StyleClass, $mdgriffith$elm_ui$Internal$Flag$fontFamily, A2($mdgriffith$elm_ui$Internal$Model$FontFamily, A3($elm$core$List$foldl, $mdgriffith$elm_ui$Internal$Model$renderFontClassName, 'font-', families), families))
        ]);
    }();
    var $mdgriffith$elm_ui$Element$layoutWith = F3(function(_v0, attrs, child) {
        var options = _v0.options;
        return A3($mdgriffith$elm_ui$Internal$Model$renderRoot, options, A2($elm$core$List$cons, $mdgriffith$elm_ui$Internal$Model$htmlClass(A2($elm$core$String$join, ' ', _List_fromArray([
            $mdgriffith$elm_ui$Internal$Style$classes.root,
            $mdgriffith$elm_ui$Internal$Style$classes.any,
            $mdgriffith$elm_ui$Internal$Style$classes.single
        ]))), _Utils_ap($mdgriffith$elm_ui$Internal$Model$rootStyle, attrs)), child);
    });
    var $mdgriffith$elm_ui$Element$layout = $mdgriffith$elm_ui$Element$layoutWith({
        options: _List_Nil
    });
    var $author$project$Index$index = function(gifLinks) {
        return A2($mdgriffith$elm_ui$Element$layout, _List_Nil, $author$project$Index$indexMain(gifLinks));
    };
    var $elm$virtual_dom$VirtualDom$style = _VirtualDom_style;
    var $elm$html$Html$Attributes$style = $elm$virtual_dom$VirtualDom$style;
    var $elm_community$typed_svg$TypedSvg$Types$Percent = function(a) {
        return {
            $: 'Percent',
            a: a
        };
    };
    var $author$project$Main$SelectItemsStart = function(a) {
        return {
            $: 'SelectItemsStart',
            a: a
        };
    };
    var $elm_community$typed_svg$TypedSvg$Attributes$class = function(names) {
        return A2($elm_community$typed_svg$TypedSvg$Core$attribute, 'class', A2($elm$core$String$join, ' ', names));
    };
    var $elm$virtual_dom$VirtualDom$nodeNS = function(tag) {
        return _VirtualDom_nodeNS(_VirtualDom_noScript(tag));
    };
    var $elm_community$typed_svg$TypedSvg$Core$node = $elm$virtual_dom$VirtualDom$nodeNS('http://www.w3.org/2000/svg');
    var $elm_community$typed_svg$TypedSvg$defs = $elm_community$typed_svg$TypedSvg$Core$node('defs');
    var $elm$core$Basics$truncate = _Basics_truncate;
    var $author$project$Main$floatRemainderBy = F2(function(divisor, n) {
        return n - (n / divisor | 0) * divisor;
    });
    var $elm_community$typed_svg$TypedSvg$g = $elm_community$typed_svg$TypedSvg$Core$node('g');
    var $elm_community$typed_svg$TypedSvg$Types$CoordinateSystemUserSpaceOnUse = {
        $: 'CoordinateSystemUserSpaceOnUse'
    };
    var $elm_community$typed_svg$TypedSvg$Types$Paint = function(a) {
        return {
            $: 'Paint',
            a: a
        };
    };
    var $elm_community$typed_svg$TypedSvg$Types$Px = function(a) {
        return {
            $: 'Px',
            a: a
        };
    };
    var $elm_community$typed_svg$TypedSvg$Types$Reference = function(a) {
        return {
            $: 'Reference',
            a: a
        };
    };
    var $avh4$elm_color$Color$toCssString = function(_v0) {
        var r = _v0.a;
        var g = _v0.b;
        var b = _v0.c;
        var a = _v0.d;
        var roundTo = function(x) {
            return $elm$core$Basics$round(x * 1000) / 1000;
        };
        var pct = function(x) {
            return $elm$core$Basics$round(x * 10000) / 100;
        };
        return $elm$core$String$concat(_List_fromArray([
            'rgba(',
            $elm$core$String$fromFloat(pct(r)),
            '%,',
            $elm$core$String$fromFloat(pct(g)),
            '%,',
            $elm$core$String$fromFloat(pct(b)),
            '%,',
            $elm$core$String$fromFloat(roundTo(a)),
            ')'
        ]));
    };
    var $elm_community$typed_svg$TypedSvg$TypesToStrings$paintToString = function(paint) {
        switch(paint.$){
            case 'Paint':
                var color = paint.a;
                return $avh4$elm_color$Color$toCssString(color);
            case 'CSSVariable':
                var string = paint.a;
                return $elm$core$String$concat(_List_fromArray([
                    'var(' + (string + ')')
                ]));
            case 'Reference':
                var string = paint.a;
                return $elm$core$String$concat(_List_fromArray([
                    'url(#',
                    string,
                    ')'
                ]));
            case 'ContextFill':
                return 'context-fill';
            case 'ContextStroke':
                return 'context-stroke';
            default:
                return 'none';
        }
    };
    var $elm_community$typed_svg$TypedSvg$Attributes$fill = A2($elm$core$Basics$composeL, $elm_community$typed_svg$TypedSvg$Core$attribute('fill'), $elm_community$typed_svg$TypedSvg$TypesToStrings$paintToString);
    var $author$project$Elements$gridId = 'grid';
    var $elm_community$typed_svg$TypedSvg$TypesToStrings$lengthToString = function(length) {
        switch(length.$){
            case 'Cm':
                var x = length.a;
                return $elm$core$String$fromFloat(x) + 'cm';
            case 'Em':
                var x = length.a;
                return $elm$core$String$fromFloat(x) + 'em';
            case 'Ex':
                var x = length.a;
                return $elm$core$String$fromFloat(x) + 'ex';
            case 'In':
                var x = length.a;
                return $elm$core$String$fromFloat(x) + 'in';
            case 'Mm':
                var x = length.a;
                return $elm$core$String$fromFloat(x) + 'mm';
            case 'Num':
                var x = length.a;
                return $elm$core$String$fromFloat(x);
            case 'Pc':
                var x = length.a;
                return $elm$core$String$fromFloat(x) + 'pc';
            case 'Percent':
                var x = length.a;
                return $elm$core$String$fromFloat(x) + '%';
            case 'Pt':
                var x = length.a;
                return $elm$core$String$fromFloat(x) + 'pt';
            case 'Px':
                var x = length.a;
                return $elm$core$String$fromFloat(x) + 'px';
            default:
                var x = length.a;
                return $elm$core$String$fromFloat(x) + 'rem';
        }
    };
    var $elm_community$typed_svg$TypedSvg$Attributes$height = function(length) {
        return A2($elm_community$typed_svg$TypedSvg$Core$attribute, 'height', $elm_community$typed_svg$TypedSvg$TypesToStrings$lengthToString(length));
    };
    var $author$project$Elements$innerGridId = 'inner-grid';
    var $elm_community$typed_svg$TypedSvg$pattern = $elm_community$typed_svg$TypedSvg$Core$node('pattern');
    var $elm_community$typed_svg$TypedSvg$TypesToStrings$coordinateSystemToString = function(coordinateSystem) {
        if (coordinateSystem.$ === 'CoordinateSystemUserSpaceOnUse') return 'userSpaceOnUse';
        else return 'objectBoundingBox';
    };
    var $elm_community$typed_svg$TypedSvg$Attributes$patternUnits = function(coordinateSystem) {
        return A2($elm_community$typed_svg$TypedSvg$Core$attribute, 'patternUnits', $elm_community$typed_svg$TypedSvg$TypesToStrings$coordinateSystemToString(coordinateSystem));
    };
    var $elm_community$typed_svg$TypedSvg$rect = $elm_community$typed_svg$TypedSvg$Core$node('rect');
    var $avh4$elm_color$Color$scaleFrom255 = function(c) {
        return c / 255;
    };
    var $avh4$elm_color$Color$rgb255 = F3(function(r, g, b) {
        return A4($avh4$elm_color$Color$RgbaSpace, $avh4$elm_color$Color$scaleFrom255(r), $avh4$elm_color$Color$scaleFrom255(g), $avh4$elm_color$Color$scaleFrom255(b), 1);
    });
    var $elm_community$typed_svg$TypedSvg$Attributes$stroke = A2($elm$core$Basics$composeL, $elm_community$typed_svg$TypedSvg$Core$attribute('stroke'), $elm_community$typed_svg$TypedSvg$TypesToStrings$paintToString);
    var $elm_community$typed_svg$TypedSvg$Attributes$strokeWidth = function(length) {
        return A2($elm_community$typed_svg$TypedSvg$Core$attribute, 'stroke-width', $elm_community$typed_svg$TypedSvg$TypesToStrings$lengthToString(length));
    };
    var $elm_community$typed_svg$TypedSvg$Attributes$width = function(length) {
        return A2($elm_community$typed_svg$TypedSvg$Core$attribute, 'width', $elm_community$typed_svg$TypedSvg$TypesToStrings$lengthToString(length));
    };
    var $elm_community$typed_svg$TypedSvg$Attributes$x = function(length) {
        return A2($elm_community$typed_svg$TypedSvg$Core$attribute, 'x', $elm_community$typed_svg$TypedSvg$TypesToStrings$lengthToString(length));
    };
    var $elm_community$typed_svg$TypedSvg$Attributes$y = function(length) {
        return A2($elm_community$typed_svg$TypedSvg$Core$attribute, 'y', $elm_community$typed_svg$TypedSvg$TypesToStrings$lengthToString(length));
    };
    var $author$project$Elements$grid = F3(function(x, y, size) {
        return A2($elm_community$typed_svg$TypedSvg$pattern, _List_fromArray([
            $elm_community$typed_svg$TypedSvg$Attributes$id($author$project$Elements$gridId),
            $elm_community$typed_svg$TypedSvg$Attributes$width($elm_community$typed_svg$TypedSvg$Types$Px(size)),
            $elm_community$typed_svg$TypedSvg$Attributes$height($elm_community$typed_svg$TypedSvg$Types$Px(size)),
            $elm_community$typed_svg$TypedSvg$Attributes$x($elm_community$typed_svg$TypedSvg$Types$Px(x)),
            $elm_community$typed_svg$TypedSvg$Attributes$y($elm_community$typed_svg$TypedSvg$Types$Px(y)),
            $elm_community$typed_svg$TypedSvg$Attributes$patternUnits($elm_community$typed_svg$TypedSvg$Types$CoordinateSystemUserSpaceOnUse)
        ]), _List_fromArray([
            A2($elm_community$typed_svg$TypedSvg$rect, _List_fromArray([
                $elm_community$typed_svg$TypedSvg$Attributes$width($elm_community$typed_svg$TypedSvg$Types$Percent(100)),
                $elm_community$typed_svg$TypedSvg$Attributes$height($elm_community$typed_svg$TypedSvg$Types$Percent(100)),
                $elm_community$typed_svg$TypedSvg$Attributes$fill($elm_community$typed_svg$TypedSvg$Types$Reference($author$project$Elements$innerGridId)),
                $elm_community$typed_svg$TypedSvg$Attributes$stroke($elm_community$typed_svg$TypedSvg$Types$Paint(A3($avh4$elm_color$Color$rgb255, 204, 204, 204))),
                $elm_community$typed_svg$TypedSvg$Attributes$strokeWidth($elm_community$typed_svg$TypedSvg$Types$Px(1.5))
            ]), _List_Nil)
        ]));
    });
    var $author$project$Elements$gridCellSize = 10;
    var $author$project$Elements$gridRect = function(events) {
        return A2($elm_community$typed_svg$TypedSvg$rect, _Utils_ap(_List_fromArray([
            $elm_community$typed_svg$TypedSvg$Attributes$width($elm_community$typed_svg$TypedSvg$Types$Percent(100)),
            $elm_community$typed_svg$TypedSvg$Attributes$height($elm_community$typed_svg$TypedSvg$Types$Percent(100)),
            $elm_community$typed_svg$TypedSvg$Attributes$fill($elm_community$typed_svg$TypedSvg$Types$Reference($author$project$Elements$gridId))
        ]), events), _List_Nil);
    };
    var $elm_community$typed_svg$TypedSvg$Types$PaintNone = {
        $: 'PaintNone'
    };
    var $author$project$Elements$innerGrid = function(size) {
        return A2($elm_community$typed_svg$TypedSvg$pattern, _List_fromArray([
            $elm_community$typed_svg$TypedSvg$Attributes$id($author$project$Elements$innerGridId),
            $elm_community$typed_svg$TypedSvg$Attributes$width($elm_community$typed_svg$TypedSvg$Types$Px(size)),
            $elm_community$typed_svg$TypedSvg$Attributes$height($elm_community$typed_svg$TypedSvg$Types$Px(size)),
            $elm_community$typed_svg$TypedSvg$Attributes$patternUnits($elm_community$typed_svg$TypedSvg$Types$CoordinateSystemUserSpaceOnUse)
        ]), _List_fromArray([
            A2($elm_community$typed_svg$TypedSvg$rect, _List_fromArray([
                $elm_community$typed_svg$TypedSvg$Attributes$width($elm_community$typed_svg$TypedSvg$Types$Percent(100)),
                $elm_community$typed_svg$TypedSvg$Attributes$height($elm_community$typed_svg$TypedSvg$Types$Percent(100)),
                $elm_community$typed_svg$TypedSvg$Attributes$fill($elm_community$typed_svg$TypedSvg$Types$PaintNone),
                $elm_community$typed_svg$TypedSvg$Attributes$stroke($elm_community$typed_svg$TypedSvg$Types$Paint(A3($avh4$elm_color$Color$rgb255, 204, 204, 204))),
                $elm_community$typed_svg$TypedSvg$Attributes$strokeWidth($elm_community$typed_svg$TypedSvg$Types$Px(0.5))
            ]), _List_Nil)
        ]));
    };
    var $avh4$elm_color$Color$black = A4($avh4$elm_color$Color$RgbaSpace, 0, 0, 0, 1);
    var $elm_community$typed_svg$TypedSvg$circle = $elm_community$typed_svg$TypedSvg$Core$node('circle');
    var $elm_community$typed_svg$TypedSvg$Attributes$cx = function(length) {
        return A2($elm_community$typed_svg$TypedSvg$Core$attribute, 'cx', $elm_community$typed_svg$TypedSvg$TypesToStrings$lengthToString(length));
    };
    var $elm_community$typed_svg$TypedSvg$Attributes$cy = function(length) {
        return A2($elm_community$typed_svg$TypedSvg$Core$attribute, 'cy', $elm_community$typed_svg$TypedSvg$TypesToStrings$lengthToString(length));
    };
    var $elm_community$typed_svg$TypedSvg$marker = $elm_community$typed_svg$TypedSvg$Core$node('marker');
    var $elm_community$typed_svg$TypedSvg$Attributes$markerHeight = function(mHeight) {
        return A2($elm_community$typed_svg$TypedSvg$Core$attribute, 'markerHeight', $elm_community$typed_svg$TypedSvg$TypesToStrings$lengthToString(mHeight));
    };
    var $elm_community$typed_svg$TypedSvg$Attributes$markerWidth = function(mWidth) {
        return A2($elm_community$typed_svg$TypedSvg$Core$attribute, 'markerWidth', $elm_community$typed_svg$TypedSvg$TypesToStrings$lengthToString(mWidth));
    };
    var $author$project$Elements$pointDotId = 'dot';
    var $elm_community$typed_svg$TypedSvg$Attributes$r = function(length) {
        return A2($elm_community$typed_svg$TypedSvg$Core$attribute, 'r', $elm_community$typed_svg$TypedSvg$TypesToStrings$lengthToString(length));
    };
    var $elm_community$typed_svg$TypedSvg$Attributes$refX = $elm_community$typed_svg$TypedSvg$Core$attribute('refX');
    var $elm_community$typed_svg$TypedSvg$Attributes$refY = $elm_community$typed_svg$TypedSvg$Core$attribute('refY');
    var $avh4$elm_color$Color$white = A4($avh4$elm_color$Color$RgbaSpace, 1, 1, 1, 1);
    var $author$project$Elements$markerDot = A2($elm_community$typed_svg$TypedSvg$marker, _List_fromArray([
        $elm_community$typed_svg$TypedSvg$Attributes$id($author$project$Elements$pointDotId),
        $elm_community$typed_svg$TypedSvg$Attributes$refX('5'),
        $elm_community$typed_svg$TypedSvg$Attributes$refY('5'),
        $elm_community$typed_svg$TypedSvg$Attributes$markerWidth($elm_community$typed_svg$TypedSvg$Types$Px(10)),
        $elm_community$typed_svg$TypedSvg$Attributes$markerHeight($elm_community$typed_svg$TypedSvg$Types$Px(10))
    ]), _List_fromArray([
        A2($elm_community$typed_svg$TypedSvg$circle, _List_fromArray([
            $elm_community$typed_svg$TypedSvg$Attributes$cx($elm_community$typed_svg$TypedSvg$Types$Px(5)),
            $elm_community$typed_svg$TypedSvg$Attributes$cy($elm_community$typed_svg$TypedSvg$Types$Px(5)),
            $elm_community$typed_svg$TypedSvg$Attributes$r($elm_community$typed_svg$TypedSvg$Types$Px(3)),
            $elm_community$typed_svg$TypedSvg$Attributes$fill($elm_community$typed_svg$TypedSvg$Types$Paint($avh4$elm_color$Color$white)),
            $elm_community$typed_svg$TypedSvg$Attributes$stroke($elm_community$typed_svg$TypedSvg$Types$Paint($avh4$elm_color$Color$black)),
            $elm_community$typed_svg$TypedSvg$Attributes$strokeWidth($elm_community$typed_svg$TypedSvg$Types$Px(1))
        ]), _List_Nil)
    ]));
    var $mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$defaultOptions = {
        preventDefault: true,
        stopPropagation: false
    };
    var $elm$virtual_dom$VirtualDom$Custom = function(a) {
        return {
            $: 'Custom',
            a: a
        };
    };
    var $elm$virtual_dom$VirtualDom$on = _VirtualDom_on;
    var $elm$html$Html$Events$custom = F2(function(event, decoder) {
        return A2($elm$virtual_dom$VirtualDom$on, event, $elm$virtual_dom$VirtualDom$Custom(decoder));
    });
    var $mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$onWithOptions = F3(function(event, options, tag) {
        return A2($elm$html$Html$Events$custom, event, A2($elm$json$Json$Decode$map, function(ev) {
            return {
                message: tag(ev),
                preventDefault: options.preventDefault,
                stopPropagation: options.stopPropagation
            };
        }, $mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$eventDecoder));
    });
    var $mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$onDown = A2($mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$onWithOptions, 'mousedown', $mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$defaultOptions);
    var $author$project$Main$onlyMainButton = function(e) {
        var _v0 = e.button;
        if (_v0.$ === 'MainButton') return $elm$core$Maybe$Just(e.clientPos);
        else return $elm$core$Maybe$Nothing;
    };
    var $author$project$Main$mouseDownMain = function(msg) {
        return $mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$onDown(A2($elm$core$Basics$composeR, $author$project$Main$onlyMainButton, A2($elm$core$Basics$composeR, $elm$core$Maybe$map(msg), $elm$core$Maybe$withDefault($author$project$Main$NoOp))));
    };
    var $mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$onContextMenu = A2($mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$onWithOptions, 'contextmenu', $mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$defaultOptions);
    var $gampleman$elm_visualization$Zoom$DoubleClicked = F2(function(a, b) {
        return {
            $: 'DoubleClicked',
            a: a,
            b: b
        };
    });
    var $elm$svg$Svg$Events$custom = $elm$html$Html$Events$custom;
    var $elm$json$Json$Decode$at = F2(function(fields, decoder) {
        return A3($elm$core$List$foldr, $elm$json$Json$Decode$field, decoder, fields);
    });
    var $gampleman$elm_visualization$Events$Rect = F4(function(x, y, width, height) {
        return {
            height: height,
            width: width,
            x: x,
            y: y
        };
    });
    var $elm$json$Json$Decode$map4 = _Json_map4;
    var $gampleman$elm_visualization$Events$decodeRect = A5($elm$json$Json$Decode$map4, $gampleman$elm_visualization$Events$Rect, A2($elm$json$Json$Decode$field, 'x', $elm$json$Json$Decode$float), A2($elm$json$Json$Decode$field, 'y', $elm$json$Json$Decode$float), A2($elm$json$Json$Decode$field, 'width', $elm$json$Json$Decode$float), A2($elm$json$Json$Decode$field, 'height', $elm$json$Json$Decode$float));
    var $elm$json$Json$Decode$oneOf = _Json_oneOf;
    var $gampleman$elm_visualization$Events$decodeSVGTransformMatrix = $elm$json$Json$Decode$oneOf(_List_fromArray([
        A4($elm$json$Json$Decode$map3, F3(function(viewBox, width, height) {
            return $elm$core$Maybe$Just(_Utils_Tuple2(_Utils_Tuple3(viewBox.width / width, 0, 0), _Utils_Tuple3(0, viewBox.height / height, 0)));
        }), A2($elm$json$Json$Decode$at, _List_fromArray([
            'currentTarget',
            'viewBox',
            'baseVal'
        ]), $gampleman$elm_visualization$Events$decodeRect), A2($elm$json$Json$Decode$at, _List_fromArray([
            'currentTarget',
            'width',
            'baseVal',
            'value'
        ]), $elm$json$Json$Decode$float), A2($elm$json$Json$Decode$at, _List_fromArray([
            'currentTarget',
            'height',
            'baseVal',
            'value'
        ]), $elm$json$Json$Decode$float)),
        $elm$json$Json$Decode$succeed($elm$core$Maybe$Nothing)
    ]));
    var $gampleman$elm_visualization$Events$decodeMousePosition = A4($elm$json$Json$Decode$map3, F3(function(maybeMatrix, x, y) {
        return A2($gampleman$elm_visualization$Events$normalizePointerPosition, _Utils_Tuple2(x, y), maybeMatrix);
    }), $gampleman$elm_visualization$Events$decodeSVGTransformMatrix, $elm$json$Json$Decode$oneOf(_List_fromArray([
        A2($elm$json$Json$Decode$field, 'offsetX', $elm$json$Json$Decode$float),
        A2($elm$json$Json$Decode$field, 'clientX', $elm$json$Json$Decode$float)
    ])), $elm$json$Json$Decode$oneOf(_List_fromArray([
        A2($elm$json$Json$Decode$field, 'offsetY', $elm$json$Json$Decode$float),
        A2($elm$json$Json$Decode$field, 'clientY', $elm$json$Json$Decode$float)
    ])));
    var $gampleman$elm_visualization$Zoom$onDoubleClick = F2(function(_v0, tagger) {
        return A2($elm$svg$Svg$Events$custom, 'dblclick', A3($elm$json$Json$Decode$map2, F2(function(shiftDown, position) {
            return {
                message: tagger(A2($gampleman$elm_visualization$Zoom$DoubleClicked, shiftDown, position)),
                preventDefault: true,
                stopPropagation: true
            };
        }), A2($elm$json$Json$Decode$field, 'shiftKey', $elm$json$Json$Decode$bool), $gampleman$elm_visualization$Events$decodeMousePosition));
    });
    var $gampleman$elm_visualization$Zoom$MouseDown = F2(function(a, b) {
        return {
            $: 'MouseDown',
            a: a,
            b: b
        };
    });
    var $gampleman$elm_visualization$Zoom$onDrag = F2(function(_v0, tagger) {
        var drag = _v0.a.drag;
        if (drag.$ === 'Nothing') return _List_fromArray([
            A2($elm$svg$Svg$Events$custom, 'mousedown', A4($elm$json$Json$Decode$map3, F3(function(x, y, matrix) {
                return {
                    message: tagger(A2($gampleman$elm_visualization$Zoom$MouseDown, _Utils_Tuple2(x, y), matrix)),
                    preventDefault: false,
                    stopPropagation: true
                };
            }), A2($elm$json$Json$Decode$field, 'clientX', $elm$json$Json$Decode$float), A2($elm$json$Json$Decode$field, 'clientY', $elm$json$Json$Decode$float), $gampleman$elm_visualization$Events$decodeSVGTransformMatrix))
        ]);
        else return _List_Nil;
    });
    var $gampleman$elm_visualization$Zoom$Wheeled = F2(function(a, b) {
        return {
            $: 'Wheeled',
            a: a,
            b: b
        };
    });
    var $gampleman$elm_visualization$Zoom$onWheel = F2(function(_v0, tagger) {
        return A2($elm$svg$Svg$Events$custom, 'wheel', A4($elm$json$Json$Decode$map3, F3(function(deltaY, deltaMode, position) {
            return {
                message: tagger(A2($gampleman$elm_visualization$Zoom$Wheeled, -deltaY * (!deltaMode ? 0.002 : deltaMode === 1 ? 0.05 : 1), position)),
                preventDefault: true,
                stopPropagation: true
            };
        }), A2($elm$json$Json$Decode$field, 'deltaY', $elm$json$Json$Decode$float), A2($elm$json$Json$Decode$field, 'deltaMode', $elm$json$Json$Decode$int), $gampleman$elm_visualization$Events$decodeMousePosition));
    });
    var $author$project$Main$DragViewElementStart = F2(function(a, b) {
        return {
            $: 'DragViewElementStart',
            a: a,
            b: b
        };
    });
    var $elm_community$typed_svg$TypedSvg$Types$AnchorMiddle = {
        $: 'AnchorMiddle'
    };
    var $elm_community$typed_svg$TypedSvg$Types$CursorDefault = {
        $: 'CursorDefault'
    };
    var $elm_community$typed_svg$TypedSvg$Types$DominantBaselineMiddle = {
        $: 'DominantBaselineMiddle'
    };
    var $author$project$Elements$containerHeight = 50;
    var $author$project$Elements$containerRadius = 0;
    var $author$project$Elements$containerWidth = 100;
    var $elm_community$typed_svg$TypedSvg$TypesToStrings$cursorToString = function(cursor) {
        switch(cursor.$){
            case 'CursorAuto':
                return 'auto';
            case 'CursorDefault':
                return 'default';
            case 'CursorCrosshair':
                return 'crosshair';
            case 'CursorPointer':
                return 'pointer';
            case 'CursorMove':
                return 'move';
            case 'CursorEResize':
                return 'e-resize';
            case 'CursorNEResize':
                return 'ne-resize';
            case 'CursorNWResize':
                return 'nw-resize';
            case 'CursorNResize':
                return 'n-resize';
            case 'CursorSEResize':
                return 'se-resize';
            case 'CursorSWResize':
                return 'sw-resize';
            case 'CursorWResize':
                return 'w-resize';
            case 'CursorText':
                return 'text';
            case 'CursorWait':
                return 'wait';
            case 'CursorHelp':
                return 'help';
            case 'CursorInherit':
                return 'inherit';
            default:
                var funcIRI = cursor.a;
                return funcIRI;
        }
    };
    var $elm_community$typed_svg$TypedSvg$Attributes$cursor = function(csor) {
        return A2($elm_community$typed_svg$TypedSvg$Core$attribute, 'cursor', $elm_community$typed_svg$TypedSvg$TypesToStrings$cursorToString(csor));
    };
    var $elm_community$typed_svg$TypedSvg$TypesToStrings$dominantBaselineToString = function(dominantBaseline) {
        switch(dominantBaseline.$){
            case 'DominantBaselineAuto':
                return 'auto';
            case 'DominantBaselineUseScript':
                return 'use-script';
            case 'DominantBaselineNoChange':
                return 'no-change';
            case 'DominantBaselineResetSize':
                return 'reset-size';
            case 'DominantBaselineIdeographic':
                return 'ideographic';
            case 'DominantBaselineAlphabetic':
                return 'alphabetic';
            case 'DominantBaselineHanging':
                return 'hanging';
            case 'DominantBaselineMathematical':
                return 'mathematical';
            case 'DominantBaselineCentral':
                return 'central';
            case 'DominantBaselineMiddle':
                return 'middle';
            case 'DominantBaselineTextAfterEdge':
                return 'text-after-edge';
            case 'DominantBaselineTextBeforeEdge':
                return 'text-before-edge';
            default:
                return 'inherit';
        }
    };
    var $elm_community$typed_svg$TypedSvg$Attributes$dominantBaseline = function(baseline) {
        return A2($elm_community$typed_svg$TypedSvg$Core$attribute, 'dominant-baseline', $elm_community$typed_svg$TypedSvg$TypesToStrings$dominantBaselineToString(baseline));
    };
    var $elm_community$typed_svg$TypedSvg$Attributes$rx = function(length) {
        return A2($elm_community$typed_svg$TypedSvg$Core$attribute, 'rx', $elm_community$typed_svg$TypedSvg$TypesToStrings$lengthToString(length));
    };
    var $elm_community$typed_svg$TypedSvg$Core$text = $elm$virtual_dom$VirtualDom$text;
    var $elm_community$typed_svg$TypedSvg$TypesToStrings$anchorAlignmentToString = function(anchorAlignment) {
        switch(anchorAlignment.$){
            case 'AnchorInherit':
                return 'inherit';
            case 'AnchorStart':
                return 'start';
            case 'AnchorMiddle':
                return 'middle';
            default:
                return 'end';
        }
    };
    var $elm_community$typed_svg$TypedSvg$Attributes$textAnchor = function(anchorAlignment) {
        return A2($elm_community$typed_svg$TypedSvg$Core$attribute, 'text-anchor', $elm_community$typed_svg$TypedSvg$TypesToStrings$anchorAlignmentToString(anchorAlignment));
    };
    var $elm_community$typed_svg$TypedSvg$text_ = $elm_community$typed_svg$TypedSvg$Core$node('text');
    var $elm_community$typed_svg$TypedSvg$title = $elm_community$typed_svg$TypedSvg$Core$node('title');
    var $author$project$Elements$renderContainerInternal = F3(function(selected, _v0, event) {
        var key = _v0.key;
        var name = _v0.name;
        var description = _v0.description;
        var xy = _v0.xy;
        var updatedName = function(a) {
            return $elm$core$String$length(name) > 15 ? A3($elm$core$String$slice, 0, 15, a) : a;
        };
        var tooltip = key + ('\n' + description);
        var eventToAdd = function() {
            if (event.$ === 'Just') {
                var ev = event.a;
                return _List_fromArray([
                    ev
                ]);
            } else return _List_Nil;
        }();
        var _v1 = xy;
        var xCenter = _v1.a;
        var yCenter = _v1.b;
        return A2($elm_community$typed_svg$TypedSvg$g, _List_Nil, _List_fromArray([
            A2($elm_community$typed_svg$TypedSvg$rect, _Utils_ap(_List_fromArray([
                $elm_community$typed_svg$TypedSvg$Attributes$x($elm_community$typed_svg$TypedSvg$Types$Px(xCenter - $author$project$Elements$containerWidth / 2)),
                $elm_community$typed_svg$TypedSvg$Attributes$y($elm_community$typed_svg$TypedSvg$Types$Px(yCenter - $author$project$Elements$containerHeight / 2)),
                $elm_community$typed_svg$TypedSvg$Attributes$width($elm_community$typed_svg$TypedSvg$Types$Px($author$project$Elements$containerWidth)),
                $elm_community$typed_svg$TypedSvg$Attributes$height($elm_community$typed_svg$TypedSvg$Types$Px($author$project$Elements$containerHeight)),
                $elm_community$typed_svg$TypedSvg$Attributes$rx($elm_community$typed_svg$TypedSvg$Types$Px($author$project$Elements$containerRadius)),
                $elm_community$typed_svg$TypedSvg$Attributes$fill($elm_community$typed_svg$TypedSvg$Types$Paint($avh4$elm_color$Color$white)),
                $elm_community$typed_svg$TypedSvg$Attributes$stroke($elm_community$typed_svg$TypedSvg$Types$Paint(selected ? $avh4$elm_color$Color$blue : $avh4$elm_color$Color$black)),
                $elm_community$typed_svg$TypedSvg$Attributes$strokeWidth($elm_community$typed_svg$TypedSvg$Types$Px(1))
            ]), eventToAdd), _List_fromArray([
                A2($elm_community$typed_svg$TypedSvg$title, _List_Nil, _List_fromArray([
                    $elm_community$typed_svg$TypedSvg$Core$text(tooltip)
                ]))
            ])),
            A2($elm_community$typed_svg$TypedSvg$text_, _Utils_ap(_List_fromArray([
                $elm_community$typed_svg$TypedSvg$Attributes$x($elm_community$typed_svg$TypedSvg$Types$Px(xCenter)),
                $elm_community$typed_svg$TypedSvg$Attributes$y($elm_community$typed_svg$TypedSvg$Types$Px(yCenter)),
                $elm_community$typed_svg$TypedSvg$Attributes$width($elm_community$typed_svg$TypedSvg$Types$Px($author$project$Elements$containerWidth)),
                $elm_community$typed_svg$TypedSvg$Attributes$height($elm_community$typed_svg$TypedSvg$Types$Px($author$project$Elements$containerHeight)),
                $elm_community$typed_svg$TypedSvg$Attributes$dominantBaseline($elm_community$typed_svg$TypedSvg$Types$DominantBaselineMiddle),
                $elm_community$typed_svg$TypedSvg$Attributes$textAnchor($elm_community$typed_svg$TypedSvg$Types$AnchorMiddle),
                $elm_community$typed_svg$TypedSvg$Attributes$cursor($elm_community$typed_svg$TypedSvg$Types$CursorDefault)
            ]), eventToAdd), _List_fromArray([
                $elm_community$typed_svg$TypedSvg$Core$text(updatedName(name)),
                A2($elm_community$typed_svg$TypedSvg$title, _List_Nil, _List_fromArray([
                    $elm_community$typed_svg$TypedSvg$Core$text(tooltip)
                ]))
            ]))
        ]));
    });
    var $author$project$Elements$renderContainer = $author$project$Elements$renderContainerInternal(false);
    var $author$project$Elements$renderContainerSelected = $author$project$Elements$renderContainerInternal(true);
    var $author$project$Main$drawContainer = F3(function(panMode, selectedItems, container) {
        var selectedElements = A2($elm$core$List$map, $elm$core$Tuple$first, $author$project$Main$getSelectedElementKeysAndDeltas(selectedItems));
        var mouseDownAttr = panMode ? $elm$core$Maybe$Nothing : $elm$core$Maybe$Just($author$project$Main$mouseDownMain($author$project$Main$DragViewElementStart(container.key)));
        return A2($elm$core$List$member, container.key, selectedElements) ? A2($author$project$Elements$renderContainerSelected, container, mouseDownAttr) : A2($author$project$Elements$renderContainer, container, mouseDownAttr);
    });
    var $author$project$Domain$getViewRelationKeyFromEdge = function(edge) {
        return _Utils_Tuple2(edge.source.key, _Utils_Tuple2(edge.target.key, edge.description));
    };
    var $author$project$Domain$getViewRelationKeyFromViewRelationPointKey = function(_v0) {
        var viewElementKey = _v0.a;
        var relation = _v0.b;
        var viewRelationPointIndex = _v0.c;
        return _Utils_Tuple2(viewElementKey, relation);
    };
    var $author$project$Main$ClickEdgeStart = F2(function(a, b) {
        return {
            $: 'ClickEdgeStart',
            a: a,
            b: b
        };
    });
    var $elm_community$typed_svg$TypedSvg$Types$DominantBaselineCentral = {
        $: 'DominantBaselineCentral'
    };
    var $elm_community$typed_svg$TypedSvg$Types$Opacity = function(a) {
        return {
            $: 'Opacity',
            a: a
        };
    };
    var $elm_community$typed_svg$TypedSvg$Types$Translate = F2(function(a, b) {
        return {
            $: 'Translate',
            a: a,
            b: b
        };
    });
    var $ianmackenzie$elm_geometry$CubicSpline2d$arcLengthParameterization = function(_v0) {
        var parameterized = _v0.a;
        return parameterized.parameterization;
    };
    var $ianmackenzie$elm_units$Quantity$Quantity = function(a) {
        return {
            $: 'Quantity',
            a: a
        };
    };
    var $ianmackenzie$elm_geometry$ArcLengthParameterization$lengthAtEnd = function(tree) {
        if (tree.$ === 'Node') {
            var node = tree.a;
            return node.lengthAtEnd;
        } else {
            var leaf = tree.a;
            return leaf.length8;
        }
    };
    var $ianmackenzie$elm_geometry$ArcLengthParameterization$totalArcLength = function(_v0) {
        var tree = _v0.a;
        return $ianmackenzie$elm_units$Quantity$Quantity($ianmackenzie$elm_geometry$ArcLengthParameterization$lengthAtEnd(tree));
    };
    var $ianmackenzie$elm_geometry$CubicSpline2d$arcLength = function(parameterizedSpline) {
        return $ianmackenzie$elm_geometry$ArcLengthParameterization$totalArcLength($ianmackenzie$elm_geometry$CubicSpline2d$arcLengthParameterization(parameterizedSpline));
    };
    var $ianmackenzie$elm_geometry$EllipticalArc2d$arcLengthParameterization = function(_v0) {
        var parameterized = _v0.a;
        return parameterized.parameterization;
    };
    var $ianmackenzie$elm_geometry$EllipticalArc2d$arcLength = function(parameterizedArc) {
        return $ianmackenzie$elm_geometry$ArcLengthParameterization$totalArcLength($ianmackenzie$elm_geometry$EllipticalArc2d$arcLengthParameterization(parameterizedArc));
    };
    var $ianmackenzie$elm_geometry$QuadraticSpline2d$arcLengthParameterization = function(_v0) {
        var parameterized = _v0.a;
        return parameterized.parameterization;
    };
    var $ianmackenzie$elm_geometry$QuadraticSpline2d$arcLength = function(parameterizedSpline) {
        return $ianmackenzie$elm_geometry$ArcLengthParameterization$totalArcLength($ianmackenzie$elm_geometry$QuadraticSpline2d$arcLengthParameterization(parameterizedSpline));
    };
    var $ianmackenzie$elm_units$Quantity$zero = $ianmackenzie$elm_units$Quantity$Quantity(0);
    var $ianmackenzie$elm_geometry$Vector2d$length = function(_v0) {
        var v = _v0.a;
        var largestComponent = A2($elm$core$Basics$max, $elm$core$Basics$abs(v.x), $elm$core$Basics$abs(v.y));
        if (!largestComponent) return $ianmackenzie$elm_units$Quantity$zero;
        else {
            var scaledY = v.y / largestComponent;
            var scaledX = v.x / largestComponent;
            var scaledLength = $elm$core$Basics$sqrt(scaledX * scaledX + scaledY * scaledY);
            return $ianmackenzie$elm_units$Quantity$Quantity(scaledLength * largestComponent);
        }
    };
    var $ianmackenzie$elm_geometry$LineSegment2d$endpoints = function(_v0) {
        var endpoints_ = _v0.a;
        return endpoints_;
    };
    var $ianmackenzie$elm_geometry$Geometry$Types$Vector2d = function(a) {
        return {
            $: 'Vector2d',
            a: a
        };
    };
    var $ianmackenzie$elm_geometry$Vector2d$from = F2(function(_v0, _v1) {
        var p1 = _v0.a;
        var p2 = _v1.a;
        return $ianmackenzie$elm_geometry$Geometry$Types$Vector2d({
            x: p2.x - p1.x,
            y: p2.y - p1.y
        });
    });
    var $ianmackenzie$elm_geometry$LineSegment2d$vector = function(lineSegment) {
        var _v0 = $ianmackenzie$elm_geometry$LineSegment2d$endpoints(lineSegment);
        var p1 = _v0.a;
        var p2 = _v0.b;
        return A2($ianmackenzie$elm_geometry$Vector2d$from, p1, p2);
    };
    var $ianmackenzie$elm_geometry$LineSegment2d$length = function(givenSegment) {
        return $ianmackenzie$elm_geometry$Vector2d$length($ianmackenzie$elm_geometry$LineSegment2d$vector(givenSegment));
    };
    var $ianmackenzie$elm_units$Quantity$toFloat = function(_v0) {
        var value = _v0.a;
        return value;
    };
    var $folkertdev$one_true_path_experiment$Segment$arcLength = function(parameterized) {
        return $ianmackenzie$elm_units$Quantity$toFloat(function() {
            switch(parameterized.$){
                case 'ParameterizedLineSegment':
                    var lineSegment = parameterized.a;
                    return $ianmackenzie$elm_geometry$LineSegment2d$length(lineSegment);
                case 'ParameterizedQuadratic':
                    var spline = parameterized.a;
                    return $ianmackenzie$elm_geometry$QuadraticSpline2d$arcLength(spline);
                case 'ParameterizedCubic':
                    var spline = parameterized.a;
                    return $ianmackenzie$elm_geometry$CubicSpline2d$arcLength(spline);
                default:
                    var arc = parameterized.a;
                    return $ianmackenzie$elm_geometry$EllipticalArc2d$arcLength(arc);
            }
        }());
    };
    var $folkertdev$one_true_path_experiment$SubPath$arcLength = function(parameterized) {
        switch(parameterized.$){
            case 'None':
                return 0;
            case 'Leaf':
                var segment = parameterized.a.segment;
                return $folkertdev$one_true_path_experiment$Segment$arcLength(segment);
            default:
                var totalLength = parameterized.a.totalLength;
                return totalLength;
        }
    };
    var $folkertdev$one_true_path_experiment$SubPath$Leaf = function(a) {
        return {
            $: 'Leaf',
            a: a
        };
    };
    var $folkertdev$one_true_path_experiment$SubPath$Node = function(a) {
        return {
            $: 'Node',
            a: a
        };
    };
    var $folkertdev$one_true_path_experiment$SubPath$None = {
        $: 'None'
    };
    var $folkertdev$one_true_path_experiment$Segment$ParameterizedArc = function(a) {
        return {
            $: 'ParameterizedArc',
            a: a
        };
    };
    var $folkertdev$one_true_path_experiment$Segment$ParameterizedCubic = function(a) {
        return {
            $: 'ParameterizedCubic',
            a: a
        };
    };
    var $folkertdev$one_true_path_experiment$Segment$ParameterizedLineSegment = function(a) {
        return {
            $: 'ParameterizedLineSegment',
            a: a
        };
    };
    var $folkertdev$one_true_path_experiment$Segment$ParameterizedQuadratic = function(a) {
        return {
            $: 'ParameterizedQuadratic',
            a: a
        };
    };
    var $ianmackenzie$elm_geometry$CubicSpline2d$ArcLengthParameterized = function(a) {
        return {
            $: 'ArcLengthParameterized',
            a: a
        };
    };
    var $ianmackenzie$elm_geometry$ArcLengthParameterization$ArcLengthParameterization = function(a) {
        return {
            $: 'ArcLengthParameterization',
            a: a
        };
    };
    var $ianmackenzie$elm_geometry$ArcLengthParameterization$Leaf = function(a) {
        return {
            $: 'Leaf',
            a: a
        };
    };
    var $ianmackenzie$elm_geometry$ArcLengthParameterization$Node = function(a) {
        return {
            $: 'Node',
            a: a
        };
    };
    var $ianmackenzie$elm_geometry$ArcLengthParameterization$buildTree = F5(function(derivativeMagnitude, lengthAtStart_, paramAtStart_, paramAtEnd, height) {
        var paramDelta = paramAtEnd - paramAtStart_;
        if (!height) {
            var paramStep = 0.125 * paramDelta;
            var param8 = paramAtEnd;
            var param7 = paramAtEnd - 0.125 * paramDelta;
            var param6 = paramAtEnd - 0.25 * paramDelta;
            var param5 = paramAtEnd - 0.375 * paramDelta;
            var param4 = paramAtStart_ + 0.5 * paramDelta;
            var param3 = paramAtStart_ + 0.375 * paramDelta;
            var param2 = paramAtStart_ + 0.25 * paramDelta;
            var param1 = paramAtStart_ + 0.125 * paramDelta;
            var param0 = paramAtStart_;
            var offset = 0.0625 * paramDelta;
            var length0 = lengthAtStart_;
            var _v0 = derivativeMagnitude(param7 + offset);
            var derivativeMagnitude7 = _v0.a;
            var _v1 = derivativeMagnitude(param6 + offset);
            var derivativeMagnitude6 = _v1.a;
            var _v2 = derivativeMagnitude(param5 + offset);
            var derivativeMagnitude5 = _v2.a;
            var _v3 = derivativeMagnitude(param4 + offset);
            var derivativeMagnitude4 = _v3.a;
            var _v4 = derivativeMagnitude(param3 + offset);
            var derivativeMagnitude3 = _v4.a;
            var _v5 = derivativeMagnitude(param2 + offset);
            var derivativeMagnitude2 = _v5.a;
            var _v6 = derivativeMagnitude(param1 + offset);
            var derivativeMagnitude1 = _v6.a;
            var _v7 = derivativeMagnitude(param0 + offset);
            var derivativeMagnitude0 = _v7.a;
            var length1 = length0 + paramStep * derivativeMagnitude0;
            var length2 = length1 + paramStep * derivativeMagnitude1;
            var length3 = length2 + paramStep * derivativeMagnitude2;
            var length4 = length3 + paramStep * derivativeMagnitude3;
            var length5 = length4 + paramStep * derivativeMagnitude4;
            var length6 = length5 + paramStep * derivativeMagnitude5;
            var length7 = length6 + paramStep * derivativeMagnitude6;
            var length8 = length7 + paramStep * derivativeMagnitude7;
            return $ianmackenzie$elm_geometry$ArcLengthParameterization$Leaf({
                length0: length0,
                length1: length1,
                length2: length2,
                length3: length3,
                length4: length4,
                length5: length5,
                length6: length6,
                length7: length7,
                length8: length8,
                param0: param0,
                param1: param1,
                param2: param2,
                param3: param3,
                param4: param4,
                param5: param5,
                param6: param6,
                param7: param7,
                param8: param8
            });
        } else {
            var paramAtMid = paramAtStart_ + 0.5 * paramDelta;
            var branchHeight = height - 1;
            var leftBranch = A5($ianmackenzie$elm_geometry$ArcLengthParameterization$buildTree, derivativeMagnitude, lengthAtStart_, paramAtStart_, paramAtMid, branchHeight);
            var lengthAtLeftEnd = $ianmackenzie$elm_geometry$ArcLengthParameterization$lengthAtEnd(leftBranch);
            var rightBranch = A5($ianmackenzie$elm_geometry$ArcLengthParameterization$buildTree, derivativeMagnitude, lengthAtLeftEnd, paramAtMid, paramAtEnd, branchHeight);
            return $ianmackenzie$elm_geometry$ArcLengthParameterization$Node({
                leftBranch: leftBranch,
                lengthAtEnd: $ianmackenzie$elm_geometry$ArcLengthParameterization$lengthAtEnd(rightBranch),
                lengthAtStart: lengthAtStart_,
                paramAtStart: paramAtStart_,
                rightBranch: rightBranch
            });
        }
    });
    var $ianmackenzie$elm_units$Quantity$lessThanOrEqualTo = F2(function(_v0, _v1) {
        var y = _v0.a;
        var x = _v1.a;
        return _Utils_cmp(x, y) < 1;
    });
    var $ianmackenzie$elm_units$Quantity$multiplyBy = F2(function(scale, _v0) {
        var value = _v0.a;
        return $ianmackenzie$elm_units$Quantity$Quantity(scale * value);
    });
    var $ianmackenzie$elm_units$Quantity$ratio = F2(function(_v0, _v1) {
        var x = _v0.a;
        var y = _v1.a;
        return x / y;
    });
    var $ianmackenzie$elm_geometry$ArcLengthParameterization$segmentsPerLeaf = 8;
    var $ianmackenzie$elm_geometry$ArcLengthParameterization$build = function(_v0) {
        var maxError = _v0.maxError;
        var derivativeMagnitude = _v0.derivativeMagnitude;
        var maxSecondDerivativeMagnitude = _v0.maxSecondDerivativeMagnitude;
        var height = function() {
            if (A2($ianmackenzie$elm_units$Quantity$lessThanOrEqualTo, $ianmackenzie$elm_units$Quantity$zero, maxError)) return 0;
            else {
                var numSegments = A2($ianmackenzie$elm_units$Quantity$ratio, maxSecondDerivativeMagnitude, A2($ianmackenzie$elm_units$Quantity$multiplyBy, 8, maxError));
                var numLeaves = numSegments / $ianmackenzie$elm_geometry$ArcLengthParameterization$segmentsPerLeaf;
                return A2($elm$core$Basics$max, 0, $elm$core$Basics$ceiling(A2($elm$core$Basics$logBase, 2, numLeaves)));
            }
        }();
        return $ianmackenzie$elm_geometry$ArcLengthParameterization$ArcLengthParameterization(A5($ianmackenzie$elm_geometry$ArcLengthParameterization$buildTree, derivativeMagnitude, 0, 0, 1, height));
    };
    var $ianmackenzie$elm_geometry$CubicSpline2d$derivativeMagnitude = function(_v0) {
        var spline = _v0.a;
        var _v1 = spline.fourthControlPoint;
        var p4 = _v1.a;
        var x4 = p4.x;
        var y4 = p4.y;
        var _v2 = spline.thirdControlPoint;
        var p3 = _v2.a;
        var x3 = p3.x;
        var x34 = x4 - x3;
        var y3 = p3.y;
        var y34 = y4 - y3;
        var _v3 = spline.secondControlPoint;
        var p2 = _v3.a;
        var x2 = p2.x;
        var x23 = x3 - x2;
        var x234 = x34 - x23;
        var y2 = p2.y;
        var y23 = y3 - y2;
        var y234 = y34 - y23;
        var _v4 = spline.firstControlPoint;
        var p1 = _v4.a;
        var x1 = p1.x;
        var x12 = x2 - x1;
        var x123 = x23 - x12;
        var y1 = p1.y;
        var y12 = y2 - y1;
        var y123 = y23 - y12;
        return function(parameterValue) {
            var y24 = y23 + parameterValue * y234;
            var y13 = y12 + parameterValue * y123;
            var y14 = y13 + parameterValue * (y24 - y13);
            var x24 = x23 + parameterValue * x234;
            var x13 = x12 + parameterValue * x123;
            var x14 = x13 + parameterValue * (x24 - x13);
            return $ianmackenzie$elm_units$Quantity$Quantity(3 * $elm$core$Basics$sqrt(x14 * x14 + y14 * y14));
        };
    };
    var $ianmackenzie$elm_geometry$CubicSpline2d$fromNondegenerate = function(nondegenerateSpline) {
        switch(nondegenerateSpline.$){
            case 'NonZeroThirdDerivative':
                var spline = nondegenerateSpline.a;
                return spline;
            case 'NonZeroSecondDerivative':
                var spline = nondegenerateSpline.a;
                return spline;
            default:
                var spline = nondegenerateSpline.a;
                return spline;
        }
    };
    var $ianmackenzie$elm_geometry$CubicSpline2d$firstControlPoint = function(_v0) {
        var spline = _v0.a;
        return spline.firstControlPoint;
    };
    var $ianmackenzie$elm_geometry$CubicSpline2d$fourthControlPoint = function(_v0) {
        var spline = _v0.a;
        return spline.fourthControlPoint;
    };
    var $ianmackenzie$elm_units$Quantity$max = F2(function(_v0, _v1) {
        var x = _v0.a;
        var y = _v1.a;
        return $ianmackenzie$elm_units$Quantity$Quantity(A2($elm$core$Basics$max, x, y));
    });
    var $ianmackenzie$elm_geometry$Vector2d$minus = F2(function(_v0, _v1) {
        var v2 = _v0.a;
        var v1 = _v1.a;
        return $ianmackenzie$elm_geometry$Geometry$Types$Vector2d({
            x: v1.x - v2.x,
            y: v1.y - v2.y
        });
    });
    var $ianmackenzie$elm_geometry$CubicSpline2d$secondControlPoint = function(_v0) {
        var spline = _v0.a;
        return spline.secondControlPoint;
    };
    var $ianmackenzie$elm_geometry$CubicSpline2d$thirdControlPoint = function(_v0) {
        var spline = _v0.a;
        return spline.thirdControlPoint;
    };
    var $ianmackenzie$elm_geometry$CubicSpline2d$maxSecondDerivativeMagnitude = function(spline) {
        var p4 = $ianmackenzie$elm_geometry$CubicSpline2d$fourthControlPoint(spline);
        var p3 = $ianmackenzie$elm_geometry$CubicSpline2d$thirdControlPoint(spline);
        var u3 = A2($ianmackenzie$elm_geometry$Vector2d$from, p3, p4);
        var p2 = $ianmackenzie$elm_geometry$CubicSpline2d$secondControlPoint(spline);
        var u2 = A2($ianmackenzie$elm_geometry$Vector2d$from, p2, p3);
        var v2 = A2($ianmackenzie$elm_geometry$Vector2d$minus, u2, u3);
        var p1 = $ianmackenzie$elm_geometry$CubicSpline2d$firstControlPoint(spline);
        var u1 = A2($ianmackenzie$elm_geometry$Vector2d$from, p1, p2);
        var v1 = A2($ianmackenzie$elm_geometry$Vector2d$minus, u1, u2);
        return A2($ianmackenzie$elm_units$Quantity$multiplyBy, 6, A2($ianmackenzie$elm_units$Quantity$max, $ianmackenzie$elm_geometry$Vector2d$length(v1), $ianmackenzie$elm_geometry$Vector2d$length(v2)));
    };
    var $ianmackenzie$elm_geometry$CubicSpline2d$arcLengthParameterized = F2(function(_v0, nondegenerateSpline) {
        var maxError = _v0.maxError;
        var spline = $ianmackenzie$elm_geometry$CubicSpline2d$fromNondegenerate(nondegenerateSpline);
        var parameterization = $ianmackenzie$elm_geometry$ArcLengthParameterization$build({
            derivativeMagnitude: $ianmackenzie$elm_geometry$CubicSpline2d$derivativeMagnitude(spline),
            maxError: maxError,
            maxSecondDerivativeMagnitude: $ianmackenzie$elm_geometry$CubicSpline2d$maxSecondDerivativeMagnitude(spline)
        });
        return $ianmackenzie$elm_geometry$CubicSpline2d$ArcLengthParameterized({
            nondegenerateSpline: nondegenerateSpline,
            parameterization: parameterization,
            underlyingSpline: spline
        });
    });
    var $ianmackenzie$elm_geometry$EllipticalArc2d$ArcLengthParameterized = function(a) {
        return {
            $: 'ArcLengthParameterized',
            a: a
        };
    };
    var $ianmackenzie$elm_units$Quantity$abs = function(_v0) {
        var value = _v0.a;
        return $ianmackenzie$elm_units$Quantity$Quantity($elm$core$Basics$abs(value));
    };
    var $ianmackenzie$elm_units$Quantity$plus = F2(function(_v0, _v1) {
        var y = _v0.a;
        var x = _v1.a;
        return $ianmackenzie$elm_units$Quantity$Quantity(x + y);
    });
    var $elm$core$Basics$cos = _Basics_cos;
    var $ianmackenzie$elm_units$Angle$cos = function(_v0) {
        var angle = _v0.a;
        return $elm$core$Basics$cos(angle);
    };
    var $ianmackenzie$elm_geometry$Quantity$Extra$rCosTheta = F2(function(r, theta) {
        return A2($ianmackenzie$elm_units$Quantity$multiplyBy, $ianmackenzie$elm_units$Angle$cos(theta), r);
    });
    var $elm$core$Basics$sin = _Basics_sin;
    var $ianmackenzie$elm_units$Angle$sin = function(_v0) {
        var angle = _v0.a;
        return $elm$core$Basics$sin(angle);
    };
    var $ianmackenzie$elm_geometry$Quantity$Extra$rSinTheta = F2(function(r, theta) {
        return A2($ianmackenzie$elm_units$Quantity$multiplyBy, $ianmackenzie$elm_units$Angle$sin(theta), r);
    });
    var $ianmackenzie$elm_geometry$Quantity$Extra$rTheta = F2(function(_v0, _v1) {
        var r = _v0.a;
        var theta = _v1.a;
        return $ianmackenzie$elm_units$Quantity$Quantity(r * theta);
    });
    var $ianmackenzie$elm_units$Quantity$sqrt = function(_v0) {
        var value = _v0.a;
        return $ianmackenzie$elm_units$Quantity$Quantity($elm$core$Basics$sqrt(value));
    };
    var $ianmackenzie$elm_units$Quantity$squared = function(_v0) {
        var value = _v0.a;
        return $ianmackenzie$elm_units$Quantity$Quantity(value * value);
    };
    var $ianmackenzie$elm_geometry$EllipticalArc2d$startAngle = function(_v0) {
        var arc = _v0.a;
        return arc.startAngle;
    };
    var $ianmackenzie$elm_geometry$EllipticalArc2d$sweptAngle = function(_v0) {
        var arc = _v0.a;
        return arc.sweptAngle;
    };
    var $ianmackenzie$elm_geometry$Ellipse2d$xRadius = function(_v0) {
        var ellipse = _v0.a;
        return ellipse.xRadius;
    };
    var $ianmackenzie$elm_geometry$EllipticalArc2d$xRadius = function(_v0) {
        var arc = _v0.a;
        return $ianmackenzie$elm_geometry$Ellipse2d$xRadius(arc.ellipse);
    };
    var $ianmackenzie$elm_geometry$Ellipse2d$yRadius = function(_v0) {
        var ellipse = _v0.a;
        return ellipse.yRadius;
    };
    var $ianmackenzie$elm_geometry$EllipticalArc2d$yRadius = function(_v0) {
        var arc = _v0.a;
        return $ianmackenzie$elm_geometry$Ellipse2d$yRadius(arc.ellipse);
    };
    var $ianmackenzie$elm_geometry$EllipticalArc2d$derivativeMagnitude = function(arc) {
        var theta0 = $ianmackenzie$elm_geometry$EllipticalArc2d$startAngle(arc);
        var ry = $ianmackenzie$elm_geometry$EllipticalArc2d$yRadius(arc);
        var rx = $ianmackenzie$elm_geometry$EllipticalArc2d$xRadius(arc);
        var dTheta = $ianmackenzie$elm_geometry$EllipticalArc2d$sweptAngle(arc);
        var absDTheta = $ianmackenzie$elm_units$Quantity$abs(dTheta);
        return function(parameterValue) {
            var theta = A2($ianmackenzie$elm_units$Quantity$plus, A2($ianmackenzie$elm_units$Quantity$multiplyBy, parameterValue, dTheta), theta0);
            var dy = A2($ianmackenzie$elm_geometry$Quantity$Extra$rCosTheta, ry, theta);
            var dx = A2($ianmackenzie$elm_geometry$Quantity$Extra$rSinTheta, rx, theta);
            var r = $ianmackenzie$elm_units$Quantity$sqrt(A2($ianmackenzie$elm_units$Quantity$plus, $ianmackenzie$elm_units$Quantity$squared(dy), $ianmackenzie$elm_units$Quantity$squared(dx)));
            return A2($ianmackenzie$elm_geometry$Quantity$Extra$rTheta, r, absDTheta);
        };
    };
    var $ianmackenzie$elm_geometry$EllipticalArc2d$fromNondegenerate = function(nondegenerateArc) {
        switch(nondegenerateArc.$){
            case 'Curved':
                var arc = nondegenerateArc.a;
                return arc;
            case 'Horizontal':
                var arc = nondegenerateArc.a;
                return arc;
            default:
                var arc = nondegenerateArc.a;
                return arc;
        }
    };
    var $ianmackenzie$elm_units_interval$Quantity$Interval$contains = F2(function(_v0, _v1) {
        var x = _v0.a;
        var _v2 = _v1.a;
        var a = _v2.a.a;
        var b = _v2.b.a;
        return _Utils_cmp(a, x) < 1 && _Utils_cmp(x, b) < 1;
    });
    var $ianmackenzie$elm_units$Quantity$float = function(value) {
        return $ianmackenzie$elm_units$Quantity$Quantity(value);
    };
    var $ianmackenzie$elm_units_interval$Quantity$Interval$Interval = function(a) {
        return {
            $: 'Interval',
            a: a
        };
    };
    var $ianmackenzie$elm_units_interval$Quantity$Interval$from = F2(function(_v0, _v1) {
        var a = _v0.a;
        var b = _v1.a;
        return _Utils_cmp(a, b) < 1 ? $ianmackenzie$elm_units_interval$Quantity$Interval$Interval(_Utils_Tuple2($ianmackenzie$elm_units$Quantity$Quantity(a), $ianmackenzie$elm_units$Quantity$Quantity(b))) : $ianmackenzie$elm_units_interval$Quantity$Interval$Interval(_Utils_Tuple2($ianmackenzie$elm_units$Quantity$Quantity(b), $ianmackenzie$elm_units$Quantity$Quantity(a)));
    });
    var $ianmackenzie$elm_units$Quantity$greaterThanOrEqualTo = F2(function(_v0, _v1) {
        var y = _v0.a;
        var x = _v1.a;
        return _Utils_cmp(x, y) > -1;
    });
    var $ianmackenzie$elm_units_interval$Quantity$Interval$maxValue = function(_v0) {
        var _v1 = _v0.a;
        var b = _v1.b;
        return b;
    };
    var $ianmackenzie$elm_units_interval$Quantity$Interval$minValue = function(_v0) {
        var _v1 = _v0.a;
        var a = _v1.a;
        return a;
    };
    var $ianmackenzie$elm_units_interval$Quantity$Interval$endpoints = function(_v0) {
        var intervalEndpoints = _v0.a;
        return intervalEndpoints;
    };
    var $ianmackenzie$elm_units_interval$Quantity$Interval$isSingleton = function(_v0) {
        var _v1 = _v0.a;
        var a = _v1.a;
        var b = _v1.b;
        return _Utils_eq(a, b);
    };
    var $ianmackenzie$elm_units_interval$Quantity$Interval$add = F2(function(_v0, _v1) {
        var delta = _v0.a;
        var _v2 = _v1.a;
        var a = _v2.a.a;
        var b = _v2.b.a;
        return $ianmackenzie$elm_units_interval$Quantity$Interval$Interval(_Utils_Tuple2($ianmackenzie$elm_units$Quantity$Quantity(a + delta), $ianmackenzie$elm_units$Quantity$Quantity(b + delta)));
    });
    var $elm$core$Basics$pi = _Basics_pi;
    var $ianmackenzie$elm_units$Angle$radians = function(numRadians) {
        return $ianmackenzie$elm_units$Quantity$Quantity(numRadians);
    };
    var $ianmackenzie$elm_units_interval$Angle$Interval$cosIncludesMax = function(interval) {
        var twoPi = $ianmackenzie$elm_units$Angle$radians(2 * $elm$core$Basics$pi);
        var _v0 = $ianmackenzie$elm_units_interval$Quantity$Interval$endpoints(interval);
        var a = _v0.a;
        var b = _v0.b;
        var minBranch = $elm$core$Basics$floor(A2($ianmackenzie$elm_units$Quantity$ratio, a, twoPi));
        var maxBranch = $elm$core$Basics$floor(A2($ianmackenzie$elm_units$Quantity$ratio, b, twoPi));
        return !_Utils_eq(minBranch, maxBranch);
    };
    var $ianmackenzie$elm_units_interval$Angle$Interval$cosIncludesMinMax = function(interval) {
        return _Utils_Tuple2($ianmackenzie$elm_units_interval$Angle$Interval$cosIncludesMax(A2($ianmackenzie$elm_units_interval$Quantity$Interval$add, $ianmackenzie$elm_units$Angle$radians($elm$core$Basics$pi), interval)), $ianmackenzie$elm_units_interval$Angle$Interval$cosIncludesMax(interval));
    };
    var $ianmackenzie$elm_units_interval$Quantity$Interval$subtract = F2(function(_v0, _v1) {
        var delta = _v0.a;
        var _v2 = _v1.a;
        var a = _v2.a.a;
        var b = _v2.b.a;
        return $ianmackenzie$elm_units_interval$Quantity$Interval$Interval(_Utils_Tuple2($ianmackenzie$elm_units$Quantity$Quantity(a - delta), $ianmackenzie$elm_units$Quantity$Quantity(b - delta)));
    });
    var $ianmackenzie$elm_units_interval$Angle$Interval$sinIncludesMinMax = function(interval) {
        return $ianmackenzie$elm_units_interval$Angle$Interval$cosIncludesMinMax(A2($ianmackenzie$elm_units_interval$Quantity$Interval$subtract, $ianmackenzie$elm_units$Angle$radians($elm$core$Basics$pi / 2), interval));
    };
    var $ianmackenzie$elm_units_interval$Quantity$Interval$singleton = function(value) {
        return $ianmackenzie$elm_units_interval$Quantity$Interval$Interval(_Utils_Tuple2(value, value));
    };
    var $ianmackenzie$elm_units_interval$Angle$Interval$sin = function(interval) {
        if ($ianmackenzie$elm_units_interval$Quantity$Interval$isSingleton(interval)) return $ianmackenzie$elm_units_interval$Quantity$Interval$singleton($ianmackenzie$elm_units$Quantity$float($ianmackenzie$elm_units$Angle$sin($ianmackenzie$elm_units_interval$Quantity$Interval$minValue(interval))));
        else {
            var _v0 = $ianmackenzie$elm_units_interval$Angle$Interval$sinIncludesMinMax(interval);
            var includesMin = _v0.a;
            var includesMax = _v0.b;
            var _v1 = $ianmackenzie$elm_units_interval$Quantity$Interval$endpoints(interval);
            var a = _v1.a;
            var b = _v1.b;
            var newMax = includesMax ? $ianmackenzie$elm_units$Quantity$float(1) : $ianmackenzie$elm_units$Quantity$float(A2($elm$core$Basics$max, $ianmackenzie$elm_units$Angle$sin(a), $ianmackenzie$elm_units$Angle$sin(b)));
            var newMin = includesMin ? $ianmackenzie$elm_units$Quantity$float(-1) : $ianmackenzie$elm_units$Quantity$float(A2($elm$core$Basics$min, $ianmackenzie$elm_units$Angle$sin(a), $ianmackenzie$elm_units$Angle$sin(b)));
            return A2($ianmackenzie$elm_units_interval$Quantity$Interval$from, newMin, newMax);
        }
    };
    var $ianmackenzie$elm_geometry$EllipticalArc2d$maxSecondDerivativeMagnitude = function(arc) {
        var theta0 = $ianmackenzie$elm_geometry$EllipticalArc2d$startAngle(arc);
        var ry = $ianmackenzie$elm_geometry$EllipticalArc2d$yRadius(arc);
        var rx = $ianmackenzie$elm_geometry$EllipticalArc2d$xRadius(arc);
        var dTheta = $ianmackenzie$elm_geometry$EllipticalArc2d$sweptAngle(arc);
        var theta1 = A2($ianmackenzie$elm_units$Quantity$plus, dTheta, theta0);
        var thetaInterval = A2($ianmackenzie$elm_units_interval$Quantity$Interval$from, theta0, theta1);
        var sinThetaInterval = $ianmackenzie$elm_units_interval$Angle$Interval$sin(thetaInterval);
        var includeKx = A2($ianmackenzie$elm_units_interval$Quantity$Interval$contains, $ianmackenzie$elm_units$Quantity$zero, sinThetaInterval);
        var includeKy = _Utils_eq($ianmackenzie$elm_units_interval$Quantity$Interval$maxValue(sinThetaInterval), $ianmackenzie$elm_units$Quantity$float(1)) || _Utils_eq($ianmackenzie$elm_units_interval$Quantity$Interval$minValue(sinThetaInterval), $ianmackenzie$elm_units$Quantity$float(-1));
        var _v0 = $ianmackenzie$elm_units$Quantity$squared(dTheta);
        var dThetaSquared = _v0.a;
        var kx = A2($ianmackenzie$elm_units$Quantity$multiplyBy, dThetaSquared, rx);
        var ky = A2($ianmackenzie$elm_units$Quantity$multiplyBy, dThetaSquared, ry);
        if (A2($ianmackenzie$elm_units$Quantity$greaterThanOrEqualTo, ky, kx) && includeKx) return kx;
        else {
            if (A2($ianmackenzie$elm_units$Quantity$greaterThanOrEqualTo, kx, ky) && includeKy) return ky;
            else {
                var sinTheta1 = $ianmackenzie$elm_units$Angle$sin(theta1);
                var sinTheta0 = $ianmackenzie$elm_units$Angle$sin(theta0);
                var rySquared = $ianmackenzie$elm_units$Quantity$squared(ry);
                var rxSquared = $ianmackenzie$elm_units$Quantity$squared(rx);
                var cosTheta1 = $ianmackenzie$elm_units$Angle$cos(theta1);
                var d1 = A2($ianmackenzie$elm_units$Quantity$plus, A2($ianmackenzie$elm_units$Quantity$multiplyBy, sinTheta1 * sinTheta1, rySquared), A2($ianmackenzie$elm_units$Quantity$multiplyBy, cosTheta1 * cosTheta1, rxSquared));
                var cosTheta0 = $ianmackenzie$elm_units$Angle$cos(theta0);
                var d0 = A2($ianmackenzie$elm_units$Quantity$plus, A2($ianmackenzie$elm_units$Quantity$multiplyBy, sinTheta0 * sinTheta0, rySquared), A2($ianmackenzie$elm_units$Quantity$multiplyBy, cosTheta0 * cosTheta0, rxSquared));
                return A2($ianmackenzie$elm_units$Quantity$multiplyBy, dThetaSquared, $ianmackenzie$elm_units$Quantity$sqrt(A2($ianmackenzie$elm_units$Quantity$max, d0, d1)));
            }
        }
    };
    var $ianmackenzie$elm_geometry$EllipticalArc2d$arcLengthParameterized = F2(function(_v0, nondegenerateArc) {
        var maxError = _v0.maxError;
        var arc = $ianmackenzie$elm_geometry$EllipticalArc2d$fromNondegenerate(nondegenerateArc);
        var parameterization = $ianmackenzie$elm_geometry$ArcLengthParameterization$build({
            derivativeMagnitude: $ianmackenzie$elm_geometry$EllipticalArc2d$derivativeMagnitude(arc),
            maxError: maxError,
            maxSecondDerivativeMagnitude: $ianmackenzie$elm_geometry$EllipticalArc2d$maxSecondDerivativeMagnitude(arc)
        });
        return $ianmackenzie$elm_geometry$EllipticalArc2d$ArcLengthParameterized({
            nondegenerateArc: nondegenerateArc,
            parameterization: parameterization,
            underlyingArc: arc
        });
    });
    var $ianmackenzie$elm_geometry$QuadraticSpline2d$ArcLengthParameterized = function(a) {
        return {
            $: 'ArcLengthParameterized',
            a: a
        };
    };
    var $ianmackenzie$elm_geometry$QuadraticSpline2d$derivativeMagnitude = function(_v0) {
        var spline = _v0.a;
        var _v1 = spline.thirdControlPoint;
        var p3 = _v1.a;
        var x3 = p3.x;
        var y3 = p3.y;
        var _v2 = spline.secondControlPoint;
        var p2 = _v2.a;
        var x2 = p2.x;
        var x23 = x3 - x2;
        var y2 = p2.y;
        var y23 = y3 - y2;
        var _v3 = spline.firstControlPoint;
        var p1 = _v3.a;
        var x1 = p1.x;
        var x12 = x2 - x1;
        var x123 = x23 - x12;
        var y1 = p1.y;
        var y12 = y2 - y1;
        var y123 = y23 - y12;
        return function(parameterValue) {
            var y13 = y12 + parameterValue * y123;
            var x13 = x12 + parameterValue * x123;
            return $ianmackenzie$elm_units$Quantity$Quantity(2 * $elm$core$Basics$sqrt(x13 * x13 + y13 * y13));
        };
    };
    var $ianmackenzie$elm_geometry$QuadraticSpline2d$fromNondegenerate = function(nondegenerateSpline) {
        if (nondegenerateSpline.$ === 'NonZeroSecondDerivative') {
            var spline = nondegenerateSpline.a;
            return spline;
        } else {
            var spline = nondegenerateSpline.a;
            return spline;
        }
    };
    var $ianmackenzie$elm_geometry$QuadraticSpline2d$firstControlPoint = function(_v0) {
        var spline = _v0.a;
        return spline.firstControlPoint;
    };
    var $ianmackenzie$elm_geometry$QuadraticSpline2d$secondControlPoint = function(_v0) {
        var spline = _v0.a;
        return spline.secondControlPoint;
    };
    var $ianmackenzie$elm_geometry$QuadraticSpline2d$thirdControlPoint = function(_v0) {
        var spline = _v0.a;
        return spline.thirdControlPoint;
    };
    var $ianmackenzie$elm_geometry$Vector2d$scaleBy = F2(function(k, _v0) {
        var v = _v0.a;
        return $ianmackenzie$elm_geometry$Geometry$Types$Vector2d({
            x: k * v.x,
            y: k * v.y
        });
    });
    var $ianmackenzie$elm_geometry$Vector2d$twice = function(vector) {
        return A2($ianmackenzie$elm_geometry$Vector2d$scaleBy, 2, vector);
    };
    var $ianmackenzie$elm_geometry$QuadraticSpline2d$secondDerivative = function(spline) {
        var p3 = $ianmackenzie$elm_geometry$QuadraticSpline2d$thirdControlPoint(spline);
        var p2 = $ianmackenzie$elm_geometry$QuadraticSpline2d$secondControlPoint(spline);
        var v2 = A2($ianmackenzie$elm_geometry$Vector2d$from, p2, p3);
        var p1 = $ianmackenzie$elm_geometry$QuadraticSpline2d$firstControlPoint(spline);
        var v1 = A2($ianmackenzie$elm_geometry$Vector2d$from, p1, p2);
        return $ianmackenzie$elm_geometry$Vector2d$twice(A2($ianmackenzie$elm_geometry$Vector2d$minus, v1, v2));
    };
    var $ianmackenzie$elm_geometry$QuadraticSpline2d$arcLengthParameterized = F2(function(_v0, nondegenerateSpline) {
        var maxError = _v0.maxError;
        var spline = $ianmackenzie$elm_geometry$QuadraticSpline2d$fromNondegenerate(nondegenerateSpline);
        var parameterization = $ianmackenzie$elm_geometry$ArcLengthParameterization$build({
            derivativeMagnitude: $ianmackenzie$elm_geometry$QuadraticSpline2d$derivativeMagnitude(spline),
            maxError: maxError,
            maxSecondDerivativeMagnitude: $ianmackenzie$elm_geometry$Vector2d$length($ianmackenzie$elm_geometry$QuadraticSpline2d$secondDerivative(spline))
        });
        return $ianmackenzie$elm_geometry$QuadraticSpline2d$ArcLengthParameterized({
            nondegenerateSpline: nondegenerateSpline,
            parameterization: parameterization,
            underlyingSpline: spline
        });
    });
    var $ianmackenzie$elm_geometry$CubicSpline2d$NonZeroFirstDerivative = F2(function(a, b) {
        return {
            $: 'NonZeroFirstDerivative',
            a: a,
            b: b
        };
    });
    var $ianmackenzie$elm_geometry$CubicSpline2d$NonZeroSecondDerivative = F2(function(a, b) {
        return {
            $: 'NonZeroSecondDerivative',
            a: a,
            b: b
        };
    });
    var $ianmackenzie$elm_geometry$CubicSpline2d$NonZeroThirdDerivative = F2(function(a, b) {
        return {
            $: 'NonZeroThirdDerivative',
            a: a,
            b: b
        };
    });
    var $ianmackenzie$elm_geometry$Geometry$Types$Direction2d = function(a) {
        return {
            $: 'Direction2d',
            a: a
        };
    };
    var $ianmackenzie$elm_geometry$Vector2d$direction = function(_v0) {
        var v = _v0.a;
        var largestComponent = A2($elm$core$Basics$max, $elm$core$Basics$abs(v.x), $elm$core$Basics$abs(v.y));
        if (!largestComponent) return $elm$core$Maybe$Nothing;
        else {
            var scaledY = v.y / largestComponent;
            var scaledX = v.x / largestComponent;
            var scaledLength = $elm$core$Basics$sqrt(scaledX * scaledX + scaledY * scaledY);
            return $elm$core$Maybe$Just($ianmackenzie$elm_geometry$Geometry$Types$Direction2d({
                x: scaledX / scaledLength,
                y: scaledY / scaledLength
            }));
        }
    };
    var $ianmackenzie$elm_units$Quantity$interpolateFrom = F3(function(_v0, _v1, parameter) {
        var start = _v0.a;
        var end = _v1.a;
        return parameter <= 0.5 ? $ianmackenzie$elm_units$Quantity$Quantity(start + parameter * (end - start)) : $ianmackenzie$elm_units$Quantity$Quantity(end + (1 - parameter) * (start - end));
    });
    var $ianmackenzie$elm_units$Quantity$minus = F2(function(_v0, _v1) {
        var y = _v0.a;
        var x = _v1.a;
        return $ianmackenzie$elm_units$Quantity$Quantity(x - y);
    });
    var $ianmackenzie$elm_geometry$Point2d$xCoordinate = function(_v0) {
        var p = _v0.a;
        return $ianmackenzie$elm_units$Quantity$Quantity(p.x);
    };
    var $ianmackenzie$elm_geometry$Vector2d$xy = F2(function(_v0, _v1) {
        var x = _v0.a;
        var y = _v1.a;
        return $ianmackenzie$elm_geometry$Geometry$Types$Vector2d({
            x: x,
            y: y
        });
    });
    var $ianmackenzie$elm_geometry$Point2d$yCoordinate = function(_v0) {
        var p = _v0.a;
        return $ianmackenzie$elm_units$Quantity$Quantity(p.y);
    };
    var $ianmackenzie$elm_geometry$CubicSpline2d$firstDerivative = F2(function(spline, parameterValue) {
        var p4 = $ianmackenzie$elm_geometry$CubicSpline2d$fourthControlPoint(spline);
        var x4 = $ianmackenzie$elm_geometry$Point2d$xCoordinate(p4);
        var y4 = $ianmackenzie$elm_geometry$Point2d$yCoordinate(p4);
        var p3 = $ianmackenzie$elm_geometry$CubicSpline2d$thirdControlPoint(spline);
        var x3 = $ianmackenzie$elm_geometry$Point2d$xCoordinate(p3);
        var vx3 = A2($ianmackenzie$elm_units$Quantity$minus, x3, x4);
        var y3 = $ianmackenzie$elm_geometry$Point2d$yCoordinate(p3);
        var vy3 = A2($ianmackenzie$elm_units$Quantity$minus, y3, y4);
        var p2 = $ianmackenzie$elm_geometry$CubicSpline2d$secondControlPoint(spline);
        var x2 = $ianmackenzie$elm_geometry$Point2d$xCoordinate(p2);
        var vx2 = A2($ianmackenzie$elm_units$Quantity$minus, x2, x3);
        var wx2 = A3($ianmackenzie$elm_units$Quantity$interpolateFrom, vx2, vx3, parameterValue);
        var y2 = $ianmackenzie$elm_geometry$Point2d$yCoordinate(p2);
        var vy2 = A2($ianmackenzie$elm_units$Quantity$minus, y2, y3);
        var wy2 = A3($ianmackenzie$elm_units$Quantity$interpolateFrom, vy2, vy3, parameterValue);
        var p1 = $ianmackenzie$elm_geometry$CubicSpline2d$firstControlPoint(spline);
        var x1 = $ianmackenzie$elm_geometry$Point2d$xCoordinate(p1);
        var vx1 = A2($ianmackenzie$elm_units$Quantity$minus, x1, x2);
        var wx1 = A3($ianmackenzie$elm_units$Quantity$interpolateFrom, vx1, vx2, parameterValue);
        var y1 = $ianmackenzie$elm_geometry$Point2d$yCoordinate(p1);
        var vy1 = A2($ianmackenzie$elm_units$Quantity$minus, y1, y2);
        var wy1 = A3($ianmackenzie$elm_units$Quantity$interpolateFrom, vy1, vy2, parameterValue);
        return A2($ianmackenzie$elm_geometry$Vector2d$xy, A2($ianmackenzie$elm_units$Quantity$multiplyBy, 3, A3($ianmackenzie$elm_units$Quantity$interpolateFrom, wx1, wx2, parameterValue)), A2($ianmackenzie$elm_units$Quantity$multiplyBy, 3, A3($ianmackenzie$elm_units$Quantity$interpolateFrom, wy1, wy2, parameterValue)));
    });
    var $ianmackenzie$elm_geometry$Vector2d$interpolateFrom = F3(function(_v0, _v1, t) {
        var v1 = _v0.a;
        var v2 = _v1.a;
        return t <= 0.5 ? $ianmackenzie$elm_geometry$Geometry$Types$Vector2d({
            x: v1.x + t * (v2.x - v1.x),
            y: v1.y + t * (v2.y - v1.y)
        }) : $ianmackenzie$elm_geometry$Geometry$Types$Vector2d({
            x: v2.x + (1 - t) * (v1.x - v2.x),
            y: v2.y + (1 - t) * (v1.y - v2.y)
        });
    });
    var $ianmackenzie$elm_geometry$CubicSpline2d$secondDerivative = F2(function(spline, parameterValue) {
        var p4 = $ianmackenzie$elm_geometry$CubicSpline2d$fourthControlPoint(spline);
        var p3 = $ianmackenzie$elm_geometry$CubicSpline2d$thirdControlPoint(spline);
        var u3 = A2($ianmackenzie$elm_geometry$Vector2d$from, p3, p4);
        var p2 = $ianmackenzie$elm_geometry$CubicSpline2d$secondControlPoint(spline);
        var u2 = A2($ianmackenzie$elm_geometry$Vector2d$from, p2, p3);
        var v2 = A2($ianmackenzie$elm_geometry$Vector2d$minus, u2, u3);
        var p1 = $ianmackenzie$elm_geometry$CubicSpline2d$firstControlPoint(spline);
        var u1 = A2($ianmackenzie$elm_geometry$Vector2d$from, p1, p2);
        var v1 = A2($ianmackenzie$elm_geometry$Vector2d$minus, u1, u2);
        return A2($ianmackenzie$elm_geometry$Vector2d$scaleBy, 6, A3($ianmackenzie$elm_geometry$Vector2d$interpolateFrom, v1, v2, parameterValue));
    });
    var $ianmackenzie$elm_geometry$CubicSpline2d$startPoint = function(_v0) {
        var spline = _v0.a;
        return spline.firstControlPoint;
    };
    var $ianmackenzie$elm_geometry$CubicSpline2d$thirdDerivative = function(spline) {
        var p4 = $ianmackenzie$elm_geometry$CubicSpline2d$fourthControlPoint(spline);
        var p3 = $ianmackenzie$elm_geometry$CubicSpline2d$thirdControlPoint(spline);
        var u3 = A2($ianmackenzie$elm_geometry$Vector2d$from, p3, p4);
        var p2 = $ianmackenzie$elm_geometry$CubicSpline2d$secondControlPoint(spline);
        var u2 = A2($ianmackenzie$elm_geometry$Vector2d$from, p2, p3);
        var v2 = A2($ianmackenzie$elm_geometry$Vector2d$minus, u2, u3);
        var p1 = $ianmackenzie$elm_geometry$CubicSpline2d$firstControlPoint(spline);
        var u1 = A2($ianmackenzie$elm_geometry$Vector2d$from, p1, p2);
        var v1 = A2($ianmackenzie$elm_geometry$Vector2d$minus, u1, u2);
        return A2($ianmackenzie$elm_geometry$Vector2d$scaleBy, 6, A2($ianmackenzie$elm_geometry$Vector2d$minus, v1, v2));
    };
    var $ianmackenzie$elm_geometry$CubicSpline2d$nondegenerate = function(spline) {
        var _v0 = $ianmackenzie$elm_geometry$Vector2d$direction($ianmackenzie$elm_geometry$CubicSpline2d$thirdDerivative(spline));
        if (_v0.$ === 'Just') {
            var direction = _v0.a;
            return $elm$core$Result$Ok(A2($ianmackenzie$elm_geometry$CubicSpline2d$NonZeroThirdDerivative, spline, direction));
        } else {
            var secondDerivativeVector = A2($ianmackenzie$elm_geometry$CubicSpline2d$secondDerivative, spline, 0);
            var _v1 = $ianmackenzie$elm_geometry$Vector2d$direction(secondDerivativeVector);
            if (_v1.$ === 'Just') {
                var direction = _v1.a;
                return $elm$core$Result$Ok(A2($ianmackenzie$elm_geometry$CubicSpline2d$NonZeroSecondDerivative, spline, direction));
            } else {
                var firstDerivativeVector = A2($ianmackenzie$elm_geometry$CubicSpline2d$firstDerivative, spline, 0);
                var _v2 = $ianmackenzie$elm_geometry$Vector2d$direction(firstDerivativeVector);
                if (_v2.$ === 'Just') {
                    var direction = _v2.a;
                    return $elm$core$Result$Ok(A2($ianmackenzie$elm_geometry$CubicSpline2d$NonZeroFirstDerivative, spline, direction));
                } else return $elm$core$Result$Err($ianmackenzie$elm_geometry$CubicSpline2d$startPoint(spline));
            }
        }
    };
    var $ianmackenzie$elm_geometry$EllipticalArc2d$Curved = function(a) {
        return {
            $: 'Curved',
            a: a
        };
    };
    var $ianmackenzie$elm_geometry$EllipticalArc2d$Horizontal = function(a) {
        return {
            $: 'Horizontal',
            a: a
        };
    };
    var $ianmackenzie$elm_geometry$EllipticalArc2d$Vertical = function(a) {
        return {
            $: 'Vertical',
            a: a
        };
    };
    var $ianmackenzie$elm_geometry$Geometry$Types$Frame2d = function(a) {
        return {
            $: 'Frame2d',
            a: a
        };
    };
    var $ianmackenzie$elm_geometry$Frame2d$copy = function(_v0) {
        var properties = _v0.a;
        return $ianmackenzie$elm_geometry$Geometry$Types$Frame2d(properties);
    };
    var $ianmackenzie$elm_geometry$Ellipse2d$axes = function(_v0) {
        var ellipse = _v0.a;
        return $ianmackenzie$elm_geometry$Frame2d$copy(ellipse.axes);
    };
    var $ianmackenzie$elm_geometry$EllipticalArc2d$axes = function(_v0) {
        var arc = _v0.a;
        return $ianmackenzie$elm_geometry$Ellipse2d$axes(arc.ellipse);
    };
    var $ianmackenzie$elm_geometry$Geometry$Types$Point2d = function(a) {
        return {
            $: 'Point2d',
            a: a
        };
    };
    var $ianmackenzie$elm_geometry$Point2d$xyIn = F3(function(_v0, _v1, _v2) {
        var frame = _v0.a;
        var x = _v1.a;
        var y = _v2.a;
        var _v3 = frame.originPoint;
        var p0 = _v3.a;
        var _v4 = frame.yDirection;
        var j = _v4.a;
        var _v5 = frame.xDirection;
        var i = _v5.a;
        return $ianmackenzie$elm_geometry$Geometry$Types$Point2d({
            x: p0.x + x * i.x + y * j.x,
            y: p0.y + x * i.y + y * j.y
        });
    });
    var $ianmackenzie$elm_geometry$EllipticalArc2d$pointOn = F2(function(arc, parameterValue) {
        var theta = A2($ianmackenzie$elm_units$Quantity$plus, A2($ianmackenzie$elm_units$Quantity$multiplyBy, parameterValue, $ianmackenzie$elm_geometry$EllipticalArc2d$sweptAngle(arc)), $ianmackenzie$elm_geometry$EllipticalArc2d$startAngle(arc));
        var localY = A2($ianmackenzie$elm_geometry$Quantity$Extra$rSinTheta, $ianmackenzie$elm_geometry$EllipticalArc2d$yRadius(arc), theta);
        var localX = A2($ianmackenzie$elm_geometry$Quantity$Extra$rCosTheta, $ianmackenzie$elm_geometry$EllipticalArc2d$xRadius(arc), theta);
        return A3($ianmackenzie$elm_geometry$Point2d$xyIn, $ianmackenzie$elm_geometry$EllipticalArc2d$axes(arc), localX, localY);
    });
    var $ianmackenzie$elm_geometry$EllipticalArc2d$startPoint = function(arc) {
        return A2($ianmackenzie$elm_geometry$EllipticalArc2d$pointOn, arc, 0);
    };
    var $ianmackenzie$elm_geometry$EllipticalArc2d$nondegenerate = function(arc) {
        var ry = $ianmackenzie$elm_geometry$EllipticalArc2d$yRadius(arc);
        var rx = $ianmackenzie$elm_geometry$EllipticalArc2d$xRadius(arc);
        return _Utils_eq($ianmackenzie$elm_geometry$EllipticalArc2d$sweptAngle(arc), $ianmackenzie$elm_units$Quantity$zero) ? $elm$core$Result$Err($ianmackenzie$elm_geometry$EllipticalArc2d$startPoint(arc)) : _Utils_eq(rx, $ianmackenzie$elm_units$Quantity$zero) && _Utils_eq(ry, $ianmackenzie$elm_units$Quantity$zero) ? $elm$core$Result$Err($ianmackenzie$elm_geometry$EllipticalArc2d$startPoint(arc)) : _Utils_eq(rx, $ianmackenzie$elm_units$Quantity$zero) ? $elm$core$Result$Ok($ianmackenzie$elm_geometry$EllipticalArc2d$Vertical(arc)) : _Utils_eq(ry, $ianmackenzie$elm_units$Quantity$zero) ? $elm$core$Result$Ok($ianmackenzie$elm_geometry$EllipticalArc2d$Horizontal(arc)) : $elm$core$Result$Ok($ianmackenzie$elm_geometry$EllipticalArc2d$Curved(arc));
    };
    var $ianmackenzie$elm_geometry$QuadraticSpline2d$NonZeroFirstDerivative = F2(function(a, b) {
        return {
            $: 'NonZeroFirstDerivative',
            a: a,
            b: b
        };
    });
    var $ianmackenzie$elm_geometry$QuadraticSpline2d$NonZeroSecondDerivative = F2(function(a, b) {
        return {
            $: 'NonZeroSecondDerivative',
            a: a,
            b: b
        };
    });
    var $ianmackenzie$elm_geometry$QuadraticSpline2d$firstDerivative = F2(function(spline, parameterValue) {
        var p3 = $ianmackenzie$elm_geometry$QuadraticSpline2d$thirdControlPoint(spline);
        var p2 = $ianmackenzie$elm_geometry$QuadraticSpline2d$secondControlPoint(spline);
        var v2 = A2($ianmackenzie$elm_geometry$Vector2d$from, p2, p3);
        var p1 = $ianmackenzie$elm_geometry$QuadraticSpline2d$firstControlPoint(spline);
        var v1 = A2($ianmackenzie$elm_geometry$Vector2d$from, p1, p2);
        return $ianmackenzie$elm_geometry$Vector2d$twice(A3($ianmackenzie$elm_geometry$Vector2d$interpolateFrom, v1, v2, parameterValue));
    });
    var $ianmackenzie$elm_geometry$QuadraticSpline2d$startPoint = function(_v0) {
        var spline = _v0.a;
        return spline.firstControlPoint;
    };
    var $ianmackenzie$elm_geometry$QuadraticSpline2d$nondegenerate = function(spline) {
        var _v0 = $ianmackenzie$elm_geometry$Vector2d$direction($ianmackenzie$elm_geometry$QuadraticSpline2d$secondDerivative(spline));
        if (_v0.$ === 'Just') {
            var direction = _v0.a;
            return $elm$core$Result$Ok(A2($ianmackenzie$elm_geometry$QuadraticSpline2d$NonZeroSecondDerivative, spline, direction));
        } else {
            var firstDerivativeVector = A2($ianmackenzie$elm_geometry$QuadraticSpline2d$firstDerivative, spline, 0);
            var _v1 = $ianmackenzie$elm_geometry$Vector2d$direction(firstDerivativeVector);
            if (_v1.$ === 'Just') {
                var direction = _v1.a;
                return $elm$core$Result$Ok(A2($ianmackenzie$elm_geometry$QuadraticSpline2d$NonZeroFirstDerivative, spline, direction));
            } else return $elm$core$Result$Err($ianmackenzie$elm_geometry$QuadraticSpline2d$startPoint(spline));
        }
    };
    var $elm$core$Result$toMaybe = function(result) {
        if (result.$ === 'Ok') {
            var v = result.a;
            return $elm$core$Maybe$Just(v);
        } else return $elm$core$Maybe$Nothing;
    };
    var $folkertdev$one_true_path_experiment$Segment$arcLengthParameterized = F2(function(tolerance, segment) {
        var config = {
            maxError: $ianmackenzie$elm_units$Quantity$float(tolerance)
        };
        switch(segment.$){
            case 'LineSegment':
                var lineSegment = segment.a;
                return $elm$core$Maybe$Just($folkertdev$one_true_path_experiment$Segment$ParameterizedLineSegment(lineSegment));
            case 'Quadratic':
                var spline = segment.a;
                return A2($elm$core$Maybe$map, A2($elm$core$Basics$composeR, $ianmackenzie$elm_geometry$QuadraticSpline2d$arcLengthParameterized(config), $folkertdev$one_true_path_experiment$Segment$ParameterizedQuadratic), $elm$core$Result$toMaybe($ianmackenzie$elm_geometry$QuadraticSpline2d$nondegenerate(spline)));
            case 'Cubic':
                var spline = segment.a;
                return A2($elm$core$Maybe$map, A2($elm$core$Basics$composeR, $ianmackenzie$elm_geometry$CubicSpline2d$arcLengthParameterized(config), $folkertdev$one_true_path_experiment$Segment$ParameterizedCubic), $elm$core$Result$toMaybe($ianmackenzie$elm_geometry$CubicSpline2d$nondegenerate(spline)));
            default:
                var arc = segment.a;
                return A2($elm$core$Maybe$map, A2($elm$core$Basics$composeR, $ianmackenzie$elm_geometry$EllipticalArc2d$arcLengthParameterized(config), $folkertdev$one_true_path_experiment$Segment$ParameterizedArc), $elm$core$Result$toMaybe($ianmackenzie$elm_geometry$EllipticalArc2d$nondegenerate(arc)));
        }
    });
    var $elm_community$list_extra$List$Extra$splitAt = F2(function(n, xs) {
        return _Utils_Tuple2(A2($elm$core$List$take, n, xs), A2($elm$core$List$drop, n, xs));
    });
    var $folkertdev$one_true_path_experiment$SubPath$arcLengthParameterizedHelper = F2(function(tolerance, segments) {
        if (!segments.b) return $folkertdev$one_true_path_experiment$SubPath$None;
        else if (!segments.b.b) {
            var segment = segments.a;
            var _v1 = A2($folkertdev$one_true_path_experiment$Segment$arcLengthParameterized, tolerance, segment);
            if (_v1.$ === 'Nothing') return $folkertdev$one_true_path_experiment$SubPath$None;
            else {
                var parameterized = _v1.a;
                return $folkertdev$one_true_path_experiment$SubPath$Leaf({
                    segment: parameterized,
                    tolerance: tolerance
                });
            }
        } else {
            var _v2 = A2($elm_community$list_extra$List$Extra$splitAt, $elm$core$Basics$ceiling($elm$core$List$length(segments) / 2), segments);
            var leftSegments = _v2.a;
            var rightSegments = _v2.b;
            var leftParameterized = A2($folkertdev$one_true_path_experiment$SubPath$arcLengthParameterizedHelper, tolerance, leftSegments);
            var rightParameterized = A2($folkertdev$one_true_path_experiment$SubPath$arcLengthParameterizedHelper, tolerance, rightSegments);
            if (rightParameterized.$ === 'None') return leftParameterized;
            else return $folkertdev$one_true_path_experiment$SubPath$Node({
                left: leftParameterized,
                lengthAtSplit: $folkertdev$one_true_path_experiment$SubPath$arcLength(leftParameterized),
                right: rightParameterized,
                tolerance: tolerance,
                totalLength: $folkertdev$one_true_path_experiment$SubPath$arcLength(leftParameterized) + $folkertdev$one_true_path_experiment$SubPath$arcLength(rightParameterized)
            });
        }
    });
    var $elm_community$list_extra$List$Extra$last = function(items) {
        last: while(true){
            if (!items.b) return $elm$core$Maybe$Nothing;
            else if (!items.b.b) {
                var x = items.a;
                return $elm$core$Maybe$Just(x);
            } else {
                var rest = items.b;
                var $temp$items = rest;
                items = $temp$items;
                continue last;
            }
        }
    };
    var $ianmackenzie$elm_geometry$CubicSpline2d$endPoint = function(_v0) {
        var spline = _v0.a;
        return spline.fourthControlPoint;
    };
    var $ianmackenzie$elm_geometry$QuadraticSpline2d$endPoint = function(_v0) {
        var spline = _v0.a;
        return spline.thirdControlPoint;
    };
    var $ianmackenzie$elm_geometry$EllipticalArc2d$endPoint = function(arc) {
        return A2($ianmackenzie$elm_geometry$EllipticalArc2d$pointOn, arc, 1);
    };
    var $ianmackenzie$elm_geometry$LineSegment2d$endPoint = function(_v0) {
        var _v1 = _v0.a;
        var end = _v1.b;
        return end;
    };
    var $ianmackenzie$elm_geometry$Point2d$toTuple = F2(function(fromQuantity, point) {
        return _Utils_Tuple2(fromQuantity($ianmackenzie$elm_geometry$Point2d$xCoordinate(point)), fromQuantity($ianmackenzie$elm_geometry$Point2d$yCoordinate(point)));
    });
    var $folkertdev$one_true_path_experiment$Segment$finalPoint = function(segment) {
        return A2($ianmackenzie$elm_geometry$Point2d$toTuple, $ianmackenzie$elm_units$Quantity$toFloat, function() {
            switch(segment.$){
                case 'LineSegment':
                    var lineSegment = segment.a;
                    return $ianmackenzie$elm_geometry$LineSegment2d$endPoint(lineSegment);
                case 'Quadratic':
                    var spline = segment.a;
                    return $ianmackenzie$elm_geometry$QuadraticSpline2d$endPoint(spline);
                case 'Cubic':
                    var spline = segment.a;
                    return $ianmackenzie$elm_geometry$CubicSpline2d$endPoint(spline);
                default:
                    var arc = segment.a;
                    return $ianmackenzie$elm_geometry$EllipticalArc2d$endPoint(arc);
            }
        }());
    };
    var $ianmackenzie$elm_geometry$LineSegment2d$startPoint = function(_v0) {
        var _v1 = _v0.a;
        var start = _v1.a;
        return start;
    };
    var $folkertdev$one_true_path_experiment$Segment$firstPoint = function(segment) {
        return A2($ianmackenzie$elm_geometry$Point2d$toTuple, $ianmackenzie$elm_units$Quantity$toFloat, function() {
            switch(segment.$){
                case 'LineSegment':
                    var lineSegment = segment.a;
                    return $ianmackenzie$elm_geometry$LineSegment2d$startPoint(lineSegment);
                case 'Quadratic':
                    var spline = segment.a;
                    return $ianmackenzie$elm_geometry$QuadraticSpline2d$startPoint(spline);
                case 'Cubic':
                    var spline = segment.a;
                    return $ianmackenzie$elm_geometry$CubicSpline2d$startPoint(spline);
                default:
                    var arc = segment.a;
                    return $ianmackenzie$elm_geometry$EllipticalArc2d$startPoint(arc);
            }
        }());
    };
    var $folkertdev$one_true_path_experiment$Segment$toCursorState = function(segment) {
        switch(segment.$){
            case 'Cubic':
                var curve = segment.a;
                var start = A2($ianmackenzie$elm_geometry$Point2d$toTuple, $ianmackenzie$elm_units$Quantity$toFloat, $ianmackenzie$elm_geometry$CubicSpline2d$startPoint(curve));
                var end = A2($ianmackenzie$elm_geometry$Point2d$toTuple, $ianmackenzie$elm_units$Quantity$toFloat, $ianmackenzie$elm_geometry$CubicSpline2d$endPoint(curve));
                var control = A2($ianmackenzie$elm_geometry$Point2d$toTuple, $ianmackenzie$elm_units$Quantity$toFloat, $ianmackenzie$elm_geometry$CubicSpline2d$thirdControlPoint(curve));
                return {
                    cursor: end,
                    previousControlPoint: $elm$core$Maybe$Just(control),
                    start: start
                };
            case 'Quadratic':
                var curve = segment.a;
                var start = A2($ianmackenzie$elm_geometry$Point2d$toTuple, $ianmackenzie$elm_units$Quantity$toFloat, $ianmackenzie$elm_geometry$QuadraticSpline2d$startPoint(curve));
                var end = A2($ianmackenzie$elm_geometry$Point2d$toTuple, $ianmackenzie$elm_units$Quantity$toFloat, $ianmackenzie$elm_geometry$QuadraticSpline2d$endPoint(curve));
                var control = A2($ianmackenzie$elm_geometry$Point2d$toTuple, $ianmackenzie$elm_units$Quantity$toFloat, $ianmackenzie$elm_geometry$QuadraticSpline2d$secondControlPoint(curve));
                return {
                    cursor: end,
                    previousControlPoint: $elm$core$Maybe$Just(control),
                    start: start
                };
            default:
                return {
                    cursor: $folkertdev$one_true_path_experiment$Segment$finalPoint(segment),
                    previousControlPoint: $elm$core$Maybe$Nothing,
                    start: $folkertdev$one_true_path_experiment$Segment$firstPoint(segment)
                };
        }
    };
    var $folkertdev$elm_deque$Internal$toList = function(deque) {
        return _Utils_ap(deque.front, $elm$core$List$reverse(deque.rear));
    };
    var $folkertdev$elm_deque$Deque$unwrap = function(_v0) {
        var boundedDeque = _v0.a;
        return boundedDeque;
    };
    var $folkertdev$elm_deque$Deque$toList = A2($elm$core$Basics$composeL, $folkertdev$elm_deque$Internal$toList, $folkertdev$elm_deque$Deque$unwrap);
    var $folkertdev$one_true_path_experiment$Segment$Cubic = function(a) {
        return {
            $: 'Cubic',
            a: a
        };
    };
    var $folkertdev$one_true_path_experiment$Segment$LineSegment = function(a) {
        return {
            $: 'LineSegment',
            a: a
        };
    };
    var $folkertdev$one_true_path_experiment$Segment$Quadratic = function(a) {
        return {
            $: 'Quadratic',
            a: a
        };
    };
    var $folkertdev$one_true_path_experiment$Segment$Arc = function(a) {
        return {
            $: 'Arc',
            a: a
        };
    };
    var $folkertdev$one_true_path_experiment$Geometry$Ellipse$conversionMatrix = function(xAxisRotate) {
        return _Utils_Tuple2(_Utils_Tuple2($elm$core$Basics$cos(xAxisRotate), -1 * $elm$core$Basics$sin(xAxisRotate)), _Utils_Tuple2($elm$core$Basics$sin(xAxisRotate), $elm$core$Basics$cos(xAxisRotate)));
    };
    var $ianmackenzie$elm_geometry$Vector2d$fromTuple = F2(function(toQuantity, _v0) {
        var x = _v0.a;
        var y = _v0.b;
        return A2($ianmackenzie$elm_geometry$Vector2d$xy, toQuantity(x), toQuantity(y));
    });
    var $folkertdev$one_true_path_experiment$Geometry$Ellipse$inverseConversionMatrix = function(xAxisRotate) {
        return _Utils_Tuple2(_Utils_Tuple2($elm$core$Basics$cos(xAxisRotate), $elm$core$Basics$sin(xAxisRotate)), _Utils_Tuple2(-1 * $elm$core$Basics$sin(xAxisRotate), $elm$core$Basics$cos(xAxisRotate)));
    };
    var $ianmackenzie$elm_geometry$Vector2d$dot = F2(function(_v0, _v1) {
        var v2 = _v0.a;
        var v1 = _v1.a;
        return $ianmackenzie$elm_units$Quantity$Quantity(v1.x * v2.x + v1.y * v2.y);
    });
    var $folkertdev$one_true_path_experiment$Geometry$Ellipse$matrixMulVector = F2(function(_v0, vec) {
        var ab = _v0.a;
        var cd = _v0.b;
        var vector = A2($ianmackenzie$elm_geometry$Vector2d$fromTuple, $ianmackenzie$elm_units$Quantity$float, vec);
        var row2 = A2($ianmackenzie$elm_geometry$Vector2d$fromTuple, $ianmackenzie$elm_units$Quantity$float, cd);
        var row1 = A2($ianmackenzie$elm_geometry$Vector2d$fromTuple, $ianmackenzie$elm_units$Quantity$float, ab);
        var _v1 = A2($ianmackenzie$elm_geometry$Vector2d$dot, row2, vector);
        var dot2 = _v1.a;
        var _v2 = A2($ianmackenzie$elm_geometry$Vector2d$dot, row1, vector);
        var dot1 = _v2.a;
        return A2($ianmackenzie$elm_geometry$Vector2d$fromTuple, $ianmackenzie$elm_units$Quantity$float, _Utils_Tuple2(dot1, dot2));
    });
    var $ianmackenzie$elm_geometry$Vector2d$xComponent = function(_v0) {
        var v = _v0.a;
        return $ianmackenzie$elm_units$Quantity$Quantity(v.x);
    };
    var $ianmackenzie$elm_geometry$Vector2d$yComponent = function(_v0) {
        var v = _v0.a;
        return $ianmackenzie$elm_units$Quantity$Quantity(v.y);
    };
    var $ianmackenzie$elm_geometry$Vector2d$toTuple = F2(function(fromQuantity, vector) {
        return _Utils_Tuple2(fromQuantity($ianmackenzie$elm_geometry$Vector2d$xComponent(vector)), fromQuantity($ianmackenzie$elm_geometry$Vector2d$yComponent(vector)));
    });
    var $folkertdev$one_true_path_experiment$Geometry$Ellipse$coordinatePrime = function(_v0) {
        var start = _v0.start;
        var end = _v0.end;
        var xAxisRotate = _v0.xAxisRotate;
        var rotate = $folkertdev$one_true_path_experiment$Geometry$Ellipse$inverseConversionMatrix(xAxisRotate);
        return A2($ianmackenzie$elm_geometry$Vector2d$toTuple, $ianmackenzie$elm_units$Quantity$toFloat, A2($folkertdev$one_true_path_experiment$Geometry$Ellipse$matrixMulVector, rotate, A2($ianmackenzie$elm_geometry$Vector2d$toTuple, $ianmackenzie$elm_units$Quantity$toFloat, A2($ianmackenzie$elm_geometry$Vector2d$scaleBy, 0.5, A2($ianmackenzie$elm_geometry$Vector2d$minus, A2($ianmackenzie$elm_geometry$Vector2d$fromTuple, $ianmackenzie$elm_units$Quantity$float, end), A2($ianmackenzie$elm_geometry$Vector2d$fromTuple, $ianmackenzie$elm_units$Quantity$float, start))))));
    };
    var $folkertdev$svg_path_lowlevel$Path$LowLevel$encodeFlags = function(_v0) {
        var arcFlag = _v0.a;
        var direction = _v0.b;
        var _v1 = _Utils_Tuple2(arcFlag, direction);
        if (_v1.a.$ === 'LargestArc') {
            if (_v1.b.$ === 'Clockwise') {
                var _v2 = _v1.a;
                var _v3 = _v1.b;
                return _Utils_Tuple2(1, 0);
            } else {
                var _v6 = _v1.a;
                var _v7 = _v1.b;
                return _Utils_Tuple2(1, 1);
            }
        } else if (_v1.b.$ === 'Clockwise') {
            var _v4 = _v1.a;
            var _v5 = _v1.b;
            return _Utils_Tuple2(0, 0);
        } else {
            var _v8 = _v1.a;
            var _v9 = _v1.b;
            return _Utils_Tuple2(0, 1);
        }
    };
    var $folkertdev$one_true_path_experiment$Geometry$Ellipse$mod2pi_ = function(x) {
        return x - (x / (2 * $elm$core$Basics$pi) | 0) * 2 * $elm$core$Basics$pi;
    };
    var $ianmackenzie$elm_geometry$Vector2d$plus = F2(function(_v0, _v1) {
        var v2 = _v0.a;
        var v1 = _v1.a;
        return $ianmackenzie$elm_geometry$Geometry$Types$Vector2d({
            x: v1.x + v2.x,
            y: v1.y + v2.y
        });
    });
    var $elm$core$Basics$acos = _Basics_acos;
    var $ianmackenzie$elm_geometry$Vector2d$cross = F2(function(_v0, _v1) {
        var v2 = _v0.a;
        var v1 = _v1.a;
        return $ianmackenzie$elm_units$Quantity$Quantity(v1.x * v2.y - v1.y * v2.x);
    });
    var $folkertdev$one_true_path_experiment$Geometry$Ellipse$signedAngle = F2(function(u, v) {
        var _v0 = $ianmackenzie$elm_geometry$Vector2d$length(v);
        var lengthV = _v0.a;
        var _v1 = $ianmackenzie$elm_geometry$Vector2d$length(u);
        var lengthU = _v1.a;
        var _v2 = A2($ianmackenzie$elm_geometry$Vector2d$dot, u, v);
        var dot = _v2.a;
        var _v3 = A2($ianmackenzie$elm_geometry$Vector2d$cross, v, u);
        var cross = _v3.a;
        var sign = cross < 0 ? -1 : 1;
        return sign * $elm$core$Basics$abs($elm$core$Basics$acos(dot / (lengthU * lengthV)));
    });
    var $folkertdev$one_true_path_experiment$Geometry$Ellipse$tau = 2 * $elm$core$Basics$pi;
    var $folkertdev$one_true_path_experiment$Geometry$Ellipse$endpointToCenter = function(parameterization) {
        var start = parameterization.start;
        var end = parameterization.end;
        var radii = parameterization.radii;
        var xAxisRotate = parameterization.xAxisRotate;
        var arcFlag = parameterization.arcFlag;
        var direction = parameterization.direction;
        var sign = function(_v7) {
            var a = _v7.a;
            var b = _v7.b;
            return _Utils_eq(a, b);
        }($folkertdev$svg_path_lowlevel$Path$LowLevel$encodeFlags(_Utils_Tuple2(arcFlag, direction))) ? -1 : 1;
        var _v0 = $folkertdev$one_true_path_experiment$Geometry$Ellipse$coordinatePrime(parameterization);
        var x1_ = _v0.a;
        var y1_ = _v0.b;
        var p1 = A2($ianmackenzie$elm_geometry$Vector2d$fromTuple, $ianmackenzie$elm_units$Quantity$float, _Utils_Tuple2(x1_, y1_));
        var _v1 = radii;
        var rx = _v1.a;
        var ry = _v1.b;
        var denominator = A2($elm$core$Basics$pow, rx, 2) * A2($elm$core$Basics$pow, y1_, 2) + A2($elm$core$Basics$pow, ry, 2) * A2($elm$core$Basics$pow, x1_, 2);
        var numerator = A2($elm$core$Basics$pow, rx, 2) * A2($elm$core$Basics$pow, ry, 2) - A2($elm$core$Basics$pow, rx, 2) * A2($elm$core$Basics$pow, y1_, 2) - A2($elm$core$Basics$pow, ry, 2) * A2($elm$core$Basics$pow, x1_, 2);
        var root = !denominator || numerator < 0 ? 0 : sign * $elm$core$Basics$sqrt(numerator / denominator);
        var center_ = A2($ianmackenzie$elm_geometry$Vector2d$fromTuple, $ianmackenzie$elm_units$Quantity$float, _Utils_Tuple2(rx * y1_ / ry * root, -1 * (ry * x1_ / rx) * root));
        var center = A2($ianmackenzie$elm_geometry$Vector2d$plus, A2($ianmackenzie$elm_geometry$Vector2d$scaleBy, 0.5, A2($ianmackenzie$elm_geometry$Vector2d$plus, A2($ianmackenzie$elm_geometry$Vector2d$fromTuple, $ianmackenzie$elm_units$Quantity$float, start), A2($ianmackenzie$elm_geometry$Vector2d$fromTuple, $ianmackenzie$elm_units$Quantity$float, end))), A2($folkertdev$one_true_path_experiment$Geometry$Ellipse$matrixMulVector, $folkertdev$one_true_path_experiment$Geometry$Ellipse$conversionMatrix(xAxisRotate), A2($ianmackenzie$elm_geometry$Vector2d$toTuple, $ianmackenzie$elm_units$Quantity$toFloat, center_)));
        var _v2 = radii;
        var radiusX = _v2.a;
        var radiusY = _v2.b;
        var deltaTheta = function() {
            var second = A2($ianmackenzie$elm_geometry$Vector2d$fromTuple, $ianmackenzie$elm_units$Quantity$float, function(_v6) {
                var x = _v6.a;
                var y = _v6.b;
                return _Utils_Tuple2(x / radiusX, y / radiusY);
            }(A2($ianmackenzie$elm_geometry$Vector2d$toTuple, $ianmackenzie$elm_units$Quantity$toFloat, A2($ianmackenzie$elm_geometry$Vector2d$minus, center_, A2($ianmackenzie$elm_geometry$Vector2d$scaleBy, -1, p1)))));
            var first = A2($ianmackenzie$elm_geometry$Vector2d$fromTuple, $ianmackenzie$elm_units$Quantity$float, function(_v5) {
                var x = _v5.a;
                var y = _v5.b;
                return _Utils_Tuple2(x / radiusX, y / radiusY);
            }(A2($ianmackenzie$elm_geometry$Vector2d$toTuple, $ianmackenzie$elm_units$Quantity$toFloat, A2($ianmackenzie$elm_geometry$Vector2d$minus, center_, p1))));
            return A2($folkertdev$one_true_path_experiment$Geometry$Ellipse$signedAngle, first, second);
        }();
        var startAngle = function() {
            var temp = A2($folkertdev$one_true_path_experiment$Geometry$Ellipse$signedAngle, A2($ianmackenzie$elm_geometry$Vector2d$fromTuple, $ianmackenzie$elm_units$Quantity$float, _Utils_Tuple2(1, 0)), A2($ianmackenzie$elm_geometry$Vector2d$fromTuple, $ianmackenzie$elm_units$Quantity$float, function(_v4) {
                var x = _v4.a;
                var y = _v4.b;
                return _Utils_Tuple2(x / radiusX, y / radiusY);
            }(A2($ianmackenzie$elm_geometry$Vector2d$toTuple, $ianmackenzie$elm_units$Quantity$toFloat, A2($ianmackenzie$elm_geometry$Vector2d$minus, center_, p1)))));
            var _v3 = $folkertdev$svg_path_lowlevel$Path$LowLevel$encodeFlags(_Utils_Tuple2(arcFlag, direction));
            var fs = _v3.b;
            return $folkertdev$one_true_path_experiment$Geometry$Ellipse$mod2pi_(!fs && deltaTheta > 0 ? temp - $folkertdev$one_true_path_experiment$Geometry$Ellipse$tau : fs === 1 && deltaTheta < 0 ? temp + $folkertdev$one_true_path_experiment$Geometry$Ellipse$tau : temp);
        }();
        var result = {
            center: A2($ianmackenzie$elm_geometry$Vector2d$toTuple, $ianmackenzie$elm_units$Quantity$toFloat, center),
            deltaTheta: deltaTheta,
            radii: radii,
            startAngle: startAngle,
            xAxisRotate: xAxisRotate
        };
        return result;
    };
    var $ianmackenzie$elm_geometry$Direction2d$fromAngle = function(_v0) {
        var angle = _v0.a;
        return $ianmackenzie$elm_geometry$Geometry$Types$Direction2d({
            x: $elm$core$Basics$cos(angle),
            y: $elm$core$Basics$sin(angle)
        });
    };
    var $ianmackenzie$elm_geometry$Point2d$xy = F2(function(_v0, _v1) {
        var x = _v0.a;
        var y = _v1.a;
        return $ianmackenzie$elm_geometry$Geometry$Types$Point2d({
            x: x,
            y: y
        });
    });
    var $ianmackenzie$elm_geometry$Point2d$fromTuple = F2(function(toQuantity, _v0) {
        var x = _v0.a;
        var y = _v0.b;
        return A2($ianmackenzie$elm_geometry$Point2d$xy, toQuantity(x), toQuantity(y));
    });
    var $ianmackenzie$elm_geometry$Geometry$Types$EllipticalArc2d = function(a) {
        return {
            $: 'EllipticalArc2d',
            a: a
        };
    };
    var $ianmackenzie$elm_geometry$Geometry$Types$Ellipse2d = function(a) {
        return {
            $: 'Ellipse2d',
            a: a
        };
    };
    var $ianmackenzie$elm_geometry$Direction2d$rotateCounterclockwise = function(_v0) {
        var d = _v0.a;
        return $ianmackenzie$elm_geometry$Geometry$Types$Direction2d({
            x: -d.y,
            y: d.x
        });
    };
    var $ianmackenzie$elm_geometry$Frame2d$unsafe = function(properties) {
        return $ianmackenzie$elm_geometry$Geometry$Types$Frame2d(properties);
    };
    var $ianmackenzie$elm_geometry$Frame2d$withXDirection = F2(function(givenDirection, givenOrigin) {
        return $ianmackenzie$elm_geometry$Frame2d$unsafe({
            originPoint: givenOrigin,
            xDirection: givenDirection,
            yDirection: $ianmackenzie$elm_geometry$Direction2d$rotateCounterclockwise(givenDirection)
        });
    });
    var $ianmackenzie$elm_geometry$Ellipse2d$with = function(properties) {
        return $ianmackenzie$elm_geometry$Geometry$Types$Ellipse2d({
            axes: A2($ianmackenzie$elm_geometry$Frame2d$withXDirection, properties.xDirection, properties.centerPoint),
            xRadius: $ianmackenzie$elm_units$Quantity$abs(properties.xRadius),
            yRadius: $ianmackenzie$elm_units$Quantity$abs(properties.yRadius)
        });
    };
    var $ianmackenzie$elm_geometry$EllipticalArc2d$with = function(properties) {
        return $ianmackenzie$elm_geometry$Geometry$Types$EllipticalArc2d({
            ellipse: $ianmackenzie$elm_geometry$Ellipse2d$with({
                centerPoint: properties.centerPoint,
                xDirection: properties.xDirection,
                xRadius: properties.xRadius,
                yRadius: properties.yRadius
            }),
            startAngle: properties.startAngle,
            sweptAngle: properties.sweptAngle
        });
    };
    var $folkertdev$one_true_path_experiment$Segment$ellipticalArc = F2(function(start, _v0) {
        var radii = _v0.radii;
        var xAxisRotate = _v0.xAxisRotate;
        var arcFlag = _v0.arcFlag;
        var direction = _v0.direction;
        var target = _v0.target;
        var center = $folkertdev$one_true_path_experiment$Geometry$Ellipse$endpointToCenter({
            arcFlag: arcFlag,
            direction: direction,
            end: target,
            radii: radii,
            start: start,
            xAxisRotate: xAxisRotate
        });
        var _v1 = radii;
        var rx = _v1.a;
        var ry = _v1.b;
        return $folkertdev$one_true_path_experiment$Segment$Arc($ianmackenzie$elm_geometry$EllipticalArc2d$with({
            centerPoint: A2($ianmackenzie$elm_geometry$Point2d$fromTuple, $ianmackenzie$elm_units$Quantity$float, center.center),
            startAngle: $ianmackenzie$elm_units$Angle$radians(center.startAngle),
            sweptAngle: $ianmackenzie$elm_units$Angle$radians(center.deltaTheta),
            xDirection: $ianmackenzie$elm_geometry$Direction2d$fromAngle($ianmackenzie$elm_units$Angle$radians(center.xAxisRotate)),
            xRadius: $ianmackenzie$elm_units$Quantity$float(center.radii.a),
            yRadius: $ianmackenzie$elm_units$Quantity$float(center.radii.b)
        }));
    });
    var $ianmackenzie$elm_geometry$Geometry$Types$LineSegment2d = function(a) {
        return {
            $: 'LineSegment2d',
            a: a
        };
    };
    var $ianmackenzie$elm_geometry$LineSegment2d$fromEndpoints = $ianmackenzie$elm_geometry$Geometry$Types$LineSegment2d;
    var $ianmackenzie$elm_geometry$LineSegment2d$from = F2(function(startPoint_, endPoint_) {
        return $ianmackenzie$elm_geometry$LineSegment2d$fromEndpoints(_Utils_Tuple2(startPoint_, endPoint_));
    });
    var $ianmackenzie$elm_geometry$Geometry$Types$CubicSpline2d = function(a) {
        return {
            $: 'CubicSpline2d',
            a: a
        };
    };
    var $ianmackenzie$elm_geometry$CubicSpline2d$fromControlPoints = F4(function(p1, p2, p3, p4) {
        return $ianmackenzie$elm_geometry$Geometry$Types$CubicSpline2d({
            firstControlPoint: p1,
            fourthControlPoint: p4,
            secondControlPoint: p2,
            thirdControlPoint: p3
        });
    });
    var $ianmackenzie$elm_geometry$Geometry$Types$QuadraticSpline2d = function(a) {
        return {
            $: 'QuadraticSpline2d',
            a: a
        };
    };
    var $ianmackenzie$elm_geometry$QuadraticSpline2d$fromControlPoints = F3(function(p1, p2, p3) {
        return $ianmackenzie$elm_geometry$Geometry$Types$QuadraticSpline2d({
            firstControlPoint: p1,
            secondControlPoint: p2,
            thirdControlPoint: p3
        });
    });
    var $folkertdev$one_true_path_experiment$Segment$traverse = F3(function(folder, initial, elements) {
        return $elm$core$List$reverse(A3($elm$core$List$foldl, folder, _Utils_Tuple2(initial, _List_Nil), elements).b);
    });
    var $folkertdev$one_true_path_experiment$Segment$toSegment = F2(function(state, drawto) {
        var start = A2($ianmackenzie$elm_geometry$Point2d$fromTuple, $ianmackenzie$elm_units$Quantity$float, state.cursor);
        var _v0 = A2($ianmackenzie$elm_geometry$Point2d$toTuple, $ianmackenzie$elm_units$Quantity$toFloat, start);
        var startX = _v0.a;
        var startY = _v0.b;
        switch(drawto.$){
            case 'LineTo':
                var coordinates_ = drawto.a;
                var coordinates = A2($elm$core$List$map, $ianmackenzie$elm_geometry$Point2d$fromTuple($ianmackenzie$elm_units$Quantity$float), coordinates_);
                return A3($elm$core$List$map2, F2(function(f, t) {
                    return $folkertdev$one_true_path_experiment$Segment$LineSegment(A2($ianmackenzie$elm_geometry$LineSegment2d$from, f, t));
                }), A2($elm$core$List$cons, start, coordinates), coordinates);
            case 'CurveTo':
                var coordinates = drawto.a;
                var toPoint2ds = function(_v4) {
                    var startControlPoint = _v4.a;
                    var endControlPoint = _v4.b;
                    var endPoint = _v4.c;
                    return _Utils_Tuple3(A2($ianmackenzie$elm_geometry$Point2d$fromTuple, $ianmackenzie$elm_units$Quantity$float, startControlPoint), A2($ianmackenzie$elm_geometry$Point2d$fromTuple, $ianmackenzie$elm_units$Quantity$float, endControlPoint), A2($ianmackenzie$elm_geometry$Point2d$fromTuple, $ianmackenzie$elm_units$Quantity$float, endPoint));
                };
                var folder = F2(function(_v2, _v3) {
                    var c1 = _v2.a;
                    var c2 = _v2.b;
                    var p = _v2.c;
                    var segmentStart = _v3.a;
                    var accum = _v3.b;
                    return _Utils_Tuple2(p, A2($elm$core$List$cons, $folkertdev$one_true_path_experiment$Segment$Cubic(A4($ianmackenzie$elm_geometry$CubicSpline2d$fromControlPoints, segmentStart, c1, c2, p)), accum));
                });
                return A3($folkertdev$one_true_path_experiment$Segment$traverse, folder, start, A2($elm$core$List$map, toPoint2ds, coordinates));
            case 'QuadraticBezierCurveTo':
                var coordinates = drawto.a;
                var toPoint2ds = function(_v7) {
                    var controlPoint = _v7.a;
                    var endPoint = _v7.b;
                    return _Utils_Tuple2(A2($ianmackenzie$elm_geometry$Point2d$fromTuple, $ianmackenzie$elm_units$Quantity$float, controlPoint), A2($ianmackenzie$elm_geometry$Point2d$fromTuple, $ianmackenzie$elm_units$Quantity$float, endPoint));
                };
                var folder = F2(function(_v5, _v6) {
                    var c = _v5.a;
                    var p = _v5.b;
                    var segmentStart = _v6.a;
                    var accum = _v6.b;
                    return _Utils_Tuple2(p, A2($elm$core$List$cons, $folkertdev$one_true_path_experiment$Segment$Quadratic(A3($ianmackenzie$elm_geometry$QuadraticSpline2d$fromControlPoints, segmentStart, c, p)), accum));
                });
                return A3($folkertdev$one_true_path_experiment$Segment$traverse, folder, start, A2($elm$core$List$map, toPoint2ds, coordinates));
            case 'EllipticalArc':
                var _arguments = drawto.a;
                var folder = F2(function(args, _v8) {
                    var segmentStart = _v8.a;
                    var accum = _v8.b;
                    return _Utils_Tuple2(args.target, A2($elm$core$List$cons, A2($folkertdev$one_true_path_experiment$Segment$ellipticalArc, segmentStart, args), accum));
                });
                return A3($folkertdev$one_true_path_experiment$Segment$traverse, folder, A2($ianmackenzie$elm_geometry$Point2d$toTuple, $ianmackenzie$elm_units$Quantity$toFloat, start), _arguments);
            default:
                return _List_Nil;
        }
    });
    var $folkertdev$one_true_path_experiment$SubPath$toSegments = function(subpath) {
        if (subpath.$ === 'Empty') return _List_Nil;
        else {
            var moveto = subpath.a.moveto;
            var drawtos = subpath.a.drawtos;
            var coordinate = moveto.a;
            var folder = F2(function(drawto, _v2) {
                var previousState = _v2.a;
                var accum = _v2.b;
                var newSegments = A2($folkertdev$one_true_path_experiment$Segment$toSegment, previousState, drawto);
                var finalNewSegment = A2($elm$core$Maybe$withDefault, previousState, A2($elm$core$Maybe$map, $folkertdev$one_true_path_experiment$Segment$toCursorState, $elm_community$list_extra$List$Extra$last(newSegments)));
                return _Utils_Tuple2(finalNewSegment, _Utils_ap(accum, newSegments));
            });
            var cursorState = {
                cursor: coordinate,
                previousControlPoint: $elm$core$Maybe$Nothing,
                start: coordinate
            };
            return A3($elm$core$List$foldl, folder, _Utils_Tuple2(cursorState, _List_Nil), $folkertdev$elm_deque$Deque$toList(drawtos)).b;
        }
    };
    var $folkertdev$one_true_path_experiment$SubPath$arcLengthParameterized = F2(function(tolerance, subpath) {
        return A2($folkertdev$one_true_path_experiment$SubPath$arcLengthParameterizedHelper, tolerance, $folkertdev$one_true_path_experiment$SubPath$toSegments(subpath));
    });
    var $folkertdev$one_true_path_experiment$LowLevel$Command$EllipticalArc = function(a) {
        return {
            $: 'EllipticalArc',
            a: a
        };
    };
    var $folkertdev$one_true_path_experiment$LowLevel$Command$arcTo = $folkertdev$one_true_path_experiment$LowLevel$Command$EllipticalArc;
    var $folkertdev$svg_path_lowlevel$Path$LowLevel$LargestArc = {
        $: 'LargestArc'
    };
    var $folkertdev$one_true_path_experiment$LowLevel$Command$largestArc = $folkertdev$svg_path_lowlevel$Path$LowLevel$LargestArc;
    var $folkertdev$svg_path_lowlevel$Path$LowLevel$SmallestArc = {
        $: 'SmallestArc'
    };
    var $folkertdev$one_true_path_experiment$LowLevel$Command$smallestArc = $folkertdev$svg_path_lowlevel$Path$LowLevel$SmallestArc;
    var $gampleman$elm_visualization$Shape$Pie$boolToArc = function(b) {
        return b ? $folkertdev$one_true_path_experiment$LowLevel$Command$largestArc : $folkertdev$one_true_path_experiment$LowLevel$Command$smallestArc;
    };
    var $folkertdev$svg_path_lowlevel$Path$LowLevel$Clockwise = {
        $: 'Clockwise'
    };
    var $folkertdev$one_true_path_experiment$LowLevel$Command$clockwise = $folkertdev$svg_path_lowlevel$Path$LowLevel$Clockwise;
    var $folkertdev$svg_path_lowlevel$Path$LowLevel$CounterClockwise = {
        $: 'CounterClockwise'
    };
    var $folkertdev$one_true_path_experiment$LowLevel$Command$counterClockwise = $folkertdev$svg_path_lowlevel$Path$LowLevel$CounterClockwise;
    var $gampleman$elm_visualization$Shape$Pie$boolToDirection = function(b) {
        return b ? $folkertdev$one_true_path_experiment$LowLevel$Command$counterClockwise : $folkertdev$one_true_path_experiment$LowLevel$Command$clockwise;
    };
    var $folkertdev$one_true_path_experiment$SubPath$Empty = {
        $: 'Empty'
    };
    var $folkertdev$one_true_path_experiment$SubPath$empty = $folkertdev$one_true_path_experiment$SubPath$Empty;
    var $gampleman$elm_visualization$Shape$Pie$epsilon = 0.000000000001;
    var $gampleman$elm_visualization$Shape$Pie$mod = F2(function(a, b) {
        var frac = a / b;
        return (frac - (frac | 0)) * b;
    });
    var $folkertdev$one_true_path_experiment$LowLevel$Command$MoveTo = function(a) {
        return {
            $: 'MoveTo',
            a: a
        };
    };
    var $folkertdev$one_true_path_experiment$LowLevel$Command$moveTo = $folkertdev$one_true_path_experiment$LowLevel$Command$MoveTo;
    var $folkertdev$one_true_path_experiment$SubPath$SubPath = function(a) {
        return {
            $: 'SubPath',
            a: a
        };
    };
    var $folkertdev$elm_deque$Deque$Deque = function(a) {
        return {
            $: 'Deque',
            a: a
        };
    };
    var $folkertdev$elm_deque$Internal$rebalance = function(deque) {
        var sizeF = deque.sizeF;
        var sizeR = deque.sizeR;
        var front = deque.front;
        var rear = deque.rear;
        var size1 = (sizeF + sizeR) / 2 | 0;
        var size2 = sizeF + sizeR - size1;
        var balanceConstant = 4;
        if (sizeF + sizeR < 2) return deque;
        else if (_Utils_cmp(sizeF, balanceConstant * sizeR + 1) > 0) {
            var newRear = _Utils_ap(rear, $elm$core$List$reverse(A2($elm$core$List$drop, size1, front)));
            var newFront = A2($elm$core$List$take, size1, front);
            return {
                front: newFront,
                rear: newRear,
                sizeF: size1,
                sizeR: size2
            };
        } else {
            if (_Utils_cmp(sizeR, balanceConstant * sizeF + 1) > 0) {
                var newRear = A2($elm$core$List$take, size1, rear);
                var newFront = _Utils_ap(front, $elm$core$List$reverse(A2($elm$core$List$drop, size1, rear)));
                return {
                    front: newFront,
                    rear: newRear,
                    sizeF: size1,
                    sizeR: size2
                };
            } else return deque;
        }
    };
    var $folkertdev$elm_deque$Internal$fromList = function(list) {
        return $folkertdev$elm_deque$Internal$rebalance({
            front: list,
            rear: _List_Nil,
            sizeF: $elm$core$List$length(list),
            sizeR: 0
        });
    };
    var $folkertdev$elm_deque$Deque$fromList = A2($elm$core$Basics$composeL, $folkertdev$elm_deque$Deque$Deque, $folkertdev$elm_deque$Internal$fromList);
    var $folkertdev$one_true_path_experiment$SubPath$with = F2(function(moveto, drawtos) {
        return $folkertdev$one_true_path_experiment$SubPath$SubPath({
            drawtos: $folkertdev$elm_deque$Deque$fromList(drawtos),
            moveto: moveto
        });
    });
    var $gampleman$elm_visualization$Shape$Pie$arc_ = F6(function(x, y, radius, a0, a1, ccw) {
        var tau = 2 * $elm$core$Basics$pi;
        var r = $elm$core$Basics$abs(radius);
        var dy = r * $elm$core$Basics$sin(a0);
        var y0_ = y + dy;
        var dx = r * $elm$core$Basics$cos(a0);
        var x0_ = x + dx;
        var origin = $folkertdev$one_true_path_experiment$LowLevel$Command$moveTo(_Utils_Tuple2(x0_, y0_));
        var da = ccw ? a0 - a1 : a1 - a0;
        var cw = $gampleman$elm_visualization$Shape$Pie$boolToDirection(!ccw);
        if (!r) return $folkertdev$one_true_path_experiment$SubPath$empty;
        else {
            if (_Utils_cmp(da, tau - $gampleman$elm_visualization$Shape$Pie$epsilon) > 0) return A2($folkertdev$one_true_path_experiment$SubPath$with, origin, _List_fromArray([
                $folkertdev$one_true_path_experiment$LowLevel$Command$arcTo(_List_fromArray([
                    {
                        arcFlag: $folkertdev$one_true_path_experiment$LowLevel$Command$largestArc,
                        direction: cw,
                        radii: _Utils_Tuple2(r, r),
                        target: _Utils_Tuple2(x - dx, y - dy),
                        xAxisRotate: 0
                    }
                ])),
                $folkertdev$one_true_path_experiment$LowLevel$Command$arcTo(_List_fromArray([
                    {
                        arcFlag: $folkertdev$one_true_path_experiment$LowLevel$Command$largestArc,
                        direction: cw,
                        radii: _Utils_Tuple2(r, r),
                        target: _Utils_Tuple2(x0_, y0_),
                        xAxisRotate: 0
                    }
                ]))
            ]));
            else {
                var da_ = da < 0 ? A2($gampleman$elm_visualization$Shape$Pie$mod, da, tau) + tau : da;
                return A2($folkertdev$one_true_path_experiment$SubPath$with, origin, _List_fromArray([
                    $folkertdev$one_true_path_experiment$LowLevel$Command$arcTo(_List_fromArray([
                        {
                            arcFlag: $gampleman$elm_visualization$Shape$Pie$boolToArc(_Utils_cmp(da_, $elm$core$Basics$pi) > -1),
                            direction: cw,
                            radii: _Utils_Tuple2(r, r),
                            target: _Utils_Tuple2(x + r * $elm$core$Basics$cos(a1), y + r * $elm$core$Basics$sin(a1)),
                            xAxisRotate: 0
                        }
                    ]))
                ]));
            }
        }
    });
    var $elm$core$Basics$atan2 = _Basics_atan2;
    var $folkertdev$one_true_path_experiment$LowLevel$Command$ClosePath = {
        $: 'ClosePath'
    };
    var $folkertdev$one_true_path_experiment$LowLevel$Command$closePath = $folkertdev$one_true_path_experiment$LowLevel$Command$ClosePath;
    var $folkertdev$elm_deque$Internal$empty = {
        front: _List_Nil,
        rear: _List_Nil,
        sizeF: 0,
        sizeR: 0
    };
    var $folkertdev$elm_deque$Internal$popBack = function(deque) {
        var front = deque.front;
        var rear = deque.rear;
        var _v0 = _Utils_Tuple2(front, rear);
        if (!_v0.b.b) {
            if (!_v0.a.b) return _Utils_Tuple2($elm$core$Maybe$Nothing, $folkertdev$elm_deque$Internal$empty);
            else {
                if (!_v0.a.b.b) {
                    var _v1 = _v0.a;
                    var x = _v1.a;
                    return _Utils_Tuple2($elm$core$Maybe$Just(x), $folkertdev$elm_deque$Internal$empty);
                } else return _Utils_Tuple2($elm$core$Maybe$Nothing, $folkertdev$elm_deque$Internal$empty);
            }
        } else {
            var _v2 = _v0.b;
            var r = _v2.a;
            var rs = _v2.b;
            return _Utils_Tuple2($elm$core$Maybe$Just(r), $folkertdev$elm_deque$Internal$rebalance({
                front: deque.front,
                rear: rs,
                sizeF: deque.sizeF,
                sizeR: deque.sizeR - 1
            }));
        }
    };
    var $folkertdev$elm_deque$Deque$popBack = A2($elm$core$Basics$composeL, A2($elm$core$Basics$composeL, $elm$core$Tuple$mapSecond($folkertdev$elm_deque$Deque$Deque), $folkertdev$elm_deque$Internal$popBack), $folkertdev$elm_deque$Deque$unwrap);
    var $folkertdev$elm_deque$Deque$mapAbstract = F2(function(f, _v0) {
        var _abstract = _v0.a;
        return $folkertdev$elm_deque$Deque$Deque(f(_abstract));
    });
    var $folkertdev$elm_deque$Deque$pushBack = F2(function(elem, _v0) {
        var deque = _v0.a;
        return A2($folkertdev$elm_deque$Deque$mapAbstract, $folkertdev$elm_deque$Internal$rebalance, $folkertdev$elm_deque$Deque$Deque({
            front: deque.front,
            rear: A2($elm$core$List$cons, elem, deque.rear),
            sizeF: deque.sizeF,
            sizeR: deque.sizeR + 1
        }));
    });
    var $folkertdev$one_true_path_experiment$SubPath$close = function(subpath) {
        if (subpath.$ === 'Empty') return $folkertdev$one_true_path_experiment$SubPath$Empty;
        else {
            var moveto = subpath.a.moveto;
            var drawtos = subpath.a.drawtos;
            var _v1 = $folkertdev$elm_deque$Deque$popBack(drawtos);
            if (_v1.a.$ === 'Just' && _v1.a.a.$ === 'ClosePath') {
                var _v2 = _v1.a.a;
                var preceding = _v1.b;
                return subpath;
            } else return $folkertdev$one_true_path_experiment$SubPath$SubPath({
                drawtos: A2($folkertdev$elm_deque$Deque$pushBack, $folkertdev$one_true_path_experiment$LowLevel$Command$closePath, drawtos),
                moveto: moveto
            });
        }
    };
    var $folkertdev$one_true_path_experiment$SubPath$firstPoint = function(_v0) {
        var moveto = _v0.moveto;
        var p = moveto.a;
        return p;
    };
    var $folkertdev$one_true_path_experiment$LowLevel$Command$LineTo = function(a) {
        return {
            $: 'LineTo',
            a: a
        };
    };
    var $folkertdev$one_true_path_experiment$LowLevel$Command$lineTo = $folkertdev$one_true_path_experiment$LowLevel$Command$LineTo;
    var $folkertdev$one_true_path_experiment$SubPath$map2 = F3(function(f, sub1, sub2) {
        var _v0 = _Utils_Tuple2(sub1, sub2);
        if (_v0.a.$ === 'Empty') {
            if (_v0.b.$ === 'Empty') {
                var _v1 = _v0.a;
                var _v2 = _v0.b;
                return $folkertdev$one_true_path_experiment$SubPath$Empty;
            } else {
                var _v3 = _v0.a;
                var subpath = _v0.b;
                return subpath;
            }
        } else if (_v0.b.$ === 'Empty') {
            var subpath = _v0.a;
            var _v4 = _v0.b;
            return subpath;
        } else {
            var a = _v0.a.a;
            var b = _v0.b.a;
            return A2(f, a, b);
        }
    });
    var $folkertdev$one_true_path_experiment$SubPath$pushBack = F2(function(drawto, data) {
        return _Utils_update(data, {
            drawtos: A2($folkertdev$elm_deque$Deque$pushBack, drawto, data.drawtos)
        });
    });
    var $folkertdev$elm_deque$Internal$length = function(deque) {
        return deque.sizeF + deque.sizeR;
    };
    var $folkertdev$elm_deque$Internal$isEmpty = function(deque) {
        return !$folkertdev$elm_deque$Internal$length(deque);
    };
    var $folkertdev$elm_deque$Deque$isEmpty = A2($elm$core$Basics$composeL, $folkertdev$elm_deque$Internal$isEmpty, $folkertdev$elm_deque$Deque$unwrap);
    var $folkertdev$elm_deque$Deque$append = F2(function(p, q) {
        var x = p.a;
        var y = q.a;
        return $folkertdev$elm_deque$Deque$isEmpty(p) ? q : $folkertdev$elm_deque$Deque$isEmpty(q) ? p : $folkertdev$elm_deque$Deque$Deque({
            front: _Utils_ap(x.front, $elm$core$List$reverse(x.rear)),
            rear: $elm$core$List$reverse(_Utils_ap(y.front, $elm$core$List$reverse(y.rear))),
            sizeF: x.sizeF + x.sizeR,
            sizeR: y.sizeF + y.sizeR
        });
    });
    var $folkertdev$one_true_path_experiment$SubPath$unsafeConcatenate = F2(function(a, b) {
        return _Utils_update(a, {
            drawtos: A2($folkertdev$elm_deque$Deque$append, a.drawtos, b.drawtos)
        });
    });
    var $folkertdev$one_true_path_experiment$SubPath$connect = function() {
        var helper = F2(function(right, left) {
            return $folkertdev$one_true_path_experiment$SubPath$SubPath(A2($folkertdev$one_true_path_experiment$SubPath$unsafeConcatenate, A2($folkertdev$one_true_path_experiment$SubPath$pushBack, $folkertdev$one_true_path_experiment$LowLevel$Command$lineTo(_List_fromArray([
                $folkertdev$one_true_path_experiment$SubPath$firstPoint(right)
            ])), left), right));
        });
        return $folkertdev$one_true_path_experiment$SubPath$map2(helper);
    }();
    var $gampleman$elm_visualization$Shape$Pie$cornerTangents = F7(function(x0, y0, x1, y1, r1, rc, cw) {
        var y01 = y0 - y1;
        var x01 = x0 - x1;
        var r = r1 - rc;
        var lo = (cw ? rc : -rc) / $elm$core$Basics$sqrt(A2($elm$core$Basics$pow, x01, 2) + A2($elm$core$Basics$pow, y01, 2));
        var ox = lo * y01;
        var x10 = x1 + ox;
        var x11 = x0 + ox;
        var x00 = (x11 + x10) / 2;
        var oy = -lo * x01;
        var y10 = y1 + oy;
        var y11 = y0 + oy;
        var y00 = (y11 + y10) / 2;
        var dy = y10 - y11;
        var dx = x10 - x11;
        var dd = x11 * y10 - x10 * y11;
        var d2 = A2($elm$core$Basics$pow, dx, 2) + A2($elm$core$Basics$pow, dy, 2);
        var d = (dy < 0 ? -1 : 1) * $elm$core$Basics$sqrt(A2($elm$core$Basics$max, 0, A2($elm$core$Basics$pow, r, 2) * d2 - A2($elm$core$Basics$pow, dd, 2)));
        var cy1 = (-dd * dx + dy * d) / d2;
        var dy1 = cy1 - y00;
        var cy0 = (-dd * dx - dy * d) / d2;
        var dy0 = cy0 - y00;
        var cx1 = (dd * dy + dx * d) / d2;
        var dx1 = cx1 - x00;
        var cx0 = (dd * dy - dx * d) / d2;
        var dx0 = cx0 - x00;
        var _v0 = _Utils_cmp(A2($elm$core$Basics$pow, dx0, 2) + A2($elm$core$Basics$pow, dy0, 2), A2($elm$core$Basics$pow, dx1, 2) + A2($elm$core$Basics$pow, dy1, 2)) > 0 ? _Utils_Tuple2(cx1, cy1) : _Utils_Tuple2(cx0, cy0);
        var fcx = _v0.a;
        var fxy = _v0.b;
        return {
            cx: fcx,
            cy: fxy,
            x01: -ox,
            x11: fcx * (r1 / r - 1),
            y01: -oy,
            y11: fxy * (r1 / r - 1)
        };
    });
    var $gampleman$elm_visualization$Shape$Pie$intersect = F8(function(x0, y0, x1, y1, x2, y2, x3, y3) {
        var y32 = y3 - y2;
        var y10 = y1 - y0;
        var x32 = x3 - x2;
        var x10 = x1 - x0;
        var t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);
        return _Utils_Tuple2(x0 + t * x10, y0 + t * y10);
    });
    var $folkertdev$elm_deque$Internal$foldl = F3(function(f, initial, deque) {
        return function(initial_) {
            return A3($elm$core$List$foldr, f, initial_, deque.rear);
        }(A3($elm$core$List$foldl, f, initial, deque.front));
    });
    var $folkertdev$elm_deque$Deque$foldl = F2(function(f, initial) {
        return A2($elm$core$Basics$composeL, A2($folkertdev$elm_deque$Internal$foldl, f, initial), $folkertdev$elm_deque$Deque$unwrap);
    });
    var $folkertdev$one_true_path_experiment$LowLevel$Command$updateCursorState = F2(function(drawto, state) {
        var noControlPoint = function(currentState) {
            return _Utils_update(currentState, {
                previousControlPoint: $elm$core$Maybe$Nothing
            });
        };
        var maybeUpdateCursor = function(coordinate) {
            return _Utils_update(state, {
                cursor: A2($elm$core$Maybe$withDefault, state.cursor, coordinate)
            });
        };
        var _v0 = state.cursor;
        var cursorX = _v0.a;
        var cursorY = _v0.b;
        switch(drawto.$){
            case 'LineTo':
                var coordinates = drawto.a;
                return noControlPoint(maybeUpdateCursor($elm_community$list_extra$List$Extra$last(coordinates)));
            case 'CurveTo':
                var coordinates = drawto.a;
                var _v2 = $elm_community$list_extra$List$Extra$last(coordinates);
                if (_v2.$ === 'Nothing') return state;
                else {
                    var _v3 = _v2.a;
                    var control1 = _v3.a;
                    var control2 = _v3.b;
                    var target = _v3.c;
                    return _Utils_update(state, {
                        cursor: target,
                        previousControlPoint: $elm$core$Maybe$Just(control2)
                    });
                }
            case 'QuadraticBezierCurveTo':
                var coordinates = drawto.a;
                var _v4 = $elm_community$list_extra$List$Extra$last(coordinates);
                if (_v4.$ === 'Nothing') return state;
                else {
                    var _v5 = _v4.a;
                    var control = _v5.a;
                    var target = _v5.b;
                    return _Utils_update(state, {
                        cursor: target,
                        previousControlPoint: $elm$core$Maybe$Just(control)
                    });
                }
            case 'EllipticalArc':
                var _arguments = drawto.a;
                return noControlPoint(maybeUpdateCursor(A2($elm$core$Maybe$map, function($) {
                    return $.target;
                }, $elm_community$list_extra$List$Extra$last(_arguments))));
            default:
                return noControlPoint(state);
        }
    });
    var $folkertdev$one_true_path_experiment$SubPath$finalCursorState = function(_v0) {
        var moveto = _v0.moveto;
        var drawtos = _v0.drawtos;
        var _v1 = moveto;
        var start = _v1.a;
        var initial = {
            cursor: start,
            previousControlPoint: $elm$core$Maybe$Nothing,
            start: start
        };
        return A3($folkertdev$elm_deque$Deque$foldl, $folkertdev$one_true_path_experiment$LowLevel$Command$updateCursorState, initial, drawtos);
    };
    var $folkertdev$one_true_path_experiment$SubPath$finalPoint = A2($elm$core$Basics$composeR, $folkertdev$one_true_path_experiment$SubPath$finalCursorState, function($) {
        return $.cursor;
    });
    var $folkertdev$elm_deque$Internal$map = F2(function(f, deque) {
        return {
            front: A2($elm$core$List$map, f, deque.front),
            rear: A2($elm$core$List$map, f, deque.rear),
            sizeF: deque.sizeF,
            sizeR: deque.sizeR
        };
    });
    var $folkertdev$elm_deque$Deque$map = function(f) {
        return $folkertdev$elm_deque$Deque$mapAbstract($folkertdev$elm_deque$Internal$map(f));
    };
    var $folkertdev$one_true_path_experiment$LowLevel$Command$CurveTo = function(a) {
        return {
            $: 'CurveTo',
            a: a
        };
    };
    var $folkertdev$one_true_path_experiment$LowLevel$Command$QuadraticBezierCurveTo = function(a) {
        return {
            $: 'QuadraticBezierCurveTo',
            a: a
        };
    };
    var $folkertdev$one_true_path_experiment$LowLevel$Command$mapTuple2 = F2(function(f, _v0) {
        var a = _v0.a;
        var b = _v0.b;
        return _Utils_Tuple2(f(a), f(b));
    });
    var $folkertdev$one_true_path_experiment$LowLevel$Command$mapTuple3 = F2(function(f, _v0) {
        var a = _v0.a;
        var b = _v0.b;
        var c = _v0.c;
        return _Utils_Tuple3(f(a), f(b), f(c));
    });
    var $folkertdev$one_true_path_experiment$LowLevel$Command$mapCoordinateDrawTo = F2(function(f, drawto) {
        switch(drawto.$){
            case 'LineTo':
                var coordinates = drawto.a;
                return $folkertdev$one_true_path_experiment$LowLevel$Command$LineTo(A2($elm$core$List$map, f, coordinates));
            case 'CurveTo':
                var coordinates = drawto.a;
                return $folkertdev$one_true_path_experiment$LowLevel$Command$CurveTo(A2($elm$core$List$map, $folkertdev$one_true_path_experiment$LowLevel$Command$mapTuple3(f), coordinates));
            case 'QuadraticBezierCurveTo':
                var coordinates = drawto.a;
                return $folkertdev$one_true_path_experiment$LowLevel$Command$QuadraticBezierCurveTo(A2($elm$core$List$map, $folkertdev$one_true_path_experiment$LowLevel$Command$mapTuple2(f), coordinates));
            case 'EllipticalArc':
                var _arguments = drawto.a;
                return $folkertdev$one_true_path_experiment$LowLevel$Command$EllipticalArc(A2($elm$core$List$map, function(argument) {
                    return _Utils_update(argument, {
                        target: f(argument.target)
                    });
                }, _arguments));
            default:
                return $folkertdev$one_true_path_experiment$LowLevel$Command$ClosePath;
        }
    });
    var $folkertdev$one_true_path_experiment$SubPath$mapCoordinateInstructions = F2(function(f, _v0) {
        var moveto = _v0.moveto;
        var drawtos = _v0.drawtos;
        var coordinate = moveto.a;
        return {
            drawtos: A2($folkertdev$elm_deque$Deque$map, $folkertdev$one_true_path_experiment$LowLevel$Command$mapCoordinateDrawTo(f), drawtos),
            moveto: $folkertdev$one_true_path_experiment$LowLevel$Command$MoveTo(f(coordinate))
        };
    });
    var $folkertdev$one_true_path_experiment$SubPath$continue = function() {
        var helper = F2(function(right, left) {
            var distance = A2($ianmackenzie$elm_geometry$Vector2d$minus, A2($ianmackenzie$elm_geometry$Vector2d$fromTuple, $ianmackenzie$elm_units$Quantity$float, $folkertdev$one_true_path_experiment$SubPath$firstPoint(right)), A2($ianmackenzie$elm_geometry$Vector2d$fromTuple, $ianmackenzie$elm_units$Quantity$float, $folkertdev$one_true_path_experiment$SubPath$finalPoint(left)));
            var mapper = A2($elm$core$Basics$composeL, A2($elm$core$Basics$composeL, $ianmackenzie$elm_geometry$Vector2d$toTuple($ianmackenzie$elm_units$Quantity$toFloat), $ianmackenzie$elm_geometry$Vector2d$plus(distance)), $ianmackenzie$elm_geometry$Vector2d$fromTuple($ianmackenzie$elm_units$Quantity$float));
            return $folkertdev$one_true_path_experiment$SubPath$SubPath(A2($folkertdev$one_true_path_experiment$SubPath$unsafeConcatenate, left, A2($folkertdev$one_true_path_experiment$SubPath$mapCoordinateInstructions, mapper, right)));
        });
        return $folkertdev$one_true_path_experiment$SubPath$map2(helper);
    }();
    var $gampleman$elm_visualization$Shape$Pie$makeArc = F6(function(x, y, radius, a0, a1, ccw) {
        return $folkertdev$one_true_path_experiment$SubPath$continue(A6($gampleman$elm_visualization$Shape$Pie$arc_, x, y, radius, a0, a1, ccw));
    });
    var $elm$core$Basics$asin = _Basics_asin;
    var $gampleman$elm_visualization$Shape$Pie$myAsin = function(x) {
        return x >= 1 ? $elm$core$Basics$pi / 2 : _Utils_cmp(x, -1) < 1 ? -$elm$core$Basics$pi / 2 : $elm$core$Basics$asin(x);
    };
    var $gampleman$elm_visualization$Shape$Pie$arc = function(arcData) {
        var a1 = arcData.endAngle - $elm$core$Basics$pi / 2;
        var a0 = arcData.startAngle - $elm$core$Basics$pi / 2;
        var cw = _Utils_cmp(a1, a0) > 0;
        var da = $elm$core$Basics$abs(a1 - a0);
        var _v0 = _Utils_cmp(arcData.innerRadius, arcData.outerRadius) > 0 ? _Utils_Tuple2(arcData.outerRadius, arcData.innerRadius) : _Utils_Tuple2(arcData.innerRadius, arcData.outerRadius);
        var r0 = _v0.a;
        var r1 = _v0.b;
        var path = function() {
            if (_Utils_cmp(r1, $gampleman$elm_visualization$Shape$Pie$epsilon) < 1) return _List_fromArray([
                $folkertdev$one_true_path_experiment$SubPath$close(A2($folkertdev$one_true_path_experiment$SubPath$with, $folkertdev$one_true_path_experiment$LowLevel$Command$moveTo(_Utils_Tuple2(0, 0)), _List_Nil))
            ]);
            else if (_Utils_cmp(da, 2 * $elm$core$Basics$pi - $gampleman$elm_visualization$Shape$Pie$epsilon) > 0) {
                var p5 = A7($gampleman$elm_visualization$Shape$Pie$makeArc, 0, 0, r1, a0, a1, !cw, A2($folkertdev$one_true_path_experiment$SubPath$with, $folkertdev$one_true_path_experiment$LowLevel$Command$moveTo(_Utils_Tuple2(r1 * $elm$core$Basics$cos(a0), r1 * $elm$core$Basics$sin(a0))), _List_Nil));
                return _Utils_cmp(r0, $gampleman$elm_visualization$Shape$Pie$epsilon) > 0 ? _List_fromArray([
                    p5,
                    $folkertdev$one_true_path_experiment$SubPath$close(A7($gampleman$elm_visualization$Shape$Pie$makeArc, 0, 0, r0, a1, a0, cw, A2($folkertdev$one_true_path_experiment$SubPath$with, $folkertdev$one_true_path_experiment$LowLevel$Command$moveTo(_Utils_Tuple2(r0 * $elm$core$Basics$cos(a1), r0 * $elm$core$Basics$sin(a1))), _List_Nil)))
                ]) : _List_fromArray([
                    $folkertdev$one_true_path_experiment$SubPath$close(p5)
                ]);
            } else {
                var rc = A2($elm$core$Basics$min, $elm$core$Basics$abs(r1 - r0) / 2, arcData.cornerRadius);
                var ap = arcData.padAngle / 2;
                var rp = _Utils_cmp(ap, $gampleman$elm_visualization$Shape$Pie$epsilon) > 0 ? arcData.padRadius > 0 ? arcData.padRadius : $elm$core$Basics$sqrt(A2($elm$core$Basics$pow, r0, 2) + A2($elm$core$Basics$pow, r1, 2)) : 0;
                var p0 = $gampleman$elm_visualization$Shape$Pie$myAsin(rp / r0 * $elm$core$Basics$sin(ap));
                var p1 = $gampleman$elm_visualization$Shape$Pie$myAsin(rp / r1 * $elm$core$Basics$sin(ap));
                var _v1 = _Utils_cmp(rp, $gampleman$elm_visualization$Shape$Pie$epsilon) > 0 ? _Utils_cmp(da - p1 * 2, $gampleman$elm_visualization$Shape$Pie$epsilon) > 0 ? cw ? _Utils_Tuple3(a0 + p1, a1 - p1, da - p1 * 2) : _Utils_Tuple3(a0 - p1, a1 + p1, da - p1 * 2) : _Utils_Tuple3((a0 + a1) / 2, (a0 + a1) / 2, 0) : _Utils_Tuple3(a0, a1, da);
                var a01 = _v1.a;
                var a11 = _v1.b;
                var da1 = _v1.c;
                var x01 = r1 * $elm$core$Basics$cos(a01);
                var y01 = r1 * $elm$core$Basics$sin(a01);
                var x11 = r1 * $elm$core$Basics$cos(a11);
                var y11 = r1 * $elm$core$Basics$sin(a11);
                var _v2 = _Utils_cmp(rp, $gampleman$elm_visualization$Shape$Pie$epsilon) > 0 ? _Utils_cmp(da - p0 * 2, $gampleman$elm_visualization$Shape$Pie$epsilon) > 0 ? cw ? _Utils_Tuple3(a0 + p0, a1 - p0, da - p0 * 2) : _Utils_Tuple3(a0 - p0, a1 + p0, da - p0 * 2) : _Utils_Tuple3((a0 + a1) / 2, (a0 + a1) / 2, 0) : _Utils_Tuple3(a0, a1, da);
                var a00 = _v2.a;
                var a10 = _v2.b;
                var da0 = _v2.c;
                var x00 = r0 * $elm$core$Basics$cos(a00);
                var y00 = r0 * $elm$core$Basics$sin(a00);
                var x10 = r0 * $elm$core$Basics$cos(a10);
                var y10 = r0 * $elm$core$Basics$sin(a10);
                var _v3 = _Utils_cmp(da0, $gampleman$elm_visualization$Shape$Pie$epsilon) > 0 ? A8($gampleman$elm_visualization$Shape$Pie$intersect, x01, y01, x00, y00, x11, y11, x10, y10) : _Utils_Tuple2(x10, y10);
                var ocx = _v3.a;
                var ocy = _v3.b;
                var lc = $elm$core$Basics$sqrt(A2($elm$core$Basics$pow, ocx, 2) + A2($elm$core$Basics$pow, ocy, 2));
                var _v4 = _Utils_Tuple2(x11 - ocx, y11 - ocy);
                var bx = _v4.a;
                var by = _v4.b;
                var _v5 = _Utils_Tuple2(x01 - ocx, y01 - ocy);
                var ax = _v5.a;
                var ay = _v5.b;
                var kc = 1 / $elm$core$Basics$sin($elm$core$Basics$acos((ax * bx + ay * by) / ($elm$core$Basics$sqrt(A2($elm$core$Basics$pow, ax, 2) + A2($elm$core$Basics$pow, ay, 2)) * $elm$core$Basics$sqrt(A2($elm$core$Basics$pow, bx, 2) + A2($elm$core$Basics$pow, by, 2)))) / 2);
                var _v6 = _Utils_cmp(rc, $gampleman$elm_visualization$Shape$Pie$epsilon) > 0 && _Utils_cmp(da, $elm$core$Basics$pi) < 0 ? _Utils_Tuple2(A2($elm$core$Basics$min, rc, (r0 - lc) / (kc - 1)), A2($elm$core$Basics$min, rc, (r1 - lc) / (kc + 1))) : _Utils_Tuple2(rc, rc);
                var rc0 = _v6.a;
                var rc1 = _v6.b;
                var outerRing = function() {
                    if (_Utils_cmp(da1, $gampleman$elm_visualization$Shape$Pie$epsilon) < 1) return A2($folkertdev$one_true_path_experiment$SubPath$with, $folkertdev$one_true_path_experiment$LowLevel$Command$moveTo(_Utils_Tuple2(x01, y01)), _List_Nil);
                    else {
                        if (_Utils_cmp(rc1, $gampleman$elm_visualization$Shape$Pie$epsilon) > 0) {
                            var t1 = A7($gampleman$elm_visualization$Shape$Pie$cornerTangents, x11, y11, x10, y10, r1, rc1, cw);
                            var t0 = A7($gampleman$elm_visualization$Shape$Pie$cornerTangents, x00, y00, x01, y01, r1, rc1, cw);
                            var p = A2($folkertdev$one_true_path_experiment$SubPath$with, $folkertdev$one_true_path_experiment$LowLevel$Command$moveTo(_Utils_Tuple2(t0.cx + t0.x01, t0.cy + t0.y01)), _List_Nil);
                            return _Utils_cmp(rc1, rc) < 0 ? A7($gampleman$elm_visualization$Shape$Pie$makeArc, t0.cx, t0.cy, rc1, A2($elm$core$Basics$atan2, t0.y01, t0.x01), A2($elm$core$Basics$atan2, t1.y01, t1.x01), !cw, p) : A7($gampleman$elm_visualization$Shape$Pie$makeArc, t1.cx, t1.cy, rc1, A2($elm$core$Basics$atan2, t1.y11, t1.x11), A2($elm$core$Basics$atan2, t1.y01, t1.x01), !cw, A7($gampleman$elm_visualization$Shape$Pie$makeArc, 0, 0, r1, A2($elm$core$Basics$atan2, t0.cy + t0.y11, t0.cx + t0.x11), A2($elm$core$Basics$atan2, t1.cy + t1.y11, t1.cx + t1.x11), !cw, A7($gampleman$elm_visualization$Shape$Pie$makeArc, t0.cx, t0.cy, rc1, A2($elm$core$Basics$atan2, t0.y01, t0.x01), A2($elm$core$Basics$atan2, t0.y11, t0.x11), !cw, p)));
                        } else return A7($gampleman$elm_visualization$Shape$Pie$makeArc, 0, 0, r1, a01, a11, !cw, A2($folkertdev$one_true_path_experiment$SubPath$with, $folkertdev$one_true_path_experiment$LowLevel$Command$moveTo(_Utils_Tuple2(x01, y01)), _List_Nil));
                    }
                }();
                if (_Utils_cmp(r0, $gampleman$elm_visualization$Shape$Pie$epsilon) < 1 || _Utils_cmp(da0, $gampleman$elm_visualization$Shape$Pie$epsilon) < 1) return _List_fromArray([
                    $folkertdev$one_true_path_experiment$SubPath$close(A2($folkertdev$one_true_path_experiment$SubPath$connect, A2($folkertdev$one_true_path_experiment$SubPath$with, $folkertdev$one_true_path_experiment$LowLevel$Command$moveTo(_Utils_Tuple2(x10, y10)), _List_Nil), outerRing))
                ]);
                else {
                    if (_Utils_cmp(rc0, $gampleman$elm_visualization$Shape$Pie$epsilon) > 0) {
                        var t11 = A7($gampleman$elm_visualization$Shape$Pie$cornerTangents, x01, y01, x00, y00, r0, -rc0, cw);
                        var t01 = A7($gampleman$elm_visualization$Shape$Pie$cornerTangents, x10, y10, x11, y11, r0, -rc0, cw);
                        var p5 = A2($folkertdev$one_true_path_experiment$SubPath$connect, A2($folkertdev$one_true_path_experiment$SubPath$with, $folkertdev$one_true_path_experiment$LowLevel$Command$moveTo(_Utils_Tuple2(t01.cx + t01.x01, t01.cy + t01.y01)), _List_Nil), outerRing);
                        return _Utils_cmp(rc0, rc) < 0 ? _List_fromArray([
                            $folkertdev$one_true_path_experiment$SubPath$close(A7($gampleman$elm_visualization$Shape$Pie$makeArc, t01.cx, t01.cy, rc0, A2($elm$core$Basics$atan2, t01.y01, t01.x01), A2($elm$core$Basics$atan2, t11.y01, t11.x01), !cw, p5))
                        ]) : _List_fromArray([
                            $folkertdev$one_true_path_experiment$SubPath$close(A7($gampleman$elm_visualization$Shape$Pie$makeArc, t11.cx, t11.cy, rc0, A2($elm$core$Basics$atan2, t11.y11, t11.x11), A2($elm$core$Basics$atan2, t11.y01, t11.x01), !cw, A7($gampleman$elm_visualization$Shape$Pie$makeArc, 0, 0, r0, A2($elm$core$Basics$atan2, t01.cy + t01.y11, t01.cx + t01.x11), A2($elm$core$Basics$atan2, t11.cy + t11.y11, t11.cx + t11.x11), cw, A7($gampleman$elm_visualization$Shape$Pie$makeArc, t01.cx, t01.cy, rc0, A2($elm$core$Basics$atan2, t01.y01, t01.x01), A2($elm$core$Basics$atan2, t01.y11, t01.x11), !cw, p5))))
                        ]);
                    } else return _List_fromArray([
                        $folkertdev$one_true_path_experiment$SubPath$close(A2($folkertdev$one_true_path_experiment$SubPath$connect, A6($gampleman$elm_visualization$Shape$Pie$arc_, 0, 0, r0, a10, a00, cw), outerRing))
                    ]);
                }
            }
        }();
        return path;
    };
    var $gampleman$elm_visualization$Shape$arc = $gampleman$elm_visualization$Shape$Pie$arc;
    var $author$project$Elements$circleDot = $gampleman$elm_visualization$Shape$arc({
        cornerRadius: 0,
        endAngle: 2 * $elm$core$Basics$pi,
        innerRadius: 0,
        outerRadius: 3,
        padAngle: 0,
        padRadius: 0,
        startAngle: 0
    });
    var $elm_community$typed_svg$TypedSvg$Attributes$d = $elm_community$typed_svg$TypedSvg$Core$attribute('d');
    var $elm$svg$Svg$Attributes$d = _VirtualDom_attribute('d');
    var $elm$svg$Svg$trustedNode = _VirtualDom_nodeNS('http://www.w3.org/2000/svg');
    var $elm$svg$Svg$path = $elm$svg$Svg$trustedNode('path');
    var $folkertdev$elm_deque$Deque$empty = $folkertdev$elm_deque$Deque$Deque($folkertdev$elm_deque$Internal$empty);
    var $folkertdev$one_true_path_experiment$LowLevel$Command$merge = F2(function(instruction1, instruction2) {
        var _v0 = _Utils_Tuple2(instruction1, instruction2);
        _v0$5: while(true)switch(_v0.a.$){
            case 'LineTo':
                if (_v0.b.$ === 'LineTo') {
                    var p1 = _v0.a.a;
                    var p2 = _v0.b.a;
                    return $elm$core$Result$Ok($folkertdev$one_true_path_experiment$LowLevel$Command$LineTo(_Utils_ap(p1, p2)));
                } else break _v0$5;
            case 'CurveTo':
                if (_v0.b.$ === 'CurveTo') {
                    var p1 = _v0.a.a;
                    var p2 = _v0.b.a;
                    return $elm$core$Result$Ok($folkertdev$one_true_path_experiment$LowLevel$Command$CurveTo(_Utils_ap(p1, p2)));
                } else break _v0$5;
            case 'QuadraticBezierCurveTo':
                if (_v0.b.$ === 'QuadraticBezierCurveTo') {
                    var p1 = _v0.a.a;
                    var p2 = _v0.b.a;
                    return $elm$core$Result$Ok($folkertdev$one_true_path_experiment$LowLevel$Command$QuadraticBezierCurveTo(_Utils_ap(p1, p2)));
                } else break _v0$5;
            case 'EllipticalArc':
                if (_v0.b.$ === 'EllipticalArc') {
                    var p1 = _v0.a.a;
                    var p2 = _v0.b.a;
                    return $elm$core$Result$Ok($folkertdev$one_true_path_experiment$LowLevel$Command$EllipticalArc(_Utils_ap(p1, p2)));
                } else break _v0$5;
            default:
                if (_v0.b.$ === 'ClosePath') {
                    var _v1 = _v0.a;
                    var _v2 = _v0.b;
                    return $elm$core$Result$Ok($folkertdev$one_true_path_experiment$LowLevel$Command$ClosePath);
                } else break _v0$5;
        }
        return $elm$core$Result$Err(_Utils_Tuple2(instruction1, instruction2));
    });
    var $folkertdev$one_true_path_experiment$SubPath$compressHelper = function(drawtos) {
        var folder = F2(function(instruction, _v3) {
            var previous = _v3.a;
            var accum = _v3.b;
            var _v2 = A2($folkertdev$one_true_path_experiment$LowLevel$Command$merge, previous, instruction);
            if (_v2.$ === 'Ok') {
                var merged = _v2.a;
                return _Utils_Tuple2(merged, accum);
            } else return _Utils_Tuple2(instruction, A2($elm$core$List$cons, previous, accum));
        });
        var _v0 = $folkertdev$elm_deque$Deque$toList(drawtos);
        if (!_v0.b) return $folkertdev$elm_deque$Deque$empty;
        else {
            var first = _v0.a;
            var rest = _v0.b;
            return $folkertdev$elm_deque$Deque$fromList($elm$core$List$reverse(function(_v1) {
                var a = _v1.a;
                var b = _v1.b;
                return A2($elm$core$List$cons, a, b);
            }(A3($elm$core$List$foldl, folder, _Utils_Tuple2(first, _List_Nil), rest))));
        }
    };
    var $folkertdev$one_true_path_experiment$SubPath$compress = function(subpath) {
        if (subpath.$ === 'Empty') return $folkertdev$one_true_path_experiment$SubPath$Empty;
        else {
            var data = subpath.a;
            return $folkertdev$one_true_path_experiment$SubPath$SubPath(_Utils_update(data, {
                drawtos: $folkertdev$one_true_path_experiment$SubPath$compressHelper(data.drawtos)
            }));
        }
    };
    var $folkertdev$svg_path_lowlevel$Path$LowLevel$DecimalPlaces = function(a) {
        return {
            $: 'DecimalPlaces',
            a: a
        };
    };
    var $folkertdev$svg_path_lowlevel$Path$LowLevel$decimalPlaces = $folkertdev$svg_path_lowlevel$Path$LowLevel$DecimalPlaces;
    var $folkertdev$one_true_path_experiment$SubPath$defaultConfig = {
        decimalPlaces: $elm$core$Maybe$Nothing,
        mergeAdjacent: false
    };
    var $folkertdev$one_true_path_experiment$SubPath$optionFolder = F2(function(option, config) {
        if (option.$ === 'DecimalPlaces') {
            var n = option.a;
            return _Utils_update(config, {
                decimalPlaces: $elm$core$Maybe$Just(n)
            });
        } else return _Utils_update(config, {
            mergeAdjacent: true
        });
    });
    var $folkertdev$svg_path_lowlevel$Path$LowLevel$Absolute = {
        $: 'Absolute'
    };
    var $folkertdev$svg_path_lowlevel$Path$LowLevel$ClosePath = {
        $: 'ClosePath'
    };
    var $folkertdev$svg_path_lowlevel$Path$LowLevel$CurveTo = F2(function(a, b) {
        return {
            $: 'CurveTo',
            a: a,
            b: b
        };
    });
    var $folkertdev$svg_path_lowlevel$Path$LowLevel$EllipticalArc = F2(function(a, b) {
        return {
            $: 'EllipticalArc',
            a: a,
            b: b
        };
    });
    var $folkertdev$svg_path_lowlevel$Path$LowLevel$LineTo = F2(function(a, b) {
        return {
            $: 'LineTo',
            a: a,
            b: b
        };
    });
    var $folkertdev$svg_path_lowlevel$Path$LowLevel$QuadraticBezierCurveTo = F2(function(a, b) {
        return {
            $: 'QuadraticBezierCurveTo',
            a: a,
            b: b
        };
    });
    var $folkertdev$one_true_path_experiment$LowLevel$Command$toLowLevelDrawTo = function(drawto) {
        switch(drawto.$){
            case 'LineTo':
                var coordinates = drawto.a;
                return A2($folkertdev$svg_path_lowlevel$Path$LowLevel$LineTo, $folkertdev$svg_path_lowlevel$Path$LowLevel$Absolute, coordinates);
            case 'CurveTo':
                var coordinates = drawto.a;
                return A2($folkertdev$svg_path_lowlevel$Path$LowLevel$CurveTo, $folkertdev$svg_path_lowlevel$Path$LowLevel$Absolute, coordinates);
            case 'QuadraticBezierCurveTo':
                var coordinates = drawto.a;
                return A2($folkertdev$svg_path_lowlevel$Path$LowLevel$QuadraticBezierCurveTo, $folkertdev$svg_path_lowlevel$Path$LowLevel$Absolute, coordinates);
            case 'EllipticalArc':
                var _arguments = drawto.a;
                return A2($folkertdev$svg_path_lowlevel$Path$LowLevel$EllipticalArc, $folkertdev$svg_path_lowlevel$Path$LowLevel$Absolute, _arguments);
            default:
                return $folkertdev$svg_path_lowlevel$Path$LowLevel$ClosePath;
        }
    };
    var $folkertdev$svg_path_lowlevel$Path$LowLevel$MoveTo = F2(function(a, b) {
        return {
            $: 'MoveTo',
            a: a,
            b: b
        };
    });
    var $folkertdev$one_true_path_experiment$LowLevel$Command$toLowLevelMoveTo = function(_v0) {
        var target = _v0.a;
        return A2($folkertdev$svg_path_lowlevel$Path$LowLevel$MoveTo, $folkertdev$svg_path_lowlevel$Path$LowLevel$Absolute, target);
    };
    var $folkertdev$one_true_path_experiment$SubPath$toLowLevel = function(subpath) {
        if (subpath.$ === 'Empty') return $elm$core$Maybe$Nothing;
        else {
            var moveto = subpath.a.moveto;
            var drawtos = subpath.a.drawtos;
            return $elm$core$Maybe$Just({
                drawtos: A2($elm$core$List$map, $folkertdev$one_true_path_experiment$LowLevel$Command$toLowLevelDrawTo, $folkertdev$elm_deque$Deque$toList(drawtos)),
                moveto: $folkertdev$one_true_path_experiment$LowLevel$Command$toLowLevelMoveTo(moveto)
            });
        }
    };
    var $folkertdev$svg_path_lowlevel$Path$LowLevel$defaultConfig = {
        floatFormatter: $elm$core$String$fromFloat
    };
    var $folkertdev$svg_path_lowlevel$Path$LowLevel$roundTo = F2(function(n, value) {
        if (!n) return $elm$core$String$fromInt($elm$core$Basics$round(value));
        else {
            var sign = value < 0 ? '-' : '';
            var exp = A2($elm$core$Basics$pow, 10, n);
            var raised = $elm$core$Basics$abs($elm$core$Basics$round(value * exp));
            var decimals = raised % exp;
            return !decimals ? _Utils_ap(sign, $elm$core$String$fromInt(raised / exp | 0)) : sign + ($elm$core$String$fromInt(raised / exp | 0) + ('.' + $elm$core$String$fromInt(decimals)));
        }
    });
    var $folkertdev$svg_path_lowlevel$Path$LowLevel$optionFolder = F2(function(option, config) {
        var n = option.a;
        return _Utils_update(config, {
            floatFormatter: $folkertdev$svg_path_lowlevel$Path$LowLevel$roundTo(n)
        });
    });
    var $folkertdev$svg_path_lowlevel$Path$LowLevel$accumulateOptions = A2($elm$core$List$foldl, $folkertdev$svg_path_lowlevel$Path$LowLevel$optionFolder, $folkertdev$svg_path_lowlevel$Path$LowLevel$defaultConfig);
    var $folkertdev$svg_path_lowlevel$Path$LowLevel$isEmpty = function(command) {
        switch(command.$){
            case 'LineTo':
                var mode = command.a;
                var coordinates = command.b;
                return $elm$core$List$isEmpty(coordinates);
            case 'Horizontal':
                var mode = command.a;
                var coordinates = command.b;
                return $elm$core$List$isEmpty(coordinates);
            case 'Vertical':
                var mode = command.a;
                var coordinates = command.b;
                return $elm$core$List$isEmpty(coordinates);
            case 'CurveTo':
                var mode = command.a;
                var coordinates = command.b;
                return $elm$core$List$isEmpty(coordinates);
            case 'SmoothCurveTo':
                var mode = command.a;
                var coordinates = command.b;
                return $elm$core$List$isEmpty(coordinates);
            case 'QuadraticBezierCurveTo':
                var mode = command.a;
                var coordinates = command.b;
                return $elm$core$List$isEmpty(coordinates);
            case 'SmoothQuadraticBezierCurveTo':
                var mode = command.a;
                var coordinates = command.b;
                return $elm$core$List$isEmpty(coordinates);
            case 'EllipticalArc':
                var mode = command.a;
                var _arguments = command.b;
                return $elm$core$List$isEmpty(_arguments);
            default:
                return false;
        }
    };
    var $elm$core$String$cons = _String_cons;
    var $elm$core$String$fromChar = function(_char) {
        return A2($elm$core$String$cons, _char, '');
    };
    var $elm$core$Char$toLower = _Char_toLower;
    var $elm$core$Char$toUpper = _Char_toUpper;
    var $folkertdev$svg_path_lowlevel$Path$LowLevel$stringifyCharacter = F2(function(mode, character) {
        if (mode.$ === 'Absolute') return $elm$core$String$fromChar($elm$core$Char$toUpper(character));
        else return $elm$core$String$fromChar($elm$core$Char$toLower(character));
    });
    var $folkertdev$svg_path_lowlevel$Path$LowLevel$stringifyCoordinate = F2(function(config, _v0) {
        var x = _v0.a;
        var y = _v0.b;
        return config.floatFormatter(x) + (',' + config.floatFormatter(y));
    });
    var $folkertdev$svg_path_lowlevel$Path$LowLevel$stringifyCoordinate2 = F2(function(config, _v0) {
        var c1 = _v0.a;
        var c2 = _v0.b;
        return A2($folkertdev$svg_path_lowlevel$Path$LowLevel$stringifyCoordinate, config, c1) + (' ' + A2($folkertdev$svg_path_lowlevel$Path$LowLevel$stringifyCoordinate, config, c2));
    });
    var $folkertdev$svg_path_lowlevel$Path$LowLevel$stringifyCoordinate3 = F2(function(config, _v0) {
        var c1 = _v0.a;
        var c2 = _v0.b;
        var c3 = _v0.c;
        return A2($folkertdev$svg_path_lowlevel$Path$LowLevel$stringifyCoordinate, config, c1) + (' ' + (A2($folkertdev$svg_path_lowlevel$Path$LowLevel$stringifyCoordinate, config, c2) + (' ' + A2($folkertdev$svg_path_lowlevel$Path$LowLevel$stringifyCoordinate, config, c3))));
    });
    var $folkertdev$svg_path_lowlevel$Path$LowLevel$stringifyEllipticalArcArgument = F2(function(config, _v0) {
        var radii = _v0.radii;
        var xAxisRotate = _v0.xAxisRotate;
        var arcFlag = _v0.arcFlag;
        var direction = _v0.direction;
        var target = _v0.target;
        var _v1 = $folkertdev$svg_path_lowlevel$Path$LowLevel$encodeFlags(_Utils_Tuple2(arcFlag, direction));
        var arc = _v1.a;
        var sweep = _v1.b;
        return A2($elm$core$String$join, ' ', _List_fromArray([
            A2($folkertdev$svg_path_lowlevel$Path$LowLevel$stringifyCoordinate, config, radii),
            $elm$core$String$fromFloat(xAxisRotate),
            $elm$core$String$fromInt(arc),
            $elm$core$String$fromInt(sweep),
            A2($folkertdev$svg_path_lowlevel$Path$LowLevel$stringifyCoordinate, config, target)
        ]));
    });
    var $folkertdev$svg_path_lowlevel$Path$LowLevel$stringifyDrawTo = F2(function(config, command) {
        if ($folkertdev$svg_path_lowlevel$Path$LowLevel$isEmpty(command)) return '';
        else switch(command.$){
            case 'LineTo':
                var mode = command.a;
                var coordinates = command.b;
                return _Utils_ap(A2($folkertdev$svg_path_lowlevel$Path$LowLevel$stringifyCharacter, mode, _Utils_chr('L')), A2($elm$core$String$join, ' ', A2($elm$core$List$map, $folkertdev$svg_path_lowlevel$Path$LowLevel$stringifyCoordinate(config), coordinates)));
            case 'Horizontal':
                var mode = command.a;
                var coordinates = command.b;
                return $elm$core$List$isEmpty(coordinates) ? '' : _Utils_ap(A2($folkertdev$svg_path_lowlevel$Path$LowLevel$stringifyCharacter, mode, _Utils_chr('H')), A2($elm$core$String$join, ' ', A2($elm$core$List$map, $elm$core$String$fromFloat, coordinates)));
            case 'Vertical':
                var mode = command.a;
                var coordinates = command.b;
                return _Utils_ap(A2($folkertdev$svg_path_lowlevel$Path$LowLevel$stringifyCharacter, mode, _Utils_chr('V')), A2($elm$core$String$join, ' ', A2($elm$core$List$map, $elm$core$String$fromFloat, coordinates)));
            case 'CurveTo':
                var mode = command.a;
                var coordinates = command.b;
                return _Utils_ap(A2($folkertdev$svg_path_lowlevel$Path$LowLevel$stringifyCharacter, mode, _Utils_chr('C')), A2($elm$core$String$join, ' ', A2($elm$core$List$map, $folkertdev$svg_path_lowlevel$Path$LowLevel$stringifyCoordinate3(config), coordinates)));
            case 'SmoothCurveTo':
                var mode = command.a;
                var coordinates = command.b;
                return _Utils_ap(A2($folkertdev$svg_path_lowlevel$Path$LowLevel$stringifyCharacter, mode, _Utils_chr('S')), A2($elm$core$String$join, ' ', A2($elm$core$List$map, $folkertdev$svg_path_lowlevel$Path$LowLevel$stringifyCoordinate2(config), coordinates)));
            case 'QuadraticBezierCurveTo':
                var mode = command.a;
                var coordinates = command.b;
                return _Utils_ap(A2($folkertdev$svg_path_lowlevel$Path$LowLevel$stringifyCharacter, mode, _Utils_chr('Q')), A2($elm$core$String$join, ' ', A2($elm$core$List$map, $folkertdev$svg_path_lowlevel$Path$LowLevel$stringifyCoordinate2(config), coordinates)));
            case 'SmoothQuadraticBezierCurveTo':
                var mode = command.a;
                var coordinates = command.b;
                return _Utils_ap(A2($folkertdev$svg_path_lowlevel$Path$LowLevel$stringifyCharacter, mode, _Utils_chr('T')), A2($elm$core$String$join, ' ', A2($elm$core$List$map, $folkertdev$svg_path_lowlevel$Path$LowLevel$stringifyCoordinate(config), coordinates)));
            case 'EllipticalArc':
                var mode = command.a;
                var _arguments = command.b;
                return _Utils_ap(A2($folkertdev$svg_path_lowlevel$Path$LowLevel$stringifyCharacter, mode, _Utils_chr('A')), A2($elm$core$String$join, ' ', A2($elm$core$List$map, $folkertdev$svg_path_lowlevel$Path$LowLevel$stringifyEllipticalArcArgument(config), _arguments)));
            default:
                return 'Z';
        }
    });
    var $folkertdev$svg_path_lowlevel$Path$LowLevel$stringifyMoveTo = F2(function(config, _v0) {
        var mode = _v0.a;
        var coordinate = _v0.b;
        if (mode.$ === 'Absolute') return 'M' + A2($folkertdev$svg_path_lowlevel$Path$LowLevel$stringifyCoordinate, config, coordinate);
        else return 'm' + A2($folkertdev$svg_path_lowlevel$Path$LowLevel$stringifyCoordinate, config, coordinate);
    });
    var $folkertdev$svg_path_lowlevel$Path$LowLevel$toStringSubPath = F2(function(config, _v0) {
        var moveto = _v0.moveto;
        var drawtos = _v0.drawtos;
        return A2($folkertdev$svg_path_lowlevel$Path$LowLevel$stringifyMoveTo, config, moveto) + (' ' + A2($elm$core$String$join, ' ', A2($elm$core$List$map, $folkertdev$svg_path_lowlevel$Path$LowLevel$stringifyDrawTo(config), drawtos)));
    });
    var $folkertdev$svg_path_lowlevel$Path$LowLevel$toStringWith = F2(function(options, subpaths) {
        var config = $folkertdev$svg_path_lowlevel$Path$LowLevel$accumulateOptions(options);
        return A2($elm$core$String$join, ' ', A2($elm$core$List$map, $folkertdev$svg_path_lowlevel$Path$LowLevel$toStringSubPath(config), subpaths));
    });
    var $folkertdev$one_true_path_experiment$SubPath$toStringWith = F2(function(options, subpath) {
        var config = A3($elm$core$List$foldl, $folkertdev$one_true_path_experiment$SubPath$optionFolder, $folkertdev$one_true_path_experiment$SubPath$defaultConfig, options);
        var lowLevelOptions = function() {
            var _v0 = config.decimalPlaces;
            if (_v0.$ === 'Nothing') return _List_Nil;
            else {
                var n = _v0.a;
                return _List_fromArray([
                    $folkertdev$svg_path_lowlevel$Path$LowLevel$decimalPlaces(n)
                ]);
            }
        }();
        return A2($elm$core$Maybe$withDefault, '', A2($elm$core$Maybe$map, A2($elm$core$Basics$composeL, $folkertdev$svg_path_lowlevel$Path$LowLevel$toStringWith(lowLevelOptions), $elm$core$List$singleton), $folkertdev$one_true_path_experiment$SubPath$toLowLevel((config.mergeAdjacent ? $folkertdev$one_true_path_experiment$SubPath$compress : $elm$core$Basics$identity)(subpath))));
    });
    var $folkertdev$one_true_path_experiment$SubPath$toString = function(subpath) {
        return A2($folkertdev$one_true_path_experiment$SubPath$toStringWith, _List_Nil, subpath);
    };
    var $folkertdev$one_true_path_experiment$SubPath$element = F2(function(path, attributes) {
        return A2($elm$svg$Svg$path, A2($elm$core$List$cons, $elm$svg$Svg$Attributes$d($folkertdev$one_true_path_experiment$SubPath$toString(path)), attributes), _List_Nil);
    });
    var $author$project$Elements$pointUnderRect = F2(function(_v0, _v1) {
        var x = _v0.a;
        var y = _v0.b;
        var px = _v1.a;
        var py = _v1.b;
        return _Utils_cmp(px, x - $author$project$Elements$containerWidth / 2) > 0 && _Utils_cmp(px, x + $author$project$Elements$containerWidth / 2) < 0 && _Utils_cmp(py, y - $author$project$Elements$containerHeight / 2) > 0 && _Utils_cmp(py, y + $author$project$Elements$containerHeight / 2) < 0;
    });
    var $author$project$Elements$filterPointsUnderContainer = F2(function(sourceXY, targetXY) {
        return A2($elm$core$Basics$composeR, A2($elm$core$List$foldl, F2(function(point, result) {
            return $elm$core$List$isEmpty(result) && A2($author$project$Elements$pointUnderRect, sourceXY, point) ? result : A2($elm$core$List$cons, point, result);
        }), _List_Nil), A2($elm$core$List$foldl, F2(function(point, result) {
            return $elm$core$List$isEmpty(result) && A2($author$project$Elements$pointUnderRect, targetXY, point) ? result : A2($elm$core$List$cons, point, result);
        }), _List_Nil));
    });
    var $elm_community$typed_svg$TypedSvg$Attributes$fontSize = function(length) {
        return A2($elm_community$typed_svg$TypedSvg$Core$attribute, 'font-size', $elm_community$typed_svg$TypedSvg$TypesToStrings$lengthToString(length));
    };
    var $folkertdev$one_true_path_experiment$Curve$linear = function(points) {
        if (!points.b) return $folkertdev$one_true_path_experiment$SubPath$empty;
        else {
            var x = points.a;
            var xs = points.b;
            return A2($folkertdev$one_true_path_experiment$SubPath$with, $folkertdev$one_true_path_experiment$LowLevel$Command$moveTo(x), _List_fromArray([
                $folkertdev$one_true_path_experiment$LowLevel$Command$lineTo(xs)
            ]));
        }
    };
    var $gampleman$elm_visualization$Shape$linearCurve = $folkertdev$one_true_path_experiment$Curve$linear;
    var $elm_community$typed_svg$TypedSvg$path = $elm_community$typed_svg$TypedSvg$Core$node('path');
    var $elm_community$typed_svg$TypedSvg$Attributes$startOffset = $elm_community$typed_svg$TypedSvg$Core$attribute('startOffset');
    var $elm_community$typed_svg$TypedSvg$TypesToStrings$opacityToString = function(opacity) {
        if (opacity.$ === 'Opacity') {
            var n = opacity.a;
            return $elm$core$String$fromFloat(n);
        } else return 'inherit';
    };
    var $elm_community$typed_svg$TypedSvg$Attributes$strokeOpacity = A2($elm$core$Basics$composeL, $elm_community$typed_svg$TypedSvg$Core$attribute('stroke-opacity'), $elm_community$typed_svg$TypedSvg$TypesToStrings$opacityToString);
    var $elm_community$typed_svg$TypedSvg$Attributes$style = function(value) {
        return A2($elm_community$typed_svg$TypedSvg$Core$attribute, 'style', value);
    };
    var $elm_community$typed_svg$TypedSvg$textPath = $elm_community$typed_svg$TypedSvg$Core$node('textPath');
    var $folkertdev$one_true_path_experiment$Path$toString = A2($elm$core$Basics$composeL, $elm$core$String$join(' '), $elm$core$List$map($folkertdev$one_true_path_experiment$SubPath$toString));
    var $elm_community$typed_svg$TypedSvg$TypesToStrings$transformToString = function(xform) {
        var tr = F2(function(name, args) {
            return $elm$core$String$concat(_List_fromArray([
                name,
                '(',
                A2($elm$core$String$join, ' ', A2($elm$core$List$map, $elm$core$String$fromFloat, args)),
                ')'
            ]));
        });
        switch(xform.$){
            case 'Matrix':
                var a = xform.a;
                var b = xform.b;
                var c = xform.c;
                var d = xform.d;
                var e = xform.e;
                var f = xform.f;
                return A2(tr, 'matrix', _List_fromArray([
                    a,
                    b,
                    c,
                    d,
                    e,
                    f
                ]));
            case 'Rotate':
                var a = xform.a;
                var x = xform.b;
                var y = xform.c;
                return A2(tr, 'rotate', _List_fromArray([
                    a,
                    x,
                    y
                ]));
            case 'Scale':
                var x = xform.a;
                var y = xform.b;
                return A2(tr, 'scale', _List_fromArray([
                    x,
                    y
                ]));
            case 'SkewX':
                var x = xform.a;
                return A2(tr, 'skewX', _List_fromArray([
                    x
                ]));
            case 'SkewY':
                var y = xform.a;
                return A2(tr, 'skewY', _List_fromArray([
                    y
                ]));
            default:
                var x = xform.a;
                var y = xform.b;
                return A2(tr, 'translate', _List_fromArray([
                    x,
                    y
                ]));
        }
    };
    var $elm_community$typed_svg$TypedSvg$Attributes$transform = function(transforms) {
        return A2($elm_community$typed_svg$TypedSvg$Core$attribute, 'transform', A2($elm$core$String$join, ' ', A2($elm$core$List$map, $elm_community$typed_svg$TypedSvg$TypesToStrings$transformToString, transforms)));
    };
    var $elm$virtual_dom$VirtualDom$attributeNS = F3(function(namespace, key, value) {
        return A3(_VirtualDom_attributeNS, namespace, _VirtualDom_noOnOrFormAction(key), _VirtualDom_noJavaScriptOrHtmlUri(value));
    });
    var $elm_community$typed_svg$TypedSvg$Core$attributeNS = $elm$virtual_dom$VirtualDom$attributeNS;
    var $elm_community$typed_svg$TypedSvg$Attributes$xlinkHref = A2($elm_community$typed_svg$TypedSvg$Core$attributeNS, 'http://www.w3.org/1999/xlink', 'xlink:href');
    var $author$project$Elements$edgeBetweenContainers = F4(function(edge, addPointEvent, removeOrDragPointEvent, selectedIndexes) {
        var tooltip = A2($elm$core$String$join, ' ', _List_fromArray([
            '\'' + (edge.source.name + '\''),
            edge.description,
            '\'' + (edge.target.name + '\'')
        ]));
        var strokeWidthValue = 1;
        var points = A3($author$project$Elements$filterPointsUnderContainer, edge.source.xy, edge.target.xy, edge.points);
        var magicOffset = 9;
        var idValue = 'from-' + (edge.source.name + ('-to-' + edge.target.name));
        var addPointEventToAdd = function() {
            if (addPointEvent.$ === 'Just') {
                var ev = addPointEvent.a;
                return _List_fromArray([
                    ev
                ]);
            } else return _List_Nil;
        }();
        var _v0 = edge.target.xy;
        var tx = _v0.a;
        var ty = _v0.b;
        var _v1 = edge.source.xy;
        var sx = _v1.a;
        var sy = _v1.b;
        var preparedPoints = A2($elm$core$List$cons, _Utils_Tuple2(sx, sy), _Utils_ap(points, _List_fromArray([
            _Utils_Tuple2(tx, ty)
        ])));
        var curve = $gampleman$elm_visualization$Shape$linearCurve(preparedPoints);
        var curveLength = $folkertdev$one_true_path_experiment$SubPath$arcLength(A2($folkertdev$one_true_path_experiment$SubPath$arcLengthParameterized, 0.0001, curve));
        var _v2 = _Utils_Tuple2($author$project$Elements$containerWidth / 2, $author$project$Elements$containerHeight / 2);
        var rx = _v2.a;
        var ry = _v2.b;
        var _v3 = A2($elm$core$Maybe$withDefault, edge.source.xy, $elm$core$List$head($elm$core$List$reverse(points)));
        var cx = _v3.a;
        var cy = _v3.b;
        var _v4 = _Utils_Tuple2($elm$core$Basics$abs(cx - tx), $elm$core$Basics$abs(cy - ty));
        var x = _v4.a;
        var y = _v4.b;
        var distanceXY = $elm$core$Basics$sqrt(x * x + y * y);
        var topBottom = _Utils_cmp(y / x, ry / rx) > 0;
        var offset = function() {
            var temp = topBottom ? ry / y : rx / x;
            return curveLength - distanceXY * temp - magicOffset;
        }();
        return A2($elm_community$typed_svg$TypedSvg$g, _List_Nil, _List_fromArray([
            A2($folkertdev$one_true_path_experiment$SubPath$element, curve, _List_fromArray([
                $elm_community$typed_svg$TypedSvg$Attributes$id(idValue),
                $elm_community$typed_svg$TypedSvg$Attributes$strokeWidth($elm_community$typed_svg$TypedSvg$Types$Px(strokeWidthValue)),
                $elm_community$typed_svg$TypedSvg$Attributes$stroke($elm_community$typed_svg$TypedSvg$Types$Paint($avh4$elm_color$Color$black)),
                $elm_community$typed_svg$TypedSvg$Attributes$fill($elm_community$typed_svg$TypedSvg$Types$PaintNone)
            ])),
            A2($elm_community$typed_svg$TypedSvg$path, _Utils_ap(_List_fromArray([
                $elm_community$typed_svg$TypedSvg$Attributes$d($folkertdev$one_true_path_experiment$SubPath$toString(curve)),
                $elm_community$typed_svg$TypedSvg$Attributes$strokeWidth($elm_community$typed_svg$TypedSvg$Types$Px(strokeWidthValue + $author$project$Elements$edgeStrokeWidthExtend)),
                $elm_community$typed_svg$TypedSvg$Attributes$stroke($elm_community$typed_svg$TypedSvg$Types$Paint($avh4$elm_color$Color$black)),
                $elm_community$typed_svg$TypedSvg$Attributes$strokeOpacity($elm_community$typed_svg$TypedSvg$Types$Opacity(0)),
                $elm_community$typed_svg$TypedSvg$Attributes$fill($elm_community$typed_svg$TypedSvg$Types$PaintNone)
            ]), addPointEventToAdd), _List_fromArray([
                A2($elm_community$typed_svg$TypedSvg$title, _List_Nil, _List_fromArray([
                    $elm_community$typed_svg$TypedSvg$Core$text(tooltip)
                ]))
            ])),
            A2($elm_community$typed_svg$TypedSvg$text_, _List_Nil, _List_fromArray([
                A2($elm_community$typed_svg$TypedSvg$textPath, _List_fromArray([
                    $elm_community$typed_svg$TypedSvg$Attributes$xlinkHref('#' + idValue),
                    $elm_community$typed_svg$TypedSvg$Attributes$startOffset($elm$core$String$fromFloat(offset)),
                    $elm_community$typed_svg$TypedSvg$Attributes$dominantBaseline($elm_community$typed_svg$TypedSvg$Types$DominantBaselineCentral),
                    $elm_community$typed_svg$TypedSvg$Attributes$fontSize($elm_community$typed_svg$TypedSvg$Types$Px(10)),
                    $elm_community$typed_svg$TypedSvg$Attributes$style('user-select: none;')
                ]), _List_fromArray([
                    $elm_community$typed_svg$TypedSvg$Core$text('➤')
                ]))
            ])),
            A2($elm_community$typed_svg$TypedSvg$g, _List_Nil, A2($elm$core$List$indexedMap, F2(function(i, _v5) {
                var dx = _v5.a;
                var dy = _v5.b;
                var eventToAdd = function() {
                    if (removeOrDragPointEvent.$ === 'Just') {
                        var ev = removeOrDragPointEvent.a;
                        return _List_fromArray([
                            ev(i)
                        ]);
                    } else return _List_Nil;
                }();
                return A2($elm_community$typed_svg$TypedSvg$path, _Utils_ap(_List_fromArray([
                    $elm_community$typed_svg$TypedSvg$Attributes$d($folkertdev$one_true_path_experiment$Path$toString($author$project$Elements$circleDot)),
                    $elm_community$typed_svg$TypedSvg$Attributes$fill($elm_community$typed_svg$TypedSvg$Types$Paint($avh4$elm_color$Color$white)),
                    $elm_community$typed_svg$TypedSvg$Attributes$stroke($elm_community$typed_svg$TypedSvg$Types$Paint(A2($elm$core$List$member, i, selectedIndexes) ? $avh4$elm_color$Color$blue : $avh4$elm_color$Color$black)),
                    $elm_community$typed_svg$TypedSvg$Attributes$transform(_List_fromArray([
                        A2($elm_community$typed_svg$TypedSvg$Types$Translate, dx, dy)
                    ]))
                ]), eventToAdd), _List_fromArray([
                    A2($elm_community$typed_svg$TypedSvg$title, _List_Nil, _List_fromArray([
                        $elm_community$typed_svg$TypedSvg$Core$text(tooltip)
                    ]))
                ]));
            }), points))
        ]));
    });
    var $author$project$Main$noOpIfPanMode = F2(function(panMode, ev) {
        return panMode ? $elm$core$Maybe$Nothing : $elm$core$Maybe$Just(ev);
    });
    var $author$project$Main$DragPointStart = F2(function(a, b) {
        return {
            $: 'DragPointStart',
            a: a,
            b: b
        };
    });
    var $author$project$Main$RemovePoint = function(a) {
        return {
            $: 'RemovePoint',
            a: a
        };
    };
    var $author$project$Main$onMouseDownPoint = F2(function(_v0, index) {
        var viewRelationElementKey = _v0.a;
        var relation = _v0.b;
        var viewRelationPointKey = _Utils_Tuple3(viewRelationElementKey, relation, index);
        return $mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$onDown(function(e) {
            var _v1 = e.button;
            switch(_v1.$){
                case 'MainButton':
                    return A2($author$project$Main$DragPointStart, viewRelationPointKey, e.clientPos);
                case 'SecondButton':
                    return $author$project$Main$RemovePoint(viewRelationPointKey);
                default:
                    return $author$project$Main$NoOp;
            }
        });
    });
    var $author$project$Main$linkElement = F2(function(panMode, edge) {
        var viewRelationKey = $author$project$Domain$getViewRelationKeyFromEdge(edge);
        return A3($author$project$Elements$edgeBetweenContainers, edge, A2($author$project$Main$noOpIfPanMode, panMode, $author$project$Main$mouseDownMain($author$project$Main$ClickEdgeStart(viewRelationKey))), panMode ? $elm$core$Maybe$Nothing : $elm$core$Maybe$Just($author$project$Main$onMouseDownPoint(viewRelationKey)));
    });
    var $author$project$Main$drawEdge = F3(function(panMode, selectedItems, edge) {
        var getSelectedPointIndex = function(vpk) {
            if (_Utils_eq($author$project$Domain$getViewRelationKeyFromViewRelationPointKey(vpk), $author$project$Domain$getViewRelationKeyFromEdge(edge))) {
                var _v0 = vpk;
                var viewRelationPointIndex = _v0.c;
                return $elm$core$Maybe$Just(viewRelationPointIndex);
            } else return $elm$core$Maybe$Nothing;
        };
        return A3($author$project$Main$linkElement, panMode, edge, A2($elm$core$List$filterMap, getSelectedPointIndex, A2($elm$core$List$map, $elm$core$Tuple$first, $author$project$Main$getSelectedPointKeysAndDeltas(selectedItems))));
    });
    var $author$project$Domain$Container = F4(function(name, key, description, xy) {
        return {
            description: description,
            key: key,
            name: name,
            xy: xy
        };
    });
    var $author$project$Domain$extractKeyAndNameAndDescription = A2($elm$core$Basics$composeR, $elm$core$Dict$map(F2(function(k, v) {
        return _Utils_Tuple3(k, v.name, v.description);
    })), $elm$core$Dict$values);
    var $author$project$Domain$getElementsNamesAndDescriptions = function(domain) {
        return _Utils_ap($author$project$Domain$extractKeyAndNameAndDescription(domain.actors), _Utils_ap($author$project$Domain$extractKeyAndNameAndDescription(domain.rings), _Utils_ap(A2($elm$core$List$concatMap, $author$project$Domain$extractKeyAndNameAndDescription, A2($elm$core$List$map, function($) {
            return $.delivery;
        }, $elm$core$Dict$values(domain.rings))), A2($elm$core$List$concatMap, $author$project$Domain$extractKeyAndNameAndDescription, A2($elm$core$List$map, function($) {
            return $.blocks;
        }, A2($elm$core$List$concatMap, $elm$core$Dict$values, A2($elm$core$List$map, function($) {
            return $.delivery;
        }, $elm$core$Dict$values(domain.rings))))))));
    };
    var $author$project$Domain$getNameAndDescriptionByKey = function(viewElementKey) {
        return A2($elm$core$Basics$composeR, $elm$core$List$filterMap(function(_v0) {
            var k = _v0.a;
            var name = _v0.b;
            var description = _v0.c;
            return _Utils_eq(k, viewElementKey) ? $elm$core$Maybe$Just(_Utils_Tuple2(name, description)) : $elm$core$Maybe$Nothing;
        }), $elm$core$List$head);
    };
    var $author$project$Domain$getContainers = function(_v0) {
        var domain = _v0.a;
        var currentView = _v0.b;
        var elementsNamesAndDescriptions = $author$project$Domain$getElementsNamesAndDescriptions(domain);
        return A2($elm$core$List$filterMap, function(_v1) {
            var viewElementKey = _v1.a;
            var viewElement = _v1.b;
            return A2($elm$core$Maybe$map, function(_v2) {
                var name = _v2.a;
                var description = _v2.b;
                return A4($author$project$Domain$Container, name, viewElementKey, description, A2($elm$core$Tuple$pair, viewElement.x, viewElement.y));
            }, A2($author$project$Domain$getNameAndDescriptionByKey, viewElementKey, elementsNamesAndDescriptions));
        }, $elm$core$Dict$toList(currentView.elements));
    };
    var $author$project$Domain$Edge = F4(function(source, target, points, description) {
        return {
            description: description,
            points: points,
            source: source,
            target: target
        };
    });
    var $author$project$Domain$getEdges = function(_v0) {
        var domain = _v0.a;
        var currentView = _v0.b;
        var getTargetElement = function(key) {
            return A2($elm$core$Dict$get, key, currentView.elements);
        };
        var getTargetAndPoints = function(_v6) {
            var viewElementKey = _v6.a;
            var viewElement = _v6.b;
            var source = A2($elm$core$Tuple$pair, viewElement.x, viewElement.y);
            var elementsNamesAndDescriptions = $author$project$Domain$getElementsNamesAndDescriptions(domain);
            var sourceNameAndDescription = A2($author$project$Domain$getNameAndDescriptionByKey, viewElementKey, elementsNamesAndDescriptions);
            if (sourceNameAndDescription.$ === 'Just') {
                var _v2 = sourceNameAndDescription.a;
                var sourceName = _v2.a;
                var sourceDescription = _v2.b;
                var sourceContainer = A4($author$project$Domain$Container, sourceName, viewElementKey, sourceDescription, source);
                return A2($elm$core$List$filterMap, function(_v4) {
                    var relation = _v4.a;
                    var targetElement = _v4.b;
                    var points = _v4.c;
                    var targetElementKey = relation.a;
                    var target = A2($elm$core$Tuple$pair, targetElement.x, targetElement.y);
                    var description = relation.b;
                    var convertedViewRelationPoints = A2($elm$core$List$map, function(vrp) {
                        return A2($elm$core$Tuple$pair, vrp.x, vrp.y);
                    }, points);
                    return A2($elm$core$Maybe$map, function(_v5) {
                        var targetName = _v5.a;
                        var targetDescription = _v5.b;
                        var targetContainer = A4($author$project$Domain$Container, targetName, targetElementKey, targetDescription, target);
                        return A4($author$project$Domain$Edge, sourceContainer, targetContainer, convertedViewRelationPoints, description);
                    }, A2($author$project$Domain$getNameAndDescriptionByKey, targetElementKey, elementsNamesAndDescriptions));
                }, A2($elm$core$List$filterMap, function(_v3) {
                    var relation = _v3.a;
                    var points = _v3.b;
                    return A2($elm$core$Maybe$map, function(te) {
                        return _Utils_Tuple3(relation, te, points);
                    }, getTargetElement(relation.a));
                }, $elm$core$Dict$toList(viewElement.relations)));
            } else return _List_Nil;
        };
        return A2($elm$core$List$concatMap, getTargetAndPoints, $elm$core$Dict$toList(currentView.elements));
    };
    var $author$project$Main$renderCurrentView = F2(function(_v0, model) {
        var views = _v0.a;
        var domain = _v0.b;
        var selectedView = _v0.c;
        if (model.$ === 'Init') return $elm$html$Html$text('');
        else {
            var panMode = model.a.panMode;
            var selectedItems = model.a.selectedItems;
            var _v2 = _Utils_Tuple2(A2($author$project$Domain$getCurrentView, selectedView, views), domain);
            if (_v2.a.$ === 'Just' && _v2.b.$ === 'Just') {
                var v = _v2.a.a;
                var d = _v2.b.a;
                return A2($elm_community$typed_svg$TypedSvg$g, _List_Nil, _List_fromArray([
                    A2($elm_community$typed_svg$TypedSvg$g, _List_fromArray([
                        $elm_community$typed_svg$TypedSvg$Attributes$class(_List_fromArray([
                            'links'
                        ]))
                    ]), A2($elm$core$List$map, A2($author$project$Main$drawEdge, panMode, selectedItems), $author$project$Domain$getEdges(_Utils_Tuple2(d, v)))),
                    A2($elm_community$typed_svg$TypedSvg$g, _List_fromArray([
                        $elm_community$typed_svg$TypedSvg$Attributes$class(_List_fromArray([
                            'nodes'
                        ]))
                    ]), A2($elm$core$List$map, A2($author$project$Main$drawContainer, panMode, selectedItems), $author$project$Domain$getContainers(_Utils_Tuple2(d, v))))
                ]));
            } else return $elm$html$Html$text('');
        }
    });
    var $elm_community$typed_svg$TypedSvg$Attributes$fillOpacity = function(opa) {
        return A2($elm_community$typed_svg$TypedSvg$Core$attribute, 'fill-opacity', $elm_community$typed_svg$TypedSvg$TypesToStrings$opacityToString(opa));
    };
    var $author$project$Elements$rectToSelect = F2(function(_v0, _v1) {
        var xValue = _v0.a;
        var yValue = _v0.b;
        var w = _v1.a;
        var h = _v1.b;
        return A2($elm_community$typed_svg$TypedSvg$rect, _List_fromArray([
            $elm_community$typed_svg$TypedSvg$Attributes$x($elm_community$typed_svg$TypedSvg$Types$Px(xValue)),
            $elm_community$typed_svg$TypedSvg$Attributes$fill($elm_community$typed_svg$TypedSvg$Types$Paint($avh4$elm_color$Color$blue)),
            $elm_community$typed_svg$TypedSvg$Attributes$fillOpacity($elm_community$typed_svg$TypedSvg$Types$Opacity(0.3)),
            $elm_community$typed_svg$TypedSvg$Attributes$y($elm_community$typed_svg$TypedSvg$Types$Px(yValue)),
            $elm_community$typed_svg$TypedSvg$Attributes$stroke($elm_community$typed_svg$TypedSvg$Types$Paint($avh4$elm_color$Color$white)),
            $elm_community$typed_svg$TypedSvg$Attributes$width($elm_community$typed_svg$TypedSvg$Types$Px(w)),
            $elm_community$typed_svg$TypedSvg$Attributes$height($elm_community$typed_svg$TypedSvg$Types$Px(h))
        ]), _List_Nil);
    });
    var $author$project$Elements$selectItemsRect = F2(function(start, end) {
        var width = $elm$core$Basics$abs(end.a - start.a);
        var height = $elm$core$Basics$abs(end.b - start.b);
        var _v0 = end;
        var x2 = _v0.a;
        var y2 = _v0.b;
        var _v1 = start;
        var x1 = _v1.a;
        var y1 = _v1.b;
        return A2($author$project$Elements$rectToSelect, _Utils_Tuple2(A2($elm$core$Basics$min, x1, x2), A2($elm$core$Basics$min, y1, y2)), _Utils_Tuple2(width, height));
    });
    var $author$project$Main$renderSelectRect = function(model) {
        if (model.$ === 'Init') return $elm$html$Html$text('');
        else {
            var brush = model.a.brush;
            if (brush.$ === 'Just') {
                var start = brush.a.start;
                var end = brush.a.end;
                return A2($author$project$Elements$selectItemsRect, start, end);
            } else return $elm$html$Html$text('');
        }
    };
    var $elm_community$typed_svg$TypedSvg$svg = $elm_community$typed_svg$TypedSvg$Core$node('svg');
    var $gampleman$elm_visualization$Zoom$Transform$toString = function(_v0) {
        var k = _v0.k;
        var x = _v0.x;
        var y = _v0.y;
        return 'translate(' + ($elm$core$String$fromFloat(x) + (',' + ($elm$core$String$fromFloat(y) + (') scale(' + ($elm$core$String$fromFloat(k) + ')')))));
    };
    var $elm$svg$Svg$Attributes$transform = _VirtualDom_attribute('transform');
    var $gampleman$elm_visualization$Zoom$transform = function(_v0) {
        var zoom = _v0.a;
        return $elm$svg$Svg$Attributes$transform($gampleman$elm_visualization$Zoom$Transform$toString(zoom.transform));
    };
    var $author$project$Main$svgView = F2(function(_v0, model) {
        var views = _v0.a;
        var domain = _v0.b;
        var selectedView = _v0.c;
        var zoomTransformAttr = function() {
            if (model.$ === 'Init') return $elm_community$typed_svg$TypedSvg$Attributes$class(_List_Nil);
            else {
                var zoom = model.a.zoom;
                return $gampleman$elm_visualization$Zoom$transform(zoom);
            }
        }();
        var transform10 = function() {
            if (model.$ === 'Init') return $author$project$Elements$gridCellSize;
            else {
                var zoom = model.a.zoom;
                return 10 * $gampleman$elm_visualization$Zoom$asRecord(zoom).scale;
            }
        }();
        var transform100 = transform10 * 10;
        var selectItemsEvents = $author$project$Main$mouseDownMain($author$project$Main$SelectItemsStart);
        var gridRectEvents = function() {
            if (model.$ === 'Init') return _List_Nil;
            else {
                var zoom = model.a.zoom;
                var panMode = model.a.panMode;
                return _Utils_ap(_List_fromArray([
                    A2($gampleman$elm_visualization$Zoom$onDoubleClick, zoom, $author$project$Main$ZoomMsg),
                    A2($gampleman$elm_visualization$Zoom$onWheel, zoom, $author$project$Main$ZoomMsg)
                ]), panMode ? A2($gampleman$elm_visualization$Zoom$onDrag, zoom, $author$project$Main$ZoomMsg) : _List_fromArray([
                    selectItemsEvents
                ]));
            }
        }();
        var getXY = function() {
            if (model.$ === 'Init') return _Utils_Tuple2(0, 0);
            else {
                var zoom = model.a.zoom;
                return function(t) {
                    return _Utils_Tuple2(A2($author$project$Main$floatRemainderBy, transform100, t.x), A2($author$project$Main$floatRemainderBy, transform100, t.y));
                }($gampleman$elm_visualization$Zoom$asRecord(zoom).translate);
            }
        }();
        var _v1 = getXY;
        var x = _v1.a;
        var y = _v1.b;
        return A2($elm$html$Html$div, _List_fromArray([
            A2($elm$html$Html$Attributes$style, 'width', '100%'),
            A2($elm$html$Html$Attributes$style, 'height', '100%')
        ]), _List_fromArray([
            A2($elm_community$typed_svg$TypedSvg$svg, _List_fromArray([
                $elm_community$typed_svg$TypedSvg$Attributes$id($author$project$Main$elementId),
                $elm_community$typed_svg$TypedSvg$Attributes$width($elm_community$typed_svg$TypedSvg$Types$Percent(100)),
                $elm_community$typed_svg$TypedSvg$Attributes$height($elm_community$typed_svg$TypedSvg$Types$Percent(100)),
                $mpizenberg$elm_pointer_events$Html$Events$Extra$Mouse$onContextMenu(function(_v2) {
                    return $author$project$Main$NoOp;
                })
            ]), _List_fromArray([
                A2($elm_community$typed_svg$TypedSvg$defs, _List_Nil, _List_fromArray([
                    $author$project$Elements$innerGrid(transform10),
                    A3($author$project$Elements$grid, x, y, transform100),
                    $author$project$Elements$markerDot
                ])),
                $author$project$Elements$gridRect(gridRectEvents),
                A2($elm_community$typed_svg$TypedSvg$g, _List_fromArray([
                    zoomTransformAttr
                ]), _List_fromArray([
                    A2($author$project$Main$renderCurrentView, _Utils_Tuple3(views, domain, selectedView), model),
                    $author$project$Main$renderSelectRect(model)
                ]))
            ]))
        ]));
    });
    var $whale9490$elm_split_pane$Bound$getValue = function(value) {
        return value.a;
    };
    var $elm$core$Debug$toString = _Debug_toString;
    var $whale9490$elm_split_pane$SplitPane$firstChildViewStyle = function(_v0) {
        var state = _v0.a;
        var _v1 = state.splitterPosition;
        if (_v1.$ === 'Px') {
            var p = _v1.a;
            var v = $elm$core$Debug$toString($whale9490$elm_split_pane$Bound$getValue(p)) + 'px';
            var _v2 = state.orientation;
            if (_v2.$ === 'Horizontal') return _List_fromArray([
                A2($elm$html$Html$Attributes$style, 'display', 'flex'),
                A2($elm$html$Html$Attributes$style, 'width', v),
                A2($elm$html$Html$Attributes$style, 'height', '100%'),
                A2($elm$html$Html$Attributes$style, 'overflow', 'hidden'),
                A2($elm$html$Html$Attributes$style, 'boxSizing', 'border-box'),
                A2($elm$html$Html$Attributes$style, 'position', 'relative')
            ]);
            else return _List_fromArray([
                A2($elm$html$Html$Attributes$style, 'display', 'flex'),
                A2($elm$html$Html$Attributes$style, 'width', '100%'),
                A2($elm$html$Html$Attributes$style, 'height', v),
                A2($elm$html$Html$Attributes$style, 'overflow', 'hidden'),
                A2($elm$html$Html$Attributes$style, 'boxSizing', 'border-box'),
                A2($elm$html$Html$Attributes$style, 'position', 'relative')
            ]);
        } else {
            var p = _v1.a;
            var v = $elm$core$Debug$toString($whale9490$elm_split_pane$Bound$getValue(p));
            return _List_fromArray([
                A2($elm$html$Html$Attributes$style, 'display', 'flex'),
                A2($elm$html$Html$Attributes$style, 'flex', v),
                A2($elm$html$Html$Attributes$style, 'width', '100%'),
                A2($elm$html$Html$Attributes$style, 'height', '100%'),
                A2($elm$html$Html$Attributes$style, 'overflow', 'hidden'),
                A2($elm$html$Html$Attributes$style, 'boxSizing', 'border-box'),
                A2($elm$html$Html$Attributes$style, 'position', 'relative')
            ]);
        }
    };
    var $whale9490$elm_split_pane$SplitPane$CustomSplitter = function(a) {
        return {
            $: 'CustomSplitter',
            a: a
        };
    };
    var $whale9490$elm_split_pane$SplitPane$SplitterClick = function(a) {
        return {
            $: 'SplitterClick',
            a: a
        };
    };
    var $whale9490$elm_split_pane$SplitPane$DOMInfo = F6(function(x, y, touchX, touchY, parentWidth, parentHeight) {
        return {
            parentHeight: parentHeight,
            parentWidth: parentWidth,
            touchX: touchX,
            touchY: touchY,
            x: x,
            y: y
        };
    });
    var $elm$json$Json$Decode$maybe = function(decoder) {
        return $elm$json$Json$Decode$oneOf(_List_fromArray([
            A2($elm$json$Json$Decode$map, $elm$core$Maybe$Just, decoder),
            $elm$json$Json$Decode$succeed($elm$core$Maybe$Nothing)
        ]));
    };
    var $whale9490$elm_split_pane$SplitPane$domInfo = A7($elm$json$Json$Decode$map6, $whale9490$elm_split_pane$SplitPane$DOMInfo, $elm$json$Json$Decode$maybe(A2($elm$json$Json$Decode$field, 'clientX', $elm$json$Json$Decode$int)), $elm$json$Json$Decode$maybe(A2($elm$json$Json$Decode$field, 'clientY', $elm$json$Json$Decode$int)), $elm$json$Json$Decode$maybe(A2($elm$json$Json$Decode$at, _List_fromArray([
        'touches',
        '0',
        'clientX'
    ]), $elm$json$Json$Decode$int)), $elm$json$Json$Decode$maybe(A2($elm$json$Json$Decode$at, _List_fromArray([
        'touches',
        '0',
        'clientY'
    ]), $elm$json$Json$Decode$int)), A2($elm$json$Json$Decode$at, _List_fromArray([
        'currentTarget',
        'parentElement',
        'clientWidth'
    ]), $elm$json$Json$Decode$int), A2($elm$json$Json$Decode$at, _List_fromArray([
        'currentTarget',
        'parentElement',
        'clientHeight'
    ]), $elm$json$Json$Decode$int));
    var $whale9490$elm_split_pane$SplitPane$onMouseDown = function(toMsg) {
        return A2($elm$html$Html$Events$custom, 'mousedown', A2($elm$json$Json$Decode$map, function(d) {
            return {
                message: toMsg($whale9490$elm_split_pane$SplitPane$SplitterClick(d)),
                preventDefault: true,
                stopPropagation: false
            };
        }, $whale9490$elm_split_pane$SplitPane$domInfo));
    };
    var $whale9490$elm_split_pane$SplitPane$domInfoToPosition = function(_v0) {
        var x = _v0.x;
        var y = _v0.y;
        var touchX = _v0.touchX;
        var touchY = _v0.touchY;
        var _v1 = _Utils_Tuple2(_Utils_Tuple2(x, y), _Utils_Tuple2(touchX, touchY));
        if (_v1.b.a.$ === 'Just' && _v1.b.b.$ === 'Just') {
            var _v2 = _v1.b;
            var posX = _v2.a.a;
            var posY = _v2.b.a;
            return {
                x: posX,
                y: posY
            };
        } else {
            if (_v1.a.a.$ === 'Just' && _v1.a.b.$ === 'Just') {
                var _v3 = _v1.a;
                var posX = _v3.a.a;
                var posY = _v3.b.a;
                return {
                    x: posX,
                    y: posY
                };
            } else return {
                x: 0,
                y: 0
            };
        }
    };
    var $whale9490$elm_split_pane$SplitPane$onTouchCancel = function(toMsg) {
        return A2($elm$html$Html$Events$custom, 'touchcancel', A2($elm$json$Json$Decode$map, function(d) {
            return {
                message: toMsg($whale9490$elm_split_pane$SplitPane$SplitterLeftAlone($whale9490$elm_split_pane$SplitPane$domInfoToPosition(d))),
                preventDefault: true,
                stopPropagation: true
            };
        }, $whale9490$elm_split_pane$SplitPane$domInfo));
    };
    var $whale9490$elm_split_pane$SplitPane$onTouchEnd = function(toMsg) {
        return A2($elm$html$Html$Events$custom, 'touchend', A2($elm$json$Json$Decode$map, function(d) {
            return {
                message: toMsg($whale9490$elm_split_pane$SplitPane$SplitterLeftAlone($whale9490$elm_split_pane$SplitPane$domInfoToPosition(d))),
                preventDefault: true,
                stopPropagation: true
            };
        }, $whale9490$elm_split_pane$SplitPane$domInfo));
    };
    var $whale9490$elm_split_pane$SplitPane$onTouchMove = function(toMsg) {
        return A2($elm$html$Html$Events$custom, 'touchmove', A2($elm$json$Json$Decode$map, function(d) {
            return {
                message: toMsg($whale9490$elm_split_pane$SplitPane$SplitterMove($whale9490$elm_split_pane$SplitPane$domInfoToPosition(d))),
                preventDefault: true,
                stopPropagation: true
            };
        }, $whale9490$elm_split_pane$SplitPane$domInfo));
    };
    var $whale9490$elm_split_pane$SplitPane$onTouchStart = function(toMsg) {
        return A2($elm$html$Html$Events$custom, 'touchstart', A2($elm$json$Json$Decode$map, function(d) {
            return {
                message: toMsg($whale9490$elm_split_pane$SplitPane$SplitterClick(d)),
                preventDefault: true,
                stopPropagation: true
            };
        }, $whale9490$elm_split_pane$SplitPane$domInfo));
    };
    var $elm$html$Html$span = _VirtualDom_node('span');
    var $whale9490$elm_split_pane$SplitPane$createCustomSplitter = F2(function(toMsg, details) {
        return $whale9490$elm_split_pane$SplitPane$CustomSplitter(A2($elm$html$Html$span, A2($elm$core$List$cons, $whale9490$elm_split_pane$SplitPane$onMouseDown(toMsg), A2($elm$core$List$cons, $whale9490$elm_split_pane$SplitPane$onTouchStart(toMsg), A2($elm$core$List$cons, $whale9490$elm_split_pane$SplitPane$onTouchEnd(toMsg), A2($elm$core$List$cons, $whale9490$elm_split_pane$SplitPane$onTouchMove(toMsg), A2($elm$core$List$cons, $whale9490$elm_split_pane$SplitPane$onTouchCancel(toMsg), details.attributes))))), details.children));
    });
    var $whale9490$elm_split_pane$SplitPane$baseDefaultSplitterStyles = _List_fromArray([
        A2($elm$html$Html$Attributes$style, 'width', '100%'),
        A2($elm$html$Html$Attributes$style, 'background', '#000'),
        A2($elm$html$Html$Attributes$style, 'boxSizing', 'border-box'),
        A2($elm$html$Html$Attributes$style, 'opacity', '.2'),
        A2($elm$html$Html$Attributes$style, 'zIndex', '1'),
        A2($elm$html$Html$Attributes$style, 'webkitUserSelect', 'none'),
        A2($elm$html$Html$Attributes$style, 'mozUserSelect', 'none'),
        A2($elm$html$Html$Attributes$style, 'userSelect', 'none'),
        A2($elm$html$Html$Attributes$style, 'backgroundClip', 'padding-box')
    ]);
    var $whale9490$elm_split_pane$SplitPane$defaultHorizontalSplitterStyle = function(dragState) {
        return _Utils_ap($whale9490$elm_split_pane$SplitPane$baseDefaultSplitterStyles, _Utils_ap(_List_fromArray([
            A2($elm$html$Html$Attributes$style, 'width', '11px'),
            A2($elm$html$Html$Attributes$style, 'height', '100%'),
            A2($elm$html$Html$Attributes$style, 'margin', '0 -5px'),
            A2($elm$html$Html$Attributes$style, 'borderLeft', '5px solid rgba(255, 255, 255, 0)'),
            A2($elm$html$Html$Attributes$style, 'borderRight', '5px solid rgba(255, 255, 255, 0)')
        ]), function() {
            if (dragState.$ === 'Draggable') return _List_fromArray([
                A2($elm$html$Html$Attributes$style, 'cursor', 'col-resize')
            ]);
            else return _List_Nil;
        }()));
    };
    var $whale9490$elm_split_pane$SplitPane$defaultVerticalSplitterStyle = function(dragState) {
        return _Utils_ap($whale9490$elm_split_pane$SplitPane$baseDefaultSplitterStyles, _Utils_ap(_List_fromArray([
            A2($elm$html$Html$Attributes$style, 'height', '11px'),
            A2($elm$html$Html$Attributes$style, 'width', '100%'),
            A2($elm$html$Html$Attributes$style, 'margin', '-5px 0'),
            A2($elm$html$Html$Attributes$style, 'borderTop', '5px solid rgba(255, 255, 255, 0)'),
            A2($elm$html$Html$Attributes$style, 'borderBottom', '5px solid rgba(255, 255, 255, 0)')
        ]), function() {
            if (dragState.$ === 'Draggable') return _List_fromArray([
                A2($elm$html$Html$Attributes$style, 'cursor', 'row-resize')
            ]);
            else return _List_Nil;
        }()));
    };
    var $whale9490$elm_split_pane$SplitPane$createDefaultSplitterDetails = F2(function(ori, dragState) {
        if (ori.$ === 'Horizontal') return {
            attributes: $whale9490$elm_split_pane$SplitPane$defaultHorizontalSplitterStyle(dragState),
            children: _List_Nil
        };
        else return {
            attributes: $whale9490$elm_split_pane$SplitPane$defaultVerticalSplitterStyle(dragState),
            children: _List_Nil
        };
    });
    var $whale9490$elm_split_pane$SplitPane$getConcreteSplitter = F3(function(viewConfig, ori, dragState) {
        var _v0 = viewConfig.splitter;
        if (_v0.$ === 'Just') {
            var splitter = _v0.a.a;
            return splitter;
        } else {
            var _v1 = A2($whale9490$elm_split_pane$SplitPane$createCustomSplitter, viewConfig.toMsg, A2($whale9490$elm_split_pane$SplitPane$createDefaultSplitterDetails, ori, dragState));
            var defaultSplitter = _v1.a;
            return defaultSplitter;
        }
    });
    var $whale9490$elm_split_pane$SplitPane$paneContainerStyle = function(ori) {
        return _List_fromArray([
            A2($elm$html$Html$Attributes$style, 'overflow', 'hidden'),
            A2($elm$html$Html$Attributes$style, 'display', 'flex'),
            A2($elm$html$Html$Attributes$style, 'flexDirection', function() {
                if (ori.$ === 'Horizontal') return 'row';
                else return 'column';
            }()),
            A2($elm$html$Html$Attributes$style, 'justifyContent', 'center'),
            A2($elm$html$Html$Attributes$style, 'alignItems', 'center'),
            A2($elm$html$Html$Attributes$style, 'width', '100%'),
            A2($elm$html$Html$Attributes$style, 'height', '100%'),
            A2($elm$html$Html$Attributes$style, 'boxSizing', 'border-box')
        ]);
    };
    var $whale9490$elm_split_pane$SplitPane$secondChildViewStyle = function(_v0) {
        var state = _v0.a;
        var _v1 = state.splitterPosition;
        if (_v1.$ === 'Px') return _List_fromArray([
            A2($elm$html$Html$Attributes$style, 'display', 'flex'),
            A2($elm$html$Html$Attributes$style, 'flex', '1'),
            A2($elm$html$Html$Attributes$style, 'width', '100%'),
            A2($elm$html$Html$Attributes$style, 'height', '100%'),
            A2($elm$html$Html$Attributes$style, 'overflow', 'hidden'),
            A2($elm$html$Html$Attributes$style, 'boxSizing', 'border-box'),
            A2($elm$html$Html$Attributes$style, 'position', 'relative')
        ]);
        else {
            var p = _v1.a;
            var v = $elm$core$Debug$toString(1 - $whale9490$elm_split_pane$Bound$getValue(p));
            return _List_fromArray([
                A2($elm$html$Html$Attributes$style, 'display', 'flex'),
                A2($elm$html$Html$Attributes$style, 'flex', v),
                A2($elm$html$Html$Attributes$style, 'width', '100%'),
                A2($elm$html$Html$Attributes$style, 'height', '100%'),
                A2($elm$html$Html$Attributes$style, 'overflow', 'hidden'),
                A2($elm$html$Html$Attributes$style, 'boxSizing', 'border-box'),
                A2($elm$html$Html$Attributes$style, 'position', 'relative')
            ]);
        }
    };
    var $whale9490$elm_split_pane$SplitPane$view = F4(function(_v0, firstView, secondView, _v1) {
        var viewConfig = _v0.a;
        var state = _v1.a;
        var splitter = A3($whale9490$elm_split_pane$SplitPane$getConcreteSplitter, viewConfig, state.orientation, state.dragState);
        return A2($elm$html$Html$div, A2($elm$core$List$cons, $elm$html$Html$Attributes$class('pane-container'), $whale9490$elm_split_pane$SplitPane$paneContainerStyle(state.orientation)), _List_fromArray([
            A2($elm$html$Html$div, A2($elm$core$List$cons, $elm$html$Html$Attributes$class('pane-first-view'), $whale9490$elm_split_pane$SplitPane$firstChildViewStyle($whale9490$elm_split_pane$SplitPane$State(state))), _List_fromArray([
                firstView
            ])),
            splitter,
            A2($elm$html$Html$div, A2($elm$core$List$cons, $elm$html$Html$Attributes$class('pane-second-view'), $whale9490$elm_split_pane$SplitPane$secondChildViewStyle($whale9490$elm_split_pane$SplitPane$State(state))), _List_fromArray([
                secondView
            ]))
        ]));
    });
    var $whale9490$elm_split_pane$SplitPane$ViewConfig = function(a) {
        return {
            $: 'ViewConfig',
            a: a
        };
    };
    var $whale9490$elm_split_pane$SplitPane$createViewConfig = function(_v0) {
        var toMsg = _v0.toMsg;
        var customSplitter = _v0.customSplitter;
        return $whale9490$elm_split_pane$SplitPane$ViewConfig({
            splitter: customSplitter,
            toMsg: toMsg
        });
    };
    var $author$project$Main$viewConfig = $whale9490$elm_split_pane$SplitPane$createViewConfig({
        customSplitter: $elm$core$Maybe$Nothing,
        toMsg: $author$project$Main$PaneMsg
    });
    var $author$project$Main$view = function(model) {
        if (model.$ === 'Home') {
            var gifLinks = model.b;
            return {
                body: _List_fromArray([
                    $author$project$Index$index(gifLinks)
                ]),
                title: 'RDB Model'
            };
        } else {
            var editorModel = model.c;
            var _v1 = editorModel;
            var pane = _v1.pane;
            var viewEditor = _v1.viewEditor;
            var monacoValue = _v1.monacoValue;
            var selectedView = _v1.selectedView;
            var _v2 = monacoValue.present;
            var domain = _v2.domain;
            var views = _v2.views;
            return {
                body: _List_fromArray([
                    A2($elm$html$Html$div, _List_fromArray([
                        A2($elm$html$Html$Attributes$style, 'width', '100%'),
                        A2($elm$html$Html$Attributes$style, 'height', '100%')
                    ]), _List_fromArray([
                        A4($whale9490$elm_split_pane$SplitPane$view, $author$project$Main$viewConfig, A2($author$project$Main$svgView, _Utils_Tuple3(views, domain, selectedView), viewEditor), A2($elm$html$Html$div, _List_fromArray([
                            $elm_community$typed_svg$TypedSvg$Attributes$id('monaco'),
                            A2($elm$html$Html$Attributes$style, 'width', '100%'),
                            A2($elm$html$Html$Attributes$style, 'height', '100%')
                        ]), _List_Nil), pane),
                        A2($elm$html$Html$div, _List_fromArray([
                            A2($elm$html$Html$Attributes$style, 'position', 'fixed'),
                            A2($elm$html$Html$Attributes$style, 'bottom', '0'),
                            A2($elm$html$Html$Attributes$style, 'left', '0'),
                            A2($elm$html$Html$Attributes$style, 'font-size', '9px')
                        ]), _List_fromArray([
                            $elm$html$Html$text('v0.0.1')
                        ]))
                    ]))
                ]),
                title: 'RDB Model Editor'
            };
        }
    };
    var $author$project$Main$main = $elm$browser$Browser$application({
        init: $author$project$Main$init,
        onUrlChange: $author$project$Main$ChangedUrl,
        onUrlRequest: $author$project$Main$ClickedLink,
        subscriptions: $author$project$Main$subscriptions,
        update: $author$project$Main$update,
        view: $author$project$Main$view
    });
    _Platform_export({
        'Main': {
            'init': $author$project$Main$main(A2($elm$json$Json$Decode$andThen, function(_v0) {
                return A2($elm$json$Json$Decode$andThen, function(_v1) {
                    return $elm$json$Json$Decode$succeed(_Utils_Tuple2(_v0, _v1));
                }, A2($elm$json$Json$Decode$index, 1, $elm$json$Json$Decode$string));
            }, A2($elm$json$Json$Decode$index, 0, $elm$json$Json$Decode$string)))(0)
        }
    });
})($073d2c6cc6763899$exports);


var $6daa50b6cac448d4$exports = {};

$6daa50b6cac448d4$exports = new URL((parcelRequire("aKzDW")).resolve("b7uTR"), import.meta.url).toString();


var $5267791c9089d3ab$exports = {};

$5267791c9089d3ab$exports = new URL((parcelRequire("aKzDW")).resolve("khf9e"), import.meta.url).toString();


window.MonacoEnvironment = {
    getWorkerUrl: function(_moduleId, label) {
        return (/*@__PURE__*/$parcel$interopDefault($d5095eb4ae9ffad3$exports));
    }
};
const $e006d69646ee18d5$var$v = `domain:
  name: Name
  description: Description
  actors:
    actor-1:
      name: Actor
      description: Description
      relations:
        - uses - delivery-1
  rings:
    ring-1:
      name: Ring 1 name
      description: Description
      relations: []
      deliveries: {}
    ring-2:
      name: Ring 2 name
      description: Description
      relations:
        - uses - ring-1
      deliveries:
        delivery-1:
          name: delivery 1
          description: Description
          relations:
            - calls - delivery-2
            - uses - ring-1
          blocks:
            delivery-1--block-1:
              name: block 1
              description: Description
              relations:
                - uses - delivery-1--block-2
                - calls - delivery-2--block-1
                - uses - ring-1
            delivery-1--block-2:
              name: block 2
              description: Description
              relations:
                []
        delivery-2:
          name: delivery 2
          description: Description
          relations:
            []
          blocks:
            delivery-2--block-1:
              name: block 1
              description: Description
              relations:
                - uses - delivery-2--block-2
            delivery-2--block-2:
              name: block 2
              description: Description
              relations:
                []
views:
  view-1:
    elements:
      ring-1:
        x: 100
        y: 100
      delivery-1:
        x: 200
        y: 200
        relations:
          'calls - delivery-2':
            - x: 300
              y: 150
          'uses - ring-1': []
      delivery-2:
        x: 300
        y: 300
  view-2:
    elements:
      actor-1:
        x: 100
        y: 100
        relations:
          'uses - delivery-1': []
      delivery-1:
        x: 200
        y: 200`;
const $e006d69646ee18d5$var$app = $073d2c6cc6763899$exports.Elm.Main.init({
    node: document.getElementById("root"),
    flags: [
        (/*@__PURE__*/$parcel$interopDefault($6daa50b6cac448d4$exports)),
        (/*@__PURE__*/$parcel$interopDefault($5267791c9089d3ab$exports))
    ]
});
let $e006d69646ee18d5$var$editor;
function $e006d69646ee18d5$var$initMonaco() {
    if ($e006d69646ee18d5$var$editor != null) $e006d69646ee18d5$var$editor.dispose();
    $e006d69646ee18d5$var$editor = $leKFq.editor.create(document.getElementById("monaco"), {
        theme: 'vs-dark',
        value: (/*@__PURE__*/$parcel$interopDefault($d55355b2171fa273$exports)).stringify((/*@__PURE__*/$parcel$interopDefault($d55355b2171fa273$exports)).parse($e006d69646ee18d5$var$v)),
        language: 'yaml',
        wordWrap: 'off',
        automaticLayout: true,
        lineNumbers: 'off',
        glyphMargin: false,
        minimap: {
            enabled: false
        },
        scrollbar: {
            vertical: 'auto'
        }
    });
    $e006d69646ee18d5$var$editor.addCommand($leKFq.KeyMod.CtrlCmd | $leKFq.KeyCode.KeyS, function() {
        $e006d69646ee18d5$var$app.ports.monacoEditorSavedValue.send($e006d69646ee18d5$var$editor.getValue());
    });
    document.getElementById("main-graph").addEventListener('click', (ev)=>{
        if ($e006d69646ee18d5$var$editor.hasWidgetFocus()) document.activeElement.blur();
    });
    $e006d69646ee18d5$var$app.ports.monacoEditorValue.send($e006d69646ee18d5$var$editor.getValue());
}
$e006d69646ee18d5$var$app.ports.removePoint.subscribe((message)=>$e006d69646ee18d5$var$unityOfWork($e006d69646ee18d5$var$removePoint, message)
);
$e006d69646ee18d5$var$app.ports.addPoint.subscribe((message)=>$e006d69646ee18d5$var$unityOfWork($e006d69646ee18d5$var$addPoint, message)
);
$e006d69646ee18d5$var$app.ports.initMonacoResponse.subscribe(()=>$e006d69646ee18d5$var$initMonaco()
);
$e006d69646ee18d5$var$app.ports.updateElementPosition.subscribe((message)=>$e006d69646ee18d5$var$unityOfWork($e006d69646ee18d5$var$updateElementPosition, message)
);
$e006d69646ee18d5$var$app.ports.updatePointPosition.subscribe((message)=>$e006d69646ee18d5$var$unityOfWork($e006d69646ee18d5$var$updatePointPosition, message)
);
$e006d69646ee18d5$var$app.ports.updateMonacoValue.subscribe((message)=>$e006d69646ee18d5$var$updateMonacoValue(message)
);
// delay monaco initialization (via Elm)
$e006d69646ee18d5$var$app.ports.initMonacoRequest.send(null);
function $e006d69646ee18d5$var$updateMonacoValue(message) {
    $e006d69646ee18d5$var$editor.setValue(message);
}
function $e006d69646ee18d5$var$removePoint(currentModel, message) {
    const elementName = message.elementKey;
    const view = message.view;
    const relationName = message.relation;
    const indexToDelete = parseInt(message.pointIndex);
    currentModel['views'][view]['elements'][elementName]['relations'][relationName].splice(indexToDelete, 1);
}
function $e006d69646ee18d5$var$addPoint(currentModel, message) {
    const elementName = message.elementKey;
    const view = message.view;
    const relationName = message.relation;
    const index = parseInt(message.pointIndex);
    const targetRelation = currentModel['views'][view]['elements'][elementName]['relations'][relationName];
    targetRelation.splice(index, 0, {});
    $e006d69646ee18d5$var$updateCoords(targetRelation[index], message.x, message.y);
}
function $e006d69646ee18d5$var$updateElementPosition(currentModel, message) {
    const elementName = message.elementKey;
    const view = message.view;
    const targetElement = currentModel['views'][view]['elements'][elementName];
    $e006d69646ee18d5$var$updateCoords(targetElement, message.x, message.y);
}
function $e006d69646ee18d5$var$updatePointPosition(currentModel, message) {
    const elementName = message.elementKey;
    const relationName = message.relation;
    const view = message.view;
    const index = parseInt(message.pointIndex);
    const targetRelation = currentModel['views'][view]['elements'][elementName]['relations'][relationName];
    targetRelation[index] = targetRelation[index] || {};
    $e006d69646ee18d5$var$updateCoords(targetRelation[index], message.x, message.y);
}
function $e006d69646ee18d5$var$updateCoords(item, x, y) {
    item['x'] = x;
    item['y'] = y;
}
function $e006d69646ee18d5$var$unityOfWork(func, message) {
    const currentModel = (/*@__PURE__*/$parcel$interopDefault($d55355b2171fa273$exports)).parse($e006d69646ee18d5$var$editor.getValue());
    func(currentModel, message);
    const newModel = (/*@__PURE__*/$parcel$interopDefault($d55355b2171fa273$exports)).stringify(currentModel);
    $e006d69646ee18d5$var$editor.setValue(newModel);
    $e006d69646ee18d5$var$app.ports.monacoEditorValue.send(newModel);
}


//# sourceMappingURL=index.368c142a.js.map
