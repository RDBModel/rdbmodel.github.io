{"mappings":";;;;;;;AAQA,IAAIA,EAAO,CACTC,SAAU,CACRC,YAAa,KACbC,aAAc,CAAC,KAAM,OAEvBC,SAAU,CACR,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,IAAK,MAERC,iBAAkB,CAChB,CAAEC,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,MAEtBC,iBAAkB,CAChB,CAAEF,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,OAGpBE,EAAW,CACbC,aAAc,GACdC,aAAc,SACdC,WAAU,kBACVC,WAAY,CACV,eACA,YACA,YACA,qBACA,aACA,aACA,QACA,qBACA,YACA,gBACA,YACA,gBACA,iBACA,aAEFC,gBAAiB,CAAC,SAAU,UAAW,cAAe,YACtDC,SAAU,CACR,aACA,WACA,eACA,WACA,KACA,MACA,MACA,gBACA,QACA,OACA,QACA,QACA,WACA,cACA,UACA,SACA,SACA,KACA,UACA,cACA,OACA,OACA,YACA,cACA,cACA,QACA,MACA,OACA,MACA,QACA,KACA,SACA,KACA,QACA,OACA,QACA,WACA,KACA,OACA,OACA,MACA,WACA,MACA,OACA,cACA,WACA,WACA,WACA,UACA,aACA,SACA,UACA,WACA,WACA,SACA,SACA,WACA,SACA,QACA,OACA,OACA,MACA,SACA,SACA,YACA,QACA,SACA,QACA,SACA,MACA,OACA,OACA,YACA,UACA,MACA,OACA,QACA,QACA,UACA,QACA,QAEFC,QAAO,oCACPC,cAAa,oPACbC,YAAW,qFACXC,UAAS,qDACTC,QAAO,wEACPC,UAAW,CACTC,KAAM,CACJ,CAAEC,QAAS,eACX,CAAEA,QAAS,YACX,CAAEA,QAAS,cACX,CAAEA,QAAS,YACX,CAAEA,QAAS,YACX,CAAEA,QAAS,kBACX,CAAEA,QAAS,YAEbC,WAAY,CACV,OAAQ,SACR,OAAQ,eAAgB,qBAE1BC,gBAAiB,CACf,SAAU,UACV,OAAQ,UACR,OAAQ,eAAgB,WACxB,KAAM,WAERC,OAAQ,CACN,cAAe,aACf,oBAAqB,aACrB,OAAQ,aACR,cAAe,YACf,YAAa,aAEfC,QAAS,CACP,aAAc,eACd,UAAW,cAAe,mBAC1B,WAAY,WACZ,QAAS,UAAW,iBAEtBC,eAAgB,CACd,QAAS,UAAW,gBACpB,QAAS,cAAe,QACxB,iBAAkB,qBAClB,KAAM,gBAERC,YAAa,CACX,QAAS,UAAW,gBACpB,QAAS,UAAW,QACpB,KAAM,YAERC,UAAW,CACT,iBAEE,CACEC,MAAO,CACL,cAAe,kBACf,WAAY,OAKpBC,QAAS,CACP,KAAM,CAAEC,MAAO,eAAgBC,KAAM,eACrC,iBAAkB,iBAClB,kBAAmB,gBACnB,2CAA4C,cAC5C,wCAAyC,gBACzC,WAAY,WAEdC,UAAW,CACT,QAAS,CAAEF,MAAO,WAAYC,KAAM,4BACpC,YAAa,UACb,OAAQ,yBACR,KAAM,CAAED,MAAO,eAAgBC,KAAM,SACrC,KAAM,WAERE,uBAAwB,CACtB,MAAO,CAAEH,MAAO,WAAYC,KAAM,4BAClC,MAAO,CAAED,MAAO,WAAYC,KAAM,SAClC,CAAEX,QAAS,YACX,CAAEA,QAAS,YACX,CAAEA,QAAS,YAEbc,QAAS,CACP,KAAM,CAAEJ,MAAO,WAAYC,KAAM,oBACjC,eAEE,CACEH,MAAO,CACL,YAAa,UACb,qBAAsB,kBACtB,WAAY,iBAKpBO,eAAgB,CACd,KAAM,CAAEL,MAAO,WAAYC,KAAM,SACjC,KAAM,eAERK,cAAe,CACb,sBAEE,CACER,MAAO,CACLS,GAAI,CAAC,YAAa,mBAClB,WAAY","sources":["node_modules/monaco-editor/esm/vs/basic-languages/swift/swift.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.31.0(252e010eb73ddc2fa1a37c1dade7bf35d87106cd)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/swift/swift.ts\nvar conf = {\n  comments: {\n    lineComment: \"//\",\n    blockComment: [\"/*\", \"*/\"]\n  },\n  brackets: [\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n    [\"(\", \")\"]\n  ],\n  autoClosingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" },\n    { open: \"`\", close: \"`\" }\n  ],\n  surroundingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" },\n    { open: \"`\", close: \"`\" }\n  ]\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".swift\",\n  identifier: /[a-zA-Z_][\\w$]*/,\n  attributes: [\n    \"@autoclosure\",\n    \"@noescape\",\n    \"@noreturn\",\n    \"@NSApplicationMain\",\n    \"@NSCopying\",\n    \"@NSManaged\",\n    \"@objc\",\n    \"@UIApplicationMain\",\n    \"@noreturn\",\n    \"@availability\",\n    \"@IBAction\",\n    \"@IBDesignable\",\n    \"@IBInspectable\",\n    \"@IBOutlet\"\n  ],\n  accessmodifiers: [\"public\", \"private\", \"fileprivate\", \"internal\"],\n  keywords: [\n    \"__COLUMN__\",\n    \"__FILE__\",\n    \"__FUNCTION__\",\n    \"__LINE__\",\n    \"as\",\n    \"as!\",\n    \"as?\",\n    \"associativity\",\n    \"break\",\n    \"case\",\n    \"catch\",\n    \"class\",\n    \"continue\",\n    \"convenience\",\n    \"default\",\n    \"deinit\",\n    \"didSet\",\n    \"do\",\n    \"dynamic\",\n    \"dynamicType\",\n    \"else\",\n    \"enum\",\n    \"extension\",\n    \"fallthrough\",\n    \"fileprivate\",\n    \"final\",\n    \"for\",\n    \"func\",\n    \"get\",\n    \"guard\",\n    \"if\",\n    \"import\",\n    \"in\",\n    \"infix\",\n    \"init\",\n    \"inout\",\n    \"internal\",\n    \"is\",\n    \"lazy\",\n    \"left\",\n    \"let\",\n    \"mutating\",\n    \"nil\",\n    \"none\",\n    \"nonmutating\",\n    \"operator\",\n    \"optional\",\n    \"override\",\n    \"postfix\",\n    \"precedence\",\n    \"prefix\",\n    \"private\",\n    \"protocol\",\n    \"Protocol\",\n    \"public\",\n    \"repeat\",\n    \"required\",\n    \"return\",\n    \"right\",\n    \"self\",\n    \"Self\",\n    \"set\",\n    \"static\",\n    \"struct\",\n    \"subscript\",\n    \"super\",\n    \"switch\",\n    \"throw\",\n    \"throws\",\n    \"try\",\n    \"try!\",\n    \"Type\",\n    \"typealias\",\n    \"unowned\",\n    \"var\",\n    \"weak\",\n    \"where\",\n    \"while\",\n    \"willSet\",\n    \"FALSE\",\n    \"TRUE\"\n  ],\n  symbols: /[=(){}\\[\\].,:;@#\\_&\\-<>`?!+*\\\\\\/]/,\n  operatorstart: /[\\/=\\-+!*%<>&|^~?\\u00A1-\\u00A7\\u00A9\\u00AB\\u00AC\\u00AE\\u00B0-\\u00B1\\u00B6\\u00BB\\u00BF\\u00D7\\u00F7\\u2016-\\u2017\\u2020-\\u2027\\u2030-\\u203E\\u2041-\\u2053\\u2055-\\u205E\\u2190-\\u23FF\\u2500-\\u2775\\u2794-\\u2BFF\\u2E00-\\u2E7F\\u3001-\\u3003\\u3008-\\u3030]/,\n  operatorend: /[\\u0300-\\u036F\\u1DC0-\\u1DFF\\u20D0-\\u20FF\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uE0100-\\uE01EF]/,\n  operators: /(@operatorstart)((@operatorstart)|(@operatorend))*/,\n  escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  tokenizer: {\n    root: [\n      { include: \"@whitespace\" },\n      { include: \"@comment\" },\n      { include: \"@attribute\" },\n      { include: \"@literal\" },\n      { include: \"@keyword\" },\n      { include: \"@invokedmethod\" },\n      { include: \"@symbol\" }\n    ],\n    whitespace: [\n      [/\\s+/, \"white\"],\n      [/\"\"\"/, \"string.quote\", \"@endDblDocString\"]\n    ],\n    endDblDocString: [\n      [/[^\"]+/, \"string\"],\n      [/\\\\\"/, \"string\"],\n      [/\"\"\"/, \"string.quote\", \"@popall\"],\n      [/\"/, \"string\"]\n    ],\n    symbol: [\n      [/[{}()\\[\\]]/, \"@brackets\"],\n      [/[<>](?!@symbols)/, \"@brackets\"],\n      [/[.]/, \"delimiter\"],\n      [/@operators/, \"operator\"],\n      [/@symbols/, \"operator\"]\n    ],\n    comment: [\n      [/\\/\\/\\/.*$/, \"comment.doc\"],\n      [/\\/\\*\\*/, \"comment.doc\", \"@commentdocbody\"],\n      [/\\/\\/.*$/, \"comment\"],\n      [/\\/\\*/, \"comment\", \"@commentbody\"]\n    ],\n    commentdocbody: [\n      [/\\/\\*/, \"comment\", \"@commentbody\"],\n      [/\\*\\//, \"comment.doc\", \"@pop\"],\n      [/\\:[a-zA-Z]+\\:/, \"comment.doc.param\"],\n      [/./, \"comment.doc\"]\n    ],\n    commentbody: [\n      [/\\/\\*/, \"comment\", \"@commentbody\"],\n      [/\\*\\//, \"comment\", \"@pop\"],\n      [/./, \"comment\"]\n    ],\n    attribute: [\n      [\n        /@@@identifier/,\n        {\n          cases: {\n            \"@attributes\": \"keyword.control\",\n            \"@default\": \"\"\n          }\n        }\n      ]\n    ],\n    literal: [\n      [/\"/, { token: \"string.quote\", next: \"@stringlit\" }],\n      [/0[b]([01]_?)+/, \"number.binary\"],\n      [/0[o]([0-7]_?)+/, \"number.octal\"],\n      [/0[x]([0-9a-fA-F]_?)+([pP][\\-+](\\d_?)+)?/, \"number.hex\"],\n      [/(\\d_?)*\\.(\\d_?)+([eE][\\-+]?(\\d_?)+)?/, \"number.float\"],\n      [/(\\d_?)+/, \"number\"]\n    ],\n    stringlit: [\n      [/\\\\\\(/, { token: \"operator\", next: \"@interpolatedexpression\" }],\n      [/@escapes/, \"string\"],\n      [/\\\\./, \"string.escape.invalid\"],\n      [/\"/, { token: \"string.quote\", next: \"@pop\" }],\n      [/./, \"string\"]\n    ],\n    interpolatedexpression: [\n      [/\\(/, { token: \"operator\", next: \"@interpolatedexpression\" }],\n      [/\\)/, { token: \"operator\", next: \"@pop\" }],\n      { include: \"@literal\" },\n      { include: \"@keyword\" },\n      { include: \"@symbol\" }\n    ],\n    keyword: [\n      [/`/, { token: \"operator\", next: \"@escapedkeyword\" }],\n      [\n        /@identifier/,\n        {\n          cases: {\n            \"@keywords\": \"keyword\",\n            \"[A-Z][a-zA-Z0-9$]*\": \"type.identifier\",\n            \"@default\": \"identifier\"\n          }\n        }\n      ]\n    ],\n    escapedkeyword: [\n      [/`/, { token: \"operator\", next: \"@pop\" }],\n      [/./, \"identifier\"]\n    ],\n    invokedmethod: [\n      [\n        /([.])(@identifier)/,\n        {\n          cases: {\n            $2: [\"delimeter\", \"type.identifier\"],\n            \"@default\": \"\"\n          }\n        }\n      ]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n/*!---------------------------------------------------------------------------------------------\n *  Copyright (C) David Owens II, owensd.io. All rights reserved.\n *--------------------------------------------------------------------------------------------*/\n"],"names":["$dcf2326652091deb$export$c83be1687c028fc9","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","surroundingPairs","$dcf2326652091deb$export$789c912f57fe164c","defaultToken","tokenPostfix","identifier","attributes","accessmodifiers","keywords","symbols","operatorstart","operatorend","operators","escapes","tokenizer","root","include","whitespace","endDblDocString","symbol","comment","commentdocbody","commentbody","attribute","cases","literal","token","next","stringlit","interpolatedexpression","keyword","escapedkeyword","invokedmethod","$2"],"version":3,"file":"swift.fce96faf.js.map"}