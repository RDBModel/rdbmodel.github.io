{"mappings":"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","sources":["node_modules/monaco-editor/esm/vs/basic-languages/scala/scala.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.31.0(252e010eb73ddc2fa1a37c1dade7bf35d87106cd)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/scala/scala.ts\nvar conf = {\n  wordPattern: /(unary_[@~!#%^&*()\\-=+\\\\|:<>\\/?]+)|([a-zA-Z_$][\\w$]*?_=)|(`[^`]+`)|([a-zA-Z_$][\\w$]*)/g,\n  comments: {\n    lineComment: \"//\",\n    blockComment: [\"/*\", \"*/\"]\n  },\n  brackets: [\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n    [\"(\", \")\"]\n  ],\n  autoClosingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" }\n  ],\n  surroundingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" }\n  ],\n  folding: {\n    markers: {\n      start: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?region\\\\b)|(?:<editor-fold\\\\b))\"),\n      end: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?endregion\\\\b)|(?:</editor-fold>))\")\n    }\n  }\n};\nvar language = {\n  tokenPostfix: \".scala\",\n  keywords: [\n    \"asInstanceOf\",\n    \"catch\",\n    \"class\",\n    \"classOf\",\n    \"def\",\n    \"do\",\n    \"else\",\n    \"extends\",\n    \"finally\",\n    \"for\",\n    \"foreach\",\n    \"forSome\",\n    \"if\",\n    \"import\",\n    \"isInstanceOf\",\n    \"macro\",\n    \"match\",\n    \"new\",\n    \"object\",\n    \"package\",\n    \"return\",\n    \"throw\",\n    \"trait\",\n    \"try\",\n    \"type\",\n    \"until\",\n    \"val\",\n    \"var\",\n    \"while\",\n    \"with\",\n    \"yield\",\n    \"given\",\n    \"enum\",\n    \"then\"\n  ],\n  softKeywords: [\"as\", \"export\", \"extension\", \"end\", \"derives\", \"on\"],\n  constants: [\"true\", \"false\", \"null\", \"this\", \"super\"],\n  modifiers: [\n    \"abstract\",\n    \"final\",\n    \"implicit\",\n    \"lazy\",\n    \"override\",\n    \"private\",\n    \"protected\",\n    \"sealed\"\n  ],\n  softModifiers: [\"inline\", \"opaque\", \"open\", \"transparent\", \"using\"],\n  name: /(?:[a-z_$][\\w$]*|`[^`]+`)/,\n  type: /(?:[A-Z][\\w$]*)/,\n  symbols: /[=><!~?:&|+\\-*\\/^\\\\%@#]+/,\n  digits: /\\d+(_+\\d+)*/,\n  hexdigits: /[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,\n  escapes: /\\\\(?:[btnfr\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  fstring_conv: /[bBhHsScCdoxXeEfgGaAt]|[Tn](?:[HIklMSLNpzZsQ]|[BbhAaCYyjmde]|[RTrDFC])/,\n  tokenizer: {\n    root: [\n      [/\\braw\"\"\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@rawstringt\" }],\n      [/\\braw\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@rawstring\" }],\n      [/\\bs\"\"\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@sstringt\" }],\n      [/\\bs\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@sstring\" }],\n      [/\\bf\"\"\"\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@fstringt\" }],\n      [/\\bf\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@fstring\" }],\n      [/\"\"\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@stringt\" }],\n      [/\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@string\" }],\n      [/(@digits)[eE]([\\-+]?(@digits))?[fFdD]?/, \"number.float\", \"@allowMethod\"],\n      [/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?[fFdD]?/, \"number.float\", \"@allowMethod\"],\n      [/0[xX](@hexdigits)[Ll]?/, \"number.hex\", \"@allowMethod\"],\n      [/(@digits)[fFdD]/, \"number.float\", \"@allowMethod\"],\n      [/(@digits)[lL]?/, \"number\", \"@allowMethod\"],\n      [/\\b_\\*/, \"key\"],\n      [/\\b(_)\\b/, \"keyword\", \"@allowMethod\"],\n      [/\\bimport\\b/, \"keyword\", \"@import\"],\n      [/\\b(case)([ \\t]+)(class)\\b/, [\"keyword.modifier\", \"white\", \"keyword\"]],\n      [/\\bcase\\b/, \"keyword\", \"@case\"],\n      [/\\bva[lr]\\b/, \"keyword\", \"@vardef\"],\n      [\n        /\\b(def)([ \\t]+)((?:unary_)?@symbols|@name(?:_=)|@name)/,\n        [\"keyword\", \"white\", \"identifier\"]\n      ],\n      [/@name(?=[ \\t]*:(?!:))/, \"variable\"],\n      [/(\\.)(@name|@symbols)/, [\"operator\", { token: \"@rematch\", next: \"@allowMethod\" }]],\n      [/([{(])(\\s*)(@name(?=\\s*=>))/, [\"@brackets\", \"white\", \"variable\"]],\n      [\n        /@name/,\n        {\n          cases: {\n            \"@keywords\": \"keyword\",\n            \"@softKeywords\": \"keyword\",\n            \"@modifiers\": \"keyword.modifier\",\n            \"@softModifiers\": \"keyword.modifier\",\n            \"@constants\": {\n              token: \"constant\",\n              next: \"@allowMethod\"\n            },\n            \"@default\": {\n              token: \"identifier\",\n              next: \"@allowMethod\"\n            }\n          }\n        }\n      ],\n      [/@type/, \"type\", \"@allowMethod\"],\n      { include: \"@whitespace\" },\n      [/@[a-zA-Z_$][\\w$]*(?:\\.[a-zA-Z_$][\\w$]*)*/, \"annotation\"],\n      [/[{(]/, \"@brackets\"],\n      [/[})]/, \"@brackets\", \"@allowMethod\"],\n      [/\\[/, \"operator.square\"],\n      [/](?!\\s*(?:va[rl]|def|type)\\b)/, \"operator.square\", \"@allowMethod\"],\n      [/]/, \"operator.square\"],\n      [/([=-]>|<-|>:|<:|:>|<%)(?=[\\s\\w()[\\]{},\\.\"'`])/, \"keyword\"],\n      [/@symbols/, \"operator\"],\n      [/[;,\\.]/, \"delimiter\"],\n      [/'[a-zA-Z$][\\w$]*(?!')/, \"attribute.name\"],\n      [/'[^\\\\']'/, \"string\", \"@allowMethod\"],\n      [/(')(@escapes)(')/, [\"string\", \"string.escape\", { token: \"string\", next: \"@allowMethod\" }]],\n      [/'/, \"string.invalid\"]\n    ],\n    import: [\n      [/;/, \"delimiter\", \"@pop\"],\n      [/^|$/, \"\", \"@pop\"],\n      [/[ \\t]+/, \"white\"],\n      [/[\\n\\r]+/, \"white\", \"@pop\"],\n      [/\\/\\*/, \"comment\", \"@comment\"],\n      [/@name|@type/, \"type\"],\n      [/[(){}]/, \"@brackets\"],\n      [/[[\\]]/, \"operator.square\"],\n      [/[\\.,]/, \"delimiter\"]\n    ],\n    allowMethod: [\n      [/^|$/, \"\", \"@pop\"],\n      [/[ \\t]+/, \"white\"],\n      [/[\\n\\r]+/, \"white\", \"@pop\"],\n      [/\\/\\*/, \"comment\", \"@comment\"],\n      [/(?==>[\\s\\w([{])/, \"keyword\", \"@pop\"],\n      [\n        /(@name|@symbols)(?=[ \\t]*[[({\"'`]|[ \\t]+(?:[+-]?\\.?\\d|\\w))/,\n        {\n          cases: {\n            \"@keywords\": { token: \"keyword\", next: \"@pop\" },\n            \"->|<-|>:|<:|<%\": { token: \"keyword\", next: \"@pop\" },\n            \"@default\": { token: \"@rematch\", next: \"@pop\" }\n          }\n        }\n      ],\n      [\"\", \"\", \"@pop\"]\n    ],\n    comment: [\n      [/[^\\/*]+/, \"comment\"],\n      [/\\/\\*/, \"comment\", \"@push\"],\n      [/\\*\\//, \"comment\", \"@pop\"],\n      [/[\\/*]/, \"comment\"]\n    ],\n    case: [\n      [/\\b_\\*/, \"key\"],\n      [/\\b(_|true|false|null|this|super)\\b/, \"keyword\", \"@allowMethod\"],\n      [/\\bif\\b|=>/, \"keyword\", \"@pop\"],\n      [/`[^`]+`/, \"identifier\", \"@allowMethod\"],\n      [/@name/, \"variable\", \"@allowMethod\"],\n      [/:::?|\\||@(?![a-z_$])/, \"keyword\"],\n      { include: \"@root\" }\n    ],\n    vardef: [\n      [/\\b_\\*/, \"key\"],\n      [/\\b(_|true|false|null|this|super)\\b/, \"keyword\"],\n      [/@name/, \"variable\"],\n      [/:::?|\\||@(?![a-z_$])/, \"keyword\"],\n      [/=|:(?!:)/, \"operator\", \"@pop\"],\n      [/$/, \"white\", \"@pop\"],\n      { include: \"@root\" }\n    ],\n    string: [\n      [/[^\\\\\"\\n\\r]+/, \"string\"],\n      [/@escapes/, \"string.escape\"],\n      [/\\\\./, \"string.escape.invalid\"],\n      [\n        /\"/,\n        {\n          token: \"string.quote\",\n          bracket: \"@close\",\n          switchTo: \"@allowMethod\"\n        }\n      ]\n    ],\n    stringt: [\n      [/[^\\\\\"\\n\\r]+/, \"string\"],\n      [/@escapes/, \"string.escape\"],\n      [/\\\\./, \"string.escape.invalid\"],\n      [/\"(?=\"\"\")/, \"string\"],\n      [\n        /\"\"\"/,\n        {\n          token: \"string.quote\",\n          bracket: \"@close\",\n          switchTo: \"@allowMethod\"\n        }\n      ],\n      [/\"/, \"string\"]\n    ],\n    fstring: [\n      [/@escapes/, \"string.escape\"],\n      [\n        /\"/,\n        {\n          token: \"string.quote\",\n          bracket: \"@close\",\n          switchTo: \"@allowMethod\"\n        }\n      ],\n      [/\\$\\$/, \"string\"],\n      [/(\\$)([a-z_]\\w*)/, [\"operator\", \"identifier\"]],\n      [/\\$\\{/, \"operator\", \"@interp\"],\n      [/%%/, \"string\"],\n      [\n        /(%)([\\-#+ 0,(])(\\d+|\\.\\d+|\\d+\\.\\d+)(@fstring_conv)/,\n        [\"metatag\", \"keyword.modifier\", \"number\", \"metatag\"]\n      ],\n      [/(%)(\\d+|\\.\\d+|\\d+\\.\\d+)(@fstring_conv)/, [\"metatag\", \"number\", \"metatag\"]],\n      [/(%)([\\-#+ 0,(])(@fstring_conv)/, [\"metatag\", \"keyword.modifier\", \"metatag\"]],\n      [/(%)(@fstring_conv)/, [\"metatag\", \"metatag\"]],\n      [/./, \"string\"]\n    ],\n    fstringt: [\n      [/@escapes/, \"string.escape\"],\n      [/\"(?=\"\"\")/, \"string\"],\n      [\n        /\"\"\"/,\n        {\n          token: \"string.quote\",\n          bracket: \"@close\",\n          switchTo: \"@allowMethod\"\n        }\n      ],\n      [/\\$\\$/, \"string\"],\n      [/(\\$)([a-z_]\\w*)/, [\"operator\", \"identifier\"]],\n      [/\\$\\{/, \"operator\", \"@interp\"],\n      [/%%/, \"string\"],\n      [\n        /(%)([\\-#+ 0,(])(\\d+|\\.\\d+|\\d+\\.\\d+)(@fstring_conv)/,\n        [\"metatag\", \"keyword.modifier\", \"number\", \"metatag\"]\n      ],\n      [/(%)(\\d+|\\.\\d+|\\d+\\.\\d+)(@fstring_conv)/, [\"metatag\", \"number\", \"metatag\"]],\n      [/(%)([\\-#+ 0,(])(@fstring_conv)/, [\"metatag\", \"keyword.modifier\", \"metatag\"]],\n      [/(%)(@fstring_conv)/, [\"metatag\", \"metatag\"]],\n      [/./, \"string\"]\n    ],\n    sstring: [\n      [/@escapes/, \"string.escape\"],\n      [\n        /\"/,\n        {\n          token: \"string.quote\",\n          bracket: \"@close\",\n          switchTo: \"@allowMethod\"\n        }\n      ],\n      [/\\$\\$/, \"string\"],\n      [/(\\$)([a-z_]\\w*)/, [\"operator\", \"identifier\"]],\n      [/\\$\\{/, \"operator\", \"@interp\"],\n      [/./, \"string\"]\n    ],\n    sstringt: [\n      [/@escapes/, \"string.escape\"],\n      [/\"(?=\"\"\")/, \"string\"],\n      [\n        /\"\"\"/,\n        {\n          token: \"string.quote\",\n          bracket: \"@close\",\n          switchTo: \"@allowMethod\"\n        }\n      ],\n      [/\\$\\$/, \"string\"],\n      [/(\\$)([a-z_]\\w*)/, [\"operator\", \"identifier\"]],\n      [/\\$\\{/, \"operator\", \"@interp\"],\n      [/./, \"string\"]\n    ],\n    interp: [[/{/, \"operator\", \"@push\"], [/}/, \"operator\", \"@pop\"], { include: \"@root\" }],\n    rawstring: [\n      [/[^\"]/, \"string\"],\n      [\n        /\"/,\n        {\n          token: \"string.quote\",\n          bracket: \"@close\",\n          switchTo: \"@allowMethod\"\n        }\n      ]\n    ],\n    rawstringt: [\n      [/[^\"]/, \"string\"],\n      [/\"(?=\"\"\")/, \"string\"],\n      [\n        /\"\"\"/,\n        {\n          token: \"string.quote\",\n          bracket: \"@close\",\n          switchTo: \"@allowMethod\"\n        }\n      ],\n      [/\"/, \"string\"]\n    ],\n    whitespace: [\n      [/[ \\t\\r\\n]+/, \"white\"],\n      [/\\/\\*/, \"comment\", \"@comment\"],\n      [/\\/\\/.*$/, \"comment\"]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"],"names":[],"version":3,"file":"scala.9408ec52.js.map"}