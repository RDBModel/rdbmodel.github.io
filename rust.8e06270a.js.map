{"mappings":"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","sources":["node_modules/monaco-editor/esm/vs/basic-languages/rust/rust.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.31.0(252e010eb73ddc2fa1a37c1dade7bf35d87106cd)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/rust/rust.ts\nvar conf = {\n  comments: {\n    lineComment: \"//\",\n    blockComment: [\"/*\", \"*/\"]\n  },\n  brackets: [\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n    [\"(\", \")\"]\n  ],\n  autoClosingPairs: [\n    { open: \"[\", close: \"]\" },\n    { open: \"{\", close: \"}\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"', notIn: [\"string\"] }\n  ],\n  surroundingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" }\n  ],\n  folding: {\n    markers: {\n      start: new RegExp(\"^\\\\s*#pragma\\\\s+region\\\\b\"),\n      end: new RegExp(\"^\\\\s*#pragma\\\\s+endregion\\\\b\")\n    }\n  }\n};\nvar language = {\n  tokenPostfix: \".rust\",\n  defaultToken: \"invalid\",\n  keywords: [\n    \"as\",\n    \"async\",\n    \"await\",\n    \"box\",\n    \"break\",\n    \"const\",\n    \"continue\",\n    \"crate\",\n    \"dyn\",\n    \"else\",\n    \"enum\",\n    \"extern\",\n    \"false\",\n    \"fn\",\n    \"for\",\n    \"if\",\n    \"impl\",\n    \"in\",\n    \"let\",\n    \"loop\",\n    \"match\",\n    \"mod\",\n    \"move\",\n    \"mut\",\n    \"pub\",\n    \"ref\",\n    \"return\",\n    \"self\",\n    \"static\",\n    \"struct\",\n    \"super\",\n    \"trait\",\n    \"true\",\n    \"try\",\n    \"type\",\n    \"unsafe\",\n    \"use\",\n    \"where\",\n    \"while\",\n    \"catch\",\n    \"default\",\n    \"union\",\n    \"static\",\n    \"abstract\",\n    \"alignof\",\n    \"become\",\n    \"do\",\n    \"final\",\n    \"macro\",\n    \"offsetof\",\n    \"override\",\n    \"priv\",\n    \"proc\",\n    \"pure\",\n    \"sizeof\",\n    \"typeof\",\n    \"unsized\",\n    \"virtual\",\n    \"yield\"\n  ],\n  typeKeywords: [\n    \"Self\",\n    \"m32\",\n    \"m64\",\n    \"m128\",\n    \"f80\",\n    \"f16\",\n    \"f128\",\n    \"int\",\n    \"uint\",\n    \"float\",\n    \"char\",\n    \"bool\",\n    \"u8\",\n    \"u16\",\n    \"u32\",\n    \"u64\",\n    \"f32\",\n    \"f64\",\n    \"i8\",\n    \"i16\",\n    \"i32\",\n    \"i64\",\n    \"str\",\n    \"Option\",\n    \"Either\",\n    \"c_float\",\n    \"c_double\",\n    \"c_void\",\n    \"FILE\",\n    \"fpos_t\",\n    \"DIR\",\n    \"dirent\",\n    \"c_char\",\n    \"c_schar\",\n    \"c_uchar\",\n    \"c_short\",\n    \"c_ushort\",\n    \"c_int\",\n    \"c_uint\",\n    \"c_long\",\n    \"c_ulong\",\n    \"size_t\",\n    \"ptrdiff_t\",\n    \"clock_t\",\n    \"time_t\",\n    \"c_longlong\",\n    \"c_ulonglong\",\n    \"intptr_t\",\n    \"uintptr_t\",\n    \"off_t\",\n    \"dev_t\",\n    \"ino_t\",\n    \"pid_t\",\n    \"mode_t\",\n    \"ssize_t\"\n  ],\n  constants: [\"true\", \"false\", \"Some\", \"None\", \"Left\", \"Right\", \"Ok\", \"Err\"],\n  supportConstants: [\n    \"EXIT_FAILURE\",\n    \"EXIT_SUCCESS\",\n    \"RAND_MAX\",\n    \"EOF\",\n    \"SEEK_SET\",\n    \"SEEK_CUR\",\n    \"SEEK_END\",\n    \"_IOFBF\",\n    \"_IONBF\",\n    \"_IOLBF\",\n    \"BUFSIZ\",\n    \"FOPEN_MAX\",\n    \"FILENAME_MAX\",\n    \"L_tmpnam\",\n    \"TMP_MAX\",\n    \"O_RDONLY\",\n    \"O_WRONLY\",\n    \"O_RDWR\",\n    \"O_APPEND\",\n    \"O_CREAT\",\n    \"O_EXCL\",\n    \"O_TRUNC\",\n    \"S_IFIFO\",\n    \"S_IFCHR\",\n    \"S_IFBLK\",\n    \"S_IFDIR\",\n    \"S_IFREG\",\n    \"S_IFMT\",\n    \"S_IEXEC\",\n    \"S_IWRITE\",\n    \"S_IREAD\",\n    \"S_IRWXU\",\n    \"S_IXUSR\",\n    \"S_IWUSR\",\n    \"S_IRUSR\",\n    \"F_OK\",\n    \"R_OK\",\n    \"W_OK\",\n    \"X_OK\",\n    \"STDIN_FILENO\",\n    \"STDOUT_FILENO\",\n    \"STDERR_FILENO\"\n  ],\n  supportMacros: [\n    \"format!\",\n    \"print!\",\n    \"println!\",\n    \"panic!\",\n    \"format_args!\",\n    \"unreachable!\",\n    \"write!\",\n    \"writeln!\"\n  ],\n  operators: [\n    \"!\",\n    \"!=\",\n    \"%\",\n    \"%=\",\n    \"&\",\n    \"&=\",\n    \"&&\",\n    \"*\",\n    \"*=\",\n    \"+\",\n    \"+=\",\n    \"-\",\n    \"-=\",\n    \"->\",\n    \".\",\n    \"..\",\n    \"...\",\n    \"/\",\n    \"/=\",\n    \":\",\n    \";\",\n    \"<<\",\n    \"<<=\",\n    \"<\",\n    \"<=\",\n    \"=\",\n    \"==\",\n    \"=>\",\n    \">\",\n    \">=\",\n    \">>\",\n    \">>=\",\n    \"@\",\n    \"^\",\n    \"^=\",\n    \"|\",\n    \"|=\",\n    \"||\",\n    \"_\",\n    \"?\",\n    \"#\"\n  ],\n  escapes: /\\\\([nrt0\\\"''\\\\]|x\\h{2}|u\\{\\h{1,6}\\})/,\n  delimiters: /[,]/,\n  symbols: /[\\#\\!\\%\\&\\*\\+\\-\\.\\/\\:\\;\\<\\=\\>\\@\\^\\|_\\?]+/,\n  intSuffixes: /[iu](8|16|32|64|128|size)/,\n  floatSuffixes: /f(32|64)/,\n  tokenizer: {\n    root: [\n      [/r(#*)\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@stringraw.$1\" }],\n      [\n        /[a-zA-Z][a-zA-Z0-9_]*!?|_[a-zA-Z0-9_]+/,\n        {\n          cases: {\n            \"@typeKeywords\": \"keyword.type\",\n            \"@keywords\": \"keyword\",\n            \"@supportConstants\": \"keyword\",\n            \"@supportMacros\": \"keyword\",\n            \"@constants\": \"keyword\",\n            \"@default\": \"identifier\"\n          }\n        }\n      ],\n      [/\\$/, \"identifier\"],\n      [/'[a-zA-Z_][a-zA-Z0-9_]*(?=[^\\'])/, \"identifier\"],\n      [/'(\\S|@escapes)'/, \"string.byteliteral\"],\n      [/\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@string\" }],\n      { include: \"@numbers\" },\n      { include: \"@whitespace\" },\n      [\n        /@delimiters/,\n        {\n          cases: {\n            \"@keywords\": \"keyword\",\n            \"@default\": \"delimiter\"\n          }\n        }\n      ],\n      [/[{}()\\[\\]<>]/, \"@brackets\"],\n      [/@symbols/, { cases: { \"@operators\": \"operator\", \"@default\": \"\" } }]\n    ],\n    whitespace: [\n      [/[ \\t\\r\\n]+/, \"white\"],\n      [/\\/\\*/, \"comment\", \"@comment\"],\n      [/\\/\\/.*$/, \"comment\"]\n    ],\n    comment: [\n      [/[^\\/*]+/, \"comment\"],\n      [/\\/\\*/, \"comment\", \"@push\"],\n      [\"\\\\*/\", \"comment\", \"@pop\"],\n      [/[\\/*]/, \"comment\"]\n    ],\n    string: [\n      [/[^\\\\\"]+/, \"string\"],\n      [/@escapes/, \"string.escape\"],\n      [/\\\\./, \"string.escape.invalid\"],\n      [/\"/, { token: \"string.quote\", bracket: \"@close\", next: \"@pop\" }]\n    ],\n    stringraw: [\n      [/[^\"#]+/, { token: \"string\" }],\n      [\n        /\"(#*)/,\n        {\n          cases: {\n            \"$1==$S2\": { token: \"string.quote\", bracket: \"@close\", next: \"@pop\" },\n            \"@default\": { token: \"string\" }\n          }\n        }\n      ],\n      [/[\"#]/, { token: \"string\" }]\n    ],\n    numbers: [\n      [/(0o[0-7_]+)(@intSuffixes)?/, { token: \"number\" }],\n      [/(0b[0-1_]+)(@intSuffixes)?/, { token: \"number\" }],\n      [/[\\d][\\d_]*(\\.[\\d][\\d_]*)?[eE][+-][\\d_]+(@floatSuffixes)?/, { token: \"number\" }],\n      [/\\b(\\d\\.?[\\d_]*)(@floatSuffixes)?\\b/, { token: \"number\" }],\n      [/(0x[\\da-fA-F]+)_?(@intSuffixes)?/, { token: \"number\" }],\n      [/[\\d][\\d_]*(@intSuffixes?)?/, { token: \"number\" }]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"],"names":[],"version":3,"file":"rust.8e06270a.js.map"}