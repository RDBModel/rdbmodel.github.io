{"mappings":"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","sources":["node_modules/monaco-editor/esm/vs/basic-languages/ruby/ruby.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.31.0(252e010eb73ddc2fa1a37c1dade7bf35d87106cd)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/ruby/ruby.ts\nvar conf = {\n  comments: {\n    lineComment: \"#\",\n    blockComment: [\"=begin\", \"=end\"]\n  },\n  brackets: [\n    [\"(\", \")\"],\n    [\"{\", \"}\"],\n    [\"[\", \"]\"]\n  ],\n  autoClosingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" }\n  ],\n  surroundingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" }\n  ],\n  indentationRules: {\n    increaseIndentPattern: new RegExp(`^\\\\s*((begin|class|(private|protected)\\\\s+def|def|else|elsif|ensure|for|if|module|rescue|unless|until|when|while|case)|([^#]*\\\\sdo\\\\b)|([^#]*=\\\\s*(case|if|unless)))\\\\b([^#\\\\{;]|(\"|'|/).*\\\\4)*(#.*)?$`),\n    decreaseIndentPattern: new RegExp(\"^\\\\s*([}\\\\]]([,)]?\\\\s*(#|$)|\\\\.[a-zA-Z_]\\\\w*\\\\b)|(end|rescue|ensure|else|elsif|when)\\\\b)\")\n  }\n};\nvar language = {\n  tokenPostfix: \".ruby\",\n  keywords: [\n    \"__LINE__\",\n    \"__ENCODING__\",\n    \"__FILE__\",\n    \"BEGIN\",\n    \"END\",\n    \"alias\",\n    \"and\",\n    \"begin\",\n    \"break\",\n    \"case\",\n    \"class\",\n    \"def\",\n    \"defined?\",\n    \"do\",\n    \"else\",\n    \"elsif\",\n    \"end\",\n    \"ensure\",\n    \"for\",\n    \"false\",\n    \"if\",\n    \"in\",\n    \"module\",\n    \"next\",\n    \"nil\",\n    \"not\",\n    \"or\",\n    \"redo\",\n    \"rescue\",\n    \"retry\",\n    \"return\",\n    \"self\",\n    \"super\",\n    \"then\",\n    \"true\",\n    \"undef\",\n    \"unless\",\n    \"until\",\n    \"when\",\n    \"while\",\n    \"yield\"\n  ],\n  keywordops: [\"::\", \"..\", \"...\", \"?\", \":\", \"=>\"],\n  builtins: [\n    \"require\",\n    \"public\",\n    \"private\",\n    \"include\",\n    \"extend\",\n    \"attr_reader\",\n    \"protected\",\n    \"private_class_method\",\n    \"protected_class_method\",\n    \"new\"\n  ],\n  declarations: [\n    \"module\",\n    \"class\",\n    \"def\",\n    \"case\",\n    \"do\",\n    \"begin\",\n    \"for\",\n    \"if\",\n    \"while\",\n    \"until\",\n    \"unless\"\n  ],\n  linedecls: [\"def\", \"case\", \"do\", \"begin\", \"for\", \"if\", \"while\", \"until\", \"unless\"],\n  operators: [\n    \"^\",\n    \"&\",\n    \"|\",\n    \"<=>\",\n    \"==\",\n    \"===\",\n    \"!~\",\n    \"=~\",\n    \">\",\n    \">=\",\n    \"<\",\n    \"<=\",\n    \"<<\",\n    \">>\",\n    \"+\",\n    \"-\",\n    \"*\",\n    \"/\",\n    \"%\",\n    \"**\",\n    \"~\",\n    \"+@\",\n    \"-@\",\n    \"[]\",\n    \"[]=\",\n    \"`\",\n    \"+=\",\n    \"-=\",\n    \"*=\",\n    \"**=\",\n    \"/=\",\n    \"^=\",\n    \"%=\",\n    \"<<=\",\n    \">>=\",\n    \"&=\",\n    \"&&=\",\n    \"||=\",\n    \"|=\"\n  ],\n  brackets: [\n    { open: \"(\", close: \")\", token: \"delimiter.parenthesis\" },\n    { open: \"{\", close: \"}\", token: \"delimiter.curly\" },\n    { open: \"[\", close: \"]\", token: \"delimiter.square\" }\n  ],\n  symbols: /[=><!~?:&|+\\-*\\/\\^%\\.]+/,\n  escape: /(?:[abefnrstv\\\\\"'\\n\\r]|[0-7]{1,3}|x[0-9A-Fa-f]{1,2}|u[0-9A-Fa-f]{4})/,\n  escapes: /\\\\(?:C\\-(@escape|.)|c(@escape|.)|@escape)/,\n  decpart: /\\d(_?\\d)*/,\n  decimal: /0|@decpart/,\n  delim: /[^a-zA-Z0-9\\s\\n\\r]/,\n  heredelim: /(?:\\w+|'[^']*'|\"[^\"]*\"|`[^`]*`)/,\n  regexpctl: /[(){}\\[\\]\\$\\^|\\-*+?\\.]/,\n  regexpesc: /\\\\(?:[AzZbBdDfnrstvwWn0\\\\\\/]|@regexpctl|c[A-Z]|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4})?/,\n  tokenizer: {\n    root: [\n      [\n        /^(\\s*)([a-z_]\\w*[!?=]?)/,\n        [\n          \"white\",\n          {\n            cases: {\n              \"for|until|while\": {\n                token: \"keyword.$2\",\n                next: \"@dodecl.$2\"\n              },\n              \"@declarations\": {\n                token: \"keyword.$2\",\n                next: \"@root.$2\"\n              },\n              end: { token: \"keyword.$S2\", next: \"@pop\" },\n              \"@keywords\": \"keyword\",\n              \"@builtins\": \"predefined\",\n              \"@default\": \"identifier\"\n            }\n          }\n        ]\n      ],\n      [\n        /[a-z_]\\w*[!?=]?/,\n        {\n          cases: {\n            \"if|unless|while|until\": {\n              token: \"keyword.$0x\",\n              next: \"@modifier.$0x\"\n            },\n            for: { token: \"keyword.$2\", next: \"@dodecl.$2\" },\n            \"@linedecls\": { token: \"keyword.$0\", next: \"@root.$0\" },\n            end: { token: \"keyword.$S2\", next: \"@pop\" },\n            \"@keywords\": \"keyword\",\n            \"@builtins\": \"predefined\",\n            \"@default\": \"identifier\"\n          }\n        }\n      ],\n      [/[A-Z][\\w]*[!?=]?/, \"constructor.identifier\"],\n      [/\\$[\\w]*/, \"global.constant\"],\n      [/@[\\w]*/, \"namespace.instance.identifier\"],\n      [/@@@[\\w]*/, \"namespace.class.identifier\"],\n      [/<<[-~](@heredelim).*/, { token: \"string.heredoc.delimiter\", next: \"@heredoc.$1\" }],\n      [/[ \\t\\r\\n]+<<(@heredelim).*/, { token: \"string.heredoc.delimiter\", next: \"@heredoc.$1\" }],\n      [/^<<(@heredelim).*/, { token: \"string.heredoc.delimiter\", next: \"@heredoc.$1\" }],\n      { include: \"@whitespace\" },\n      [/\"/, { token: \"string.d.delim\", next: '@dstring.d.\"' }],\n      [/'/, { token: \"string.sq.delim\", next: \"@sstring.sq\" }],\n      [/%([rsqxwW]|Q?)/, { token: \"@rematch\", next: \"pstring\" }],\n      [/`/, { token: \"string.x.delim\", next: \"@dstring.x.`\" }],\n      [/:(\\w|[$@])\\w*[!?=]?/, \"string.s\"],\n      [/:\"/, { token: \"string.s.delim\", next: '@dstring.s.\"' }],\n      [/:'/, { token: \"string.s.delim\", next: \"@sstring.s\" }],\n      [/\\/(?=(\\\\\\/|[^\\/\\n])+\\/)/, { token: \"regexp.delim\", next: \"@regexp\" }],\n      [/[{}()\\[\\]]/, \"@brackets\"],\n      [\n        /@symbols/,\n        {\n          cases: {\n            \"@keywordops\": \"keyword\",\n            \"@operators\": \"operator\",\n            \"@default\": \"\"\n          }\n        }\n      ],\n      [/[;,]/, \"delimiter\"],\n      [/0[xX][0-9a-fA-F](_?[0-9a-fA-F])*/, \"number.hex\"],\n      [/0[_oO][0-7](_?[0-7])*/, \"number.octal\"],\n      [/0[bB][01](_?[01])*/, \"number.binary\"],\n      [/0[dD]@decpart/, \"number\"],\n      [\n        /@decimal((\\.@decpart)?([eE][\\-+]?@decpart)?)/,\n        {\n          cases: {\n            $1: \"number.float\",\n            \"@default\": \"number\"\n          }\n        }\n      ]\n    ],\n    dodecl: [\n      [/^/, { token: \"\", switchTo: \"@root.$S2\" }],\n      [\n        /[a-z_]\\w*[!?=]?/,\n        {\n          cases: {\n            end: { token: \"keyword.$S2\", next: \"@pop\" },\n            do: { token: \"keyword\", switchTo: \"@root.$S2\" },\n            \"@linedecls\": {\n              token: \"@rematch\",\n              switchTo: \"@root.$S2\"\n            },\n            \"@keywords\": \"keyword\",\n            \"@builtins\": \"predefined\",\n            \"@default\": \"identifier\"\n          }\n        }\n      ],\n      { include: \"@root\" }\n    ],\n    modifier: [\n      [/^/, \"\", \"@pop\"],\n      [\n        /[a-z_]\\w*[!?=]?/,\n        {\n          cases: {\n            end: { token: \"keyword.$S2\", next: \"@pop\" },\n            \"then|else|elsif|do\": {\n              token: \"keyword\",\n              switchTo: \"@root.$S2\"\n            },\n            \"@linedecls\": {\n              token: \"@rematch\",\n              switchTo: \"@root.$S2\"\n            },\n            \"@keywords\": \"keyword\",\n            \"@builtins\": \"predefined\",\n            \"@default\": \"identifier\"\n          }\n        }\n      ],\n      { include: \"@root\" }\n    ],\n    sstring: [\n      [/[^\\\\']+/, \"string.$S2\"],\n      [/\\\\\\\\|\\\\'|\\\\$/, \"string.$S2.escape\"],\n      [/\\\\./, \"string.$S2.invalid\"],\n      [/'/, { token: \"string.$S2.delim\", next: \"@pop\" }]\n    ],\n    dstring: [\n      [/[^\\\\`\"#]+/, \"string.$S2\"],\n      [/#/, \"string.$S2.escape\", \"@interpolated\"],\n      [/\\\\$/, \"string.$S2.escape\"],\n      [/@escapes/, \"string.$S2.escape\"],\n      [/\\\\./, \"string.$S2.escape.invalid\"],\n      [\n        /[`\"]/,\n        {\n          cases: {\n            \"$#==$S3\": { token: \"string.$S2.delim\", next: \"@pop\" },\n            \"@default\": \"string.$S2\"\n          }\n        }\n      ]\n    ],\n    heredoc: [\n      [\n        /^(\\s*)(@heredelim)$/,\n        {\n          cases: {\n            \"$2==$S2\": [\"string.heredoc\", { token: \"string.heredoc.delimiter\", next: \"@pop\" }],\n            \"@default\": [\"string.heredoc\", \"string.heredoc\"]\n          }\n        }\n      ],\n      [/.*/, \"string.heredoc\"]\n    ],\n    interpolated: [\n      [/\\$\\w*/, \"global.constant\", \"@pop\"],\n      [/@\\w*/, \"namespace.class.identifier\", \"@pop\"],\n      [/@@@\\w*/, \"namespace.instance.identifier\", \"@pop\"],\n      [\n        /[{]/,\n        {\n          token: \"string.escape.curly\",\n          switchTo: \"@interpolated_compound\"\n        }\n      ],\n      [\"\", \"\", \"@pop\"]\n    ],\n    interpolated_compound: [\n      [/[}]/, { token: \"string.escape.curly\", next: \"@pop\" }],\n      { include: \"@root\" }\n    ],\n    pregexp: [\n      { include: \"@whitespace\" },\n      [\n        /[^\\(\\{\\[\\\\]/,\n        {\n          cases: {\n            \"$#==$S3\": { token: \"regexp.delim\", next: \"@pop\" },\n            \"$#==$S2\": { token: \"regexp.delim\", next: \"@push\" },\n            \"~[)}\\\\]]\": \"@brackets.regexp.escape.control\",\n            \"~@regexpctl\": \"regexp.escape.control\",\n            \"@default\": \"regexp\"\n          }\n        }\n      ],\n      { include: \"@regexcontrol\" }\n    ],\n    regexp: [\n      { include: \"@regexcontrol\" },\n      [/[^\\\\\\/]/, \"regexp\"],\n      [\"/[ixmp]*\", { token: \"regexp.delim\" }, \"@pop\"]\n    ],\n    regexcontrol: [\n      [\n        /(\\{)(\\d+(?:,\\d*)?)(\\})/,\n        [\n          \"@brackets.regexp.escape.control\",\n          \"regexp.escape.control\",\n          \"@brackets.regexp.escape.control\"\n        ]\n      ],\n      [\n        /(\\[)(\\^?)/,\n        [\"@brackets.regexp.escape.control\", { token: \"regexp.escape.control\", next: \"@regexrange\" }]\n      ],\n      [/(\\()(\\?[:=!])/, [\"@brackets.regexp.escape.control\", \"regexp.escape.control\"]],\n      [/\\(\\?#/, { token: \"regexp.escape.control\", next: \"@regexpcomment\" }],\n      [/[()]/, \"@brackets.regexp.escape.control\"],\n      [/@regexpctl/, \"regexp.escape.control\"],\n      [/\\\\$/, \"regexp.escape\"],\n      [/@regexpesc/, \"regexp.escape\"],\n      [/\\\\\\./, \"regexp.invalid\"],\n      [/#/, \"regexp.escape\", \"@interpolated\"]\n    ],\n    regexrange: [\n      [/-/, \"regexp.escape.control\"],\n      [/\\^/, \"regexp.invalid\"],\n      [/\\\\$/, \"regexp.escape\"],\n      [/@regexpesc/, \"regexp.escape\"],\n      [/[^\\]]/, \"regexp\"],\n      [/\\]/, \"@brackets.regexp.escape.control\", \"@pop\"]\n    ],\n    regexpcomment: [\n      [/[^)]+/, \"comment\"],\n      [/\\)/, { token: \"regexp.escape.control\", next: \"@pop\" }]\n    ],\n    pstring: [\n      [/%([qws])\\(/, { token: \"string.$1.delim\", switchTo: \"@qstring.$1.(.)\" }],\n      [/%([qws])\\[/, { token: \"string.$1.delim\", switchTo: \"@qstring.$1.[.]\" }],\n      [/%([qws])\\{/, { token: \"string.$1.delim\", switchTo: \"@qstring.$1.{.}\" }],\n      [/%([qws])</, { token: \"string.$1.delim\", switchTo: \"@qstring.$1.<.>\" }],\n      [/%([qws])(@delim)/, { token: \"string.$1.delim\", switchTo: \"@qstring.$1.$2.$2\" }],\n      [/%r\\(/, { token: \"regexp.delim\", switchTo: \"@pregexp.(.)\" }],\n      [/%r\\[/, { token: \"regexp.delim\", switchTo: \"@pregexp.[.]\" }],\n      [/%r\\{/, { token: \"regexp.delim\", switchTo: \"@pregexp.{.}\" }],\n      [/%r</, { token: \"regexp.delim\", switchTo: \"@pregexp.<.>\" }],\n      [/%r(@delim)/, { token: \"regexp.delim\", switchTo: \"@pregexp.$1.$1\" }],\n      [/%(x|W|Q?)\\(/, { token: \"string.$1.delim\", switchTo: \"@qqstring.$1.(.)\" }],\n      [/%(x|W|Q?)\\[/, { token: \"string.$1.delim\", switchTo: \"@qqstring.$1.[.]\" }],\n      [/%(x|W|Q?)\\{/, { token: \"string.$1.delim\", switchTo: \"@qqstring.$1.{.}\" }],\n      [/%(x|W|Q?)</, { token: \"string.$1.delim\", switchTo: \"@qqstring.$1.<.>\" }],\n      [/%(x|W|Q?)(@delim)/, { token: \"string.$1.delim\", switchTo: \"@qqstring.$1.$2.$2\" }],\n      [/%([rqwsxW]|Q?)./, { token: \"invalid\", next: \"@pop\" }],\n      [/./, { token: \"invalid\", next: \"@pop\" }]\n    ],\n    qstring: [\n      [/\\\\$/, \"string.$S2.escape\"],\n      [/\\\\./, \"string.$S2.escape\"],\n      [\n        /./,\n        {\n          cases: {\n            \"$#==$S4\": { token: \"string.$S2.delim\", next: \"@pop\" },\n            \"$#==$S3\": { token: \"string.$S2.delim\", next: \"@push\" },\n            \"@default\": \"string.$S2\"\n          }\n        }\n      ]\n    ],\n    qqstring: [[/#/, \"string.$S2.escape\", \"@interpolated\"], { include: \"@qstring\" }],\n    whitespace: [\n      [/[ \\t\\r\\n]+/, \"\"],\n      [/^\\s*=begin\\b/, \"comment\", \"@comment\"],\n      [/#.*$/, \"comment\"]\n    ],\n    comment: [\n      [/[^=]+/, \"comment\"],\n      [/^\\s*=begin\\b/, \"comment.invalid\"],\n      [/^\\s*=end\\b.*/, \"comment\", \"@pop\"],\n      [/[=]/, \"comment\"]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"],"names":[],"version":3,"file":"ruby.1213ce4d.js.map"}