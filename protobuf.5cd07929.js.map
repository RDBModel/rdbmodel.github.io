{"mappings":"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","sources":["node_modules/monaco-editor/esm/vs/basic-languages/protobuf/protobuf.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.31.0(252e010eb73ddc2fa1a37c1dade7bf35d87106cd)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/protobuf/protobuf.ts\nvar namedLiterals = [\"true\", \"false\"];\nvar conf = {\n  comments: {\n    lineComment: \"//\",\n    blockComment: [\"/*\", \"*/\"]\n  },\n  brackets: [\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n    [\"(\", \")\"],\n    [\"<\", \">\"]\n  ],\n  surroundingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: \"<\", close: \">\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" }\n  ],\n  autoClosingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: \"<\", close: \">\" },\n    { open: '\"', close: '\"', notIn: [\"string\"] },\n    { open: \"'\", close: \"'\", notIn: [\"string\"] }\n  ],\n  autoCloseBefore: \".,=}])>' \\n\t\",\n  indentationRules: {\n    increaseIndentPattern: new RegExp(\"^((?!\\\\/\\\\/).)*(\\\\{[^}\\\"'`]*|\\\\([^)\\\"'`]*|\\\\[[^\\\\]\\\"'`]*)$\"),\n    decreaseIndentPattern: new RegExp(\"^((?!.*?\\\\/\\\\*).*\\\\*/)?\\\\s*[\\\\}\\\\]].*$\")\n  }\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".proto\",\n  brackets: [\n    { open: \"{\", close: \"}\", token: \"delimiter.curly\" },\n    { open: \"[\", close: \"]\", token: \"delimiter.square\" },\n    { open: \"(\", close: \")\", token: \"delimiter.parenthesis\" },\n    { open: \"<\", close: \">\", token: \"delimiter.angle\" }\n  ],\n  symbols: /[=><!~?:&|+\\-*/^%]+/,\n  keywords: [\n    \"syntax\",\n    \"import\",\n    \"weak\",\n    \"public\",\n    \"package\",\n    \"option\",\n    \"repeated\",\n    \"oneof\",\n    \"map\",\n    \"reserved\",\n    \"to\",\n    \"max\",\n    \"enum\",\n    \"message\",\n    \"service\",\n    \"rpc\",\n    \"stream\",\n    \"returns\",\n    \"package\",\n    \"optional\",\n    \"true\",\n    \"false\"\n  ],\n  builtinTypes: [\n    \"double\",\n    \"float\",\n    \"int32\",\n    \"int64\",\n    \"uint32\",\n    \"uint64\",\n    \"sint32\",\n    \"sint64\",\n    \"fixed32\",\n    \"fixed64\",\n    \"sfixed32\",\n    \"sfixed64\",\n    \"bool\",\n    \"string\",\n    \"bytes\"\n  ],\n  operators: [\"=\", \"+\", \"-\"],\n  namedLiterals,\n  escapes: `\\\\\\\\(u{[0-9A-Fa-f]+}|n|r|t|\\\\\\\\|'|\\\\\\${)`,\n  identifier: /[a-zA-Z]\\w*/,\n  fullIdentifier: /@identifier(?:\\s*\\.\\s*@identifier)*/,\n  optionName: /(?:@identifier|\\(\\s*@fullIdentifier\\s*\\))(?:\\s*\\.\\s*@identifier)*/,\n  messageName: /@identifier/,\n  enumName: /@identifier/,\n  messageType: /\\.?\\s*(?:@identifier\\s*\\.\\s*)*@messageName/,\n  enumType: /\\.?\\s*(?:@identifier\\s*\\.\\s*)*@enumName/,\n  floatLit: /[0-9]+\\s*\\.\\s*[0-9]*(?:@exponent)?|[0-9]+@exponent|\\.[0-9]+(?:@exponent)?/,\n  exponent: /[eE]\\s*[+-]?\\s*[0-9]+/,\n  boolLit: /true\\b|false\\b/,\n  decimalLit: /[1-9][0-9]*/,\n  octalLit: /0[0-7]*/,\n  hexLit: /0[xX][0-9a-fA-F]+/,\n  type: /double|float|int32|int64|uint32|uint64|sint32|sint64|fixed32|fixed64|sfixed32|sfixed64|bool|string|bytes|@messageType|@enumType/,\n  keyType: /int32|int64|uint32|uint64|sint32|sint64|fixed32|fixed64|sfixed32|sfixed64|bool|string/,\n  tokenizer: {\n    root: [\n      { include: \"@whitespace\" },\n      [/syntax/, \"keyword\"],\n      [/=/, \"operators\"],\n      [/;/, \"delimiter\"],\n      [\n        /(\")(proto3)(\")/,\n        [\"string.quote\", \"string\", { token: \"string.quote\", switchTo: \"@topLevel.proto3\" }]\n      ],\n      [\n        /(\")(proto2)(\")/,\n        [\"string.quote\", \"string\", { token: \"string.quote\", switchTo: \"@topLevel.proto2\" }]\n      ],\n      [\n        /.*?/,\n        { token: \"\", switchTo: \"@topLevel.proto2\" }\n      ]\n    ],\n    topLevel: [\n      { include: \"@whitespace\" },\n      { include: \"@constant\" },\n      [/=/, \"operators\"],\n      [/[;.]/, \"delimiter\"],\n      [\n        /@fullIdentifier/,\n        {\n          cases: {\n            option: { token: \"keyword\", next: \"@option.$S2\" },\n            enum: { token: \"keyword\", next: \"@enumDecl.$S2\" },\n            message: { token: \"keyword\", next: \"@messageDecl.$S2\" },\n            service: { token: \"keyword\", next: \"@serviceDecl.$S2\" },\n            extend: {\n              cases: {\n                \"$S2==proto2\": { token: \"keyword\", next: \"@extendDecl.$S2\" }\n              }\n            },\n            \"@keywords\": \"keyword\",\n            \"@default\": \"identifier\"\n          }\n        }\n      ]\n    ],\n    enumDecl: [\n      { include: \"@whitespace\" },\n      [/@identifier/, \"type.identifier\"],\n      [/{/, { token: \"@brackets\", bracket: \"@open\", switchTo: \"@enumBody.$S2\" }]\n    ],\n    enumBody: [\n      { include: \"@whitespace\" },\n      { include: \"@constant\" },\n      [/=/, \"operators\"],\n      [/;/, \"delimiter\"],\n      [/option\\b/, \"keyword\", \"@option.$S2\"],\n      [/@identifier/, \"identifier\"],\n      [/\\[/, { token: \"@brackets\", bracket: \"@open\", next: \"@options.$S2\" }],\n      [/}/, { token: \"@brackets\", bracket: \"@close\", next: \"@pop\" }]\n    ],\n    messageDecl: [\n      { include: \"@whitespace\" },\n      [/@identifier/, \"type.identifier\"],\n      [/{/, { token: \"@brackets\", bracket: \"@open\", switchTo: \"@messageBody.$S2\" }]\n    ],\n    messageBody: [\n      { include: \"@whitespace\" },\n      { include: \"@constant\" },\n      [/=/, \"operators\"],\n      [/;/, \"delimiter\"],\n      [\n        \"(map)(s*)(<)\",\n        [\"keyword\", \"white\", { token: \"@brackets\", bracket: \"@open\", next: \"@map.$S2\" }]\n      ],\n      [\n        /@identifier/,\n        {\n          cases: {\n            option: { token: \"keyword\", next: \"@option.$S2\" },\n            enum: { token: \"keyword\", next: \"@enumDecl.$S2\" },\n            message: { token: \"keyword\", next: \"@messageDecl.$S2\" },\n            oneof: { token: \"keyword\", next: \"@oneofDecl.$S2\" },\n            extensions: {\n              cases: {\n                \"$S2==proto2\": { token: \"keyword\", next: \"@reserved.$S2\" }\n              }\n            },\n            reserved: { token: \"keyword\", next: \"@reserved.$S2\" },\n            \"(?:repeated|optional)\": { token: \"keyword\", next: \"@field.$S2\" },\n            required: {\n              cases: {\n                \"$S2==proto2\": { token: \"keyword\", next: \"@field.$S2\" }\n              }\n            },\n            \"$S2==proto3\": { token: \"@rematch\", next: \"@field.$S2\" }\n          }\n        }\n      ],\n      [/\\[/, { token: \"@brackets\", bracket: \"@open\", next: \"@options.$S2\" }],\n      [/}/, { token: \"@brackets\", bracket: \"@close\", next: \"@pop\" }]\n    ],\n    extendDecl: [\n      { include: \"@whitespace\" },\n      [/@identifier/, \"type.identifier\"],\n      [/{/, { token: \"@brackets\", bracket: \"@open\", switchTo: \"@extendBody.$S2\" }]\n    ],\n    extendBody: [\n      { include: \"@whitespace\" },\n      { include: \"@constant\" },\n      [/;/, \"delimiter\"],\n      [/(?:repeated|optional|required)/, \"keyword\", \"@field.$S2\"],\n      [/\\[/, { token: \"@brackets\", bracket: \"@open\", next: \"@options.$S2\" }],\n      [/}/, { token: \"@brackets\", bracket: \"@close\", next: \"@pop\" }]\n    ],\n    options: [\n      { include: \"@whitespace\" },\n      { include: \"@constant\" },\n      [/;/, \"delimiter\"],\n      [/@optionName/, \"annotation\"],\n      [/[()]/, \"annotation.brackets\"],\n      [/=/, \"operator\"],\n      [/\\]/, { token: \"@brackets\", bracket: \"@close\", next: \"@pop\" }]\n    ],\n    option: [\n      { include: \"@whitespace\" },\n      [/@optionName/, \"annotation\"],\n      [/[()]/, \"annotation.brackets\"],\n      [/=/, \"operator\", \"@pop\"]\n    ],\n    oneofDecl: [\n      { include: \"@whitespace\" },\n      [/@identifier/, \"identifier\"],\n      [/{/, { token: \"@brackets\", bracket: \"@open\", switchTo: \"@oneofBody.$S2\" }]\n    ],\n    oneofBody: [\n      { include: \"@whitespace\" },\n      { include: \"@constant\" },\n      [/;/, \"delimiter\"],\n      [/(@identifier)(\\s*)(=)/, [\"identifier\", \"white\", \"delimiter\"]],\n      [\n        /@fullIdentifier|\\./,\n        {\n          cases: {\n            \"@builtinTypes\": \"keyword\",\n            \"@default\": \"type.identifier\"\n          }\n        }\n      ],\n      [/\\[/, { token: \"@brackets\", bracket: \"@open\", next: \"@options.$S2\" }],\n      [/}/, { token: \"@brackets\", bracket: \"@close\", next: \"@pop\" }]\n    ],\n    reserved: [\n      { include: \"@whitespace\" },\n      [/,/, \"delimiter\"],\n      [/;/, \"delimiter\", \"@pop\"],\n      { include: \"@constant\" },\n      [/to\\b|max\\b/, \"keyword\"]\n    ],\n    map: [\n      { include: \"@whitespace\" },\n      [\n        /@fullIdentifier|\\./,\n        {\n          cases: {\n            \"@builtinTypes\": \"keyword\",\n            \"@default\": \"type.identifier\"\n          }\n        }\n      ],\n      [/,/, \"delimiter\"],\n      [/>/, { token: \"@brackets\", bracket: \"@close\", switchTo: \"identifier\" }]\n    ],\n    field: [\n      { include: \"@whitespace\" },\n      [\n        \"group\",\n        {\n          cases: {\n            \"$S2==proto2\": { token: \"keyword\", switchTo: \"@groupDecl.$S2\" }\n          }\n        }\n      ],\n      [/(@identifier)(\\s*)(=)/, [\"identifier\", \"white\", { token: \"delimiter\", next: \"@pop\" }]],\n      [\n        /@fullIdentifier|\\./,\n        {\n          cases: {\n            \"@builtinTypes\": \"keyword\",\n            \"@default\": \"type.identifier\"\n          }\n        }\n      ]\n    ],\n    groupDecl: [\n      { include: \"@whitespace\" },\n      [/@identifier/, \"identifier\"],\n      [\"=\", \"operator\"],\n      [/{/, { token: \"@brackets\", bracket: \"@open\", switchTo: \"@messageBody.$S2\" }],\n      { include: \"@constant\" }\n    ],\n    type: [\n      { include: \"@whitespace\" },\n      [/@identifier/, \"type.identifier\", \"@pop\"],\n      [/./, \"delimiter\"]\n    ],\n    identifier: [{ include: \"@whitespace\" }, [/@identifier/, \"identifier\", \"@pop\"]],\n    serviceDecl: [\n      { include: \"@whitespace\" },\n      [/@identifier/, \"identifier\"],\n      [/{/, { token: \"@brackets\", bracket: \"@open\", switchTo: \"@serviceBody.$S2\" }]\n    ],\n    serviceBody: [\n      { include: \"@whitespace\" },\n      { include: \"@constant\" },\n      [/;/, \"delimiter\"],\n      [/option\\b/, \"keyword\", \"@option.$S2\"],\n      [/rpc\\b/, \"keyword\", \"@rpc.$S2\"],\n      [/\\[/, { token: \"@brackets\", bracket: \"@open\", next: \"@options.$S2\" }],\n      [/}/, { token: \"@brackets\", bracket: \"@close\", next: \"@pop\" }]\n    ],\n    rpc: [\n      { include: \"@whitespace\" },\n      [/@identifier/, \"identifier\"],\n      [/\\(/, { token: \"@brackets\", bracket: \"@open\", switchTo: \"@request.$S2\" }],\n      [/{/, { token: \"@brackets\", bracket: \"@open\", next: \"@methodOptions.$S2\" }],\n      [/;/, \"delimiter\", \"@pop\"]\n    ],\n    request: [\n      { include: \"@whitespace\" },\n      [\n        /@messageType/,\n        {\n          cases: {\n            stream: { token: \"keyword\", next: \"@type.$S2\" },\n            \"@default\": \"type.identifier\"\n          }\n        }\n      ],\n      [/\\)/, { token: \"@brackets\", bracket: \"@close\", switchTo: \"@returns.$S2\" }]\n    ],\n    returns: [\n      { include: \"@whitespace\" },\n      [/returns\\b/, \"keyword\"],\n      [/\\(/, { token: \"@brackets\", bracket: \"@open\", switchTo: \"@response.$S2\" }]\n    ],\n    response: [\n      { include: \"@whitespace\" },\n      [\n        /@messageType/,\n        {\n          cases: {\n            stream: { token: \"keyword\", next: \"@type.$S2\" },\n            \"@default\": \"type.identifier\"\n          }\n        }\n      ],\n      [/\\)/, { token: \"@brackets\", bracket: \"@close\", switchTo: \"@rpc.$S2\" }]\n    ],\n    methodOptions: [\n      { include: \"@whitespace\" },\n      { include: \"@constant\" },\n      [/;/, \"delimiter\"],\n      [\"option\", \"keyword\"],\n      [/@optionName/, \"annotation\"],\n      [/[()]/, \"annotation.brackets\"],\n      [/=/, \"operator\"],\n      [/}/, { token: \"@brackets\", bracket: \"@close\", next: \"@pop\" }]\n    ],\n    comment: [\n      [/[^\\/*]+/, \"comment\"],\n      [/\\/\\*/, \"comment\", \"@push\"],\n      [\"\\\\*/\", \"comment\", \"@pop\"],\n      [/[\\/*]/, \"comment\"]\n    ],\n    string: [\n      [/[^\\\\\"]+/, \"string\"],\n      [/@escapes/, \"string.escape\"],\n      [/\\\\./, \"string.escape.invalid\"],\n      [/\"/, { token: \"string.quote\", bracket: \"@close\", next: \"@pop\" }]\n    ],\n    stringSingle: [\n      [/[^\\\\']+/, \"string\"],\n      [/@escapes/, \"string.escape\"],\n      [/\\\\./, \"string.escape.invalid\"],\n      [/'/, { token: \"string.quote\", bracket: \"@close\", next: \"@pop\" }]\n    ],\n    constant: [\n      [\"@boolLit\", \"keyword.constant\"],\n      [\"@hexLit\", \"number.hex\"],\n      [\"@octalLit\", \"number.octal\"],\n      [\"@decimalLit\", \"number\"],\n      [\"@floatLit\", \"number.float\"],\n      [/(\"([^\"\\\\]|\\\\.)*|'([^'\\\\]|\\\\.)*)$/, \"string.invalid\"],\n      [/\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@string\" }],\n      [/'/, { token: \"string.quote\", bracket: \"@open\", next: \"@stringSingle\" }],\n      [/{/, { token: \"@brackets\", bracket: \"@open\", next: \"@prototext\" }],\n      [/identifier/, \"identifier\"]\n    ],\n    whitespace: [\n      [/[ \\t\\r\\n]+/, \"white\"],\n      [/\\/\\*/, \"comment\", \"@comment\"],\n      [/\\/\\/.*$/, \"comment\"]\n    ],\n    prototext: [\n      { include: \"@whitespace\" },\n      { include: \"@constant\" },\n      [/@identifier/, \"identifier\"],\n      [/[:;]/, \"delimiter\"],\n      [/}/, { token: \"@brackets\", bracket: \"@close\", next: \"@pop\" }]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"],"names":[],"version":3,"file":"protobuf.5cd07929.js.map"}