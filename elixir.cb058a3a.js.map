{"mappings":"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","sources":["node_modules/monaco-editor/esm/vs/basic-languages/elixir/elixir.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.31.0(252e010eb73ddc2fa1a37c1dade7bf35d87106cd)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/elixir/elixir.ts\nvar conf = {\n  comments: {\n    lineComment: \"#\"\n  },\n  brackets: [\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n    [\"(\", \")\"]\n  ],\n  surroundingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: \"'\", close: \"'\" },\n    { open: '\"', close: '\"' }\n  ],\n  autoClosingPairs: [\n    { open: \"'\", close: \"'\", notIn: [\"string\", \"comment\"] },\n    { open: '\"', close: '\"', notIn: [\"comment\"] },\n    { open: '\"\"\"', close: '\"\"\"' },\n    { open: \"`\", close: \"`\", notIn: [\"string\", \"comment\"] },\n    { open: \"(\", close: \")\" },\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"<<\", close: \">>\" }\n  ],\n  indentationRules: {\n    increaseIndentPattern: /^\\s*(after|else|catch|rescue|fn|[^#]*(do|<\\-|\\->|\\{|\\[|\\=))\\s*$/,\n    decreaseIndentPattern: /^\\s*((\\}|\\])\\s*$|(after|else|catch|rescue|end)\\b)/\n  }\n};\nvar language = {\n  defaultToken: \"source\",\n  tokenPostfix: \".elixir\",\n  brackets: [\n    { open: \"[\", close: \"]\", token: \"delimiter.square\" },\n    { open: \"(\", close: \")\", token: \"delimiter.parenthesis\" },\n    { open: \"{\", close: \"}\", token: \"delimiter.curly\" },\n    { open: \"<<\", close: \">>\", token: \"delimiter.angle.special\" }\n  ],\n  declarationKeywords: [\n    \"def\",\n    \"defp\",\n    \"defn\",\n    \"defnp\",\n    \"defguard\",\n    \"defguardp\",\n    \"defmacro\",\n    \"defmacrop\",\n    \"defdelegate\",\n    \"defcallback\",\n    \"defmacrocallback\",\n    \"defmodule\",\n    \"defprotocol\",\n    \"defexception\",\n    \"defimpl\",\n    \"defstruct\"\n  ],\n  operatorKeywords: [\"and\", \"in\", \"not\", \"or\", \"when\"],\n  namespaceKeywords: [\"alias\", \"import\", \"require\", \"use\"],\n  otherKeywords: [\n    \"after\",\n    \"case\",\n    \"catch\",\n    \"cond\",\n    \"do\",\n    \"else\",\n    \"end\",\n    \"fn\",\n    \"for\",\n    \"if\",\n    \"quote\",\n    \"raise\",\n    \"receive\",\n    \"rescue\",\n    \"super\",\n    \"throw\",\n    \"try\",\n    \"unless\",\n    \"unquote_splicing\",\n    \"unquote\",\n    \"with\"\n  ],\n  constants: [\"true\", \"false\", \"nil\"],\n  nameBuiltin: [\"__MODULE__\", \"__DIR__\", \"__ENV__\", \"__CALLER__\", \"__STACKTRACE__\"],\n  operator: /-[->]?|!={0,2}|\\*{1,2}|\\/|\\\\\\\\|&{1,3}|\\.\\.?|\\^(?:\\^\\^)?|\\+\\+?|<(?:-|<<|=|>|\\|>|~>?)?|=~|={1,3}|>(?:=|>>)?|\\|~>|\\|>|\\|{1,3}|~>>?|~~~|::/,\n  variableName: /[a-z_][a-zA-Z0-9_]*[?!]?/,\n  atomName: /[a-zA-Z_][a-zA-Z0-9_@]*[?!]?|@specialAtomName|@operator/,\n  specialAtomName: /\\.\\.\\.|<<>>|%\\{\\}|%|\\{\\}/,\n  aliasPart: /[A-Z][a-zA-Z0-9_]*/,\n  moduleName: /@aliasPart(?:\\.@aliasPart)*/,\n  sigilSymmetricDelimiter: /\"\"\"|'''|\"|'|\\/|\\|/,\n  sigilStartDelimiter: /@sigilSymmetricDelimiter|<|\\{|\\[|\\(/,\n  sigilEndDelimiter: /@sigilSymmetricDelimiter|>|\\}|\\]|\\)/,\n  sigilModifiers: /[a-zA-Z0-9]*/,\n  decimal: /\\d(?:_?\\d)*/,\n  hex: /[0-9a-fA-F](_?[0-9a-fA-F])*/,\n  octal: /[0-7](_?[0-7])*/,\n  binary: /[01](_?[01])*/,\n  escape: /\\\\u[0-9a-fA-F]{4}|\\\\x[0-9a-fA-F]{2}|\\\\./,\n  tokenizer: {\n    root: [\n      { include: \"@whitespace\" },\n      { include: \"@comments\" },\n      { include: \"@keywordsShorthand\" },\n      { include: \"@numbers\" },\n      { include: \"@identifiers\" },\n      { include: \"@strings\" },\n      { include: \"@atoms\" },\n      { include: \"@sigils\" },\n      { include: \"@attributes\" },\n      { include: \"@symbols\" }\n    ],\n    whitespace: [[/\\s+/, \"white\"]],\n    comments: [[/(#)(.*)/, [\"comment.punctuation\", \"comment\"]]],\n    keywordsShorthand: [\n      [/(@atomName)(:)/, [\"constant\", \"constant.punctuation\"]],\n      [\n        /\"(?=([^\"]|#\\{.*?\\}|\\\\\")*\":)/,\n        { token: \"constant.delimiter\", next: \"@doubleQuotedStringKeyword\" }\n      ],\n      [\n        /'(?=([^']|#\\{.*?\\}|\\\\')*':)/,\n        { token: \"constant.delimiter\", next: \"@singleQuotedStringKeyword\" }\n      ]\n    ],\n    doubleQuotedStringKeyword: [\n      [/\":/, { token: \"constant.delimiter\", next: \"@pop\" }],\n      { include: \"@stringConstantContentInterpol\" }\n    ],\n    singleQuotedStringKeyword: [\n      [/':/, { token: \"constant.delimiter\", next: \"@pop\" }],\n      { include: \"@stringConstantContentInterpol\" }\n    ],\n    numbers: [\n      [/0b@binary/, \"number.binary\"],\n      [/0o@octal/, \"number.octal\"],\n      [/0x@hex/, \"number.hex\"],\n      [/@decimal\\.@decimal([eE]-?@decimal)?/, \"number.float\"],\n      [/@decimal/, \"number\"]\n    ],\n    identifiers: [\n      [\n        /\\b(defp?|defnp?|defmacrop?|defguardp?|defdelegate)(\\s+)(@variableName)(?!\\s+@operator)/,\n        [\n          \"keyword.declaration\",\n          \"white\",\n          {\n            cases: {\n              unquote: \"keyword\",\n              \"@default\": \"function\"\n            }\n          }\n        ]\n      ],\n      [\n        /(@variableName)(?=\\s*\\.?\\s*\\()/,\n        {\n          cases: {\n            \"@declarationKeywords\": \"keyword.declaration\",\n            \"@namespaceKeywords\": \"keyword\",\n            \"@otherKeywords\": \"keyword\",\n            \"@default\": \"function.call\"\n          }\n        }\n      ],\n      [\n        /(@moduleName)(\\s*)(\\.)(\\s*)(@variableName)/,\n        [\"type.identifier\", \"white\", \"operator\", \"white\", \"function.call\"]\n      ],\n      [\n        /(:)(@atomName)(\\s*)(\\.)(\\s*)(@variableName)/,\n        [\"constant.punctuation\", \"constant\", \"white\", \"operator\", \"white\", \"function.call\"]\n      ],\n      [\n        /(\\|>)(\\s*)(@variableName)/,\n        [\n          \"operator\",\n          \"white\",\n          {\n            cases: {\n              \"@otherKeywords\": \"keyword\",\n              \"@default\": \"function.call\"\n            }\n          }\n        ]\n      ],\n      [\n        /(&)(\\s*)(@variableName)/,\n        [\"operator\", \"white\", \"function.call\"]\n      ],\n      [\n        /@variableName/,\n        {\n          cases: {\n            \"@declarationKeywords\": \"keyword.declaration\",\n            \"@operatorKeywords\": \"keyword.operator\",\n            \"@namespaceKeywords\": \"keyword\",\n            \"@otherKeywords\": \"keyword\",\n            \"@constants\": \"constant.language\",\n            \"@nameBuiltin\": \"variable.language\",\n            \"_.*\": \"comment.unused\",\n            \"@default\": \"identifier\"\n          }\n        }\n      ],\n      [/@moduleName/, \"type.identifier\"]\n    ],\n    strings: [\n      [/\"\"\"/, { token: \"string.delimiter\", next: \"@doubleQuotedHeredoc\" }],\n      [/'''/, { token: \"string.delimiter\", next: \"@singleQuotedHeredoc\" }],\n      [/\"/, { token: \"string.delimiter\", next: \"@doubleQuotedString\" }],\n      [/'/, { token: \"string.delimiter\", next: \"@singleQuotedString\" }]\n    ],\n    doubleQuotedHeredoc: [\n      [/\"\"\"/, { token: \"string.delimiter\", next: \"@pop\" }],\n      { include: \"@stringContentInterpol\" }\n    ],\n    singleQuotedHeredoc: [\n      [/'''/, { token: \"string.delimiter\", next: \"@pop\" }],\n      { include: \"@stringContentInterpol\" }\n    ],\n    doubleQuotedString: [\n      [/\"/, { token: \"string.delimiter\", next: \"@pop\" }],\n      { include: \"@stringContentInterpol\" }\n    ],\n    singleQuotedString: [\n      [/'/, { token: \"string.delimiter\", next: \"@pop\" }],\n      { include: \"@stringContentInterpol\" }\n    ],\n    atoms: [\n      [/(:)(@atomName)/, [\"constant.punctuation\", \"constant\"]],\n      [/:\"/, { token: \"constant.delimiter\", next: \"@doubleQuotedStringAtom\" }],\n      [/:'/, { token: \"constant.delimiter\", next: \"@singleQuotedStringAtom\" }]\n    ],\n    doubleQuotedStringAtom: [\n      [/\"/, { token: \"constant.delimiter\", next: \"@pop\" }],\n      { include: \"@stringConstantContentInterpol\" }\n    ],\n    singleQuotedStringAtom: [\n      [/'/, { token: \"constant.delimiter\", next: \"@pop\" }],\n      { include: \"@stringConstantContentInterpol\" }\n    ],\n    sigils: [\n      [/~[a-z]@sigilStartDelimiter/, { token: \"@rematch\", next: \"@sigil.interpol\" }],\n      [/~[A-Z]@sigilStartDelimiter/, { token: \"@rematch\", next: \"@sigil.noInterpol\" }]\n    ],\n    sigil: [\n      [/~([a-zA-Z])\\{/, { token: \"@rematch\", switchTo: \"@sigilStart.$S2.$1.{.}\" }],\n      [/~([a-zA-Z])\\[/, { token: \"@rematch\", switchTo: \"@sigilStart.$S2.$1.[.]\" }],\n      [/~([a-zA-Z])\\(/, { token: \"@rematch\", switchTo: \"@sigilStart.$S2.$1.(.)\" }],\n      [/~([a-zA-Z])\\</, { token: \"@rematch\", switchTo: \"@sigilStart.$S2.$1.<.>\" }],\n      [\n        /~([a-zA-Z])(@sigilSymmetricDelimiter)/,\n        { token: \"@rematch\", switchTo: \"@sigilStart.$S2.$1.$2.$2\" }\n      ]\n    ],\n    \"sigilStart.interpol.s\": [\n      [\n        /~s@sigilStartDelimiter/,\n        {\n          token: \"string.delimiter\",\n          switchTo: \"@sigilContinue.$S2.$S3.$S4.$S5\"\n        }\n      ]\n    ],\n    \"sigilContinue.interpol.s\": [\n      [\n        /(@sigilEndDelimiter)@sigilModifiers/,\n        {\n          cases: {\n            \"$1==$S5\": { token: \"string.delimiter\", next: \"@pop\" },\n            \"@default\": \"string\"\n          }\n        }\n      ],\n      { include: \"@stringContentInterpol\" }\n    ],\n    \"sigilStart.noInterpol.S\": [\n      [\n        /~S@sigilStartDelimiter/,\n        {\n          token: \"string.delimiter\",\n          switchTo: \"@sigilContinue.$S2.$S3.$S4.$S5\"\n        }\n      ]\n    ],\n    \"sigilContinue.noInterpol.S\": [\n      [/(^|[^\\\\])\\\\@sigilEndDelimiter/, \"string\"],\n      [\n        /(@sigilEndDelimiter)@sigilModifiers/,\n        {\n          cases: {\n            \"$1==$S5\": { token: \"string.delimiter\", next: \"@pop\" },\n            \"@default\": \"string\"\n          }\n        }\n      ],\n      { include: \"@stringContent\" }\n    ],\n    \"sigilStart.interpol.r\": [\n      [\n        /~r@sigilStartDelimiter/,\n        {\n          token: \"regexp.delimiter\",\n          switchTo: \"@sigilContinue.$S2.$S3.$S4.$S5\"\n        }\n      ]\n    ],\n    \"sigilContinue.interpol.r\": [\n      [\n        /(@sigilEndDelimiter)@sigilModifiers/,\n        {\n          cases: {\n            \"$1==$S5\": { token: \"regexp.delimiter\", next: \"@pop\" },\n            \"@default\": \"regexp\"\n          }\n        }\n      ],\n      { include: \"@regexpContentInterpol\" }\n    ],\n    \"sigilStart.noInterpol.R\": [\n      [\n        /~R@sigilStartDelimiter/,\n        {\n          token: \"regexp.delimiter\",\n          switchTo: \"@sigilContinue.$S2.$S3.$S4.$S5\"\n        }\n      ]\n    ],\n    \"sigilContinue.noInterpol.R\": [\n      [/(^|[^\\\\])\\\\@sigilEndDelimiter/, \"regexp\"],\n      [\n        /(@sigilEndDelimiter)@sigilModifiers/,\n        {\n          cases: {\n            \"$1==$S5\": { token: \"regexp.delimiter\", next: \"@pop\" },\n            \"@default\": \"regexp\"\n          }\n        }\n      ],\n      { include: \"@regexpContent\" }\n    ],\n    \"sigilStart.interpol\": [\n      [\n        /~([a-zA-Z])@sigilStartDelimiter/,\n        {\n          token: \"sigil.delimiter\",\n          switchTo: \"@sigilContinue.$S2.$S3.$S4.$S5\"\n        }\n      ]\n    ],\n    \"sigilContinue.interpol\": [\n      [\n        /(@sigilEndDelimiter)@sigilModifiers/,\n        {\n          cases: {\n            \"$1==$S5\": { token: \"sigil.delimiter\", next: \"@pop\" },\n            \"@default\": \"sigil\"\n          }\n        }\n      ],\n      { include: \"@sigilContentInterpol\" }\n    ],\n    \"sigilStart.noInterpol\": [\n      [\n        /~([a-zA-Z])@sigilStartDelimiter/,\n        {\n          token: \"sigil.delimiter\",\n          switchTo: \"@sigilContinue.$S2.$S3.$S4.$S5\"\n        }\n      ]\n    ],\n    \"sigilContinue.noInterpol\": [\n      [/(^|[^\\\\])\\\\@sigilEndDelimiter/, \"sigil\"],\n      [\n        /(@sigilEndDelimiter)@sigilModifiers/,\n        {\n          cases: {\n            \"$1==$S5\": { token: \"sigil.delimiter\", next: \"@pop\" },\n            \"@default\": \"sigil\"\n          }\n        }\n      ],\n      { include: \"@sigilContent\" }\n    ],\n    attributes: [\n      [\n        /\\@(module|type)?doc (~[sS])?\"\"\"/,\n        {\n          token: \"comment.block.documentation\",\n          next: \"@doubleQuotedHeredocDocstring\"\n        }\n      ],\n      [\n        /\\@(module|type)?doc (~[sS])?\"/,\n        {\n          token: \"comment.block.documentation\",\n          next: \"@doubleQuotedStringDocstring\"\n        }\n      ],\n      [/\\@(module|type)?doc false/, \"comment.block.documentation\"],\n      [/\\@(@variableName)/, \"variable\"]\n    ],\n    doubleQuotedHeredocDocstring: [\n      [/\"\"\"/, { token: \"comment.block.documentation\", next: \"@pop\" }],\n      { include: \"@docstringContent\" }\n    ],\n    doubleQuotedStringDocstring: [\n      [/\"/, { token: \"comment.block.documentation\", next: \"@pop\" }],\n      { include: \"@docstringContent\" }\n    ],\n    symbols: [\n      [/\\?(\\\\.|[^\\\\\\s])/, \"number.constant\"],\n      [/&\\d+/, \"operator\"],\n      [/<<<|>>>/, \"operator\"],\n      [/[()\\[\\]\\{\\}]|<<|>>/, \"@brackets\"],\n      [/\\.\\.\\./, \"identifier\"],\n      [/=>/, \"punctuation\"],\n      [/@operator/, \"operator\"],\n      [/[:;,.%]/, \"punctuation\"]\n    ],\n    stringContentInterpol: [\n      { include: \"@interpolation\" },\n      { include: \"@escapeChar\" },\n      { include: \"@stringContent\" }\n    ],\n    stringContent: [[/./, \"string\"]],\n    stringConstantContentInterpol: [\n      { include: \"@interpolation\" },\n      { include: \"@escapeChar\" },\n      { include: \"@stringConstantContent\" }\n    ],\n    stringConstantContent: [[/./, \"constant\"]],\n    regexpContentInterpol: [\n      { include: \"@interpolation\" },\n      { include: \"@escapeChar\" },\n      { include: \"@regexpContent\" }\n    ],\n    regexpContent: [\n      [/(\\s)(#)(\\s.*)$/, [\"white\", \"comment.punctuation\", \"comment\"]],\n      [/./, \"regexp\"]\n    ],\n    sigilContentInterpol: [\n      { include: \"@interpolation\" },\n      { include: \"@escapeChar\" },\n      { include: \"@sigilContent\" }\n    ],\n    sigilContent: [[/./, \"sigil\"]],\n    docstringContent: [[/./, \"comment.block.documentation\"]],\n    escapeChar: [[/@escape/, \"constant.character.escape\"]],\n    interpolation: [[/#{/, { token: \"delimiter.bracket.embed\", next: \"@interpolationContinue\" }]],\n    interpolationContinue: [\n      [/}/, { token: \"delimiter.bracket.embed\", next: \"@pop\" }],\n      { include: \"@root\" }\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"],"names":[],"version":3,"file":"elixir.cb058a3a.js.map"}