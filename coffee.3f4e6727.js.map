{"mappings":"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","sources":["node_modules/monaco-editor/esm/vs/basic-languages/coffee/coffee.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.31.0(252e010eb73ddc2fa1a37c1dade7bf35d87106cd)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/coffee/coffee.ts\nvar conf = {\n  wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#%\\^\\&\\*\\(\\)\\=\\$\\-\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\n  comments: {\n    blockComment: [\"###\", \"###\"],\n    lineComment: \"#\"\n  },\n  brackets: [\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n    [\"(\", \")\"]\n  ],\n  autoClosingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" }\n  ],\n  surroundingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" }\n  ],\n  folding: {\n    markers: {\n      start: new RegExp(\"^\\\\s*#region\\\\b\"),\n      end: new RegExp(\"^\\\\s*#endregion\\\\b\")\n    }\n  }\n};\nvar language = {\n  defaultToken: \"\",\n  ignoreCase: true,\n  tokenPostfix: \".coffee\",\n  brackets: [\n    { open: \"{\", close: \"}\", token: \"delimiter.curly\" },\n    { open: \"[\", close: \"]\", token: \"delimiter.square\" },\n    { open: \"(\", close: \")\", token: \"delimiter.parenthesis\" }\n  ],\n  regEx: /\\/(?!\\/\\/)(?:[^\\/\\\\]|\\\\.)*\\/[igm]*/,\n  keywords: [\n    \"and\",\n    \"or\",\n    \"is\",\n    \"isnt\",\n    \"not\",\n    \"on\",\n    \"yes\",\n    \"@\",\n    \"no\",\n    \"off\",\n    \"true\",\n    \"false\",\n    \"null\",\n    \"this\",\n    \"new\",\n    \"delete\",\n    \"typeof\",\n    \"in\",\n    \"instanceof\",\n    \"return\",\n    \"throw\",\n    \"break\",\n    \"continue\",\n    \"debugger\",\n    \"if\",\n    \"else\",\n    \"switch\",\n    \"for\",\n    \"while\",\n    \"do\",\n    \"try\",\n    \"catch\",\n    \"finally\",\n    \"class\",\n    \"extends\",\n    \"super\",\n    \"undefined\",\n    \"then\",\n    \"unless\",\n    \"until\",\n    \"loop\",\n    \"of\",\n    \"by\",\n    \"when\"\n  ],\n  symbols: /[=><!~?&%|+\\-*\\/\\^\\.,\\:]+/,\n  escapes: /\\\\(?:[abfnrtv\\\\\"'$]|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  tokenizer: {\n    root: [\n      [/\\@[a-zA-Z_]\\w*/, \"variable.predefined\"],\n      [\n        /[a-zA-Z_]\\w*/,\n        {\n          cases: {\n            this: \"variable.predefined\",\n            \"@keywords\": { token: \"keyword.$0\" },\n            \"@default\": \"\"\n          }\n        }\n      ],\n      [/[ \\t\\r\\n]+/, \"\"],\n      [/###/, \"comment\", \"@comment\"],\n      [/#.*$/, \"comment\"],\n      [\"///\", { token: \"regexp\", next: \"@hereregexp\" }],\n      [/^(\\s*)(@regEx)/, [\"\", \"regexp\"]],\n      [/(\\()(\\s*)(@regEx)/, [\"@brackets\", \"\", \"regexp\"]],\n      [/(\\,)(\\s*)(@regEx)/, [\"delimiter\", \"\", \"regexp\"]],\n      [/(\\=)(\\s*)(@regEx)/, [\"delimiter\", \"\", \"regexp\"]],\n      [/(\\:)(\\s*)(@regEx)/, [\"delimiter\", \"\", \"regexp\"]],\n      [/(\\[)(\\s*)(@regEx)/, [\"@brackets\", \"\", \"regexp\"]],\n      [/(\\!)(\\s*)(@regEx)/, [\"delimiter\", \"\", \"regexp\"]],\n      [/(\\&)(\\s*)(@regEx)/, [\"delimiter\", \"\", \"regexp\"]],\n      [/(\\|)(\\s*)(@regEx)/, [\"delimiter\", \"\", \"regexp\"]],\n      [/(\\?)(\\s*)(@regEx)/, [\"delimiter\", \"\", \"regexp\"]],\n      [/(\\{)(\\s*)(@regEx)/, [\"@brackets\", \"\", \"regexp\"]],\n      [/(\\;)(\\s*)(@regEx)/, [\"\", \"\", \"regexp\"]],\n      [\n        /}/,\n        {\n          cases: {\n            \"$S2==interpolatedstring\": {\n              token: \"string\",\n              next: \"@pop\"\n            },\n            \"@default\": \"@brackets\"\n          }\n        }\n      ],\n      [/[{}()\\[\\]]/, \"@brackets\"],\n      [/@symbols/, \"delimiter\"],\n      [/\\d+[eE]([\\-+]?\\d+)?/, \"number.float\"],\n      [/\\d+\\.\\d+([eE][\\-+]?\\d+)?/, \"number.float\"],\n      [/0[xX][0-9a-fA-F]+/, \"number.hex\"],\n      [/0[0-7]+(?!\\d)/, \"number.octal\"],\n      [/\\d+/, \"number\"],\n      [/[,.]/, \"delimiter\"],\n      [/\"\"\"/, \"string\", '@herestring.\"\"\"'],\n      [/'''/, \"string\", \"@herestring.'''\"],\n      [\n        /\"/,\n        {\n          cases: {\n            \"@eos\": \"string\",\n            \"@default\": { token: \"string\", next: '@string.\"' }\n          }\n        }\n      ],\n      [\n        /'/,\n        {\n          cases: {\n            \"@eos\": \"string\",\n            \"@default\": { token: \"string\", next: \"@string.'\" }\n          }\n        }\n      ]\n    ],\n    string: [\n      [/[^\"'\\#\\\\]+/, \"string\"],\n      [/@escapes/, \"string.escape\"],\n      [/\\./, \"string.escape.invalid\"],\n      [/\\./, \"string.escape.invalid\"],\n      [\n        /#{/,\n        {\n          cases: {\n            '$S2==\"': {\n              token: \"string\",\n              next: \"root.interpolatedstring\"\n            },\n            \"@default\": \"string\"\n          }\n        }\n      ],\n      [\n        /[\"']/,\n        {\n          cases: {\n            \"$#==$S2\": { token: \"string\", next: \"@pop\" },\n            \"@default\": \"string\"\n          }\n        }\n      ],\n      [/#/, \"string\"]\n    ],\n    herestring: [\n      [\n        /(\"\"\"|''')/,\n        {\n          cases: {\n            \"$1==$S2\": { token: \"string\", next: \"@pop\" },\n            \"@default\": \"string\"\n          }\n        }\n      ],\n      [/[^#\\\\'\"]+/, \"string\"],\n      [/['\"]+/, \"string\"],\n      [/@escapes/, \"string.escape\"],\n      [/\\./, \"string.escape.invalid\"],\n      [/#{/, { token: \"string.quote\", next: \"root.interpolatedstring\" }],\n      [/#/, \"string\"]\n    ],\n    comment: [\n      [/[^#]+/, \"comment\"],\n      [/###/, \"comment\", \"@pop\"],\n      [/#/, \"comment\"]\n    ],\n    hereregexp: [\n      [/[^\\\\\\/#]+/, \"regexp\"],\n      [/\\\\./, \"regexp\"],\n      [/#.*$/, \"comment\"],\n      [\"///[igm]*\", { token: \"regexp\", next: \"@pop\" }],\n      [/\\//, \"regexp\"]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"],"names":[],"version":3,"file":"coffee.3f4e6727.js.map"}