domain:
  name: Dropbox model
  description: Dropbox is a cloud storage service which allows users to store their data on remote servers. The remote servers store files durably and securely, and these files are accessible anywhere with an Internet connection.
  actors:
    user:
      name: Customer
      relations:
        - upload/receive files - client
  systems:
    dropbox:
      name: Dropbox
      description: Upload/download, update, and delete the files; File versioning (History of updates); File and folder sync
      containers:
        block-service:
          name: Block service
          description: Interacts with block storage for uploading and downloading of files. Clients connect with Block Service to upload or download file chunks.
          relations:
            - update metadata information - metadata-service
            - store data - storage
        cache:
          name: Cache
          description: In-memory cache is in front of Metadata DB. Frequently queries data is cached in this cache thereby eliminating the need of database query.
        client:
          name: Client Desktop
          description: Application installed on user machine
          relations:
            - synchronize data - load-balancer
          components:
            chunker:
              name: Chunker
              description: Breaks the files into multiple small pieces called chunks and uploads them to the cloud storage with a unique id or hash of these chunks
            indexer:
              name: Indexer
              description: Responsible for updating the internal database when it receives the notification from the watcher (for any action performed in folders/files)
            internal-db:
              name: Internal DB
              description: Stores all the files and chunks of information, their versions, and their location in the file system
            watcher:
              name: Watcher
              description: Responsible for monitoring the sync folder for all the activities performed by the user such as creating, updating, or deleting files/folders
        load-balancer:
          name: Load balancer
          description: Load balancing for all services behind it
          relations:
            - get/upload data - block-service
            - get/upload metadata - metadata-service
            - manage users - user-service
            - manage subscriptions - subscription-service
        metadata-db:
          name: Metadata DB
          description: Contains the metadata of file like name, type (file or folder), sharing permissions, chunks information etc.
        metadata-service:
          name: Metadata service
          description: Responsible for synchronizing the file metadata from client to server and figuring out the change set for different clients and broadcast it to them using Notification Service
          relations:
            - cache data - cache
            - store meta information - metadata-db
            - notify about data change - queue
        notification-service:
          name: Notification service
          description: Broadcasts the file changes to connected clients making sure any change to file is reflected all watching clients instantly.
          relations:
            - listen data changes - queue
            - push data change notification - client
        queue:
          name: Notification queue
          description: Provides a asynchronous medium of communication between Meta Service and Notification Service and thus Meta Service need not to wait till notification is sent to clients.
        storage:
          name: Storage
          description: Cloud storage service like Amazon S3 to store the chunks of the files uploaded by the user.
        subscription-db:
          name: Subscription DB
        subscription-service:
          name: Subscription service
          description: Manage the subscription of the users
          relations:
            - get/update subscription data - subscription-db
        user-db:
          name: User DB
        user-service:
          name: User service
          description: Responsible for user authentication and profiles
          relations:
            - get/update user information - user-db
views:
  view:
    elements:
      block-service:
        x: 370
        y: 425
        relations:
          update metadata information - metadata-service: []
          store data - storage: []
      cache:
        x: 630
        y: 425
      client:
        x: 300
        y: 225
        relations:
          synchronize data - load-balancer: []
      load-balancer:
        x: 300
        y: 325
        relations:
          get/upload data - block-service: []
          get/upload metadata - metadata-service: []
          manage subscriptions - subscription-service: []
          manage users - user-service: []
      metadata-db:
        x: 500
        y: 525
      metadata-service:
        x: 500
        y: 425
        relations:
          cache data - cache: []
          store meta information - metadata-db: []
          notify about data change - queue: []
      notification-service:
        x: 500
        y: 225
        relations:
          push data change notification - client: []
          listen data changes - queue: []
      queue:
        x: 500
        y: 325
      storage:
        x: 370
        y: 525
      subscription-db:
        x: 230
        y: 525
      subscription-service:
        x: 230
        y: 425
        relations:
          get/update subscription data - subscription-db: []
      user:
        x: 300
        y: 125
        relations:
          upload/receive files - client: []
      user-db:
        x: 100
        y: 525
      user-service:
        x: 100
        y: 425
        relations:
          get/update user information - user-db: []
