{"mappings":"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","sources":["node_modules/monaco-editor/esm/vs/basic-languages/go/go.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.31.0(252e010eb73ddc2fa1a37c1dade7bf35d87106cd)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/go/go.ts\nvar conf = {\n  comments: {\n    lineComment: \"//\",\n    blockComment: [\"/*\", \"*/\"]\n  },\n  brackets: [\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n    [\"(\", \")\"]\n  ],\n  autoClosingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: \"`\", close: \"`\", notIn: [\"string\"] },\n    { open: '\"', close: '\"', notIn: [\"string\"] },\n    { open: \"'\", close: \"'\", notIn: [\"string\", \"comment\"] }\n  ],\n  surroundingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: \"`\", close: \"`\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" }\n  ]\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".go\",\n  keywords: [\n    \"break\",\n    \"case\",\n    \"chan\",\n    \"const\",\n    \"continue\",\n    \"default\",\n    \"defer\",\n    \"else\",\n    \"fallthrough\",\n    \"for\",\n    \"func\",\n    \"go\",\n    \"goto\",\n    \"if\",\n    \"import\",\n    \"interface\",\n    \"map\",\n    \"package\",\n    \"range\",\n    \"return\",\n    \"select\",\n    \"struct\",\n    \"switch\",\n    \"type\",\n    \"var\",\n    \"bool\",\n    \"true\",\n    \"false\",\n    \"uint8\",\n    \"uint16\",\n    \"uint32\",\n    \"uint64\",\n    \"int8\",\n    \"int16\",\n    \"int32\",\n    \"int64\",\n    \"float32\",\n    \"float64\",\n    \"complex64\",\n    \"complex128\",\n    \"byte\",\n    \"rune\",\n    \"uint\",\n    \"int\",\n    \"uintptr\",\n    \"string\",\n    \"nil\"\n  ],\n  operators: [\n    \"+\",\n    \"-\",\n    \"*\",\n    \"/\",\n    \"%\",\n    \"&\",\n    \"|\",\n    \"^\",\n    \"<<\",\n    \">>\",\n    \"&^\",\n    \"+=\",\n    \"-=\",\n    \"*=\",\n    \"/=\",\n    \"%=\",\n    \"&=\",\n    \"|=\",\n    \"^=\",\n    \"<<=\",\n    \">>=\",\n    \"&^=\",\n    \"&&\",\n    \"||\",\n    \"<-\",\n    \"++\",\n    \"--\",\n    \"==\",\n    \"<\",\n    \">\",\n    \"=\",\n    \"!\",\n    \"!=\",\n    \"<=\",\n    \">=\",\n    \":=\",\n    \"...\",\n    \"(\",\n    \")\",\n    \"\",\n    \"]\",\n    \"{\",\n    \"}\",\n    \",\",\n    \";\",\n    \".\",\n    \":\"\n  ],\n  symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\n  escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  tokenizer: {\n    root: [\n      [\n        /[a-zA-Z_]\\w*/,\n        {\n          cases: {\n            \"@keywords\": { token: \"keyword.$0\" },\n            \"@default\": \"identifier\"\n          }\n        }\n      ],\n      { include: \"@whitespace\" },\n      [/\\[\\[.*\\]\\]/, \"annotation\"],\n      [/^\\s*#\\w+/, \"keyword\"],\n      [/[{}()\\[\\]]/, \"@brackets\"],\n      [/[<>](?!@symbols)/, \"@brackets\"],\n      [\n        /@symbols/,\n        {\n          cases: {\n            \"@operators\": \"delimiter\",\n            \"@default\": \"\"\n          }\n        }\n      ],\n      [/\\d*\\d+[eE]([\\-+]?\\d+)?/, \"number.float\"],\n      [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, \"number.float\"],\n      [/0[xX][0-9a-fA-F']*[0-9a-fA-F]/, \"number.hex\"],\n      [/0[0-7']*[0-7]/, \"number.octal\"],\n      [/0[bB][0-1']*[0-1]/, \"number.binary\"],\n      [/\\d[\\d']*/, \"number\"],\n      [/\\d/, \"number\"],\n      [/[;,.]/, \"delimiter\"],\n      [/\"([^\"\\\\]|\\\\.)*$/, \"string.invalid\"],\n      [/\"/, \"string\", \"@string\"],\n      [/`/, \"string\", \"@rawstring\"],\n      [/'[^\\\\']'/, \"string\"],\n      [/(')(@escapes)(')/, [\"string\", \"string.escape\", \"string\"]],\n      [/'/, \"string.invalid\"]\n    ],\n    whitespace: [\n      [/[ \\t\\r\\n]+/, \"\"],\n      [/\\/\\*\\*(?!\\/)/, \"comment.doc\", \"@doccomment\"],\n      [/\\/\\*/, \"comment\", \"@comment\"],\n      [/\\/\\/.*$/, \"comment\"]\n    ],\n    comment: [\n      [/[^\\/*]+/, \"comment\"],\n      [/\\*\\//, \"comment\", \"@pop\"],\n      [/[\\/*]/, \"comment\"]\n    ],\n    doccomment: [\n      [/[^\\/*]+/, \"comment.doc\"],\n      [/\\/\\*/, \"comment.doc.invalid\"],\n      [/\\*\\//, \"comment.doc\", \"@pop\"],\n      [/[\\/*]/, \"comment.doc\"]\n    ],\n    string: [\n      [/[^\\\\\"]+/, \"string\"],\n      [/@escapes/, \"string.escape\"],\n      [/\\\\./, \"string.escape.invalid\"],\n      [/\"/, \"string\", \"@pop\"]\n    ],\n    rawstring: [\n      [/[^\\`]/, \"string\"],\n      [/`/, \"string\", \"@pop\"]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"],"names":[],"version":3,"file":"go.74fc4b93.js.map"}