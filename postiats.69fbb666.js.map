{"mappings":"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","sources":["node_modules/monaco-editor/esm/vs/basic-languages/postiats/postiats.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.31.0(252e010eb73ddc2fa1a37c1dade7bf35d87106cd)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/postiats/postiats.ts\nvar conf = {\n  comments: {\n    lineComment: \"//\",\n    blockComment: [\"(*\", \"*)\"]\n  },\n  brackets: [\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n    [\"(\", \")\"],\n    [\"<\", \">\"]\n  ],\n  autoClosingPairs: [\n    { open: '\"', close: '\"', notIn: [\"string\", \"comment\"] },\n    { open: \"{\", close: \"}\", notIn: [\"string\", \"comment\"] },\n    { open: \"[\", close: \"]\", notIn: [\"string\", \"comment\"] },\n    { open: \"(\", close: \")\", notIn: [\"string\", \"comment\"] }\n  ]\n};\nvar language = {\n  tokenPostfix: \".pats\",\n  defaultToken: \"invalid\",\n  keywords: [\n    \"abstype\",\n    \"abst0ype\",\n    \"absprop\",\n    \"absview\",\n    \"absvtype\",\n    \"absviewtype\",\n    \"absvt0ype\",\n    \"absviewt0ype\",\n    \"as\",\n    \"and\",\n    \"assume\",\n    \"begin\",\n    \"classdec\",\n    \"datasort\",\n    \"datatype\",\n    \"dataprop\",\n    \"dataview\",\n    \"datavtype\",\n    \"dataviewtype\",\n    \"do\",\n    \"end\",\n    \"extern\",\n    \"extype\",\n    \"extvar\",\n    \"exception\",\n    \"fn\",\n    \"fnx\",\n    \"fun\",\n    \"prfn\",\n    \"prfun\",\n    \"praxi\",\n    \"castfn\",\n    \"if\",\n    \"then\",\n    \"else\",\n    \"ifcase\",\n    \"in\",\n    \"infix\",\n    \"infixl\",\n    \"infixr\",\n    \"prefix\",\n    \"postfix\",\n    \"implmnt\",\n    \"implement\",\n    \"primplmnt\",\n    \"primplement\",\n    \"import\",\n    \"let\",\n    \"local\",\n    \"macdef\",\n    \"macrodef\",\n    \"nonfix\",\n    \"symelim\",\n    \"symintr\",\n    \"overload\",\n    \"of\",\n    \"op\",\n    \"rec\",\n    \"sif\",\n    \"scase\",\n    \"sortdef\",\n    \"sta\",\n    \"stacst\",\n    \"stadef\",\n    \"static\",\n    \"staload\",\n    \"dynload\",\n    \"try\",\n    \"tkindef\",\n    \"typedef\",\n    \"propdef\",\n    \"viewdef\",\n    \"vtypedef\",\n    \"viewtypedef\",\n    \"prval\",\n    \"var\",\n    \"prvar\",\n    \"when\",\n    \"where\",\n    \"with\",\n    \"withtype\",\n    \"withprop\",\n    \"withview\",\n    \"withvtype\",\n    \"withviewtype\"\n  ],\n  keywords_dlr: [\n    \"$delay\",\n    \"$ldelay\",\n    \"$arrpsz\",\n    \"$arrptrsize\",\n    \"$d2ctype\",\n    \"$effmask\",\n    \"$effmask_ntm\",\n    \"$effmask_exn\",\n    \"$effmask_ref\",\n    \"$effmask_wrt\",\n    \"$effmask_all\",\n    \"$extern\",\n    \"$extkind\",\n    \"$extype\",\n    \"$extype_struct\",\n    \"$extval\",\n    \"$extfcall\",\n    \"$extmcall\",\n    \"$literal\",\n    \"$myfilename\",\n    \"$mylocation\",\n    \"$myfunction\",\n    \"$lst\",\n    \"$lst_t\",\n    \"$lst_vt\",\n    \"$list\",\n    \"$list_t\",\n    \"$list_vt\",\n    \"$rec\",\n    \"$rec_t\",\n    \"$rec_vt\",\n    \"$record\",\n    \"$record_t\",\n    \"$record_vt\",\n    \"$tup\",\n    \"$tup_t\",\n    \"$tup_vt\",\n    \"$tuple\",\n    \"$tuple_t\",\n    \"$tuple_vt\",\n    \"$break\",\n    \"$continue\",\n    \"$raise\",\n    \"$showtype\",\n    \"$vcopyenv_v\",\n    \"$vcopyenv_vt\",\n    \"$tempenver\",\n    \"$solver_assert\",\n    \"$solver_verify\"\n  ],\n  keywords_srp: [\n    \"#if\",\n    \"#ifdef\",\n    \"#ifndef\",\n    \"#then\",\n    \"#elif\",\n    \"#elifdef\",\n    \"#elifndef\",\n    \"#else\",\n    \"#endif\",\n    \"#error\",\n    \"#prerr\",\n    \"#print\",\n    \"#assert\",\n    \"#undef\",\n    \"#define\",\n    \"#include\",\n    \"#require\",\n    \"#pragma\",\n    \"#codegen2\",\n    \"#codegen3\"\n  ],\n  irregular_keyword_list: [\n    \"val+\",\n    \"val-\",\n    \"val\",\n    \"case+\",\n    \"case-\",\n    \"case\",\n    \"addr@\",\n    \"addr\",\n    \"fold@\",\n    \"free@\",\n    \"fix@\",\n    \"fix\",\n    \"lam@\",\n    \"lam\",\n    \"llam@\",\n    \"llam\",\n    \"viewt@ype+\",\n    \"viewt@ype-\",\n    \"viewt@ype\",\n    \"viewtype+\",\n    \"viewtype-\",\n    \"viewtype\",\n    \"view+\",\n    \"view-\",\n    \"view@\",\n    \"view\",\n    \"type+\",\n    \"type-\",\n    \"type\",\n    \"vtype+\",\n    \"vtype-\",\n    \"vtype\",\n    \"vt@ype+\",\n    \"vt@ype-\",\n    \"vt@ype\",\n    \"viewt@ype+\",\n    \"viewt@ype-\",\n    \"viewt@ype\",\n    \"viewtype+\",\n    \"viewtype-\",\n    \"viewtype\",\n    \"prop+\",\n    \"prop-\",\n    \"prop\",\n    \"type+\",\n    \"type-\",\n    \"type\",\n    \"t@ype\",\n    \"t@ype+\",\n    \"t@ype-\",\n    \"abst@ype\",\n    \"abstype\",\n    \"absviewt@ype\",\n    \"absvt@ype\",\n    \"for*\",\n    \"for\",\n    \"while*\",\n    \"while\"\n  ],\n  keywords_types: [\n    \"bool\",\n    \"double\",\n    \"byte\",\n    \"int\",\n    \"short\",\n    \"char\",\n    \"void\",\n    \"unit\",\n    \"long\",\n    \"float\",\n    \"string\",\n    \"strptr\"\n  ],\n  keywords_effects: [\n    \"0\",\n    \"fun\",\n    \"clo\",\n    \"prf\",\n    \"funclo\",\n    \"cloptr\",\n    \"cloref\",\n    \"ref\",\n    \"ntm\",\n    \"1\"\n  ],\n  operators: [\n    \"@\",\n    \"!\",\n    \"|\",\n    \"`\",\n    \":\",\n    \"$\",\n    \".\",\n    \"=\",\n    \"#\",\n    \"~\",\n    \"..\",\n    \"...\",\n    \"=>\",\n    \"=<>\",\n    \"=/=>\",\n    \"=>>\",\n    \"=/=>>\",\n    \"<\",\n    \">\",\n    \"><\",\n    \".<\",\n    \">.\",\n    \".<>.\",\n    \"->\",\n    \"-<>\"\n  ],\n  brackets: [\n    { open: \",(\", close: \")\", token: \"delimiter.parenthesis\" },\n    { open: \"`(\", close: \")\", token: \"delimiter.parenthesis\" },\n    { open: \"%(\", close: \")\", token: \"delimiter.parenthesis\" },\n    { open: \"'(\", close: \")\", token: \"delimiter.parenthesis\" },\n    { open: \"'{\", close: \"}\", token: \"delimiter.parenthesis\" },\n    { open: \"@(\", close: \")\", token: \"delimiter.parenthesis\" },\n    { open: \"@{\", close: \"}\", token: \"delimiter.brace\" },\n    { open: \"@[\", close: \"]\", token: \"delimiter.square\" },\n    { open: \"#[\", close: \"]\", token: \"delimiter.square\" },\n    { open: \"{\", close: \"}\", token: \"delimiter.curly\" },\n    { open: \"[\", close: \"]\", token: \"delimiter.square\" },\n    { open: \"(\", close: \")\", token: \"delimiter.parenthesis\" },\n    { open: \"<\", close: \">\", token: \"delimiter.angle\" }\n  ],\n  symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\n  IDENTFST: /[a-zA-Z_]/,\n  IDENTRST: /[a-zA-Z0-9_'$]/,\n  symbolic: /[%&+-./:=@~`^|*!$#?<>]/,\n  digit: /[0-9]/,\n  digitseq0: /@digit*/,\n  xdigit: /[0-9A-Za-z]/,\n  xdigitseq0: /@xdigit*/,\n  INTSP: /[lLuU]/,\n  FLOATSP: /[fFlL]/,\n  fexponent: /[eE][+-]?[0-9]+/,\n  fexponent_bin: /[pP][+-]?[0-9]+/,\n  deciexp: /\\.[0-9]*@fexponent?/,\n  hexiexp: /\\.[0-9a-zA-Z]*@fexponent_bin?/,\n  irregular_keywords: /val[+-]?|case[+-]?|addr\\@?|fold\\@|free\\@|fix\\@?|lam\\@?|llam\\@?|prop[+-]?|type[+-]?|view[+-@]?|viewt@?ype[+-]?|t@?ype[+-]?|v(iew)?t@?ype[+-]?|abst@?ype|absv(iew)?t@?ype|for\\*?|while\\*?/,\n  ESCHAR: /[ntvbrfa\\\\\\?'\"\\(\\[\\{]/,\n  start: \"root\",\n  tokenizer: {\n    root: [\n      { regex: /[ \\t\\r\\n]+/, action: { token: \"\" } },\n      { regex: /\\(\\*\\)/, action: { token: \"invalid\" } },\n      {\n        regex: /\\(\\*/,\n        action: { token: \"comment\", next: \"lexing_COMMENT_block_ml\" }\n      },\n      {\n        regex: /\\(/,\n        action: \"@brackets\"\n      },\n      {\n        regex: /\\)/,\n        action: \"@brackets\"\n      },\n      {\n        regex: /\\[/,\n        action: \"@brackets\"\n      },\n      {\n        regex: /\\]/,\n        action: \"@brackets\"\n      },\n      {\n        regex: /\\{/,\n        action: \"@brackets\"\n      },\n      {\n        regex: /\\}/,\n        action: \"@brackets\"\n      },\n      {\n        regex: /,\\(/,\n        action: \"@brackets\"\n      },\n      { regex: /,/, action: { token: \"delimiter.comma\" } },\n      { regex: /;/, action: { token: \"delimiter.semicolon\" } },\n      {\n        regex: /@\\(/,\n        action: \"@brackets\"\n      },\n      {\n        regex: /@\\[/,\n        action: \"@brackets\"\n      },\n      {\n        regex: /@\\{/,\n        action: \"@brackets\"\n      },\n      {\n        regex: /:</,\n        action: { token: \"keyword\", next: \"@lexing_EFFECT_commaseq0\" }\n      },\n      { regex: /\\.@symbolic+/, action: { token: \"identifier.sym\" } },\n      {\n        regex: /\\.@digit*@fexponent@FLOATSP*/,\n        action: { token: \"number.float\" }\n      },\n      { regex: /\\.@digit+/, action: { token: \"number.float\" } },\n      {\n        regex: /\\$@IDENTFST@IDENTRST*/,\n        action: {\n          cases: {\n            \"@keywords_dlr\": { token: \"keyword.dlr\" },\n            \"@default\": { token: \"namespace\" }\n          }\n        }\n      },\n      {\n        regex: /\\#@IDENTFST@IDENTRST*/,\n        action: {\n          cases: {\n            \"@keywords_srp\": { token: \"keyword.srp\" },\n            \"@default\": { token: \"identifier\" }\n          }\n        }\n      },\n      { regex: /%\\(/, action: { token: \"delimiter.parenthesis\" } },\n      {\n        regex: /^%{(#|\\^|\\$)?/,\n        action: {\n          token: \"keyword\",\n          next: \"@lexing_EXTCODE\",\n          nextEmbedded: \"text/javascript\"\n        }\n      },\n      { regex: /^%}/, action: { token: \"keyword\" } },\n      { regex: /'\\(/, action: { token: \"delimiter.parenthesis\" } },\n      { regex: /'\\[/, action: { token: \"delimiter.bracket\" } },\n      { regex: /'\\{/, action: { token: \"delimiter.brace\" } },\n      [/(')(\\\\@ESCHAR|\\\\[xX]@xdigit+|\\\\@digit+)(')/, [\"string\", \"string.escape\", \"string\"]],\n      [/'[^\\\\']'/, \"string\"],\n      [/\"/, \"string.quote\", \"@lexing_DQUOTE\"],\n      {\n        regex: /`\\(/,\n        action: \"@brackets\"\n      },\n      { regex: /\\\\/, action: { token: \"punctuation\" } },\n      {\n        regex: /@irregular_keywords(?!@IDENTRST)/,\n        action: { token: \"keyword\" }\n      },\n      {\n        regex: /@IDENTFST@IDENTRST*[<!\\[]?/,\n        action: {\n          cases: {\n            \"@keywords\": { token: \"keyword\" },\n            \"@keywords_types\": { token: \"type\" },\n            \"@default\": { token: \"identifier\" }\n          }\n        }\n      },\n      {\n        regex: /\\/\\/\\/\\//,\n        action: { token: \"comment\", next: \"@lexing_COMMENT_rest\" }\n      },\n      { regex: /\\/\\/.*$/, action: { token: \"comment\" } },\n      {\n        regex: /\\/\\*/,\n        action: { token: \"comment\", next: \"@lexing_COMMENT_block_c\" }\n      },\n      {\n        regex: /-<|=</,\n        action: { token: \"keyword\", next: \"@lexing_EFFECT_commaseq0\" }\n      },\n      {\n        regex: /@symbolic+/,\n        action: {\n          cases: {\n            \"@operators\": \"keyword\",\n            \"@default\": \"operator\"\n          }\n        }\n      },\n      {\n        regex: /0[xX]@xdigit+(@hexiexp|@fexponent_bin)@FLOATSP*/,\n        action: { token: \"number.float\" }\n      },\n      { regex: /0[xX]@xdigit+@INTSP*/, action: { token: \"number.hex\" } },\n      {\n        regex: /0[0-7]+(?![0-9])@INTSP*/,\n        action: { token: \"number.octal\" }\n      },\n      {\n        regex: /@digit+(@fexponent|@deciexp)@FLOATSP*/,\n        action: { token: \"number.float\" }\n      },\n      {\n        regex: /@digit@digitseq0@INTSP*/,\n        action: { token: \"number.decimal\" }\n      },\n      { regex: /@digit+@INTSP*/, action: { token: \"number\" } }\n    ],\n    lexing_COMMENT_block_ml: [\n      [/[^\\(\\*]+/, \"comment\"],\n      [/\\(\\*/, \"comment\", \"@push\"],\n      [/\\(\\*/, \"comment.invalid\"],\n      [/\\*\\)/, \"comment\", \"@pop\"],\n      [/\\*/, \"comment\"]\n    ],\n    lexing_COMMENT_block_c: [\n      [/[^\\/*]+/, \"comment\"],\n      [/\\*\\//, \"comment\", \"@pop\"],\n      [/[\\/*]/, \"comment\"]\n    ],\n    lexing_COMMENT_rest: [\n      [/$/, \"comment\", \"@pop\"],\n      [/.*/, \"comment\"]\n    ],\n    lexing_EFFECT_commaseq0: [\n      {\n        regex: /@IDENTFST@IDENTRST+|@digit+/,\n        action: {\n          cases: {\n            \"@keywords_effects\": { token: \"type.effect\" },\n            \"@default\": { token: \"identifier\" }\n          }\n        }\n      },\n      { regex: /,/, action: { token: \"punctuation\" } },\n      { regex: />/, action: { token: \"@rematch\", next: \"@pop\" } }\n    ],\n    lexing_EXTCODE: [\n      {\n        regex: /^%}/,\n        action: {\n          token: \"@rematch\",\n          next: \"@pop\",\n          nextEmbedded: \"@pop\"\n        }\n      },\n      { regex: /[^%]+/, action: \"\" }\n    ],\n    lexing_DQUOTE: [\n      { regex: /\"/, action: { token: \"string.quote\", next: \"@pop\" } },\n      {\n        regex: /(\\{\\$)(@IDENTFST@IDENTRST*)(\\})/,\n        action: [{ token: \"string.escape\" }, { token: \"identifier\" }, { token: \"string.escape\" }]\n      },\n      { regex: /\\\\$/, action: { token: \"string.escape\" } },\n      {\n        regex: /\\\\(@ESCHAR|[xX]@xdigit+|@digit+)/,\n        action: { token: \"string.escape\" }\n      },\n      { regex: /[^\\\\\"]+/, action: { token: \"string\" } }\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"],"names":[],"version":3,"file":"postiats.69fbb666.js.map"}